indexing
	description: " Help file: "
	Note: "Automatically generated by the EiffelCOM Wizard."

class
	CEIFFEL_COMPILER_PROXY

inherit
	IEIFFEL_COMPILER_INTERFACE

	ECOM_QUERIABLE

creation
	make_from_other,
	make_from_pointer

feature {NONE}  -- Initialization

	make_from_pointer (cpp_obj: POINTER) is
			-- Make from pointer
		do
			initializer := ccom_create_ceiffel_compiler_coclass_from_pointer(cpp_obj)
			item := ccom_item (initializer)
		end

feature -- Access

	is_successful: BOOLEAN is
			-- Was last compilation successful?
		do
			Result := ccom_is_successful (initializer)
		end

	freezing_occurred: BOOLEAN is
			-- Did last compile warrant a call to finish_freezing?
		do
			Result := ccom_freezing_occurred (initializer)
		end

	compiler_version: STRING is
			-- Compiler version.
		do
			Result := ccom_compiler_version (initializer)
		end

	ise_eiffel: STRING is
			-- Return ISE_EIFFEL environment var.
		do
			Result := ccom_ise_eiffel (initializer)
		end

	freeze_command_name: STRING is
			-- Eiffel Freeze command name
		do
			Result := ccom_freeze_command_name (initializer)
		end

	freeze_command_arguments: STRING is
			-- Eiffel Freeze command arguments
		do
			Result := ccom_freeze_command_arguments (initializer)
		end

	has_signable_generation: BOOLEAN is
			-- Is the compiler a trial version.
		do
			Result := ccom_has_signable_generation (initializer)
		end

	call_back_on_ieiffel_compiler_events_enabled: BOOLEAN
			-- Is call back enabled?

feature -- Basic Operations

	compile is
			-- Compile.
		do
			ccom_compile (initializer)
		end

	finalize is
			-- Finalize.
		do
			ccom_finalize (initializer)
		end

	precompile is
			-- Precompile.
		do
			ccom_precompile (initializer)
		end

	generate_msil_keyfile (filename: STRING) is
			-- Generate a cyrptographic key filename.
			-- `filename' [in].  
		do
			ccom_generate_msil_keyfile (initializer, filename)
		end

	remove_file_locks is
			-- Remove file locks
		do
			ccom_remove_file_locks (initializer)
		end

	enable_call_back_on_ieiffel_compiler_events (some_events: IEIFFEL_COMPILER_EVENTS_IMPL_STUB) is
			-- Enable call back.
		require
			disabled: not call_back_on_ieiffel_compiler_events_enabled
			non_void_events: some_events /= Void
		do
			if (some_events.item = default_pointer) then
				some_events.create_item
			end
			ccom_enable_call_back_on_ieiffel_compiler_events (initializer, some_events.item)
			call_back_on_ieiffel_compiler_events_enabled := True
		ensure
			enabled: call_back_on_ieiffel_compiler_events_enabled
		end

	disable_call_back_on_ieiffel_compiler_events is
			-- Disable call back.
		require
			enabled: call_back_on_ieiffel_compiler_events_enabled
		do
			ccom_disable_call_back_on_ieiffel_compiler_events (initializer)
			call_back_on_ieiffel_compiler_events_enabled := False
		ensure
			disabled: not call_back_on_ieiffel_compiler_events_enabled
		end

feature {NONE}  -- Implementation

	delete_wrapper is
			-- Delete wrapper
		do
			ccom_delete_ceiffel_compiler_coclass(initializer)
		end

feature {NONE}  -- Externals

	ccom_compile (cpp_obj: POINTER) is
			-- Compile.
		external
			"C++ [ecom_eiffel_compiler::CEiffelCompiler %"ecom_eiffel_compiler_CEiffelCompiler.h%"]()"
		end

	ccom_finalize (cpp_obj: POINTER) is
			-- Finalize.
		external
			"C++ [ecom_eiffel_compiler::CEiffelCompiler %"ecom_eiffel_compiler_CEiffelCompiler.h%"]()"
		end

	ccom_precompile (cpp_obj: POINTER) is
			-- Precompile.
		external
			"C++ [ecom_eiffel_compiler::CEiffelCompiler %"ecom_eiffel_compiler_CEiffelCompiler.h%"]()"
		end

	ccom_is_successful (cpp_obj: POINTER): BOOLEAN is
			-- Was last compilation successful?
		external
			"C++ [ecom_eiffel_compiler::CEiffelCompiler %"ecom_eiffel_compiler_CEiffelCompiler.h%"](): EIF_BOOLEAN"
		end

	ccom_freezing_occurred (cpp_obj: POINTER): BOOLEAN is
			-- Did last compile warrant a call to finish_freezing?
		external
			"C++ [ecom_eiffel_compiler::CEiffelCompiler %"ecom_eiffel_compiler_CEiffelCompiler.h%"](): EIF_BOOLEAN"
		end

	ccom_compiler_version (cpp_obj: POINTER): STRING is
			-- Compiler version.
		external
			"C++ [ecom_eiffel_compiler::CEiffelCompiler %"ecom_eiffel_compiler_CEiffelCompiler.h%"](): EIF_REFERENCE"
		end

	ccom_ise_eiffel (cpp_obj: POINTER): STRING is
			-- Return ISE_EIFFEL environment var.
		external
			"C++ [ecom_eiffel_compiler::CEiffelCompiler %"ecom_eiffel_compiler_CEiffelCompiler.h%"](): EIF_REFERENCE"
		end

	ccom_generate_msil_keyfile (cpp_obj: POINTER; filename: STRING) is
			-- Generate a cyrptographic key filename.
		external
			"C++ [ecom_eiffel_compiler::CEiffelCompiler %"ecom_eiffel_compiler_CEiffelCompiler.h%"](EIF_OBJECT)"
		end

	ccom_freeze_command_name (cpp_obj: POINTER): STRING is
			-- Eiffel Freeze command name
		external
			"C++ [ecom_eiffel_compiler::CEiffelCompiler %"ecom_eiffel_compiler_CEiffelCompiler.h%"](): EIF_REFERENCE"
		end

	ccom_freeze_command_arguments (cpp_obj: POINTER): STRING is
			-- Eiffel Freeze command arguments
		external
			"C++ [ecom_eiffel_compiler::CEiffelCompiler %"ecom_eiffel_compiler_CEiffelCompiler.h%"](): EIF_REFERENCE"
		end

	ccom_has_signable_generation (cpp_obj: POINTER): BOOLEAN is
			-- Is the compiler a trial version.
		external
			"C++ [ecom_eiffel_compiler::CEiffelCompiler %"ecom_eiffel_compiler_CEiffelCompiler.h%"](): EIF_BOOLEAN"
		end

	ccom_remove_file_locks (cpp_obj: POINTER) is
			-- Remove file locks
		external
			"C++ [ecom_eiffel_compiler::CEiffelCompiler %"ecom_eiffel_compiler_CEiffelCompiler.h%"]()"
		end

	ccom_enable_call_back_on_ieiffel_compiler_events (cpp_obj: POINTER; an_interface_pointer: POINTER) is
			-- Enable call back.
		external
			"C++ [ecom_eiffel_compiler::CEiffelCompiler %"ecom_eiffel_compiler_CEiffelCompiler.h%"](EIF_POINTER)"
		end

	ccom_disable_call_back_on_ieiffel_compiler_events (cpp_obj: POINTER) is
			-- Disable call back.
		external
			"C++ [ecom_eiffel_compiler::CEiffelCompiler %"ecom_eiffel_compiler_CEiffelCompiler.h%"]()"
		end

	ccom_delete_ceiffel_compiler_coclass (a_pointer: POINTER) is
			-- Release resource
		external
			"C++ [delete ecom_eiffel_compiler::CEiffelCompiler %"ecom_eiffel_compiler_CEiffelCompiler.h%"]()"
		end

	ccom_create_ceiffel_compiler_coclass_from_pointer (a_pointer: POINTER): POINTER is
			-- Create from pointer
		external
			"C++ [new ecom_eiffel_compiler::CEiffelCompiler %"ecom_eiffel_compiler_CEiffelCompiler.h%"](IUnknown *)"
		end

	ccom_item (cpp_obj: POINTER): POINTER is
			-- Item
		external
			"C++ [ecom_eiffel_compiler::CEiffelCompiler %"ecom_eiffel_compiler_CEiffelCompiler.h%"]():EIF_POINTER"
		end

end -- CEIFFEL_COMPILER_PROXY

