<!DOCTYPE type SYSTEM "../type.dtd">
<class>
	<header>
		<modified>False</modified>
		<frozen>True</frozen>
		<expanded>False</expanded>
		<deferred>False</deferred>
		<generic>False</generic>
		<class_eiffel_name>SYSTEM_THREADING_THREADPOOL</class_eiffel_name>
		<alias>
			<simple_name>ThreadPool</simple_name>
			<namespace>System.Threading</namespace>
			<assembly_name>mscorlib</assembly_name>
			<assembly_version>1.0.2411.0</assembly_version>
			<assembly_culture>neutral</assembly_culture>
			<assembly_public_key>b77a5c561934e089</assembly_public_key>
		</alias>
		<create_none>True</create_none>
	</header>
	<body>
		<basic_operations>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>True</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>unsafe_queue_user_work_item</feature_eiffel_name>
				<feature_external_name>UnsafeQueueUserWorkItem</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>call_back</argument_eiffel_name>
						<argument_external_name>callBack</argument_external_name>
						<argument_type>SYSTEM_THREADING_WAITCALLBACK</argument_type>
						<argument_type_full_name>System.Threading.WaitCallback</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>state</argument_eiffel_name>
						<argument_external_name>state</argument_external_name>
						<argument_type>ANY</argument_type>
						<argument_type_full_name>System.Object</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>True</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>register_wait_for_single_object</feature_eiffel_name>
				<feature_external_name>RegisterWaitForSingleObject</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>wait_object</argument_eiffel_name>
						<argument_external_name>waitObject</argument_external_name>
						<argument_type>SYSTEM_THREADING_WAITHANDLE</argument_type>
						<argument_type_full_name>System.Threading.WaitHandle</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>call_back</argument_eiffel_name>
						<argument_external_name>callBack</argument_external_name>
						<argument_type>SYSTEM_THREADING_WAITORTIMERCALLBACK</argument_type>
						<argument_type_full_name>System.Threading.WaitOrTimerCallback</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>state</argument_eiffel_name>
						<argument_external_name>state</argument_external_name>
						<argument_type>ANY</argument_type>
						<argument_type_full_name>System.Object</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>timeout</argument_eiffel_name>
						<argument_external_name>timeout</argument_external_name>
						<argument_type>SYSTEM_TIMESPAN</argument_type>
						<argument_type_full_name>System.TimeSpan</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>execute_only_once</argument_eiffel_name>
						<argument_external_name>executeOnlyOnce</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_THREADING_REGISTEREDWAITHANDLE</return_type>
				<return_type_full_name>System.Threading.RegisteredWaitHandle</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>True</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>queue_user_work_item_wait_callback_object</feature_eiffel_name>
				<feature_external_name>QueueUserWorkItem</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>call_back</argument_eiffel_name>
						<argument_external_name>callBack</argument_external_name>
						<argument_type>SYSTEM_THREADING_WAITCALLBACK</argument_type>
						<argument_type_full_name>System.Threading.WaitCallback</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>state</argument_eiffel_name>
						<argument_external_name>state</argument_external_name>
						<argument_type>ANY</argument_type>
						<argument_type_full_name>System.Object</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>True</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>register_wait_for_single_object_wait_handle_wait_or_timer_callback_object_int32</feature_eiffel_name>
				<feature_external_name>RegisterWaitForSingleObject</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>wait_object</argument_eiffel_name>
						<argument_external_name>waitObject</argument_external_name>
						<argument_type>SYSTEM_THREADING_WAITHANDLE</argument_type>
						<argument_type_full_name>System.Threading.WaitHandle</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>call_back</argument_eiffel_name>
						<argument_external_name>callBack</argument_external_name>
						<argument_type>SYSTEM_THREADING_WAITORTIMERCALLBACK</argument_type>
						<argument_type_full_name>System.Threading.WaitOrTimerCallback</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>state</argument_eiffel_name>
						<argument_external_name>state</argument_external_name>
						<argument_type>ANY</argument_type>
						<argument_type_full_name>System.Object</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>milliseconds_time_out_interval</argument_eiffel_name>
						<argument_external_name>millisecondsTimeOutInterval</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>execute_only_once</argument_eiffel_name>
						<argument_external_name>executeOnlyOnce</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_THREADING_REGISTEREDWAITHANDLE</return_type>
				<return_type_full_name>System.Threading.RegisteredWaitHandle</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>True</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>queue_user_work_item</feature_eiffel_name>
				<feature_external_name>QueueUserWorkItem</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>call_back</argument_eiffel_name>
						<argument_external_name>callBack</argument_external_name>
						<argument_type>SYSTEM_THREADING_WAITCALLBACK</argument_type>
						<argument_type_full_name>System.Threading.WaitCallback</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>True</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>unsafe_register_wait_for_single_object_wait_handle_wait_or_timer_callback_object_int32</feature_eiffel_name>
				<feature_external_name>UnsafeRegisterWaitForSingleObject</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>wait_object</argument_eiffel_name>
						<argument_external_name>waitObject</argument_external_name>
						<argument_type>SYSTEM_THREADING_WAITHANDLE</argument_type>
						<argument_type_full_name>System.Threading.WaitHandle</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>call_back</argument_eiffel_name>
						<argument_external_name>callBack</argument_external_name>
						<argument_type>SYSTEM_THREADING_WAITORTIMERCALLBACK</argument_type>
						<argument_type_full_name>System.Threading.WaitOrTimerCallback</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>state</argument_eiffel_name>
						<argument_external_name>state</argument_external_name>
						<argument_type>ANY</argument_type>
						<argument_type_full_name>System.Object</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>milliseconds_time_out_interval</argument_eiffel_name>
						<argument_external_name>millisecondsTimeOutInterval</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>execute_only_once</argument_eiffel_name>
						<argument_external_name>executeOnlyOnce</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_THREADING_REGISTEREDWAITHANDLE</return_type>
				<return_type_full_name>System.Threading.RegisteredWaitHandle</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>True</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>unsafe_register_wait_for_single_object_wait_handle_wait_or_timer_callback_object_int64</feature_eiffel_name>
				<feature_external_name>UnsafeRegisterWaitForSingleObject</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>wait_object</argument_eiffel_name>
						<argument_external_name>waitObject</argument_external_name>
						<argument_type>SYSTEM_THREADING_WAITHANDLE</argument_type>
						<argument_type_full_name>System.Threading.WaitHandle</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>call_back</argument_eiffel_name>
						<argument_external_name>callBack</argument_external_name>
						<argument_type>SYSTEM_THREADING_WAITORTIMERCALLBACK</argument_type>
						<argument_type_full_name>System.Threading.WaitOrTimerCallback</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>state</argument_eiffel_name>
						<argument_external_name>state</argument_external_name>
						<argument_type>ANY</argument_type>
						<argument_type_full_name>System.Object</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>milliseconds_time_out_interval</argument_eiffel_name>
						<argument_external_name>millisecondsTimeOutInterval</argument_external_name>
						<argument_type>INTEGER_64</argument_type>
						<argument_type_full_name>System.Int64</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>execute_only_once</argument_eiffel_name>
						<argument_external_name>executeOnlyOnce</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_THREADING_REGISTEREDWAITHANDLE</return_type>
				<return_type_full_name>System.Threading.RegisteredWaitHandle</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>True</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>unsafe_register_wait_for_single_object</feature_eiffel_name>
				<feature_external_name>UnsafeRegisterWaitForSingleObject</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>wait_object</argument_eiffel_name>
						<argument_external_name>waitObject</argument_external_name>
						<argument_type>SYSTEM_THREADING_WAITHANDLE</argument_type>
						<argument_type_full_name>System.Threading.WaitHandle</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>call_back</argument_eiffel_name>
						<argument_external_name>callBack</argument_external_name>
						<argument_type>SYSTEM_THREADING_WAITORTIMERCALLBACK</argument_type>
						<argument_type_full_name>System.Threading.WaitOrTimerCallback</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>state</argument_eiffel_name>
						<argument_external_name>state</argument_external_name>
						<argument_type>ANY</argument_type>
						<argument_type_full_name>System.Object</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>timeout</argument_eiffel_name>
						<argument_external_name>timeout</argument_external_name>
						<argument_type>SYSTEM_TIMESPAN</argument_type>
						<argument_type_full_name>System.TimeSpan</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>execute_only_once</argument_eiffel_name>
						<argument_external_name>executeOnlyOnce</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_THREADING_REGISTEREDWAITHANDLE</return_type>
				<return_type_full_name>System.Threading.RegisteredWaitHandle</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>True</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>register_wait_for_single_object_wait_handle_wait_or_timer_callback_object_int64</feature_eiffel_name>
				<feature_external_name>RegisterWaitForSingleObject</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>wait_object</argument_eiffel_name>
						<argument_external_name>waitObject</argument_external_name>
						<argument_type>SYSTEM_THREADING_WAITHANDLE</argument_type>
						<argument_type_full_name>System.Threading.WaitHandle</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>call_back</argument_eiffel_name>
						<argument_external_name>callBack</argument_external_name>
						<argument_type>SYSTEM_THREADING_WAITORTIMERCALLBACK</argument_type>
						<argument_type_full_name>System.Threading.WaitOrTimerCallback</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>state</argument_eiffel_name>
						<argument_external_name>state</argument_external_name>
						<argument_type>ANY</argument_type>
						<argument_type_full_name>System.Object</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>milliseconds_time_out_interval</argument_eiffel_name>
						<argument_external_name>millisecondsTimeOutInterval</argument_external_name>
						<argument_type>INTEGER_64</argument_type>
						<argument_type_full_name>System.Int64</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>execute_only_once</argument_eiffel_name>
						<argument_external_name>executeOnlyOnce</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_THREADING_REGISTEREDWAITHANDLE</return_type>
				<return_type_full_name>System.Threading.RegisteredWaitHandle</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>True</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>bind_handle</feature_eiffel_name>
				<feature_external_name>BindHandle</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>os_handle</argument_eiffel_name>
						<argument_external_name>osHandle</argument_external_name>
						<argument_type>POINTER</argument_type>
						<argument_type_full_name>System.IntPtr</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
		</basic_operations>
		<bit_or_infix>False</bit_or_infix>
	</body>
</class>