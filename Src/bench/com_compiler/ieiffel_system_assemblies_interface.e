indexing
	description: "Eiffel System Assemblies.  Help file: "
	Note: "Automatically generated by the EiffelCOM Wizard."

deferred class
	IEIFFEL_SYSTEM_ASSEMBLIES_INTERFACE

inherit
	ECOM_INTERFACE

feature -- Status Report

	store_user_precondition: BOOLEAN is
			-- User-defined preconditions for `store'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	add_signed_assembly_user_precondition (assembly_prefix: STRING; assembly_identifier: STRING; a_name: STRING; a_version: STRING; a_culture: STRING; a_publickey: STRING): BOOLEAN is
			-- User-defined preconditions for `add_signed_assembly'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	add_unsigned_assembly_user_precondition (assembly_prefix: STRING; assembly_identifier: STRING; a_path: STRING): BOOLEAN is
			-- User-defined preconditions for `add_unsigned_assembly'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	remove_assembly_user_precondition (assembly_identifier: STRING): BOOLEAN is
			-- User-defined preconditions for `remove_assembly'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	assembly_properties_user_precondition (assembly_identifier: STRING): BOOLEAN is
			-- User-defined preconditions for `assembly_properties'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	is_valid_identifier_user_precondition (assembly_identifier: STRING): BOOLEAN is
			-- User-defined preconditions for `is_valid_identifier'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	contains_assembly_user_precondition (assembly_identifier: STRING): BOOLEAN is
			-- User-defined preconditions for `contains_assembly'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	contains_signed_assembly_user_precondition (a_name: STRING; a_version: STRING; a_culture: STRING; a_publickey: STRING): BOOLEAN is
			-- User-defined preconditions for `contains_signed_assembly'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	contains_unsigned_assembly_user_precondition (a_path: STRING): BOOLEAN is
			-- User-defined preconditions for `contains_unsigned_assembly'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	identifier_from_signed_assembly_user_precondition (a_name: STRING; a_version: STRING; a_culture: STRING; a_publickey: STRING): BOOLEAN is
			-- User-defined preconditions for `identifier_from_signed_assembly'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	identifier_from_unsigned_assembly_user_precondition (a_path: STRING): BOOLEAN is
			-- User-defined preconditions for `identifier_from_unsigned_assembly'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	is_valid_prefix_user_precondition (assembly_prefix: STRING): BOOLEAN is
			-- User-defined preconditions for `is_valid_prefix'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	is_prefix_allocated_user_precondition (assembly_prefix: STRING): BOOLEAN is
			-- User-defined preconditions for `is_prefix_allocated'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	rename_assembly_user_precondition (assembly_new_identifier: STRING; assembly_old_identifier: STRING): BOOLEAN is
			-- User-defined preconditions for `rename_assembly'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	assemblies_user_precondition: BOOLEAN is
			-- User-defined preconditions for `assemblies'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

feature -- Basic Operations

	store is
			-- Save changes.
		require
			store_user_precondition: store_user_precondition
		deferred

		end

	add_signed_assembly (assembly_prefix: STRING; assembly_identifier: STRING; a_name: STRING; a_version: STRING; a_culture: STRING; a_publickey: STRING) is
			-- Add a signed assembly to the project.
			-- `assembly_prefix' [in].  
			-- `assembly_identifier' [in].  
			-- `a_name' [in].  
			-- `a_version' [in].  
			-- `a_culture' [in].  
			-- `a_publickey' [in].  
		require
			add_signed_assembly_user_precondition: add_signed_assembly_user_precondition (assembly_prefix, assembly_identifier, a_name, a_version, a_culture, a_publickey)
		deferred

		end

	add_unsigned_assembly (assembly_prefix: STRING; assembly_identifier: STRING; a_path: STRING) is
			-- Add a unsigned (local) assembly to the project.
			-- `assembly_prefix' [in].  
			-- `assembly_identifier' [in].  
			-- `a_path' [in].  
		require
			add_unsigned_assembly_user_precondition: add_unsigned_assembly_user_precondition (assembly_prefix, assembly_identifier, a_path)
		deferred

		end

	remove_assembly (assembly_identifier: STRING) is
			-- Remove an assembly from the project.
			-- `assembly_identifier' [in].  
		require
			remove_assembly_user_precondition: remove_assembly_user_precondition (assembly_identifier)
		deferred

		end

	assembly_properties (assembly_identifier: STRING): IEIFFEL_ASSEMBLY_PROPERTIES_INTERFACE is
			-- Cluster properties.
			-- `assembly_identifier' [in].  
		require
			assembly_properties_user_precondition: assembly_properties_user_precondition (assembly_identifier)
		deferred

		end

	is_valid_identifier (assembly_identifier: STRING): BOOLEAN is
			-- Checks to see if a assembly identifier is valid
			-- `assembly_identifier' [in].  
		require
			is_valid_identifier_user_precondition: is_valid_identifier_user_precondition (assembly_identifier)
		deferred

		end

	contains_assembly (assembly_identifier: STRING): BOOLEAN is
			-- Checks to see if a assembly identifier has already been added to the project
			-- `assembly_identifier' [in].  
		require
			contains_assembly_user_precondition: contains_assembly_user_precondition (assembly_identifier)
		deferred

		end

	contains_signed_assembly (a_name: STRING; a_version: STRING; a_culture: STRING; a_publickey: STRING): BOOLEAN is
			-- Checks to see if a signed assembly has already been added to the project
			-- `a_name' [in].  
			-- `a_version' [in].  
			-- `a_culture' [in].  
			-- `a_publickey' [in].  
		require
			contains_signed_assembly_user_precondition: contains_signed_assembly_user_precondition (a_name, a_version, a_culture, a_publickey)
		deferred

		end

	contains_unsigned_assembly (a_path: STRING): BOOLEAN is
			-- Checks to see if a unsigned assembly has already been added to the project
			-- `a_path' [in].  
		require
			contains_unsigned_assembly_user_precondition: contains_unsigned_assembly_user_precondition (a_path)
		deferred

		end

	identifier_from_signed_assembly (a_name: STRING; a_version: STRING; a_culture: STRING; a_publickey: STRING): STRING is
			-- Retrieves the identifier for a signed assembly in the project
			-- `a_name' [in].  
			-- `a_version' [in].  
			-- `a_culture' [in].  
			-- `a_publickey' [in].  
		require
			identifier_from_signed_assembly_user_precondition: identifier_from_signed_assembly_user_precondition (a_name, a_version, a_culture, a_publickey)
		deferred

		end

	identifier_from_unsigned_assembly (a_path: STRING): STRING is
			-- Retrieves the identifier for a unsigned assembly in the project
			-- `a_path' [in].  
		require
			identifier_from_unsigned_assembly_user_precondition: identifier_from_unsigned_assembly_user_precondition (a_path)
		deferred

		end

	is_valid_prefix (assembly_prefix: STRING): BOOLEAN is
			-- Is 'prefix' a valid assembly prefix
			-- `assembly_prefix' [in].  
		require
			is_valid_prefix_user_precondition: is_valid_prefix_user_precondition (assembly_prefix)
		deferred

		end

	is_prefix_allocated (assembly_prefix: STRING): BOOLEAN is
			-- Has the 'prefix' already been allocated to another assembly
			-- `assembly_prefix' [in].  
		require
			is_prefix_allocated_user_precondition: is_prefix_allocated_user_precondition (assembly_prefix)
		deferred

		end

	rename_assembly (assembly_new_identifier: STRING; assembly_old_identifier: STRING) is
			-- Rename the assembly identifier
			-- `assembly_new_identifier' [in].  
			-- `assembly_old_identifier' [in].  
		require
			rename_assembly_user_precondition: rename_assembly_user_precondition (assembly_new_identifier, assembly_old_identifier)
		deferred

		end

	assemblies: IENUM_ASSEMBLY_INTERFACE is
			-- Returns all of the assemblies in an enumerator
		require
			assemblies_user_precondition: assemblies_user_precondition
		deferred

		end

end -- IEIFFEL_SYSTEM_ASSEMBLIES_INTERFACE

