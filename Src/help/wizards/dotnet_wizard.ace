system
	wizard

root
	WIZARD_MANAGER: make_and_launch

default
	assertion(require)
	assertion(ensure)
	assertion(check)
	address_expression(no)
	array_optimization(no)
	console_application(no)
	dead_code_removal(yes)
	dynamic_runtime(no)
	exception_trace(yes)
	inlining(no)
	multithreaded(no)
	check_vape(yes)
	arguments("D:\Eiffel50\bench\wizards\new_projects\dotnet -callback c:\test.txt")
	arguments("E:\Eiffel50\bench\wizards\new_projects\dotnet -callback c:\test.txt")
	disabled_debug(yes)
	disabled_debug("win_dispatcher")
	disabled_debug("wel")
	disabled_debug("vision2_windows_gdi")
	disabled_debug("vision2_windows")
	disabled_debug("wel_gdi_count")
	disabled_debug("gdi_count")
	disabled_debug("wel_gdi_references")
	disabled_debug("dlg_dispatcher")
	debug(no)
	line_generation(no)
	profile(no)
	trace(no)


--	assertion (no)
-- Root cluster
-- Wel Wizard
-- Bench Common
-- EiffelBase
-- WEL
-- EiffelVision2
-- Wizard library
-- Lex and Parse

cluster
	root_cluster:		"$EIFFEL_SRC\help\wizards"

	dotnet_wizard (root_cluster):		"$\edotnet"

	bench_common (root_cluster):		"$\bench_common"

	all base:		"$EIFFEL_SRC\library\base"
		exclude
			"desc"; "table_eiffel3"; "CVS"; 
		end

	all wel:		"$EIFFEL_SRC\library\wel"
		exclude
			"CVS"; 
		default
			assertion(ensure)
		end

	all vision2:		"$EIFFEL_SRC\library\vision2"
		exclude
			"gtk"; "EIFGEN"; "tmp"; "temp"; "release"; "obsolete"; "CVS"; 
		end

	all wizard_library:		"$EIFFEL_SRC\library\wizard"

	all lex:		"$EIFFEL_SRC\library\lex"

	all parse:		"$EIFFEL_SRC\library\parse"

external

	include_path:
		"$(EIFFEL_SRC)\library\wel\spec\windows\include",
		"$(EIFFEL_SRC)\library\vision2\spec\include",
		"$(EIFFEL_SRC)\help\wizards\edotnet\Clib"

	object:
		"$(EIFFEL_SRC)\library\wel\spec\$(ISE_C_COMPILER)\lib\wel.lib",
		"$(EIFFEL_SRC)\library\vision2\spec\$(ISE_C_COMPILER)\lib\vision2.lib",
		"$(EIFFEL_SRC)\C_library\zlib\zlib.lib",
		"$(EIFFEL_SRC)\C_library\libpng\libpng.lib",
		"$(EIFFEL_SRC)\help\wizards\edotnet\Clib\assembly_helper.obj"

end
