system
	"memory_analyzer_demo"

root
	ROOT_CLASS: make

default
	assertion (require)
	disabled_debug (yes)
	disabled_debug ("dlg_dispatcher")
	disabled_debug ("gelex")
	disabled_debug ("geyacc")
	disabled_debug ("larry")
	disabled_debug ("refactor_fixme")
	disabled_debug ("vision2_windows")
	disabled_debug ("vision2_windows_gdi")
	disabled_debug ("wel")
	disabled_debug ("wel_gdi_count")
	disabled_debug ("wel_gdi_references")
	disabled_debug ("win_dispatcher")
	disabled_debug ("xml_input_stream")
	disabled_debug ("xml_parser")
	debug (no)
	line_generation (no)
	profile (no)
	trace (no)
	check_vape (yes)
	console_application (no)
	syntax_warning (no)
	address_expression (no)
	array_optimization (no)
	dead_code_removal (yes)
	dynamic_runtime (no)
	exception_trace (no)
	inlining (no)
	multithreaded (no)


-- EiffelBase

cluster
	root_cluster:		"D:\Projects\memory_analyzer_demo"


	library base:		"$ISE_LIBRARY\library\base"
		exclude
			"table_eiffel3"; "desc"; 
		end

	library memory_analyzer:		"$EIFFEL_SRC\library\memory_analyzer"


	library egraph:		"$EIFFEL_SRC\library\graph"

	library vision2:		"$EIFFEL_SRC\library\vision2"
		exclude
			"gtk"; "gtk2"; 
		end

	library gobo:		"$EIFFEL_SRC\library\gobo"
		exclude
			"ve"; "se"; "other"; "test"; 
		end

	library time:		"$EIFFEL_SRC\library\time"
		exclude
			"french"; "german"; 
		end

	library wel:		"$EIFFEL_SRC\library\wel"

	library structure:		"$EIFFEL_SRC\Eiffel\eiffel\structures"

external

	include_path:
		"$(EIFFEL_SRC)\library\wel\spec\windows\include",
		"$(EIFFEL_SRC)\library\vision2\spec\include"

	object:
		"$(EIFFEL_SRC)\library\wel\spec\$(ISE_C_COMPILER)\lib\wel.lib",
		"$(EIFFEL_SRC)\library\vision2\spec\$(ISE_C_COMPILER)\lib\vision2.lib",
		"$(EIFFEL_SRC)\library\vision2\spec\$(ISE_C_COMPILER)\lib\zlib.lib",
		"$(EIFFEL_SRC)\library\vision2\spec\$(ISE_C_COMPILER)\lib\libpng.lib"

end
