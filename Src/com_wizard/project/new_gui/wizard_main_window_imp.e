indexing
	description: "Objects that represent an EV_TITLED_WINDOW.%
		%The original version of this class was generated by EiffelBuild."

deferred class
	WIZARD_MAIN_WINDOW_IMP

inherit
	EV_TITLED_WINDOW
		redefine
			initialize, is_in_default_state
		end
			
	WIZARD_CONSTANTS
		undefine
			is_equal, default_create, copy
		end

-- This class is the implementation of an EV_TITLED_WINDOW generated by EiffelBuild.
-- You should not modify this code by hand, as it will be re-generated every time
-- modifications are made to the project.

feature {NONE}-- Initialization

	initialize is
			-- Initialize `Current'.
		local 
			l_ev_menu_separator_1, l_ev_menu_separator_2: EV_MENU_SEPARATOR
			l_ev_cell_1: EV_CELL
		do
			Precursor {EV_TITLED_WINDOW}
			initialize_constants
			
				-- Create all widgets.
			create menu
			create file_menu
			create open_menu_item
			create save_menu_item
			create l_ev_menu_separator_1
			create exit_menu_item
			create help_menu
			create help_menu_item
			create l_ev_menu_separator_2
			create about_menu_item
			create notebook
			create settings_box
			create project_type_frame
			create project_type_box
			create project_type_label
			create generate_label
			create project_type_buttons_box
			create project_types_padding_cell
			create project_type_internal_buttons_box
			create eiffel_project_radio_button
			create com_server_project_radio_button
			create com_client_project_radio_button
			create component_type_padding_cell
			create component_type_outter_box
			create component_type_frame
			create component_type_box
			create in_process_radio_button
			create out_of_process_radio_button
			create l_ev_cell_1
			create general_settings_frame
			create general_settings_box
			create eiffel_project_box
			create com_project_box
			create settings_padding_cell
			create settings_bottom_box
			create generation_options_outter_box
			create marshalling_frame
			create marshalling_box
			create marshalling_label
			create component_access_label
			create marshalling_buttons_box
			create marshalling_buttons_padding_cell
			create inner_marshalling_buttons_box
			create automation_radio_button
			create virtual_universal_radio_button
			create virtual_custom_radio_button
			create custom_marshaller_box
			create custom_marshaller_padding_cell
			create custom_marshaller_path_box
			create generation_options_frame
			create generation_options_box
			create destination_folder_box
			create compilation_box
			create compile_label
			create compile_box
			create compile_padding_cell
			create compile_buttons_box
			create compile_eiffel_check_button
			create compile_c_code_check_button
			create generation_box
			create stop_on_error_label
			create stop_on_error_box
			create stop_on_error_padding_cell
			create stop_on_error_check_button
			create generation_options_padding_cell
			create general_options_bottom_box
			create output_box
			
				-- Build_widget_structure.
			set_menu_bar (menu)
			menu.extend (file_menu)
			file_menu.extend (open_menu_item)
			file_menu.extend (save_menu_item)
			file_menu.extend (l_ev_menu_separator_1)
			file_menu.extend (exit_menu_item)
			menu.extend (help_menu)
			help_menu.extend (help_menu_item)
			help_menu.extend (l_ev_menu_separator_2)
			help_menu.extend (about_menu_item)
			extend (notebook)
			notebook.extend (settings_box)
			settings_box.extend (project_type_frame)
			project_type_frame.extend (project_type_box)
			project_type_box.extend (project_type_label)
			project_type_box.extend (generate_label)
			project_type_box.extend (project_type_buttons_box)
			project_type_buttons_box.extend (project_types_padding_cell)
			project_type_buttons_box.extend (project_type_internal_buttons_box)
			project_type_internal_buttons_box.extend (eiffel_project_radio_button)
			project_type_internal_buttons_box.extend (com_server_project_radio_button)
			project_type_internal_buttons_box.extend (com_client_project_radio_button)
			project_type_buttons_box.extend (component_type_padding_cell)
			project_type_buttons_box.extend (component_type_outter_box)
			component_type_outter_box.extend (component_type_frame)
			component_type_frame.extend (component_type_box)
			component_type_box.extend (in_process_radio_button)
			component_type_box.extend (out_of_process_radio_button)
			project_type_buttons_box.extend (l_ev_cell_1)
			settings_box.extend (general_settings_frame)
			general_settings_frame.extend (general_settings_box)
			general_settings_box.extend (eiffel_project_box)
			general_settings_box.extend (com_project_box)
			settings_box.extend (settings_padding_cell)
			settings_box.extend (settings_bottom_box)
			notebook.extend (generation_options_outter_box)
			generation_options_outter_box.extend (marshalling_frame)
			marshalling_frame.extend (marshalling_box)
			marshalling_box.extend (marshalling_label)
			marshalling_box.extend (component_access_label)
			marshalling_box.extend (marshalling_buttons_box)
			marshalling_buttons_box.extend (marshalling_buttons_padding_cell)
			marshalling_buttons_box.extend (inner_marshalling_buttons_box)
			inner_marshalling_buttons_box.extend (automation_radio_button)
			inner_marshalling_buttons_box.extend (virtual_universal_radio_button)
			inner_marshalling_buttons_box.extend (virtual_custom_radio_button)
			inner_marshalling_buttons_box.extend (custom_marshaller_box)
			custom_marshaller_box.extend (custom_marshaller_padding_cell)
			custom_marshaller_box.extend (custom_marshaller_path_box)
			generation_options_outter_box.extend (generation_options_frame)
			generation_options_frame.extend (generation_options_box)
			generation_options_box.extend (destination_folder_box)
			generation_options_box.extend (compilation_box)
			compilation_box.extend (compile_label)
			compilation_box.extend (compile_box)
			compile_box.extend (compile_padding_cell)
			compile_box.extend (compile_buttons_box)
			compile_buttons_box.extend (compile_eiffel_check_button)
			compile_buttons_box.extend (compile_c_code_check_button)
			generation_options_box.extend (generation_box)
			generation_box.extend (stop_on_error_label)
			generation_box.extend (stop_on_error_box)
			stop_on_error_box.extend (stop_on_error_padding_cell)
			stop_on_error_box.extend (stop_on_error_check_button)
			generation_options_outter_box.extend (generation_options_padding_cell)
			generation_options_outter_box.extend (general_options_bottom_box)
			notebook.extend (output_box)
			
			set_title ("EiffelCOM Wizard 2.0")
			file_menu.set_text ("File")
			open_menu_item.set_text ("Open")
			open_menu_item.set_pixmap (icons_png)
			save_menu_item.set_text ("Save")
			save_menu_item.set_pixmap (icons_png)
			exit_menu_item.set_text ("Exit")
			exit_menu_item.set_pixmap (icons_png)
			help_menu.set_text ("Help")
			help_menu_item.set_text ("Help")
			help_menu_item.set_pixmap (icons_png)
			about_menu_item.set_text ("About")
			notebook.set_item_text (settings_box, "General Settings")
			notebook.set_item_text (generation_options_outter_box, "Generation Options")
			notebook.set_item_text (output_box, "Output")
			notebook.item_tab (settings_box).set_pixmap (icons_png)
			notebook.item_tab (generation_options_outter_box).set_pixmap (icons_png)
			notebook.item_tab (output_box).set_pixmap (icons_png)
			settings_box.set_padding_width (7)
			settings_box.set_border_width (5)
			settings_box.disable_item_expand (project_type_frame)
			settings_box.disable_item_expand (general_settings_frame)
			settings_box.disable_item_expand (settings_bottom_box)
			project_type_frame.set_text ("Project Type")
			project_type_box.set_padding_width (7)
			project_type_box.set_border_width (7)
			project_type_label.set_text ("The EiffelCOM Wizard can generate a project to reuse or create a COM component.%NIt can create a new COM component from either an existing Eiffel project or a COM defintion file.")
			project_type_label.align_text_left
			generate_label.set_text ("Create:")
			generate_label.align_text_left
			project_type_buttons_box.disable_item_expand (project_types_padding_cell)
			project_type_buttons_box.disable_item_expand (component_type_padding_cell)
			project_type_buttons_box.disable_item_expand (component_type_outter_box)
			project_types_padding_cell.set_minimum_width (30)
			eiffel_project_radio_button.set_text ("New COM component from existing Eiffel project")
			com_server_project_radio_button.set_text ("New COM component from COM definition file")
			com_client_project_radio_button.set_text ("Client application to access an existing component")
			component_type_padding_cell.set_minimum_width (50)
			component_type_outter_box.disable_item_expand (component_type_frame)
			component_type_frame.set_text ("Component Type")
			component_type_box.set_padding_width (7)
			component_type_box.set_border_width (7)
			component_type_box.disable_item_expand (in_process_radio_button)
			component_type_box.disable_item_expand (out_of_process_radio_button)
			in_process_radio_button.set_text ("In-process (*.dll)")
			out_of_process_radio_button.set_text ("Out-of-process (*.exe)")
			general_settings_frame.set_text ("Component Information")
			general_settings_box.set_padding_width (7)
			general_settings_box.set_border_width (7)
			generation_options_outter_box.set_padding_width (7)
			generation_options_outter_box.set_border_width (5)
			generation_options_outter_box.disable_item_expand (marshalling_frame)
			generation_options_outter_box.disable_item_expand (generation_options_frame)
			generation_options_outter_box.disable_item_expand (general_options_bottom_box)
			marshalling_frame.set_text ("Component Access")
			marshalling_box.set_padding_width (7)
			marshalling_box.set_border_width (7)
			marshalling_label.set_text ("COM components can be accessed either via Automation or the interfaces virtual tables.%NWhen accessing a component via its interfaces virtual tables, there are two ways of encoding%Narguments and results:%N  * Using the universal marshaller. This is the easiest way but not all data types are supported.%N  * Using a custom marshaller. This option requires a marshaller DLL.")
			marshalling_label.align_text_left
			component_access_label.set_text ("Access the COM component using:")
			component_access_label.align_text_left
			marshalling_buttons_box.disable_item_expand (marshalling_buttons_padding_cell)
			marshalling_buttons_padding_cell.set_minimum_width (20)
			automation_radio_button.set_text ("Automation")
			virtual_universal_radio_button.set_text ("Virtual table and the universal marshaller")
			virtual_custom_radio_button.set_text ("Virtual table and a custom marshaller")
			custom_marshaller_box.disable_sensitive
			custom_marshaller_box.disable_item_expand (custom_marshaller_padding_cell)
			custom_marshaller_padding_cell.set_minimum_width (20)
			generation_options_frame.set_text ("Generation Options")
			generation_options_box.set_padding_width (7)
			generation_options_box.set_border_width (7)
			generation_options_box.disable_item_expand (compilation_box)
			generation_options_box.disable_item_expand (generation_box)
			compilation_box.set_padding_width (5)
			compilation_box.disable_item_expand (compile_label)
			compilation_box.disable_item_expand (compile_box)
			compile_label.set_text ("By default the EiffelCOM wizard compiles the generated Eiffel and C code.%NCompiling the Eiffel code requires compiling the C code.")
			compile_label.align_text_left
			compile_box.disable_item_expand (compile_padding_cell)
			compile_padding_cell.set_minimum_width (10)
			compile_eiffel_check_button.set_text ("Do not compile Eiffel code")
			compile_c_code_check_button.set_text ("Do not compile C code")
			generation_box.set_padding_width (5)
			stop_on_error_label.set_text ("By default the EiffelCOM Wizard stops on compilation error.")
			stop_on_error_label.align_text_left
			stop_on_error_box.disable_item_expand (stop_on_error_padding_cell)
			stop_on_error_padding_cell.set_minimum_width (10)
			stop_on_error_check_button.set_text ("Do not stop on compilation error")
			
				--Connect events.
			open_menu_item.select_actions.extend (agent on_open)
			save_menu_item.select_actions.extend (agent on_save)
			help_menu_item.select_actions.extend (agent on_help)
			eiffel_project_radio_button.select_actions.extend (agent on_select_eiffel_project)
			com_server_project_radio_button.select_actions.extend (agent on_select_com_server)
			com_client_project_radio_button.select_actions.extend (agent on_select_com_client)
			automation_radio_button.select_actions.extend (agent on_select_automation)
			virtual_universal_radio_button.select_actions.extend (agent on_select_virtual_universal)
			virtual_custom_radio_button.select_actions.extend (agent on_select_virtual_custom)
			compile_c_code_check_button.select_actions.extend (agent on_no_c_compilation)
				-- Close the application when an interface close
				-- request is recieved on `Current'. i.e. the cross is clicked.

				-- Call `user_initialization'.
			user_initialization
		end

feature -- Access

	menu: EV_MENU_BAR
	file_menu, help_menu: EV_MENU
	open_menu_item, save_menu_item, exit_menu_item, help_menu_item, about_menu_item: EV_MENU_ITEM
	notebook: EV_NOTEBOOK
	settings_box, project_type_box, project_type_internal_buttons_box, component_type_outter_box, 
	component_type_box, general_settings_box, generation_options_outter_box, marshalling_box, 
	inner_marshalling_buttons_box, generation_options_box, compilation_box, compile_buttons_box, 
	generation_box: EV_VERTICAL_BOX
	project_type_frame, component_type_frame, general_settings_frame, marshalling_frame, 
	generation_options_frame: EV_FRAME
	project_type_label, generate_label, marshalling_label, component_access_label, 
	compile_label, stop_on_error_label: EV_LABEL
	project_type_buttons_box, marshalling_buttons_box, custom_marshaller_box, compile_box, 
	stop_on_error_box: EV_HORIZONTAL_BOX
	project_types_padding_cell, component_type_padding_cell, settings_padding_cell, 
	marshalling_buttons_padding_cell, custom_marshaller_padding_cell, compile_padding_cell, 
	stop_on_error_padding_cell, generation_options_padding_cell: EV_CELL
	eiffel_project_radio_button, com_server_project_radio_button, com_client_project_radio_button, 
	in_process_radio_button, out_of_process_radio_button, automation_radio_button, 
	virtual_universal_radio_button, virtual_custom_radio_button: EV_RADIO_BUTTON
	eiffel_project_box: WIZARD_EIFFEL_PROJECT_BOX
	com_project_box: WIZARD_COM_PROJECT_BOX
	settings_bottom_box, general_options_bottom_box: WIZARD_BOTTOM_BOX
	custom_marshaller_path_box: WIZARD_FILE_PATH_BOX
	destination_folder_box: WIZARD_FOLDER_PATH_BOX
	compile_eiffel_check_button, compile_c_code_check_button, stop_on_error_check_button: EV_CHECK_BUTTON
	output_box: WIZARD_OUTPUT_BOX

feature {NONE} -- Implementation

	is_in_default_state: BOOLEAN is
			-- Is `Current' in its default state?
		do
			-- Re-implement if you wish to enable checking
			-- for `Current'.
			Result := True
		end
	
	user_initialization is
			-- Feature for custom initialization, called at end of `initialize'.
		deferred
		end
	
	on_open is
			-- Called by `select_actions' of `open_menu_item'.
		deferred
		end
	
	on_save is
			-- Called by `select_actions' of `save_menu_item'.
		deferred
		end
	
	on_help is
			-- Called by `select_actions' of `help_menu_item'.
		deferred
		end
	
	on_select_eiffel_project is
			-- Called by `select_actions' of `eiffel_project_radio_button'.
		deferred
		end
	
	on_select_com_server is
			-- Called by `select_actions' of `com_server_project_radio_button'.
		deferred
		end
	
	on_select_com_client is
			-- Called by `select_actions' of `com_client_project_radio_button'.
		deferred
		end
	
	on_select_automation is
			-- Called by `select_actions' of `automation_radio_button'.
		deferred
		end
	
	on_select_virtual_universal is
			-- Called by `select_actions' of `virtual_universal_radio_button'.
		deferred
		end
	
	on_select_virtual_custom is
			-- Called by `select_actions' of `virtual_custom_radio_button'.
		deferred
		end
	
	on_no_c_compilation is
			-- Called by `select_actions' of `compile_c_code_check_button'.
		deferred
		end
	

end -- class WIZARD_MAIN_WINDOW_IMP
