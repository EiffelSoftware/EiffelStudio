<document title="Release notes for EiffelStudio 5.2" output="studio">
	<meta_data>
		<help/>
	</meta_data>
	<paragraph>
		<heading>
			<size>2</size>Graphical environment
		</heading>
		<list ordered="false">
			<item>Added a status bar, which gives a lot of information, such as the state of the compilation or the name of the current project.</item>
			<item>Clicking feature clauses in the feature tree now centers the editor on the selected feature clause.</item>
			<item>More specific icons in the feature and cluster trees, so that identifying deferred classes and the nature of features is now straightforward.</item>
			<item>Up to 10 
				<link>
					<url>../70_wizards_and_dialogs/30_dialogs/30_external_commands/00_introduction.xml</url>
					<label>external commands</label>
				</link> can now be defined and called from the 
				<bold>Tools</bold> menu.
			</item>
			<item>The new 
				<bold>Quick compile</bold> command lets you recompile only the classes that have been edited in EiffelStudio, skipping the sometimes tedious degree 6, that looks for modified classes.
			</item>
			<item>Control picking now has a configurable effect.</item>
			<item>More improvements in usability and bug fixes.</item>
		</list>
		<heading>
			<size>2</size>Compiler
		</heading>
		<list ordered="false">
			<item>Click 
				<link>
					<url>../30_compiler/60_version_history/02_52_release/index.xml</url>
					<label>here</label>
				</link> for more details on compiler improvements and full Eiffel support on .NET
			</item>
		</list>
		<heading>
			<size>2</size>Debugger
		</heading>
		<list ordered="false">
			<item>Right-clicking on one of the run buttons will pop up a dialog enabling you to choose the command line argument (it is a shortcut for `Project Settings'-&gt; Debug tab).</item>
			<item>Expressions can now be dynamically evaluated in the debugger. (
				<link>
					<url>../40_debugger/50_expression_evaluation/index.xml</url>
					<label>info</label>
				</link>)
			</item>
			<item>Conditional breakpoints. (
				<link>
					<url>../40_debugger/20_breakpoints/index.xml</url>
					<label>info</label>
				</link>)
			</item>
			<item>Classes can now define 
				<code>
					<feature_name>debug_output</feature_name>
				</code>, a feature inherited from 
				<code>
					<class_name>DEBUG_OUTPUT</class_name>
				</code>, whose string result is automatically displayed in the debugger for all objects of that type. (
				<link>
					<url>../40_debugger/40_object_tool/17_debug_output.xml</url>
					<label>info</label>
				</link>)
			</item>
			<item>Possible stack overflows can now be detected in the debugger before they occur. (
				<link>
					<url>../40_debugger/60_stack_overflow_prevention.xml</url>
					<label>info</label>
				</link>)
			</item>
		</list>
		<heading>
			<size>2</size>Libraries
		</heading>
		<heading>
			<size>3</size>EiffelBase
		</heading>
		<list ordered="false">
			<item>Improved speed of search operations in 
				<code>
					<class_name>ARRAYED_LIST</class_name>
				</code> and 
				<code>
					<class_name>HASH_TABLE</class_name>
				</code>.
			</item>
			<item>Reduced number of exported features in 
				<code>
					<class_name>TUPLE</class_name>
				</code>.
			</item>
			<item>Updated 
				<code>
					<class_name>INTERNAL</class_name>
				</code> and 
				<code>
					<class_name>TUPLE</class_name>
				</code> to accept 
				<code>
					<class_name>INTEGER_XX</class_name>
				</code> based queries/commands.
			</item>
			<item>
				<code>
					<class_name>STRING</class_name>
				</code> changes:
				<list ordered="false">
					<item>Fixed 
						<code>
							<feature_name>is_integer</feature_name>
						</code> to return False for strings of the form "(-|+)[a-zA-Z]+[0-9]*)"
					</item>
					<item>Improved speed of 
						<code>
							<feature_name>to_lower</feature_name>
						</code> and 
						<code>
							<feature_name>to_upper</feature_name>
						</code>.
					</item>
					<item>Updated for ELKS 2001 conformance:
						<list ordered="false">
							<item>Changed signature of 
								<code>
									<feature_name>out</feature_name>
								</code> and 
								<code>
									<feature_name>replace_substring</feature_name>
								</code> to use 
								<code>
									<class_name>STRING</class_name>
								</code> instead of `like Current'.
							</item>
							<item>Added 
								<code>
									<feature_name>keep_tail</feature_name>
								</code>, 
								<code>
									<feature_name>keep_head</feature_name>
								</code>, 
								<code>
									<feature_name>remove_tail</feature_name>
								</code>, 
								<code>
									<feature_name>remove_head</feature_name>
								</code> and make 
								<code>
									<feature_name>head</feature_name>
								</code> and 
								<code>
									<feature_name>tail</feature_name>
								</code> obsolete.
							</item>
							<item>Added 
								<code>
									<feature_name>string</feature_name>
								</code>, 
								<code>
									<feature_name>same_string</feature_name>
								</code>, 
								<code>
									<feature_name>has_substring</feature_name>
								</code>, 
								<code>
									<feature_name>fill_with</feature_name>
								</code>, 
								<code>
									<feature_name>insert_string</feature_name>
								</code>, 
								<code>
									<feature_name>insert_character</feature_name>
								</code>, 
								<code>
									<feature_name>as_lower</feature_name>
								</code>, 
								<code>
									<feature_name>as_upper</feature_name>
								</code>.
							</item>
							<item>Modified 
								<code>
									<feature_name>make_from_string</feature_name>
								</code> so that no sharing of internal string is done.
							</item>
							<item>Made 
								<code>
									<feature_name>remake</feature_name>
								</code>, 
								<code>
									<feature_name>replace_character</feature_name>
								</code> and 
								<code>
									<feature_name>insert</feature_name>
								</code> obsolete.
							</item>
						</list>
					</item>
				</list>
			</item>
		</list>
		<heading>
			<size>3</size>EiffelThread
		</heading>
		<list ordered="false">
			<item>Fixed crashes when using 
				<code>
					<feature_name>join</feature_name>
				</code> or 
				<code>
					<feature_name>terminated</feature_name>
				</code> from 
				<code>
					<class_name>THREAD_CONTROL</class_name>
				</code>.
			</item>
		</list>
		<heading>
			<size>3</size>EiffelTime
		</heading>
		<list ordered="false">
			<item>Rewritten so that no additional C libraries is needed. Therefore you have to update your project configuration files to reflect this change, i.e. removing the include directory and the object file of the old EiffelTime library.</item>
		</list>
		<heading>
			<size>3</size>EiffelVision2
		</heading>
		<list ordered="false">
			<item>
				<link>
					<url>../../../../libraries/vision2/content/0-_revisions/index.xml</url>
					<label>Click here to see list of update and modification to Eiffel Vision2</label>
				</link>.
			</item>
		</list>
		<heading>
			<size>3</size>WEL
		</heading>
		<list ordered="false">
			<item>Changed type of non-exported feature 
				<code>
					<feature_name>internal_data</feature_name>
				</code> of 
				<code>
					<class_name>WEL_WINDOW</class_name>
				</code> from 
				<code>
					<class_name>INTEGER</class_name>
				</code> to 
				<code>
					<class_name>POINTER</class_name>
				</code>.
			</item>
			<item>Fixed a GDI memory leak when creating/releasing instances of descendant of 
				<code>
					<class_name>WEL_CONTROL</class_name>
				</code>.
			</item>
		</list>
		<heading>
			<size>2</size>Patch releases
		</heading>
		<heading>
			<size>3</size>Version 5.2.1402:
		</heading>
		<list ordered="false">
			<item>Put Windows and Unix version to the same version number.</item>
			<item>Fixed EiffelWeb documentation and example.</item>
			<item>Fixed minor issues found with EiffelVision2 on Unix and Windows which were affecting EiffelBuild.</item>
			<item>Fixed incorrect Ace file specification for EiffelVision2 examples and wizards on Unix platforms where application could be linked dynamically with `libpng' but should not.</item>
			<item>Fixed EiffelStore handle for Oracle so that it works fine when compiled with the Borland C compiler.</item>
			<item>Fixed incorrect version number in VERSION file on Unix platforms.</item>
		</list>
		<heading>
			<size>3</size>Version 5.2.1313:
		</heading>
		<list ordered="false">
			<item>Fixed resource leak on Windows 98 and Windows Me.</item>
			<item>Fixed incorrect implementation of 
				<code>
					<feature_name>area</feature_name>
				</code> and 
				<code>
					<feature_name>substring</feature_name>
				</code> for 
				<code>
					<class_name>STRING</class_name>
				</code> in dotnet mode.
			</item>
			<item>Fixed issue with setting of arguments. After restarting EiffelStudio the command line argument contains an extra `]' character.</item>
			<item>Fixed issue with working directories where only the first one ever set was used even if new ones have been set afterwards.</item>
			<item>Fixed issue in IL code generation where having a class that inherits from a non-Eiffel .NET class. And the class has the following features:
				<line_break/>
				<code_block>
<feature_name>a</feature_name>: <class_name>ARRAY</class_name> [<keyword>like</keyword> <feature_name>f</feature_name>]
<feature_name>f</feature_name>: <class_name>STRING</class_name> <keyword>is</keyword>
	<keyword>do</keyword>
	<keyword>end</keyword></code_block>
				<paragraph>Then you could neither load nor execute the generated code.</paragraph>
			</item>
			<item>Fixed issue with incorrect C code generation of inspect instruction based on character values above 128.</item>
			<item>Fixed bug in 
				<code>
					<feature_name>copy</feature_name>
				</code> from 
				<code>
					<class_name>STRING</class_name>
				</code> where following code was violating <code><feature_name>valid_count</feature_name></code> invariant from 
				<code>
					<class_name>STRING</class_name>
				</code>: 
				<code_block>
<keyword>local</keyword>
	s, t: <class_name>STRING</class_name>
<keyword>do</keyword>
	<keyword>create</keyword> s.<feature_name>make</feature_name> (9)
	<keyword>create</keyword> t.<feature_name>make</feature_name> (10) 
	t.<feature_name>append</feature_name> ("1234567890") 
	s.<feature_name>copy</feature_name> (t)
<keyword>end</keyword></code_block>
			</item>
			<item>Fixed incorrect C file naming when generating a .NET system that uses a C++ external (it should be .cpp, not just .c).</item>
			<item>Enabled support for Borland C compiler in .NET.</item>
			<item>Fixed issue where generating documentation for all/library cluster would stop during generation without completing.</item>
			<item>Fixed crash in diagram tool when moving label on client/supplier link between two classes.</item>
		</list>
		<heading>
			<size>3</size>Version 5.2.1123:
		</heading>
		<list ordered="false">
			<item>Fixed issue when inheriting a .NET class that has some static constants defined.</item>
		</list>
		<heading>
			<size>3</size>Version 5.2.1122:
		</heading>
		<list ordered="false">
			<item>Fixed issue when opening the about dialog of EiffelStudio.</item>
			<item>Enabled EiffelStudio for all users on a machine, not just for the one installing EiffelStudio.</item>
		</list>
		<heading>
			<size>3</size>Version 5.2.1118:
		</heading>
		<list ordered="false">
			<item>First initial release of EiffelStudio 5.2</item>
		</list>
		<paragraph>
			<link>
				<url>Eiffel51.xml</url>
				<label>Click here to check out what was new in Eiffel 5.1</label>
			</link>
		</paragraph>
		<paragraph>
			<link>
				<url>Eiffel50.xml</url>
				<label>Click here to check out what was new in Eiffel 5.0</label>
			</link>
		</paragraph>
	</paragraph></document>
