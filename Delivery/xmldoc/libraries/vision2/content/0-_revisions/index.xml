<document title="Revisions and Bug Fixes">
	<meta_data>
		<help>
			<toc>
				<envision_location>Class Libraries\EiffelVision 2\EiffelVision Interface Content</envision_location>
			</toc>
		</help>
	</meta_data>
	<paragraph>
		<paragraph>This document contains details of modifications and bug fixes to the vision2 library listed by the release version of EiffelStudio. All bug fixes and modifications are relative to the previously released version.</paragraph>
		<heading>
			<size>2</size> EiffelStudio 5.6
		</heading>
		<paragraph>
			<bold>Interface modifications</bold>
		</paragraph>
		<list ordered="false">
			<item>
				<bold>EV_POPUP_WINDOW</bold> - A new window type which inherits EV_WINDOW with two differences: It does not display a border of any sorts and is not displayed in the task bar. This is especially useful for simulating tooltips and other such pop-ups.
			</item>
			<item>
				<bold>EV_APPLICATION</bold> - Added 'uncaught_exception_actions' which is called whenever an action sequence called from the underlying toolkit fails to deal with any exceptions raised.
			</item>
			<item>
				<bold>EV_CLIPBOARD</bold> - Added 'has_text' so that the clipboard can be queried without retrieving the entire contents.
			</item>
			<item>
				<bold>EV_CHECKABLE_TREE</bold> - A new widget that inherits EV_TREE, providing similar functionality but for each item contained a check box is displayed.
			</item>
			<item>
				<bold>EV_NOTEBOOK</bold>
				<list ordered="false">
					<item>Added `pointed_tab_index' which returns the index of the tab beneath the mouse pointer or 0 if none.</item>
					<item>Added EV_NOTEBOOK_TAB which may be queried via the new query `item_tab'. The object represented by this new class provides the ability to set both the text and a pixmap for the tab item.</item>
					<item>Now inherits EV_ITEM_PIXMAP_SCALER as the tabs support pixmaps through the use of EV_NOTEBOOK_TAB.</item>
				</list>
			</item>
			<item>
				<bold>EV_COMBO_BOX</bold> - Added `drop_down_actions', fired as the list is dropped down which permits dynamic filling of the combo box as its contents are displayed.
			</item>
			<item>
				<bold>EV_WIDGET</bold> - Removed postcondition `has_focus' from `set_focus' since in most cases it does not hold. Indeed between the time you set the focus and the time you check if you still have the focus something could have happen that would remove the focus.
			</item>
			<item>
				<bold>EV_PIXMAP</bold> - Added `sub_pixmap', this allows a pixmap to be created from a region of another
			</item>
			<item>
				<bold>EV_RICH_TEXT</bold> - Corrected postcondition of `buffered_format' which restricted the end position to `text_length' instead of `text_length' + 1.
			</item>
			<item>
				<bold>EV_FILE_OPEN_DIALOG</bold> - Added features for retrieving multiple file names. The following additional features are now available: 'enable_multiple_selection', `disable_multiple_selection', `multiple_selection_enabled' and `file_names'.
			</item>
			<item>
				<bold>EV_TEXT_COMPONENT</bold> - Removed `is_editable' precondition of `set_caret_position'.
			</item>
		</list>
		<paragraph>
			<bold>Bug fixes</bold>
		</paragraph>
		<list ordered="false">
			<item>
				<bold>Platform independent</bold>
				<list ordered="false">
					<item>
						<bold>EV_DIALOG_I</bold> - Fixed consistency of `default_push_button', before we could get some assertions violations from the implementation classes.
					</item>
					<item>
						<bold>EV_ANY</bold> - Added protection for multiple calls of `destroy' which previously caused crashes in some situations, now `destroy' calls a `safe_destroy' intermediary which checks if the implementation has not already been destroyed
					</item>
				</list>
			</item>
			<item>
				<bold>Windows</bold>
				<list ordered="false">
					<item>Fixed resizing issue: when a widget is inserted in a hidden window and that the minimum size of the window does not change, the widget would not appear on the window when shown. One had to manually resize the window to make it appear. Now it will appear properly.</item>
					<item>Fixed a crash which could occur when using the tab or arrows keys to navigate between the primitive of a window. It would happen when trying to set the focus on a widget which was previously parented but is not anymore.</item>
					<item>Improved appearance of applications running on Windows XP with manifest files.</item>
					<item>
						<bold>EV_RADIO_BUTTON</bold> - Enabled better navigation between radio buttons of a group using the arrow keys.
					</item>
					<item>
						<bold>EV_SPIN_BUTTON</bold>
						<list ordered="false"> 
							<item>When it gets the focus, we set the focus to the associated text field. Before one would loose the focus until one use the mouse to set it to the text field part.</item>
							<item>Fixed bug which restricted the maximum values permitted to approx. 16,000. Attempting to manipulate the spin button with values greater than this caused precondition violations internally.</item>
						</list>
					</item>
					<item>
						<bold>EV_SCREEN</bold>
						<list ordered="false">
							<item>`widget_at_position' returns an instance of EV_COMBO_BOX when cursor is on top of the text part of the combo box, before it would return Void.</item>
							<item>`set_pointer_position' was not setting the position accurately and it may have actually been set to one of the adjacent positions.</item>
						</list>
					</item>
					<item>
						<bold>EV_COMBO_BOX</bold>
						<list ordered="false">
							<item>`focus_out_actions' are only called once when loosing focus. Before they would be called twice and even called when the combo box was getting the focus.</item>
							<item>Fixed `has_focus' to return True when either the combo or the text field when it exists has the focus.</item>
							<item>Fixed call on Void target when calling `set_foreground_color' on a displayed combo box which is not editable.</item>
							<item>Fixed invariant violation with a non editable combo box.</item>
							<item>Fixed `caret_position' which was failing if you attempted to set a caret position to a value greater than approx 65,000.</item>
						</list>
					</item>
					<item>
						<bold>EV_MULTI_COLUMN_LIST</bold> - Calling `column_width' after calling `resize_column_to_content' did not return the correct result but instead the previously set column width.
					</item>
					<item>
						<bold>EV_NOTEBOOK</bold>
						<list ordered="false">
							<item>Fixed resizing issue of notebook when it is included in a hidden pane of another notebook, resulting in an assertion violation in the resizing code.</item>
							<item>Fixed class invariant which failed when calling `destroy'.</item>
						</list>
					</item>
					<item>
						<bold>EV_DIALOG</bold> 
						<list ordered="false"> 
							<item>Calling `show', moving the window and then subsequently calling `show_relative_to_window' or `show_modal_to_window' caused the dialog to move from its current position. Now the window no longer moves which mirrors the behavior in the opposite case where `show_relative_to_window' or `show_modal_to_window' is called before `show'.</item>
							<item>Fixed bug which caused processing of particular keys in widgets contained within the dialog to be processed by the dialog preventing the `key_press_actions' from being fired and causing miscellaneous keyboard navigational issues.</item>
							<item>Proper handling of `remove_default_push_button' and `set_default_push_button'. Before the internal state would be messed up, resulting in calling the `select_actions' of the the `default_push_button' even though the `default_push_button' did not have focus.</item>
							<item>Better navigation using keys</item>
						</list>
					</item>
					<item>
						<bold>EV_TREE_NODE</bold> - Fixed bug which caused a crash if you performed the following: pruned a node from it's parent, pruned an empty node from this just pruned node and then attempted to insert a node within the empty node.
					</item>
					<item>
						<bold>EV_DIRECTORY_DIALOG</bold> - Fixed bug in which the dialog always reported that "ok" has been selected even if the "cancel" button had been selected. This occurred if the dialog  had been shown more than once with "ok" already selected.
					</item>
					<item>
						<bold>EV_PIXMAP</bold>
						<list ordered="false">
							<item>Fixed color displayed around a pixmap while parented in a container. Previously, gray was always displayed but now we use the `background_color' of the `parent'.</item>
							<item>Fixed masking blitting in draw_sub_pixmap.  Previously the mask wasn't being blitted correctly discoloring the source image</item>
							<item>Fixed mask handling with PNG loading.  Previously if the source image pixels under the mask were not black then masking for icons and cursors didnt work correctly, now any color can be used underneath the mask and it will still be masked correctly</item>
						</list>
					</item>
					<item>
						<bold>EV_TOOL_BAR</bold>
						<list ordered="false">
							<item>Fixed `is_show_requested'  which was still returning `True' after a call to  `hide'.</item>
							<item>Improved resizing of tool bar buttons. A tool bar button with  a text and no associated pixmap used to display an empty area where the pixmap would be displayed if set. Now, in this case,  the button is just large enough to  display its text.</item>
						</list>
					</item>
					<item>
						<bold>EV_FONT</bold> - Fixed bug in `is_equal' which occasionally failed due to rounding errors between `height' and `height_in_points'. Now, `is_equal' compares `height_in_points' for the font which is more accurate and prevents this issue.
					</item>
					<item>
						<bold>EV_APPLICATION</bold> - `cancel_actions' were not always called when they should have been. If you cancelled  a pick and drop by right clicking on a target that does not accept the `pebble', the `cancel_actions' were not fired.
					</item>
					<item>
						<bold>EV_RICH_TEXT</bold> - Fixed bug in `buffered_format' which corrupted the current text upon calling `flush_buffer' if the text contained any RTF reserved characters such as '/', '{' or '}'.
					</item>
					<item>
						<bold>EV_TOOL_BAR_BUTTON</bold> - Fixed bug in handling of enabled/disabled state during a pick and drop transport. The pick and drop mechanism disables tool bar buttons automatically that are not valid targets. If you called `enable_sensitive' or `disable_sensitive' during a pick  and drop, this state was not reflected at the end of the pick and drop and the buttons were always restored to their original state. Now the buttons are restored to their last set state.
					</item>
					<item>
						<bold>EV_TITLED_WINDOW</bold> - Fixed issue with `raise' where in addition of bringing the window to the front it was changing the previously focused widget within that window. Now it preserves the previously focused widget.
					</item>
					<item>
						<bold>EV_PRIMITIVE</bold> - Fixed bug which affected all primitives that hold items. Calling `destroy' on the primitive and then calling `destroy' on one of the items caused precondition violations internally. The bug was that the call to `destroy' on the primitive did not call `wipe_out' to remove all of the contents and the item was still attempting to access its `parent' which should have been `Void'.
					</item>
					<item>
						<bold>EV_WIDGET</bold> 
						<list ordered="false">
							<item>Fixed two bugs with `key_press_string_actions'. The first was that the action sequence was fired when Escape or Backspace was pressed. As these are not displayable characters, the `key_press_string_actions' are no longer fired for these keys. The second is that pressing Enter was passing the the string "%R" which is the Windows specific newline character. We now pass "%N" when the Enter key is pressed.</item>
							<item>Fixed bug in `pointer_motion_actions'. In some uncommon situations, it was possible to receive the motion event multiple times with the same position.</item>
						</list>
					</item>
					<item>
						<bold>EV_TEXT</bold> - Fixed bug where `caret_position' was returning an incorrect value if it the text had word wrapping enabled and one or more lines in the text were currently word wrapped.
					</item>
				</list>
			</item>
			<item>
				<bold>Gtk</bold>
				<list ordered="false">
					<item>
						<bold>EV_CURSOR</bold> - Now the default X-Cursors are used where applicable instead of pixmapped representations of them, this allows for animated cursors if available on the X-server
					</item>
					<item>
						<bold>EV_VIEWPORT</bold> - Fixed issue where offsets where not being updated right away so querying back to the viewport from an expose caused by the viewport for the values would be incorrect
					</item>
					<item>
						<bold>EV_TEXTABLE</bold> - Now UTF8 strings from different language locales are displayed correctly and not cut-off
					</item>
					<item>
						<bold>EV_CLIPBOARD</bold> - Now UTF8 strings from different language locales are handled correctly for copying and pasting
					</item>
					<item>
						<bold>EV_DRAWING_AREA</bold> - Fixed `flush' to instantly call any pending expose events
					</item>
					<item>
						<bold>EV_FONT</bold>
						<list ordered="false">
							<item> Fixed memory leaks in font lookup</item>
							<item>Now all resources get freed on disposal of font</item>
							<item>Now precalculating `ascent' and `descent' to improve drawing performance</item>
							<item>Added better default font handling, now if the default font gets passed in, it will be treated as such by the Gtk theme engine</item>
						</list>
					</item>
					<item>
						<bold>EV_TOOL_BAR_BUTTON</bold> - Improve appearance of text and pixmap when `disable_vertical_button_style' is called
					</item>
					<item>
						<bold>EV_FONTABLE</bold> - Improved font handling with theme manager, all default fonts now relate to the Application font chosen from the Gtk theme manager
					</item>
					<item>
						<bold>EV_DRAWABLE</bold> 
						<list ordered="false">
							<item>Corrected font placement with `draw_text' using fonts of the same height that have varying ascent values</item>
							<item>Corrected `draw_arc' to handle all radian angles for both start_angle and aperture values</item>
							<item>Fixed mask handling for `draw_sub_pixmap' to work with non-zero 'area' coordinates</item>
						</list>
					</item>
					<item>
						<bold>EV_MULTI_COLUMN_LIST</bold> - Fixed memory leak when setting string values
					</item>
					<item>
						<bold>EV_TREE_NODE</bold>
						<list ordered="false"> 
							<item>Fixed `remove_pixmap' to remove pixmap from tree model</item>
							<item>Fixed crash when removing nodes from parent nodes not present in a tree widget</item>
						</list>
					</item>
					<item>
						<bold>EV_RICH_TEXT</bold>
						<list ordered="false">
							<item> Now `paste' uses the Vision2 clipboard directly and so all clipboard assertions are fulfilled</item>
							<item>Fixed `buffered_format' to not wipe out the text buffer of the widget and therefore stop other EV_TEXT features from functioning correctly</item>
							<item>Now `buffered_append' doesn't wipe out the screen contents of the rich text control</item>
						</list>
					</item>
					<item>
						<bold>EV_ACCELERATOR</bold> - Now the key accelerator is checked if valid before proceeding, in some circumstances when a key is not present in the key mapping table adding an accelerator would crash the system, now if the accelerator is not valid for the current key mapping then nothing is done
					</item>
					<item>
						<bold>EV_WINDOW</bold> - Now setting and querying focus works in all circumstances with all window types
					</item>
					<item>
						<bold>EV_PIXMAP</bold> - Improved pixmap 'stretch' for smaller images
					</item>
					<item>
						<bold>EV_WIDGET</bold>
						<list ordered="false">
							<item>Optimized motion event handling so that current motion events only get requested when the previous one has been processed</item>
							<item>Fixed theme managed handling in all widgets so that fonts when changed outside of the application by the theme manager get reflected in the Vision2 application</item>
						</list>
					</item>
				</list>
			</item>
		</list>
		<heading>
			<size>2</size> EiffelStudio 5.5
		</heading>
		<paragraph>
			<bold>Interface modifications</bold>
		</paragraph>
		<list ordered="false">
			<item>
				<bold>EV_TEXT</bold>
				<list ordered="false">
					<item>Weakened a number of preconditions that required a non empty final line, which was unnecessary. Removed the obsolete feature `put_new_line' and made `last_line_not_empty' obsolete as it is unnecessary and can be queried via `line'.</item>
					<item>Added `line_number_from_position' which returns the line on which a particular caret position resides.</item>
				</list>
			</item>
			<item>
				<bold>EV_ACTIVE_LIST</bold> - New class added which replaces all occurrences of ACTIVE_LIST within the interface. This prevents the EiffelVision implementation from being "unhooked" by user modification through the interface. The class is completely backwards compatible, and does not require any modifications to your code. Classes such as EV_ACCELERATOR_LIST and EV_FONT incorporate this change.
			</item>
			<item>
				<bold>EV_DOCKABLE_SOURCE</bold> - Added features `is_external_docking_relative', `enable_external_docking_relative' and `disable_external_docking_relative'. This permits you to dock a source to an EV_DOCKABLE_DIALOG that is not displayed relative to the original top window.
			</item>
			<item>
				<bold>EV_RICH_TEXT</bold> - New class, providing a text control with support for character formatting and colors on a character by character basis. The following supporting classes have been added for use with EV_RICH_TEXT:  EV_CHARACTER_FORMAT, EV_CHARACTER_FORMAT_EFFECTS, EV_PARAGRAPH_FORMAT, EV_CHARACTER_FORMAT_RANGE_INFORMATION, EV_PARAGRAPH_FORMAT_RANGE_INFORMATION and EV_PARAGRAPH_CONSTANTS.
			</item>
			<item>
				<bold>EV_ENVIRONMENT</bold> - Added `fonts' which returns a list of all fonts available on the system.
			</item>
			<item>
				<bold>EV_APPLICATION</bold> - Added `captured_widget' which returns the EV_WIDGET currently captured in the system, or `Void' if none.
			</item>
			<item>
				<bold>EV_SPLIT_AREA</bold> - Added `splitter_width' which returns the width of the splitter in pixels.
			</item>
			<item>
				<bold>EV_ANY_HANDLER</bold> - This is the only class to which `default_create' from EV_ANY is supposed to be exported. However, particular descendents were exporting `default_create' to ANY instead. This has now been fixed.
			</item>
			<item>
				<bold>EV_MESSAGE_DIALOG</bold> - `make_with_text_and_actions' has now been added to the list of creation procedures.
			</item>
			<item>
				<bold>EV_SCREEN</bold> - Added `horizontal_resolution' and `vertical_resolution' which return the number of pixels per inch.
			</item>
			<item>
				<bold>EV_FILE_DIALOG</bold> - Added support for multiple file extensions through the addition of `filters' which provides support for setting both a filter and an associated comment. The existing features `filter' and `set_filter' have been made obsolete.
			</item>
			<item>
				<bold>EV_FONT</bold>
				<list ordered="false">
					<item>Modified return type of `string_size' from TUPLE [INTEGER, INTEGER] to TUPLE [INTEGER, INTEGER, INTEGER, INTEGER]. This does not break any existing code, but provides additional `left_offset' and `right_offset' queries (items 3, 4). Items 1, 2 still return the width and height of the string, but this is only the dimensions to be used when placing multiple strings next to each other. Some characters on more exotic fonts may still extend past this boundary, and the rectangle that fully encloses the string is given by adding the left and right offsets to the width.</item>
					<item>Added `height_in_points' and `set_height_in_points' for setting the height of a font in points (1/72 of an inch). This may be used to ensure that your fonts occupy the same height on screens with varying resolutions.</item>
				</list>
			</item>
		</list>
		<paragraph>
			<bold>Bug fixes</bold>
		</paragraph>
		<list ordered="false">
			<item>
				<bold>Platform independent</bold>
				<list ordered="false">
					<item>
						<bold>EV_DRAWABLE</bold> - `draw_text' and `draw_text_top_left' now both support text containing new line characters.
					</item>
					<item>
						<bold>EV_APPLICATION</bold> - `focused_widget' had a side effect which may modify the index of some containers.
					</item>
					<item>
						<bold>EV_DYNAMIC_TREE_ITEM</bold> - fixed `count' which was not executing the subtree function as necessary when called.
					</item>
					<item>
						<bold>EV_TREE</bold> - Fixed bug in `has_recursively' which failed if there were one or more dynamic tree items contained.
					</item>
					<item>
						<bold>EV_MULTI_COLUMN_LIST</bold> - Fixed bug in `set_column_alignments' which crashed if you called it with an empty list after having previously called it with a non empty list.
					</item>
					<item>
						<bold>EV_FIGURE_TEXT</bold> - Fixed bounding size issues which would cause the `width' and `height' to be returned incorrectly, causing them to be not correctly cleared when moved in a figure world.
					</item>
					<item>
						<bold>EV_FIGURE_GROUP</bold> - Fixed both `append' and `make_from_array' which were not setting the `group' of each item inserted.
					</item>
				</list>
			</item>
			<item>
				<bold>Windows</bold>
				<list ordered="false">
					<item>
						<bold>EV_WINDOW</bold> 
						<list ordered="false">
							<item>`move_actions' was always passing positive values for the x and y coordinates of the window, even if they should have been negative.</item>
							<item>Showing two or more dialogs relative to a window and then hiding the focused relative dialog could cause the window to move being the next window in the Z order. This has now been fixed.</item>
						</list>
					</item>
					<item>
						<bold>EV_FONT</bold>
						<list ordered="false">
							<item>Fixed bug when using `preferred_families' after creating a font via `make_with_values'. The family that was specified was previously ignored.</item>
							<item>Fixed bug in `copy' which in certain cases could lead to a copied font not exhibiting the typeface as the original, even though no assertions were violated.</item>
						</list>
					</item>
					<item> 
						<bold>EV_SCROLL_BAR</bold> - Fixed handling of scroll bars with upper values greater than 32,000. Previously, dragging the bar of a scroll bar past this limit, corrupted the position of the bar and the `value'.
					</item>
					<item>
						<bold>EV_TEXT</bold>
						<list ordered="false">
							<item>Corrected `last_position_from_line_number' which was returning an incorrect position when there were multiple lines of text contained, and you queried the final line.</item>
							<item>Modified `insert_text' so that the control is no longer scrolled to the top as a result. The original position is now maintained wherever possible.</item>
							<item>Corrected handling of selection for caret positions greater than 64,000 characters. The following features were broken when using caret positions greater than 64,000: `caret_position', `has_selection', `selection_start' and `selection_end'</item>
						</list>
					</item>
					<item>
						<bold>EV_SPIN_BUTTON</bold>
						<list ordered="false"> 
							<item>Corrected positioning in parent container. In many situations, the spin button mis-behaved and would be moved to the 0x0 pixel position in the parent.</item>
							<item>Fixed tooltips which were never displayed.</item>
						</list>
					</item>
					<item>
						<bold>EV_LIST_ITEM</bold> - Setting a pixmap to an item that was already displayed in a list and had a text would cause the end of the text to be cut off. This is now fixed.
					</item>
					<item>
						<bold>EV_COMBO_BOX</bold> - Fixed tooltips which were  never displayed.
					</item>
					<item>
						<bold>EV_TOOL_BAR</bold> - Fixed a number of serious GDI leaks, the worst of which occurred when items that had a pixmap were removed from a tool bar.
					</item>
					<item>
						<bold>EV_PROGRESS_BAR</bold> - Fixed bug which was limiting values in the range 0 to 65535. 
					</item>
					<item>
						<bold>EV_TEXT_FIELD</bold> - calling `set_font' now updates the `minimum_height' of the text field so that it is large enough to completely display the font.
					</item> 
				</list>
			</item>
			<item>
				<bold>Gtk</bold>
				<list ordered="false">
					<item>
						<bold>GTK 2.4</bold> EiffelVision 2 has been completely upgraded from gtk 1.2 to version 2.4 and provides completely new implementations for EV_LIST, EV_COMBO_BOX, EV_FILE_DIALOG, EV_MULTI_COLUMN_LIST, EV_CLIPBOARD, EV_MENU, EV_TREE, EV_FONT, EV_PIXMAP using the latest gtk widget set
					</item>
					<item>
						<bold>EV_WIDGET</bold> Fixed a screen positioning for all widgets
					</item>
					<item>
						<bold>EV_GAUGE</bold> Fixed bounds setting
					</item>
					<item>
						<bold>EV_DIALOG</bold> Now key presses work whilst in Pick and Drop
					</item>
					<item>
						<bold>EV_WIDGET</bold> Now motion events pass x and y coordinates relative to the captured widget
					</item>
				</list>
			</item>
		</list>
		<heading>
			<size>2</size> EiffelStudio 5.4
		</heading>
		<paragraph>
			<bold>Interface modifications</bold>
		</paragraph>
		<list ordered="false">
			<item>
				<bold>EV_ITEM_PIXMAP_SCALER</bold> - New class added which provides no new functionality, but is a clean abstraction of `pixmaps_width', `pixmaps_height' and `set_pixmaps_size' which were all defined independently in EV_TREE, EV_LIST, EV_MULTI_COLUMN_LIST and EV_COMBO_BOX. Your code will not be affected by this change.
			</item>
			<item>
				<bold>EV_TOOL_BAR</bold> - Added three new features `has_vertical_button_style', `enable_vertical_button_style' and `disable_vertical_button_style'. The default style for buttons is vertical and was the only style previously available, in which the `pixmap' is displayed above `text'. When vertical style is disabled, the `pixmap' of a button will be displayed to the left of its `text'.
			</item>
			<item>
				<bold>EV_TREE </bold> - No longer inherits EV_TREE_NODE_CONTAINER which is now obsolete. Made `selected' obsolete, use selected_item /= Void instead.
			</item>
			<item>
				<bold>EV_TREE_NODE</bold> - Now inherits EV_TREE_NODE_LIST instead of EV_TREE_NODE_CONTAINER. This provides more functionality at the level of the node, but does not change the features available in non deferred descendents, as they all previously inherited EV_TREE_NODE_LIST. Changed type of `parent' to EV_TREE_NODE_LIST from EV_TREE_NODE_CONTAINER. Removed three obsolete features - `align_text_left', align_text_center' and `align_text_right'.
			</item>
			<item>
				<bold>EV_TREE_ITEM</bold> - Strengthened `is_expandable' so that it checks `parent_tree' is not Void, this brings it into line with the preconditions of `expand'.
			</item>
			<item>
				<bold>EV_DYNAMIC_TREE_ITEM</bold> - Strengthened `is_expandable' to check `parent_tree', in line with preconditions of `expand'. Added "valid_operands" precondition to `set_subtree_function' which ensures that you only pass a function with valid operands.
			</item>
			<item>
				<bold>EV_TREE_NODE_CONTAINER</bold> - Now obsolete, you should use EV_TREE_NODE_LIST instead.
			</item>
			<item>
				<bold>EV_MULTI_COLUMN_LIST</bold> - Added missing postconditions to `align_text_left', `align_text_right', `align_text_center' and other miscellaneous features that were missing relevant postconditions.
			</item>
			<item>
				<bold>EV_MENU</bold> - Tightened preconditions of `show' and `show_at' to ensure that the menu is not parented.
			</item>
			<item>
				<bold>EV_TEXT</bold> Added `has_word_wrapping', `enable_word_wrapping' and `disable_word_wrapping'. These features allow you to switch between horizontal word wrapping, in which lines too long to be displayed will be wrapped, and no word wrapping, in which horizontal scroll bars will be displayed, allowing you to view the complete contents of each line. Previously EV_TEXT would always wrap lines, and the default behavior is `has_word_wrapping' as it was before these changes.
			</item>
			<item>
				<bold>EV_TEXT_COMPONENT</bold> - Added `has_selection' precondition to `selected_text' which requires that `has_selection' must be True for you to call `selected_text'.
			</item>
			<item>
				<bold>EV_FILE_DIALOG</bold> - Added `valid_file_title' for validation of a file name excluding the path.
			</item>
			<item>
				<bold>EV_STANDARD_DIALOG</bold> - Corrected postcondition of `make_with_text' which was checking that `text' was the same object as the STRING passed as an argument. This was incorrect, as `text' is cloned during the creation.
			</item>
			<item>
				<bold>EV_WIDGET</bold> - Added `remove_real_target' which ensures that `real_target' is Void.
			</item>
			<item>
				<bold>EV_WIDGET_ACTION_SEQUENCES</bold> - Added `mouse_wheel_actions', fired each time that the mouse wheel is scrolled.
			</item>
			<item>
				<bold>EV_NOTEBOOK</bold> - Now inherits EV_FONTABLE permitting a font to be applied to the item texts.
			</item>
			<item>
				<bold>EV_ENVIRONMENT</bold>
				<list ordered="false">
					<item> Added `mouse_wheel_scroll_lines' which returns an INTEGER corresponding to the  number of lines that should be scrolled in response to each mouse wheel scroll  event received.</item>
					<item>  Added `has_printer' which returns `True' if at least one printer is installed.</item>
				</list>
			</item>
			<item>
				<bold>EV_PRINT_CONTEXT</bold> - Added `horizontal_resolution' and `vertical_resolution' which return the page size in pixels of the page type selected from an EV_PRINT_DIALOG. This permits you to adjust the figure world you are printing to an EV_PRINT_PROJECTOR based on the limits of the page, as determined by `horizontal_resolution' and `vertical_resolution' in pixels.
			</item>
			<item>
				<bold>EV_APPLICATION</bold> - Added `process_events_until_stopped' and `stop_processing', similar to `process_events', except the processing is executed until `stop_processing' is called.
			</item>
			<item>
				<bold>EV_PRINT_PROJECTOR</bold> - Added `has_printer' check to `make_with_context', ensuring that if you are to print to a printer, at least one printer is available.
			</item>
			<item>
				<bold>EV_PRINT_CONTEXT</bold> - `default_create' now initializes a set of standard values, permitting the printing to the default printer, using US letter size.
			</item>
			<item>
				<bold>EV_RELATIVE_POINT</bold> - The features `set_x_abs', `set_y_abs', `set_angle_abs', `set_scale_x_abs' and `set_scale_y_abs' now all have a precondition ensuring that you may only call them while `being_positioned' is True, which is only the case during execution of a custom positioning agent. Previously, if they were called at other times, the values set would be overridden.
			</item>
			<item>
				<bold>EV_FIGURE</bold> - `accept_cursor' and `deny_cursor' are now available as queries.
			</item>
			<item>
				<bold>EV_ABSTRACT_PICK_AND_DROPABLE</bold> - `set_accept_cursor' and `set_deny_cursor' no longer accept `Void' arguments.
			</item>
			<item>
				<bold>EV_FIGURE_MATH </bold> - 'line_angle' now correctly returns the angle in radians relative to world.
			</item>
			<item>
				<bold>EV_ARROWED_FIGURE</bold> - 'start_angle' and 'end_angle' now work in all circumstances
			</item>
			<item>
				<bold>EV_FIGURE_STAR</bold> - First line generated is now created from 'point_b'
			</item>
			<item>
				<bold>EV_FIGURE_EQUILATERAL</bold> - First point generated is now based  upon 'point_b'
			</item>
		</list>
		<paragraph>
			<bold>Breaking changes</bold>
		</paragraph>
		<list ordered="false">
			<item>
				<bold>EV_TREE_NODE_CONTAINER</bold> - This class is no longer used in EiffelVision2,  and if you were relying on it, you should use EV_TREE_NODE_LIST instead. The  type of `parent' for tree nodes has been changed from EV_TREE_NODE_CONTAINER to  EV_TREE_NODE_LIST, so if you retrieve the `parent' and then attempt to iterate,  you may have declared an instance of EV_TREE_NODE_CONTAINER. In this situation,  you should simply change the definition to EV_TREE_NODE_LIST instead.
			</item>
		</list>
		<paragraph>
			<bold>Bug fixes</bold>
		</paragraph>
		<list ordered="false">
			<item>
				<bold>Platform independent</bold>
				<list ordered="false">
					<item>
						<bold>EV_DYNAMIC_TREE_ITEM</bold> - No longer crashes if your `subtree_function' returns Void. In this situation,  it will now behave as if the `Result' was empty.
					</item>
					<item>
						<bold>EV_BOX</bold> - Attempting to dock from an EV_DOCKABLE_SOURCE while the box was empty would  not work. This has now been fixed.
					</item>
					<item>
						<bold>EV_TEXT_COMPONENT</bold> - Calling `append_text', `prepend_text' or `insert_text' while `is_editable' is  False caused a precondition failure in the implementation which is now fixed.
					</item>
					<item>
						<bold>EV_DOCKABLE_SOURCE</bold>
						<list ordered="false">
							<item>  It was previously not possible to dock to an empty window, as the target was  ignored in error.</item>
							<item>  Fixed bug which caused a crash if a dock was attempted to an empty box.</item>
						</list>
					</item>
					<item>
						<bold>EV_CHECKABLE_LIST</bold> - Corrected postcondition of `checked_items' which was checking  `selected_items' in error, and therefore almost always failing.
					</item>
					<item>
						<bold>EV_APPLICATION</bold> - Querying `focused_widget' if the window with the focus was empty caused a  crash. This has now been fixed, and in this situation, the window itself is  returned.
					</item>
					<item>
						<bold>EV_FIGURE_TEXT</bold> - Fixed handling of `preferred_fonts' from the `font', which was not taken into  account. Previously, the default font was always used.
					</item>
					<item>
						<bold>EV_DYNAMIC_LIST</bold> - Fixed `retrieve_item_by_data' and `retrieve_items_by_data' which were always  performing object comparison, even when reference comparison was selected by  passing `False' as the second argument.
					</item>
					<item>
						<bold>EV_TREE_NODE_LIST</bold> - Fixed `retrieve_item_recursively_by_data' and  `retrieve_items_recursively_by_data' which were always performing object  comparison, even when reference comparison was selected by passing `False' as  the second argument.
					</item>
					<item>
						<bold>EV_CONTAINER</bold> - Fixed bug in `unmerge_radio_button_groups' which would  crash if the container had no radio buttons.
					</item>
				</list>
			</item>
			<item>
				<bold>Windows</bold>
				<list ordered="false">
					<item>
						<bold>EV_TEXT_COMPONENT</bold> - fixed bug in `select_region' which would fail if `start_pos' was greater than  `end_pos'.
					</item>
					<item>
						<bold>EV_PIXMAP</bold>
						<list ordered="false">
							<item>  `expose_actions' previously had a feature contained related to the  implementation, and calling `wipe_out' on `expose_actions' would stop the image  from being redrawn. There are now no side effects related to `expose_actions'.</item>
							<item>  Calling `copy' on a pixmap that was parented in an EV_CONTAINER, and therefore  displayed on screen had no visual effect until the window was re-painted. The  image is now updated immediately. Also, using `copy' on a pixmap in a similar  situation that was originally set with a masked icon, and passing a pixmap  created from a bitmap file would cause a crash.</item>
							<item>  Fixed display error in handling of pixmaps created from a PNG with a   transparent color, using `set_with_named_file'. The background would be garbled   and partially black.</item>
						</list>
					</item>
					<item>
						<bold>EV_LIST</bold>
						<list ordered="false">
							<item>  Calling `disable_sensitive' when already non sensitive would loose the original  selection, and calling `enable_sensitive' when already sensitive would alter  the selected item. The features will no longer alter the selection if called  twice.</item>
							<item>  Fixed result of `background_color' which was returning gray instead of white   before a color was assigned</item>
						</list>
						<bold>EV_CELL</bold> - If you removed the item, the minimum size was not updated to reflect this,  thereby retaining the minimum size as constrained by the minimum size of the  now removed item.
					</item>
					<item>
						<bold>EV_TREE_ITEM</bold>/ 
						<bold>EV_TREE</bold> - A call to `disable_select' on an EV_TREE_ITEM will now actually remove the  selection from the tree. Previously, the style of the item was changed, but a  call to `selected_item' on the tree would still return the item.
					</item>
					<item>
						<bold>EV_FILE_DIALOG</bold> - Fixed precondition violation when you calling `set_file_name' which was  rejecting directory separators.
					</item>
					<item>
						<bold>EV_DIALOG</bold> - Fixed a bug when you had two dialogs displayed modally, with the second modal  to the first. If you had a text field within the second dialog whose  `return_actions' contained an agent which would destroy the second dialog, the  `select_actions' of the `default_push_button' in the lower dialog would be  subsequently fired.
					</item>
					<item>
						<bold>EV_LABEL</bold> - If a label was disabled through the disabling of a container in which it was  contained, it would sometimes not be grayed out. This has now been fixed.
					</item>
					<item>
						<bold>EV_PICK_AND_DROPABLE</bold>
						<list ordered="false">
							<item>  `mode_is_target_menu' did not work for a pick and drop source whose `pebble'  was generated by a `pebble_function'.</item>
							<item>  Fixed bug where drag and drop was not working as it was attempting to perform   docking instead. If both are enabled, docking has priority.</item>
						</list>
					</item>
					<item>
						<bold>EV_COMBO_BOX_IMP</bold>
						<list ordered="false">
							<item>  Fixed `set_foreground_color' and `set_background_color' which previously did  nothing.</item>
							<item>  Fixed bug in selection. If during execution of the `select_actions' of an item  contained, you called `enable_select' on another item within the combo box,  subsequently selecting the originally selected item would no longer fire its  `select_actions'.</item>
							<item>  `enable_edit' and `disable_edit' were both causing the pixmaps of any items   contained to be no longer displayed.</item>
						</list>
					</item>
					<item>
						<bold>EV_PRINT_DIALOG</bold> - Querying `print_context' from a print dialog if a user selected "Cancel"  would previously crash.
					</item>
					<item>
						<bold>EV_TREE</bold> and 
						<bold>EV_MULTI_COLUMN_LIST</bold> - Fixed result of `background_color' which was returning gray instead of white  before a color was assigned
					</item>
					<item>
						<bold>EV_SCREEN</bold> - `widget_at_pointer_position' now returns the combo box if  the mouse pointer is held above the drop down list button of a combo box.  Previously, `Void' was returned.
					</item>
				</list>
			</item>
			<item>
				<bold>Gtk</bold>
				<list ordered="false">
					<item>
						<bold>EV_TREE_NODE</bold> - Now expansion state remains the same when 'set_pixmap' is called.
					</item>
					<item>
						<bold>EV_DIALOG</bold> - Fixed bug where 100 percent of CPU time was being used when dialog was shown  modally.
					</item>
					<item>
						<bold>EV_WINDOW</bold> - Now sizing invariants are fulfilled when widget is destroyed, preventing  segmentation violation.
					</item>
					<item>
						<bold>EV_COMBO_BOX</bold>
						<list ordered="false">
							<item>  Fixed bug where reselecting an item within the combo box list was in fact  deselecting it.</item>
							<item>  Now first item remains selected when items are added.</item>
						</list>
					</item>
					<item>
						<bold>EV_WINDOW</bold> - Fixed querying of positioning which never changes if previously set by  user.
					</item>
					<item>
						<bold>EV_APPLICATION</bold> - Priority of `idle_actions' has been changed so that gtk will recalculate  widgets sizes before calling its idle handler, this means that all resizing is  done before idle actions are called.
					</item>
					<item>
						<bold>EV_WINDOW </bold> - Now windows correctly shrink when requested size is smaller than current size
					</item>
					<item>
						<bold>EV_PICK_AND_DROPABLE</bold> - Fixed bug where if both drag and drop and docking were enabled, both would be  executed, now docking overrides drag and drop if both are enabled.
					</item>
					<item>
						<bold>EV_TIMEOUT </bold> - Now timeouts correctly unregister themselves on dispose preventing  segmentation violation.
					</item>
					<item>
						<bold>EV_PIXMAP </bold> - Pixmap stretching now works as expected.
					</item>
					<item>
						<bold>EV_WINDOW</bold> - Now all window specific events work as expected
					</item>
					<item>
						<bold>EV_TITLED_WINDOW</bold> - Now is_displayed returns false when window is minimized.
					</item>
					<item>
						<bold>EV_TREE_NODE</bold> - Insertion of children at specific rows now displays as expected.
					</item>
					<item>
						<bold>EV_WINDOW</bold> - Now windows have a border and are resizable to match Win32 behavior
					</item>
					<item>
						<bold>EV_SPLIT_AREA</bold> - Now 'split position' honors request when widget resize is pending
					</item>
					<item>
						<bold>EV_DRAWING_AREA </bold> - Fixed full size optimization so that all expose actions are handled correctly
					</item>
					<item>
						<bold>EV_TEXT_COMPONENT - </bold> Fixed issue where up and down arrow keys caused widget to lose focus  unnecessarily
					</item>
					<item>
						<bold>EV_FONT</bold> - Now preferred families are taken in to account when no style is set
					</item>
					<item>
						<bold>EV_STANDARD_DIALOG </bold>- Now all file handling dialogs are  resizable
					</item>
				</list>
			</item>
		</list>
		<heading>
			<size>2</size>EiffelStudio 5.3
		</heading>
		<paragraph>
			<bold>Interface modifications</bold>
		</paragraph>
		<list ordered="false">
			<item>
				<bold>EV_TITLED_WINDOW_ACTION_SEQUENCES</bold> added which is inherited only by EV_TITLED_WINDOW and provides three new action sequences :- `minimize_actions', `maximize_actions' and `restore_actions'.
			</item>
			<item>
				<bold>EV_TITLED_WINDOW</bold>
				<list ordered="false">
					<item> You may now only call `maximize' and `minimize' if `is_show_requested'.</item>
					<item>  When minimized, `is_displayed' now returns False.</item>
				</list>
			</item>
			<item>
				<bold>EV_BUTTON</bold> now inherits EV_FONTABLE, allowing you to modify the font displayed.
			</item>
			<item>
				<bold>EV_DYNAMIC_LIST_ITEM</bold> - Corrected `off' which was using the version inherited from EV_TREE_NODE when it should have been using the version from EV_TREE_NODE_LIST instead.
			</item>
			<item>
				<bold>EV_RECTANGLE</bold> - Added precondition to `intersects' which stops a Void rectangle being passed as an argument.
			</item>
			<item>
				<bold>EV_TOOL_BAR_SEPARATOR</bold> - Now export many inherited features to {ANY} instead of {NONE}, including `parent'.
			</item>
			<item>
				<bold>EV_ENVIRONMENT</bold> - Added `supported_image_formats' which returns a LINEAR [STRING] containing all valid formats by their three letter extension.
			</item>
			<item>
				<bold>EV_CHECKABLE_LIST</bold> - New class added which behaves as an EV_LIST, except that for each EV_LIST_ITEM contained, an associated check box is displayed.
			</item>
			<item>
				<bold>EV_MESSAGE_DIALOG</bold> - No longer deferred, and has two creation procedures `default_create' and `make_with_text'.
			</item>
			<item>
				<bold>EV_STANDARD_DIALOG</bold> - All descendents now have `make_with_text' as a creation procedure'.
			</item>
			<item>
				<bold>EV_TABLE</bold> - Now inherits CHAIN instead of ARRAY. This is a breaking  change, and may require some modification to your code. The inheritance from  ARRAY was seriously flawed. For example, if you were to call `extend' on an  EV_CONTAINER object that was currently referencing an EV_TABLE, then this would  fail. Now that we inherit CHAIN, this problem, among others of a similar nature  are fixed. Another advantage of inheriting CHAIN, is that the table may now be  iterated which allows for greater flexibility.
				<line_break/>
				<line_break/> The following list details some of the breaking changes, and how to fix them:
				<list ordered="false">
					<item>
						<bold>item</bold> - If you were using `item', you should change this to `item_at_position'. A  call to `item' will now return the current item.
					</item>
					<item>
						<bold>put</bold> - If you were using `put', you must now replace this with `put_at_position'.
					</item>
					<item>
						<bold>extend</bold> and 
						<bold>replace</bold> - These are now both exported, as before, they were exported to {NONE}.
					</item>
					<item>  features inherited from 
						<bold>ARRAY</bold> - These are no longer available but you may use the feature `to_array', which  returns the contents of the table represented as an ARRAY [EV_WIDGET]. This  feature is marked as obsolete, as it is temporary, to simplify the transition  to the new inheritance structure of EV_TABLE.
					</item>
					<item>
						<bold>count</bold> - The previous version of `count' was the one from ARRAY, which returned the  number of available (not empty) cells in the table. We now use the version of  `count' inherited from EV_CONTAINER which returns the number of widgets  currently contained. Previously, the feature `widget_count' was used to return  the number of items, but this feature has now been made obsolete. Therefore, if  you were previously using `count', replace this with `rows' * `columns', and if  you were using `widget_count', replace this with a call to `count'.
					</item>
					<item>
						<bold>item_list</bold> - This is now obsolete. You may use `linear_representation' to  retrieve the contents of the table, or simply traverse the table.
					</item>
				</list>
			</item>
			<item>
				<bold>EV_FIXED</bold> - No longer inherits DOUBLE_MATH.
			</item>
			<item>
				<bold>EV_VIEWPORT</bold> - No longer inherits DOUBLE_MATH.
			</item>
			<item>
				<bold>EV_TEXT</bold> - `line_count' now returns the number of lines actually displayed, and not just the newline characters, as an EV_TEXT will wrap the text when necessary. The postcondition of `linecount' has been updated to reflect this change.
			</item>
			<item>
				<bold>EV_FILE_DIALOG</bold> Added "valid_file_name" precondition to `set_file_name'  and a new feature `valid_file_name' which checks that a file name is valid on  the current platform.
			</item>
		</list>
		<paragraph>
			<bold>Bug fixes</bold>
		</paragraph>
		<list ordered="false">
			<item>
				<bold>Platform independent</bold>
				<list ordered="false">
					<item>
						<bold>EV_WIDGET</bold> - `pointer_style' now correctly returns the Ibeam cursor for textable widgets.
					</item>
					<item>
						<bold>EV_FIGURE_RECTANGLE</bold>
						<list ordered="false">
							<item>  Corrected `bounding_box' which was previously computed incorrectly when the  rectangle was rotated.</item>
							<item>  Fixed `width' and `height' which were always returning one less pixel than they   should have.</item>
						</list>
					</item>
				</list>
			</item>
			<item>
				<bold>Windows</bold>
				<list ordered="false">
					<item>
						<bold>EV_PIXMAP</bold> - Setting a tile with `set_tile' followed by a call to a fill routine would  crash the implementation.
					</item>
					<item>
						<bold>EV_COMBO_BOX</bold> - Implemented pick and drop.
					</item>
					<item>
						<bold>EV_TEXT_FIELD</bold> - Implemented pick and drop.
					</item>
					<item>
						<bold>EV_PASSWORD_FIELD</bold> - Implemented pick and drop.
					</item>
					<item>
						<bold>EV_TEXT</bold>
						<list ordered="false">
							<item>  Implemented pick and drop.</item>
							<item>  If not `is_editable' and a `background_color' had been set, it was only used on  lines containing text. The `background_color' is now correctly displayed  throughout the whole control when not `is_editable'.</item>
							<item>  Fixed `select_region' which was selecting an incorrect region starting on any  line except the first, when the `text' spanned multiple lines.</item>
							<item>  Fixed `selection_start' and `selection_end' which were incorrect when the  selection was not completely contained on the first line.</item>
							<item>  Fixed `first_position_from_line_number' and `last_position_from_line_number'  which were returning incorrect values when the text was wrapped.</item>
							<item>  Fixed `caret_position' and `set_caret_position' which were incorrect when the  text spanned multiple lines, and the caret was not on the first line.</item>
							<item>  `line_count' now returns the number of lines actually displayed, and not simply  the number of newline characters. To query the number of new line characters do  :- text.occurrences ('%N')</item>
							<item>  Fixed bug in `search' which was returning -1 instead of 0 when the text was not   found.</item>
						</list>
					</item>
					<item>
						<bold>EV_DRAWABLE</bold> - Fixed bug when you performed the following: drew a filled shape, called  `set_tile' and then drew another filled shape. The tile would not be used on  the second fill.
					</item>
					<item>
						<bold>EV_COLOR_DIALOG</bold> - Querying `color' after a user had canceled the dialog would previously crash  a system, if `set_color' had never been called.
					</item>
					<item>
						<bold>EV_COLOR</bold> - Fixed `set_rgb_with_24_bit' which would fail when called.
					</item>
					<item>
						<bold>EV_BUTTON, EV_TOGGLE_BUTTON</bold> - The buttons now correctly display a text, pixmap and background color  simultaneously. Previously, the background color was never displayed, and  either the pixmap or text would be displayed, not both.
					</item>
					<item>
						<bold>EV_PRINT_DIALOG</bold> - Fixed `set_from_page' and `set_to_page' which were previously not  implemented.
					</item>
					<item>
						<bold>EV_LIST</bold>
						<list ordered="false">
							<item>  Fixed a graphical glitch when using `wipe_out' when items were contained that  required the horizontal scroll bar to be visible. The scroll bar was not  hidden, even though there were no longer any items in the list.</item>
							<item>  Changing the selection behavior between multiple and single selection would   cause the scroll bars to become hidden, even if they were necessary. Changing   this status will no longer hide the scroll bars if they are required.</item>
						</list>
					</item>
					<item>
						<bold>EV_TOOL_BAR</bold>
						<list ordered="false">
							<item>  Items that were disabled would sometimes become enabled when other properties  of the item were set. For example, performing  "my_tool_bar_button.disable_sensitive" followed by "my_tool_bar_button.set_text  ("Disabled")" while the button was parented, would result in a sensitive tool  bar button. This is now fixed.</item>
							<item>  If you changed the `text' of a tool bar toggle button during the firing of the   `select_actions' of the toggle button, the button would become unchecked as a   result. This is now fixed, and changing the text will not stop the button from   becoming selected.</item>
						</list>
					</item>
					<item>
						<bold>EV_MULTI_COLUMN_LIST</bold> - Changing the selection behavior between multiple and single selection would  cause the scroll bars to become hidden, even if they were necessary. Changing  this status will no longer hide the scroll bars if they are required.
					</item>
					<item>
						<bold>EV_DYNAMIC_TREE_ITEM</bold> - Calling `set_tooltip' failed and has now been fixed.
					</item>
					<item>
						<bold>EV_TIMEOUT</bold> - Calling `destroy' more than once on a timeout, caused the implementation to  crash, and has now been fixed.
					</item>
					<item>
						<bold>EV_TOOLTIPABLE</bold> - Tooltips on primitives were not supporting multiple  lines and this has now been fixed. Use %N for a line break.
					</item>
				</list>
			</item>
			<item>
				<bold>Gtk</bold>
				<list ordered="false">
					<item>
						<bold>EV_SCROLLABLE_AREA</bold> - Items smaller than the area are now positioned correctly.
					</item>
					<item>
						<bold>EV_VIEWPORT</bold>
						<list ordered="false">
							<item>  Widget now works correctly with negative offset values</item>
							<item>  Item position is now handled correctly on item resize.</item>
						</list>
					</item>
					<item>
						<bold>EV_PIXMAP</bold> - All drawing routines now flush immediately to screen.
					</item>
					<item>
						<bold>EV_DIALOG</bold> - Canceling via Enter key is now handled correctly.
					</item>
					<item>
						<bold>EV_LIST</bold> - Fixed selection of selected item when changing from multiple selection to  single selection.
					</item>
					<item>
						<bold>EV_MULTI_COLUMN_LIST</bold>
						<list ordered="false">
							<item>  Row height now incorporates spacing pixel to match the implementation of  Windows.</item>
							<item>  Default row height is now slightly larger to be more aesthetically pleasing   with smaller fonts sizes.</item>
						</list>
					</item>
					<item>
						<bold>EV_CONTAINER</bold>
						<list ordered="false">
							<item>  `set_background_pixmap' now works with repeated parenting.</item>
							<item>  Radio group unmerging is now handled correctly.</item>
						</list>
					</item>
					<item>
						<bold>EV_TEXT_FIELD </bold> - Now vertical alignment is identical to that on Windows, including that for  text field descendants.
					</item>
					<item>
						<bold>EV_RANGE </bold> - Now motions events are passing consistent pointer values instead of sometimes  skewed ones.
					</item>
					<item>
						<bold>EV_DRAWING_AREA</bold> - Now `focus_in_actions' are called in all circumstances.
					</item>
					<item>
						<bold>EV_TEXT</bold>
						<list ordered="false">
							<item>  `scroll_to_line' is now implemented.</item>
							<item>  `line_count' and `current_line_number' now handle lines in text widget and not   the text itself.</item>
						</list>
					</item>
					<item>
						<bold>EV_FIXED</bold> - Now item sizing is correctly handled in all circumstances.
					</item>
					<item>
						<bold>EV_NOTEBOOK</bold> - Now tabs are more aesthetically pleasing.
					</item>
					<item>
						<bold>EV_MENU_SEPARATOR </bold> - Menu Separators are now more prominent.
					</item>
					<item>
						<bold>EV_TOOLBAR_SEPARATOR - </bold>Toolbar Separators are now more  prominent.
					</item>
				</list>
			</item>
		</list>
		<paragraph>
			<bold/>
		</paragraph>
		<heading>
			<size>2</size>EiffelStudio 5.2
		</heading>
		<paragraph>
			<bold>Interface modifications</bold>
		</paragraph>
		<list ordered="false">
			<item>
				<bold>EV_TEXTABLE</bold> - `align_text_left', `align_text_right' and `align_text_center' have been extracted into a new class, EV_TEXT_ALIGNABLE which inherits EV_TEXTABLE. All previous descendents of EV_TEXTABLE now inherit EV_TEXT_ALIGNABLE, except EV_TREE_NODE, EV_MENU_ITEM, EV_LIST_ITEM and EV_TOOL_BAR_BUTTON
			</item>
			<item>
				<bold>EV_TEXT_COMPONENT</bold> - Now inherits EV_TEXTABLE.
			</item>
			<item>
				<bold>EV_TEXT_ALIGNMENT_CONSTANTS</bold> - New class added to support EV_TEXT_ALIGNABLE.
			</item>
			<item>
				<bold>EV_MENU_ITEM_LIST</bold> - `parent' is now of type EV_ANY, instead of EV_MENU_ITEM_LIST as it did not hold for EV_MENU_BAR. The renaming of `parent' to `old_parent' in EV_MENU_BAR has now been removed.
			</item>
			<item>
				<bold>EV_VIEWPORT</bold> - added `set_item_width', `set_item_height' and `set_item_size'.
			</item>
			<item>
				<bold>EV_TABLE</bold>
				<list ordered="false">
					<item> redefined `prunable' to `True' and implemented `prune'.</item>
					<item>  Added the following features - `set_item_span', `set_item_position',  `set_item_span_and_position', `area_clear_excluding_widget', `item_row_span',  `item_column_span', `item_row_position' and `item_column_position'.</item>
				</list>
			</item>
			<item>
				<bold>EV_WIDGET</bold> - Changed type of `focus_in_actions' and `focus_out_actions' from EV_FOCUS_ACTION_SEQUENCE to EV_NOTIFY_ACTION_SEQUENCE. `is_parent_recursive' is no longer available. It has been moved to EV_CONTAINER. This was necessary to fix a catcall encountered using vision2 under .NET. The problem manifested with widgets that held items.
			</item>
			<item>
				<bold>EV_FIGURE</bold> - `proximity_in_actions' and `proximity_out_actions' are now obsolete.
			</item>
			<item>
				<bold>EV_FONTABLE</bold> - `set_font' now sets a copy of the font internally.
			</item>
			<item>
				<bold>EV_TREE</bold> - `ensure_item_visible' and `has_recursively' now take an EV_TREE_NODE as arguments, instead of an EV_TREE_ITEM.
			</item>
			<item>
				<bold>EV_TEXT</bold> - `put_new_line' is now obsolete. Use `set_text ("%N") instead."
			</item>
			<item>
				<bold>EV_APPLICATION_ACTION_SEQUENCES</bold> - Added `cancel_actions', fired when a pick and drop is canceled, and `pnd_motion_actions' fired while the pointer moves during a pick and drop.
			</item>
			<item>
				<bold>EV_TREE_NODE_LIST</bold>
				<list ordered="false">
					<item> `find_item_recursively_by_data', `has_recursively' and `recursive_do_all' are  now implemented in this class, instead of both EV_TREE and EV_TREE_NODE which  are descendents.</item>
					<item>  Added `retrive_items_recursively_by_data' and  `retrieve_item_recursively_by_data' which allow you to specify a comparison  criterion, and due to this addition, `find_item_recursively_by_data' has now  been made obsolete.</item>
				</list>
			</item>
			<item>
				<bold>EV_DYNAMIC_LIST</bold> - Added `retrieve_item_by_data' and `retrieve_items_by_data'.
			</item>
			<item>
				<bold>EV_ITEM_LIST</bold> - Made `item_by_data' obsolete, as you should now use `retrieve_item_by_data' added in EV_DYNAMIC_LIST.
			</item>
			<item>
				<bold>EV_DIALOG</bold> - Added `is_relative' and defined `is_modal' in this class,  instead of inheriting it from EV_WINDOW.
			</item>
		</list>
		<paragraph>
			<bold>Bug fixes</bold>
			<list ordered="false">
				<item>
					<bold>Platform independent</bold>
					<list ordered="false">
						<item>
							<bold>EV_FIGURE_POLYLINE</bold>  - Fixed `start_angle' and `end_angle' so that they are computed relative to the  first and last polyline segments. This also fixes the start and end arrows, so  that when displayed, they now actually point in the direction of their  respective line segments.
						</item>
						<item>
							<bold>EV_TREE and EV_TREE_NODE</bold>  - Fixed `find_item_recursively_by_data' which failed on the `index_not_changed'  postcondition. Note that these features are now defined in EV_TREE_NODE_LIST.
						</item>
						<item>
							<bold>EV_DYNAMIC_TREE_ITEM</bold> - Fixed invariant violation from EV_ITEM_LIST, when  created with `default_create'.
						</item>
					</list>
				</item>
				<item>
					<bold>Windows</bold>
					<list ordered="false">
						<item>
							<bold>EV_RADIO_BUTTON</bold>  - The default minimum height after `default_create' is now enough to display  the widget correctly.
						</item>
						<item>
							<bold>EV_CHECK_BUTTON</bold>  - The default minimum height after `default_create' is now enough to display  the widget correctly.
						</item>
						<item>
							<bold>EV_NOTEBOOK</bold>  - When removing a widget from a notebook, it is now visible. Previously, the  widget would be hidden.
						</item>
						<item>
							<bold>EV_LIST, EV_MULTI_COLUMN_LIST, EV_TREE</bold>  - Fixed `set_foreground_color' and `set_background_color'. Previously, calling  these features did nothing.
						</item>
						<item>
							<bold>EV_BOX</bold>  - If a widget was not`is_item_expanded', then adding a new widget to the box  before that widget would sometimes cause a different widget to become  `is_item_expanded'.
						</item>
						<item>
							<bold>EV_TOOL_BAR_RADIO_BUTTON</bold>  - The currently selected button in `peers' was unselected when the button was  pressed, and not when it was really selected. This bug made it possible to make  `selected_peer' Void, which caused an invariant to fail.
						</item>
						<item>
							<bold>EV_LIST_ITEM</bold>  - Calling `enable_select' when parented in an EV_LIST now also sets the item as  focused in the parent. This corrects bugs in keyboard navigation when selecting  an item programatically.
						</item>
						<item>
							<bold>EV_FIXED</bold>  - The minimum size is constrained by the positions and sizes of the children  (They must be completely displayed), although when the positions of the  children were reduced, the minimum allowable size was not recomputed. This  meant that the widget would be enlarged when the positions of the children  increased, but could never be reduced in size when the positions of the  children were decreased.
						</item>
						<item>
							<bold>EV_MENU and EV_MENU_ITEM</bold>  - `set_pixmap' has been implemented as previously, it did nothing.
						</item>
						<item>
							<bold>EV_TABLE</bold>  - re-implemented resizing calculations to fix numerous problems when children  had minimum sizes. The minimum size now also includes the border width when  empty.
						</item>
						<item>
							<bold>EV_NOTEBOOK</bold>  - `selection_actions' were called when you selected an item through  `select_item', even if the item was already selected. `selection_actions' are  now only fired when the selection changes.
						</item>
						<item>
							<bold>EV_TREE_ITEM</bold>  - calling `set_pixmap' twice successively with the same EV_PIXMAP caused a  postcondition failure.
						</item>
						<item>
							<bold>EV_TEXT</bold>  - Fixed `put_new_line', although it has been made obsolete, as you should just  use `append_text ("%N") instead.
						</item>
						<item>
							<bold>EV_SPLIT_AREA</bold>  - Fixed crash reproducable by inserting an EV_PIXMAP directly into the split  area.
						</item>
						<item>
							<bold>EV_CONTAINER</bold>  - Fixed `propagate_foreground_color' and `propagate_background_color' which  failed when one of the children was a descendent of EV_CELL.
						</item>
						<item>
							<bold>EV_APPLICATION_ACTION_SEQUENCES</bold>  - `drop_actions' was being fired even when the pick and drop was canceled.
						</item>
						<item>
							<bold>EV_PIXMAP</bold>  - Previously, if you were to add an agent to an action sequence of the pixmap,  before it was parented, the agent would be removed during the parenting.
						</item>
						<item>
							<bold>EV_MENU</bold>
							<list ordered="false">
								<item>  Pruning an EV_MENU_SEPARATOR when one or more EV_RADIO_MENU_ITEM were still   contained in the menu would cause occasional crashes.</item>
								<item>  Previously, when adding an EV_MENU_SEPARATOR, followed by multiple   EV_RADIO_MENU_ITEMS, all the items were being selected.</item>
								<item>  Fixed bug in `destroy' which was causing postcondition failures.</item>
							</list>
						</item>
						<item>
							<bold>EV_TITLED_WINDOW</bold>  - Fixed a GDI leak, manifesting when a window was destroyed.
						</item>
						<item>
							<bold>EV_DIALOG</bold>
							<list ordered="false">
								<item>  Fixed `is_modal' which was previously always returned `False'.</item>
								<item>  Fixed bug with `background_color' and `foreground_color' which was not taken   into account if the dialog was shown relative or modally to another window.</item>
								<item>  If a dialog with a default cancel button was displayed using `show', then   minimizing the dialog would cause the system to fail internally.</item>
								<item>  Fix bug in `show_relative_to_window' which would cause any associated menus to   be removed.</item>
								<item>  Fixed bug in `show', as if the dialog had already been shown modelessly to a   window, then calling `show' did not show it independently, but still   modelessly.</item>
								<item>  Fixed bug with `show_actions' which would be wiped out if you called   `show_modal_to_window' and then `hide'.</item>
								<item>  `set_pixmap' will now actually display the pixmap, whereas before, no pixmap   was displayed.</item>
							</list>
						</item>
						<item>
							<bold>EV_TEXT_COMPONENT</bold>  - Fixed `text_length' which was returning incorrect value for all descendents.
						</item>
						<item>
							<bold>EV_TEXT</bold>  - Fixed `line_count' which was previously returning the correct result + 1.
						</item>
						<item>
							<bold>EV_SCROLLABLE_AREA</bold>  - Fixed crash which occurred when you attempted to use `set_x_offset' or  `set_y_offset' before the area had been parented or displayed.
						</item>
						<item>
							<bold>EV_FONTABLE</bold>  - Fixed bug when `font' was queried, `preferred_families' was not returned  correctly, and would always be empty.
						</item>
						<item>
							<bold>EV_CONTAINER</bold> - `set_background_pixmap' was not correctly cloning the  image of the pixmap, and the displayed image could then be modified after  setting, by changing the image of the original pixmap.
						</item>
					</list>
				</item>
				<item>
					<bold>Gtk</bold>
					<list ordered="false">
						<item>  Remaining EV_WIDGET memory leaks have been fixed.</item>
						<item>
							<bold>EV_WIDGET</bold>- Focus in/out actions are now correctly  called for widgets that do not occupy their entire space allocation such as  EV_TEXT_FIELD.
						</item>
						<item>
							<bold>EV_DRAWABLE_IMP</bold>  - Polylines now display correctly on big-endian machines (Sparc, PowerPC).
						</item>
						<item>
							<bold>EV_KEY</bold>
							<list ordered="false">
								<item>  `out' is now correct for all keys (previously Quote and Backquote were   incorrect).</item>
								<item>  The events for all keys are now fired when Shift is held down.</item>
							</list>
						</item>
						<item>
							<bold>EV_STOCK_PIXMAPS</bold>  - Warning and error pixmaps have been updated.
						</item>
						<item>
							<bold>EV_WINDOW</bold>  - `remove_title now' works will all Window Managers.
						</item>
						<item>
							<bold>EV_TITLED_WINDOW</bold>
							<list ordered="false">
								<item>  `propagate_foreground_color' is now fixed in use with pixmaps as children.</item>
								<item>  `set_maximum_size' now works as expected</item>
								<item>  `set_minimum_width' now has no effect on Window height.</item>
								<item>  calls on `minimize' before `launch' now satisfies all assertions</item>
								<item>  calling `destroy' twice now doesn't fail on precondition.</item>
								<item>  `set_position' now satisfies post-condition in all situations.</item>
								<item>  `resize_actions' are now passed the correct values.</item>
								<item>  `move_actions' are now called correctly.</item>
							</list>
						</item>
						<item>
							<bold>EV_NOTEBOOK</bold>  - now satisfies invariants when empty.
						</item>
						<item>
							<bold>EV_DIALOG</bold>
							<list ordered="false">
								<item>  Destroy now satisfies all invariants.</item>
								<item>  Reported memory leaks now fixed.</item>
							</list>
						</item>
						<item>
							<bold>EV_LABEL</bold>  - Size is now taken from default gtk style size instead of hard coded 10
						</item>
						<item>
							<bold>EV_FONT</bold>  - Font caching is now vastly improved in terms of speed.
						</item>
						<item>
							<bold>EV_DRAWABLE</bold>  - Calls to `set_font' are now also vastly speeded up.
						</item>
						<item>
							<bold>EV_TABLE</bold>
							<list ordered="false">
								<item>  Memory management is now correct on item removal.</item>
								<item>  Now setting child's parent correctly</item>
							</list>
						</item>
						<item>
							<bold>EV_TREE_NODE</bold>
							<list ordered="false">
								<item>  Fixed all reported issues regarding item insertion and removal.</item>
							</list>
						</item>
						<item>
							<bold>EV_CONTAINER</bold>  - Fixed remaining issues with radio grouping and merging.
						</item>
						<item>
							<bold>EV_PICK_AND_DROPABLE</bold>  - Now drop_actions may destroy `Current' without crash.
						</item>
						<item>
							<bold>EV_TEXT_FIELD</bold>
							<list ordered="false">
								<item>  Now default `minimum_width' is reasonable (before 148, now same as Windows   being 4 characters wide)</item>
								<item>  Fixed `caret_position' when queried in change actions</item>
							</list>
						</item>
					</list>
				</item>
			</list>
			<heading>
				<size>2</size>EiffelStudio 5.1
			</heading>
			<paragraph>
				<bold>Interface modifications</bold>
			</paragraph>
			<list ordered="false">
				<item>
					<bold>EV_TEXTABLE and EV_TEXT_COMPONENT</bold> - `text' no longer returns Void when empty.
				</item>
				<item>
					<bold>EV_WINDOW</bold> - `title' no longer returns `Void' when empty.
				</item>
				<item>
					<bold>EV_TOOLTIPABLE</bold> - `tooltip' no longer returns `Void' when empty. If empty, no tooltip is displayed.
				</item>
				<item>
					<bold>EV_TITLED_WINDOW</bold> - `icon_name' no longer returns `Void' when empty.
				</item>
				<item>
					<bold>EV_CLIPBOARD</bold> - `text' no longer returns `Void' when empty.
				</item>
				<item>
					<bold>EV_MESSAGE_DIALOG</bold> - `text' no longer returns `Void' when empty.
				</item>
				<item>
					<bold>EV_FILE_DIALOG</bold> - `file_name' no longer returns `Void' when the "Cancel" button was pressed, `Result' is empty instead.
				</item>
				<item>
					<bold>EV_DIRECTORY_DIALOG</bold> - `directory' no longer returns `Void when the "Cancel" button was pressed, `Result' is empty instead.
				</item>
				<item>
					<bold>EV_CONTAINER</bold> - has three new features `set_background_pixmap', `background_pixmap' and `remove_background_pixmap'. `background_pixmap' will be tessellated to cover complete background area.
				</item>
				<item>
					<bold>EV_TREE and EV_TREE_NODE</bold> - Added `recursively_do_all'.
				</item>
				<item>
					<bold>EV_STANDARD_DIALOGS</bold>
					<list ordered="false">
						<item> `ok_actions' have been renamed in descendents where appropriate. e.g. in  EV_PRINT_DIALOG, they are renamed to `print_actions' to match the texts of the  associated buttons. Where renamed, `ok_actions' are still available but  obsolete.</item>
						<item>  Selected button now also returns the correct text of the button (Previously it  was always "Ok").</item>
					</list>
				</item>
				<item>
					<bold>EV_DIALOG_CONSTANTS</bold> - Added new constants required for the above change to EV_STANDARD_DIALOGS.
				</item>
				<item>
					<bold>EV_DRAWABLE</bold> - `draw_straight_line' now has a precondition to ensure the points are not identical.
				</item>
				<item>
					<bold>EV_SPLIT_AREA</bold> - separated `put' from `extend'. They were defined as synonyms, but have different behavior.
				</item>
				<item>
					<bold>EV_DYNAMIC_TREE_ITEM</bold> - Added `remove_subtree_function'. Item now only shows as expandable if there is a subtree function.
				</item>
				<item>
					<bold>EV_WINDOW</bold> - Added `maximum_dimension' which is the greatest value allowed for `width' and `height'. This is also the default value for `width' and `height'.
				</item>
				<item>
					<bold>EV_OPTION_BUTTON</bold> - This class has been made obsolete. It will be removed at the next release.
				</item>
				<item>
					<bold>EV_PICK_AND_DROPABLE_ACTION_SEQUENCES</bold> - Added `pick_ended_actions' which are called when a pick ends.
				</item>
				<item>
					<bold>EV_WIDGET</bold> - `set_minimum_height', `set_minimum_width' and `set_minimum_size' now all allow 0 as an argument. Previously, 1 was the minimum valid dimension.
				</item>
				<item>
					<bold>EV_MULTI_COLUMN_LIST</bold> - `clear_selection' is now obsolete. Use  `remove_selection' instead.
				</item>
			</list>
			<paragraph>
				<bold>Bug fixes</bold>
				<list ordered="false">
					<item>
						<bold>Platform independent</bold>
						<list ordered="false">
							<item>
								<bold>EV_FIXED</bold>  - Corrected `set_item_height', which was failing.
							</item>
							<item>
								<bold>EV_SELECTABLE</bold>  - Corrected postcondition of `is_selected'.
							</item>
							<item>
								<bold>EV_PND_ACTION_SEQUENCE</bold> -- `veto_pebble_function' is now only called when  its argument conforms to the transported pebble.
							</item>
						</list>
					</item>
					<item>
						<bold>Windows</bold>
						<list ordered="false">
							<item>
								<bold>EV_RANGE</bold>  - The `maximum_value' could not be set greater than 32,000. The full range of  an INTEGER may now be set.
							</item>
							<item>
								<bold>`focused_widget' from `EV_APPLICATION'</bold>  - was incorrect if an EV_CONTAINER had just received the focus.
							</item>
							<item>
								<bold>EV_PICK_AND_DROPABLE</bold>
								<list ordered="false">
									<item>  Ending a pick and drop on an EV_TOOL_BAR_BUTTON which has a non `void' pebble   no longer starts a transport from the button.</item>
									<item>  Reduced flicker on cursor when picking from an EV_TREE_ITEM or EV_LIST_ITEM.</item>
									<item>  `pebble_function' would previously be called twice during a pick and drop.</item>
								</list>
							</item>
							<item>
								<bold>EV_FIXED</bold>  - Items contained are now drawn correctly dependent on their z order.
							</item>
							<item>
								<bold>EV_DRAWABLE</bold>
								<list ordered="false">
									<item>  `Remove_clip_area' did not remove the clip_area correctly, but set it to the   current size. This meant that if you then enlarged the widget, clipping would   be applied.</item>
									<item>  Fixed problems with ordering of calls to certain features which would cause   postcondition violations in the implementation.</item>
									<item>  `draw_pie_slice', `fill_pie_slice' and `draw_arc' now have divide by 0   protection in the implementation.</item>
								</list>
							</item>
							<item>
								<bold>EV_TEXT</bold>  - `set_background_color' now correctly sets the color of the whole background.  Previously only the area containing text was modified.
							</item>
							<item>
								<bold>EV_CLIPBOARD</bold>  - Our implementation would sometimes query `text' when not allowed by Windows,  thus causing postcondition failures.
							</item>
							<item>
								<bold>EV_BUTTON</bold> - The result of `text_alignment' after default_create was  incorrect.
							</item>
						</list>
					</item>
					<item>
						<bold>Gtk</bold>
						<list ordered="false">
							<item>  Gtk version of Studio released (including Vision2), so no fixes from 5.0</item>
						</list>
					</item>
				</list>
			</paragraph>
		</paragraph>
	</paragraph></document>
