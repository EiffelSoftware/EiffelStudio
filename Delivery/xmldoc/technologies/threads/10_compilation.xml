<document title="Compilation of multithreaded systems" output="studio">
	<meta_data>
		<help>
			<meta>
				<content>multithreaded systems, compile</content>
				<name>MS-HKWD</name>
			</meta>
		</help>
	</meta_data>
	<paragraph>
		<heading>
			<size>1</size>Compilation of multithreaded systems
		</heading>
		<heading>
			<size>2</size>Settings
		</heading>
		<list ordered="false">
			<item>Add the option multithreaded by clicking on 
				<link>
					<url>../../tools/eiffelstudio/reference/25_project_settings/60_advanced.xml</url>
					<label>the advanced tab of the project setting window</label>
				</link>. 
			</item>
			<item>Do not use a non-multithreaded precompiled library. The corresponding multithreaded libraries of base and WEL should be located in $ISE_EIFFEL/precomp/spec/$PLATFORM/ with the mt prefix. </item>
			<item>You must include the thread cluster (located at "$ISE_EIFFEL/library/thread") in the clusters your project is including. This setting can be done in 
				<link>
					<url>../../tools/eiffelstudio/reference/25_project_settings/30_clusters.xml</url>
					<label> the clusters tab of the project settings window</label>
				</link>. 
			</item>
			<item>When using external C libraries, be sure that they are MT-safe: on the platforms where the Eiffel Threads are available. For example 
				<link>
					<url>/libraries/wel/index.xml</url>
					<label>Wel</label>
				</link> and 
				<link>
					<url>/libraries/net/index.xml</url>
					<label>Net</label>
				</link> multithreaded libraries can be recognized by the `mt' prefix. 
			</item>
		</list>
		<heading>
			<size>2</size>Compilation
		</heading>
		<paragraph>Just launch the compilation: the ISE compiler will generate and link the multithreaded executable. </paragraph>
		<heading>
			<size>2</size>External C files
		</heading>
		<paragraph>The C files that you link with a multithreaded Eiffel application must be compiled in multithreaded mode. In addition, you should follow some basic guidelines, which you can find in any documentation on threads. Here are the main requirements:</paragraph>
		<list ordered="false">
			<item>Check what you are importing is safe: you cannot arbitrarily enter non-threaded code in a multithreaded program. Check your include files and libraries you use for the linking to decide if they can be used in multithreaded mode. </item>
			<item>If you are using CECIL in multithreaded mode, you must compile your C files with the same defined symbols as those used to compile the generated C-code in multithreaded mode. </item>
			<item>Threaded code can safely refer to unsafe code ONLY from the initial thread. </item>
		</list>
		<note>
			<bold>Note</bold>: if you use the libraries Net and MEL in multithreaded mode, you should use libmtnet. a and libmtmel. a. When using MEL, you have to be aware that Motif 1. 2 is not threaded-safe (i.e not reentrant). Motif 2. x is threaded-safe. 
		</note>
		<heading>
			<size>2</size>Thread Safe Eiffel libraries
		</heading>
		<note>Most ISE Eiffel libraries are not thread safe. This means that even though you can use them in a multithreaded environment, you will need to add the necessary protection to ensure that objects are accessed only by one thread at a time. </note>
		<note>Most of the issues is related to the use of EiffelBase containers which have been designed at a time where threads where not present. In the future we will certainly provide a version of EiffelBase which will be designed to be thread safe, in the meantime, you have to use basic protection mechanism such a mutexes to guarantee a safe execution of your programs. </note>
		<note>Here is a summary of what you need to include in your project settings when using our libraries:</note>
		<note>- EiffelBase: not thread safe, no externals required</note>
		<note>- WEL: partly thread safe regarding creation of graphical objects that belongs to two different threads, but since it relies on EiffelBase, be aware of what has been said. Other libraries have the same dependency on EiffelBase and this warning will not be repeated. Change the library wel. lib by mtwel. lib</note>
		<note>- MEL: you have to be aware that Motif 1. 2 is not thread safe and that Motif 2. x is. Therefore you can use MEL in a multithreaded program only if you have Motif 2. x. In this case, you need to include libmtmel. a instead of libmel. a</note>
		<note>- EiffelNet: thread safe with above limitation on EiffelBase. Change the library net. lib by mtnet. lib on Windows. For unix based systems, change libnet. a by libmtnet. a</note>
		<note>- COM: not thread safe. Change com. lib and com_runtime. lib into mtcom. lib and mtcom_runtime. lib. </note>
	</paragraph>
</document>