-- Generated by EiffelBuild, promise (Fred)

class LICENSE_W

inherit

	FORM_D
		rename
			make as bulletin_d_make,
			popup as bulletin_d_popup
		end;
	FORM_D
		rename
			make as bulletin_d_make
		redefine
			popup
		select
			popup
		end;
	COMMAND_W;
	BUILD_LIC

creation

	make

feature -- Widgets

	Scrolled_text1: SCROLLED_T;
	Label1: LABEL;
	Push_b1: PUSH_B;
	Label5: LABEL;
	Label6: LABEL;
	Label7: LABEL;
	Separator1: SEPARATOR;
	Label4: LABEL;
	Label3: LABEL;
	Label2: LABEL;

	make is
		do
			bulletin_d_make ("License window", Project_tool);
			!!Scrolled_text1.make ("Scrolled_text1", Current);
			!!Label1.make ("Label1", Current);	-- EiffelBench users:
			!!Push_b1.make ("Push_b1", Current);	--    Close   
--			!!Label5.make ("Label5", Current);	-- 6
			!!Label6.make ("Label6", Current);	-- 3
			!!Label7.make ("Label7", Current);	-- moscow
			!!Separator1.make ("Separator1", Current);
			!!Label4.make ("Label4", Current);	-- License server:
			!!Label3.make ("Label3", Current);	-- Total licenses:
--			!!Label2.make ("Label2", Current);	-- Available licenses:
			set_values;
			set_callbacks
		end;

	set_values is
		do
			set_size (315, 265);
			Scrolled_text1.set_x_y (33, 34);
			Scrolled_text1.set_size (238, 125);
				-- EiffelBench users:
			Label1.set_x_y (9, 8);
				--    Close   
			Push_b1.set_text ("   Close   ");
			Push_b1.set_x_y (117, 225);
				-- 6
--			Label5.set_x_y (147, 207);
				-- 3
			Label6.set_x_y (147, 188);
			Label6.set_text ("");
				-- moscow
			Label7.set_x_y (147, 169);
			Label7.set_text ("");
			Separator1.set_double_line;
			Separator1.set_x_y (2, 215);
			Separator1.set_size (315, 5);
				-- License server:
			Label4.set_text ("License server:");
			Label4.set_x_y (9, 169);
				-- Total licenses:
			Label3.set_text ("Total licenses:");
			Label3.set_x_y (9, 188);
				-- Available licenses:
--			Label2.set_text ("Available licenses:");
--			Label2.set_x_y (9, 207);
		end;

	set_callbacks is
		do
			Push_b1.add_activate_action (Current, Void);
		end;

	work (argument: ANY) is
		do
			label6.set_text ("");
			label7.set_text ("");
			scrolled_text1.set_text ("");
			Label1.set_text ("");
			popdown
		end

	popup is
		local
			temp: STRING;
			i: INTEGER;
			toto: BOOLEAN
		do
			if licence.daemon_alive then
					-- Total number of licenses
				!! temp.make (0);
				i := licence.license_count;
				if (i = 0) then
					temp.append ("Unrestricted");
				else
					temp.append_integer (i);
				end;
				label6.set_text (temp);
	
					-- License host
				label7.set_text (licence.licence_host);
	
					-- Usage information
				toto := licence.registered;
				if not toto then
					licence.register;
				end;
				scrolled_text1.set_text (licence.usage_info);
				if not toto then
					licence.unregister;
				end;
				Label1.set_text ("EiffelBench users:");
			else
				!! temp.make (0);
				temp.append ("No answer from Eiffel license%N");
				temp.append ("daemon on server: ");
				temp.append (licence.licence_host);
				temp.append (".%NCheck with system administrator if%N");
				temp.append ("`eifdaemon' is running");
				scrolled_text1.set_text (temp);
				label7.set_text (licence.licence_host);
				label6.set_text ("N/A");
				Label1.set_text ("Info:");
			end;


			bulletin_d_popup
		end;	

end
