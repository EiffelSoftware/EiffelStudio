#!/bin/sh
set -e


if [ ! "$ISE_EIFFEL" ]; then
	echo '$ISE_EIFFEL not defined. Cannot continue'
	exit 1
fi

if [ ! "$ISE_PLATFORM" ]; then
	echo '$ISE_PLATFORM not defined. Cannot continue'
	exit 1
fi
echo "Using EiffelStudio delivery in $ISE_EIFFEL"


# Exctract EiffelStudio version
export VERSION=`$ISE_EIFFEL/studio/spec/$ISE_PLATFORM/bin/ec -version | sed "s/^[A-Za-z ]*\([0-9\.]\+\).*/\1/"`
MAJOR_NUMBER=`echo $VERSION | sed "s/^\([0-9]\).*/\1/"`
MINOR_NUMBER=`echo $VERSION | sed "s/^[0-9].\([0-9]\).*/\1/"`
echo "EiffelStudio version $VERSION will be used for debian package"


# Define environment variables
export PRODUCT=eiffelstudio-$MAJOR_NUMBER.$MINOR_NUMBER
export PACKAGING_DIR=`pwd`/packaging
export RPM_DIR=$PACKAGING_DIR/rpm
DOCS_DIR=/usr/share/doc/$PRODUCT/docs
RPMMACRO=~/.rpmmacros


# Create RPM macro file in ./rpmmacros
if test -f $RPMMACRO; then
    mv $RPMMACRO /tmp/.rpmmacros$$
fi
echo %_topdir  $RPM_DIR > $RPMMACRO
echo %_tmppath $RPM_DIR/tmp >> $RPMMACRO
echo %_use_internal_dependency_generator 0 >> $RPMMACRO


# Create unix layout in RPM BUILD directory
./make_unix_layout $RPM_DIR/eiffelstudio


# Prepare spec files
sh $RPM_DIR/eiffelstudio.spec.sh
cp $PACKAGING_DIR/license $RPM_DIR/eiffelstudio/usr/share/doc/$PRODUCT/LICENSE


# If we have a $DOCS_DIR move it to a seperate
# directory and build noarch doc package
if test -d $RPM_DIR/eiffelstudio$DOCS_DIR; then
    sh $RPM_DIR/eiffelstudio-doc.spec.sh
    mkdir -p $RPM_DIR/eiffelstudio-doc$DOCS_DIR
    mv $RPM_DIR/eiffelstudio$DOCS_DIR/* $RPM_DIR/eiffelstudio-doc$DOCS_DIR
    rm -r $RPM_DIR/eiffelstudio$DOCS_DIR
    rpmbuild -bb $RPM_DIR/eiffelstudio-doc.spec

    # Clean up documentation specific build files
    rm $RPM_DIR/eiffelstudio-doc.spec
    rm -r $RPM_DIR/eiffelstudio-doc
else
    echo "No $RPM_DIR/eiffelstudio$DOCS_DIR, $PRODUCT-doc package will not be created"
fi


# Build main package
rpmbuild -bb $RPM_DIR/eiffelstudio.spec


# Move all generated .rpm files to current directory
find $RPM_DIR/RPMS -type f | xargs mv -t ./


# Reset RPM macro file
rm $RPMMACRO
if test -f /tmp/.rpmmacros$$; then
    mv /tmp/.rpmmacros$$ $RPMMACRO
fi


# Clean up RPM directory
rm $RPM_DIR/eiffelstudio.spec
rm -r $RPM_DIR/eiffelstudio
rm -r $RPM_DIR/tmp
rm -r $RPM_DIR/RPMS/*

