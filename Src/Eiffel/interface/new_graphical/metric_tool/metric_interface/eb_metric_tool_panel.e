indexing
	description: "Objects that represent an EV_TITLED_WINDOW.%
		%The original version of this class was generated by EiffelBuild."
	legal: "See notice at end of class."
	status: "See notice at end of class."
	date: "$Date$"
	revision: "$Revision$"

class
	EB_METRIC_TOOL_PANEL

inherit
	EB_METRIC_TOOL_PANEL_IMP

	EB_CONSTANTS
		undefine
			is_equal,
			copy,
			default_create
		end

	SHARED_WORKBENCH
		undefine
			is_equal,
			copy,
			default_create
		end

	EB_METRIC_SHARED
		undefine
			is_equal,
			copy,
			default_create
		end

	EB_METRIC_INTERFACE_PROVIDER
		undefine
			is_equal,
			copy,
			default_create
		end

create
	make

feature{NONE} -- Initialization

	make (a_dev_window: like development_window; a_metric_tool: like metric_tool) is
			-- Initialize `development_window' with `a_dev_window' and `metric_tool' with `a_metric_tool'.
		require
			a_dev_window_attached: a_dev_window /= Void
			a_metric_tool_attached: a_metric_tool /= Void
		do
			development_window := a_dev_window
			metric_tool := a_metric_tool
			default_create
		ensure
			development_window_set: development_window = a_dev_window
			metric_tool_set: metric_tool = a_metric_tool
		end

feature {NONE} -- Initialization

	user_initialization is
			-- Called by `initialize'.
			-- Any custom user initialization that
			-- could not be performed in `initialize',
			-- (due to regeneration of implementation class)
			-- can be added here.
		do
				-- Setup metric evaluation tab.
			create metric_evaluation_panel.make (metric_tool)
			metric_evaluation_tab.extend (metric_evaluation_panel)

				-- Setup metric definition tab.
			create new_metric_panel.make (metric_tool)
			new_metric_tab.extend (new_metric_panel)

				-- Setup metric archive tab.
			create metric_archive_panel.make (metric_tool)
			metric_archive_tab.extend (metric_archive_panel)

				-- Setup detailed result tab.
			create detail_result_panel.make (metric_tool)
			result_tab.extend (detail_result_panel)

				-- Setup tab names			
			metric_notebook.set_item_text (metric_notebook.i_th (1), metric_names.t_evaluation_tab)
			metric_notebook.set_item_text (metric_notebook.i_th (2), metric_names.t_definition_tab)
			metric_notebook.set_item_text (metric_notebook.i_th (3), metric_names.t_archive_tab)
			metric_notebook.set_item_text (metric_notebook.i_th (4), metric_names.t_detail_result_tab)

			metric_notebook.selection_actions.extend (agent on_tab_change)
			metric_notebook.select_item (metric_evaluation_tab)
		end

feature -- Access

	development_window: EB_DEVELOPMENT_WINDOW
			-- Development window to which current belongs

	metric_evaluation_panel: EB_METRIC_EVALUATION_PANEL
			-- Metric evaluation panel

	new_metric_panel: EB_NEW_METRIC_PANEL
			-- New metric panel

	detail_result_panel: EB_METRIC_RESULT_AREA
			-- Detailed result panel

	metric_tool: EB_METRIC_TOOL
			-- Metric tool

	metric_archive_panel: EB_METRIC_ARCHIVE_PANEL
			-- Metric archive panel

feature -- Access

	metric_evaluation_tab_index: INTEGER is 1
	metric_definition_tab_index: INTEGER is 2
	metric_archive_tab_index: INTEGER is 3
	metric_result_tab_index: INTEGER is 4
			-- Tab index for tabs in metric tool
			
feature -- Actions

	on_tab_change is
			-- Action to be performed when selected tab changes
		do
			if metric_notebook.selected_item = metric_evaluation_tab then
				metric_evaluation_panel.on_select
			elseif metric_notebook.selected_item = new_metric_tab then
				new_metric_panel.on_select
			elseif metric_notebook.selected_item = result_tab then
				detail_result_panel.on_select
			end
		end

invariant
	development_window_attached: development_window /= Void
	metric_tool_attached: metric_tool /= Void

indexing
        copyright:	"Copyright (c) 1984-2006, Eiffel Software"
        license:	"GPL version 2 (see http://www.eiffel.com/licensing/gpl.txt)"
        licensing_options:	"http://www.eiffel.com/licensing"
        copying: "[
                        This file is part of Eiffel Software's Eiffel Development Environment.
                        
                        Eiffel Software's Eiffel Development Environment is free
                        software; you can redistribute it and/or modify it under
                        the terms of the GNU General Public License as published
                        by the Free Software Foundation, version 2 of the License
                        (available at the URL listed under "license" above).
                        
                        Eiffel Software's Eiffel Development Environment is
                        distributed in the hope that it will be useful,	but
                        WITHOUT ANY WARRANTY; without even the implied warranty
                        of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
                        See the	GNU General Public License for more details.
                        
                        You should have received a copy of the GNU General Public
                        License along with Eiffel Software's Eiffel Development
                        Environment; if not, write to the Free Software Foundation,
                        Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA
                ]"
        source: "[
                         Eiffel Software
                         356 Storke Road, Goleta, CA 93117 USA
                         Telephone 805-685-1006, Fax 805-685-6869
                         Website http://www.eiffel.com
                         Customer support http://support.eiffel.com
                ]"


end -- class EB_METRIC_TOOL_PANEL

