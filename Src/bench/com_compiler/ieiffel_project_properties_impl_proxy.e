indexing
	description: "Implemented `IEiffelProjectProperties' Interface."
	Note: "Automatically generated by the EiffelCOM Wizard."

class
	IEIFFEL_PROJECT_PROPERTIES_IMPL_PROXY

inherit
	IEIFFEL_PROJECT_PROPERTIES_INTERFACE

	ECOM_QUERIABLE

creation
	make_from_other,
	make_from_pointer

feature {NONE}  -- Initialization

	make_from_pointer (cpp_obj: POINTER) is
			-- Make from pointer
		do
			initializer := ccom_create_ieiffel_project_properties_impl_proxy_from_pointer(cpp_obj)
			item := ccom_item (initializer)
		end

feature -- Access

	system_name: STRING is
			-- System name.
		do
			Result := ccom_system_name (initializer)
		end

	root_class_name: STRING is
			-- Root class name.
		do
			Result := ccom_root_class_name (initializer)
		end

	creation_routine: STRING is
			-- Creation routine name.
		do
			Result := ccom_creation_routine (initializer)
		end

	compilation_type: INTEGER is
			-- Compilation type.
			-- See ECOM_X__EIF_COMPILATION_TYPES_ENUM for possible `Result' values.
		do
			Result := ccom_compilation_type (initializer)
		end

	console_application: BOOLEAN is
			-- Is console application?
		do
			Result := ccom_console_application (initializer)
		end

	evaluate_require: BOOLEAN is
			-- Should preconditions be evaluated?
		do
			Result := ccom_evaluate_require (initializer)
		end

	evaluate_ensure: BOOLEAN is
			-- Should postconditions be evaluated?
		do
			Result := ccom_evaluate_ensure (initializer)
		end

	evaluate_check: BOOLEAN is
			-- Should check assertions be evaluated?
		do
			Result := ccom_evaluate_check (initializer)
		end

	evaluate_loop: BOOLEAN is
			-- Should loop assertions be evaluated?
		do
			Result := ccom_evaluate_loop (initializer)
		end

	evaluate_invariant: BOOLEAN is
			-- Should class invariants be evaluated?
		do
			Result := ccom_evaluate_invariant (initializer)
		end

	working_directory: STRING is
			-- Working directory.
		do
			Result := ccom_working_directory (initializer)
		end

	arguments: STRING is
			-- Program arguments.
		do
			Result := ccom_arguments (initializer)
		end

	debug_info: BOOLEAN is
			-- Generate debug info?
		do
			Result := ccom_debug_info (initializer)
		end

	clusters: ECOM_VARIANT is
			-- List of clusters in current project (list of IEiffelClusterProperties*).
		do
			Result := ccom_clusters (initializer)
		end

	assemblies: ECOM_ARRAY [STRING] is
			-- Imported assemblies.
		do
			Result := ccom_assemblies (initializer)
		end

feature -- Status Report

	last_error_code: INTEGER is
			-- Last error code.
		do
			Result := ccom_last_error_code (initializer)
		end

	last_error_description: STRING is
			-- Last error description.
		do
			Result := ccom_last_error_description (initializer)
		end

	last_error_help_file: STRING is
			-- Last error help file.
		do
			Result := ccom_last_error_help_file (initializer)
		end

	last_source_of_exception: STRING is
			-- Last source of exception.
		do
			Result := ccom_last_source_of_exception (initializer)
		end

feature -- Basic Operations

	apply is
			-- Apply changes
		do
			ccom_apply (initializer)
		end

	set_system_name (return_value: STRING) is
			-- System name.
			-- `return_value' [in].  
		do
			ccom_set_system_name (initializer, return_value)
		end

	set_root_class_name (return_value: STRING) is
			-- Root class name.
			-- `return_value' [in].  
		do
			ccom_set_root_class_name (initializer, return_value)
		end

	set_creation_routine (return_value: STRING) is
			-- Creation routine name.
			-- `return_value' [in].  
		do
			ccom_set_creation_routine (initializer, return_value)
		end

	set_compilation_type (return_value: INTEGER) is
			-- Compilation type.
			-- `return_value' [in]. See ECOM_X__EIF_COMPILATION_TYPES_ENUM for possible `return_value' values. 
		do
			ccom_set_compilation_type (initializer, return_value)
		end

	set_console_application (return_value: BOOLEAN) is
			-- Is console application?
			-- `return_value' [in].  
		do
			ccom_set_console_application (initializer, return_value)
		end

	set_evaluate_require (return_value: BOOLEAN) is
			-- Should preconditions be evaluated?
			-- `return_value' [in].  
		do
			ccom_set_evaluate_require (initializer, return_value)
		end

	set_evaluate_ensure (return_value: BOOLEAN) is
			-- Should postconditions be evaluated?
			-- `return_value' [in].  
		do
			ccom_set_evaluate_ensure (initializer, return_value)
		end

	set_evaluate_check (return_value: BOOLEAN) is
			-- Should check assertions be evaluated?
			-- `return_value' [in].  
		do
			ccom_set_evaluate_check (initializer, return_value)
		end

	set_evaluate_loop (return_value: BOOLEAN) is
			-- Should loop assertions be evaluated?
			-- `return_value' [in].  
		do
			ccom_set_evaluate_loop (initializer, return_value)
		end

	set_evaluate_invariant (return_value: BOOLEAN) is
			-- Should class invariants be evaluated?
			-- `return_value' [in].  
		do
			ccom_set_evaluate_invariant (initializer, return_value)
		end

	set_working_directory (return_value: STRING) is
			-- Working directory.
			-- `return_value' [in].  
		do
			ccom_set_working_directory (initializer, return_value)
		end

	set_arguments (return_value: STRING) is
			-- Program arguments.
			-- `return_value' [in].  
		do
			ccom_set_arguments (initializer, return_value)
		end

	set_debug_info (return_value: BOOLEAN) is
			-- Generate debug info?
			-- `return_value' [in].  
		do
			ccom_set_debug_info (initializer, return_value)
		end

	add_cluster (cluster_name: STRING; parent_name: STRING; cluster_path: STRING) is
			-- Add a cluster to the project.
			-- `cluster_name' [in].  
			-- `parent_name' [in].  
			-- `cluster_path' [in].  
		do
			ccom_add_cluster (initializer, cluster_name, parent_name, cluster_path)
		end

	remove_cluster (cluster_name: STRING) is
			-- Remove a cluster from the project.
			-- `cluster_name' [in].  
		do
			ccom_remove_cluster (initializer, cluster_name)
		end

	cluster_properties (cluster_name: STRING): IEIFFEL_CLUSTER_PROPERTIES_INTERFACE is
			-- Cluster properties.
			-- `cluster_name' [in].  
		do
			Result := ccom_cluster_properties (initializer, cluster_name)
		end

	add_assembly (assembly_path: STRING) is
			-- Add an assembly to the project.
			-- `assembly_path' [in].  
		do
			ccom_add_assembly (initializer, assembly_path)
		end

	remove_assembly (assembly_path: STRING) is
			-- Remove an assembly from the project.
			-- `assembly_path' [in].  
		do
			ccom_remove_assembly (initializer, assembly_path)
		end

feature {NONE}  -- Implementation

	delete_wrapper is
			-- Delete wrapper
		do
			ccom_delete_ieiffel_project_properties_impl_proxy(initializer)
		end

feature {NONE}  -- Externals

	ccom_apply (cpp_obj: POINTER) is
			-- Apply changes
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"]()"
		end

	ccom_system_name (cpp_obj: POINTER): STRING is
			-- System name.
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](): EIF_REFERENCE"
		end

	ccom_set_system_name (cpp_obj: POINTER; return_value: STRING) is
			-- System name.
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](EIF_OBJECT)"
		end

	ccom_root_class_name (cpp_obj: POINTER): STRING is
			-- Root class name.
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](): EIF_REFERENCE"
		end

	ccom_set_root_class_name (cpp_obj: POINTER; return_value: STRING) is
			-- Root class name.
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](EIF_OBJECT)"
		end

	ccom_creation_routine (cpp_obj: POINTER): STRING is
			-- Creation routine name.
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](): EIF_REFERENCE"
		end

	ccom_set_creation_routine (cpp_obj: POINTER; return_value: STRING) is
			-- Creation routine name.
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](EIF_OBJECT)"
		end

	ccom_compilation_type (cpp_obj: POINTER): INTEGER is
			-- Compilation type.
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](): EIF_INTEGER"
		end

	ccom_set_compilation_type (cpp_obj: POINTER; return_value: INTEGER) is
			-- Compilation type.
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](EIF_INTEGER)"
		end

	ccom_console_application (cpp_obj: POINTER): BOOLEAN is
			-- Is console application?
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](): EIF_BOOLEAN"
		end

	ccom_set_console_application (cpp_obj: POINTER; return_value: BOOLEAN) is
			-- Is console application?
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](EIF_BOOLEAN)"
		end

	ccom_evaluate_require (cpp_obj: POINTER): BOOLEAN is
			-- Should preconditions be evaluated?
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](): EIF_BOOLEAN"
		end

	ccom_set_evaluate_require (cpp_obj: POINTER; return_value: BOOLEAN) is
			-- Should preconditions be evaluated?
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](EIF_BOOLEAN)"
		end

	ccom_evaluate_ensure (cpp_obj: POINTER): BOOLEAN is
			-- Should postconditions be evaluated?
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](): EIF_BOOLEAN"
		end

	ccom_set_evaluate_ensure (cpp_obj: POINTER; return_value: BOOLEAN) is
			-- Should postconditions be evaluated?
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](EIF_BOOLEAN)"
		end

	ccom_evaluate_check (cpp_obj: POINTER): BOOLEAN is
			-- Should check assertions be evaluated?
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](): EIF_BOOLEAN"
		end

	ccom_set_evaluate_check (cpp_obj: POINTER; return_value: BOOLEAN) is
			-- Should check assertions be evaluated?
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](EIF_BOOLEAN)"
		end

	ccom_evaluate_loop (cpp_obj: POINTER): BOOLEAN is
			-- Should loop assertions be evaluated?
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](): EIF_BOOLEAN"
		end

	ccom_set_evaluate_loop (cpp_obj: POINTER; return_value: BOOLEAN) is
			-- Should loop assertions be evaluated?
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](EIF_BOOLEAN)"
		end

	ccom_evaluate_invariant (cpp_obj: POINTER): BOOLEAN is
			-- Should class invariants be evaluated?
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](): EIF_BOOLEAN"
		end

	ccom_set_evaluate_invariant (cpp_obj: POINTER; return_value: BOOLEAN) is
			-- Should class invariants be evaluated?
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](EIF_BOOLEAN)"
		end

	ccom_working_directory (cpp_obj: POINTER): STRING is
			-- Working directory.
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](): EIF_REFERENCE"
		end

	ccom_set_working_directory (cpp_obj: POINTER; return_value: STRING) is
			-- Working directory.
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](EIF_OBJECT)"
		end

	ccom_arguments (cpp_obj: POINTER): STRING is
			-- Program arguments.
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](): EIF_REFERENCE"
		end

	ccom_set_arguments (cpp_obj: POINTER; return_value: STRING) is
			-- Program arguments.
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](EIF_OBJECT)"
		end

	ccom_debug_info (cpp_obj: POINTER): BOOLEAN is
			-- Generate debug info?
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](): EIF_BOOLEAN"
		end

	ccom_set_debug_info (cpp_obj: POINTER; return_value: BOOLEAN) is
			-- Generate debug info?
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](EIF_BOOLEAN)"
		end

	ccom_clusters (cpp_obj: POINTER): ECOM_VARIANT is
			-- List of clusters in current project (list of IEiffelClusterProperties*).
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](): EIF_REFERENCE"
		end

	ccom_add_cluster (cpp_obj: POINTER; cluster_name: STRING; parent_name: STRING; cluster_path: STRING) is
			-- Add a cluster to the project.
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](EIF_OBJECT,EIF_OBJECT,EIF_OBJECT)"
		end

	ccom_remove_cluster (cpp_obj: POINTER; cluster_name: STRING) is
			-- Remove a cluster from the project.
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](EIF_OBJECT)"
		end

	ccom_cluster_properties (cpp_obj: POINTER; cluster_name: STRING): IEIFFEL_CLUSTER_PROPERTIES_INTERFACE is
			-- Cluster properties.
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](EIF_OBJECT): EIF_REFERENCE"
		end

	ccom_assemblies (cpp_obj: POINTER): ECOM_ARRAY [STRING] is
			-- Imported assemblies.
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](): EIF_REFERENCE"
		end

	ccom_add_assembly (cpp_obj: POINTER; assembly_path: STRING) is
			-- Add an assembly to the project.
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](EIF_OBJECT)"
		end

	ccom_remove_assembly (cpp_obj: POINTER; assembly_path: STRING) is
			-- Remove an assembly from the project.
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](EIF_OBJECT)"
		end

	ccom_delete_ieiffel_project_properties_impl_proxy (a_pointer: POINTER) is
			-- Release resource
		external
			"C++ [delete ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"]()"
		end

	ccom_create_ieiffel_project_properties_impl_proxy_from_pointer (a_pointer: POINTER): POINTER is
			-- Create from pointer
		external
			"C++ [new ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"](IUnknown *)"
		end

	ccom_item (cpp_obj: POINTER): POINTER is
			-- Item
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"]():EIF_POINTER"
		end

	ccom_last_error_code (cpp_obj: POINTER): INTEGER is
			-- Last error code
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"]():EIF_INTEGER"
		end

	ccom_last_error_description (cpp_obj: POINTER): STRING is
			-- Last error description
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"]():EIF_REFERENCE"
		end

	ccom_last_error_help_file (cpp_obj: POINTER): STRING is
			-- Last error help file
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"]():EIF_REFERENCE"
		end

	ccom_last_source_of_exception (cpp_obj: POINTER): STRING is
			-- Last source of exception
		external
			"C++ [ecom_eiffel_compiler::IEiffelProjectProperties_impl_proxy %"ecom_eiffel_compiler_IEiffelProjectProperties_impl_proxy_s.h%"]():EIF_REFERENCE"
		end

end -- IEIFFEL_PROJECT_PROPERTIES_IMPL_PROXY

