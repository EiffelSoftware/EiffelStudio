
--| Copyright (c) 1993-2006 University of Southern California and contributors.
--| All rights reserved.
--| Your use of this work is governed under the terms of the GNU General
--| Public License version 2.

-- This is a test control file

test_name 	infix-integer-real-double
test_description A call to a routine which is implemented as an infix operator gives the wrong results when the formal argument is of a heavier type than the actual argument (e.g., formal is DOUBLE and actual is REAL). Also, in some cases passing a REAL to a REAL formal argument does not give correct results.  In some cases, frozen and melted code give different results.

copy_sub 	Ace $TEST Ace
define		INSTRUCTION ""
copy_sub 	test.e $CLUSTER test.e
copy_raw 	test1.e $CLUSTER test1.e
compile_melted
compile_result 	ok

execute_work 	NONE exec_output1
execute_result 	ok
compare		exec_output1 output

compile_frozen
compile_result 	ok

c_compile_work
c_compile_result ok

execute_work 	NONE exec_output2
execute_result 	ok
compare		exec_output2 output

define		INSTRUCTION "g := g"
copy_sub 	test.e $CLUSTER test.e
compile_melted
compile_result 	ok

execute_work 	NONE exec_output3
execute_result 	ok
compare		exec_output3 output

cleanup_compile

define		INSTRUCTION ""
copy_sub 	test_rev1.e $CLUSTER test.e
compile_melted
compile_result 	ok

execute_work 	NONE exec_output4
execute_result 	ok
compare		exec_output4 output

compile_frozen
compile_result 	ok

c_compile_work
c_compile_result ok

execute_work 	NONE exec_output5
execute_result 	ok
compare		exec_output5 output

define		INSTRUCTION "g := g"
copy_sub 	test_rev1.e $CLUSTER test.e
compile_melted
compile_result 	ok

execute_work 	NONE exec_output6
execute_result 	ok
compare		exec_output6 output

test_end
