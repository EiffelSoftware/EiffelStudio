<document title="Reference for `eif_procedure'" output="studio">
	<meta_data/>
	<paragraph>
		<heading>
			<size>2</size>SYNOPSYS
		</heading>
		<code>
			<bold>#include "eif_cecil. h"</bold>
			<bold/>
			<bold>EIF_PROCEDURE eif_procedure (char *</bold>
			<italic>name</italic>
			<bold>, int *</bold>
			<italic>tid</italic>
			<bold>);</bold>
		</code>
		<heading>
			<size>2</size>DESCRIPTION
		</heading>The
		<bold>eif_procedure()</bold> function returns the address of the Eiffel procedure of name
		<italic>name</italic> from the class, which type identifier is
		<italic>tid</italic>.
		<paragraph>If the visible exception is enabled, it raises an visible exception upon failure. </paragraph>
		<heading>
			<size>2</size>RETURN VALUE
		</heading>It returns NULL when it fails ( the procedure does not exist or is not visible). Otherwise, the address of the procedure is returned.
		<heading>
			<size>2</size>NOTES
		</heading>The Eiffel procedure cannot be a C external. In this case, you must directly call the C routine.
		<line_break/>The return value is an address: to use it as a routine, you must call it with arguments or at least with ().
		<line_break/>No argument type checking is done. You may cast the address of an Eiffel routine obtained with
		<bold>eif_procedure()</bold> when calling it with real arguments.
		<heading>
			<size>2</size>CONFORMANCE
		</heading>ISE Eiffel 4. 4 and later.
		<heading>
			<size>2</size>COMPATIBILITY
		</heading>
		<bold>eif_procedure()</bold> is equivalent to
		<bold>eif_proc()</bold>, which is deprecated.
		<heading>
			<size>2</size>SEE ALSO
		</heading>
		<bold>eif_type_id</bold>(1),
		<bold>eif_reference_function</bold>(1).  Markup created by  1. 0, November 15, 1999.
	</paragraph></document>