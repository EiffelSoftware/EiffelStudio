#!/bin/sh
set -e

export ISE_NAME="Eiffel Software"
export ISE_EMAIL=info@eiffel.com


if [ $# != 1 ]; then
    echo Usage: $0 platform
    exit 1
fi

PLATFORM=$1

. ./set_aliases

export DOCS_DIR=usr/share/doc/$PRODUCT/docs

mkdir debian

# Generate debian package files
SED='sed -e "s/\${ise:product}/$PRODUCT/" -e "s/\${ise:name}/$ISE_NAME/" -e "s/\${ise:email}/$ISE_EMAIL/" -e "s/\${version}/$VERSION/" -e "s/\${datetime}/`date -R`/"'
eval "$SED debian_packaging_files/control > debian/control"
eval "$SED debian_packaging_files/changelog > debian/changelog"
eval "$SED debian_packaging_files/postinst > debian/$PRODUCT.postinst"
eval "$SED debian_packaging_files/prerm > debian/$PRODUCT.prerm"

copy debian_packaging_files/rules debian/rules
copy debian_packaging_files/compat debian/compat
copy debian_packaging_files/copyright debian/$PRODUCT.copyright
copy debian_packaging_files/copyright debian/$PRODUCT-doc.copyright

./make_unix_layout $PLATFORM $INSTALL_DIR `pwd`/debian/$PRODUCT/

cd debian

# First we check if there are any docs (architecture independent)

if test -d "$PRODUCT/usr/share/doc/$PRODUCT/docs"; then
    safe_md $PRODUCT-doc/usr/share/doc/$PRODUCT
    move $PRODUCT/usr/share/doc/$PRODUCT/docs $PRODUCT-doc/usr/share/doc/$PRODUCT

    debuild --check-dirname-level 0 binary-indep > $INSTALL_LOG
    echo Finished building package $PRODUCT-doc
else
    echo $0: No /usr/share/doc/$PRODUCT/docs not present, $PRODUCT-doc package will not be created
fi

# Then we build the main package (architecture dependent)

debuild --check-dirname-level 0 binary-arch
echo Finished building package $PRODUCT

# Remove all temporary files
cd ../
dh_clean
rm -rf debian

