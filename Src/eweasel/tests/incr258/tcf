test_name 	agent-add-derivation
test_description When calling an agent in a generic class, it works fine, but then adding a new generic derivation is causing to call the wrong wrapper.

copy_sub	Ace $TEST Ace
copy_raw	test.e $CLUSTER test.e
copy_raw	a.e $CLUSTER a.e

compile_melted
compile_result ok

execute_work 	NONE 	exec_output1
execute_result 	ok
compare		exec_output1 output1

copy_raw	a_rev1.e $CLUSTER a.e
execute_work 	NONE 	exec_output1_bis
execute_result 	ok
compare		exec_output1_bis output1

copy_raw	test_rev1.e $CLUSTER test.e

compile_melted
compile_result ok

execute_work 	NONE 	exec_output2
execute_result 	ok
compare		exec_output2 output2

copy_raw	test_rev2.e $CLUSTER test.e

compile_melted
compile_result ok

execute_work 	NONE 	exec_output3
execute_result 	ok
compare		exec_output3 output3



test_end
