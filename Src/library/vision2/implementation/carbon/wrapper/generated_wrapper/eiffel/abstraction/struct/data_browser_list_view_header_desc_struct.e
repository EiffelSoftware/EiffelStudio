-- This file has been generated by EWG. Do not edit. Changes will be lost!

class DATA_BROWSER_LIST_VIEW_HEADER_DESC_STRUCT

inherit

	EWG_STRUCT

	DATA_BROWSER_LIST_VIEW_HEADER_DESC_STRUCT_EXTERNAL
		export
			{NONE} all
		end

create

	make_new_unshared,
	make_new_shared,
	make_unshared,
	make_shared

feature {ANY} -- Access

	sizeof: INTEGER is
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	version: INTEGER is
			-- Access member `version'
		require
			exists: exists
		do
			Result := get_version_external (item)
		ensure
			result_correct: Result = get_version_external (item)
		end

	set_version (a_value: INTEGER) is
			-- Set member `version'
		require
			exists: exists
		do
			set_version_external (item, a_value)
		ensure
			a_value_set: a_value = version
		end

	minimumwidth: INTEGER is
			-- Access member `minimumWidth'
		require
			exists: exists
		do
			Result := get_minimumwidth_external (item)
		ensure
			result_correct: Result = get_minimumwidth_external (item)
		end

	set_minimumwidth (a_value: INTEGER) is
			-- Set member `minimumWidth'
		require
			exists: exists
		do
			set_minimumwidth_external (item, a_value)
		ensure
			a_value_set: a_value = minimumwidth
		end

	maximumwidth: INTEGER is
			-- Access member `maximumWidth'
		require
			exists: exists
		do
			Result := get_maximumwidth_external (item)
		ensure
			result_correct: Result = get_maximumwidth_external (item)
		end

	set_maximumwidth (a_value: INTEGER) is
			-- Set member `maximumWidth'
		require
			exists: exists
		do
			set_maximumwidth_external (item, a_value)
		ensure
			a_value_set: a_value = maximumwidth
		end

	titleoffset: INTEGER is
			-- Access member `titleOffset'
		require
			exists: exists
		do
			Result := get_titleoffset_external (item)
		ensure
			result_correct: Result = get_titleoffset_external (item)
		end

	set_titleoffset (a_value: INTEGER) is
			-- Set member `titleOffset'
		require
			exists: exists
		do
			set_titleoffset_external (item, a_value)
		ensure
			a_value_set: a_value = titleoffset
		end

	titlestring_struct: CFSTRING_STRUCT is
			-- Access member `titleString'
		require
			exists: exists
		do
			create Result.make_shared (get_titlestring_external (item))
		ensure
			result_not_void: Result /= Void
			result_has_correct_item: Result.item = titlestring
		end

	set_titlestring_struct (a_value: CFSTRING_STRUCT) is
			-- Set member `titleString'
		require
			a_value_not_void: a_value /= Void
			exists: exists
		do
			set_titlestring_external (item, a_value.item)
		ensure
			a_value_set: a_value.item = titlestring
		end

	titlestring: POINTER is
			-- Access member `titleString'
		require
			exists: exists
		do
			Result := get_titlestring_external (item)
		ensure
			result_correct: Result = get_titlestring_external (item)
		end

	set_titlestring (a_value: POINTER) is
			-- Set member `titleString'
		require
			exists: exists
		do
			set_titlestring_external (item, a_value)
		ensure
			a_value_set: a_value = titlestring
		end

	initialorder: INTEGER is
			-- Access member `initialOrder'
		require
			exists: exists
		do
			Result := get_initialorder_external (item)
		ensure
			result_correct: Result = get_initialorder_external (item)
		end

	set_initialorder (a_value: INTEGER) is
			-- Set member `initialOrder'
		require
			exists: exists
		do
			set_initialorder_external (item, a_value)
		ensure
			a_value_set: a_value = initialorder
		end

	btnfontstyle: POINTER is
			-- Access member `btnFontStyle'
		require
			exists: exists
		do
			Result := get_btnfontstyle_external (item)
		ensure
			result_correct: Result = get_btnfontstyle_external (item)
		end

	set_btnfontstyle (a_value: POINTER) is
			-- Set member `btnFontStyle'
		require
			exists: exists
		do
			set_btnfontstyle_external (item, a_value)
		end

	btncontentinfo: POINTER is
			-- Access member `btnContentInfo'
		require
			exists: exists
		do
			Result := get_btncontentinfo_external (item)
		ensure
			result_correct: Result = get_btncontentinfo_external (item)
		end

	set_btncontentinfo (a_value: POINTER) is
			-- Set member `btnContentInfo'
		require
			exists: exists
		do
			set_btncontentinfo_external (item, a_value)
		end

end
