indexing
	description: "Set the registry keys necessary for COM to activate the component%
				   %Do not modify this class."
	Note: "Automatically generated by the EiffelCOM Wizard."

class
	ECOM_EIF_COMPILER_REGISTRATION

creation
	make

feature {NONE}  -- Initialization

	make is
			-- Initialize server.
		do
			
		end

feature -- Basic Operations

	dll_register_server: INTEGER is
			-- Register Server
		do
			Result := ccom_dll_register_server
		end

	dll_unregister_server: INTEGER is
			-- Unregister Server
		do
			Result := ccom_dll_unregister_server
		end

	dll_get_class_object (a_clsid, a_riid, ppv: POINTER): INTEGER is
			-- Get class object.
		do
			Result := ccom_dll_get_class_object (a_clsid, a_riid, ppv)
		end

	dll_can_unload_now: INTEGER is
			-- Can unload now?
		do
			Result := ccom_dll_can_unload_now
		end

feature {NONE}  -- Externals

	ccom_dll_register_server: INTEGER is
			-- Register server.
		external
			"C++[macro %"server_registration.h%"] (): EIF_INTEGER"
		end

	ccom_dll_unregister_server: INTEGER is
			-- Unregister server.
		external
			"C++[macro %"server_registration.h%"] (): EIF_INTEGER"
		end

	ccom_dll_get_class_object (a_clsid, a_riid, ppv: POINTER): INTEGER is
			-- Get Class Object.
		external
			"C++[macro %"server_registration.h%"] (CLSID *, IID *, void **): EIF_INTEGER"
		end

	ccom_dll_can_unload_now: INTEGER is
			-- Can unload now?
		external
			"C++[macro %"server_registration.h%"] (): EIF_INTEGER"
		end

end -- ECOM_EIF_COMPILER_REGISTRATION

