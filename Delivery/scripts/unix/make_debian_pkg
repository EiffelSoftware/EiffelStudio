#!/bin/sh
set -e

if [ $# != 1 ]; then
	echo Usage: $0 platform
	exit 1
fi


# Define environment variables
. ./set_aliases
PLATFORM=$1
DOCS_DIR=/usr/share/doc/$PRODUCT/docs
export PACKAGING_DIR=`pwd`/packaging
export DEBIAN_DIR=$PACKAGING_DIR/debian
export PRODUCT
export VERSION


# Prepare debian packaging files
sh $DEBIAN_DIR/control.sh
sh $DEBIAN_DIR/changelog.sh
echo '#!/bin/sh' > $DEBIAN_DIR/$PRODUCT.postinst > $DEBIAN_DIR/$PRODUCT.prerm
sh $PACKAGING_DIR/postinstall.sh >> $DEBIAN_DIR/$PRODUCT.postinst
sh $PACKAGING_DIR/preremove.sh >> $DEBIAN_DIR/$PRODUCT.prerm


# Create unix layout in debian directory
./make_unix_layout $PLATFORM $INSTALL_DIR $DEBIAN_DIR/$PRODUCT

cd $DEBIAN_DIR


# First we check if there are any docs (architecture independent)
if test -d "$PRODUCT$DOCS_DIR"; then
	safe_md $PRODUCT-doc$DOCS_DIR
	move $PRODUCT$DOCS_DIR/* $PRODUCT-doc$DOCS_DIR/
	fullrd $PRODUCT$DOCS_DIR

	debuild --check-dirname-level 0 binary-indep
	echo Finished building package $PRODUCT-doc

	# Clean up doc related build files
	rm -rf $DEBIAN_DIR/$PRODUCT-doc
else
	echo "$0: No $DOCS_DIR present, $PRODUCT-doc package will not be created"
fi


# Then we build the main package (architecture dependent)
debuild --check-dirname-level 0 binary-arch
echo Finished building package $PRODUCT


# Clean up all build files
cd ../
dh_clean
rm -rf $DEBIAN_DIR/$PRODUCT
rm -f $DEBIAN_DIR/$PRODUCT.postinst
rm -f $DEBIAN_DIR/$PRODUCT.prerm
rm -f $DEBIAN_DIR/control
rm -f $DEBIAN_DIR/changelog

