CECIL example converting a C array into an Eiffel array.

Compilation
-----------
    Ace file: if you do have an EiffelBase precompile library,
    comment the relevant line in the Ace file.

	o On UNIX
	---------

	Use the relevant makefile for compilation (on linux: Makefile.linux, on
	other unix platforms Makefile.unix, on windows: Makefile.win).
	Adjust the flags, if necessary (CC, CFLAGS, RM, ...).

    With any ISE compiler anterior to 4.3 replace
    the line
        $(LN) EIFGEN/W_code/tst.melted
    by
        $(LN) EIFGEN/W_code/melted.eif
   
    - To compile and execute from scratch with Makefile:
    type:
        make -f Makefile.<platform>   
        tst
	where <platform> is linux, unix, sgi, .... 
	Default makefile works on Linux.

    - To generate only the eiffel lib (from scratch):
        from scratch:
            es4 -freeze	(or freeze from ebench)
            cd EIFGEN/W_code; finish_freezing; make cecil               
        from an existing system on v4.3:
            es4 -freeze -project tst.epr	(or freeze from ebench)
        from an existing system on v4.2:
            es4 -freeze -project `pwd`/.	(or freeze from ebench)
    - To compile the C CECIL files and the C CECIL object:
        make mklink
        make tst

	o On Windows
	------------

	
	- With the Makefile.win and VC++:
		set EIFFEL4=<INSTALL_DIRECTORY>
	(ex: set EIFFEL4=c;\Eiffel4)	
		nmake -f Makefile.win
	  Without the Makefile.win file:		
		Compile the Eiffel system in frozen or finalize mode
		from EiffelBench.
		Compile the main.c file:
			cl -DEIF_WIN32 -I<INSTALL_DIRECTORY>\bench\spec\windows\include -c main.c (with VC++)
		where <INSTALL_DIRECTORY> is the location of your Eiffel delivery.
		Go to the $/EIFGEN/W_code and generate the CECIL library:
			nmake cecil (with VC++)
	- In the same directory, edit the cecil link file:
		copy test.lnk cecil.lnk
		edit cecil.lnk
        Then replace the line 'e1\emain.obj' by '..\..\main.obj'.
        (supposing that your 'main.obj' is located in your
        system directory)
	- You must run the executable in a shell windows: check that the
	option -SUBSYSTEM:CONSOLE is set. Otherwise, the calls to `printf' will
   be useless.	
	- Link your object file with the CECIL library:
		link @tst.lnk
	- Run the exectable:
		tst	

Releases and implementation notes:
----------------------------------
    With any ISE compiler anterior to v4.3, set 
    the macro VERSION to a value inferior to 43 in Makefile file.
    This will use `eif_generic_id' instead of 
    `eif_type_id', which has been extended to generic type in 4.3.
    The version.h include file takes care of the name changes between the
    different version of ISE Eiffel compilers.
	
	On version anterior to 4.2. You must include eif_setup.h-4.1 file in 
	your CECIL C file instead of the eif_setup.h file.

	On version 4.3 and higher and windows, uncomment the line:
	-- consoler_application (yes);
	so that the executable will run on the current MS DOS prompt.

Documentation:
-------------
    ftp://ftp.eiffel.com/pub/doc/cecil/CECIL_DOC.html
    http://www.eiffel.com/doc/manuals/technology/library/cecil

CECIL Examples:
---------------
    ftp://ftp.eiffel.com/pub/examples/cecil/

