<!DOCTYPE type SYSTEM "../type.dtd">
<class>
	<header>
		<modified>False</modified>
		<frozen>True</frozen>
		<expanded>False</expanded>
		<deferred>False</deferred>
		<generic>False</generic>
		<class_eiffel_name>SYSTEM_DRAWING_DRAWING2D_PATHGRADIENTBRUSH</class_eiffel_name>
		<alias>
			<simple_name>PathGradientBrush</simple_name>
			<namespace>System.Drawing.Drawing2D</namespace>
			<assembly_name>System.Drawing</assembly_name>
			<assembly_version>1.0.2411.0</assembly_version>
			<assembly_culture>neutral</assembly_culture>
			<assembly_public_key>b03f5f7f11d50a3a</assembly_public_key>
		</alias>
		<inherit>
			<parent>
				<parent_name>SYSTEM_IDISPOSABLE</parent_name>
			</parent>
			<parent>
				<parent_name>SYSTEM_ICLONEABLE</parent_name>
			</parent>
			<parent>
				<parent_name>SYSTEM_DRAWING_BRUSH</parent_name>
			</parent>
		</inherit>
		<create_none>False</create_none>
	</header>
	<body>
		<initialization>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>False</method>
				<field>False</field>
				<creation_routine>True</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>make_pathgradientbrush_1</feature_eiffel_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINTF]</argument_type>
						<argument_type_full_name>System.Drawing.PointF[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>wrap_mode</argument_eiffel_name>
						<argument_external_name>wrapMode</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_WRAPMODE</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.WrapMode</argument_type_full_name>
					</argument>
				</arguments>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>False</method>
				<field>False</field>
				<creation_routine>True</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>make_pathgradientbrush_3</feature_eiffel_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINT]</argument_type>
						<argument_type_full_name>System.Drawing.Point[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>wrap_mode</argument_eiffel_name>
						<argument_external_name>wrapMode</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_WRAPMODE</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.WrapMode</argument_type_full_name>
					</argument>
				</arguments>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>False</method>
				<field>False</field>
				<creation_routine>True</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>make_pathgradientbrush_2</feature_eiffel_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINT]</argument_type>
						<argument_type_full_name>System.Drawing.Point[]</argument_type_full_name>
					</argument>
				</arguments>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>False</method>
				<field>False</field>
				<creation_routine>True</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>make_pathgradientbrush</feature_eiffel_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINTF]</argument_type>
						<argument_type_full_name>System.Drawing.PointF[]</argument_type_full_name>
					</argument>
				</arguments>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>False</method>
				<field>False</field>
				<creation_routine>True</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>make_pathgradientbrush_4</feature_eiffel_name>
				<arguments>
					<argument>
						<argument_eiffel_name>path</argument_eiffel_name>
						<argument_external_name>path</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_GRAPHICSPATH</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.GraphicsPath</argument_type_full_name>
					</argument>
				</arguments>
			</feature>
		</initialization>
		<access>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_focus_scales</feature_eiffel_name>
				<feature_external_name>get_FocusScales</feature_external_name>
				<return_type>SYSTEM_DRAWING_POINTF</return_type>
				<return_type_full_name>System.Drawing.PointF</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_blend</feature_eiffel_name>
				<feature_external_name>get_Blend</feature_external_name>
				<return_type>SYSTEM_DRAWING_DRAWING2D_BLEND</return_type>
				<return_type_full_name>System.Drawing.Drawing2D.Blend</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_surround_colors</feature_eiffel_name>
				<feature_external_name>get_SurroundColors</feature_external_name>
				<return_type>ARRAY [SYSTEM_DRAWING_COLOR]</return_type>
				<return_type_full_name>System.Drawing.Color[]</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_wrap_mode</feature_eiffel_name>
				<feature_external_name>get_WrapMode</feature_external_name>
				<return_type>SYSTEM_DRAWING_DRAWING2D_WRAPMODE</return_type>
				<return_type_full_name>System.Drawing.Drawing2D.WrapMode</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_center_point</feature_eiffel_name>
				<feature_external_name>get_CenterPoint</feature_external_name>
				<return_type>SYSTEM_DRAWING_POINTF</return_type>
				<return_type_full_name>System.Drawing.PointF</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_transform</feature_eiffel_name>
				<feature_external_name>get_Transform</feature_external_name>
				<return_type>SYSTEM_DRAWING_DRAWING2D_MATRIX</return_type>
				<return_type_full_name>System.Drawing.Drawing2D.Matrix</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_interpolation_colors</feature_eiffel_name>
				<feature_external_name>get_InterpolationColors</feature_external_name>
				<return_type>SYSTEM_DRAWING_DRAWING2D_COLORBLEND</return_type>
				<return_type_full_name>System.Drawing.Drawing2D.ColorBlend</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_center_color</feature_eiffel_name>
				<feature_external_name>get_CenterColor</feature_external_name>
				<return_type>SYSTEM_DRAWING_COLOR</return_type>
				<return_type_full_name>System.Drawing.Color</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_rectangle</feature_eiffel_name>
				<feature_external_name>get_Rectangle</feature_external_name>
				<return_type>SYSTEM_DRAWING_RECTANGLEF</return_type>
				<return_type_full_name>System.Drawing.RectangleF</return_type_full_name>
			</feature>
		</access>
		<element_change>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_interpolation_colors</feature_eiffel_name>
				<feature_external_name>set_InterpolationColors</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_COLORBLEND</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.ColorBlend</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_center_point</feature_eiffel_name>
				<feature_external_name>set_CenterPoint</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINTF</argument_type>
						<argument_type_full_name>System.Drawing.PointF</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_surround_colors</feature_eiffel_name>
				<feature_external_name>set_SurroundColors</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_COLOR]</argument_type>
						<argument_type_full_name>System.Drawing.Color[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_blend</feature_eiffel_name>
				<feature_external_name>set_Blend</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_BLEND</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.Blend</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_center_color</feature_eiffel_name>
				<feature_external_name>set_CenterColor</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_DRAWING_COLOR</argument_type>
						<argument_type_full_name>System.Drawing.Color</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_wrap_mode</feature_eiffel_name>
				<feature_external_name>set_WrapMode</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_WRAPMODE</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.WrapMode</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_transform</feature_eiffel_name>
				<feature_external_name>set_Transform</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_MATRIX</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.Matrix</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_focus_scales</feature_eiffel_name>
				<feature_external_name>set_FocusScales</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINTF</argument_type>
						<argument_type_full_name>System.Drawing.PointF</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
		</element_change>
		<basic_operations>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>rotate_transform_single_matrix_order</feature_eiffel_name>
				<feature_external_name>RotateTransform</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>angle</argument_eiffel_name>
						<argument_external_name>angle</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>order</argument_eiffel_name>
						<argument_external_name>order</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_MATRIXORDER</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.MatrixOrder</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>translate_transform</feature_eiffel_name>
				<feature_external_name>TranslateTransform</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>dx</argument_eiffel_name>
						<argument_external_name>dx</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>dy</argument_eiffel_name>
						<argument_external_name>dy</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_blend_triangular_shape_single_single</feature_eiffel_name>
				<feature_external_name>SetBlendTriangularShape</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>focus</argument_eiffel_name>
						<argument_external_name>focus</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>scale</argument_eiffel_name>
						<argument_external_name>scale</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>scale_transform</feature_eiffel_name>
				<feature_external_name>ScaleTransform</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>sx</argument_eiffel_name>
						<argument_external_name>sx</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>sy</argument_eiffel_name>
						<argument_external_name>sy</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>multiply_transform_matrix_matrix_order</feature_eiffel_name>
				<feature_external_name>MultiplyTransform</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>matrix</argument_eiffel_name>
						<argument_external_name>matrix</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_MATRIX</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.Matrix</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>order</argument_eiffel_name>
						<argument_external_name>order</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_MATRIXORDER</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.MatrixOrder</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>reset_transform</feature_eiffel_name>
				<feature_external_name>ResetTransform</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>clone</feature_eiffel_name>
				<feature_external_name>Clone</feature_external_name>
				<return_type>ANY</return_type>
				<return_type_full_name>System.Object</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_sigma_bell_shape_single_single</feature_eiffel_name>
				<feature_external_name>SetSigmaBellShape</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>focus</argument_eiffel_name>
						<argument_external_name>focus</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>scale</argument_eiffel_name>
						<argument_external_name>scale</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>rotate_transform</feature_eiffel_name>
				<feature_external_name>RotateTransform</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>angle</argument_eiffel_name>
						<argument_external_name>angle</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_sigma_bell_shape</feature_eiffel_name>
				<feature_external_name>SetSigmaBellShape</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>focus</argument_eiffel_name>
						<argument_external_name>focus</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_blend_triangular_shape</feature_eiffel_name>
				<feature_external_name>SetBlendTriangularShape</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>focus</argument_eiffel_name>
						<argument_external_name>focus</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>multiply_transform</feature_eiffel_name>
				<feature_external_name>MultiplyTransform</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>matrix</argument_eiffel_name>
						<argument_external_name>matrix</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_MATRIX</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.Matrix</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>scale_transform_single_single_matrix_order</feature_eiffel_name>
				<feature_external_name>ScaleTransform</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>sx</argument_eiffel_name>
						<argument_external_name>sx</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>sy</argument_eiffel_name>
						<argument_external_name>sy</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>order</argument_eiffel_name>
						<argument_external_name>order</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_MATRIXORDER</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.MatrixOrder</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>translate_transform_single_single_matrix_order</feature_eiffel_name>
				<feature_external_name>TranslateTransform</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>dx</argument_eiffel_name>
						<argument_external_name>dx</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>dy</argument_eiffel_name>
						<argument_external_name>dy</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>order</argument_eiffel_name>
						<argument_external_name>order</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_MATRIXORDER</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.MatrixOrder</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
		</basic_operations>
		<bit_or_infix>False</bit_or_infix>
	</body>
</class>