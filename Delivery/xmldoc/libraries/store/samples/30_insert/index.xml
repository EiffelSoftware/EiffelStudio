<document output="studio" title="Inserter Sample">
	<meta_data/>
	<paragraph>
		<paragraph> This sample lets the user insert a DB_BOOK object in your database  using EiffelStore insertion facilities. </paragraph>
		<paragraph>
			<heading>
				<size>2</size>Compiling
			</heading>
			<paragraph> To compile the example: </paragraph>
			<list ordered="false">
				<item>Launch EiffelStudio. </item>
				<item>Select 
					<bold>Use existing Ace (control file)</bold> and click 
					<bold>OK</bold>. 
				</item>
				<item>Browse to 
					<italic>$ISE_EIFFEL\examples\store\select\</italic>. 
				</item>
				<item>Choose the file that fits your platform and the DBMS you want to use: 
					<list ordered="false">
						<item>
							<italic>Ace.odbc.windows.ace</italic> on Windows platforms for ODBC DBMS drivers
						</item>
						<item>
							<italic>Ace.oracle.windows.ace</italic> on Window platforms for Oracle DBMS
						</item>
						<item>
							<italic>Ace.oracle.unix.ace</italic> on Unix platforms for Oracle DBMS
						</item>
					</list>
				</item>
				<item>Choose the directory where the project will be compiled, by default the same directory containing the Ace file. </item>
				<item>Click 
					<bold>OK</bold>.
				</item>
			</list>
			<paragraph>
				<heading>
					<size>2</size>Running
				</heading>
				<paragraph>This sample lets you interact with your database through a console. </paragraph>
				<paragraph>            First you have to enter the database            connection information: </paragraph>
				<list ordered="false">
					<item>For ODBC:
						<code_block>
Database user authentication:

Data Source Name: handson

Name: smith

Password: mypass
</code_block>
						<note>
							<bold>Note:</bold>
							<italic> Name</italic> and 
							<italic>Password</italic> are no required with          ODBC. If you don't need 
							<italic>Name</italic> and 
							<italic>Password</italic>,
							<italic/>you          can simply hit 
							<bold>Return</bold> when prompted
							<italic>.</italic>
						</note>
					</item>
				</list>
				<list ordered="false">
					<item>For Oracle:
						<code_block>
Database user authentication:

Name: smith@HANDSON

Password: mypass
</code_block>
						<note>
							<bold>Note:</bold>   you have to specify the Oracle User Name and Net          Service Name with the syntax 
							<italic>&lt;user&gt;@&lt;service&gt; </italic>where          
							<italic>&lt;user&gt;</italic> stands for the User Name and 
							<italic>&lt;service&gt;</italic>          stands for the Net Service Name. 
						</note>
					</item>
				</list>
				<paragraph>Then you can insert a book in the database, for        instance: </paragraph>
				<code_block>
What new book should I create?

Author? John Smith

Title? My book

Quantity? 1

Price? 50

Year? 2001

Double value? 12.675

Object inserted
</code_block>
				<note>
					<bold>Note:</bold> if your database does not contain a <class_name>DB_BOOK</class_name> table, this example will create it.
				</note>
				<heading>
					<size>2</size>Under the Hood
				</heading>
				<paragraph>            This sample showcases the use of the 
					<link>
						<url>../../reference/interface/db_store_chart.xml</url>
						<label>DB_STORE</label>
					</link>        class to 
					<link>
						<url>../../content/10_interface_layer/50_data_object_coupling/index.xml</url><anchor_name>insert</anchor_name>
						<label> perform        database insertions</label>
					</link> where the SQL language is totally        abstracted. 
				</paragraph>
				<paragraph>The whole sample code is contained in the root class:</paragraph>
				<list ordered="false">
					<item>
						<link>
							<label>INSERTER</label>
						</link> for Oracle.
					</item>
					<item>
						<link>
							<label>INSERTER_ODBC</label>
						</link> for ODBC.
					</item>
				</list>
			</paragraph>
		</paragraph>
	</paragraph></document>
