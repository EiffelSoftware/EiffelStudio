#!/bin/sh

#Let's compile for PPC on lisbon in background
# Although it won't create the UI version of the compiler because of the
# R_PPC_REL24 linking error for large executable we are still building a
# delivery with only the batch compiler.
#(sh ./make_for_platform lisbon.ise manus linux-ppc 22) &

#Let's compile for Solaris Sparc 64-bit on sparc9 in background
(sh ./make_for_platform sparc9.ise manus solaris-sparc-64 22) &

#Let's compile for Solaris Sparc 32-bit on blade in background
(sh ./make_for_platform blade.ise manus solaris-sparc 22) &

#Let's compile for Solaris x86 in background
(sh ./make_for_platform amsterdam.ise manus solaris-x86 22 ; sh ./make_for_platform amsterdam.ise manus solaris-x86-64 22) &

#Let's compile for Red Hat Fedora and FreeBSD (done together because they are on the same machine and we don't want to overload the machine
(sh ./make_for_platform mojo.ise manus linux-x86 22 ; sh ./make_for_platform freebsd.ise manus freebsd-x86 22) &
(sh ./make_for_platform freebsd_64.ise manus freebsd-x86-64 22 ; sh ./make_for_platform openbsd_64 manus openbsd-x86-64 22) &

#Let's compile for SGI in background
#(
#rsh iris.ise "\rm -f ~/local/freeware" ;
#rsh iris.ise "\ln -s ~/local/freeware32 ~/local/freeware" ;
#sh ./make_for_platform iris.ise manus irix-mips 22 ;
#
#rsh iris.ise "\rm -f ~/local/freeware" ;
#rsh iris.ise "\ln -s ~/local/freeware64 ~/local/freeware" ;
#sh ./make_for_platform iris.ise manus irix-mips-64 22
#) &

#Let's compile for Linux 64 bits in background
(sh ./make_for_platform tokyo.ise manus linux-x86-64 22) &

#Let's compile for OpenBSD in background
(sh ./make_for_platform sushi.inf.ethz.ch manus openbsd-x86 22) &

#Let's compile for Linux Sparc in background
#(sh ./make_for_platform calypso.frankengul.org manu linux-sparc 22 "-l 15") &
