-- EFF (Eiffel Filter Format) for ebench and es4
-- Reverse Engineering Tcl-interface for OBjectTeam


-- Suffix for PostScript files

Suffix	|tcl


--  Construct			|Appearance

-- Major syntactical constructs

Cluster_declaration		|%
	%set defaults [REDefaults new]%N%
	%%$defaults ScreenWidth 1024%N%
	%%$defaults ScreenHeight 1024%N%
	%%$defaults MaxTreeWidth 512%N%
	%%$defaults MaxTreeHeight 512%N%
	%%$defaults MaxClassWidth 256%N%
	%%$defaults MaxClassHeight 300%N%
	%*%N

Class_declaration		|*
Indexing_clause			|*
Class_header			|*
Cluster_header			|*
Formal_generics			|*
Obsolete_clause			|*
Inheritance				|*
Creators				|*
Features				|*
Invariant_clause		|*
Class_end				|*
Feature_clause			|*
Feature_declaration		|*

-- General specifications

Keyword					|*
Symbol					|*
Comment					|*
Tab						|*
New_line				|*
Class_name				|%
	%set diag_class_name "*" %N%
	%set diag_class [%$diag findClass %%$diag_class_name]%N%
	%if {%%$diag_class == ""} {%N%
	%%T set diag_class [%%$diag addClass %%$diag_class_name]%N%
	%}%N
	
Cluster_name			|%
	%set diag_claster_name "*" %N%
	%set diag [REDiagram new {classes} {%%$diag_claster_name} {ObjectDesign} \\%N%
	%{ObjectDesign} {first} {1} {reveng_demo} "" "0"]%N

-- Keywords

alias					|*
all						|*
and						|*
and then				|*
as						|*
check					|*
class					|*
creation				|*
debug					|*
deferred				|*
do						|*
else					|*
elseif					|*
end						|*
ensure					|*
expanded				|*
export					|*
external				|*
false					|*
feature					|*
from					|*
frozen					|*
if						|*
implies					|*
indexing				|*
infix					|*
inherit					|*
inspect					|*
interface				|*			-- Used in short and flat-short forms
invariant				|*
is						|*
like					|*
local					|*
loop					|*
not						|*
obsolete				|*
old						|*
once					|*
or						|*
or else					|*
prefix					|*
redefine				|*
rename					|*
require					|*
rescue					|*
retry					|*
select					|*
strip					|*
then					|*
true					|*
undefine				|*
unique					|*
until					|*
variant					|*
when					|*
xor						|*

-- Symbols

.						|*
..						|*
+						|*
-						|*
%*						|*
/						|*
//						|*
\\						|*
^						|*
=						|*
/=						|*
>						|*
>=						|*
<						|*
<=						|*
:=						|*
?=						|*
<<						|*
>>						|*
->						|*
"						|*
'						|*
;						|*
:						|*
--,						|*
(						|*
)						|*
{						|*
}						|*
[						|*
]						|*
!						|*
!!						|*
$						|*
%--						|*

