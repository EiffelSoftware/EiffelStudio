<document title="Builder window">
	<meta_data>
		<help>
			<toc>
				<envision_pseudo_name>50</envision_pseudo_name>
				<envision_location>Developing With ENViSioN!\Using ENViSioN! within Visual Studio.Net\Adding a New Project\Advanced GUI Project Wizard\Interface Construction Page\Reference</envision_location>
			</toc>
		</help>
	</meta_data>
	<paragraph>
		<heading>
			<size>1</size>Builder window
		</heading>
		<paragraph>The Builder window provides a view of the 
			<link>
				<url>/tools/eiffelbuild/reference/02_notation.html#object</url>
				<label>objects</label>
			</link> in your system, in which the 
			<link>
				<url>/tools/eiffelbuild/reference/02_notation.html#object</url>
				<label>objects</label>
			</link> may be manipulated.
		</paragraph>
		<paragraph>This window may either be shown or hidden (default). To change between these two states, click 
			<image>
				<url>/images/eiffelbuild/icons/icon_builder_window_color.png</url>
			</image> on the 
			<link>
				<url>/tools/eiffelbuild/reference/10_general_interface_description/20_main_toolbars.xml</url>
				<label> main toolbar</label>
			</link>, or select 
			<bold>Show/Hide builder window</bold> from the 
			<bold>View</bold> menu.
		</paragraph>
		<paragraph>
			<image>
				<url>/images/eiffelbuild/screenshots/builder_window.png</url>
			</image>
		</paragraph>
		<paragraph>The content of this window is a representation of the 
			<link>
				<url>/tools/eiffelbuild/reference/02_notation.html#object</url>
				<label>objects</label>
			</link> you have defined in your project. Each 
			<link>
				<url>/tools/eiffelbuild/reference/02_notation.html#object</url>
				<label>object</label>
			</link> is represented by the 
			<link>
				<url>/libraries/vision2/00_introduction.xml</url>
				<label>EiffelVision2</label>
			</link> control matching its type. For example, an 
			<link>
				<url>/tools/eiffelbuild/reference/02_notation.html#object</url>
				<label>object</label>
			</link>representing an EV_BUTTON will be displayed in here using an EV_BUTTON. As this view provides direct access to the objects (
			<link>
				<url>/tools/eiffelbuild/reference/02_notation.html#pick_and_drop</url>
				<label>Pick</label>
			</link> any of the controls in this window), it enables you to build your interface within a view which provides rich visual feedback.
		</paragraph>Because this window is just a view of the 
		<link>
			<url>/tools/eiffelbuild/reference/02_notation.html#object</url>
			<label>objects</label>
		</link>, it will be always synchronized with the 
		<link>
			<url>/tools/eiffelbuild/reference/20_layout_constructor/index.xml</url>
			<label> layout constructor</label>
		</link>. This means you can 
		<link>
			<url>/tools/eiffelbuild/how_to_s/50_reparent_an_object/index.xml</url>
			<label> reparent objects</label>
		</link>, using the 
		<link>
			<url>/tools/eiffelbuild/reference/02_notation.html#pick_and_drop</url>
			<label>pick and drop</label>
		</link> transport method, seamlessly between the two views.
		<line_break></line_break>
		<heading>
			<size>2</size>Visual Differences
		</heading>
		<paragraph>Although the builder window attempts to show you the interface you are developing, it is not a completely accurate representation (Unlike the 
			<link>
				<url>/tools/eiffelbuild/reference/50_layout_window/index.xml</url>
				<label>display window</label>
			</link>). The main difference is that all 
			<link>
				<url>/tools/eiffelbuild/reference/02_notation.html#object</url>
				<label>objects</label>
			</link> representing descendents of EV_CONTAINER are parented in a frame. This was implemented so that you would be able to easily manipulate the containers.
		</paragraph>
		<paragraph>Imagine that this was not the case, and each container 
			<link>
				<url>/tools/eiffelbuild/reference/02_notation.html#object</url>
				<label>object</label>
			</link> was just represented by an 
			<link>
				<url>/libraries/vision2/00_introduction.xml</url>
				<label>EiffelVision2</label>
			</link> object matching its type. Because these containers have no visible screen space when filled with children, manipulation of them would have been difficult, and the functionality of this view would be compromised.
		</paragraph>
		<paragraph>In the screenshot above, you can see that there are two 
			<link>
				<url>/tools/eiffelbuild/reference/02_notation.html#object</url>
				<label>objects</label>
			</link> representing containers in your project, an EV_VERTICAL_BOX, and an EV_HORIZONTAL_BOX (Excluding the EV_TITLED_WINDOW 
			<link>
				<url>/tools/eiffelbuild/reference/02_notation.html#object</url>
				<label>object</label>
			</link> represented by this window).
		</paragraph>
		<paragraph>The properties of the 
			<link>
				<url>/tools/eiffelbuild/reference/02_notation.html#object</url>
				<label>objects</label>
			</link> in you system are always reflected in this window, with a few exceptions:
		</paragraph>
		<list ordered="false">
			<item>'user_can_resize', 'maximum_width', 'maximum_height' and 'title_string' are not reflected in this window.</item>
			<item>'minimum_width' and `minimum_height' are not reflected in any of the controls representing 
				<link>
					<url>/tools/eiffelbuild/reference/02_notation.html#object</url>
					<label>objects</label>
				</link> within this window.
			</item>
		</list>
		<seealso>
			<bold>See also</bold>
			<line_break></line_break>
			<link>
				<url>../50_layout_window/index.xml</url>
				<label>Display window</label>
			</link>
			<line_break></line_break>
			<link>
				<url>/tools/eiffelbuild/reference/20_layout_constructor/index.xml</url>
				<label> Layout constructor</label>
			</link>
		</seealso>
	</paragraph>
</document>