indexing
	description: "Pixel buffer that replaces orignal image file.%
		%The orignal version of this class has been generated by Image Eiffel Code."
	status: "See notice at end of class."
	legal: "See notice at end of class."

class
	SD_ICON_MATRIX_32_32

inherit
	EV_PIXEL_BUFFER

create
	make

feature {NONE} -- Initialization

	make is
			-- Initialization
		do
			make_with_size (100, 67)
			fill_memory
		end

feature {NONE} -- Image data

	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER) is
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(40,00,08,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,08,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,08,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)
				A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,08,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	c_colors_1 (a_ptr: POINTER; a_offset: INTEGER) is
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,B8,C4,FD)A(FF,AA,BA,FB)A(FF,9D,B0,FA)A(FF,8F,A7,F8)A(FF,82,9D,F7)A(FF,6C,8F,F1)A(FF,64,8A,ED)A(FF,5C,86,E8)A(FF,54,81,E4)A(FF,4C,7D,E0)
				A(FF,43,78,DC)A(FF,3B,74,D8)A(FF,33,6F,D4)A(FF,2B,6B,CF)A(FF,23,66,CB)A(FF,1B,62,C7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,23,D0,FF)A(FF,14,CD,FF)A(FF,13,C0,F1)A(FF,1A,AE,D7)A(FF,1B,AB,D2)A(FF,1C,A5,CC)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	c_colors_2 (a_ptr: POINTER; a_offset: INTEGER) is
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,AA,BA,FB)A(FF,82,9D,F7)A(FF,7B,99,F4)A(FF,74,95,F1)A(FF,6D,91,ED)A(FF,67,8D,EA)A(FF,60,89,E7)A(FF,59,85,E4)A(FF,52,81,E1)A(FF,4B,7E,DD)A(FF,44,7A,DA)A(FF,3D,76,D7)A(FF,36,72,D4)A(FF,30,6E,D1)A(FF,29,6A,CD)A(FF,22,66,CA)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,14,CD,FF)A(FF,8F,E8,FF)A(FF,8E,E8,FF)A(FF,34,D5,FF)A(FF,32,D4,FF)A(FF,1D,A5,C8)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,9D,B0,FA)A(FF,82,9D,F7)A(FF,7B,99,F4)A(FF,74,95,F1)A(FF,6D,91,ED)A(FF,67,8D,EA)A(FF,60,89,E7)A(FF,59,85,E4)A(FF,52,81,E1)A(FF,4B,7E,DD)A(FF,44,7A,DA)A(FF,3D,76,D7)A(FF,36,72,D4)A(FF,30,6E,D1)A(FF,29,6A,CD)A(FF,22,66,CA)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,13,C0,F1)A(FF,8E,E8,FF)A(FF,31,D2,FF)A(FF,31,D2,FF)A(FF,31,D2,FF)A(FF,1E,A2,C5)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,8F,A7,F8)A(FF,F2,F2,FF)A(FF,F1,F1,FF)A(FF,F0,F0,FF)A(FF,EF,EF,FF)A(FF,ED,EE,FF)A(FF,EC,ED,FF)A(FF,EB,EC,FF)A(FF,EA,EA,FF)A(FF,E9,E9,FF)A(FF,E8,E8,FF)A(FF,E7,E7,FF)A(FF,E5,E6,FF)A(FF,E4,E5,FF)A(FF,E3,E4,FF)A(FF,22,66,CA)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,1A,AC,D4)A(FF,34,D5,FF)A(FF,31,D4,FF)A(FF,31,D4,FF)A(FF,31,D4,FF)A(FF,1F,9D,C1)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,82,9D,F7)A(FF,F1,F1,FF)A(FF,FA,FA,FF)A(FF,F9,F9,FF)A(FF,F8,F8,FF)A(FF,F7,F7,FF)A(FF,F6,F6,FF)A(FF,F5,F5,FF)A(FF,F4,F4,FF)A(FF,F2,F3,FF)
				A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,E2,E3,FF)A(FF,22,65,C7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,1C,A5,CC)A(FF,1D,A5,C9)A(FF,1C,A6,CD)A(FF,32,D4,FF)A(FF,32,D2,FF)A(FF,32,D2,FF)A(FF,32,D2,FF)A(FF,20,9C,BF)A(FF,22,97,B7)A(FF,22,94,B5)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,B8,C4,FD)A(FF,AA,BA,FB)A(FF,9D,B0,FA)A(FF,8F,A7,F8)A(FF,82,9D,F7)A(FF,6C,8F,F1)A(FF,64,8A,ED)A(FF,5C,86,E8)A(FF,54,81,E4)A(FF,4C,7D,E0)A(FF,43,78,DC)A(FF,3B,74,D8)A(FF,33,6F,D4)A(FF,2B,6B,CF)A(FF,23,66,CB)A(FF,1B,62,C7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	c_colors_3 (a_ptr: POINTER; a_offset: INTEGER) is
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,59,84,E7)A(FF,EC,ED,FF)A(FF,F7,F7,FF)A(FF,F6,F7,FF)A(FF,F6,F6,FF)A(FF,F5,F5,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F0,F0,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,EC,ED,FF)A(FF,EC,EC,FF)A(FF,E7,E7,FF)A(FF,20,60,BF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,15,BB,E9)A(FF,15,BB,E9)A(FF,8F,E8,FF)A(FF,30,D5,FF)A(FF,30,D5,FF)A(FF,30,D5,FF)A(FF,30,D5,FF)A(FF,2A,D0,FF)A(FF,2D,D0,FF)A(FF,20,9C,BF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,AA,BA,FB)A(FF,82,9D,F7)A(FF,7B,99,F4)A(FF,74,95,F1)A(FF,6D,91,ED)A(FF,67,8D,EA)A(FF,60,89,E7)A(FF,59,85,E4)A(FF,52,81,E1)A(FF,4B,7E,DD)
				A(FF,44,7A,DA)A(FF,3D,76,D7)A(FF,36,72,D4)A(FF,30,6E,D1)A(FF,29,6A,CD)A(FF,22,66,CA)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,50,7F,E2)A(FF,EB,EB,FF)A(FF,F6,F7,FF)A(FF,F6,F6,FF)A(FF,F5,F5,FF)A(FF,F4,F4,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,ED,EE,FF)A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,E8,E9,FF)A(FF,20,5F,BC)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,DF,DF,DF)A(FF,1F,9F,C3)A(FF,8C,E7,FF)A(FF,33,D4,FF)A(FF,32,D1,FF)A(FF,33,CE,FB)A(FF,34,CC,F8)A(FF,35,C7,F3)A(FF,24,91,B0)A(FF,DF,DF,DF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,9D,B0,FA)A(FF,82,9D,F7)A(FF,7B,99,F4)A(FF,74,95,F1)A(FF,6D,91,ED)A(FF,67,8D,EA)A(FF,60,89,E7)A(FF,59,85,E4)A(FF,52,81,E1)A(FF,4B,7E,DD)A(FF,44,7A,DA)A(FF,3D,76,D7)A(FF,36,72,D4)A(FF,30,6E,D1)A(FF,29,6A,CD)A(FF,22,66,CA)A(FF,DF,DF,DF)A(FF,15,BB,E9)A(FF,1F,9F,C3)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,48,7A,DE)A(FF,E9,EA,FF)A(FF,F6,F6,FF)A(FF,F5,F5,FF)A(FF,F4,F4,FF)A(FF,F3,F3,FF)A(FF,DF,DF,DF)A(FF,25,8C,AB)A(FF,26,8B,A8)A(FF,DF,DF,DF)A(FF,ED,EE,FF)A(FF,EC,ED,FF)A(FF,EB,EC,FF)A(FF,EA,EB,FF)A(FF,EA,EA,FF)A(FF,20,5E,BA)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,B8,C4,FD)A(FF,AA,BA,FB)A(FF,9D,B0,FA)A(FF,8F,A7,F8)A(FF,15,BB,E9)A(FF,15,BB,E9)A(FF,8F,E8,FF)A(FF,33,CE,FB)A(FF,34,CC,F8)A(FF,35,C7,F3)A(FF,18,B5,E0)A(FF,20,9C,BF)A(FF,33,6F,D4)A(FF,2B,6B,CF)A(FF,23,66,CB)A(FF,1B,62,C7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,8F,A7,F8)A(FF,F2,F2,FF)A(FF,F1,F1,FF)A(FF,F0,F0,FF)A(FF,EF,EF,FF)A(FF,ED,EE,FF)A(FF,EC,ED,FF)A(FF,EB,EC,FF)A(FF,EA,EA,FF)A(FF,E9,E9,FF)A(FF,E8,E8,FF)A(FF,E7,E7,FF)A(FF,E5,E6,FF)A(FF,E4,E5,FF)A(FF,DF,DF,DF)A(FF,15,BB,E9)A(FF,21,99,BB)A(FF,16,B9,E8)A(FF,20,9C,BF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,36,71,D5)A(FF,E6,E7,FF)A(FF,F4,F4,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,15,BB,E9)A(FF,15,BB,E9)A(FF,18,B5,E0)A(FF,20,9C,BF)
				A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,E9,EA,FF)A(FF,E8,E9,FF)A(FF,ED,EE,FF)A(FF,26,5E,B7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,AA,BA,FB)A(FF,82,9D,F7)A(FF,7B,99,F4)A(FF,74,95,F1)A(FF,6D,91,ED)A(FF,21,99,BB)A(FF,87,E5,FF)A(FF,34,CC,F8)A(FF,35,C7,F3)A(FF,36,C5,EF)A(FF,24,8E,AD)A(FF,3D,76,D7)A(FF,36,72,D4)A(FF,30,6E,D1)A(FF,29,6A,CD)A(FF,22,66,CA)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,82,9D,F7)A(FF,F1,F1,FF)A(FF,FA,FA,FF)A(FF,F9,F9,FF)A(FF,F8,F8,FF)A(FF,F7,F7,FF)A(FF,F6,F6,FF)A(FF,F5,F5,FF)A(FF,F4,F4,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,DF,DF,DF)A(FF,15,BB,E9)A(FF,20,9C,BC)A(FF,16,B9,E8)A(FF,87,E5,FF)A(FF,94,E9,FF)A(FF,1E,A3,C7)A(FF,1F,9E,C3)A(FF,20,9B,BD)A(FF,23,94,B4)A(FF,24,91,B0)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	c_colors_4 (a_ptr: POINTER; a_offset: INTEGER) is
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,36,71,D5)A(FF,E6,E7,FF)A(FF,F4,F4,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,DF,DF,DF)A(FF,23,94,B3)A(FF,BC,F0,FF)A(FF,8E,DC,F4)A(FF,25,8C,AB)A(FF,DF,DF,DF)A(FF,EB,EC,FF)A(FF,E9,EA,FF)A(FF,E8,E9,FF)A(FF,ED,EE,FF)A(FF,26,5E,B7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,9D,B0,FA)A(FF,82,9D,F7)A(FF,7B,99,F4)A(FF,74,95,F1)A(FF,6D,91,ED)A(FF,15,BB,E9)A(FF,15,BB,E9)A(FF,8F,E8,FF)A(FF,36,C5,EF)A(FF,18,B5,E0)A(FF,20,9C,BF)A(FF,3D,76,D7)A(FF,36,72,D4)A(FF,30,6E,D1)A(FF,29,6A,CD)A(FF,22,66,CA)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,59,84,E7)A(FF,EC,ED,FF)A(FF,F7,F7,FF)A(FF,F6,F7,FF)A(FF,F6,F6,FF)A(FF,F5,F5,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F0,F0,FF)
				A(FF,DF,DF,DF)A(FF,15,BB,E9)A(FF,20,9C,BF)A(FF,16,B9,E8)A(FF,87,E5,FF)A(FF,94,E9,FF)A(FF,29,CD,FD)A(FF,2F,CE,FD)A(FF,8F,E8,FF)A(FF,8E,E7,FF)A(FF,8C,E7,FF)A(FF,89,E6,FF)A(FF,24,8E,AD)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,2D,6C,D0)A(FF,E5,E6,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,15,BB,E9)A(FF,15,BB,E9)A(FF,8F,E8,FF)A(FF,36,C5,EF)A(FF,18,B5,E0)A(FF,20,9C,BF)A(FF,EA,EB,FF)A(FF,E8,E9,FF)A(FF,E7,E8,FF)A(FF,EF,EF,FF)A(FF,26,5E,B7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,8F,A7,F8)A(FF,F2,F2,FF)A(FF,F1,F1,FF)A(FF,F0,F0,FF)A(FF,EF,EF,FF)A(FF,DF,DF,DF)A(FF,23,94,B3)A(FF,87,E5,FF)A(FF,36,C2,EC)A(FF,25,8C,AB)A(FF,DF,DF,DF)A(FF,E7,E7,FF)A(FF,E5,E6,FF)A(FF,E4,E5,FF)A(FF,E3,E4,FF)A(FF,22,66,CA)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,50,7F,E2)A(FF,EB,EB,FF)A(FF,F6,F7,FF)A(FF,F6,F6,FF)A(FF,F5,F5,FF)A(FF,F4,F4,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,EF,F0,FF)A(FF,1F,9F,C3)A(FF,16,B9,E8)A(FF,87,E5,FF)A(FF,94,E9,FF)A(FF,2A,CF,FF)A(FF,29,CD,FD)A(FF,2A,CC,FC)A(FF,2F,CE,FC)A(FF,32,CC,F8)A(FF,33,C7,F1)A(FF,33,C2,E9)A(FF,34,B9,DD)A(FF,25,8E,AC)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,24,67,CC)A(FF,E3,E4,FF)A(FF,F2,F2,FF)A(FF,F1,F1,FF)A(FF,DF,DF,DF)A(FF,21,99,BB)A(FF,87,E5,FF)A(FF,34,CC,F8)A(FF,35,C7,F3)A(FF,36,C5,EF)A(FF,24,8E,AD)A(FF,DF,DF,DF)A(FF,E6,E6,FF)A(FF,E4,E5,FF)A(FF,E3,E4,FF)A(FF,2E,66,C2)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,82,9D,F7)A(FF,F1,F1,FF)A(FF,FA,FA,FF)A(FF,F9,F9,FF)A(FF,F8,F8,FF)A(FF,F7,F7,FF)A(FF,15,BB,E9)A(FF,15,BB,E9)A(FF,18,B5,E0)A(FF,20,9C,BF)A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,E2,E3,FF)A(FF,22,65,C7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,48,7A,DE)A(FF,E9,EA,FF)A(FF,F6,F6,FF)A(FF,F5,F5,FF)A(FF,F4,F4,FF)A(FF,F3,F3,FF)A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,F0,F0,FF)A(FF,EE,EF,FF)A(FF,20,9C,BF)A(FF,18,B5,E0)A(FF,2C,CF,FF)A(FF,2A,CF,FF)A(FF,29,CD,FD)A(FF,2A,CC,FC)A(FF,2B,C9,F8)A(FF,2F,CC,FA)A(FF,32,CC,F8)A(FF,33,C7,F1)A(FF,33,C2,E9)A(FF,34,B9,DD)A(FF,25,8D,A9)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,1C,62,C8)A(FF,22,66,CA)A(FF,22,65,C8)A(FF,21,64,C6)A(FF,15,BB,E9)A(FF,15,BB,E9)A(FF,8F,E8,FF)A(FF,33,CE,FB)A(FF,34,CC,F8)A(FF,35,C7,F3)
				A(FF,18,B5,E0)A(FF,20,9C,BF)A(FF,26,5E,B7)A(FF,23,5C,B4)A(FF,2A,62,BC)A(FF,30,68,C5)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,59,84,E7)A(FF,EC,ED,FF)A(FF,F7,F7,FF)A(FF,F6,F7,FF)A(FF,F6,F6,FF)A(FF,F5,F5,FF)A(FF,DF,DF,DF)A(FF,25,8C,AB)A(FF,26,8B,A8)A(FF,DF,DF,DF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,EC,ED,FF)A(FF,EC,EC,FF)A(FF,E7,E7,FF)A(FF,20,60,BF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,36,71,D5)A(FF,E6,E7,FF)A(FF,F4,F4,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F0,F0,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,EC,ED,FF)A(FF,DF,DF,DF)A(FF,21,99,BB)A(FF,22,97,B7)A(FF,18,B5,E0)A(FF,2A,CC,FC)A(FF,2B,C9,F8)A(FF,2C,C6,F5)A(FF,2E,C9,F6)A(FF,32,CC,F8)A(FF,33,C7,F1)A(FF,33,C2,E9)A(FF,34,B9,DD)A(FF,26,8B,A8)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	c_colors_5 (a_ptr: POINTER; a_offset: INTEGER) is
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,DF,DF,DF)A(FF,1F,9F,C3)A(FF,8C,E7,FF)A(FF,33,D4,FF)A(FF,32,D1,FF)A(FF,33,CE,FB)A(FF,34,CC,F8)A(FF,35,C7,F3)A(FF,24,91,B0)A(FF,DF,DF,DF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,50,7F,E2)A(FF,EB,EB,FF)A(FF,F6,F7,FF)A(FF,F6,F6,FF)A(FF,F5,F5,FF)A(FF,F4,F4,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,ED,EE,FF)A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,E8,E9,FF)A(FF,20,5F,BC)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,36,71,D5)A(FF,E6,E7,FF)A(FF,F4,F4,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F0,F0,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,EC,ED,FF)
				A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,DF,DF,DF)A(FF,23,94,B3)A(FF,24,91,B0)A(FF,18,B5,E0)A(FF,2C,C5,F2)A(FF,2D,C1,ED)A(FF,27,87,A1)A(FF,28,87,A0)A(FF,26,8B,A7)A(FF,27,8A,A4)A(FF,27,8A,A4)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,15,BB,E9)A(FF,15,BB,E9)A(FF,8F,E8,FF)A(FF,32,D1,FF)A(FF,32,D1,FF)A(FF,32,D1,FF)A(FF,32,D1,FF)A(FF,2A,D0,FF)A(FF,2D,D0,FF)A(FF,20,9C,BF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,48,7A,DE)A(FF,E9,EA,FF)A(FF,F6,F6,FF)A(FF,F5,F5,FF)A(FF,F4,F4,FF)A(FF,F3,F3,FF)A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,F0,F0,FF)A(FF,EE,EF,FF)A(FF,ED,EE,FF)A(FF,EC,ED,FF)A(FF,EB,EC,FF)A(FF,EA,EB,FF)A(FF,EA,EA,FF)A(FF,20,5E,BA)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,2D,6C,D0)A(FF,E5,E6,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,ED,EE,FF)A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,EA,EB,FF)A(FF,E8,E9,FF)A(FF,E7,E8,FF)A(FF,DF,DF,DF)A(FF,25,8C,AB)A(FF,26,8B,A8)A(FF,18,B5,E0)A(FF,28,87,A0)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,1C,A5,CC)A(FF,1D,A5,C9)A(FF,1E,A3,C7)A(FF,8F,E8,FF)A(FF,32,CC,F8)A(FF,32,CC,F8)A(FF,32,CC,F8)A(FF,22,97,B7)A(FF,22,97,B7)A(FF,22,94,B5)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,36,71,D5)A(FF,E6,E7,FF)A(FF,F4,F4,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F0,F0,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,EC,ED,FF)A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,E9,EA,FF)A(FF,E8,E9,FF)A(FF,ED,EE,FF)A(FF,26,5E,B7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,24,67,CC)A(FF,E3,E4,FF)A(FF,F2,F2,FF)A(FF,F1,F1,FF)A(FF,F0,F0,FF)A(FF,EE,EF,FF)A(FF,ED,ED,FF)A(FF,EC,EC,FF)A(FF,EB,EB,FF)A(FF,E9,EA,FF)A(FF,E8,E9,FF)A(FF,E7,E8,FF)A(FF,E6,E6,FF)A(FF,E4,E5,FF)A(FF,E3,E4,FF)A(FF,2E,66,C2)A(FF,DF,DF,DF)A(FF,27,87,A2)A(FF,29,81,9A)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,1F,9E,C3)A(FF,8E,E7,FF)A(FF,33,C7,F1)A(FF,33,C7,F1)A(FF,33,C7,F1)
				A(FF,23,94,B4)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,36,71,D5)A(FF,E6,E7,FF)A(FF,F4,F4,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F0,F0,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,EC,ED,FF)A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,E9,EA,FF)A(FF,E8,E9,FF)A(FF,ED,EE,FF)A(FF,26,5E,B7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,1C,62,C8)A(FF,22,66,CA)A(FF,22,65,C8)A(FF,21,64,C6)A(FF,21,63,C3)A(FF,21,61,C1)A(FF,20,60,BF)A(FF,20,5F,BD)A(FF,20,5E,BB)A(FF,1F,5D,B8)A(FF,1F,5C,B6)A(FF,1F,5B,B4)A(FF,26,5E,B7)A(FF,23,5C,B4)A(FF,2A,62,BC)A(FF,30,68,C5)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	c_colors_6 (a_ptr: POINTER; a_offset: INTEGER) is
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,20,9B,BD)A(FF,8C,E7,FF)A(FF,33,C2,E9)A(FF,33,C2,E9)A(FF,33,C2,E9)A(FF,23,93,B1)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,2D,6C,D0)A(FF,E5,E6,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,ED,EE,FF)A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,EA,EB,FF)A(FF,E8,E9,FF)A(FF,E7,E8,FF)A(FF,EF,EF,FF)A(FF,26,5E,B7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,23,94,B4)A(FF,89,E6,FF)A(FF,34,B9,DD)A(FF,34,B9,DD)A(FF,34,B9,DD)A(FF,25,8E,AC)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,24,67,CC)A(FF,E3,E4,FF)A(FF,F2,F2,FF)A(FF,F1,F1,FF)A(FF,F0,F0,FF)A(FF,EE,EF,FF)A(FF,ED,ED,FF)A(FF,EC,EC,FF)A(FF,EB,EB,FF)A(FF,E9,EA,FF)A(FF,E8,E9,FF)A(FF,E7,E8,FF)A(FF,E6,E6,FF)A(FF,E4,E5,FF)A(FF,E3,E4,FF)A(FF,2E,66,C2)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,24,91,B0)A(FF,24,8E,AD)A(FF,25,8E,AC)A(FF,25,8D,A9)A(FF,26,8B,A8)A(FF,26,8B,A8)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,1C,62,C8)A(FF,22,66,CA)A(FF,22,65,C8)A(FF,21,64,C6)A(FF,21,63,C3)A(FF,21,61,C1)A(FF,20,60,BF)A(FF,20,5F,BD)A(FF,20,5E,BB)A(FF,1F,5D,B8)A(FF,1F,5C,B6)A(FF,1F,5B,B4)A(FF,26,5E,B7)A(FF,23,5C,B4)A(FF,2A,62,BC)A(FF,30,68,C5)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	c_colors_7 (a_ptr: POINTER; a_offset: INTEGER) is
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	c_colors_8 (a_ptr: POINTER; a_offset: INTEGER) is
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,08,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,08,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)
				A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,08,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,08,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	c_colors_9 (a_ptr: POINTER; a_offset: INTEGER) is
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,B8,C4,FD)A(FF,AA,BA,FB)A(FF,9D,B0,FA)A(FF,8F,A7,F8)A(FF,82,9D,F7)A(FF,6C,8F,F1)A(FF,64,8A,ED)A(FF,5C,86,E8)A(FF,54,81,E4)A(FF,4C,7D,E0)A(FF,43,78,DC)A(FF,3B,74,D8)A(FF,33,6F,D4)A(FF,2B,6B,CF)A(FF,23,66,CB)A(FF,1B,62,C7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	c_colors_10 (a_ptr: POINTER; a_offset: INTEGER) is
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,AA,BA,FB)
				A(FF,82,9D,F7)A(FF,7B,99,F4)A(FF,74,95,F1)A(FF,6D,91,ED)A(FF,67,8D,EA)A(FF,60,89,E7)A(FF,59,85,E4)A(FF,52,81,E1)A(FF,4B,7E,DD)A(FF,44,7A,DA)A(FF,3D,76,D7)A(FF,36,72,D4)A(FF,30,6E,D1)A(FF,29,6A,CD)A(FF,22,66,CA)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,9D,B0,FA)A(FF,82,9D,F7)A(FF,7B,99,F4)A(FF,74,95,F1)A(FF,6D,91,ED)A(FF,67,8D,EA)A(FF,60,89,E7)A(FF,59,85,E4)A(FF,52,81,E1)A(FF,4B,7E,DD)A(FF,44,7A,DA)A(FF,3D,76,D7)A(FF,36,72,D4)A(FF,30,6E,D1)A(FF,29,6A,CD)A(FF,22,66,CA)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,8F,A7,F8)A(FF,F2,F2,FF)A(FF,F1,F1,FF)A(FF,F0,F0,FF)A(FF,EF,EF,FF)A(FF,ED,EE,FF)A(FF,EC,ED,FF)A(FF,EB,EC,FF)A(FF,EA,EA,FF)A(FF,E9,E9,FF)A(FF,E8,E8,FF)A(FF,E7,E7,FF)A(FF,E5,E6,FF)A(FF,E4,E5,FF)A(FF,E3,E4,FF)A(FF,22,66,CA)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,B8,C4,FD)A(FF,AA,BA,FB)A(FF,9D,B0,FA)A(FF,8F,A7,F8)A(FF,82,9D,F7)A(FF,6C,8F,F1)A(FF,64,8A,ED)A(FF,5C,86,E8)A(FF,54,81,E4)A(FF,4C,7D,E0)A(FF,43,78,DC)A(FF,3B,74,D8)A(FF,33,6F,D4)A(FF,2B,6B,CF)A(FF,23,66,CB)A(FF,1B,62,C7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,82,9D,F7)A(FF,F1,F1,FF)A(FF,FA,FA,FF)A(FF,59,86,E1)A(FF,40,78,E0)A(FF,95,AC,E1)A(FF,F6,F6,FF)A(FF,F5,F5,FF)A(FF,F4,F4,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,E2,E3,FF)A(FF,22,65,C7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	c_colors_11 (a_ptr: POINTER; a_offset: INTEGER) is
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,B8,C4,FD)A(FF,AA,BA,FB)A(FF,9D,B0,FA)A(FF,8F,A7,F8)A(FF,82,9D,F7)A(FF,6C,8F,F1)A(FF,64,8A,ED)A(FF,5C,86,E8)A(FF,54,81,E4)A(FF,4C,7D,E0)A(FF,43,78,DC)A(FF,3B,74,D8)A(FF,33,6F,D4)A(FF,2B,6B,CF)A(FF,23,66,CB)A(FF,1B,62,C7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,AA,BA,FB)A(FF,82,9D,F7)A(FF,7B,99,F4)A(FF,74,95,F1)A(FF,6D,91,ED)A(FF,67,8D,EA)A(FF,60,89,E7)A(FF,59,85,E4)A(FF,52,81,E1)A(FF,4B,7E,DD)A(FF,44,7A,DA)A(FF,3D,76,D7)A(FF,36,72,D4)A(FF,30,6E,D1)A(FF,29,6A,CD)A(FF,22,66,CA)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,62,89,EC)
				A(FF,EE,EE,FF)A(FF,F8,F8,FF)A(FF,BB,CA,EC)A(FF,40,68,D0)A(FF,40,78,E0)A(FF,83,99,DC)A(FF,95,AC,E1)A(FF,F2,F3,FF)A(FF,F1,F1,FF)A(FF,F0,F0,FF)A(FF,EF,F0,FF)A(FF,ED,EE,FF)A(FF,EC,ED,FF)A(FF,E5,E6,FF)A(FF,21,62,C2)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,AA,BA,FB)A(FF,82,9D,F7)A(FF,7B,99,F4)A(FF,74,95,F1)A(FF,6D,91,ED)A(FF,67,8D,EA)A(FF,60,89,E7)A(FF,59,85,E4)A(FF,52,81,E1)A(FF,4B,7E,DD)A(FF,44,7A,DA)A(FF,3D,76,D7)A(FF,36,72,D4)A(FF,30,6E,D1)A(FF,29,6A,CD)A(FF,22,66,CA)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,9D,B0,FA)A(FF,82,9D,F7)A(FF,7B,99,F4)A(FF,74,95,F1)A(FF,6D,91,ED)A(FF,67,8D,EA)A(FF,60,89,E7)A(FF,59,85,E4)A(FF,52,81,E1)A(FF,4B,7E,DD)A(FF,44,7A,DA)A(FF,3D,76,D7)A(FF,36,72,D4)A(FF,30,6E,D1)A(FF,29,6A,CD)A(FF,22,66,CA)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,8E,AC,E8)A(FF,64,87,D4)A(FF,40,68,D0)A(FF,40,68,C0)A(FF,40,68,D0)A(FF,40,68,D0)A(FF,40,60,B0)A(FF,30,50,90)A(FF,30,50,90)A(FF,47,63,9C)A(FF,F0,F0,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,EC,ED,FF)A(FF,EC,EC,FF)A(FF,E7,E7,FF)A(FF,20,60,BF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,1C,A5,CC)A(FF,15,BB,E9)A(FF,DF,DF,DF)A(00,FF,FF,FF)A(FF,9D,B0,FA)A(FF,82,9D,F7)A(FF,7B,99,F4)A(FF,74,95,F1)A(FF,6D,91,ED)A(FF,67,8D,EA)A(FF,60,89,E7)A(FF,59,85,E4)A(FF,52,81,E1)A(FF,4B,7E,DD)A(FF,44,7A,DA)A(FF,3D,76,D7)A(FF,36,72,D4)A(FF,30,6E,D1)A(FF,29,6A,CD)A(FF,22,66,CA)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,8F,A7,F8)A(FF,F2,F2,FF)A(FF,F1,F1,FF)A(FF,F0,F0,FF)A(FF,EF,EF,FF)A(FF,ED,EE,FF)A(FF,EC,ED,FF)A(FF,EB,EC,FF)A(FF,EA,EA,FF)A(FF,E9,E9,FF)A(FF,E8,E8,FF)A(FF,E7,E7,FF)A(FF,E5,E6,FF)A(FF,E4,E5,FF)A(FF,E3,E4,FF)A(FF,22,66,CA)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,8E,A6,DE)A(FF,83,99,DC)A(FF,BB,CA,EC)A(FF,EB,EB,FF)A(FF,F6,F7,FF)A(FF,BB,CA,EC)A(FF,40,58,A0)A(FF,30,50,90)A(FF,47,63,9C)A(FF,95,AC,E1)A(FF,F1,F1,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,ED,EE,FF)A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,E8,E9,FF)A(FF,20,5F,BC)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,1D,A5,C9)A(FF,15,BB,E9)A(FF,1F,9F,C3)A(FF,15,BB,E9)A(FF,DF,DF,DF)A(FF,F2,F2,FF)A(FF,F1,F1,FF)A(FF,F0,F0,FF)A(FF,EF,EF,FF)A(FF,ED,EE,FF)A(FF,EC,ED,FF)
				A(FF,EB,EC,FF)A(FF,EA,EA,FF)A(FF,E9,E9,FF)A(FF,E8,E8,FF)A(FF,E7,E7,FF)A(FF,E5,E6,FF)A(FF,E4,E5,FF)A(FF,E3,E4,FF)A(FF,22,66,CA)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,82,9D,F7)A(FF,F1,F1,FF)A(FF,FA,FA,FF)A(FF,F9,F9,FF)A(FF,F8,F8,FF)A(FF,F7,F7,FF)A(FF,F6,F6,FF)A(FF,F5,F5,FF)A(FF,F4,F4,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,E2,E3,FF)A(FF,22,65,C7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,64,87,D4)A(FF,BB,CA,EC)A(FF,48,7A,DE)A(FF,E9,EA,FF)A(FF,F6,F6,FF)A(FF,40,60,B0)A(FF,47,63,9C)A(FF,95,AC,E1)A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,F0,F0,FF)A(FF,EE,EF,FF)A(FF,ED,EE,FF)A(FF,EC,ED,FF)A(FF,EB,EC,FF)A(FF,EA,EB,FF)A(FF,EA,EA,FF)A(FF,20,5E,BA)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	c_colors_12 (a_ptr: POINTER; a_offset: INTEGER) is
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,23,D0,FF)A(FF,14,CD,FF)A(FF,13,C0,F1)A(FF,1A,AC,D4)A(FF,1C,A6,CD)A(FF,8F,E8,FF)A(FF,8C,E7,FF)A(FF,15,BB,E9)A(FF,21,99,BB)A(FF,15,BB,E9)A(FF,DF,DF,DF)A(FF,F9,F9,FF)A(FF,F8,F8,FF)A(FF,F7,F7,FF)A(FF,F6,F6,FF)A(FF,F5,F5,FF)A(FF,F4,F4,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,E2,E3,FF)A(FF,22,65,C7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,62,89,EC)A(FF,EE,EE,FF)A(FF,F8,F8,FF)A(FF,F7,F7,FF)A(FF,F6,F7,FF)A(FF,F6,F6,FF)A(FF,F4,F4,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F1,FF)A(FF,F0,F0,FF)A(FF,EF,F0,FF)A(FF,ED,EE,FF)A(FF,EC,ED,FF)A(FF,E5,E6,FF)A(FF,21,62,C2)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,50,70,D0)A(00,FF,FF,FF)A(FF,36,71,D5)
				A(FF,E6,E7,FF)A(FF,F4,F4,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F0,F0,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,EC,ED,FF)A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,E9,EA,FF)A(FF,E8,E9,FF)A(FF,ED,EE,FF)A(FF,26,5E,B7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,14,CD,FF)A(FF,C0,F2,FF)A(FF,8E,E8,FF)A(FF,8D,E8,FF)A(FF,8C,E7,FF)A(FF,33,D4,FF)A(FF,33,D4,FF)A(FF,8F,E8,FF)A(FF,87,E5,FF)A(FF,15,BB,E9)A(FF,23,94,B3)A(FF,15,BB,E9)A(FF,DF,DF,DF)A(FF,F5,F5,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F0,F0,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,EC,ED,FF)A(FF,EC,EC,FF)A(FF,E7,E7,FF)A(FF,20,60,BF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,59,84,E7)A(FF,EC,ED,FF)A(FF,F7,F7,FF)A(FF,F6,F7,FF)A(FF,F6,F6,FF)A(FF,F5,F5,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F0,F0,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,EC,ED,FF)A(FF,EC,EC,FF)A(FF,E7,E7,FF)A(FF,20,60,BF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,B8,C4,FD)A(FF,AA,BA,FB)A(FF,9D,B0,FA)A(FF,8F,A7,F8)A(FF,85,A1,F4)A(FF,4E,6E,C0)A(FF,72,95,EC)A(FF,68,8F,E8)A(FF,5E,89,E4)A(FF,54,84,DF)A(FF,4A,7E,DB)A(FF,40,78,D7)A(FF,37,72,D3)A(FF,2D,6C,CF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,EC,ED,FF)A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,E9,EA,FF)A(FF,E8,E9,FF)A(FF,ED,EE,FF)A(FF,26,5E,B7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,13,C0,F1)A(FF,8E,E8,FF)A(FF,31,D2,FF)A(FF,31,D4,FF)A(FF,32,D2,FF)A(FF,30,D5,FF)A(FF,32,D1,FF)A(FF,33,CE,FB)A(FF,34,CC,F8)A(FF,8F,E8,FF)A(FF,87,E5,FF)A(FF,15,BB,E9)A(FF,25,8C,AB)A(FF,F4,F4,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,ED,EE,FF)A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,E8,E9,FF)A(FF,20,5F,BC)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,50,7F,E2)A(FF,EB,EB,FF)A(FF,F6,F7,FF)A(FF,F6,F6,FF)A(FF,F5,F5,FF)A(FF,F4,F4,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,ED,EE,FF)A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,E8,E9,FF)A(FF,20,5F,BC)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,9D,B0,FA)A(FF,82,9D,F7)A(FF,7B,99,F4)A(FF,74,95,F1)A(FF,6D,91,ED)A(FF,50,70,D0)A(FF,60,89,E7)A(FF,59,85,E4)A(FF,52,81,E1)A(FF,4B,7E,DD)A(FF,44,7A,DA)A(FF,3D,76,D7)A(FF,36,72,D4)A(FF,30,6E,D1)A(FF,EE,EF,FF)A(FF,ED,EE,FF)A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,EA,EB,FF)A(FF,E8,E9,FF)A(FF,E7,E8,FF)A(FF,EF,EF,FF)A(FF,26,5E,B7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,1A,AE,D7)A(FF,8D,E8,FF)A(FF,31,D2,FF)A(FF,31,D4,FF)A(FF,32,D2,FF)A(FF,30,D5,FF)A(FF,33,CE,FB)A(FF,34,CC,F8)A(FF,35,C7,F3)A(FF,36,C5,EF)A(FF,36,C2,EC)A(FF,18,B5,E0)A(FF,26,8B,A8)A(FF,F3,F3,FF)A(FF,F1,F2,FF)
				A(FF,F1,F1,FF)A(FF,F0,F0,FF)A(FF,EE,EF,FF)A(FF,ED,EE,FF)A(FF,EC,ED,FF)A(FF,EB,EC,FF)A(FF,EA,EB,FF)A(FF,EA,EA,FF)A(FF,20,5E,BA)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,48,7A,DE)A(FF,E9,EA,FF)A(FF,F6,F6,FF)A(FF,F5,F5,FF)A(FF,F4,F4,FF)A(FF,F3,F3,FF)A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,F0,F0,FF)A(FF,EE,EF,FF)A(FF,ED,EE,FF)A(FF,EC,ED,FF)A(FF,EB,EC,FF)A(FF,EA,EB,FF)A(FF,EA,EA,FF)A(FF,20,5E,BA)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,8F,A7,F8)A(FF,B8,C4,FD)A(FF,B4,C1,FC)A(FF,B0,BE,FC)A(FF,AB,BB,FB)A(FF,5A,7B,D2)A(FF,A3,B5,F9)A(FF,9E,B2,F8)A(FF,9A,B0,F8)A(FF,96,AD,F7)A(FF,92,AA,F6)A(FF,8E,A7,F6)A(FF,89,A4,F5)A(FF,22,66,CA)A(FF,EC,EC,FF)A(FF,EB,EB,FF)A(FF,E9,EA,FF)A(FF,E8,E9,FF)A(FF,E7,E8,FF)A(FF,E6,E6,FF)A(FF,E4,E5,FF)A(FF,E3,E4,FF)A(FF,2E,66,C2)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	c_colors_13 (a_ptr: POINTER; a_offset: INTEGER) is
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,1B,AB,D2)A(FF,8C,E7,FF)A(FF,31,D2,FF)A(FF,31,D4,FF)A(FF,32,D2,FF)A(FF,30,D5,FF)A(FF,34,CC,F8)A(FF,35,C7,F3)A(FF,36,C5,EF)A(FF,18,B5,E0)A(FF,25,8C,AB)A(FF,20,9C,BF)A(FF,DF,DF,DF)A(FF,F1,F2,FF)A(FF,F0,F0,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,EC,ED,FF)A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,E9,EA,FF)A(FF,E8,E9,FF)A(FF,ED,EE,FF)A(FF,26,5E,B7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,36,71,D5)A(FF,E6,E7,FF)A(FF,F4,F4,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F0,F0,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,EC,ED,FF)A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,E9,EA,FF)A(FF,E8,E9,FF)A(FF,ED,EE,FF)A(FF,26,5E,B7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,82,9D,F7)A(FF,F1,F1,FF)A(FF,FA,FA,FF)A(FF,F9,F9,FF)A(FF,F8,F8,FF)A(FF,83,99,DC)A(FF,F6,F6,FF)A(FF,F5,F5,FF)
				A(FF,F4,F4,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,E2,E3,FF)A(FF,22,65,C7)A(FF,20,5F,BD)A(FF,20,5E,BB)A(FF,1F,5D,B8)A(FF,1F,5C,B6)A(FF,1F,5B,B4)A(FF,26,5E,B7)A(FF,23,5C,B4)A(FF,2A,62,BC)A(FF,30,68,C5)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,1C,A5,CC)A(FF,1D,A5,C8)A(FF,1E,A2,C5)A(FF,1F,9D,C1)A(FF,20,9C,BF)A(FF,2A,D0,FF)A(FF,35,C7,F3)A(FF,18,B5,E0)A(FF,24,8E,AD)A(FF,20,9C,BF)A(FF,DF,DF,DF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F0,F0,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,EC,ED,FF)A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,E9,EA,FF)A(FF,E8,E9,FF)A(FF,ED,EE,FF)A(FF,26,5E,B7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,36,71,D5)A(FF,E6,E7,FF)A(FF,F4,F4,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F0,F0,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,EC,ED,FF)A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,E9,EA,FF)A(FF,E8,E9,FF)A(FF,ED,EE,FF)A(FF,26,5E,B7)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,6B,8E,F0)A(FF,EF,EF,FF)A(FF,F9,F9,FF)A(FF,F8,F8,FF)A(FF,F7,F7,FF)A(FF,F6,F7,FF)A(FF,F5,F5,FF)A(FF,F4,F4,FF)A(FF,F3,F3,FF)A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,F0,F0,FF)A(FF,E4,E4,FF)A(FF,21,63,C4)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,22,97,B7)A(FF,2D,D0,FF)A(FF,24,91,B0)A(FF,20,9C,BF)A(FF,DF,DF,DF)A(FF,E5,E6,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,ED,EE,FF)A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,EA,EB,FF)A(FF,E8,E9,FF)A(FF,E7,E8,FF)A(FF,EF,EF,FF)A(FF,26,5E,B7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,2D,6C,D0)A(FF,E5,E6,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F1,F1,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,ED,EE,FF)A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,EA,EB,FF)A(FF,E8,E9,FF)A(FF,E7,E8,FF)A(FF,EF,EF,FF)A(FF,26,5E,B7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,62,89,EC)A(FF,EE,EE,FF)A(FF,F8,F8,FF)A(FF,F7,F7,FF)A(FF,F6,F7,FF)A(FF,F6,F6,FF)A(FF,F4,F4,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F1,FF)A(FF,F0,F0,FF)A(FF,EF,F0,FF)A(FF,E5,E6,FF)A(FF,21,62,C2)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,22,94,B5)A(FF,20,9C,BF)A(FF,DF,DF,DF)A(00,FF,FF,FF)A(FF,24,67,CC)A(FF,E3,E4,FF)A(FF,F2,F2,FF)A(FF,F1,F1,FF)A(FF,F0,F0,FF)A(FF,EE,EF,FF)A(FF,ED,ED,FF)
				A(FF,EC,EC,FF)A(FF,EB,EB,FF)A(FF,E9,EA,FF)A(FF,E8,E9,FF)A(FF,E7,E8,FF)A(FF,E6,E6,FF)A(FF,E4,E5,FF)A(FF,E3,E4,FF)A(FF,2E,66,C2)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,24,67,CC)A(FF,E3,E4,FF)A(FF,F2,F2,FF)A(FF,F1,F1,FF)A(FF,F0,F0,FF)A(FF,EE,EF,FF)A(FF,ED,ED,FF)A(FF,EC,EC,FF)A(FF,EB,EB,FF)A(FF,E9,EA,FF)A(FF,E8,E9,FF)A(FF,E7,E8,FF)A(FF,E6,E6,FF)A(FF,E4,E5,FF)A(FF,E3,E4,FF)A(FF,2E,66,C2)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,59,84,E7)A(FF,EC,ED,FF)A(FF,F7,F7,FF)A(FF,F6,F7,FF)A(FF,F6,F6,FF)A(FF,F5,F5,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F0,F0,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,E7,E7,FF)A(FF,20,60,BF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	c_colors_14 (a_ptr: POINTER; a_offset: INTEGER) is
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,1C,62,C8)A(FF,22,66,CA)A(FF,22,65,C8)A(FF,21,64,C6)A(FF,21,63,C3)A(FF,21,61,C1)A(FF,20,60,BF)A(FF,20,5F,BD)A(FF,20,5E,BB)A(FF,1F,5D,B8)A(FF,1F,5C,B6)A(FF,1F,5B,B4)A(FF,26,5E,B7)A(FF,23,5C,B4)A(FF,2A,62,BC)A(FF,30,68,C5)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,1C,62,C8)A(FF,22,66,CA)A(FF,22,65,C8)A(FF,21,64,C6)A(FF,21,63,C3)A(FF,21,61,C1)A(FF,20,60,BF)A(FF,20,5F,BD)A(FF,20,5E,BB)A(FF,1F,5D,B8)A(FF,1F,5C,B6)A(FF,1F,5B,B4)A(FF,26,5E,B7)A(FF,23,5C,B4)A(FF,2A,62,BC)A(FF,30,68,C5)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,50,7F,E2)A(FF,EB,EB,FF)A(FF,F6,F7,FF)A(FF,F6,F6,FF)A(FF,F5,F5,FF)A(FF,F4,F4,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)
				A(FF,F1,F1,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,ED,EE,FF)A(FF,E8,E9,FF)A(FF,20,5F,BC)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,36,71,D5)A(FF,E6,E7,FF)A(FF,F4,F4,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F0,F0,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,EC,ED,FF)A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,ED,EE,FF)A(FF,26,5E,B7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,36,71,D5)A(FF,E6,E7,FF)A(FF,F4,F4,FF)A(FF,F3,F3,FF)A(FF,F2,F3,FF)A(FF,F1,F2,FF)A(FF,F0,F0,FF)A(FF,EF,F0,FF)A(FF,EE,EF,FF)A(FF,EC,ED,FF)A(FF,EC,EC,FF)A(FF,EB,EC,FF)A(FF,ED,EE,FF)A(FF,26,5E,B7)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,24,67,CC)A(FF,E3,E4,FF)A(FF,F2,F2,FF)A(FF,F1,F1,FF)A(FF,F0,F0,FF)A(FF,EE,EF,FF)A(FF,ED,ED,FF)A(FF,EC,EC,FF)A(FF,EB,EB,FF)A(FF,E9,EA,FF)A(FF,E8,E9,FF)A(FF,E7,E8,FF)A(FF,E3,E4,FF)A(FF,25,61,BC)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	c_colors_15 (a_ptr: POINTER; a_offset: INTEGER) is
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(FF,1C,62,C8)A(FF,22,66,CA)A(FF,22,65,C8)A(FF,21,64,C6)A(FF,21,63,C3)A(FF,21,61,C1)A(FF,20,60,BF)A(FF,20,5F,BD)
				A(FF,20,5E,BB)A(FF,1F,5D,B8)A(FF,21,5E,BA)A(FF,23,60,BC)A(FF,26,61,BD)A(FF,28,63,BF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	c_colors_16 (a_ptr: POINTER; a_offset: INTEGER) is
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(40,00,12,00)A(40,00,08,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,08,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)
				A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,08,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,00,00)A(40,00,08,00);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	build_colors (a_ptr: POINTER) is
			-- Build `colors'.
		do
			c_colors_0 (a_ptr, 0)
			c_colors_1 (a_ptr, 400)
			c_colors_2 (a_ptr, 800)
			c_colors_3 (a_ptr, 1200)
			c_colors_4 (a_ptr, 1600)
			c_colors_5 (a_ptr, 2000)
			c_colors_6 (a_ptr, 2400)
			c_colors_7 (a_ptr, 2800)
			c_colors_8 (a_ptr, 3200)
			c_colors_9 (a_ptr, 3600)
			c_colors_10 (a_ptr, 4000)
			c_colors_11 (a_ptr, 4400)
			c_colors_12 (a_ptr, 4800)
			c_colors_13 (a_ptr, 5200)
			c_colors_14 (a_ptr, 5600)
			c_colors_15 (a_ptr, 6000)
			c_colors_16 (a_ptr, 6400)
		end

feature {NONE} -- Image data filling.

	fill_memory is
			-- Fill image data into memory.
		local
			l_imp: EV_PIXEL_BUFFER_IMP
			l_pointer: POINTER
		do
			l_imp ?= implementation
			check not_void: l_imp /= Void end

			l_pointer := l_imp.data_ptr
			if l_pointer /= default_pointer then
				build_colors (l_pointer)
				l_imp.unlock
			end
		end

indexing
	library:	"SmartDocking: Library of reusable components for Eiffel."
	copyright:	"Copyright (c) 1984-2006, Eiffel Software and others"
	license:	"Eiffel Forum License v2 (see http://www.eiffel.com/licensing/forum.txt)"
	source: "[
			 Eiffel Software
			 356 Storke Road, Goleta, CA 93117 USA
			 Telephone 805-685-1006, Fax 805-685-6869
			 Website http://www.eiffel.com
			 Customer support http://support.eiffel.com
		]"


end -- SD_CURSORS
