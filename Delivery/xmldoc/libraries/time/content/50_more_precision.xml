<document title="More precision">
	<meta_data>
		<help>
			<toc>				
				<envision_pseudo_name>50</envision_pseudo_name>
				<envision_title>More Precision</envision_title>
			</toc>
		</help>
	</meta_data>
	<paragraph>
		<paragraph>
			<class_name>TIME</class_name> and 
			<class_name>TIME_DURATION</class_name> are designed to deal with high precision in time. The only limit is the one from number representation.
		</paragraph>
		<paragraph>The classes 
			<class_name>TIME</class_name> and 
			<class_name>TIME_DURATION</class_name> have an attribute <feature_name>fine_second</feature_name> (inherited from 
			<class_name>TIME_VALUE</class_name>) which allows high precision. This attribute represents the number of seconds with fractions (it is an instance of <class_name>DOUBLE</class_name>). From this attribute are calculated second and fractional_second (which are functions): second is the truncated-to-integer part and fractional_second is the difference between the two previous one, so that the sum of second and fractional_second is always equal to fine_second (see invariant in 
			<class_name>TIME_VALUE</class_name>).
		</paragraph>
		<paragraph>As a result of this, when <feature_name>fine_second</feature_name> is positive (3.55 for example), <feature_name>second</feature_name> and <feature_name>fractional_second</feature_name> are also positive (3 and 0.55). When <feature_name>fine_second</feature_name> is negative (- 3.55 for example), <feature_name>second</feature_name> and <feature_name>fractional_second</feature_name> are also negative (- 3 and - 0.55).</paragraph>
		<paragraph>Manipulation on second and fractional_second are in fact always made through fine_second. Users who do not want to deal with precision do not need to care about this.</paragraph>
		<paragraph>Features dealing with <feature_name>fine_second</feature_name> and <feature_name>fractional_second</feature_name> are described here.</paragraph>
		<heading>
			<size>4</size>Creation (common to 
			<content>
				<class_name>TIME, </class_name>
				<class_name>TIME_DURATION</class_name>)
			</content>
		</heading>
		<list ordered="false">
			<item><feature_name>make_fine</feature_name> looks like make but it takes a <class_name>DOUBLE </class_name>for its third argument (instead of an <class_name>INTEGER</class_name>). fine_second is then set to this value.</item>
			<item><feature_name>make_by_fine_seconds</feature_name> looks like <feature_name>make_by_seconds</feature_name> but it takes a <class_name>DOUBLE</class_name> for argument (instead of an <class_name>INTEGER</class_name>). Comparison (common) There are no new features. The same ones are available since they are written to deal with precision. It is possible to compare two instances, one with precision and the other one without.</item>
		</list>
		<heading>
			<size>4</size>Measurement and access
		</heading>
		<paragraph>In 
			<class_name>TIME</class_name>:
		</paragraph>
		<paragraph>- <feature_name>fine_seconds</feature_name> looks like seconds but it contains fractions.</paragraph>
		<paragraph>In 
			<class_name>TIME_DURATION</class_name>:
		</paragraph>
		<paragraph>- <feature_name>fine_seconds_count</feature_name> looks like <feature_name>seconds_count</feature_name> but it contains fractions.</paragraph>
		<heading>
			<size>4</size>Element change
		</heading>
		<list ordered="false">
			<item><feature_name>set_fine_second</feature_name> allows to set directly <feature_name>fine_second</feature_name> to a <class_name>DOUBLE</class_name>. In 
				<class_name>TIME</class_name>, a precondition requires that the argument stands in the allowed range.
			</item>
			<item><feature_name>set_fractionals</feature_name> allows to set directly <feature_name>fractional_second</feature_name> to a <class_name>DOUBLE</class_name>. In <class_name>TIME </class_name>a precondition requires that the argument is positive and smaller than one. In 
				<class_name>TIME_DURATION</class_name> the precondition is particular: it is not allowed to have an argument with a different sign than second. Otherwise, as long as <feature_name>fractional_second</feature_name> and <feature_name>second</feature_name> are linked to <feature_name>fine_second</feature_name>, such a setting would mean that second is also changed and <feature_name>fractional_second</feature_name> set to a different value. For example if <feature_name>fine_second</feature_name> = 4.5 (then second = 4 and fractional_second = 0.5) and - 0.8 is the argument of <feature_name>set_fractionals</feature_name>.
			</item>
		</list>
		<paragraph>The result of that would be<feature_name> fine_second</feature_name> = 3.2 (then <feature_name>second</feature_name> = 3 and <feature_name>fractional_second</feature_name> = 0.2). It is better to prohibit that.</paragraph>
		<paragraph>Comment: feature <feature_name>set_second</feature_name> (from both 
			<class_name>TIME</class_name> and 
			<class_name>TIME_DURATION</class_name>) will cut down <feature_name>fractional_second</feature_name> to zero.
		</paragraph>
		<heading>
			<size>4</size>Operations
		</heading>
		<paragraph>- <feature_name>fine_second_add</feature_name> looks like <feature_name>second_add</feature_name> but takes a <feature_name>DOUBLE</feature_name> for argument.</paragraph>
		<paragraph>In 
			<class_name>TIME_DURATION</class_name>:
		</paragraph>
		<paragraph>- <feature_name>canonical</feature_name> and <feature_name>to_canonical</feature_name> deals already with precision. There is nothing different.</paragraph>
	</paragraph></document>
