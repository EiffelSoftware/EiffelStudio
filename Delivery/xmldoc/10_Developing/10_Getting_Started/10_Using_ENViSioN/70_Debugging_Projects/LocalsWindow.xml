<document output="envision" title="Locals Window">
	<meta_data>
		<help>
			<toc>
				<envision_pseudo_name>40</envision_pseudo_name>
			</toc>
		</help>
	</meta_data>
	<paragraph>
		<table>
			<row>
				<cell>
					<paragraph>  While 
						<link>
							<url>/10_Developing/10_Getting_Started/10_Using_ENViSioN/20_Solution_Explorer/index.htm</url>
							<label>Debugging</label>
						</link>  a system, it is possible to view the values of all locals of the current 
						<link>
							<url>/20_Language/10_Eiffel_NET/10_Conventions/10_Terminology.htm#feature</url>
							<label>feature</label>
						</link>, and attributes of the current 
						<link>
							<url>/20_Language/10_Eiffel_NET/10_Conventions/10_Terminology.htm#object</url>
							<label>Object</label>
						</link>  in which the execution has stopped.
					</paragraph>
					<paragraph>  The Locals Window consists of three columns, used to display the relevent information: </paragraph>
					<list ordered="false">
						<item>  Name - The name of the local, may also include 
							<code>
								<keyword>Current</keyword>
							</code> to represent the current object.
						</item>
						<item>  Value - If the object referred to by the Name field is a basic type, then Value  will be the value of the object. If it is a reference type, then Value will be  its declared .Net type which is displayed in parenthesis.  </item>
						<item>  Type - The Eiffel name corresponding to the Dynamic Type of the object unless it is a non basic .NET type in which case, the .NET name will be displayed.  </item>
					</list>
					<paragraph>
						<image>
							<alt_text>LocalsDebuggingWindow</alt_text>
							<url>LocalsDebuggingWindow.png</url>
						</image>
					</paragraph>
					<paragraph>  In the screenshot above, the execution of the system has stopped in a 
						<link>
							<url>/20_Language/10_Eiffel_NET/10_Conventions/10_Terminology.htm#feature</url>
							<label>feature</label>
						</link>  with three locals :- 
						<bold>a</bold>, 
						<bold>ss</bold> and 
						<bold>s</bold>. 
						<code>
							<keyword>Current</keyword>
						</code> is also available and corresponds to the current 
						<link>
							<url>/20_Language/10_Eiffel_NET/10_Conventions/10_Terminology.htm#object</url>
							<label>Object</label>
						</link> in which execution has stopped.
						<list ordered="false">
							<item>
								<code>
									<keyword>Current</keyword>
								</code> - The current object in which execution has stopped. In this case, ROOT_CLASS. All attributes are displayed when the node is expanded.
							</item>
							<item>
								<bold>a</bold> - an ARRAY  , of INTEGER  and currently contains four items.
							</item>
							<item>
								<bold>s</bold> - an Eiffel STRING
							</item>
							<item>
								<bold>ss</bold> - a .NET 
								<code>
									<class_name>SYSTEM_STRING</class_name>
								</code>
							</item>
						</list>
					</paragraph>
					<paragraph>  The class 
						<code>
							<class_name>ROOT_CLASS</class_name>
						</code> has two 
						<code>
							<keyword>Once</keyword>
						</code>
						<link>
							<url>/20_Language/10_Eiffel_NET/10_Conventions/10_Terminology.htm#feature</url>
							<label>features</label>
						</link>  , 
						<code>
							<feature_name>io</feature_name>
						</code> and 
						<code>
							<feature_name>operating_environment</feature_name>
						</code>  which do not show up directly in the Locals Window as they are not attributes. However  , they do show up indirectly through the 
						<code>
							<feature_name>done</feature_name>
						</code> and 
						<code>
							<feature_name>result</feature_name>
						</code> attributes displayed in the screenshot above. For every Once  , an attribute is available, allowing you to see whether the 
						<code>
							<keyword>Once</keyword>
						</code> has been executed.  The name of this 
						<link>
							<url>/20_Language/10_Eiffel_NET/10_Conventions/10_Terminology.htm#feature</url>
							<label>feature</label>
						</link>  corresponds to the name of the 
						<code>
							<keyword>Once</keyword>
						</code>, with 
						<code>
							<feature_name>_done</feature_name>
						</code> appended. For example, in the screenshot above,  we have 
						<code>
							<feature_name>io_done</feature_name>
						</code> and 
						<code>
							<feature_name>operating_environment_done</feature_name>
						</code>, both of which demonstrate the associated 
						<code>
							<keyword>Once</keyword>
						</code>
						<link>
							<url>/20_Language/10_Eiffel_NET/10_Conventions/10_Terminology.htm#feature</url>
							<label>feature</label>
						</link> has not been executed as  they evaluate to False. For every 
						<code>
							<keyword>Once</keyword>
						</code>
						<link>
							<url>/20_Language/10_Eiffel_NET/10_Conventions/10_Terminology.htm#feature</url>
							<label>feature</label>
						</link>  which has a return type, an attribute is generated, the value of which is the Result from the 
						<code>
							<keyword>Once</keyword>
						</code>,  or Void if it has not already been executed. In the screenshot above, we have 
						<code>
							<feature_name>io_result</feature_name>
						</code> and 
						<code>
							<feature_name>operating_environment_result</feature_name>
						</code>.
					</paragraph>
					<paragraph>  This ability to see the current state of an 
						<link>
							<url>/20_Language/10_Eiffel_NET/10_Conventions/10_Terminology.htm#object</url>
							<label>Object</label>
						</link>  can prove to be a critical component in successful 
						<link>
							<url>/10_Developing/10_Getting_Started/10_Using_ENViSioN/20_Solution_Explorer/index.htm</url>
							<label>Debugging</label>
						</link>.
					</paragraph>
					<seealso>
						<bold>See also</bold>
						<line_break/>
						<link>
							<url>./index.htm</url>
							<label>Debugging</label>
						</link>
						<line_break/>
						<link>
							<url>./CallStackWindow.htm</url>
							<label>Call Stack Window</label>
						</link>
						<line_break/>
						<link>
							<url>./BreakPointWindow.htm</url>
							<label>Break Point Window</label>
						</link>
						<line_break/>
						<link>
							<url>./WatchWindow.htm</url>
							<label>Watch Window</label>
						</link>
						<line_break/>
					</seealso>
				</cell>
			</row>
		</table>
	</paragraph></document>