note
	description: "Control interfaces. Help file: "
	legal: "See notice at end of class."
	status: "See notice at end of class."
	generator: "Automatically generated by the EiffelCOM Wizard."

deferred class
	IVIEW_OBJECT_EX_INTERFACE

inherit
	IVIEW_OBJECT2_INTERFACE

feature -- Status Report

	get_rect_user_precondition (dw_aspect: INTEGER; p_rect: X_RECTL_RECORD): BOOLEAN
			-- User-defined preconditions for `get_rect'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	get_view_status_user_precondition (pdw_status: INTEGER_REF): BOOLEAN
			-- User-defined preconditions for `get_view_status'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	query_hit_point_user_precondition (dw_aspect: INTEGER; p_rect_bounds: TAG_RECT_RECORD; ptl_loc: TAG_POINT_RECORD; l_close_hint: INTEGER; p_hit_result: INTEGER_REF): BOOLEAN
			-- User-defined preconditions for `query_hit_point'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	query_hit_rect_user_precondition (dw_aspect: INTEGER; p_rect_bounds: TAG_RECT_RECORD; p_rect_loc: TAG_RECT_RECORD; l_close_hint: INTEGER; p_hit_result: INTEGER_REF): BOOLEAN
			-- User-defined preconditions for `query_hit_rect'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	get_natural_extent_user_precondition (dw_aspect: INTEGER; lindex: INTEGER; ptd: TAG_DVTARGETDEVICE_RECORD; hic_target_dev: POINTER; p_extent_info: TAG_EXTENT_INFO_RECORD; psizel: TAG_SIZEL_RECORD): BOOLEAN
			-- User-defined preconditions for `get_natural_extent'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

feature -- Basic Operations

	get_rect (dw_aspect: INTEGER; p_rect: X_RECTL_RECORD)
			-- No description available.
			-- `dw_aspect' [in].  
			-- `p_rect' [out].  
		require
			non_void_p_rect: p_rect /= Void
			valid_p_rect: p_rect.item /= default_pointer
			get_rect_user_precondition: get_rect_user_precondition (dw_aspect, p_rect)
		deferred

		end

	get_view_status (pdw_status: INTEGER_REF)
			-- No description available.
			-- `pdw_status' [out].  
		require
			non_void_pdw_status: pdw_status /= Void
			get_view_status_user_precondition: get_view_status_user_precondition (pdw_status)
		deferred

		end

	query_hit_point (dw_aspect: INTEGER; p_rect_bounds: TAG_RECT_RECORD; ptl_loc: TAG_POINT_RECORD; l_close_hint: INTEGER; p_hit_result: INTEGER_REF)
			-- No description available.
			-- `dw_aspect' [in].  
			-- `p_rect_bounds' [in].  
			-- `ptl_loc' [in].  
			-- `l_close_hint' [in].  
			-- `p_hit_result' [out].  
		require
			non_void_p_rect_bounds: p_rect_bounds /= Void
			valid_p_rect_bounds: p_rect_bounds.item /= default_pointer
			non_void_ptl_loc: ptl_loc /= Void
			valid_ptl_loc: ptl_loc.item /= default_pointer
			non_void_p_hit_result: p_hit_result /= Void
			query_hit_point_user_precondition: query_hit_point_user_precondition (dw_aspect, p_rect_bounds, ptl_loc, l_close_hint, p_hit_result)
		deferred

		end

	query_hit_rect (dw_aspect: INTEGER; p_rect_bounds: TAG_RECT_RECORD; p_rect_loc: TAG_RECT_RECORD; l_close_hint: INTEGER; p_hit_result: INTEGER_REF)
			-- No description available.
			-- `dw_aspect' [in].  
			-- `p_rect_bounds' [in].  
			-- `p_rect_loc' [in].  
			-- `l_close_hint' [in].  
			-- `p_hit_result' [out].  
		require
			non_void_p_rect_bounds: p_rect_bounds /= Void
			valid_p_rect_bounds: p_rect_bounds.item /= default_pointer
			non_void_p_rect_loc: p_rect_loc /= Void
			valid_p_rect_loc: p_rect_loc.item /= default_pointer
			non_void_p_hit_result: p_hit_result /= Void
			query_hit_rect_user_precondition: query_hit_rect_user_precondition (dw_aspect, p_rect_bounds, p_rect_loc, l_close_hint, p_hit_result)
		deferred

		end

	get_natural_extent (dw_aspect: INTEGER; lindex: INTEGER; ptd: TAG_DVTARGETDEVICE_RECORD; hic_target_dev: POINTER; p_extent_info: TAG_EXTENT_INFO_RECORD; psizel: TAG_SIZEL_RECORD)
			-- No description available.
			-- `dw_aspect' [in].  
			-- `lindex' [in].  
			-- `ptd' [in].  
			-- `hic_target_dev' [in].  
			-- `p_extent_info' [in].  
			-- `psizel' [out].  
		require
			non_void_ptd: ptd /= Void
			valid_ptd: ptd.item /= default_pointer
			non_void_p_extent_info: p_extent_info /= Void
			valid_p_extent_info: p_extent_info.item /= default_pointer
			non_void_psizel: psizel /= Void
			valid_psizel: psizel.item /= default_pointer
			get_natural_extent_user_precondition: get_natural_extent_user_precondition (dw_aspect, lindex, ptd, hic_target_dev, p_extent_info, psizel)
		deferred

		end

note
	copyright:	"Copyright (c) 1984-2006, Eiffel Software and others"
	license:	"Eiffel Forum License v2 (see http://www.eiffel.com/licensing/forum.txt)"
	source: "[
			 Eiffel Software
			 356 Storke Road, Goleta, CA 93117 USA
			 Telephone 805-685-1006, Fax 805-685-6869
			 Website http://www.eiffel.com
			 Customer support http://support.eiffel.com
		]"




end -- IVIEW_OBJECT_EX_INTERFACE

