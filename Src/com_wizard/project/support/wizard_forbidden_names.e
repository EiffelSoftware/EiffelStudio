indexing
	description: "Objects that ..."
	status: "See notice at end of class";
	date: "$Date$"
	revision: "$Revision$"

class
	WIZARD_FORBIDDEN_NAMES

inherit
	WIZARD_WRITER_DICTIONARY
		export
			{NONE} all
		end

	WIZARD_GENERAL_FUNCTION_NAMES
		export
			{NONE} all
		end

	WIZARD_EXECUTION_ENVIRONMENT

feature -- Access

	Eiffel_keywords: HASH_TABLE [STRING, STRING] is
			-- List of Eiffel key words.
		local
			tmp_string: STRING
		once
			create Result.make (100)
			Result.compare_objects
			Result.force (Alias_keyword, Alias_keyword)
			Result.force (All_keyword, All_keyword)
			Result.force (And_keyword, And_keyword)
			Result.force (As_keyword, As_keyword)
			Result.force (Check_keyword, Check_keyword)
			Result.force (Class_keyword, Class_keyword)
			Result.force (Convert_keyword, Convert_keyword)
			Result.force (Create_keyword, Create_keyword)
			Result.force (Creation_keyword, Creation_keyword)
			Result.force (Debug_keyword, Debug_keyword)
			Result.force (Deferred_keyword, Deferred_keyword)
			Result.force (Do_keyword, Do_keyword)
			Result.force (Else_keyword, Else_keyword)
			Result.force (Elseif_keyword, Elseif_keyword)
			Result.force (End_keyword, End_keyword)
			Result.force (Ensure_keyword, Ensure_keyword)
			Result.force (Expanded_keyword, Expanded_keyword)
			Result.force (Export_keyword, Export_keyword)
			Result.force (External_keyword, External_keyword)
			Result.force (Feature_keyword, Feature_keyword)
			Result.force (From_keyword, From_keyword)
			Result.force (Frozen_keyword, Frozen_keyword)
			Result.force (If_keyword, If_keyword)
			Result.force (Implies_keyword, Implies_keyword)
			Result.force (Indexing_keyword, Indexing_keyword)
			Result.force (Infix_keyword, Infix_keyword)
			Result.force (Inherit_keyword, Inherit_keyword)
			Result.force (Inspect_keyword, Inspect_keyword)
			Result.force (Invariant_keyword, Invariant_keyword)
			Result.force (Is_keyword, Is_keyword)
			Result.force (Like_keyword, Like_keyword)
			Result.force (Local_keyword, Local_keyword)
			Result.force (Loop_keyword, Loop_keyword)
			Result.force (Not_keyword, Not_keyword)
			Result.force (Obsolete_keyword, Obsolete_keyword)
			Result.force (Old_keyword, Old_keyword)
			Result.force (Once_keyword, Once_keyword)
			Result.force (Or_keyword, Or_keyword)
			Result.force (Prefix_keyword, Prefix_keyword)
			Result.force (Redefine_keyword, Redefine_keyword)
			Result.force (Reference_keyword, Reference_keyword)
			Result.force (Rename_keyword, Rename_keyword)
			Result.force (Require_keyword, Require_keyword)
			Result.force (Rescue_keyword, Rescue_keyword)
			Result.force (Retry_keyword, Retry_keyword)
			Result.force (Select_keyword, Select_keyword)
			Result.force (Separate_keyword, Separate_keyword)
			Result.force (Then_keyword, Then_keyword)
			Result.force (Undefine_keyword, Undefine_keyword)
			Result.force (Until_keyword, Until_keyword)
			Result.force (Variant_keyword, Variant_keyword)
			Result.force (When_keyword, When_keyword)
			Result.force (Xor_keyword, Xor_keyword)

  			tmp_string := Bit_keyword.as_lower
			Result.force (tmp_string, tmp_string)

 			tmp_string := Current_keyword.as_lower
			Result.force (tmp_string, tmp_string)

 			tmp_string := False_keyword.as_lower
			Result.force (tmp_string, tmp_string)

			tmp_string := Precursor_keyword.as_lower
			Result.force (tmp_string, tmp_string)

			tmp_string := Result_keyword.as_lower
			Result.force (tmp_string, tmp_string)

			tmp_string := Strip_keyword.as_lower
			Result.force (tmp_string, tmp_string)

			tmp_string := True_keyword.as_lower
			Result.force (tmp_string, tmp_string)

			tmp_string := Unique_keyword.as_lower
			Result.force (tmp_string, tmp_string)

			Result.force (Make_word, Make_word)
			Result.force (Make_from_other, Make_from_other)
			Result.force (Make_from_pointer, Make_from_pointer)
			Result.force (Item_clause, Item_clause)
			Result.force (Ccom_item_function_name, Ccom_item_function_name)
			Result.force (Last_error_code, Last_error_code)
			Result.force (Last_error_description, Last_error_description)
			Result.force (Last_error_help_file, Last_error_help_file)
			Result.force (Last_source_of_exception, Last_source_of_exception)
			Result.force (Ccom_last_error_code, Ccom_last_error_code)
			Result.force (Ccom_last_error_description, Ccom_last_error_description)
			Result.force (Ccom_last_error_help_file, Ccom_last_error_help_file)
			Result.force (Ccom_last_source_of_exception, Ccom_last_source_of_exception)

			Result.force (generated_type_routine, generated_type_routine)
			Result.force (generator_routine, generator_routine)
			Result.force (deep_equal_routine, deep_equal_routine)
			Result.force (equal_routine, equal_routine)
			Result.force (is_equal_routine, is_equal_routine)
			Result.force (standard_equal_routine, standard_equal_routine)
			Result.force (standard_is_equal_routine, standard_is_equal_routine)
			Result.force (conforms_to_routine, conforms_to_routine)
			Result.force (same_type_routine, same_type_routine)
			Result.force (clone_routine, clone_routine)
			Result.force (copy_routine, copy_routine)
			Result.force (deep_clone_routine, deep_clone_routine)
			Result.force (deep_copy_routine, deep_copy_routine)
			Result.force (standard_clone_routine, standard_clone_routine)
			Result.force (default_routine, default_routine)
			Result.force (default_create_routine, default_create_routine)
			Result.force (default_pointer_routine, default_pointer_routine)
			Result.force (default_rescue_routine, default_rescue_routine)
			Result.force (do_nothing_routine, do_nothing_routine)
			Result.force (io_routine, io_routine)
			Result.force (out_routine, out_routine)
			Result.force (print_routine, print_routine)
			Result.force (tagged_out_routine, tagged_out_routine)

			Result.force (allocate_compact_routine, allocate_compact_routine)
			Result.force (allocate_fast_routine, allocate_fast_routine)
			Result.force (allocate_tiny_routine, allocate_tiny_routine)
			Result.force (chunk_size_routine, chunk_size_routine)
			Result.force (coalesce_period_routine, coalesce_period_routine)
			Result.force (collect_routine, collect_routine)
			Result.force (collecting_routine, collecting_routine)
			Result.force (collection_off_routine, collection_off_routine)
			Result.force (collection_on_routine, collection_on_routine)
			Result.force (collection_period_routine, collection_period_routine)
			Result.force (disable_time_accounting_routine, disable_time_accounting_routine)
			Result.force (dispose_routine, dispose_routine)
			Result.force (enable_time_accounting_routine, enable_time_accounting_routine)
			Result.force (free_routine, free_routine)
			Result.force (full_coalesce_routine, full_coalesce_routine)
			Result.force (full_collect_routine, full_collect_routine)
			Result.force (gc_monitoring_routine, gc_monitoring_routine)
			Result.force (gc_statistics_routine, gc_statistics_routine)
			Result.force (generation_object_limit_routine, generation_object_limit_routine)
			Result.force (largest_coalesced_block_routine, largest_coalesced_block_routine)
			Result.force (max_mem_routine, max_mem_routine)
			Result.force (mem_free_routine, mem_free_routine)
			Result.force (memory_statistics_routine, memory_statistics_routine)
			Result.force (memory_threshold_routine, memory_threshold_routine)
			Result.force (scavenge_zone_size_routine, scavenge_zone_size_routine)
			Result.force (set_coalesce_period_routine, set_coalesce_period_routine)
			Result.force (set_collection_period_routine, set_collection_period_routine)
			Result.force (set_max_mem_routine, set_max_mem_routine)
			Result.force (set_memory_threshold_routine, set_memory_threshold_routine)
			Result.force (tenure_routine, tenure_routine)
			Result.force ("f", "f")
			Result.force (exists_routine, exists_routine)
			Result.force ("class_name", "class_name")
			Result.force ("set_value", "set_value")
			Result.force ("recipient_name", "recipient_name")
			Result.force ("meaning", "meaning")
			Result.force ("raise", "raise")
			Result.force ("set_item", "set_item")
			Result.force ("create_item", "create_item")
			Result.force ("a_stub", "a_stub")
			Result.force ("assertion_violation", "assertion_violation")
			Result.force ("is_developer_exception", "is_developer_exception")
			Result.force ("is_developer_exception_of_name", "is_developer_exception_of_name")
			Result.force ("developer_exception_name", "developer_exception_name")
			Result.force ("is_signal", "is_signal")
			Result.force ("is_system_exception", "is_system_exception")
			Result.force ("tag_name", "tag_name")
			Result.force ("exception", "exception")
			Result.force ("exception_trace", "exception_trace")
			Result.force ("original_tag_name", "original_tag_name")
			Result.force ("original_recipient_name", "original_recipient_name")
			Result.force ("original_class_name", "original_class_name")
			Result.force ("catch", "catch")
			Result.force ("ignore", "ignore")
			Result.force ("die", "die")
			Result.force ("new_die", "new_die")
			Result.force ("message_on_failure", "message_on_failure")
			Result.force ("no_message_on_failure", "no_message_on_failure")
			Result.force ("exclear", "exclear")
			Result.force ("eraise", "eraise")
			Result.force ("c_trace_exception", "c_trace_exception")
			Result.force ("void_call_target", "void_call_target")
			Result.force ("no_more_memory", "no_more_memory")
			Result.force ("precondition", "precondition")
			Result.force ("postcondition", "postcondition")
			Result.force ("floating_point_exception", "floating_point_exception")
			Result.force ("class_invariant", "class_invariant")
			Result.force ("check_instruction", "check_instruction")
			Result.force ("routine_failure", "routine_failure")
			Result.force ("incorrect_inspect_value", "incorrect_inspect_value")
			Result.force ("loop_variant", "loop_variant")
			Result.force ("loop_invariant", "loop_invariant")
			Result.force ("signal_exception", "signal_exception")
			Result.force ("rescue_exception", "rescue_exception")
			Result.force ("external_exception", "external_exception")
			Result.force ("void_assigned_to_expanded", "void_assigned_to_expanded")
			Result.force ("io_exception", "io_exception")
			Result.force ("operating_system_exception", "operating_system_exception")
			Result.force ("retrieve_exception", "retrieve_exception")
			Result.force ("developer_exception", "developer_exception")
			Result.force ("runtime_io_exception", "runtime_io_exception")
			Result.force ("com_exception", "com_exception")
			Result.force ("error_messages", "error_messages")
			
			Result.force ("noerror", "noerror")
			Result.force ("cache_e_first", "cache_e_first")
			Result.force ("cache_e_last", "cache_e_last")
			Result.force ("cache_e_nocache_updated", "cache_e_nocache_updated")
			Result.force ("cache_s_first", "cache_s_first")
			Result.force ("cache_s_formatetc_notsupported", "cache_s_formatetc_notsupported")
			Result.force ("cache_s_last", "cache_s_last")
			Result.force ("cache_s_samecache", "cache_s_samecache")
			Result.force ("cache_s_somecaches_notupdated", "cache_s_somecaches_notupdated")
			Result.force ("class_e_classnotavailable", "class_e_classnotavailable")
			Result.force ("class_e_noaggregation", "class_e_noaggregation")
			Result.force ("classfactory_e_first", "classfactory_e_first")
			Result.force ("classfactory_e_last", "classfactory_e_last")
			Result.force ("classfactory_s_first", "classfactory_s_first")
			Result.force ("classfactory_s_last", "classfactory_s_last")
			Result.force ("clientsite_e_first", "clientsite_e_first")
			Result.force ("clientsite_e_last", "clientsite_e_last")
			Result.force ("clientsite_s_first", "clientsite_s_first")
			Result.force ("clientsite_s_last", "clientsite_s_last")
			Result.force ("clipbrd_e_bad_data", "clipbrd_e_bad_data")
			Result.force ("clipbrd_e_cant_close", "clipbrd_e_cant_close")
			Result.force ("clipbrd_e_cant_empty", "clipbrd_e_cant_empty")
			Result.force ("clipbrd_e_cant_open", "clipbrd_e_cant_open")
			Result.force ("clipbrd_e_cant_set", "clipbrd_e_cant_set")
			Result.force ("clipbrd_e_first", "clipbrd_e_first")
			Result.force ("clipbrd_e_last", "clipbrd_e_last")
			Result.force ("clipbrd_s_first", "clipbrd_s_first")
			Result.force ("clipbrd_s_last", "clipbrd_s_last")
			Result.force ("co_e_alreadyinitialized", "co_e_alreadyinitialized")
			Result.force ("co_e_appdidntreg", "co_e_appdidntreg")
			Result.force ("co_e_appnotfound", "co_e_appnotfound")
			Result.force ("co_e_appsingleuse", "co_e_appsingleuse")
			Result.force ("co_e_bad_path", "co_e_bad_path")
			Result.force ("co_e_cantdetermineclass", "co_e_cantdetermineclass")
			Result.force ("co_e_class_create_failed", "co_e_class_create_failed")
			Result.force ("co_e_classstring", "co_e_classstring")
			Result.force ("co_e_dllnotfound", "co_e_dllnotfound")
			Result.force ("co_e_errorinapp", "co_e_errorinapp")
			Result.force ("co_e_errorindll", "co_e_errorindll")
			Result.force ("co_e_first", "co_e_first")
			Result.force ("co_e_iidstring", "co_e_iidstring")
			Result.force ("co_e_init_class_cache", "co_e_init_class_cache")
			Result.force ("co_e_init_memory_allocator", "co_e_init_memory_allocator")
			Result.force ("co_e_init_only_single_threaded", "co_e_init_only_single_threaded")
			Result.force ("co_e_init_rpc_channel", "co_e_init_rpc_channel")
			Result.force ("co_e_init_scm_exec_failure", "co_e_init_scm_exec_failure")
			Result.force ("co_e_init_scm_file_mapping_exists", "co_e_init_scm_file_mapping_exists")
			Result.force ("co_e_init_scm_map_view_of_file", "co_e_init_scm_map_view_of_file")
			Result.force ("co_e_init_scm_mutex_exists", "co_e_init_scm_mutex_exists")
			Result.force ("co_e_init_shared_allocator", "co_e_init_shared_allocator")
			Result.force ("co_e_init_tls", "co_e_init_tls")
			Result.force ("co_e_init_tls_channel_control", "co_e_init_tls_channel_control")
			Result.force ("co_e_init_tls_set_channel_control", "co_e_init_tls_set_channel_control")
			Result.force ("co_e_init_unaccepted_user_allocator", "co_e_init_unaccepted_user_allocator")
			Result.force ("co_e_last", "co_e_last")
			Result.force ("co_e_notinitialized", "co_e_notinitialized")
			Result.force ("co_e_objisreg", "co_e_objisreg")
			Result.force ("co_e_objnotconnected", "co_e_objnotconnected")
			Result.force ("co_e_objnotreg", "co_e_objnotreg")
			Result.force ("co_e_objsrv_rpc_failure", "co_e_objsrv_rpc_failure")
			Result.force ("co_e_released", "co_e_released")
			Result.force ("co_e_scm_error", "co_e_scm_error")
			Result.force ("co_e_scm_rpc_failure", "co_e_scm_rpc_failure")
			Result.force ("co_e_server_exec_failure", "co_e_server_exec_failure")
			Result.force ("co_e_server_stopping", "co_e_server_stopping")
			Result.force ("co_e_wrongosforapp", "co_e_wrongosforapp")
			Result.force ("co_s_first", "co_s_first")
			Result.force ("co_s_last", "co_s_last")
			Result.force ("convert10_e_first", "convert10_e_first")
			Result.force ("convert10_e_last", "convert10_e_last")
			Result.force ("convert10_e_olestream_bitmap_to_dib", "convert10_e_olestream_bitmap_to_dib")
			Result.force ("convert10_e_olestream_fmt", "convert10_e_olestream_fmt")
			Result.force ("convert10_e_olestream_get", "convert10_e_olestream_get")
			Result.force ("convert10_e_olestream_put", "convert10_e_olestream_put")
			Result.force ("convert10_e_stg_dib_to_bitmap", "convert10_e_stg_dib_to_bitmap")
			Result.force ("convert10_e_stg_fmt", "convert10_e_stg_fmt")
			Result.force ("convert10_e_stg_no_std_stream", "convert10_e_stg_no_std_stream")
			Result.force ("convert10_s_first", "convert10_s_first")
			Result.force ("convert10_s_last", "convert10_s_last")
			Result.force ("convert10_s_no_presentation", "convert10_s_no_presentation")
			Result.force ("data_e_first", "data_e_first")
			Result.force ("data_e_last", "data_e_last")
			Result.force ("data_s_first", "data_s_first")
			Result.force ("data_s_last", "data_s_last")
			Result.force ("data_s_sameformatetc", "data_s_sameformatetc")
			Result.force ("disp_e_arrayislocked", "disp_e_arrayislocked")
			Result.force ("disp_e_badcallee", "disp_e_badcallee")
			Result.force ("disp_e_badindex", "disp_e_badindex")
			Result.force ("disp_e_badparamcount", "disp_e_badparamcount")
			Result.force ("disp_e_badvartype", "disp_e_badvartype")
			Result.force ("disp_e_exception", "disp_e_exception")
			Result.force ("disp_e_membernotfound", "disp_e_membernotfound")
			Result.force ("disp_e_nonamedargs", "disp_e_nonamedargs")
			Result.force ("disp_e_notacollection", "disp_e_notacollection")
			Result.force ("disp_e_overflow", "disp_e_overflow")
			Result.force ("disp_e_paramnotfound", "disp_e_paramnotfound")
			Result.force ("disp_e_paramnotoptional", "disp_e_paramnotoptional")
			Result.force ("disp_e_typemismatch", "disp_e_typemismatch")
			Result.force ("disp_e_unknowninterface", "disp_e_unknowninterface")
			Result.force ("disp_e_unknownlcid", "disp_e_unknownlcid")
			Result.force ("disp_e_unknownname", "disp_e_unknownname")
			Result.force ("dragdrop_e_alreadyregistered", "dragdrop_e_alreadyregistered")
			Result.force ("dragdrop_e_first", "dragdrop_e_first")
			Result.force ("dragdrop_e_invalidhwnd", "dragdrop_e_invalidhwnd")
			Result.force ("dragdrop_e_last", "dragdrop_e_last")
			Result.force ("dragdrop_e_notregistered", "dragdrop_e_notregistered")
			Result.force ("dragdrop_s_cancel", "dragdrop_s_cancel")
			Result.force ("dragdrop_s_drop", "dragdrop_s_drop")
			Result.force ("dragdrop_s_first", "dragdrop_s_first")
			Result.force ("dragdrop_s_last", "dragdrop_s_last")
			Result.force ("dragdrop_s_usedefaultcursors", "dragdrop_s_usedefaultcursors")
			Result.force ("dv_e_clipformat", "dv_e_clipformat")
			Result.force ("dv_e_dvaspect", "dv_e_dvaspect")
			Result.force ("dv_e_dvtargetdevice", "dv_e_dvtargetdevice")
			Result.force ("dv_e_dvtargetdevice_size", "dv_e_dvtargetdevice_size")
			Result.force ("dv_e_formatetc", "dv_e_formatetc")
			Result.force ("dv_e_lindex", "dv_e_lindex")
			Result.force ("dv_e_noiviewobject", "dv_e_noiviewobject")
			Result.force ("dv_e_statdata", "dv_e_statdata")
			Result.force ("dv_e_stgmedium", "dv_e_stgmedium")
			Result.force ("dv_e_tymed", "dv_e_tymed")
			Result.force ("e_abort", "e_abort")
			Result.force ("e_accessdenied", "e_accessdenied")
			Result.force ("e_advf", "e_advf")
			Result.force ("e_advisenotsupported", "e_advisenotsupported")
			Result.force ("e_blank", "e_blank")
			Result.force ("e_cant_bindtosource", "e_cant_bindtosource")
			Result.force ("e_cant_getmoniker", "e_cant_getmoniker")
			Result.force ("e_cantconvert", "e_cantconvert")
			Result.force ("e_classdiff", "e_classdiff")
			Result.force ("e_enum_nomore", "e_enum_nomore")
			Result.force ("e_fail", "e_fail")
			Result.force ("e_handle", "e_handle")
			Result.force ("e_invalidarg", "e_invalidarg")
			Result.force ("e_invalidhwnd", "e_invalidhwnd")
			Result.force ("e_invalidrect", "e_invalidrect")
			Result.force ("e_nocache", "e_nocache")
			Result.force ("e_noconnection", "e_noconnection")
			Result.force ("e_nointerface", "e_nointerface")
			Result.force ("e_nostorage", "e_nostorage")
			Result.force ("e_not_inplaceactive", "e_not_inplaceactive")
			Result.force ("e_notimpl", "e_notimpl")
			Result.force ("e_notrunning", "e_notrunning")
			Result.force ("e_oleverb", "e_oleverb")
			Result.force ("e_outofmemory", "e_outofmemory")
			Result.force ("e_pointer", "e_pointer")
			Result.force ("e_promptsavecancelled", "e_promptsavecancelled")
			Result.force ("e_static", "e_static")
			Result.force ("e_unexpected", "e_unexpected")
			Result.force ("e_wrongcompobj", "e_wrongcompobj")
			Result.force ("enum_e_first", "enum_e_first")
			Result.force ("enum_e_last", "enum_e_last")
			Result.force ("enum_s_first", "enum_s_first")
			Result.force ("enum_s_last", "enum_s_last")
			Result.force ("inplace_e_first", "inplace_e_first")
			Result.force ("inplace_e_last", "inplace_e_last")
			Result.force ("inplace_e_notoolspace", "inplace_e_notoolspace")
			Result.force ("inplace_e_notundoable", "inplace_e_notundoable")
			Result.force ("inplace_s_first", "inplace_s_first")
			Result.force ("inplace_s_last", "inplace_s_last")
			Result.force ("inplace_s_truncated", "inplace_s_truncated")
			Result.force ("marshal_e_first", "marshal_e_first")
			Result.force ("marshal_e_last", "marshal_e_last")
			Result.force ("marshal_s_first", "marshal_s_first")
			Result.force ("marshal_s_last", "marshal_s_last")
			Result.force ("mem_e_invalid_link", "mem_e_invalid_link")
			Result.force ("mem_e_invalid_root", "mem_e_invalid_root")
			Result.force ("mem_e_invalid_size", "mem_e_invalid_size")
			Result.force ("mk_e_cantopenfile", "mk_e_cantopenfile")
			Result.force ("mk_e_connectmanually", "mk_e_connectmanually")
			Result.force ("mk_e_enumeration_failed", "mk_e_enumeration_failed")
			Result.force ("mk_e_exceededdeadline", "mk_e_exceededdeadline")
			Result.force ("mk_e_first", "mk_e_first")
			Result.force ("mk_e_intermediateinterfacenotsupported", "mk_e_intermediateinterfacenotsupported")
			Result.force ("mk_e_invalidextension", "mk_e_invalidextension")
			Result.force ("mk_e_last", "mk_e_last")
			Result.force ("mk_e_mustbotheruser", "mk_e_mustbotheruser")
			Result.force ("mk_e_needgeneric", "mk_e_needgeneric")
			Result.force ("mk_e_no_normalized", "mk_e_no_normalized")
			Result.force ("mk_e_noinverse", "mk_e_noinverse")
			Result.force ("mk_e_noobject", "mk_e_noobject")
			Result.force ("mk_e_noprefix", "mk_e_noprefix")
			Result.force ("mk_e_nostorage", "mk_e_nostorage")
			Result.force ("mk_e_notbindable", "mk_e_notbindable")
			Result.force ("mk_e_notbound", "mk_e_notbound")
			Result.force ("mk_e_syntax", "mk_e_syntax")
			Result.force ("mk_e_unavailable", "mk_e_unavailable")
			Result.force ("mk_s_first", "mk_s_first")
			Result.force ("mk_s_him", "mk_s_him")
			Result.force ("mk_s_last", "mk_s_last")
			Result.force ("mk_s_me", "mk_s_me")
			Result.force ("mk_s_monikeralreadyregistered", "mk_s_monikeralreadyregistered")
			Result.force ("mk_s_reduced_to_self", "mk_s_reduced_to_self")
			Result.force ("mk_s_us", "mk_s_us")
			Result.force ("ole_e_first", "ole_e_first")
			Result.force ("ole_e_last", "ole_e_last")
			Result.force ("ole_s_first", "ole_s_first")
			Result.force ("ole_s_last", "ole_s_last")
			Result.force ("ole_s_mac_clipformat", "ole_s_mac_clipformat")
			Result.force ("ole_s_static", "ole_s_static")
			Result.force ("ole_s_usereg", "ole_s_usereg")
			Result.force ("oleobj_e_first", "oleobj_e_first")
			Result.force ("oleobj_e_invalidverb", "oleobj_e_invalidverb")
			Result.force ("oleobj_e_last", "oleobj_e_last")
			Result.force ("oleobj_e_noverbs", "oleobj_e_noverbs")
			Result.force ("oleobj_s_cannot_doverb_now", "oleobj_s_cannot_doverb_now")
			Result.force ("oleobj_s_first", "oleobj_s_first")
			Result.force ("oleobj_s_invalidhwnd", "oleobj_s_invalidhwnd")
			Result.force ("oleobj_s_invalidverb", "oleobj_s_invalidverb")
			Result.force ("oleobj_s_last", "oleobj_s_last")
			Result.force ("regdb_e_classnotreg", "regdb_e_classnotreg")
			Result.force ("regdb_e_first", "regdb_e_first")
			Result.force ("regdb_e_iidnotreg", "regdb_e_iidnotreg")
			Result.force ("regdb_e_invalidvalue", "regdb_e_invalidvalue")
			Result.force ("regdb_e_keymissing", "regdb_e_keymissing")
			Result.force ("regdb_e_last", "regdb_e_last")
			Result.force ("regdb_e_readregdb", "regdb_e_readregdb")
			Result.force ("regdb_e_writeregdb", "regdb_e_writeregdb")
			Result.force ("regdb_s_first", "regdb_s_first")
			Result.force ("regdb_s_last", "regdb_s_last")
			Result.force ("rpc_e_attempted_multithread", "rpc_e_attempted_multithread")
			Result.force ("rpc_e_call_canceled", "rpc_e_call_canceled")
			Result.force ("rpc_e_call_rejected", "rpc_e_call_rejected")
			Result.force ("rpc_e_cantcallout_again", "rpc_e_cantcallout_again")
			Result.force ("rpc_e_cantcallout_inasynccall", "rpc_e_cantcallout_inasynccall")
			Result.force ("rpc_e_cantcallout_inexternalcall", "rpc_e_cantcallout_inexternalcall")
			Result.force ("rpc_e_cantcallout_ininputsynccall", "rpc_e_cantcallout_ininputsynccall")
			Result.force ("rpc_e_cantpost_insendcall", "rpc_e_cantpost_insendcall")
			Result.force ("rpc_e_canttransmit_call", "rpc_e_canttransmit_call")
			Result.force ("rpc_e_changed_mode", "rpc_e_changed_mode")
			Result.force ("rpc_e_client_cantmarshal_data", "rpc_e_client_cantmarshal_data")
			Result.force ("rpc_e_client_cantunmarshal_data", "rpc_e_client_cantunmarshal_data")
			Result.force ("rpc_e_client_died", "rpc_e_client_died")
			Result.force ("rpc_e_connection_terminated", "rpc_e_connection_terminated")
			Result.force ("rpc_e_disconnected", "rpc_e_disconnected")
			Result.force ("rpc_e_fault", "rpc_e_fault")
			Result.force ("rpc_e_invalid_calldata", "rpc_e_invalid_calldata")
			Result.force ("rpc_e_invalid_data", "rpc_e_invalid_data")
			Result.force ("rpc_e_invalid_datapacket", "rpc_e_invalid_datapacket")
			Result.force ("rpc_e_invalid_parameter", "rpc_e_invalid_parameter")
			Result.force ("rpc_e_invalidmethod", "rpc_e_invalidmethod")
			Result.force ("rpc_e_not_registered", "rpc_e_not_registered")
			Result.force ("rpc_e_out_of_resources", "rpc_e_out_of_resources")
			Result.force ("rpc_e_retry", "rpc_e_retry")
			Result.force ("rpc_e_server_cantmarshal_data", "rpc_e_server_cantmarshal_data")
			Result.force ("rpc_e_server_cantunmarshal_data", "rpc_e_server_cantunmarshal_data")
			Result.force ("rpc_e_server_died", "rpc_e_server_died")
			Result.force ("rpc_e_server_died_dne", "rpc_e_server_died_dne")
			Result.force ("rpc_e_servercall_rejected", "rpc_e_servercall_rejected")
			Result.force ("rpc_e_servercall_retrylater", "rpc_e_servercall_retrylater")
			Result.force ("rpc_e_serverfault", "rpc_e_serverfault")
			Result.force ("rpc_e_sys_call_failed", "rpc_e_sys_call_failed")
			Result.force ("rpc_e_thread_not_init", "rpc_e_thread_not_init")
			Result.force ("rpc_e_unexpected", "rpc_e_unexpected")
			Result.force ("rpc_e_wrong_thread", "rpc_e_wrong_thread")
			Result.force ("s_false", "s_false")
			Result.force ("s_ok", "s_ok")
			Result.force ("stg_e_abnormalapiexit", "stg_e_abnormalapiexit")
			Result.force ("stg_e_accessdenied", "stg_e_accessdenied")
			Result.force ("stg_e_cantsave", "stg_e_cantsave")
			Result.force ("stg_e_diskiswriteprotected", "stg_e_diskiswriteprotected")
			Result.force ("stg_e_extantmarshallings", "stg_e_extantmarshallings")
			Result.force ("stg_e_filealreadyexists", "stg_e_filealreadyexists")
			Result.force ("stg_e_filenotfound", "stg_e_filenotfound")
			Result.force ("stg_e_insufficientmemory", "stg_e_insufficientmemory")
			Result.force ("stg_e_inuse", "stg_e_inuse")
			Result.force ("stg_e_invalidflag", "stg_e_invalidflag")
			Result.force ("stg_e_invalidfunction", "stg_e_invalidfunction")
			Result.force ("stg_e_invalidhandle", "stg_e_invalidhandle")
			Result.force ("stg_e_invalidheader", "stg_e_invalidheader")
			Result.force ("stg_e_invalidname", "stg_e_invalidname")
			Result.force ("stg_e_invalidparameter", "stg_e_invalidparameter")
			Result.force ("stg_e_invalidpointer", "stg_e_invalidpointer")
			Result.force ("stg_e_lockviolation", "stg_e_lockviolation")
			Result.force ("stg_e_mediumfull", "stg_e_mediumfull")
			Result.force ("stg_e_nomorefiles", "stg_e_nomorefiles")
			Result.force ("stg_e_notcurrent", "stg_e_notcurrent")
			Result.force ("stg_e_notfilebasedstorage", "stg_e_notfilebasedstorage")
			Result.force ("stg_e_olddll", "stg_e_olddll")
			Result.force ("stg_e_oldformat", "stg_e_oldformat")
			Result.force ("stg_e_pathnotfound", "stg_e_pathnotfound")
			Result.force ("stg_e_readfault", "stg_e_readfault")
			Result.force ("stg_e_reverted", "stg_e_reverted")
			Result.force ("stg_e_seekerror", "stg_e_seekerror")
			Result.force ("stg_e_sharerequired", "stg_e_sharerequired")
			Result.force ("stg_e_shareviolation", "stg_e_shareviolation")
			Result.force ("stg_e_toomanyopenfiles", "stg_e_toomanyopenfiles")
			Result.force ("stg_e_unimplementedfunction", "stg_e_unimplementedfunction")
			Result.force ("stg_e_unknown", "stg_e_unknown")
			Result.force ("stg_e_writefault", "stg_e_writefault")
			Result.force ("stg_s_converted", "stg_s_converted")
			Result.force ("type_e_ambiguousname", "type_e_ambiguousname")
			Result.force ("type_e_badmodulekind", "type_e_badmodulekind")
			Result.force ("type_e_buffertoosmall", "type_e_buffertoosmall")
			Result.force ("type_e_cantcreatetmpfile", "type_e_cantcreatetmpfile")
			Result.force ("type_e_cantloadlibrary", "type_e_cantloadlibrary")
			Result.force ("type_e_circulartype", "type_e_circulartype")
			Result.force ("type_e_dllfunctionnotfound", "type_e_dllfunctionnotfound")
			Result.force ("type_e_duplicateid", "type_e_duplicateid")
			Result.force ("type_e_elementnotfound", "type_e_elementnotfound")
			Result.force ("type_e_inconsistentpropfuncs", "type_e_inconsistentpropfuncs")
			Result.force ("type_e_invalidid", "type_e_invalidid")
			Result.force ("type_e_invalidstate", "type_e_invalidstate")
			Result.force ("type_e_invdataread", "type_e_invdataread")
			Result.force ("type_e_ioerror", "type_e_ioerror")
			Result.force ("type_e_libnotregistered", "type_e_libnotregistered")
			Result.force ("type_e_nameconflict", "type_e_nameconflict")
			Result.force ("type_e_outofbounds", "type_e_outofbounds")
			Result.force ("type_e_qualifiednamedisallowed", "type_e_qualifiednamedisallowed")
			Result.force ("type_e_registryaccess", "type_e_registryaccess")
			Result.force ("type_e_sizetoobig", "type_e_sizetoobig")
			Result.force ("type_e_typemismatch", "type_e_typemismatch")
			Result.force ("type_e_undefinedtype", "type_e_undefinedtype")
			Result.force ("type_e_unknownlcid", "type_e_unknownlcid")
			Result.force ("type_e_unsupformat", "type_e_unsupformat")
			Result.force ("type_e_wrongtypekind", "type_e_wrongtypekind")
			Result.force ("view_e_draw", "view_e_draw")
			Result.force ("view_e_first", "view_e_first")
			Result.force ("view_e_last", "view_e_last")
			Result.force ("view_s_already_frozen", "view_s_already_frozen")
			Result.force ("view_s_first", "view_s_first")
			Result.force ("view_s_last", "view_s_last")
		end

	c_keywords: HASH_TABLE [STRING, STRING] is
			-- List of C key words.
		once
			create Result.make (100)
			Result.compare_objects
			Result.force ("asm", "asm")
			Result.force ("auto", "auto")
			Result.force ("bool", "bool")
			Result.force ("break", "break")
			Result.force ("case", "case")
			Result.force ("catch", "catch")
			Result.force ("char", "char")
			Result.force ("class", "class")
			Result.force ("const", "const")
			Result.force ("const_cast", "const_cast")
			Result.force ("continue", "continue")
			Result.force ("default", "default")
			Result.force ("delete", "delete")
			Result.force ("do", "do")
			Result.force ("double", "double")
			Result.force ("dynamic_cast", "dynamic_cast")
			Result.force ("else", "else")
			Result.force ("enum", "enum")
			Result.force ("explicit", "explicit")
			Result.force ("export", "export")
			Result.force ("extern", "extern")
			Result.force ("false", "false")
			Result.force ("float", "float")
			Result.force ("for", "for")
			Result.force ("friend", "friend")
			Result.force ("goto", "goto")
			Result.force ("if", "if")
			Result.force ("inline", "inline")
			Result.force ("int", "int")
			Result.force ("interface", "interface")
			Result.force ("long", "long")
			Result.force ("mutable", "mutable")
			Result.force ("namespace", "namespace")
			Result.force ("new", "new")
			Result.force ("operator", "operator")
			Result.force ("private", "private")
			Result.force ("protected", "protected")
			Result.force ("public", "public")
			Result.force ("register", "register")
			Result.force ("reinterpret_cast", "reinterpret_cast")
			Result.force ("return", "return")
			Result.force ("short", "short")
			Result.force ("signed", "signed")
			Result.force ("sizeof", "sizeof")
			Result.force ("static", "static")
			Result.force ("static_cast", "static_cast")
			Result.force ("struct", "struct")
			Result.force ("switch", "switch")
			Result.force ("template", "template")
			Result.force ("this", "this")
			Result.force ("throw", "throw")
			Result.force ("true", "true")
			Result.force ("try", "try")
			Result.force ("typedef", "typedef")
			Result.force ("typeid", "typeid")
			Result.force ("typename", "typename")
			Result.force ("union", "union")
			Result.force ("unsigned", "unsigned")
			Result.force ("using", "using")
			Result.force ("virtual", "virtual")
			Result.force ("void", "void")
			Result.force ("volatile", "volatile")
			Result.force ("wchar_t", "wchar_t")
			Result.force ("while", "while")
			Result.force ("min", "min")
			Result.force ("max", "max")
			Result.force ("RGB", "RGB")
			Result.force (Eof_word, Eof_word)
		end

	generator_words: HASH_TABLE [STRING, STRING] is
			-- List of generator words.
		once
			create Result.make (100)
			Result.compare_objects
			Result.force ("hr", "hr")
			Result.force ("Formatter", "Formatter")
			Result.force ("value", "value")
			Result.force ("result", "result")
			Result.force ("IFont1", "IFont1")
			Result.force ("ITypeInfo", "ITypeInfo")
			Result.force ("ITypeLib", "ITypeLib")
			Result.force ("LCID", "LCID")
			Result.force ("lcid", "lcid")
			Result.force ("riid", "riid")
			Result.force ("dispID", "dispID")
			Result.force ("wFlags", "wFlags")
			Result.force ("pDispParams", "pDispParams")
			Result.force ("pVarResult", "pVarResult")
			Result.force ("pExcepInfo", "pExcepInfo")
			Result.force ("puArgErr", "puArgErr")
			Result.merge (well_known_functions)
		end

	well_known_functions: HASH_TABLE [STRING, STRING] is
			-- List of generator words.
		once
			create Result.make (100)
			Result.compare_objects
			Result.force ("QueryInterface", "QueryInterface")
			Result.force ("AddRef", "AddRef")
			Result.force ("Release", "Release")
			Result.force ("GetTypeInfoCount", "GetTypeInfoCount")
			Result.force ("GetTypeInfo", "GetTypeInfo")
			Result.force ("GetIDsOfNames", "GetIDsOfNames")
			Result.force ("Invoke", "Invoke")
		end
	
	eiffel_runtime_macros: HASH_TABLE [STRING, STRING] is
			-- List of Eiffel runtime macros.
		once
			create Result.make (1000)
			Result.compare_objects
			Result.force ("BPI", "BPI")
			Result.force ("FD_ZERO", "FD_ZERO")
			Result.force ("FD_SET", "FD_SET")
			Result.force ("FD_ISSET", "FD_ISSET")
			Result.force ("LENGTH", "LENGTH")
			Result.force ("ARENA", "ARENA")
			Result.force ("attribute_exists", "attribute_exists")
			Result.force ("Cecil", "Cecil")
			Result.force ("ABORTSIG SIGABRT", "ABORTSIG SIGABRT")
			Result.force ("MEM_ALIGNBYTES", "MEM_ALIGNBYTES")
			Result.force ("BYTEORDER", "BYTEORDER")
			Result.force ("CAT2", "CAT2")
			Result.force ("CAT3", "CAT3")
			Result.force ("CAT4", "CAT4")
			Result.force ("CAT5", "CAT5")
			Result.force ("STRINGIFY", "STRINGIFY")
			Result.force ("StGiFy", "StGiFy")
			Result.force ("SCAT2", "SCAT2")
			Result.force ("SCAT3", "SCAT3")
			Result.force ("SCAT4", "SCAT4")
			Result.force ("SCAT5", "SCAT5")
			Result.force ("VAL_NOFILE", "VAL_NOFILE")
			Result.force ("HAS_DUP2", "HAS_DUP2")
			Result.force ("HAS_FCNTL", "HAS_FCNTL")
			Result.force ("HAS_FTIME", "HAS_FTIME")
			Result.force ("Timeval", "Timeval")
			Result.force ("HAS_GETOPT", "HAS_GETOPT")
			Result.force ("PAGESIZE_VALUE", "PAGESIZE_VALUE")
			Result.force ("HAS_LSTAT", "HAS_LSTAT")
			Result.force ("HAS_MEMMOVE", "HAS_MEMMOVE")
			Result.force ("HAS_MKDIR", "HAS_MKDIR")
			Result.force ("HAS_READDIR", "HAS_READDIR")
			Result.force ("HAS_RENAME", "HAS_RENAME")
			Result.force ("HAS_RMDIR", "HAS_RMDIR")
			Result.force ("HAS_SOCKET", "HAS_SOCKET")
			Result.force ("USE_STRUCT_COPY", "USE_STRUCT_COPY")
			Result.force ("HAS_STRDUP", "HAS_STRDUP")
			Result.force ("Strerror", "Strerror")
			Result.force ("Time_t", "Time_t")
			Result.force ("Clock_t", "Clock_t")
			Result.force ("Signal_t", "Signal_t")
			Result.force ("Malloc_t", "Malloc_t")
			Result.force ("Pid_t", "Pid_t")
			Result.force ("Caddr_t", "Caddr_t")
			Result.force ("Uid_t", "Uid_t")
			Result.force ("index", "index")
			Result.force ("rindex", "rindex")
			Result.force ("Unknown_type", "Unknown_type")
			Result.force ("Character_type", "Character_type")
			Result.force ("Boolean_type", "Boolean_type")
			Result.force ("Integer_type", "Integer_type")
			Result.force ("Real_type", "Real_type")
			Result.force ("Double_type", "Double_type")
			Result.force ("Expanded_type", "Expanded_type")
			Result.force ("Bit_type", "Bit_type")
			Result.force ("String_type", "String_type")
			Result.force ("Local_reference", "Local_reference")
			Result.force ("Separate_reference", "Separate_reference")
			Result.force ("Expanded_object", "Expanded_object")
			Result.force ("constant_command_buffer_len", "constant_command_buffer_len")
			Result.force ("constant_crash_info_len", "constant_crash_info_len")
			Result.force ("constant_size_of_data_buf", "constant_size_of_data_buf")
			Result.force ("set_host_port", "set_host_port")
			Result.force ("set_oid", "set_oid")
			Result.force ("set_sock", "set_sock")
			Result.force ("set_proxy_id", "set_proxy_id")
			Result.force ("sep_obj_host", "sep_obj_host")
			Result.force ("sep_obj_port", "sep_obj_port")
			Result.force ("sep_obj_sock", "sep_obj_sock")
			Result.force ("sep_obj_oid", "sep_obj_oid")
			Result.force ("sep_obj_proxy_id", "sep_obj_proxy_id")
			Result.force ("is_sep_obj", "is_sep_obj")
			Result.force ("init_string", "init_string")
			Result.force ("def_resc", "def_resc")
			Result.force ("valuable_line", "valuable_line")
			Result.force ("valid_memory", "valid_memory")
			Result.force ("add_nl", "add_nl")
			Result.force ("get_cmd_data", "get_cmd_data")
			Result.force ("directly_get_cmd_data", "directly_get_cmd_data")
			Result.force ("adjust_parameter_array", "adjust_parameter_array")
			Result.force ("hostaddr_of_sep_obj", "hostaddr_of_sep_obj")
			Result.force ("pid_of_sep_obj", "pid_of_sep_obj")
			Result.force ("sock_of_sep_obj", "sock_of_sep_obj")
			Result.force ("oid_of_sep_obj", "oid_of_sep_obj")
			Result.force ("on_same_processor", "on_same_processor")
			Result.force ("hostaddr_of_sep_obj", "hostaddr_of_sep_obj")
			Result.force ("pid_of_sep_obj", "pid_of_sep_obj")
			Result.force ("sock_of_sep_obj", "sock_of_sep_obj")
			Result.force ("oid_of_sep_obj", "oid_of_sep_obj")
			Result.force ("on_same_processor", "on_same_processor")
			Result.force ("set_mask", "set_mask")
			Result.force ("unset_mask", "unset_mask")
			Result.force ("init_options", "init_options")
			Result.force ("set_with_rejection", "set_with_rejection")
			Result.force ("unset_with_rejection", "unset_with_rejection")
			Result.force ("is_with_rejection", "is_with_rejection")
			Result.force ("ise_ntohf", "ise_ntohf")
			Result.force ("safe_bcopy", "safe_bcopy")
			Result.force ("print_err_msg", "print_err_msg")
			Result.force ("ex_jbuf", "ex_jbuf")
			Result.force ("ex_id", "ex_id")
			Result.force ("ex_rout", "ex_rout")
			Result.force ("ex_orig", "ex_orig")
			Result.force ("ex_sig", "ex_sig")
			Result.force ("ex_errno", "ex_errno")
			Result.force ("ex_lvl", "ex_lvl")
			Result.force ("ex_name", "ex_name")
			Result.force ("ex_where", "ex_where")
			Result.force ("ex_from", "ex_from")
			Result.force ("ex_oid", "ex_oid")
			Result.force ("echmem", "echmem")
			Result.force ("echtg", "echtg")
			Result.force ("echval", "echval")
			Result.force ("echsig", "echsig")
			Result.force ("echlvl", "echlvl")
			Result.force ("echorg", "echorg")
			Result.force ("echotag", "echotag")
			Result.force ("echrt", "echrt")
			Result.force ("echort", "echort")
			Result.force ("echclass", "echclass")
			Result.force ("echoclass", "echoclass")
			Result.force ("db_stack", "db_stack")
			Result.force ("once_list", "once_list")
			Result.force ("d_data", "d_data")
			Result.force ("d_cxt", "d_cxt")
			Result.force ("ex_ign", "ex_ign")
			Result.force ("exdata", "exdata")
			Result.force ("print_history_table", "print_history_table")
			Result.force ("ex_string", "ex_string")
			Result.force ("db_ign", "db_ign")
			Result.force ("path_stack", "path_stack")
			Result.force ("parent_expanded_stack", "parent_expanded_stack")
			Result.force ("g_data", "g_data")
			Result.force ("g_stat", "g_stat")
			Result.force ("loc_stack", "loc_stack")
			Result.force ("loc_set", "loc_set")
			Result.force ("rem_set", "rem_set")
			Result.force ("moved_set", "moved_set")
			Result.force ("memory_set", "memory_set")
			Result.force ("special_rem_set", "special_rem_set")
			Result.force ("once_set", "once_set")
			Result.force ("age_table", "age_table")
			Result.force ("size_table", "size_table")
			Result.force ("tenure", "tenure")
			Result.force ("clsc_per", "clsc_per")
			Result.force ("plsc_per", "plsc_per")
			Result.force ("gc_running", "gc_running")
			Result.force ("last_gc_time", "last_gc_time")
			Result.force ("gc_ran", "gc_ran")
			Result.force ("spoilt_tbl", "spoilt_tbl")
			Result.force ("ps_from", "ps_from")
			Result.force ("ps_to", "ps_to")
			Result.force ("last_from", "last_from")
			Result.force ("th_alloc", "th_alloc")
			Result.force ("gc_monitor", "gc_monitor")
			Result.force ("root_obj", "root_obj")
			Result.force ("urgent_mem", "urgent_mem")
			Result.force ("urgent_index", "urgent_index")
			Result.force ("hec_stack", "hec_stack")
			Result.force ("hec_saved", "hec_saved")
			Result.force ("free_stack", "free_stack")
			Result.force ("op_stack", "op_stack")
			Result.force ("iregs", "iregs")
			Result.force ("iregsz", "iregsz")
			Result.force ("argnum", "argnum")
			Result.force ("locnum", "locnum")
			Result.force ("tagval", "tagval")
			Result.force ("inv_mark_table", "inv_mark_table")
			Result.force ("m_data", "m_data")
			Result.force ("c_data", "c_data")
			Result.force ("e_data", "e_data")
			Result.force ("cklst", "cklst")
			Result.force ("c_hlist", "c_hlist")
			Result.force ("e_hlist", "e_hlist")
			Result.force ("c_buffer", "c_buffer")
			Result.force ("e_buffer", "e_buffer")
			Result.force ("sc_from", "sc_from")
			Result.force ("sc_to", "sc_to")
			Result.force ("gen_scavenge", "gen_scavenge")
			Result.force ("eiffel_usage", "eiffel_usage")
			Result.force ("type_use", "type_use")
			Result.force ("c_mem", "c_mem")
			Result.force ("m_largest", "m_largest")
			Result.force ("mem_stats", "mem_stats")
			Result.force ("gc_stats", "gc_stats")
			Result.force ("gc_count", "gc_count")
			Result.force ("buffero", "buffero")
			Result.force ("tagged_out", "tagged_out")
			Result.force ("tagged_max", "tagged_max")
			Result.force ("tagged_len", "tagged_len")
			Result.force ("darray", "darray")
			Result.force ("inv_mark_tablep", "inv_mark_tablep")
			Result.force ("sig_ign", "sig_ign")
			Result.force ("osig_ign", "osig_ign")
			Result.force ("esigblk", "esigblk")
			Result.force ("sig_stk", "sig_stk")
			Result.force ("in_assertion", "in_assertion")
			Result.force ("r_fides", "r_fides")
			Result.force ("s_fides", "s_fides")
			Result.force ("n_children", "n_children")
			Result.force ("last_child", "last_child")
			Result.force ("spfrozen", "spfrozen")
			Result.force ("it_char", "it_char")
			Result.force ("it_long", "it_long")
			Result.force ("it_float", "it_float")
			Result.force ("it_double", "it_double")
			Result.force ("it_ref", "it_ref")
			Result.force ("it_ptr", "it_ptr")
			Result.force ("it_bit", "it_bit")
			Result.force ("iget", "iget")
			Result.force ("Dtype", "Dtype")
			Result.force ("Deif_bid", "Deif_bid")
			Result.force ("Mapped_flags", "Mapped_flags")
			Result.force ("Dftype", "Dftype")
			Result.force ("xcalloc", "xcalloc")
			Result.force ("xmalloc", "xmalloc")
			Result.force ("xfree", "xfree")
			Result.force ("ov_next", "ov_next")
			Result.force ("ov_flags", "ov_flags")
			Result.force ("ov_fwd", "ov_fwd")
			Result.force ("ov_size", "ov_size")
			Result.force ("ovs_tid", "ovs_tid")
			Result.force ("chconv", "chconv")
			Result.force ("chcode", "chcode")
			Result.force ("conv_pi", "conv_pi")
			Result.force ("conv_ri", "conv_ri")
			Result.force ("conv_dr", "conv_dr")
			Result.force ("conv_di", "conv_di")
			Result.force ("chupper", "chupper")
			Result.force ("chlower", "chlower")
			Result.force ("chis_upper", "chis_upper")
			Result.force ("chis_lower", "chis_lower")
			Result.force ("chis_digit", "chis_digit")
			Result.force ("chis_alpha", "chis_alpha")
			Result.force ("esbool_size", "esbool_size")
			Result.force ("eschar_size", "eschar_size")
			Result.force ("esreal_size", "esreal_size")
			Result.force ("esint_size", "esint_size")
			Result.force ("esptr_size", "esptr_size")
			Result.force ("esdouble_size", "esdouble_size")
			Result.force ("float_cos", "float_cos")
			Result.force ("float_acos", "float_acos")
			Result.force ("float_fabs", "float_fabs")
			Result.force ("float_ceil", "float_ceil")
			Result.force ("float_floor", "float_floor")
			Result.force ("float_log10", "float_log10")
			Result.force ("float_log", "float_log")
			Result.force ("float_sqrt", "float_sqrt")
			Result.force ("float_tan", "float_tan")
			Result.force ("float_atan", "float_atan")
			Result.force ("float_sin", "float_sin")
			Result.force ("float_asin", "float_asin")
			Result.force ("prof_recording", "prof_recording")
			Result.force ("System", "System")
			Result.force ("References", "References")
			Result.force ("Dispose", "Dispose")
			Result.force ("Disp_rout", "Disp_rout")
			Result.force ("XCreate", "XCreate")
			Result.force ("_concur_sep_obj_dtype", "_concur_sep_obj_dtype")
			Result.force ("econfg", "econfg")
			Result.force ("estypeg", "estypeg")
			Result.force ("rmdir", "rmdir")
			Result.force ("unlink", "unlink")
			Result.force ("getenv", "getenv")
			Result.force ("putenv", "putenv")
			Result.force ("setenv", "setenv")
			Result.force ("strdup", "strdup")
			Result.force ("opendir", "opendir")
			Result.force ("closedir", "closedir")
			Result.force ("rewinddir", "rewinddir")
			Result.force ("readdir", "readdir")
			Result.force ("seekdir", "seekdir")
			Result.force ("telldir", "telldir")
			Result.force ("rt_public", "rt_public")
			Result.force ("rt_private static", "rt_private static")
			Result.force ("rt_shared", "rt_shared")
			Result.force ("rt_list", "rt_list")
			Result.force ("rt_obj", "rt_obj")
			Result.force ("rout_obj_call_procedure", "rout_obj_call_procedure")
			Result.force ("rout_obj_putb", "rout_obj_putb")
			Result.force ("rout_obj_putc", "rout_obj_putc")
			Result.force ("rout_obj_putd", "rout_obj_putd")
			Result.force ("rout_obj_putf", "rout_obj_putf")
			Result.force ("rout_obj_puti", "rout_obj_puti")
			Result.force ("rout_obj_putp", "rout_obj_putp")
			Result.force ("rout_obj_putr", "rout_obj_putr")
			Result.force ("signal_pending", "signal_pending")
			Result.force ("pthread_attr_setschedpolicy", "pthread_attr_setschedpolicy")
			Result.force ("pthread_attr_setschedpolicy", "pthread_attr_setschedpolicy")
			Result.force ("sem_t", "sem_t")
			Result.force ("sem_init", "sem_init")
			Result.force ("sem_post", "sem_post")
			Result.force ("sem_wait", "sem_wait")
			Result.force ("sem_trywait", "sem_trywait")
			Result.force ("sem_destroy", "sem_destroy")
			Result.force ("pthread_attr_init", "pthread_attr_init")
			Result.force ("pthread_key_create", "pthread_key_create")
			Result.force ("pthread_attr_setschedpolicy", "pthread_attr_setschedpolicy")
			Result.force ("pthread_attr_setschedparam", "pthread_attr_setschedparam")
			Result.force ("pthread_attr_destroy", "pthread_attr_destroy")
			Result.force ("pthread_cond_t", "pthread_cond_t")
			Result.force ("rewinddir", "rewinddir")
			Result.force ("CAttrOffs", "CAttrOffs")
			Result.force ("CBodyIdx", "CBodyIdx")
			Result.force ("CFeatType", "CFeatType")
			Result.force ("CGENFeatType", "CGENFeatTypeI")
			Result.force ("MPatId", "MPatId")
			Result.force ("FPatId", "FPatId")
			Result.force ("DLEMPatId", "DLEMPatId")
			Result.force ("DLEFPatId", "DLEFPatId")
		end

	windows_api: HASH_TABLE [STRING, STRING] is
			-- Standard Windows structures.
		local
			a_file: PLAIN_TEXT_FILE
			a_directory: DIRECTORY
			tmp_path, a_line: STRING
		once
			create Result.make (500)
			Result.compare_objects

			tmp_path := Eiffel_installation_dir_name + "\wizards\com\config\wizard_winapi_names.cfg"

			create a_directory.make (Eiffel_installation_dir_name + "\wizards\com\config")
			if a_directory.exists then
				a_directory.open_read
				if a_directory.has_entry ("wizard_winapi_names.cfg") then
					create a_file.make_open_read (tmp_path)

					from
						a_file.start
					until
						a_file.end_of_file
					loop
						a_file.read_line
						a_line := a_file.last_string.twin
						if not a_line.is_empty then
							Result.put (a_line, a_line)
						end
					end
				end
			end
		ensure
			non_void_api: Result /= Void
		end

feature -- Status report

	is_forbidden_c_word (a_name: STRING): BOOLEAN is
			-- Is `a_name' forbidden c word?
		require
			non_void_name: a_name /= Void
			valid_name: not a_name.is_empty
		do
			Result := c_keywords.has (a_name) or 
					eiffel_runtime_macros.has (a_name) or 
					windows_api.has (a_name) or
					generator_words.has (a_name) 
		end


end -- class WIZARD_FORBIDDEN_NAMES

--+----------------------------------------------------------------
--| EiffelCOM Wizard
--| Copyright (C) 1999-2005 Eiffel Software. All rights reserved.
--| Eiffel Software Confidential
--| Duplication and distribution prohibited.
--|
--| Eiffel Software
--| 356 Storke Road, Goleta, CA 93117 USA
--| http://www.eiffel.com
--+----------------------------------------------------------------
