<document output="envision" title="EiffelEnvision Project References Folder">
	<meta_data>
		<help>
			<toc>
				<envision_title>References Folder</envision_title>
				<envision_pseudo_name>20</envision_pseudo_name>
			</toc>
		</help>
	</meta_data>
	<paragraph>
		<paragraph>
			The <bold>References</bold> folder (<image>
				<url>../../../../images/icons/references.ico</url>
			</image>), located directly underneath an EiffelEnvision <link>
				<url>../project.xml</url>
				<label>Project</label>
			</link> node in the <link>
				<url>url</url>
				<label>*Solution Explorer</label>
			</link>, is used to manage the component references used with your project. 
		</paragraph>
		<paragraph>
			EiffelEnvision supports four types of references:
			<list ordered="false">
				<item>Assembly</item>
				<item>Project</item>
				<item>COM</item>
				<item>Static Assembly</item>
			</list>
		</paragraph>
		
		<anchor>assembly</anchor>
		<paragraph>
			<bold>Assembly</bold>
			<line_break/>
				These types of component references are those that have been written using any one of the plethora of languages that target and compile for .NET. These types of component references are the most common in .NET and will be added from the <bold>.NET</bold> tab of the <link>
				<url>ms-help//MS.VSCC.2003/MS.MSDNQTR.2003FEB.1033/vbcon/html/vbtskAddingRemovingReferences.htm</url>
				<label>Adding References</label>
			</link> dialog box.
		</paragraph>
		
		<paragraph>
			Assembly references are represented by the <image>
				<url>../../../../images/icons/assembly.ico</url>
			</image> icon.
		</paragraph>
		
		<anchor>project</anchor>
		<paragraph>
			<bold>Project</bold>
			<line_break/>
			In a solution with multiple projects, you can create references to objects authored in another project that resides in the same solution. This creates an interdependency that requires special consideration when building and running the application. For more information, see <link>
				<url>ms-help//MS.VSCC.2003/MS.MSDNQTR.2003FEB.1033/vsintro7/html/vxconbuildconfigurations.htm
				</url>
				<label>Build Configurations</label>
			</link>.

			<note>
				Note: EiffelEnvision projects should not reference other EiffelEnvision projects in this way. EiffelEnvision projects permit the use of multiple inheritance and generics, which is not natively supported in the .NET framework. For more information please see the section on <link>
					<url>../../configuring/adding_references/precompiled_libraries.xml</url>
					<label>Precompiled Libraries</label>
				</link>
			</note>
		</paragraph>
		<paragraph>
			Project references are represented by the <image>
				<url>../../../../images/icons/assembly.ico</url>
			</image> icon.
		</paragraph>
		<paragraph>
			For information on adding and removing project references, see <link>
				<url>ms-help//MS.VSCC.2003/MS.MSDNQTR.2003FEB.1033/vsintro7/html/vxtskaddingremovingprojectreferences.htm</url>
				<label>Adding and Removing Project References</label>
			</link>. 
		</paragraph>
		
		<anchor>com</anchor>
		<paragraph>
			<bold>COM</bold>
			<line_break/>
			When referenced from the Component References dialog, through the COM page, an interop <link>
				<url>ms-help//MS.VSCC.2003/MS.MSDNQTR.2003FEB.1033/cpguide/html/cpconcomcallablewrapper.htm</url>
				<label>COM Callable Wrapper</label>
			</link> (CCW) assembly will be created in the projects <bold>obj</bold> directory, and added to the list project references. No all COM references will have a CCW generated for them as vendors may provide a <link>
				<url>ms-help//MS.VSCC.2003/MS.MSDNQTR.2003FEB.1033/cpguide/html/cpconprimaryinteropassemblies.htm</url>
				<label>Primary Interop Assembly</label>
			</link> (PIA), which will be referenced directly from the project. If a <link>
				<anchor_name>wrapper_key_file_name</anchor_name>
				<url>../../configuring/project_configuration/general.xml</url>
				<label>Wrapper Key File Name</label>
			</link>  is specified, using the <link>
				<url>../../configuring/project_configuration/general.xml</url>
				<label>General Property Page</label>
			</link>, the interop assembly will be signed with the specified private key file. COM references are represented by the <image>
				<url>../../../../images/icons/assembly.ico</url>
			</image> icon.
		</paragraph>
		
		<anchor>static</anchor>
		<paragraph>
			<bold>Static Assembly</bold>
			<line_break/>
			Static assembly references are assembly references that are added automatically by the Eiffel for .NET compiler. EiffelEnvision shows them under the <bold>References</bold> folder to indicate that they will be referenced by the assembly compiled by the Eiffel for .NET compiler. Static assembly references are entirely controlled by EiffelEnvision and it will add and remove them as you change your project's configuration.
		</paragraph>
		<paragraph>
			Static assembly references are represented by the <image>
				<url>../../../../images/icons/assembly_static.ico</url>
			</image> icon.
		</paragraph>

		<anchor>see_also</anchor>
		<heading>
			<size>2</size>
			<content>Related Sections</content>
		</heading>
		<seealso>
			<bold>See also</bold>:
			<line_break/>
			<link>
				<url>index.xml</url>
				<label>EiffelEnvision Project Reference Folder</label>
			</link>
			<line_break/>
			<link>
				<url>../index.xml</url>
				<label>EiffelEnvision Project Structure</label>
			</link>
			<line_break/>
			<link>
				<url>context_menu.xml</url>
				<label>Reference Context Menu</label>
			</link>
			<line_break/>
			<link>
				<url>../../configuring/adding_references/index.xml</url>
				<label>Adding References in EiffelEnvision</label>
			</link>
			<line_break/>
			<link>
				<url>ms-help//MS.VSCC.2003/MS.MSDNQTR.2003FEB.1033/vbcon/html/vbtskAddingRemovingReferences.htm</url>
				<label>Adding and Removing References</label>
			</link>
		</seealso>
	</paragraph>
</document>
