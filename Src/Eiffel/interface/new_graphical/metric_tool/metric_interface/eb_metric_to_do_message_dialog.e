note
	description: "Objects that represent an EV_DIALOG.%
		%The original version of this class was generated by EiffelBuild."
	legal: "See notice at end of class."
	status: "See notice at end of class."
	date: "$Date$"
	revision: "$Revision$"

class
	EB_METRIC_TO_DO_MESSAGE_DIALOG

inherit
	EB_METRIC_TO_DO_MESSAGE_DIALOG_IMP

	EB_METRIC_INTERFACE_PROVIDER
		undefine
			default_create,
			is_equal,
			copy
		end

	EV_SHARED_APPLICATION
		undefine
			default_create,
			is_equal,
			copy
		end

	EB_METRIC_TOOL_INTERFACE
		undefine
			default_create,
			is_equal,
			copy
		end

create
	make

feature {NONE} -- Initialization

	make (a_tool: like metric_tool)
			-- Initialize `metric_tool' with `a_tool'.
		require
			a_tool_attached: a_tool /= Void
		do
			set_metric_tool (a_tool)
			default_create
		end

	user_initialization
			-- Called by `initialize'.
			-- Any custom user initialization that
			-- could not be performed in `initialize',
			-- (due to regeneration of implementation class)
			-- can be added here.
		local
			l_text: EV_TEXT
		do
			create l_text
			to_do_lbl.set_text (metric_names.t_to_do)
			close_btn.set_text (metric_names.t_close)
			close_btn.select_actions.extend (agent hide)
			create editor
			editor.disable_edit
			editor.set_background_color (l_text.background_color)
			editor_area.extend (editor)
			set_size (Layout_constants.dialog_unit_to_pixels (700), Layout_constants.dialog_unit_to_pixels (300))
			set_default_cancel_button (close_btn)
			set_title (metric_names.t_metric_definition_error_wizard)
			set_icon_pixmap (pixmaps.icon_pixmaps.tool_metric_icon)
			error_message_txt.disable_edit
			error_message_txt.set_background_color (l_text.background_color)
			error_message_lbl.set_text (metric_names.coloned_string (metric_names.l_error_message, True))
		end

feature -- Access

	editor: EV_TEXT
			-- Editor to display to-do message

feature -- Basic operations

	load_text (a_error: STRING_GENERAL; a_location: STRING_GENERAL; a_to_do: STRING_GENERAL)
			-- Load error message `a_error', location `a_location' and to-do message `a_to_do' into Current.
		local
			l_text: STRING_GENERAL
		do
			if a_error = Void then
				error_message_txt.set_text (create{STRING_32}.make (0))
			else
				l_text := a_error.twin
				if a_location /= Void then
					l_text.append (metric_names.new_line_separator)
					l_text.append (metric_names.t_location)
					l_text.append (metric_names.colon)
					l_text.append (a_location)
				end
				error_message_txt.set_text (l_text)
			end
			if a_to_do = Void then
				editor.set_text ("")
			else
				editor.set_text (a_to_do)
			end
		end

note
        copyright:	"Copyright (c) 1984-2006, Eiffel Software"
        license:	"GPL version 2 (see http://www.eiffel.com/licensing/gpl.txt)"
        licensing_options:	"http://www.eiffel.com/licensing"
        copying: "[
                        This file is part of Eiffel Software's Eiffel Development Environment.
                        
                        Eiffel Software's Eiffel Development Environment is free
                        software; you can redistribute it and/or modify it under
                        the terms of the GNU General Public License as published
                        by the Free Software Foundation, version 2 of the License
                        (available at the URL listed under "license" above).
                        
                        Eiffel Software's Eiffel Development Environment is
                        distributed in the hope that it will be useful,	but
                        WITHOUT ANY WARRANTY; without even the implied warranty
                        of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
                        See the	GNU General Public License for more details.
                        
                        You should have received a copy of the GNU General Public
                        License along with Eiffel Software's Eiffel Development
                        Environment; if not, write to the Free Software Foundation,
                        Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA
                ]"
        source: "[
                         Eiffel Software
                         356 Storke Road, Goleta, CA 93117 USA
                         Telephone 805-685-1006, Fax 805-685-6869
                         Website http://www.eiffel.com
                         Customer support http://support.eiffel.com
                ]"

end

