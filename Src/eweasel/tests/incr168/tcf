
--| Copyright (c) 1993-2006 University of Southern California and contributors.
--| All rights reserved.
--| Your use of this work is governed under the terms of the GNU General
--| Public License version 2.

-- This is a test control file

test_name 	 add-alternative-precondition
test_description After initial compilation where the system is melted, the name of a routine in a parent class is changed, yielding a third inherited version of a redefined feature.  The new inherited version of the feature has no precondition, which should make the alternative precondition of the redefined feature true.  But the precondition is violated when the system is executed.  Execution works correctly when the system is melted from scratch.

define FUNCTION "foo"
define PARENT "TEST4"
copy_sub 	Ace $TEST Ace
copy_sub 	test.e $CLUSTER test.e
copy_raw 	test1.e $CLUSTER test1.e
copy_raw 	test2.e $CLUSTER test2.e
copy_raw 	test3.e $CLUSTER test3.e
copy_sub 	test4.e $CLUSTER test4.e
compile_melted
compile_result 	ok

define FUNCTION "feat"
define PARENT "TEST4 redefine feat end"
copy_sub 	test.e $CLUSTER test.e
copy_sub 	test4.e $CLUSTER test4.e
compile_melted
compile_result 	ok

execute_work NONE exec_output1
execute_result ok
compare exec_output1 output

test_end
