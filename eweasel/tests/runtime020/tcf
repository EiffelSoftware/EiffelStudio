test_name 	 standard-stream-redirection
test_description A non-console application should allocate a new console when reading/writing from non-redirected handles, but use redirected handles otherwise.

copy_raw	client.e $CLUSTER client.e
copy_raw	shared.e $CLUSTER shared.e
copy_raw	supplier.e $CLUSTER supplier.e

define CONSOLE_APPLICATION "true"
copy_sub	supplier.ecf $TEST supplier.ecf
config		supplier.ecf supplier
system		supplier
	-- Unfortunately $EXEC_WORK does not work (uses "test" as a target name).
define_file	SUPPLIER $TEST EIFGENs supplier W_code supplier
compile_frozen
compile_result ok
c_compile_work
c_compile_result	ok

copy_sub	client.ecf $TEST client.ecf
config		client.ecf client
system		client
compile_frozen
compile_result ok
c_compile_work
c_compile_result	ok

--execute_work 	NONE std_output -supplier $SUPPLIER
--execute_result 	ok
--if     WINDOWS compare		std_output output_std_windows
--if not WINDOWS compare		std_output output_std

define_file    OUTPUT_FILE $OUTPUT file_output1
execute_work   NONE std_output1 -supplier $SUPPLIER -output $OUTPUT_FILE
execute_result ok
compare        file_output1 output

if WINDOWS define CONSOLE_APPLICATION "false"
if WINDOWS copy_sub		supplier.ecf $TEST supplier.ecf
if WINDOWS config		supplier.ecf supplier
if WINDOWS system		supplier
if WINDOWS compile_frozen
if WINDOWS compile_result ok
if WINDOWS c_compile_work
if WINDOWS c_compile_result	ok
if WINDOWS config		client.ecf client
if WINDOWS system		client

--if WINDOWS execute_work 	NONE std_output2 -supplier $SUPPLIER
--if WINDOWS execute_result 	ok
--if WINDOWS compare		std_output2 output_std

if WINDOWS define_file          OUTPUT_FILE $OUTPUT file_output3
if WINDOWS execute_work 	NONE std_output3 -supplier $SUPPLIER -output $OUTPUT_FILE
if WINDOWS execute_result 	ok
if WINDOWS compare		file_output3 output

if WINDOWS define_file          OUTPUT_FILE $OUTPUT file_output4
if WINDOWS execute_work 	NONE std_output4 -supplier $SUPPLIER -output $OUTPUT_FILE -detach
if WINDOWS execute_result 	ok
if WINDOWS compare		file_output4 output

--if WINDOWS execute_work 	NONE std_output5 -supplier $SUPPLIER -console
--if WINDOWS execute_result 	ok
--if WINDOWS compare		std_output5 output_std

if WINDOWS define_file          OUTPUT_FILE $OUTPUT file_output6
if WINDOWS execute_work 	NONE std_output6 -supplier $SUPPLIER -output $OUTPUT_FILE -console
if WINDOWS execute_result 	ok
if WINDOWS compare		file_output6 output

if WINDOWS define_file          OUTPUT_FILE $OUTPUT file_output7
if WINDOWS execute_work 	NONE std_output7 -supplier $SUPPLIER -output $OUTPUT_FILE -console -detach
if WINDOWS execute_result 	ok
if WINDOWS compare		file_output7 output

test_end
