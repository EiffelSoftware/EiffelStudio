-- This file has been generated by EWG. Do not edit. Changes will be lost!
-- functions wrapper
class MACWINDOWS_FUNCTIONS

obsolete
	"Use class MACWINDOWS_FUNCTIONS_EXTERNAL instead."

inherit

	MACWINDOWS_FUNCTIONS_EXTERNAL

feature
	new_window_def_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_window_def_upp_external (userroutine)
		end

	new_window_paint_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_window_paint_upp_external (userroutine)
		end

	dispose_window_def_upp (userupp: POINTER) is
		local
		do
			dispose_window_def_upp_external (userupp)
		end

	dispose_window_paint_upp (userupp: POINTER) is
		local
		do
			dispose_window_paint_upp_external (userupp)
		end

	invoke_window_def_upp (varcode: INTEGER; window: POINTER; message: INTEGER; param: INTEGER; userupp: POINTER): INTEGER is
		local
		do
			Result := invoke_window_def_upp_external (varcode, window, message, param, userupp)
		end

	invoke_window_paint_upp (device: POINTER; qdcontext: POINTER; window: POINTER; inclientpaintrgn: POINTER; outsystempaintrgn: POINTER; refcon: POINTER; userupp: POINTER): INTEGER is
		local
		do
			Result := invoke_window_paint_upp_external (device, qdcontext, window, inclientpaintrgn, outsystempaintrgn, refcon, userupp)
		end

	get_new_cwindow (windowid: INTEGER; wstorage: POINTER; behind: POINTER): POINTER is
		local
		do
			Result := get_new_cwindow_external (windowid, wstorage, behind)
		end

	new_window (wstorage: POINTER; boundsrect: POINTER; title: POINTER; visible: INTEGER; theproc: INTEGER; behind: POINTER; goawayflag: INTEGER; refcon: INTEGER): POINTER is
		local
		do
			Result := new_window_external (wstorage, boundsrect, title, visible, theproc, behind, goawayflag, refcon)
		end

	get_new_window (windowid: INTEGER; wstorage: POINTER; behind: POINTER): POINTER is
		local
		do
			Result := get_new_window_external (windowid, wstorage, behind)
		end

	new_cwindow (wstorage: POINTER; boundsrect: POINTER; title: POINTER; visible: INTEGER; procid: INTEGER; behind: POINTER; goawayflag: INTEGER; refcon: INTEGER): POINTER is
		local
		do
			Result := new_cwindow_external (wstorage, boundsrect, title, visible, procid, behind, goawayflag, refcon)
		end

	dispose_window (window: POINTER) is
		local
		do
			dispose_window_external (window)
		end

	create_new_window (windowclass: INTEGER; attributes: INTEGER; contentbounds: POINTER; outwindow: POINTER): INTEGER is
		local
		do
			Result := create_new_window_external (windowclass, attributes, contentbounds, outwindow)
		end

	create_window_from_resource (resid: INTEGER; outwindow: POINTER): INTEGER is
		local
		do
			Result := create_window_from_resource_external (resid, outwindow)
		end

	store_window_into_collection (window: POINTER; collection: POINTER): INTEGER is
		local
		do
			Result := store_window_into_collection_external (window, collection)
		end

	create_window_from_collection (collection: POINTER; outwindow: POINTER): INTEGER is
		local
		do
			Result := create_window_from_collection_external (collection, outwindow)
		end

	get_window_owner_count (window: POINTER; outcount: POINTER): INTEGER is
		local
		do
			Result := get_window_owner_count_external (window, outcount)
		end

	clone_window (window: POINTER): INTEGER is
		local
		do
			Result := clone_window_external (window)
		end

	get_window_retain_count (inwindow: POINTER): INTEGER is
		local
		do
			Result := get_window_retain_count_external (inwindow)
		end

	retain_window (inwindow: POINTER): INTEGER is
		local
		do
			Result := retain_window_external (inwindow)
		end

	release_window (inwindow: POINTER): INTEGER is
		local
		do
			Result := release_window_external (inwindow)
		end

	create_custom_window (def: POINTER; windowclass: INTEGER; attributes: INTEGER; contentbounds: POINTER; outwindow: POINTER): INTEGER is
		local
		do
			Result := create_custom_window_external (def, windowclass, attributes, contentbounds, outwindow)
		end

	reshape_custom_window (window: POINTER): INTEGER is
		local
		do
			Result := reshape_custom_window_external (window)
		end

	register_window_definition (inresid: INTEGER; indefspec: POINTER): INTEGER is
		local
		do
			Result := register_window_definition_external (inresid, indefspec)
		end

	get_window_widget_hilite (inwindow: POINTER; outhilite: POINTER): INTEGER is
		local
		do
			Result := get_window_widget_hilite_external (inwindow, outhilite)
		end

	is_valid_window_class (inclass: INTEGER): INTEGER is
		local
		do
			Result := is_valid_window_class_external (inclass)
		end

	get_available_window_attributes (inclass: INTEGER): INTEGER is
		local
		do
			Result := get_available_window_attributes_external (inclass)
		end

	get_window_class (window: POINTER; outclass: POINTER): INTEGER is
		local
		do
			Result := get_window_class_external (window, outclass)
		end

	get_window_attributes (window: POINTER; outattributes: POINTER): INTEGER is
		local
		do
			Result := get_window_attributes_external (window, outattributes)
		end

	change_window_attributes (window: POINTER; settheseattributes: INTEGER; cleartheseattributes: INTEGER): INTEGER is
		local
		do
			Result := change_window_attributes_external (window, settheseattributes, cleartheseattributes)
		end

	set_window_class (inwindow: POINTER; inwindowclass: INTEGER): INTEGER is
		local
		do
			Result := set_window_class_external (inwindow, inwindowclass)
		end

	hiwindow_change_class (inwindow: POINTER; inwindowclass: INTEGER): INTEGER is
		local
		do
			Result := hiwindow_change_class_external (inwindow, inwindowclass)
		end

	hiwindow_flush (inwindow: POINTER): INTEGER is
		local
		do
			Result := hiwindow_flush_external (inwindow)
		end

	set_window_modality (inwindow: POINTER; inmodalkind: INTEGER; inunavailablewindow: POINTER): INTEGER is
		local
		do
			Result := set_window_modality_external (inwindow, inmodalkind, inunavailablewindow)
		end

	get_window_modality (inwindow: POINTER; outmodalkind: POINTER; outunavailablewindow: POINTER): INTEGER is
		local
		do
			Result := get_window_modality_external (inwindow, outmodalkind, outunavailablewindow)
		end

	hiwindow_is_document_modal_target (inwindow: POINTER; outowner: POINTER): INTEGER is
		local
		do
			Result := hiwindow_is_document_modal_target_external (inwindow, outowner)
		end

	show_floating_windows: INTEGER is
		local
		do
			Result := show_floating_windows_external
		end

	hide_floating_windows: INTEGER is
		local
		do
			Result := hide_floating_windows_external
		end

	are_floating_windows_visible: INTEGER is
		local
		do
			Result := are_floating_windows_visible_external
		end

	create_window_group (inattributes: INTEGER; outgroup: POINTER): INTEGER is
		local
		do
			Result := create_window_group_external (inattributes, outgroup)
		end

	retain_window_group (ingroup: POINTER): INTEGER is
		local
		do
			Result := retain_window_group_external (ingroup)
		end

	release_window_group (ingroup: POINTER): INTEGER is
		local
		do
			Result := release_window_group_external (ingroup)
		end

	get_window_group_retain_count (ingroup: POINTER): INTEGER is
		local
		do
			Result := get_window_group_retain_count_external (ingroup)
		end

	get_window_group_of_class (windowclass: INTEGER): POINTER is
		local
		do
			Result := get_window_group_of_class_external (windowclass)
		end

	set_window_group_name (ingroup: POINTER; inname: POINTER): INTEGER is
		local
		do
			Result := set_window_group_name_external (ingroup, inname)
		end

	copy_window_group_name (ingroup: POINTER; outname: POINTER): INTEGER is
		local
		do
			Result := copy_window_group_name_external (ingroup, outname)
		end

	get_window_group_attributes (ingroup: POINTER; outattributes: POINTER): INTEGER is
		local
		do
			Result := get_window_group_attributes_external (ingroup, outattributes)
		end

	change_window_group_attributes (ingroup: POINTER; settheseattributes: INTEGER; cleartheseattributes: INTEGER): INTEGER is
		local
		do
			Result := change_window_group_attributes_external (ingroup, settheseattributes, cleartheseattributes)
		end

	set_window_group_level (ingroup: POINTER; inlevel: INTEGER): INTEGER is
		local
		do
			Result := set_window_group_level_external (ingroup, inlevel)
		end

	get_window_group_level (ingroup: POINTER; outlevel: POINTER): INTEGER is
		local
		do
			Result := get_window_group_level_external (ingroup, outlevel)
		end

	set_window_group_level_of_type (ingroup: POINTER; inleveltype: INTEGER; inlevel: INTEGER): INTEGER is
		local
		do
			Result := set_window_group_level_of_type_external (ingroup, inleveltype, inlevel)
		end

	get_window_group_level_of_type (ingroup: POINTER; inleveltype: INTEGER; outlevel: POINTER): INTEGER is
		local
		do
			Result := get_window_group_level_of_type_external (ingroup, inleveltype, outlevel)
		end

	send_window_group_behind (ingroup: POINTER; behindgroup: POINTER): INTEGER is
		local
		do
			Result := send_window_group_behind_external (ingroup, behindgroup)
		end

	get_window_group (inwindow: POINTER): POINTER is
		local
		do
			Result := get_window_group_external (inwindow)
		end

	set_window_group (inwindow: POINTER; innewgroup: POINTER): INTEGER is
		local
		do
			Result := set_window_group_external (inwindow, innewgroup)
		end

	is_window_contained_in_group (inwindow: POINTER; ingroup: POINTER): INTEGER is
		local
		do
			Result := is_window_contained_in_group_external (inwindow, ingroup)
		end

	get_window_group_parent (ingroup: POINTER): POINTER is
		local
		do
			Result := get_window_group_parent_external (ingroup)
		end

	set_window_group_parent (ingroup: POINTER; innewgroup: POINTER): INTEGER is
		local
		do
			Result := set_window_group_parent_external (ingroup, innewgroup)
		end

	get_window_group_sibling (ingroup: POINTER; innextgroup: INTEGER): POINTER is
		local
		do
			Result := get_window_group_sibling_external (ingroup, innextgroup)
		end

	get_window_group_owner (ingroup: POINTER): POINTER is
		local
		do
			Result := get_window_group_owner_external (ingroup)
		end

	set_window_group_owner (ingroup: POINTER; inwindow: POINTER): INTEGER is
		local
		do
			Result := set_window_group_owner_external (ingroup, inwindow)
		end

	count_window_group_contents (ingroup: POINTER; inoptions: INTEGER): INTEGER is
		local
		do
			Result := count_window_group_contents_external (ingroup, inoptions)
		end

	get_window_group_contents (ingroup: POINTER; inoptions: INTEGER; inalloweditems: INTEGER; outnumitems: POINTER; outitems: POINTER): INTEGER is
		local
		do
			Result := get_window_group_contents_external (ingroup, inoptions, inalloweditems, outnumitems, outitems)
		end

	get_indexed_window (ingroup: POINTER; inindex: INTEGER; inoptions: INTEGER; outwindow: POINTER): INTEGER is
		local
		do
			Result := get_indexed_window_external (ingroup, inindex, inoptions, outwindow)
		end

	get_window_index (inwindow: POINTER; instartgroup: POINTER; inoptions: INTEGER; outindex: POINTER): INTEGER is
		local
		do
			Result := get_window_index_external (inwindow, instartgroup, inoptions, outindex)
		end

	active_non_floating_window: POINTER is
		local
		do
			Result := active_non_floating_window_external
		end

	is_window_active (inwindow: POINTER): INTEGER is
		local
		do
			Result := is_window_active_external (inwindow)
		end

	activate_window (inwindow: POINTER; inactivate: INTEGER): INTEGER is
		local
		do
			Result := activate_window_external (inwindow, inactivate)
		end

	get_window_activation_scope (inwindow: POINTER; outscope: POINTER): INTEGER is
		local
		do
			Result := get_window_activation_scope_external (inwindow, outscope)
		end

	set_window_activation_scope (inwindow: POINTER; inscope: INTEGER): INTEGER is
		local
		do
			Result := set_window_activation_scope_external (inwindow, inscope)
		end

	debug_print_window_group (ingroup: POINTER) is
		local
		do
			debug_print_window_group_external (ingroup)
		end

	debug_print_all_window_groups is
		local
		do
			debug_print_all_window_groups_external
		end

	set_theme_window_background (inwindow: POINTER; inbrush: INTEGER; inupdate: INTEGER): INTEGER is
		local
		do
			Result := set_theme_window_background_external (inwindow, inbrush, inupdate)
		end

	set_theme_text_color_for_window (inwindow: POINTER; inactive: INTEGER; indepth: INTEGER; incolordev: INTEGER): INTEGER is
		local
		do
			Result := set_theme_text_color_for_window_external (inwindow, inactive, indepth, incolordev)
		end

	set_window_content_color (window: POINTER; color: POINTER): INTEGER is
		local
		do
			Result := set_window_content_color_external (window, color)
		end

	get_window_content_color (window: POINTER; color: POINTER): INTEGER is
		local
		do
			Result := get_window_content_color_external (window, color)
		end

	get_window_content_pattern (window: POINTER; outpixpat: POINTER): INTEGER is
		local
		do
			Result := get_window_content_pattern_external (window, outpixpat)
		end

	set_window_content_pattern (window: POINTER; pixpat: POINTER): INTEGER is
		local
		do
			Result := set_window_content_pattern_external (window, pixpat)
		end

	install_window_content_paint_proc (window: POINTER; paintproc: POINTER; options: INTEGER; refcon: POINTER): INTEGER is
		local
		do
			Result := install_window_content_paint_proc_external (window, paintproc, options, refcon)
		end

	scroll_window_rect (inwindow: POINTER; inscrollrect: POINTER; inhpixels: INTEGER; invpixels: INTEGER; inoptions: INTEGER; outexposedrgn: POINTER): INTEGER is
		local
		do
			Result := scroll_window_rect_external (inwindow, inscrollrect, inhpixels, invpixels, inoptions, outexposedrgn)
		end

	scroll_window_region (inwindow: POINTER; inscrollrgn: POINTER; inhpixels: INTEGER; invpixels: INTEGER; inoptions: INTEGER; outexposedrgn: POINTER): INTEGER is
		local
		do
			Result := scroll_window_region_external (inwindow, inscrollrgn, inhpixels, invpixels, inoptions, outexposedrgn)
		end

	clip_above (window: POINTER) is
		local
		do
			clip_above_external (window)
		end

	paint_one (window: POINTER; clobberedrgn: POINTER) is
		local
		do
			paint_one_external (window, clobberedrgn)
		end

	paint_behind (startwindow: POINTER; clobberedrgn: POINTER) is
		local
		do
			paint_behind_external (startwindow, clobberedrgn)
		end

	calc_vis (window: POINTER) is
		local
		do
			calc_vis_external (window)
		end

	calc_vis_behind (startwindow: POINTER; clobberedrgn: POINTER) is
		local
		do
			calc_vis_behind_external (startwindow, clobberedrgn)
		end

	check_update (theevent: POINTER): INTEGER is
		local
		do
			Result := check_update_external (theevent)
		end

	find_window (thepoint: POINTER; window: POINTER): INTEGER is
		local
		do
			Result := find_window_external (thepoint, window)
		end

	front_window: POINTER is
		local
		do
			Result := front_window_external
		end

	bring_to_front (window: POINTER) is
		local
		do
			bring_to_front_external (window)
		end

	send_behind (window: POINTER; behindwindow: POINTER) is
		local
		do
			send_behind_external (window, behindwindow)
		end

	select_window (window: POINTER) is
		local
		do
			select_window_external (window)
		end

	front_non_floating_window: POINTER is
		local
		do
			Result := front_non_floating_window_external
		end

	get_next_window_of_class (inwindow: POINTER; inwindowclass: INTEGER; mustbevisible: INTEGER): POINTER is
		local
		do
			Result := get_next_window_of_class_external (inwindow, inwindowclass, mustbevisible)
		end

	get_front_window_of_class (inwindowclass: INTEGER; mustbevisible: INTEGER): POINTER is
		local
		do
			Result := get_front_window_of_class_external (inwindowclass, mustbevisible)
		end

	find_window_of_class (where: POINTER; inwindowclass: INTEGER; outwindow: POINTER; outwindowpart: POINTER): INTEGER is
		local
		do
			Result := find_window_of_class_external (where, inwindowclass, outwindow, outwindowpart)
		end

	create_standard_window_menu (inoptions: INTEGER; outmenu: POINTER): INTEGER is
		local
		do
			Result := create_standard_window_menu_external (inoptions, outmenu)
		end

	set_window_alternate_title (inwindow: POINTER; intitle: POINTER): INTEGER is
		local
		do
			Result := set_window_alternate_title_external (inwindow, intitle)
		end

	copy_window_alternate_title (inwindow: POINTER; outtitle: POINTER): INTEGER is
		local
		do
			Result := copy_window_alternate_title_external (inwindow, outtitle)
		end

	is_valid_window_ptr (possiblewindow: POINTER): INTEGER is
		local
		do
			Result := is_valid_window_ptr_external (possiblewindow)
		end

	hilite_window (window: POINTER; fhilite: INTEGER) is
		local
		do
			hilite_window_external (window, fhilite)
		end

	set_wref_con (window: POINTER; data: INTEGER) is
		local
		do
			set_wref_con_external (window, data)
		end

	get_wref_con (window: POINTER): INTEGER is
		local
		do
			Result := get_wref_con_external (window)
		end

	set_window_pic (window: POINTER; pic: POINTER) is
		local
		do
			set_window_pic_external (window, pic)
		end

	get_window_pic (window: POINTER): POINTER is
		local
		do
			Result := get_window_pic_external (window)
		end

	get_wvariant (window: POINTER): INTEGER is
		local
		do
			Result := get_wvariant_external (window)
		end

	get_window_features (window: POINTER; outfeatures: POINTER): INTEGER is
		local
		do
			Result := get_window_features_external (window, outfeatures)
		end

	get_window_region (window: POINTER; inregioncode: INTEGER; iowinrgn: POINTER): INTEGER is
		local
		do
			Result := get_window_region_external (window, inregioncode, iowinrgn)
		end

	get_window_structure_widths (inwindow: POINTER; outrect: POINTER): INTEGER is
		local
		do
			Result := get_window_structure_widths_external (inwindow, outrect)
		end

	hiwindow_change_features (inwindow: POINTER; insetthese: INTEGER; inclearthese: INTEGER): INTEGER is
		local
		do
			Result := hiwindow_change_features_external (inwindow, insetthese, inclearthese)
		end

	begin_update (window: POINTER) is
		local
		do
			begin_update_external (window)
		end

	end_update (window: POINTER) is
		local
		do
			end_update_external (window)
		end

	inval_window_rgn (window: POINTER; region: POINTER): INTEGER is
		local
		do
			Result := inval_window_rgn_external (window, region)
		end

	inval_window_rect (window: POINTER; bounds: POINTER): INTEGER is
		local
		do
			Result := inval_window_rect_external (window, bounds)
		end

	valid_window_rgn (window: POINTER; region: POINTER): INTEGER is
		local
		do
			Result := valid_window_rgn_external (window, region)
		end

	valid_window_rect (window: POINTER; bounds: POINTER): INTEGER is
		local
		do
			Result := valid_window_rect_external (window, bounds)
		end

	draw_grow_icon (window: POINTER) is
		local
		do
			draw_grow_icon_external (window)
		end

	set_wtitle (window: POINTER; title: POINTER) is
		local
		do
			set_wtitle_external (window, title)
		end

	get_wtitle (window: POINTER; title: POINTER) is
		local
		do
			get_wtitle_external (window, title)
		end

	set_window_title_with_cfstring (inwindow: POINTER; instring: POINTER): INTEGER is
		local
		do
			Result := set_window_title_with_cfstring_external (inwindow, instring)
		end

	copy_window_title_as_cfstring (inwindow: POINTER; outstring: POINTER): INTEGER is
		local
		do
			Result := copy_window_title_as_cfstring_external (inwindow, outstring)
		end

	set_window_proxy_fsspec (window: POINTER; infile: POINTER): INTEGER is
		local
		do
			Result := set_window_proxy_fsspec_external (window, infile)
		end

	get_window_proxy_fsspec (window: POINTER; outfile: POINTER): INTEGER is
		local
		do
			Result := get_window_proxy_fsspec_external (window, outfile)
		end

	hiwindow_set_proxy_fsref (window: POINTER; inref: POINTER): INTEGER is
		local
		do
			Result := hiwindow_set_proxy_fsref_external (window, inref)
		end

	hiwindow_get_proxy_fsref (window: POINTER; outref: POINTER): INTEGER is
		local
		do
			Result := hiwindow_get_proxy_fsref_external (window, outref)
		end

	set_window_proxy_alias (inwindow: POINTER; inalias: POINTER): INTEGER is
		local
		do
			Result := set_window_proxy_alias_external (inwindow, inalias)
		end

	get_window_proxy_alias (window: POINTER; a_alias: POINTER): INTEGER is
		local
		do
			Result := get_window_proxy_alias_external (window, a_alias)
		end

	set_window_proxy_creator_and_type (window: POINTER; filecreator: INTEGER; filetype: INTEGER; vrefnum: INTEGER): INTEGER is
		local
		do
			Result := set_window_proxy_creator_and_type_external (window, filecreator, filetype, vrefnum)
		end

	get_window_proxy_icon (window: POINTER; outicon: POINTER): INTEGER is
		local
		do
			Result := get_window_proxy_icon_external (window, outicon)
		end

	set_window_proxy_icon (window: POINTER; icon: POINTER): INTEGER is
		local
		do
			Result := set_window_proxy_icon_external (window, icon)
		end

	remove_window_proxy (window: POINTER): INTEGER is
		local
		do
			Result := remove_window_proxy_external (window)
		end

	begin_window_proxy_drag (window: POINTER; outnewdrag: POINTER; outdragoutlinergn: POINTER): INTEGER is
		local
		do
			Result := begin_window_proxy_drag_external (window, outnewdrag, outdragoutlinergn)
		end

	end_window_proxy_drag (window: POINTER; thedrag: POINTER): INTEGER is
		local
		do
			Result := end_window_proxy_drag_external (window, thedrag)
		end

	track_window_proxy_from_existing_drag (window: POINTER; startpt: POINTER; drag: POINTER; indragoutlinergn: POINTER): INTEGER is
		local
		do
			Result := track_window_proxy_from_existing_drag_external (window, startpt, drag, indragoutlinergn)
		end

	track_window_proxy_drag (window: POINTER; startpt: POINTER): INTEGER is
		local
		do
			Result := track_window_proxy_drag_external (window, startpt)
		end

	is_window_modified (window: POINTER): INTEGER is
		local
		do
			Result := is_window_modified_external (window)
		end

	set_window_modified (window: POINTER; modified: INTEGER): INTEGER is
		local
		do
			Result := set_window_modified_external (window, modified)
		end

	is_window_path_select_click (window: POINTER; event: POINTER): INTEGER is
		local
		do
			Result := is_window_path_select_click_external (window, event)
		end

	is_window_path_select_event (window: POINTER; inevent: POINTER): INTEGER is
		local
		do
			Result := is_window_path_select_event_external (window, inevent)
		end

	window_path_select (window: POINTER; menu: POINTER; outmenuresult: POINTER): INTEGER is
		local
		do
			Result := window_path_select_external (window, menu, outmenuresult)
		end

	hilite_window_frame_for_drag (window: POINTER; hilited: INTEGER): INTEGER is
		local
		do
			Result := hilite_window_frame_for_drag_external (window, hilited)
		end

	transition_window (inwindow: POINTER; ineffect: INTEGER; inaction: INTEGER; inrect: POINTER): INTEGER is
		local
		do
			Result := transition_window_external (inwindow, ineffect, inaction, inrect)
		end

	transition_window_and_parent (inwindow: POINTER; inparentwindow: POINTER; ineffect: INTEGER; inaction: INTEGER; inrect: POINTER): INTEGER is
		local
		do
			Result := transition_window_and_parent_external (inwindow, inparentwindow, ineffect, inaction, inrect)
		end

	transition_window_with_options (inwindow: POINTER; ineffect: INTEGER; inaction: INTEGER; inbounds: POINTER; inasync: INTEGER; inoptions: POINTER): INTEGER is
		local
		do
			Result := transition_window_with_options_external (inwindow, ineffect, inaction, inbounds, inasync, inoptions)
		end

	move_window (window: POINTER; hglobal: INTEGER; vglobal: INTEGER; front: INTEGER) is
		local
		do
			move_window_external (window, hglobal, vglobal, front)
		end

	size_window (window: POINTER; w: INTEGER; h: INTEGER; fupdate: INTEGER) is
		local
		do
			size_window_external (window, w, h, fupdate)
		end

	grow_window (window: POINTER; startpt: POINTER; bbox: POINTER): INTEGER is
		local
		do
			Result := grow_window_external (window, startpt, bbox)
		end

	drag_window (window: POINTER; startpt: POINTER; boundsrect: POINTER) is
		local
		do
			drag_window_external (window, startpt, boundsrect)
		end

	zoom_window (window: POINTER; partcode: INTEGER; front: INTEGER) is
		local
		do
			zoom_window_external (window, partcode, front)
		end

	is_window_collapsable (window: POINTER): INTEGER is
		local
		do
			Result := is_window_collapsable_external (window)
		end

	is_window_collapsed (window: POINTER): INTEGER is
		local
		do
			Result := is_window_collapsed_external (window)
		end

	collapse_window (window: POINTER; collapse: INTEGER): INTEGER is
		local
		do
			Result := collapse_window_external (window, collapse)
		end

	collapse_all_windows (collapse: INTEGER): INTEGER is
		local
		do
			Result := collapse_all_windows_external (collapse)
		end

	create_qdcontext_for_collapsed_window_dock_tile (inwindow: POINTER; outcontext: POINTER): INTEGER is
		local
		do
			Result := create_qdcontext_for_collapsed_window_dock_tile_external (inwindow, outcontext)
		end

	release_qdcontext_for_collapsed_window_dock_tile (inwindow: POINTER; incontext: POINTER): INTEGER is
		local
		do
			Result := release_qdcontext_for_collapsed_window_dock_tile_external (inwindow, incontext)
		end

	update_collapsed_window_dock_tile (inwindow: POINTER): INTEGER is
		local
		do
			Result := update_collapsed_window_dock_tile_external (inwindow)
		end

	set_window_dock_tile_menu (inwindow: POINTER; inmenu: POINTER): INTEGER is
		local
		do
			Result := set_window_dock_tile_menu_external (inwindow, inmenu)
		end

	get_window_dock_tile_menu (inwindow: POINTER): POINTER is
		local
		do
			Result := get_window_dock_tile_menu_external (inwindow)
		end

	get_window_bounds (window: POINTER; regioncode: INTEGER; globalbounds: POINTER): INTEGER is
		local
		do
			Result := get_window_bounds_external (window, regioncode, globalbounds)
		end

	set_window_resize_limits (inwindow: POINTER; inminlimits: POINTER; inmaxlimits: POINTER): INTEGER is
		local
		do
			Result := set_window_resize_limits_external (inwindow, inminlimits, inmaxlimits)
		end

	get_window_resize_limits (inwindow: POINTER; outminlimits: POINTER; outmaxlimits: POINTER): INTEGER is
		local
		do
			Result := get_window_resize_limits_external (inwindow, outminlimits, outmaxlimits)
		end

	resize_window (inwindow: POINTER; instartpoint: POINTER; insizeconstraints: POINTER; outnewcontentrect: POINTER): INTEGER is
		local
		do
			Result := resize_window_external (inwindow, instartpoint, insizeconstraints, outnewcontentrect)
		end

	set_window_bounds (window: POINTER; regioncode: INTEGER; globalbounds: POINTER): INTEGER is
		local
		do
			Result := set_window_bounds_external (window, regioncode, globalbounds)
		end

	reposition_window (window: POINTER; parentwindow: POINTER; method: INTEGER): INTEGER is
		local
		do
			Result := reposition_window_external (window, parentwindow, method)
		end

	move_window_structure (window: POINTER; hglobal: INTEGER; vglobal: INTEGER): INTEGER is
		local
		do
			Result := move_window_structure_external (window, hglobal, vglobal)
		end

	is_window_in_standard_state (inwindow: POINTER; inidealsize: POINTER; outidealstandardstate: POINTER): INTEGER is
		local
		do
			Result := is_window_in_standard_state_external (inwindow, inidealsize, outidealstandardstate)
		end

	zoom_window_ideal (inwindow: POINTER; inpartcode: INTEGER; ioidealsize: POINTER): INTEGER is
		local
		do
			Result := zoom_window_ideal_external (inwindow, inpartcode, ioidealsize)
		end

	get_window_ideal_user_state (inwindow: POINTER; outuserstate: POINTER): INTEGER is
		local
		do
			Result := get_window_ideal_user_state_external (inwindow, outuserstate)
		end

	set_window_ideal_user_state (inwindow: POINTER; inuserstate: POINTER): INTEGER is
		local
		do
			Result := set_window_ideal_user_state_external (inwindow, inuserstate)
		end

	get_window_greatest_area_device (inwindow: POINTER; inregion: INTEGER; outgreatestdevice: POINTER; outgreatestdevicerect: POINTER): INTEGER is
		local
		do
			Result := get_window_greatest_area_device_external (inwindow, inregion, outgreatestdevice, outgreatestdevicerect)
		end

	constrain_window_to_screen (inwindowref: POINTER; inregioncode: INTEGER; inoptions: INTEGER; inscreenrect: POINTER; outstructure: POINTER): INTEGER is
		local
		do
			Result := constrain_window_to_screen_external (inwindowref, inregioncode, inoptions, inscreenrect, outstructure)
		end

	get_available_window_positioning_bounds (indevice: POINTER; outavailablerect: POINTER): INTEGER is
		local
		do
			Result := get_available_window_positioning_bounds_external (indevice, outavailablerect)
		end

	get_available_window_positioning_region (indevice: POINTER; iorgn: POINTER): INTEGER is
		local
		do
			Result := get_available_window_positioning_region_external (indevice, iorgn)
		end

	hide_window (window: POINTER) is
		local
		do
			hide_window_external (window)
		end

	show_window (window: POINTER) is
		local
		do
			show_window_external (window)
		end

	show_hide (window: POINTER; showflag: INTEGER) is
		local
		do
			show_hide_external (window, showflag)
		end

	is_window_visible (window: POINTER): INTEGER is
		local
		do
			Result := is_window_visible_external (window)
		end

	is_window_latent_visible (inwindow: POINTER; outlatentvisible: POINTER): INTEGER is
		local
		do
			Result := is_window_latent_visible_external (inwindow, outlatentvisible)
		end

	hiwindow_get_availability (inwindow: POINTER; outavailability: POINTER): INTEGER is
		local
		do
			Result := hiwindow_get_availability_external (inwindow, outavailability)
		end

	hiwindow_change_availability (inwindow: POINTER; insetavailability: INTEGER; inclearavailability: INTEGER): INTEGER is
		local
		do
			Result := hiwindow_change_availability_external (inwindow, insetavailability, inclearavailability)
		end

	show_sheet_window (insheet: POINTER; inparentwindow: POINTER): INTEGER is
		local
		do
			Result := show_sheet_window_external (insheet, inparentwindow)
		end

	hide_sheet_window (insheet: POINTER): INTEGER is
		local
		do
			Result := hide_sheet_window_external (insheet)
		end

	detach_sheet_window (insheet: POINTER): INTEGER is
		local
		do
			Result := detach_sheet_window_external (insheet)
		end

	get_sheet_window_parent (insheet: POINTER; outparentwindow: POINTER): INTEGER is
		local
		do
			Result := get_sheet_window_parent_external (insheet, outparentwindow)
		end

	get_drawer_preferred_edge (indrawerwindow: POINTER): INTEGER is
		local
		do
			Result := get_drawer_preferred_edge_external (indrawerwindow)
		end

	set_drawer_preferred_edge (indrawerwindow: POINTER; inedge: INTEGER): INTEGER is
		local
		do
			Result := set_drawer_preferred_edge_external (indrawerwindow, inedge)
		end

	get_drawer_current_edge (indrawerwindow: POINTER): INTEGER is
		local
		do
			Result := get_drawer_current_edge_external (indrawerwindow)
		end

	get_drawer_state (indrawerwindow: POINTER): INTEGER is
		local
		do
			Result := get_drawer_state_external (indrawerwindow)
		end

	get_drawer_parent (indrawerwindow: POINTER): POINTER is
		local
		do
			Result := get_drawer_parent_external (indrawerwindow)
		end

	set_drawer_parent (indrawerwindow: POINTER; inparent: POINTER): INTEGER is
		local
		do
			Result := set_drawer_parent_external (indrawerwindow, inparent)
		end

	set_drawer_offsets (indrawerwindow: POINTER; inleadingoffset: REAL; intrailingoffset: REAL): INTEGER is
		local
		do
			Result := set_drawer_offsets_external (indrawerwindow, inleadingoffset, intrailingoffset)
		end

	get_drawer_offsets (indrawerwindow: POINTER; outleadingoffset: POINTER; outtrailingoffset: POINTER): INTEGER is
		local
		do
			Result := get_drawer_offsets_external (indrawerwindow, outleadingoffset, outtrailingoffset)
		end

	toggle_drawer (indrawerwindow: POINTER): INTEGER is
		local
		do
			Result := toggle_drawer_external (indrawerwindow)
		end

	open_drawer (indrawerwindow: POINTER; inedge: INTEGER; inasync: INTEGER): INTEGER is
		local
		do
			Result := open_drawer_external (indrawerwindow, inedge, inasync)
		end

	close_drawer (indrawerwindow: POINTER; inasync: INTEGER): INTEGER is
		local
		do
			Result := close_drawer_external (indrawerwindow, inasync)
		end

	disable_screen_updates: INTEGER is
		local
		do
			Result := disable_screen_updates_external
		end

	enable_screen_updates: INTEGER is
		local
		do
			Result := enable_screen_updates_external
		end

	set_window_toolbar (inwindow: POINTER; intoolbar: POINTER): INTEGER is
		local
		do
			Result := set_window_toolbar_external (inwindow, intoolbar)
		end

	get_window_toolbar (inwindow: POINTER; outtoolbar: POINTER): INTEGER is
		local
		do
			Result := get_window_toolbar_external (inwindow, outtoolbar)
		end

	show_hide_window_toolbar (inwindow: POINTER; inshow: INTEGER; inanimate: INTEGER): INTEGER is
		local
		do
			Result := show_hide_window_toolbar_external (inwindow, inshow, inanimate)
		end

	is_window_toolbar_visible (inwindow: POINTER): INTEGER is
		local
		do
			Result := is_window_toolbar_visible_external (inwindow)
		end

	set_window_alpha (inwindow: POINTER; inalpha: REAL): INTEGER is
		local
		do
			Result := set_window_alpha_external (inwindow, inalpha)
		end

	get_window_alpha (inwindow: POINTER; outalpha: POINTER): INTEGER is
		local
		do
			Result := get_window_alpha_external (inwindow, outalpha)
		end

	hiwindow_invalidate_shadow (inwindow: POINTER): INTEGER is
		local
		do
			Result := hiwindow_invalidate_shadow_external (inwindow)
		end

	hiwindow_get_scale_mode (inwindow: POINTER; outmode: POINTER; outscalefactor: POINTER): INTEGER is
		local
		do
			Result := hiwindow_get_scale_mode_external (inwindow, outmode, outscalefactor)
		end

	get_window_property (window: POINTER; propertycreator: INTEGER; propertytag: INTEGER; buffersize: INTEGER; actualsize: POINTER; propertybuffer: POINTER): INTEGER is
		local
		do
			Result := get_window_property_external (window, propertycreator, propertytag, buffersize, actualsize, propertybuffer)
		end

	get_window_property_size (window: POINTER; creator: INTEGER; tag: INTEGER; size: POINTER): INTEGER is
		local
		do
			Result := get_window_property_size_external (window, creator, tag, size)
		end

	set_window_property (window: POINTER; propertycreator: INTEGER; propertytag: INTEGER; propertysize: INTEGER; propertybuffer: POINTER): INTEGER is
		local
		do
			Result := set_window_property_external (window, propertycreator, propertytag, propertysize, propertybuffer)
		end

	remove_window_property (window: POINTER; propertycreator: INTEGER; propertytag: INTEGER): INTEGER is
		local
		do
			Result := remove_window_property_external (window, propertycreator, propertytag)
		end

	get_window_property_attributes (window: POINTER; propertycreator: INTEGER; propertytag: INTEGER; attributes: POINTER): INTEGER is
		local
		do
			Result := get_window_property_attributes_external (window, propertycreator, propertytag, attributes)
		end

	change_window_property_attributes (window: POINTER; propertycreator: INTEGER; propertytag: INTEGER; attributestoset: INTEGER; attributestoclear: INTEGER): INTEGER is
		local
		do
			Result := change_window_property_attributes_external (window, propertycreator, propertytag, attributestoset, attributestoclear)
		end

	pin_rect (therect: POINTER; thept: POINTER): INTEGER is
		local
		do
			Result := pin_rect_external (therect, thept)
		end

	get_gray_rgn: POINTER is
		local
		do
			Result := get_gray_rgn_external
		end

	track_box (window: POINTER; thept: POINTER; partcode: INTEGER): INTEGER is
		local
		do
			Result := track_box_external (window, thept, partcode)
		end

	track_go_away (window: POINTER; thept: POINTER): INTEGER is
		local
		do
			Result := track_go_away_external (window, thept)
		end

	drag_gray_rgn (thergn: POINTER; startpt: POINTER; limitrect: POINTER; sloprect: POINTER; axis: INTEGER; actionproc: POINTER): INTEGER is
		local
		do
			Result := drag_gray_rgn_external (thergn, startpt, limitrect, sloprect, axis, actionproc)
		end

	drag_the_rgn (thergn: POINTER; startpt: POINTER; limitrect: POINTER; sloprect: POINTER; axis: INTEGER; actionproc: POINTER): INTEGER is
		local
		do
			Result := drag_the_rgn_external (thergn, startpt, limitrect, sloprect, axis, actionproc)
		end

	get_window_list: POINTER is
		local
		do
			Result := get_window_list_external
		end

	get_window_port (window: POINTER): POINTER is
		local
		do
			Result := get_window_port_external (window)
		end

	get_window_structure_port (inwindow: POINTER): POINTER is
		local
		do
			Result := get_window_structure_port_external (inwindow)
		end

	get_window_kind (window: POINTER): INTEGER is
		local
		do
			Result := get_window_kind_external (window)
		end

	is_window_hilited (window: POINTER): INTEGER is
		local
		do
			Result := is_window_hilited_external (window)
		end

	is_window_update_pending (window: POINTER): INTEGER is
		local
		do
			Result := is_window_update_pending_external (window)
		end

	get_next_window (window: POINTER): POINTER is
		local
		do
			Result := get_next_window_external (window)
		end

	get_previous_window (inwindow: POINTER): POINTER is
		local
		do
			Result := get_previous_window_external (inwindow)
		end

	get_window_standard_state (window: POINTER; rect: POINTER): POINTER is
		local
		do
			Result := get_window_standard_state_external (window, rect)
		end

	get_window_user_state (window: POINTER; rect: POINTER): POINTER is
		local
		do
			Result := get_window_user_state_external (window, rect)
		end

	set_window_kind (window: POINTER; kind: INTEGER) is
		local
		do
			set_window_kind_external (window, kind)
		end

	set_window_standard_state (window: POINTER; rect: POINTER) is
		local
		do
			set_window_standard_state_external (window, rect)
		end

	set_window_user_state (window: POINTER; rect: POINTER) is
		local
		do
			set_window_user_state_external (window, rect)
		end

	set_port_window_port (window: POINTER) is
		local
		do
			set_port_window_port_external (window)
		end

	get_window_port_bounds (window: POINTER; bounds: POINTER): POINTER is
		local
		do
			Result := get_window_port_bounds_external (window, bounds)
		end

	get_window_from_port (port: POINTER): POINTER is
		local
		do
			Result := get_window_from_port_external (port)
		end

end
