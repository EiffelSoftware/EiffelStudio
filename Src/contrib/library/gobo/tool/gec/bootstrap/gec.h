#define GE_USE_THREADS

/*
	description:

		"C declarations for the Gobo Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2005-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EIFFEL_H
#define GE_EIFFEL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Class name mapping as defined in the FreeELKS library. */
#ifndef EIF_INTEGER
#define EIF_INTEGER EIF_INTEGER_32
#endif
#ifndef EIF_CHARACTER
#define EIF_CHARACTER EIF_CHARACTER_8
#endif
#ifndef EIF_REAL
#define EIF_REAL EIF_REAL_32
#endif
#ifndef EIF_DOUBLE
#define EIF_DOUBLE EIF_REAL_64
#endif
#ifndef GE_ms
#define GE_ms(s,c) GE_ms8((s),(c))
#endif

#if defined(__USE_POSIX) || defined(__unix__) || defined(_POSIX_C_SOURCE)
#include <unistd.h>
#endif
#if !defined(WIN32) && \
	(defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER) || \
	defined(__MINGW32__))
#define WIN32 1
#endif
#ifdef WIN32
#define EIF_WINDOWS 1
#include <windows.h>
#endif

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>
#include <stddef.h>

/* Platform definition */
/* Unix definition */
#define EIF_IS_UNIX EIF_TRUE
/* Windows definition */
#ifdef EIF_WINDOWS
#define EIF_IS_WINDOWS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_WINDOWS EIF_FALSE
#endif
/* VMS definition */
#ifdef EIF_VMS
#define EIF_IS_VMS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VMS EIF_FALSE
#endif
/* MAC definition */
#ifdef EIF_MAC
#define EIF_IS_MAC EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_MAC EIF_FALSE
#endif
/* VxWorks definition */
#ifdef EIF_VXWORKS
#define EIF_IS_VXWORKS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VXWORKS EIF_FALSE
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _MSC_VER /* MSVC */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#include <inttypes.h>
#endif
#endif

/* Portable integer pointers */
#ifdef EIF_WINDOWS
#ifndef _INTPTR_T_DEFINED
#define _INTPTR_T_DEFINED
#ifdef _WIN64
typedef __int64 intptr_t;
#else
typedef int intptr_t;
#endif
#endif
#ifndef _UINTPTR_T_DEFINED
#define _UINTPTR_T_DEFINED
#ifdef _WIN64
  typedef unsigned __int64 uintptr_t;
#else
  typedef unsigned int uintptr_t;
#endif
#endif
#endif

/* C type for underlying integer type identifying object's dynamic type. */
typedef uint16_t EIF_TYPE_INDEX;

/*
 * Abstraction representing an Eiffel type.
 * It is made of a compiler type-id,
 * and of some annotations (attached/detachable/separate/variant/frozen).
 */
typedef struct eif_type {
	EIF_TYPE_INDEX id;
	EIF_TYPE_INDEX annotations;
} EIF_TYPE;

/*
 * Since EIF_TYPE and EIF_ENCODED_TYPE have the same size, the encoded version
 * is basically a memcpy version of the EIF_TYPE representation.
 * It is used to provide backward compatibility to most Eiffel and
 * C APIs manipulating types as an INTEGER.
 */
typedef int32_t EIF_ENCODED_TYPE;
typedef EIF_ENCODED_TYPE EIF_TYPE_ID;
#define EIF_NO_TYPE (EIF_TYPE_ID)(-1)

/* Basic Eiffel types */
typedef char EIF_BOOLEAN;
typedef unsigned char EIF_CHARACTER_8;
typedef uint32_t EIF_CHARACTER_32;
typedef int8_t EIF_INTEGER_8;
typedef int16_t EIF_INTEGER_16;
typedef int32_t EIF_INTEGER_32;
typedef int64_t EIF_INTEGER_64;
typedef uint8_t EIF_NATURAL_8;
typedef uint16_t EIF_NATURAL_16;
typedef uint32_t EIF_NATURAL_32;
typedef uint64_t EIF_NATURAL_64;
typedef void* EIF_POINTER;
typedef float EIF_REAL_32;
typedef double EIF_REAL_64;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags;} EIF_ANY;
typedef EIF_ANY* EIF_REFERENCE;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; EIF_REFERENCE area; EIF_INTEGER count;} EIF_STRING;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; uint32_t offset; EIF_INTEGER count; EIF_INTEGER capacity;} EIF_SPECIAL;

#ifdef EIF_WINDOWS
typedef wchar_t EIF_NATIVE_CHAR;
#else
typedef char EIF_NATIVE_CHAR;
#endif
typedef EIF_NATIVE_CHAR* EIF_FILENAME;

#define EIF_VOID ((EIF_REFERENCE)0)
#define EIF_FALSE ((EIF_BOOLEAN)'\0')
#define EIF_TRUE ((EIF_BOOLEAN)'\1')
#define EIF_TEST(x) ((x) ? EIF_TRUE : EIF_FALSE)

#define EIF_IS_WORKBENCH EIF_FALSE
#define EIF_POINTER_DISPLAY "lX"

/* For INTEGER and NATURAL manifest constants */
#define GE_int8(x) x
#define GE_nat8(x) x
#define GE_int16(x) x
#define GE_nat16(x) x
#define GE_int32(x) x##L
#define GE_nat32(x) x##U
#if defined (_MSC_VER) && (_MSC_VER < 1400) /* MSC older than v8 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#elif defined(__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else /* ISO C 99 */
#define GE_int64(x) x##LL
#define GE_nat64(x) x##ULL
#endif
#ifdef __LCC__
/* lcc-win32 reports a constant overflow for -21474836478. */
#define GE_min_int32 (-GE_int32(2147483647)-GE_int32(1))
#else
#define GE_min_int32 GE_int32(-2147483648)
#endif
#if defined(__LCC__) || defined(__GNUC__) || defined(__MINGW32__)
/* lcc-win32 reports a constant overflow for -9223372036854775808. */
/* gcc and mingw-win64 warn that integer constant is so large that it is unsigned. */
#define GE_min_int64 (-GE_int64(9223372036854775807)-GE_int64(1))
#else
#define GE_min_int64 GE_int64(-9223372036854775808)
#endif
#if defined(__LCC__) && !defined(_WIN64)
/* lcc-win32 does not consider 64 bit constants as constants in case statement. */
#define GE_case_int64(x) ((int32_t)(x))
#define GE_case_nat64(x) ((uint32_t)(x))
#else
#define GE_case_int64(x) (x)
#define GE_case_nat64(x) (x)
#endif

#ifdef _WIN64
#define GE_IS_64_BITS EIF_TRUE
#else
#define GE_IS_64_BITS EIF_TEST(sizeof(void*)==64)
#endif

/* Posix threads */
#if !defined(EIF_WINDOWS)
#define GE_USE_POSIX_THREADS
#endif

#ifdef _MSC_VER /* MSVC */
/* MSVC does not support ISO C 99's 'snprintf' from stdio.h */
#define snprintf(a,b,c,d) sprintf(a,c,d)
#endif

/*
 * Gobo compiler version.
 * Starts with 6080 (looks like GOBO) followed by 5 digits.
 */
#define GE_compiler_version() 608000001

/*
	Interoperability with ISE.
*/
#define RTI64C(x) GE_int64(x)
#define EIF_OBJECT EIF_REFERENCE
#define EIF_OBJ EIF_OBJECT
#define OVERHEAD sizeof(EIF_ANY)
/* Function pointer call to make sure all arguments are correctly pushed onto stack. */
/* FUNCTION_CAST is for standard C calls. */
/* FUNCTION_CAST_TYPE is for non-standard C calls. */
#define FUNCTION_CAST(r_type,arg_types) (r_type (*) arg_types)
#define FUNCTION_CAST_TYPE(r_type,call_type,arg_types) (r_type (call_type *) arg_types)
#define SIGBLOCK
#define SIGRESUME
#define rt_public				/* default C scope */
#define rt_private static		/* static outside a block means private */
#define rt_shared				/* data shared between modules, but not public */
typedef intptr_t rt_int_ptr;
typedef uintptr_t rt_uint_ptr;
#define RTMS(s) GE_str8(s)
#define RTMS_EX(s,c) GE_ms8((s),(c))

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C types used to implement class THREAD and related threading facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_THREAD_TYPES_H
#define GE_THREAD_TYPES_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef GE_USE_THREADS

#define EIF_THREADS
#ifdef GE_USE_POSIX_THREADS
#define EIF_POSIX_THREADS
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef GE_USE_POSIX_THREADS
#include <pthread.h>
#include <semaphore.h>
#elif defined EIF_WINDOWS
#include <windows.h>
#include <process.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef GE_USE_POSIX_THREADS

#define EIF_THR_TYPE            pthread_t
#define EIF_CS_TYPE				pthread_mutex_t
#define EIF_MUTEX_TYPE          pthread_mutex_t
#define EIF_COND_TYPE			pthread_cond_t
#define EIF_SEM_TYPE			sem_t
#define EIF_RWL_TYPE			pthread_rwlock_t

#elif defined EIF_WINDOWS

#define EIF_THR_TYPE            HANDLE
#define EIF_CS_TYPE				CRITICAL_SECTION
#define EIF_MUTEX_TYPE          CRITICAL_SECTION
#define EIF_SEM_TYPE            HANDLE

typedef struct {
		/* Semaphore used to queue up threads waiting for the condition to become signaled. */
	EIF_SEM_TYPE* semaphore;
		/* Serialize access to fields of Current. */
	EIF_CS_TYPE* csection;
		/* Number of waiters. */
	unsigned long num_waiting;
		/* Number of already awoken. */
	unsigned long num_wake;
		/* Number of time we signaled/broadcasted for improving fairness.
		 * This ensures one thread won't steal wakeups from other threads in queue. */
	unsigned long generation;
} EIF_COND_TYPE;

typedef struct {
	EIF_MUTEX_TYPE* m; /* Internal monitor lock. */
	int rwlock; /* >0 = # readers, <0 = writer, 0 = none */
	EIF_COND_TYPE* readers_ok; /* Start waiting readers. */
	unsigned int waiting_writers; /* Number of waiting writers. */
	EIF_COND_TYPE* writers_ok; /* Start a waiting writer. */
} EIF_RWL_TYPE;

#endif

typedef struct {
	unsigned int priority;
	unsigned int stack_size;
} EIF_THR_ATTR_TYPE;

/* Struct for thread context. */
typedef struct GE_thread_context_struct GE_thread_context;
struct GE_thread_context_struct {
	EIF_THR_TYPE thread_id; /* Thread identifier for associated thread. */
	EIF_REFERENCE current; /* Eiffel root object. */
	void (*routine)(EIF_REFERENCE); /* Eiffel routine. */
	void (*set_terminated)(EIF_REFERENCE,EIF_BOOLEAN); /* Eiffel routine to set {THREAD}.terminated. */
	unsigned int initial_priority; /* Initial priority. */
	EIF_THR_TYPE last_thread_id; /* Last thread created from current thread. */
	volatile int n_children; /* Number of direct thread children. */
	EIF_MUTEX_TYPE* children_mutex; /* Mutex to wait for thread children. */
	EIF_COND_TYPE* children_cond; /* Condition variable to wait for thread children. */
	GE_thread_context* parent_context;	/* Context of parent thread, NULL if main thread. */
	int thread_exiting; /* Has current thread already called GE_thread_exit? */
	volatile int is_alive; /* Is Current thread still alive? */
};

#ifdef __cplusplus
}
#endif

#endif
#endif

/*
	description:

		"C functions used to implement once features"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_ONCE_H
#define GE_ONCE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Struct to keep track of the call status
 * and results of once features.
 */
typedef struct {
	EIF_BOOLEAN* boolean_value;
	EIF_REFERENCE* boolean_exception;
	unsigned char* boolean_status;
	unsigned int boolean_count;
	EIF_CHARACTER_8* character_8_value;
	EIF_REFERENCE* character_8_exception;
	unsigned char* character_8_status;
	unsigned int character_8_count;
	EIF_CHARACTER_32* character_32_value;
	EIF_REFERENCE* character_32_exception;
	unsigned char* character_32_status;
	unsigned int character_32_count;
	EIF_INTEGER_8* integer_8_value;
	EIF_REFERENCE* integer_8_exception;
	unsigned char* integer_8_status;
	unsigned int integer_8_count;
	EIF_INTEGER_16* integer_16_value;
	EIF_REFERENCE* integer_16_exception;
	unsigned char* integer_16_status;
	unsigned int integer_16_count;
	EIF_INTEGER_32* integer_32_value;
	EIF_REFERENCE* integer_32_exception;
	unsigned char* integer_32_status;
	unsigned int integer_32_count;
	EIF_INTEGER_64* integer_64_value;
	EIF_REFERENCE* integer_64_exception;
	unsigned char* integer_64_status;
	unsigned int integer_64_count;
	EIF_NATURAL_8* natural_8_value;
	EIF_REFERENCE* natural_8_exception;
	unsigned char* natural_8_status;
	unsigned int natural_8_count;
	EIF_NATURAL_16* natural_16_value;
	EIF_REFERENCE* natural_16_exception;
	unsigned char* natural_16_status;
	unsigned int natural_16_count;
	EIF_NATURAL_32* natural_32_value;
	EIF_REFERENCE* natural_32_exception;
	unsigned char* natural_32_status;
	unsigned int natural_32_count;
	EIF_NATURAL_64* natural_64_value;
	EIF_REFERENCE* natural_64_exception;
	unsigned char* natural_64_status;
	unsigned int natural_64_count;
	EIF_POINTER* pointer_value;
	EIF_REFERENCE* pointer_exception;
	unsigned char* pointer_status;
	unsigned int pointer_count;
	EIF_REAL_32* real_32_value;
	EIF_REFERENCE* real_32_exception;
	unsigned char* real_32_status;
	unsigned int real_32_count;
	EIF_REAL_64* real_64_value;
	EIF_REFERENCE* real_64_exception;
	unsigned char* real_64_status;
	unsigned int real_64_count;
	EIF_REFERENCE* reference_value;
	EIF_REFERENCE* reference_exception;
	unsigned char* reference_status;
	unsigned int reference_count;
	EIF_REFERENCE* procedure_exception;
	unsigned char* procedure_status;
	unsigned int procedure_count;
} GE_onces;

/*
 * Variable to keep track of the call status
 * and results of once-per-process features.
 */
extern GE_onces* GE_process_onces;

/*
 * Initialize `GE_process_onces'.
 */
extern void GE_init_onces(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Create a new 'GE_onces' struct which can deal with the
 * numbers of once features passed as argument.
 */
extern GE_onces* GE_new_onces(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Free memory allocated by `a_onces'.
 */
extern void GE_free_onces(GE_onces* a_onces);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class EXCEPTION"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EXCEPTION_H
#define GE_EXCEPTION_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_ONCE_H
#include "ge_once.h"
#endif
#ifdef GE_USE_THREADS
#ifndef GE_THREAD_TYPES_H
#include "ge_thread_types.h"
#endif
#endif

#include <setjmp.h>

/*
 * On Linux glibc systems, we need to use sig* versions of jmp_buf,
 * setjmp and longjmp to preserve the signal handling context.
 * One way to detect this is if _SIGSET_H_types has
 * been defined in /usr/include/setjmp.h.
 * NOTE: ANSI only recognizes the non-sig versions.
 */
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#define GE_jmp_buf sigjmp_buf
#define GE_setjmp(x) sigsetjmp((x),1)
#define GE_longjmp(x,y) siglongjmp((x),(y))
#else
#define GE_jmp_buf jmp_buf
#define GE_setjmp(x) setjmp((x))
#define GE_longjmp(x,y) longjmp((x),(y))
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define GE_EX_VOID		1			/* Feature applied to void reference */
#define GE_EX_MEM		2			/* No more memory */
#define GE_EX_PRE		3			/* Pre-condition violated */
#define GE_EX_POST		4			/* Post-condition violated */
#define GE_EX_FLOAT		5			/* Floating point exception (signal SIGFPE) */
#define GE_EX_CINV		6			/* Class invariant violated */
#define GE_EX_CHECK		7			/* Check instruction violated */
#define GE_EX_FAIL		8			/* Routine failure */
#define GE_EX_WHEN		9			/* Unmatched inspect value */
#define GE_EX_VAR		10			/* Non-decreasing loop variant */
#define GE_EX_LINV		11			/* Loop invariant violated */
#define GE_EX_SIG		12			/* Operating system signal */
#define GE_EX_BYE		13			/* Eiffel run-time panic */
#define GE_EX_RESC		14			/* Exception in rescue clause */
#define GE_EX_OMEM		15			/* Out of memory (cannot be ignored) */
#define GE_EX_RES		16			/* Resumption failed (retry did not succeed) */
#define GE_EX_CDEF		17			/* Create on deferred */
#define GE_EX_EXT		18			/* External event */
#define GE_EX_VEXP		19			/* Void assigned to expanded */
#define GE_EX_HDLR		20			/* Exception in signal handler */
#define GE_EX_IO		21			/* I/O error */
#define GE_EX_SYS		22			/* Operating system error */
#define GE_EX_RETR		23			/* Retrieval error */
#define GE_EX_PROG		24			/* Developer exception */
#define GE_EX_FATAL		25			/* Eiffel run-time fatal error */
#define GE_EX_DOL		26			/* $ applied to melted feature */
#define GE_EX_ISE_IO	27			/* I/O error raised by the ISE Eiffel runtime */
#define GE_EX_COM		28			/* COM error raised by EiffelCOM runtime */
#define GE_EX_RT_CHECK	29			/* Runtime check error such as out-of-bound array access */
#define GE_EX_OLD		30			/* Old violation */
#define GE_EX_SEL		31			/* Serialization failure */
#define GE_EX_DIRTY		32			/* SCOOP processor dirty exception. */
#define GE_EX_NEX		32			/* Number of internal exceptions */

/*
 * String buffer used to build the exception trace.
 */
typedef struct GE_exception_trace_buffer_struct GE_exception_trace_buffer;
struct GE_exception_trace_buffer_struct {
	char* area;
	uint32_t count;
	uint32_t capacity;
};

/*
 * Information about the feature being executed.
 */
typedef struct GE_call_struct GE_call;
struct GE_call_struct {
#ifdef GE_USE_CURRENT_IN_EXCEPTION_TRACE
	void* object; /* Current object */
#endif
	const char* class_name;
	const char* feature_name;
	GE_call* caller; /* previous feature in the call chain */
};

/*
 * Context of features containing a rescue clause.
 */
typedef struct GE_rescue_struct GE_rescue;
struct GE_rescue_struct {
	GE_jmp_buf jb;
	GE_rescue* previous; /* previous context in the call chain */
};

/*
 * Information about the execution context.
 * One such struct per thread.
 */
typedef struct GE_context_struct GE_context;
struct GE_context_struct {
	GE_call* call; /* Call stack */
	uint32_t in_assertion; /* Is an assertion evaluated? */
	GE_rescue* last_rescue; /* Context of last feature entered containing a rescue clause */
	uint32_t in_rescue; /* Number of rescue clauses currently being executed */
	EIF_REFERENCE exception_manager; /* Exception manager */
	char raising_exception; /* Is an exception currently being raised? */
	char exception_trace_enabled; /* Should exception trace be displayed? */
	long exception_code; /* Code of the exception currently being raised, 0 otherwise */
	const char* exception_tag; /* Tag of the exception currently being raised, NULL otherwise */
	GE_exception_trace_buffer exception_trace_buffer; /* String buffer used to build the exception trace */
	GE_exception_trace_buffer last_exception_trace; /* Last non-routine-failure exception trace */
	int pre_ecma_mapping_status; /* Do we map old names to new name? (i.e. STRING to STRING_8, INTEGER to INTEGER_32, ...). */
#ifdef GE_USE_THREADS
	GE_thread_context* thread; /* Thread context */
	GE_onces* process_onces; /* Cache for status and results of onces-per-process */
	GE_onces* thread_onces; /* Status and results of onces-per-thread */
	void* wel_per_thread_data; /* WEL private data */
#endif
};

/*
 * Default initialization for `GE_context'.
 */
extern GE_context GE_default_context;

/*
 * Execution context of main thread.
 */
extern GE_context* GE_main_context;

/*
 * Execution context of current thread.
 */
extern GE_context* GE_current_context(void);

/*
 * Initialization of exception handling.
 */
extern void GE_init_exception(GE_context* context);

/*
 * Free memory allocated in `a_context' for exception handling.
 */
extern void GE_free_exception(GE_context* a_context);

/*
 * Pointer to function to create a new exception manager object
 * (of type ISE_EXCEPTION_MANAGER).
 */
extern EIF_REFERENCE (*GE_new_exception_manager)(EIF_BOOLEAN);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.init_exception_manager.
 */
extern void (*GE_init_exception_manager)(GE_context*, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.last_exception.
 */
extern EIF_REFERENCE (*GE_last_exception)(GE_context*, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.once_raise.
 */
extern void (*GE_once_raise)(GE_context*, EIF_REFERENCE, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.set_exception_data.
 */
extern void (*GE_set_exception_data)(GE_context*, EIF_REFERENCE, EIF_INTEGER_32, EIF_BOOLEAN, EIF_INTEGER_32, EIF_INTEGER_32, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_INTEGER_32, EIF_BOOLEAN);

/*
 * Exception tag associated with `a_code'.
 */
extern char* GE_exception_tag(long a_code);

/*
 * Raise an exception with code `a_code'.
 */
extern void GE_raise(long a_code);

/*
 * Raise an exception with code `a_code' and message `msg'.
 */
extern void GE_raise_with_message(long a_code, const char* msg);

/*
 * Raise an exception from EXCEPTION_MANAGER.
 */
extern void GE_developer_raise(long a_code, char* a_meaning, char* a_message);

/*
 * Raise exception which was raised the first time a once routine
 * was executed when executing it again.
 */
extern void GE_raise_once_exception(GE_context* a_context, EIF_REFERENCE a_exception);

/*
 * Exception, if any, which was last raised in `a_context'.
 */
extern EIF_REFERENCE GE_last_exception_raised(GE_context* a_context);

/*
 * Jump to execute the rescue of the last routine with a rescue
 * in the call stack.
 */
extern void GE_jump_to_last_rescue(GE_context* a_context);

/*
 * Set `in_assertion' to 'not b'.
 * Return the opposite of previous value.
 */
extern EIF_BOOLEAN GE_check_assert(EIF_BOOLEAN b);

/*
 * Check whether the type id of `obj' is not in `type_ids'.
 * If it is, then raise a CAT-call exception. Don't do anything if `obj' is Void.
 * `nb' is the number of ids in `type_ids' and is expected to be >0.
 * `type_ids' is sorted in increasing order.
 * Return `obj'.
 */
#define GE_catcall(obj,type_ids,nb) GE_check_catcall((obj),(type_ids),(nb))
extern EIF_REFERENCE GE_check_catcall(EIF_REFERENCE obj, EIF_TYPE_INDEX type_ids[], int nb);

/*
 * Check whether `obj' is Void.
 * If it is, then raise a call-on-void-target exception.
 * Return `obj'.
 */
#define GE_void(obj) (!(obj)?GE_check_void(obj):(obj))
extern EIF_REFERENCE GE_check_void(EIF_REFERENCE obj);

/*
 * Check whether `ptr' is a null pointer.
 * If it is, then raise a no-more-memory exception.
 * Return `ptr'.
 */
#define GE_null(ptr) GE_check_null(ptr)
extern void* GE_check_null(void* ptr);

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void GE_set_windows_exception_filter(void);
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class THREAD and related threading facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_THREAD_H
#define GE_THREAD_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef GE_USE_THREADS

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_THREAD_TYPES_H
#include "ge_thread_types.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef GE_USE_POSIX_THREADS
#include <unistd.h>
#endif

#ifdef GE_USE_POSIX_THREADS
#	define EIF_TSD_VAL_TYPE        void*
#	define EIF_TSD_TYPE            pthread_key_t
#	define EIF_TSD_CREATE(key,msg) \
		if (pthread_key_create(&(key),NULL)) \
	        GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_SET(key,val,msg) \
		if (pthread_setspecific((key), (EIF_TSD_VAL_TYPE)(val))) \
			GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_GET0(val_type,key,val) (val = pthread_getspecific(key))
#	define EIF_TSD_GET(val_type,key,val,msg) \
		if (EIF_TSD_GET0(val_type,key,val) == (void*) 0) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_DESTROY(key,msg) if (pthread_key_delete(key)) GE_raise_with_message(GE_EX_EXT, msg)
#elif defined EIF_WINDOWS
#	define EIF_TSD_VAL_TYPE        LPVOID
#	define EIF_TSD_TYPE            DWORD
#	define EIF_TSD_CREATE(key,msg) \
		if ((key=TlsAlloc())==TLS_OUT_OF_INDEXES) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_SET(key,val,msg) \
		if (!TlsSetValue((key),(EIF_TSD_VAL_TYPE)(val))) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_GET0(val_type,key,val) \
		val=(val_type) TlsGetValue(key)
#	define EIF_TSD_GET(val_type,key,val,msg) \
		EIF_TSD_GET0(val_type,key,val); \
		if (GetLastError() != NO_ERROR) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_DESTROY(key,msg) \
		if (!TlsFree(key)) GE_raise_with_message(GE_EX_EXT, msg)
#endif

/* Thread priority levels. */
#define EIF_MIN_THR_PRIORITY			0L
#define EIF_BELOW_NORMAL_THR_PRIORITY	100L
#define EIF_DEFAULT_THR_PRIORITY		127L
#define EIF_ABOVE_NORMAL_THR_PRIORITY	154L
#define EIF_MAX_THR_PRIORITY			255L

/*
 * Mutexes used to protect the calls to once-per-process features.
 */
typedef struct {
	EIF_POINTER* boolean_mutex;
	EIF_POINTER* character_8_mutex;
	EIF_POINTER* character_32_mutex;
	EIF_POINTER* integer_8_mutex;
	EIF_POINTER* integer_16_mutex;
	EIF_POINTER* integer_32_mutex;
	EIF_POINTER* integer_64_mutex;
	EIF_POINTER* natural_8_mutex;
	EIF_POINTER* natural_16_mutex;
	EIF_POINTER* natural_32_mutex;
	EIF_POINTER* natural_64_mutex;
	EIF_POINTER* pointer_mutex;
	EIF_POINTER* real_32_mutex;
	EIF_POINTER* real_64_mutex;
	EIF_POINTER* reference_mutex;
	EIF_POINTER* procedure_mutex;
} GE_once_mutexes;

/*
 * Mutexes used to protect the calls to once-per-process features.
 */
extern GE_once_mutexes* GE_process_once_mutexes;

/*
 * Create a new 'GE_once_mutexes' struct which can deal with the
 * numbers of once features passed as argument.
 */
extern GE_once_mutexes* GE_new_once_mutexes(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Keep track of the numbers of once-per-thread features.
 */
extern void GE_thread_onces_set_counts(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Initialize data to handle threads.
 * To be called at the beginning of the main function
 * on the main thread.
 */
extern void GE_init_thread(GE_context* a_context);

/*
 * Create a new thread with attributes `attr' and execute
 * Eiffel routine `routine' on object `current'.
 */
extern void GE_thread_create_with_attr(EIF_REFERENCE current, void (*routine)(EIF_REFERENCE), void (*set_terminated)(EIF_REFERENCE,EIF_BOOLEAN), EIF_THR_ATTR_TYPE* attr);

/*
 * Execution context of current thread.
 */
extern GE_context* GE_thread_current_context(void);

/*
 * Thead ID of current thread.
 */
extern EIF_POINTER GE_thread_id(void);

/*
 * Thread ID of last thread created from current thread.
 */
extern EIF_POINTER GE_last_thread_created(void);

#ifdef EIF_WINDOWS
/*
 * Support for Windows GUI that requires that all GUI operations are performed in the same thread.
 * Allocate new structure of the given size `a_size', assign it to `wel_per_thread_data'.
 * Return newly allocated memory block. It will be freed automatically on thread termination.
 */
extern void* GE_thread_create_wel_per_thread_data(size_t a_size);
#endif

/*
 * Waits until a child thread sets `terminated' from `obj' to True,
 * which means it is terminated. The calling thread must be the
 * direct parent of the thread, or the function might loop indefinitely.
 */
extern void GE_thread_wait(EIF_REFERENCE obj, EIF_BOOLEAN (*get_terminated)(EIF_REFERENCE));

/*
 * Waits until a child thread sets `terminated' from `obj' to True,
 * which means it is terminated, or reaching `a_timeout_ms'.
 * The calling thread must be the direct parent of the thread,
 * or the function might loop indefinitely.
 */
extern EIF_BOOLEAN GE_thread_wait_with_timeout(EIF_REFERENCE obj, EIF_BOOLEAN (*get_terminated)(EIF_REFERENCE), EIF_NATURAL_64 a_timeout_ms);

/*
 * Yields execution to other threads.
 */
extern void GE_thread_yield(void);

/*
 * The calling thread waits for all other children threads to terminate.
 */
extern void GE_thread_join_all(void);

/*
 * Function called to terminate a thread launched by Eiffel with `GE_thread_create_with_attr'.
 * This function must be called from the thread itself (not the parent).
 */
extern void GE_thread_exit(void);

/*
 * Default thread priority level.
 */
extern EIF_INTEGER GE_thread_default_priority(void);

/*
 * Minimum thread priority level.
 */
extern EIF_INTEGER GE_thread_min_priority(void);

/*
 * Maximum thread priority level.
 */
extern EIF_INTEGER GE_thread_max_priority(void);

/*
 * Create a new mutex.
 */
extern EIF_POINTER GE_mutex_create(void);

/*
 * Lock mutex.
 */
extern void GE_mutex_lock(EIF_POINTER a_mutex);

/*
 * Try to lock mutex. Return True on success.
 */
extern EIF_BOOLEAN GE_mutex_try_lock(EIF_POINTER a_mutex);

/*
 * Unlock mutex.
 */
extern void GE_mutex_unlock(EIF_POINTER a_mutex);

/*
 * Destroy and free all resources used by mutex.
 */
extern void GE_mutex_destroy(EIF_POINTER a_mutex);

/*
 * Create a new semaphore allowing `a_count' threads
 * to go into a critical section.
 */
extern EIF_POINTER GE_semaphore_create(EIF_INTEGER a_count);

/*
 * Decrement semaphore count, waiting if necessary
 * until that becomes possible.
 */
extern void GE_semaphore_wait(EIF_POINTER a_semaphore);

/*
 * Has client been successful in decrementing semaphore
 * count without waiting?
 */
extern EIF_BOOLEAN GE_semaphore_try_wait(EIF_POINTER a_semaphore);

/*
 * Increment semaphore count.
 */
extern void GE_semaphore_post(EIF_POINTER a_semaphore);

/*
 * Destroy and free all resources used by semaphore.
 */
extern void GE_semaphore_destroy(EIF_POINTER a_semaphore);

/*
 * Create a new condition variable.
 */
extern EIF_POINTER GE_condition_variable_create(void);

/*
 * Unblock all threads blocked on condition variable.
 */
extern void GE_condition_variable_broadcast(EIF_POINTER a_condition_variable);

/*
 * Unblock one thread blocked on condition variable.
 */
extern void GE_condition_variable_signal(EIF_POINTER a_condition_variable);

/*
 * Block calling thread on condition variable.
 */
extern void GE_condition_variable_wait(EIF_POINTER a_condition_variable, EIF_POINTER a_mutex);

/*
 * Block calling thread on condition variable for at most `a_timeout' milliseconds.
 * Return 1 is we got the condition variable on time, otherwise return 0.
 */
extern EIF_INTEGER GE_condition_variable_wait_with_timeout(EIF_POINTER a_condition_variable, EIF_POINTER a_mutex, EIF_INTEGER a_timeout);

/*
 * Destroy and free all resources used by condition variable.
 */
extern void GE_condition_variable_destroy(EIF_POINTER a_condition_variable);

/*
 * Create a new read-write lock.
 */
extern EIF_POINTER GE_read_write_lock_create(void);

/*
 * Acquire a read lock. Multiple readers can go if there are no writer.
 */
extern void GE_read_write_lock_read_lock(EIF_POINTER a_read_write_lock);

/*
 * Acquire a write lock. Only a single write can proceed.
 */
extern void GE_read_write_lock_write_lock(EIF_POINTER a_read_write_lock);

/*
 * Unlock a read or write lock.
 */
extern void GE_read_write_lock_unlock(EIF_POINTER a_read_write_lock);

/*
 * Destroy and free all resources used by read-write lock.
 */
extern void GE_read_write_lock_destroy(EIF_POINTER a_read_write_lock);

#ifdef __cplusplus
}
#endif

#endif
#endif

/*
	description:

		"C functions used to manipulate native strings"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2013-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_NATIVE_STRING_H
#define GE_NATIVE_STRING_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <string.h>
#ifdef EIF_WINDOWS
#ifdef __LCC__
/* With lcc-win32, stat.h should be included before wchar.h. */
#include <sys/stat.h>
#endif
#include <wchar.h>
#else
#include <sys/types.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

/* Macro used to manipulate native strings, i.e: (wchar_t*) */
#define GE_nstrlen wcslen /* size of string */
#define GE_nstrncpy wcsncpy /* Copy n characters of one string to another */
#define GE_nstrcpy wcscpy /* Copy one string to another */
#define GE_nstrncat wcsncat /* Append characters of a string */
#define GE_nstrcat wcscat /* Append a string */
#define GE_nstrstr wcsstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) L##quote /* Manifest Native string declaration */
#define GE_nstr_fopen _wfopen /* Open file using native string name */
#define GE_nstrcmp wcscmp /* Compare two strings. */
#define GE_nstrdup _wcsdup /* Duplicate string. */
#define GE_nstr_cat_ascii(dest, src) {							\
		int i;													\
		size_t dest_len, src_len;								\
		dest_len = rt_nstrlen (dest);							\
		src_len = strlen (src);									\
		for (i = 0; i < src_len; i++) {							\
			dest[dest_len + i] = (EIF_NATIVE_CHAR)src[i];		\
		}														\
		dest[dest_len + src_len] = (EIF_NATIVE_CHAR)0;			\
	}

#else /* not EIF_WINDOWS */

/* Macro used to manipulate native strings, i.e: (char*) */
#define GE_nstrlen strlen /* size of string */
#define GE_nstrncpy strncpy /* Copy n characters of one string to another */
#define GE_nstrcpy strcpy /* Copy one string to another */
#define GE_nstrncat strncat /* Append characters of a string */
#define GE_nstrcat strcat /* Append a string */
#define GE_nstrstr strstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) quote /* Manifest Native string declaration */
#define GE_nstr_fopen fopen /* Open file using native string name */
#define GE_nstrcmp strcmp /* Compare two strings. */
#define GE_nstrdup strdup /* Duplicate string. */
#define GE_nstr_cat_ascii strcat

#endif


#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class ARGUMENTS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_ARGUMENTS_H
#define GE_ARGUMENTS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_argc;
extern EIF_NATIVE_CHAR** GE_argv;

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement type information"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_TYPES_H
#define GE_TYPES_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Type annotations.
 * When a type has no annotation, it means a detachable, non-separate, variant type.
 * In all other cases, there will be an annotation.
 */
#define ANNOTATION_MASK			0x007F	/* All possible annotations. */
#define ATTACHED_FLAG			0x0001
#define DETACHABLE_FLAG			0x0002	/* Only present when overriding an attached type. */
#define SEPARATE_FLAG			0x0004
#define VARIANT_FLAG			0x0008	/* Only present when overriding a frozen/poly type. */
#define UNUSABLE_FLAG			0x0010	/* Reserved for backward compatibility for storables. */
#define FROZEN_FLAG				0x0020
#define POLY_FLAG				0x0040

/*
 * Type flags.
 */
#define GE_TYPE_FLAG_SPECIAL		0x0010
#define GE_TYPE_FLAG_TUPLE			0x0020
#define GE_TYPE_FLAG_EXPANDED		0x0040
#define GE_TYPE_FLAG_DEFERRED		0x0080
#define GE_TYPE_FLAG_NONE			0x0100
#define GE_TYPE_FLAG_BASIC_MASK		0x000F /* One of "BOOLEAN", "CHARACTER_8", "CHARACTER_32", "INTEGER_8", "INTEGER_16", "INTEGER_32", "INTEGER_64", "NATURAL_8", "NATURAL_16", "NATURAL_32", "NATURAL_64", "POINTER", "REAL_32", "REAL_64" */
#define GE_TYPE_FLAG_BOOLEAN		0x0001
#define GE_TYPE_FLAG_CHARACTER_8	0x0002
#define GE_TYPE_FLAG_CHARACTER_32	0x0003
#define GE_TYPE_FLAG_INTEGER_8		0x0004
#define GE_TYPE_FLAG_INTEGER_16		0x0005
#define GE_TYPE_FLAG_INTEGER_32		0x0006
#define GE_TYPE_FLAG_INTEGER_64		0x0007
#define GE_TYPE_FLAG_NATURAL_8		0x0008
#define GE_TYPE_FLAG_NATURAL_16		0x0009
#define GE_TYPE_FLAG_NATURAL_32		0x000A
#define GE_TYPE_FLAG_NATURAL_64		0x000B
#define GE_TYPE_FLAG_POINTER		0x000C
#define GE_TYPE_FLAG_REAL_32		0x000D
#define GE_TYPE_FLAG_REAL_64		0x000E

/*
 * Convention for attribute types.
 * The values are in sync with REFLECTOR_CONSTANTS.
 */
#define GE_TYPE_KIND_INVALID		-1
#define GE_TYPE_KIND_POINTER		0
#define GE_TYPE_KIND_REFERENCE		1
#define GE_TYPE_KIND_CHARACTER_8	2
#define GE_TYPE_KIND_BOOLEAN		3
#define GE_TYPE_KIND_INTEGER_32		4
#define GE_TYPE_KIND_REAL_32		5
#define GE_TYPE_KIND_REAL_64		6
#define GE_TYPE_KIND_EXPANDED		7
#define GE_TYPE_KIND_INTEGER_8		9
#define GE_TYPE_KIND_INTEGER_16		10
#define GE_TYPE_KIND_INTEGER_64 	11
#define GE_TYPE_KIND_CHARACTER_32	12
#define GE_TYPE_KIND_NATURAL_8		13
#define GE_TYPE_KIND_NATURAL_16		14
#define GE_TYPE_KIND_NATURAL_32 	15
#define GE_TYPE_KIND_NATURAL_64 	16

/*
 * Object flags.
 */
#define GE_OBJECT_FLAG_MARKED		0x0001

/*
 * Ancestor relationship between two types X and Y.
 */
#ifdef GE_USE_ANCESTORS
typedef struct {
	EIF_TYPE_INDEX type_id; /* Type id of Y */
	EIF_BOOLEAN conforms; /* Does X conform to Y? */
	void (**qualified_calls)(); /* Function pointers, indexed by call id, when the static type of the target is Y and the dynamic type is X */
} GE_ancestor;
#endif

/*
 * Attribute.
 */
#ifdef GE_USE_ATTRIBUTES
typedef struct {
#ifdef GE_USE_ATTRIBUTE_NAME
	const char* name; /* Attribute name */
#endif
#ifdef GE_USE_ATTRIBUTE_TYPE_ID
	EIF_ENCODED_TYPE type_id; /* Static type id */
#endif
#ifdef GE_USE_ATTRIBUTE_OFFSET
	uint32_t offset; /* Address offset in object */
#endif
} GE_attribute;
#endif

/*
 * Type information.
 */
typedef struct {
	EIF_TYPE_INDEX type_id;
	uint16_t flags;
#ifdef GE_USE_TYPE_GENERATOR
	const char* generator; /* Generator class name */
#endif
#ifdef GE_USE_TYPE_NAME
	const char* name; /* Full type name */
#endif
#ifdef GE_USE_TYPE_GENERIC_PARAMETERS
	EIF_ENCODED_TYPE* generic_parameters;
	uint32_t generic_parameter_count;
#endif
#ifdef GE_USE_ANCESTORS
	GE_ancestor** ancestors;
	uint32_t ancestor_count;
#endif
#ifdef GE_USE_ATTRIBUTES
	GE_attribute** attributes;
	uint32_t attribute_count;
#endif
#ifdef GE_USE_TYPE_OBJECT_SIZE
	uint64_t object_size;
#endif
	EIF_REFERENCE (*new_instance)();
	void (*dispose)(GE_context*, EIF_REFERENCE);
} GE_type_info;

typedef struct {
	EIF_TYPE_INDEX id; /* Type id of the "TYPE [X]" object */
	EIF_INTEGER type_id; /* Type id of the type "X" */
	EIF_BOOLEAN is_special;
	void (*dispose)(GE_context*, EIF_REFERENCE);
	EIF_REFERENCE a1; /* internal_name */
	EIF_REFERENCE a2; /* internal_name_32 */
} EIF_TYPE_OBJ;

/*
 * Types indexed by type id.
 * Generated by the compiler.
 */
extern EIF_TYPE_OBJ GE_types[][2];
extern GE_type_info GE_type_infos[];

/*
 * Number of type infos in `GE_type_infos'.
 * Do not take into account the fake item at index 0.
 */
extern int GE_type_info_count;

/*
 * Encode a EIF_TYPE into a EIF_ENCODED_TYPE.
 * The lower part of EIF_ENCODED_TYPE contains the .id field,
 * and the upper part the .annotations.
 */
extern EIF_ENCODED_TYPE GE_encoded_type(EIF_TYPE a_type);

/*
 * Decode a EIF_ENCODED_TYPE into a EIF_TYPE.
 * The lower part of EIF_ENCODED_TYPE contains the .id field,
 * and the upper part the .annotations.
 */
extern EIF_TYPE GE_decoded_type(EIF_ENCODED_TYPE a_type);

/*
 * Type with `a_id' and `a_annotations'.
 */
extern EIF_TYPE GE_new_type(EIF_TYPE_INDEX a_id, EIF_TYPE_INDEX a_annotations);

/*
 * Type of object `obj'.
 */
#define GE_object_type(obj)	GE_new_type(((EIF_REFERENCE)(obj))->id, 0x0)
#define GE_object_encoded_type(obj) GE_encoded_type(GE_object_type(obj))

/*
 * Attachment status of `a_type'.
 */
#define GE_is_attached_type(a_type) EIF_TEST(((a_type).annotations & ATTACHED_FLAG) || GE_is_expanded_type_index((a_type).id))
#define GE_is_attached_encoded_type(a_type) GE_is_attached_type(GE_decoded_type(a_type))

/*
 * Associated detachable type of `a_type' if any,
 * otherwise `a_type'.
 */
extern EIF_TYPE GE_non_attached_type(EIF_TYPE a_type);
#define GE_non_attached_encoded_type(a_type) GE_encoded_type(GE_non_attached_type(GE_decoded_type(a_type)))

/*
 * Associated attached type of `a_type' if any,
 * otherwise `a_type'.
 */
extern EIF_TYPE GE_attached_type(EIF_TYPE a_type);
#define GE_attached_encoded_type(t) GE_encoded_type(GE_attached_type(GE_decoded_type(t)))

/*
 * Is `a_type' a SPECIAL type?
 */
#define GE_is_special_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_SPECIAL)
#define GE_is_special_encoded_type(a_type) GE_is_special_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_object(obj) GE_is_special_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of user-defined expanded type?
 */
extern EIF_BOOLEAN GE_is_special_of_expanded_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_expanded_encoded_type(a_type) GE_is_special_of_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_expanded_object(obj) GE_is_special_of_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of reference type?
 */
extern EIF_BOOLEAN GE_is_special_of_reference_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_reference_encoded_type(a_type) GE_is_special_of_reference_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_reference_object(obj) GE_is_special_of_reference_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of reference type or basic expanded type?
 * (Note that user-defined expanded types are excluded.)
 */
extern EIF_BOOLEAN GE_is_special_of_reference_or_basic_expanded_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_reference_or_basic_expanded_encoded_type(a_type) GE_is_special_of_reference_or_basic_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_reference_or_basic_expanded_object(obj) GE_is_special_of_reference_or_basic_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a TUPLE type?
 */
#define GE_is_tuple_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_TUPLE)
#define GE_is_tuple_encoded_type(a_type) GE_is_tuple_type_index(GE_decoded_type(a_type).id)
#define GE_is_tuple_object(obj) GE_is_tuple_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' an expanded type?
 */
#define GE_is_expanded_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_EXPANDED)
#define GE_is_expanded_encoded_type(a_type) GE_is_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_expanded_object(obj) GE_is_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a type whose base class is deferred?
 */
#define GE_is_deferred_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_DEFERRED)
#define GE_is_deferred_encoded_type(a_type) GE_is_deferred_type_index(GE_decoded_type(a_type).id)

/*
 * Does `i'-th field of `a_object + a_physical_offset' (which is expected to be reference)
 * denote a reference with copy semantics?
 */
extern EIF_BOOLEAN GE_is_copy_semantics_field(EIF_INTEGER i, EIF_POINTER a_object, EIF_INTEGER a_physical_offset);

/*
 * Does `i'-th item of special `a_object' (which is expected to be reference)
 * denote a reference with copy semantics?
 */
extern EIF_BOOLEAN GE_is_special_copy_semantics_item(EIF_INTEGER i, EIF_POINTER a_object);

/*
 * Generator class name of `a_type'.
 */
extern EIF_REFERENCE GE_generator_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generator_of_encoded_type(a_type) GE_generator_of_type_index(GE_decoded_type(a_type).id)

/*
 * Full name of `a_type'.
 */
extern EIF_REFERENCE GE_generating_type_of_encoded_type(EIF_ENCODED_TYPE a_type);

/*
 * Encoded type whose name is `a_name'.
 * -1 if no such type.
 */
extern EIF_ENCODED_TYPE GE_encoded_type_from_name(EIF_POINTER a_name);

/*
 * Does `a_type_1' conform to `a_type_2'?
 */
extern EIF_BOOLEAN GE_encoded_type_conforms_to(EIF_ENCODED_TYPE a_type_1, EIF_ENCODED_TYPE a_type_2);

/*
 * Number of generic parameters.
 */
extern EIF_INTEGER GE_generic_parameter_count_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generic_parameter_count_of_encoded_type(a_type) GE_generic_parameter_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Type of `i'-th generic parameter of `a_type'.
 */
extern EIF_INTEGER GE_generic_parameter_of_type_index(EIF_TYPE_INDEX a_type, EIF_INTEGER i);
#define GE_generic_parameter_of_encoded_type(a_type,i) GE_generic_parameter_of_type_index(GE_decoded_type(a_type).id, (i))

/*
 * Number of fields of an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_count_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_field_count_of_encoded_type(a_type) GE_field_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Physical offset of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_offset_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_offset_of_encoded_type(i, a_type) GE_field_offset_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Name of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_POINTER GE_field_name_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_name_of_encoded_type(i, a_type) GE_field_name_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Static type of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_static_type_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_static_type_of_encoded_type(i, a_type) GE_field_static_type_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Kind of type of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_type_kind_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_type_kind_of_encoded_type(i, a_type) GE_field_type_kind_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Physical size of `a_object'.
 */
extern EIF_NATURAL_64 GE_object_size(EIF_POINTER a_object);

/*
 * Is `i'-th field of objects of type `a_type' a user-defined expanded attribute?
 */
extern EIF_BOOLEAN GE_is_field_expanded_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_is_field_expanded_of_encoded_type(i, a_type) GE_is_field_expanded_of_type_index((i), GE_decoded_type(a_type).id)

#define GE_field_address_at(a_field_offset, a_object, a_physical_offset) ((char*)(a_object) + (a_physical_offset) + (a_field_offset))
#define GE_object_at_offset(a_enclosing, a_physical_offset) (EIF_REFERENCE)(GE_field_address_at(0, (a_enclosing), (a_physical_offset)))
#define GE_raw_object_at_offset(a_enclosing, a_physical_offset) (EIF_POINTER)(GE_field_address_at(0, (a_enclosing), (a_physical_offset)))
#define GE_object_encoded_type_at_offset(a_enclosing, a_physical_offset) GE_object_encoded_type(GE_raw_object_at_offset((a_enclosing), (a_physical_offset)))
#define GE_boolean_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_BOOLEAN*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_character_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_CHARACTER_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_character_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_CHARACTER_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_16_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_16*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_16_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_16*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_pointer_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_POINTER*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_real_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REAL_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_real_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REAL_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_raw_reference_field_at(a_field_offset, a_object, a_physical_offset) (EIF_POINTER)*(EIF_REFERENCE*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_reference_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REFERENCE*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_set_boolean_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_boolean_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_character_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_character_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_character_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_character_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_16_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_16_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_16_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_16_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_pointer_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_pointer_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_real_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_real_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_real_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_real_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_reference_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_reference_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value

#if defined(GE_USE_ATTRIBUTES) && defined(GE_USE_ATTRIBUTE_OFFSET)
#define GE_field_address(i, a_object, a_physical_offset) GE_field_address_at(GE_type_infos[((EIF_REFERENCE)(a_object))->id].attributes[(i) - 1]->offset, (a_object), (a_physical_offset))
#define GE_boolean_field(i, a_object, a_physical_offset) *(EIF_BOOLEAN*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_character_8_field(i, a_object, a_physical_offset) *(EIF_CHARACTER_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_character_32_field(i, a_object, a_physical_offset) *(EIF_CHARACTER_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_8_field(i, a_object, a_physical_offset) *(EIF_INTEGER_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_16_field(i, a_object, a_physical_offset) *(EIF_INTEGER_16*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_32_field(i, a_object, a_physical_offset) *(EIF_INTEGER_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_64_field(i, a_object, a_physical_offset) *(EIF_INTEGER_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_8_field(i, a_object, a_physical_offset) *(EIF_NATURAL_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_16_field(i, a_object, a_physical_offset) *(EIF_NATURAL_16*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_32_field(i, a_object, a_physical_offset) *(EIF_NATURAL_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_64_field(i, a_object, a_physical_offset) *(EIF_NATURAL_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_pointer_field(i, a_object, a_physical_offset) *(EIF_POINTER*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_real_32_field(i, a_object, a_physical_offset) *(EIF_REAL_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_real_64_field(i, a_object, a_physical_offset) *(EIF_REAL_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_reference_field(i, a_object, a_physical_offset) *(EIF_REFERENCE*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_set_boolean_field(i, a_object, a_physical_offset, a_value) GE_boolean_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_character_8_field(i, a_object, a_physical_offset, a_value) GE_character_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_character_32_field(i, a_object, a_physical_offset, a_value) GE_character_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_8_field(i, a_object, a_physical_offset, a_value) GE_integer_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_16_field(i, a_object, a_physical_offset, a_value) GE_integer_16_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_32_field(i, a_object, a_physical_offset, a_value) GE_integer_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_64_field(i, a_object, a_physical_offset, a_value) GE_integer_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_8_field(i, a_object, a_physical_offset, a_value) GE_natural_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_16_field(i, a_object, a_physical_offset, a_value) GE_natural_16_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_32_field(i, a_object, a_physical_offset, a_value) GE_natural_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_64_field(i, a_object, a_physical_offset, a_value) GE_natural_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_pointer_field(i, a_object, a_physical_offset, a_value) GE_pointer_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_real_32_field(i, a_object, a_physical_offset, a_value) GE_real_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_real_64_field(i, a_object, a_physical_offset, a_value) GE_real_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_reference_field(i, a_object, a_physical_offset, a_value) GE_reference_field((i), (a_object), (a_physical_offset)) = (a_value)
#else
#define GE_boolean_field(i, a_object, a_physical_offset) (EIF_BOOLEAN)0
#define GE_character_8_field(i, a_object, a_physical_offset) (EIF_CHARACTER_8)0
#define GE_character_32_field(i, a_object, a_physical_offset) (EIF_CHARACTER_32)0
#define GE_integer_8_field(i, a_object, a_physical_offset) (EIF_INTEGER_8)0
#define GE_integer_16_field(i, a_object, a_physical_offset) (EIF_INTEGER_16)0
#define GE_integer_32_field(i, a_object, a_physical_offset) (EIF_INTEGER_32)0
#define GE_integer_64_field(i, a_object, a_physical_offset) (EIF_INTEGER_64)0
#define GE_natural_8_field(i, a_object, a_physical_offset) (EIF_NATURAL_8)0
#define GE_natural_16_field(i, a_object, a_physical_offset) (EIF_NATURAL_16)0
#define GE_natural_32_field(i, a_object, a_physical_offset) (EIF_NATURAL_32)0
#define GE_natural_64_field(i, a_object, a_physical_offset) (EIF_NATURAL_64)0
#define GE_pointer_field(i, a_object, a_physical_offset) (EIF_POINTER)0
#define GE_real_32_field(i, a_object, a_physical_offset) (EIF_REAL_32)0
#define GE_real_64_field(i, a_object, a_physical_offset) (EIF_REAL_64)0
#define GE_reference_field(i, a_object, a_physical_offset) (EIF_REFERENCE)0
#define GE_set_boolean_field(i, a_object, a_physical_offset, a_value)
#define GE_set_character_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_character_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_16_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_16_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_pointer_field(i, a_object, a_physical_offset, a_value)
#define GE_set_real_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_real_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_reference_field(i, a_object, a_physical_offset, a_value)
#endif

/*
 * Number of non-transient fields of an object of dynamic type `a_type'.
 * TODO: storable not implemented yet.
 */
#define GE_persistent_field_count_of_type_index(a_type) GE_field_count_of_type_index(a_type)
#define GE_persistent_field_count_of_encoded_type(a_type) GE_persistent_field_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Is `i'-th field of objects of type `a_type' a transient field?
 * TODO: storable not implemented yet.
 */
#define GE_is_field_transient_of_type_index(i, a_type) EIF_FALSE
#define GE_is_field_transient_of_encoded_type(i, a_type) GE_is_field_transient_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Storable version of objects of type `a_type'.
 * TODO: storable not implemented yet.
 */
#define GE_storable_version_of_type_index(a_type) EIF_VOID
#define GE_storable_version_of_encoded_type(a_type) GE_storable_version_of_type_index(GE_decoded_type(a_type).id)

/*
 * Get a lock on `GE_mark_object' and `GE_unmark_object' routines so that
 * 2 threads cannot `GE_mark_object' and `GE_unmark_object' at the same time.
 */
extern void GE_lock_marking(void);

/*
 * Release a lock on `GE_mark_object' and `GE_unmark_object', so that another
 * thread can use `GE_mark_object' and `GE_unmark_object'.
 */
extern void GE_unlock_marking(void);

/*
 * Is `obj' marked?
 */
extern EIF_BOOLEAN GE_is_object_marked(EIF_POINTER obj);

/*
 * Mark `obj'.
 */
extern void GE_mark_object(EIF_POINTER obj);

/*
 * Unmark `obj'.
 */
extern void GE_unmark_object(EIF_POINTER obj);

/*
 * New instance of dynamic `a_type'.
 * Note: returned object is not initialized and may
 * hence violate its invariant.
 * `a_type' cannot represent a SPECIAL type, use
 * `GE_new_special_of_reference_instance_of_type_index' instead.
 */
extern EIF_REFERENCE GE_new_instance_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_new_instance_of_encoded_type(a_type) GE_new_instance_of_type_index(GE_decoded_type(a_type).id)

/*
 * New instance of dynamic `a_type' that represents
 * a SPECIAL with can contain `a_capacity' elements of reference type.
 * To create a SPECIAL of basic type, use class SPECIAL directly.
 */
extern EIF_REFERENCE GE_new_special_of_reference_instance_of_type_index(EIF_TYPE_INDEX a_type, EIF_INTEGER a_capacity);
#define GE_new_special_of_reference_instance_of_encoded_type(a_type, a_capacity) GE_new_special_of_reference_instance_of_type_index(GE_decoded_type(a_type).id, (a_capacity))

/*
 * New instance of tuple of type `a_type'.
 * Note: returned object is not initialized and may
 * hence violate its invariant.
 */
#define GE_new_tuple_instance_of_type_index(a_type) GE_new_instance_of_type_index(a_type)
#define GE_new_tuple_instance_of_encoded_type(a_type) GE_new_tuple_instance_of_type_index(GE_decoded_type(a_type).id)

/*
 * New instance of TYPE for object of type `a_type'.
 */
extern EIF_REFERENCE GE_new_type_instance_of_encoded_type(EIF_ENCODED_TYPE a_type);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to manipulate strings"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_STRING_H
#define GE_STRING_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * New Eiffel empty string of type "STRING_8" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_str8(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "STRING_32" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_str32(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "IMMUTABLE_STRING_32" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_istr32(EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_8" containing the
 * first `c' characters found in ASCII string `s'.
 */
extern EIF_REFERENCE GE_ms8(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_8" containing all
 * characters found in the null-terminated ASCII string `s'.
 */
extern EIF_REFERENCE GE_str8(const char* s);

/*
 * New Eiffel string of type "STRING_32" containing the
 * first `c' characters found in ASCII string `s'.
 */
extern EIF_REFERENCE GE_ms32(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_32" containing all
 * characters found in the null-terminated ASCII string `s'.
 */
extern EIF_REFERENCE GE_str32(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing
 * the first `c' characters found in ASCII string `s'.
 */
extern EIF_REFERENCE GE_ims32(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing all
 * characters found in the null-terminated ASCII string `s'.
 */
extern EIF_REFERENCE GE_istr32(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing the
 * first `n' native characters found in native string `s'.
 * Invalid native characters are escaped.
 */
extern EIF_REFERENCE GE_ims32_from_nstr(EIF_NATIVE_CHAR* s, EIF_INTEGER n);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing all
 * characters found in the null-terminated native string `s'.
 * Invalid native characters are escaped.
 */
extern EIF_REFERENCE GE_istr32_from_nstr(EIF_NATIVE_CHAR* s);

/*
 * New Eiffel string of type "STRING" containing all
 * characters found in the null-terminated ASCII string `s'
 */
extern EIF_REFERENCE GE_str(const char* s);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_CONSOLE_H
#define GE_CONSOLE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Initialize mutex to determine whether a new
 * console needs to be created.
 */
#ifdef EIF_WINDOWS
extern void GE_init_console(void);
#else
#define GE_init_console()
#endif

/*
 * Create a new DOS console if needed (i.e. in case of a Windows application).
 */
#ifdef EIF_WINDOWS
extern void GE_show_console(void);
#else
#define GE_show_console()
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement the program initialization"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_MAIN_H
#define GE_MAIN_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_main(int argc, EIF_NATIVE_CHAR** argv);

/*
 * System name.
 */
extern char* GE_system_name;

/*
 * Root class name.
 */
extern char* GE_root_class_name;

#ifdef EIF_WINDOWS

#include <windows.h>

/*
 * Used in WEL.
 */
extern HINSTANCE eif_hInstance;
extern HINSTANCE eif_hPrevInstance;
extern LPWSTR eif_lpCmdLine;
extern int eif_nCmdShow;

/*
 * Main entry point when compiling a Windows application.
 * See:
 *    http://en.wikipedia.org/wiki/WinMain
 *    http://msdn2.microsoft.com/en-us/library/ms633559.aspx
 */
extern int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow);

#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to access garbage collector facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_GC_H
#define GE_GC_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef GE_USE_BOEHM_GC
/*
 *	Use the Boehm garbage collector.
 *	See:
 *		http://en.wikipedia.org/wiki/Boehm_GC
 *		http://www.hpl.hp.com/personal/Hans_Boehm/gc/
 */
#define GC_IGNORE_WARN
#ifdef GE_USE_THREADS
#define GC_THREADS
#undef GC_NO_THREAD_REDIRECTS
#endif
#include "gc.h"
#endif

/*
 * GC initialization.
 */

#ifdef GE_USE_BOEHM_GC
#ifdef GE_USE_THREADS
#define GE_init_gc() \
	GC_INIT(); \
	GC_allow_register_threads(); \
	GC_enable_incremental()
#else
#define GE_init_gc() \
	GC_INIT(); \
	GC_enable_incremental()
#endif
#else /* No GC */
#define GE_init_gc() /* do nothing */
#endif

/*
 * Memory allocation.
 */

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc(size) GE_null(GC_MALLOC(size))
#else /* No GC */
#define GE_malloc(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc(size) GC_MALLOC(size)
#else /* No GC */
#define GE_unprotected_malloc(size) malloc(size)
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc_atomic(size) GE_null(GC_MALLOC_ATOMIC(size))
#else /* No GC */
#define GE_malloc_atomic(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_atomic(size) GC_MALLOC_ATOMIC(size)
#else /* No GC */
#define GE_unprotected_malloc_atomic(size) malloc(size)
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_calloc(nelem, elsize) GE_null(GC_MALLOC((nelem) * (elsize)))
#else /* No GC */
#define GE_calloc(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_calloc(nelem, elsize) GC_MALLOC((nelem) * (elsize))
#else /* No GC */
#define GE_unprotected_calloc(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_calloc_atomic(nelem, elsize) memset(GE_null(GC_MALLOC_ATOMIC((nelem) * (elsize))), 0, (nelem) * (elsize))
#else /* No GC */
#define GE_calloc(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc_uncollectable(size) GE_null(GC_MALLOC_UNCOLLECTABLE(size))
#else /* No GC */
#define GE_malloc_uncollectable(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_uncollectable(size) GC_MALLOC_UNCOLLECTABLE(size)
#else /* No GC */
#define GE_unprotected_malloc_uncollectable(size) malloc(size)
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc_atomic_uncollectable(size) GE_null(GC_malloc_atomic_uncollectable(size))
#else /* No GC */
#define GE_malloc_atomic_uncollectable(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_atomic_uncollectable(size) GC_malloc_atomic_uncollectable(size)
#else /* No GC */
#define GE_unprotected_malloc_atomic_uncollectable(size) malloc(size)
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_calloc_uncollectable(nelem, elsize) GE_null(GC_MALLOC_UNCOLLECTABLE((nelem) * (elsize)))
#else /* No GC */
#define GE_calloc_uncollectable(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_calloc_uncollectable(nelem, elsize) GC_MALLOC_UNCOLLECTABLE((nelem) * (elsize))
#else /* No GC */
#define GE_unprotected_calloc_uncollectable(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_calloc_atomic_uncollectable(nelem, elsize) memset(GE_null(GC_malloc_atomic_uncollectable((nelem) * (elsize))), 0, (nelem) * (elsize))
#else /* No GC */
#define GE_calloc_atomic_uncollectable(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
extern void* GE_unprotected_calloc_atomic_uncollectable(size_t nelem, size_t elsize);
#else /* No GC */
#define GE_unprotected_calloc_atomic_uncollectable(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is not necessarily zeroed.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_realloc(p, size) GE_null(GC_REALLOC((p), (size)))
#else /* No GC */
#define GE_realloc(p, size) GE_null(realloc((p), (size)))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is not necessarily zeroed.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_realloc(p, size) GC_REALLOC((p), (size))
#else /* No GC */
#define GE_unprotected_realloc(p, size) realloc((p), (size))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * Raise an exception when no-more-memory.
 */
extern void* GE_recalloc(void* p, size_t old_nelem, size_t new_nelem, size_t elsize);

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * Do not raise an exception when no-more-memory.
 */
extern void* GE_unprotected_recalloc(void* p, size_t old_nelem, size_t new_nelem, size_t elsize);

/*
 * Explicitly deallocate an object.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_free(p) GC_FREE(p)
#else /* No GC */
#define GE_free(p) free(p)
#endif

/*
 * When defined, `GE_malloc_cleared' means that `GE_malloc' and
 * `GE_malloc_uncollectable' make sure that the allocated memory
 * is zeroed.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc_cleared
#else /* No GC */
#endif

/*
 * When defined, `GE_malloc_atomic_cleared' means that `GE_malloc_atomic'
 * and `GE_malloc_atomic_uncollectable' make sure that the allocated memory
 * is zeroed.
 */
#ifdef GE_USE_BOEHM_GC
/* #define GE_malloc_atomic_cleared */
#else /* No GC */
#endif

/*
 * Dispose
 */

/*
 * Register dispose routine `disp' to be called on object `obj' when it will be collected.
 */
#ifdef GE_USE_BOEHM_GC
extern void GE_boehm_dispose(void* C, void* disp); /* Call dispose routine `disp' on object `C'. */
#define GE_register_dispose(obj, disp) GC_REGISTER_FINALIZER_NO_ORDER((void*)(obj), (void (*) (void*, void*)) &GE_boehm_dispose, NULL, NULL, NULL)
#else /* No GC */
#define GE_register_dispose(obj, disp) /* do nothing */
#endif

/*
 * Access to objects, useful with GCs which move objects in memory.
 * This is not the case here, since the Boehm GC is not a moving GC.
 */

/* Access object through hector. */
#define eif_access(obj) (obj)
/* Freeze memory address. */
#define eif_freeze(obj) (obj)
/* The C side adopts an object. */
#define eif_adopt(obj) (obj)
/* The C side protects an object. */
#define eif_protect(obj) (obj)
/* The C side weans adopted object. */
#define eif_wean(obj) (obj)
/* Forget a frozen memory address. */
#define eif_unfreeze(obj)
/* Always frozen since they do not move. */
#define eif_frozen(obj) 1
/* Always frozen since they do not move. */
#define spfrozen(obj) 1

#endif

/*
	description:

		"C functions used to implement class IDENTIFIED"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_IDENTIFIED_H
#define GE_IDENTIFIED_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Initialize data to keep track of object ids.
 */
extern void GE_init_identified(void);

/*
 * Get a new id for `object', assuming it is NOT in the stack.
 */
extern EIF_INTEGER_32 GE_object_id(EIF_OBJECT object);

/*
 * Return the object associated with `id'.
 */
extern EIF_REFERENCE GE_id_object(EIF_INTEGER_32 id);

/*
 * Remove the object associated with `id' from the stack.
 */
extern void GE_object_id_free(EIF_INTEGER_32 id);

#ifdef __cplusplus
}
#endif

#endif

#ifdef __cplusplus
extern "C" {
#endif

#define T0 EIF_ANY

/* CHARACTER */
#define EIF_CHARACTER EIF_CHARACTER_8

/* WIDE_CHARACTER */
#define EIF_WIDE_CHAR EIF_CHARACTER_32

/* INTEGER */
#define EIF_INTEGER EIF_INTEGER_32

/* NATURAL */
#define EIF_NATURAL EIF_NATURAL_32

/* REAL */
#define EIF_REAL EIF_REAL_32

/* DOUBLE */
#define EIF_DOUBLE EIF_REAL_64

/* BOOLEAN */
#define T1 EIF_BOOLEAN
extern T0* GE_boxed1(T1 a1);
typedef struct Sb1 Tb1;

/* CHARACTER_8 */
#define T2 EIF_CHARACTER_8
extern T0* GE_boxed2(T2 a1);
typedef struct Sb2 Tb2;

/* CHARACTER_32 */
#define T3 EIF_CHARACTER_32
extern T0* GE_boxed3(T3 a1);
typedef struct Sb3 Tb3;

/* INTEGER_8 */
#define T4 EIF_INTEGER_8
extern T0* GE_boxed4(T4 a1);
typedef struct Sb4 Tb4;

/* INTEGER_16 */
#define T5 EIF_INTEGER_16
extern T0* GE_boxed5(T5 a1);
typedef struct Sb5 Tb5;

/* INTEGER_32 */
#define T6 EIF_INTEGER_32
extern T0* GE_boxed6(T6 a1);
typedef struct Sb6 Tb6;

/* INTEGER_64 */
#define T7 EIF_INTEGER_64
extern T0* GE_boxed7(T7 a1);
typedef struct Sb7 Tb7;

/* NATURAL_8 */
#define T8 EIF_NATURAL_8
extern T0* GE_boxed8(T8 a1);
typedef struct Sb8 Tb8;

/* NATURAL_16 */
#define T9 EIF_NATURAL_16
extern T0* GE_boxed9(T9 a1);
typedef struct Sb9 Tb9;

/* NATURAL_32 */
#define T10 EIF_NATURAL_32
extern T0* GE_boxed10(T10 a1);
typedef struct Sb10 Tb10;

/* NATURAL_64 */
#define T11 EIF_NATURAL_64
extern T0* GE_boxed11(T11 a1);
typedef struct Sb11 Tb11;

/* REAL_32 */
#define T12 EIF_REAL_32
extern T0* GE_boxed12(T12 a1);
typedef struct Sb12 Tb12;

/* REAL_64 */
#define T13 EIF_REAL_64
extern T0* GE_boxed13(T13 a1);
typedef struct Sb13 Tb13;

/* POINTER */
#define T14 EIF_POINTER
extern T0* GE_boxed14(T14 a1);
typedef struct Sb14 Tb14;

/* [detachable] SPECIAL [CHARACTER_8] */
typedef struct S15 T15;

/* [detachable] SPECIAL [CHARACTER_32] */
typedef struct S16 T16;

/* [detachable] STRING_8 */
typedef struct S17 T17;

/* [detachable] STRING_32 */
typedef struct S18 T18;

/* [detachable] IMMUTABLE_STRING_32 */
typedef struct S19 T19;

/* [detachable] ISE_EXCEPTION_MANAGER */
typedef struct S20 T20;

/* [detachable] GEC */
typedef struct S24 T24;

/* [detachable] CELL [detachable EXCEPTION] */
typedef struct S25 T25;

/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32] */
typedef struct S26 T26;

/* [detachable] CELL [detachable TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN]] */
typedef struct S27 T27;

/* [detachable] CELL [[attached] NO_MORE_MEMORY] */
typedef struct S28 T28;

/* detachable C_STRING */
typedef struct S29 T29;

/* [detachable] TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN] */
typedef struct S30 T30;

/* [detachable] KL_TEXT_INPUT_FILE */
typedef struct S31 T31;

/* [detachable] KL_ARGUMENTS */
typedef struct S32 T32;

/* [detachable] ET_ISE_VARIABLES */
typedef struct S33 T33;

/* [detachable] ET_ERROR_HANDLER */
typedef struct S34 T34;

/* detachable ET_SYSTEM */
typedef struct S35 T35;

/* [detachable] KL_EXCEPTIONS */
typedef struct S37 T37;

/* [detachable] AP_PARSER */
typedef struct S38 T38;

/* [detachable] AP_ALTERNATIVE_OPTIONS_LIST */
typedef struct S39 T39;

/* [detachable] AP_STRING_OPTION */
typedef struct S40 T40;

/* [detachable] AP_FLAG */
typedef struct S42 T42;

/* [detachable] UT_VERSION */
typedef struct S43 T43;

/* [detachable] AP_ENUMERATION_OPTION */
typedef struct S44 T44;

/* [detachable] AP_BOOLEAN_OPTION */
typedef struct S45 T45;

/* [detachable] AP_INTEGER_OPTION */
typedef struct S46 T46;

/* [detachable] ET_NULL_ERROR_HANDLER */
typedef struct S50 T50;

/* [detachable] ET_ECF_SYSTEM_PARSER */
typedef struct S52 T52;

/* [detachable] ET_ECF_ERROR_HANDLER */
typedef struct S53 T53;

/* detachable ET_ECF_SETTINGS */
typedef struct S54 T54;

/* [detachable] ET_ECF_SYSTEM */
typedef struct S55 T55;

/* [detachable] ET_ECF_TARGET */
typedef struct S56 T56;

/* detachable ET_ECF_CAPABILITIES */
typedef struct S58 T58;

/* detachable ET_ECF_VARIABLES */
typedef struct S59 T59;

/* [detachable] ET_DYNAMIC_SYSTEM */
typedef struct S60 T60;

/* [detachable] ET_SYSTEM_PROCESSOR */
typedef struct S61 T61;

/* [detachable] ET_C_GENERATOR */
typedef struct S64 T64;

/* [detachable] KL_SHELL_COMMAND */
typedef struct S65 T65;

/* detachable DT_DATE_TIME */
typedef struct S66 T66;

/* detachable DS_HASH_SET [[attached] STRING_8] */
typedef struct S68 T68;

/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
typedef struct S69 T69;

/* [detachable] ET_CLASS_TYPE */
typedef struct S70 T70;

/* [detachable] ET_TOKEN_CONSTANTS */
typedef struct S71 T71;

/* [detachable] ET_CLASS */
typedef struct S72 T72;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S74 T74;

/* [detachable] KL_OPERATING_SYSTEM */
typedef struct S75 T75;

/* [detachable] UT_CANNOT_READ_FILE_ERROR */
typedef struct S78 T78;

/* [detachable] UT_VERSION_NUMBER */
typedef struct S80 T80;

/* [detachable] UT_MESSAGE */
typedef struct S81 T81;

/* [detachable] RX_PCRE_REGULAR_EXPRESSION */
typedef struct S82 T82;

/* [detachable] KL_STRING_ROUTINES */
typedef struct S83 T83;

/* [detachable] KL_EXECUTION_ENVIRONMENT */
typedef struct S86 T86;

/* [detachable] AP_ERROR */
typedef struct S87 T87;

/* [detachable] VOID_TARGET */
typedef struct S90 T90;

/* [detachable] TYPE [[attached] VOID_TARGET] */
#define T91 EIF_TYPE_OBJ

/* [detachable] ROUTINE_FAILURE */
typedef struct S92 T92;

/* [detachable] TYPE [[attached] ROUTINE_FAILURE] */
#define T93 EIF_TYPE_OBJ

/* [detachable] OLD_VIOLATION */
typedef struct S94 T94;

/* [detachable] TYPE [[attached] OLD_VIOLATION] */
#define T95 EIF_TYPE_OBJ

/* [detachable] NO_MORE_MEMORY */
typedef struct S96 T96;

/* [detachable] INVARIANT_VIOLATION */
typedef struct S97 T97;

/* [detachable] OPERATING_SYSTEM_SIGNAL_FAILURE */
typedef struct S98 T98;

/* [detachable] IO_FAILURE */
typedef struct S99 T99;

/* [detachable] OPERATING_SYSTEM_FAILURE */
typedef struct S100 T100;

/* [detachable] COM_FAILURE */
typedef struct S101 T101;

/* [detachable] EIFFEL_RUNTIME_PANIC */
typedef struct S102 T102;

/* [detachable] PRECONDITION_VIOLATION */
typedef struct S104 T104;

/* [detachable] POSTCONDITION_VIOLATION */
typedef struct S105 T105;

/* [detachable] FLOATING_POINT_FAILURE */
typedef struct S106 T106;

/* [detachable] CHECK_VIOLATION */
typedef struct S107 T107;

/* [detachable] BAD_INSPECT_VALUE */
typedef struct S108 T108;

/* [detachable] VARIANT_VIOLATION */
typedef struct S109 T109;

/* [detachable] LOOP_INVARIANT_VIOLATION */
typedef struct S110 T110;

/* [detachable] RESCUE_FAILURE */
typedef struct S111 T111;

/* [detachable] RESUMPTION_FAILURE */
typedef struct S112 T112;

/* [detachable] CREATE_ON_DEFERRED */
typedef struct S113 T113;

/* [detachable] EXTERNAL_FAILURE */
typedef struct S114 T114;

/* [detachable] VOID_ASSIGNED_TO_EXPANDED */
typedef struct S115 T115;

/* [detachable] EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
typedef struct S116 T116;

/* [detachable] MISMATCH_FAILURE */
typedef struct S117 T117;

/* [detachable] DEVELOPER_EXCEPTION */
typedef struct S118 T118;

/* [detachable] ADDRESS_APPLIED_TO_MELTED_FEATURE */
typedef struct S119 T119;

/* [detachable] SERIALIZATION_FAILURE */
typedef struct S120 T120;

/* [detachable] EXECUTION_ENVIRONMENT */
typedef struct S121 T121;

/* [detachable] KL_WINDOWS_FILE_SYSTEM */
typedef struct S122 T122;

/* [detachable] KL_UNIX_FILE_SYSTEM */
typedef struct S123 T123;

/* [detachable] PRIMES */
typedef struct S124 T124;

/* [detachable] SPECIAL [[attached] INTEGER_32] */
typedef struct S125 T125;

/* [detachable] SPECIAL [[attached] BOOLEAN] */
typedef struct S126 T126;

/* detachable KL_LINKABLE [[attached] CHARACTER_8] */
typedef struct S128 T128;

/* [detachable] MANAGED_POINTER */
typedef struct S130 T130;

/* [detachable] FILE_INFO */
typedef struct S131 T131;

/* [detachable] MUTEX */
typedef struct S132 T132;

/* [detachable] UT_ERROR_HANDLER */
typedef struct S133 T133;

/* [detachable] KL_STANDARD_FILES */
typedef struct S134 T134;

/* [detachable] KL_STDERR_FILE */
typedef struct S135 T135;

/* [detachable] KL_STDOUT_FILE */
typedef struct S136 T136;

/* [detachable] ST_WORD_WRAPPER */
typedef struct S137 T137;

/* [detachable] AP_DISPLAY_HELP_FLAG */
typedef struct S139 T139;

/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION] */
typedef struct S140 T140;

/* [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S141 T141;

/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8] */
typedef struct S142 T142;

/* [detachable] AP_ERROR_HANDLER */
typedef struct S143 T143;

/* [detachable] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION] */
typedef struct S144 T144;

/* [detachable] DS_ARRAYED_LIST [detachable STRING_8] */
typedef struct S145 T145;

/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable STRING_8] */
typedef struct S146 T146;

/* [detachable] DS_LINKED_LIST [[attached] STRING_8] */
typedef struct S147 T147;

/* [detachable] KL_STRING_EQUALITY_TESTER */
typedef struct S148 T148;

/* detachable KL_EQUALITY_TESTER [[attached] STRING_8] */
typedef struct S149 T149;

/* [detachable] DS_LINKED_LIST [[attached] BOOLEAN] */
typedef struct S152 T152;

/* [detachable] DS_LINKED_LIST [[attached] INTEGER_32] */
typedef struct S155 T155;

/* [detachable] KL_NULL_TEXT_OUTPUT_STREAM */
typedef struct S156 T156;

/* [detachable] ET_ECF_AST_FACTORY */
typedef struct S157 T157;

/* [detachable] DS_CELL [detachable ET_ECF_SYSTEM] */
typedef struct S158 T158;

/* [detachable] TUPLE [[attached] ET_ECF_TARGET] */
typedef struct S159 T159;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_TARGET]] */
typedef struct S160 T160;

/* detachable TUPLE */
typedef struct S161 T161;

/* [detachable] TUPLE [[attached] ET_ECF_SYSTEM_PARSER] */
typedef struct S162 T162;

/* [detachable] XM_ELEMENT */
typedef struct S163 T163;

/* detachable XM_POSITION_TABLE */
typedef struct S164 T164;

/* [detachable] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8] */
typedef struct S165 T165;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8]] */
typedef struct S166 T166;

/* [detachable] TUPLE [[attached] ET_ECF_SYSTEM_PARSER, [detachable] STRING_8, [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_TARGET]], [attached] DS_CELL [detachable ET_ECF_SYSTEM]] */
typedef struct S167 T167;

/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8] */
typedef struct S169 T169;

/* [detachable] KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
typedef struct S170 T170;

/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8] */
typedef struct S171 T171;

/* [detachable] XM_EIFFEL_PARSER */
typedef struct S173 T173;

/* [detachable] XM_TREE_CALLBACKS_PIPE */
typedef struct S174 T174;

/* [detachable] XM_CALLBACKS_TO_TREE_FILTER */
typedef struct S177 T177;

/* [detachable] ET_ECF_STATE */
typedef struct S178 T178;

/* [detachable] ET_IDENTIFIER */
typedef struct S179 T179;

/* [detachable] ET_ECF_SYSTEM_CONFIG */
typedef struct S180 T180;

/* [detachable] ET_ECF_LIBRARY */
typedef struct S182 T182;

/* [detachable] ET_ADAPTED_LIBRARIES */
typedef struct S183 T183;

/* [detachable] TUPLE [[attached] ET_ADAPTED_LIBRARY] */
typedef struct S185 T185;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_LIBRARY]] */
typedef struct S186 T186;

/* [detachable] XM_DOCUMENT */
typedef struct S187 T187;

/* [detachable] ET_COMPRESSED_POSITION */
typedef struct S188 T188;

/* [detachable] XM_STOP_ON_ERROR_FILTER */
typedef struct S190 T190;

/* detachable XM_ATTRIBUTE */
typedef struct S191 T191;

/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8] */
typedef struct S193 T193;

/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8] */
typedef struct S194 T194;

/* detachable ET_ECF_TARGET_PARENT */
typedef struct S195 T195;

/* [detachable] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
typedef struct S196 T196;

/* [detachable] TUPLE [[attached] ET_ECF_SYSTEM_PARSER, [attached] ET_ECF_INTERNAL_UNIVERSE, [attached] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
typedef struct S197 T197;

/* detachable ET_ECF_TARGETS */
typedef struct S198 T198;

/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
typedef struct S199 T199;

/* [detachable] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
typedef struct S200 T200;

/* [detachable] DS_CELL [detachable ET_ECF_LIBRARY] */
typedef struct S201 T201;

/* [detachable] ET_ECF_ADAPTED_LIBRARY */
typedef struct S202 T202;

/* [detachable] TUPLE [[attached] ET_ECF_SYSTEM_PARSER, [attached] ET_ECF_ADAPTED_LIBRARY, [attached] DS_CELL [detachable ET_ECF_LIBRARY]] */
typedef struct S203 T203;

/* [detachable] ET_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S205 T205;

/* [detachable] ET_ECF_DOTNET_ASSEMBLY */
typedef struct S206 T206;

/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
typedef struct S208 T208;

/* [detachable] ET_ECF_ERROR */
typedef struct S209 T209;

/* [detachable] KL_AGENT_HASH_FUNCTION [[attached] STRING_8] */
typedef struct S210 T210;

/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8] */
typedef struct S211 T211;

/* [detachable] TUPLE [[attached] STRING_8] */
typedef struct S212 T212;

/* [detachable] FUNCTION [[attached] TUPLE [[attached] STRING_8], [attached] INTEGER_32] */
typedef struct S213 T213;

/* [detachable] TUPLE [[attached] KL_STRING_ROUTINES] */
typedef struct S214 T214;

/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8] */
typedef struct S216 T216;

/* [detachable] ET_DYNAMIC_PRIMARY_TYPE */
typedef struct S218 T218;

/* [detachable] ET_DYNAMIC_FEATURE_LIST */
typedef struct S219 T219;

/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME] */
typedef struct S220 T220;

/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8] */
typedef struct S221 T221;

/* [detachable] TUPLE [[attached] ET_CLASS] */
typedef struct S222 T222;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]] */
typedef struct S223 T223;

/* [detachable] TUPLE [INTEGER_32] */
typedef struct S224 T224;

/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
typedef struct S225 T225;

/* [detachable] TUPLE [[attached] ET_DYNAMIC_SYSTEM] */
typedef struct S226 T226;

/* detachable ET_DYNAMIC_FEATURE */
typedef struct S231 T231;

/* [detachable] ET_ACTUAL_PARAMETER_LIST */
typedef struct S235 T235;

/* [detachable] ET_NESTED_TYPE_CONTEXT */
typedef struct S236 T236;

/* [detachable] ET_FORMAL_PARAMETER_TYPE */
typedef struct S245 T245;

/* [detachable] ET_EXTERNAL_FUNCTION */
typedef struct S246 T246;

/* [detachable] ET_TUPLE_TYPE */
typedef struct S247 T247;

/* detachable ET_FORMAL_ARGUMENT_LIST */
typedef struct S248 T248;

/* [detachable] ARRAY [[attached] ET_TYPE] */
typedef struct S249 T249;

/* [detachable] SPECIAL [[attached] ET_TYPE] */
typedef struct S250 T250;

/* [detachable] ET_FORMAL_ARGUMENT */
typedef struct S251 T251;

/* [detachable] ET_QUERY_LIST */
typedef struct S252 T252;

/* [detachable] ET_PROCEDURE_LIST */
typedef struct S253 T253;

/* [detachable] ET_DYNAMIC_TYPE_SET_LIST */
typedef struct S254 T254;

/* [detachable] KL_STRING_OUTPUT_STREAM */
typedef struct S255 T255;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER] */
typedef struct S256 T256;

/* [detachable] DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S257 T257;

/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32] */
typedef struct S258 T258;

/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST */
typedef struct S259 T259;

/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET */
typedef struct S260 T260;

/* [detachable] DS_ARRAYED_STACK [[attached] ET_EXPRESSION] */
typedef struct S261 T261;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_EXPRESSION] */
typedef struct S262 T262;

/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32] */
typedef struct S263 T263;

/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
typedef struct S264 T264;

/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S265 T265;

/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S266 T266;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST] */
typedef struct S267 T267;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S268 T268;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION] */
typedef struct S269 T269;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_AGENT] */
typedef struct S270 T270;

/* [detachable] ET_CURRENT */
typedef struct S272 T272;

/* [detachable] ET_ACTUAL_ARGUMENT_LIST */
typedef struct S273 T273;

/* [detachable] ET_QUALIFIED_CALL_INSTRUCTION */
typedef struct S274 T274;

/* [detachable] ET_QUALIFIED_CALL_EXPRESSION */
typedef struct S277 T277;

/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION */
typedef struct S278 T278;

/* [detachable] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S279 T279;

/* [detachable] ET_MANIFEST_TUPLE */
typedef struct S280 T280;

/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S281 T281;

/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE] */
typedef struct S282 T282;

/* [detachable] ARRAY [[attached] INTEGER_32] */
typedef struct S283 T283;

/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE] */
typedef struct S284 T284;

/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT] */
typedef struct S285 T285;

/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S286 T286;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE] */
typedef struct S287 T287;

/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8] */
typedef struct S288 T288;

/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER] */
typedef struct S289 T289;

/* [detachable] ET_IDENTIFIER_TESTER */
typedef struct S290 T290;

/* [detachable] KL_TEXT_OUTPUT_FILE */
typedef struct S292 T292;

/* [detachable] ET_DYNAMIC_TUPLE_TYPE */
typedef struct S293 T293;

/* [detachable] DS_STRING_HASH_TABLE */
typedef struct S294 T294;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8] */
typedef struct S295 T295;

/* [detachable] UT_CANNOT_WRITE_TO_FILE_ERROR */
typedef struct S296 T296;

/* detachable ET_DYNAMIC_PRECURSOR */
typedef struct S297 T297;

/* detachable ET_DYNAMIC_PRECURSOR_LIST */
typedef struct S298 T298;

/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S299 T299;

/* [detachable] ET_RESULT */
typedef struct S300 T300;

/* detachable ET_DYNAMIC_QUALIFIED_QUERY_CALL */
typedef struct S301 T301;

/* detachable ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
typedef struct S305 T305;

/* [detachable] ET_OBJECT_TEST */
typedef struct S307 T307;

/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION */
typedef struct S308 T308;

/* [detachable] ET_EQUALITY_EXPRESSION */
typedef struct S309 T309;

/* [detachable] ET_DYNAMIC_SPECIAL_TYPE */
typedef struct S310 T310;

/* [detachable] DS_QUICK_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S313 T313;

/* detachable ET_DYNAMIC_SECONDARY_TYPE */
typedef struct S314 T314;

/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID */
typedef struct S315 T315;

/* [detachable] ET_CREATE_EXPRESSION */
typedef struct S319 T319;

/* [detachable] ET_QUALIFIED_CALL */
typedef struct S320 T320;

/* [detachable] ARRAY [[attached] STRING_8] */
typedef struct S323 T323;

/* [detachable] SPECIAL [[attached] STRING_8] */
typedef struct S324 T324;

/* [detachable] KL_DIRECTORY */
typedef struct S326 T326;

/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S327 T327;

/* [detachable] ET_EXTENDED_ATTRIBUTE */
typedef struct S328 T328;

/* detachable ET_COMPOUND */
typedef struct S329 T329;

/* detachable ET_LOCAL_VARIABLE_LIST */
typedef struct S330 T330;

/* [detachable] DS_QUICK_SORTER [[attached] INTEGER_32] */
typedef struct S334 T334;

/* [detachable] ET_IMPLICIT_TYPE_MARK */
typedef struct S341 T341;

/* [detachable] ET_SYMBOL */
typedef struct S342 T342;

/* [detachable] PROCEDURE [[attached] TUPLE] */
typedef struct S343 T343;

/* [detachable] TUPLE [[attached] ET_C_GENERATOR, [attached] ET_IDENTIFIER, [attached] ET_CURRENT, [attached] ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S344 T344;

/* [detachable] TUPLE [[attached] ET_C_GENERATOR, [attached] ET_IDENTIFIER, [attached] ET_RESULT, [attached] ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S345 T345;

/* [detachable] TUPLE [[attached] ET_C_GENERATOR, [attached] ET_DYNAMIC_FEATURE, [attached] ET_RESULT, [attached] ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S346 T346;

/* [detachable] TUPLE [[attached] ET_C_GENERATOR, INTEGER_32, [attached] ET_RESULT, [attached] ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S347 T347;

/* [detachable] UT_INTEGER_FORMATTER */
typedef struct S348 T348;

/* [detachable] STD_FILES */
typedef struct S351 T351;

/* [detachable] TUPLE [[attached] ET_C_GENERATOR, INTEGER_32, [attached] ET_EXPRESSION, [attached] ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S353 T353;

/* [detachable] TUPLE [[attached] ET_C_GENERATOR, [attached] ET_EXPRESSION, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S355 T355;

/* [detachable] TUPLE [[attached] ET_C_GENERATOR, [attached] ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S356 T356;

/* [detachable] ET_CONSTANT_ATTRIBUTE */
typedef struct S357 T357;

/* [detachable] ET_UNIQUE_ATTRIBUTE */
typedef struct S359 T359;

/* [detachable] ET_REGULAR_INTEGER_CONSTANT */
typedef struct S360 T360;

/* [detachable] ET_ATTRIBUTE */
typedef struct S361 T361;

/* [detachable] NATIVE_STRING */
typedef struct S363 T363;

/* [detachable] ET_SYSTEM_MULTIPROCESSOR */
typedef struct S364 T364;

/* [detachable] DS_HASH_SET_CURSOR [[attached] STRING_8] */
typedef struct S365 T365;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] STRING_8] */
typedef struct S366 T366;

/* [detachable] TYPE [[attached] STRING_8] */
#define T367 EIF_TYPE_OBJ

/* [detachable] KL_SPECIAL_ROUTINES [[attached] INTEGER_32] */
typedef struct S368 T368;

/* [detachable] ET_FEATURE_CHECKER */
typedef struct S369 T369;

/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE] */
typedef struct S370 T370;

/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
typedef struct S371 T371;

/* [detachable] ET_TYPE_CHECKER */
typedef struct S373 T373;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT] */
typedef struct S375 T375;

/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
typedef struct S376 T376;

/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
typedef struct S377 T377;

/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
typedef struct S378 T378;

/* [detachable] DS_ARRAYED_LIST [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]] */
typedef struct S379 T379;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT] */
typedef struct S380 T380;

/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST] */
typedef struct S381 T381;

/* [detachable] ET_OBJECT_TEST_SCOPE */
typedef struct S382 T382;

/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER */
typedef struct S383 T383;

/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT] */
typedef struct S384 T384;

/* [detachable] ET_ACROSS_CURSOR_SCOPE */
typedef struct S385 T385;

/* [detachable] ET_ATTACHMENT_SCOPE */
typedef struct S386 T386;

/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER */
typedef struct S387 T387;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE] */
typedef struct S388 T388;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM] */
typedef struct S389 T389;

/* [detachable] ET_CLIENT_LIST */
typedef struct S390 T390;

/* [detachable] ET_CLIENT */
typedef struct S391 T391;

/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]] */
typedef struct S392 T392;

/* [detachable] ET_ADAPTED_BASE_CLASS_CHECKER */
typedef struct S393 T393;

/* detachable ET_PRECONDITIONS */
typedef struct S394 T394;

/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE] */
typedef struct S395 T395;

/* detachable ET_FEATURE_LIST */
typedef struct S397 T397;

/* [detachable] ET_UNKNOWN_GROUP */
typedef struct S399 T399;

/* [detachable] ET_BASE_TYPE_LIST */
typedef struct S401 T401;

/* [detachable] ET_KEYWORD */
typedef struct S402 T402;

/* [detachable] ET_CLASS_CODES */
typedef struct S403 T403;

/* [detachable] SPECIAL [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S404 T404;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S405 T405;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S406 T406;

/* [detachable] PATH */
typedef struct S409 T409;

/* [detachable] RX_BYTE_CODE */
typedef struct S411 T411;

/* [detachable] RX_CHARACTER_SET */
typedef struct S412 T412;

/* [detachable] RX_CASE_MAPPING */
typedef struct S413 T413;

/* [detachable] ARRAY [[attached] RX_CHARACTER_SET] */
typedef struct S415 T415;

/* [detachable] SPECIAL [[attached] RX_CHARACTER_SET] */
typedef struct S416 T416;

/* [detachable] UC_STRING */
typedef struct S417 T417;

/* [detachable] KL_ANY_ROUTINES */
typedef struct S418 T418;

/* [detachable] STRING_TO_INTEGER_CONVERTOR */
typedef struct S419 T419;

/* [detachable] ARGUMENTS_32 */
typedef struct S421 T421;

/* [detachable] ET_ECF_OPTIONS */
typedef struct S427 T427;

/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT] */
typedef struct S428 T428;

/* [detachable] XM_NAMESPACE */
typedef struct S429 T429;

/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE] */
typedef struct S430 T430;

/* [detachable] ET_LIKE_CURRENT */
typedef struct S432 T432;

/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE */
typedef struct S433 T433;

/* [detachable] ET_DYNAMIC_FUNCTION_TYPE */
typedef struct S434 T434;

/* [detachable] DT_SHARED_SYSTEM_CLOCK */
typedef struct S435 T435;

/* [detachable] DT_SYSTEM_CLOCK */
typedef struct S436 T436;

/* [detachable] ET_EIFFEL_PREPARSER */
typedef struct S437 T437;

/* [detachable] ET_MASTER_CLASS_CHECKER */
typedef struct S438 T438;

/* [detachable] ET_EIFFEL_PARSER */
typedef struct S439 T439;

/* [detachable] ET_PROVIDER_CHECKER */
typedef struct S440 T440;

/* [detachable] ET_ANCESTOR_BUILDER */
typedef struct S441 T441;

/* [detachable] ET_FEATURE_FLATTENER */
typedef struct S442 T442;

/* [detachable] ET_INTERFACE_CHECKER */
typedef struct S443 T443;

/* [detachable] ET_IMPLEMENTATION_CHECKER */
typedef struct S444 T444;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS] */
typedef struct S445 T445;

/* [detachable] TUPLE [[attached] DS_ARRAYED_LIST [[attached] ET_CLASS]] */
typedef struct S446 T446;

/* [detachable] ET_AST_NULL_PROCESSOR */
typedef struct S447 T447;

/* [detachable] ET_AST_FACTORY */
typedef struct S448 T448;

/* [detachable] ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
typedef struct S450 T450;

/* [detachable] DT_DATE_TIME_DURATION */
typedef struct S451 T451;

/* [detachable] UT_CONFIG_PARSER */
typedef struct S452 T452;

/* [detachable] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32] */
typedef struct S453 T453;

/* [detachable] ET_DO_PROCEDURE */
typedef struct S456 T456;

/* [detachable] ET_DEFERRED_PROCEDURE */
typedef struct S458 T458;

/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET */
typedef struct S459 T459;

/* [detachable] KL_PLATFORM */
typedef struct S460 T460;

/* [detachable] UC_UNICODE_ROUTINES */
typedef struct S461 T461;

/* UTF_CONVERTER */
typedef struct S462 T462;
extern T0* GE_boxed462(T462 a1);
typedef struct Sb462 Tb462;

/* [detachable] CELL [[attached] INTEGER_32] */
typedef struct S463 T463;

/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32] */
typedef struct S464 T464;

/* [detachable] KL_PATHNAME */
typedef struct S466 T466;

/* [detachable] EXCEPTIONS */
typedef struct S467 T467;

/* [detachable] SPECIAL [[attached] NATURAL_8] */
typedef struct S469 T469;

/* TYPED_POINTER [[attached] SPECIAL [[attached] NATURAL_8]] */
typedef struct S470 T470;
extern T0* GE_boxed470(T470 a1);
typedef struct Sb470 Tb470;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION] */
typedef struct S471 T471;

/* [detachable] SPECIAL [[attached] AP_OPTION] */
typedef struct S473 T473;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] AP_OPTION] */
typedef struct S474 T474;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S475 T475;

/* [detachable] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S476 T476;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S477 T477;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8] */
typedef struct S478 T478;

/* [detachable] SPECIAL [detachable STRING_8] */
typedef struct S479 T479;

/* [detachable] KL_SPECIAL_ROUTINES [detachable STRING_8] */
typedef struct S480 T480;

/* [detachable] DS_LINKED_LIST_CURSOR [[attached] STRING_8] */
typedef struct S481 T481;

/* detachable DS_LINKABLE [[attached] STRING_8] */
typedef struct S482 T482;

/* detachable DS_LINKABLE [[attached] BOOLEAN] */
typedef struct S483 T483;

/* [detachable] DS_LINKED_LIST_CURSOR [[attached] BOOLEAN] */
typedef struct S484 T484;

/* detachable DS_LINKABLE [[attached] INTEGER_32] */
typedef struct S485 T485;

/* [detachable] DS_LINKED_LIST_CURSOR [[attached] INTEGER_32] */
typedef struct S486 T486;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8] */
typedef struct S488 T488;

/* [detachable] SPECIAL [[attached] ET_ECF_LIBRARY] */
typedef struct S489 T489;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY] */
typedef struct S492 T492;

/* [detachable] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY] */
typedef struct S493 T493;

/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8] */
typedef struct S496 T496;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY] */
typedef struct S497 T497;

/* [detachable] XM_EIFFEL_SCANNER */
typedef struct S498 T498;

/* [detachable] XM_DEFAULT_POSITION */
typedef struct S499 T499;

/* [detachable] DS_BILINKED_LIST [[attached] XM_POSITION] */
typedef struct S501 T501;

/* [detachable] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER] */
typedef struct S502 T502;

/* [detachable] XM_CALLBACKS_NULL */
typedef struct S503 T503;

/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8] */
typedef struct S504 T504;

/* [detachable] XM_NULL_EXTERNAL_RESOLVER */
typedef struct S506 T506;

/* [detachable] XM_DTD_CALLBACKS_NULL */
typedef struct S508 T508;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ANY] */
typedef struct S509 T509;

/* [detachable] SPECIAL [detachable ANY] */
typedef struct S510 T510;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME] */
typedef struct S511 T511;

/* [detachable] XM_EIFFEL_PARSER_NAME */
typedef struct S512 T512;

/* [detachable] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME] */
typedef struct S513 T513;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]] */
typedef struct S514 T514;

/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME] */
typedef struct S515 T515;

/* [detachable] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]] */
typedef struct S516 T516;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID] */
typedef struct S517 T517;

/* [detachable] XM_DTD_EXTERNAL_ID */
typedef struct S518 T518;

/* [detachable] SPECIAL [[attached] XM_DTD_EXTERNAL_ID] */
typedef struct S519 T519;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT] */
typedef struct S520 T520;

/* [detachable] XM_DTD_ELEMENT_CONTENT */
typedef struct S521 T521;

/* [detachable] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT] */
typedef struct S522 T522;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S523 T523;

/* [detachable] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S524 T524;

/* [detachable] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S525 T525;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S526 T526;

/* [detachable] XM_DTD_ATTRIBUTE_CONTENT */
typedef struct S527 T527;

/* [detachable] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S528 T528;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]] */
typedef struct S529 T529;

/* [detachable] DS_BILINKED_LIST [[attached] STRING_8] */
typedef struct S530 T530;

/* [detachable] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]] */
typedef struct S531 T531;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] BOOLEAN] */
typedef struct S532 T532;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION] */
typedef struct S533 T533;

/* [detachable] XM_EIFFEL_DECLARATION */
typedef struct S534 T534;

/* [detachable] SPECIAL [[attached] XM_EIFFEL_DECLARATION] */
typedef struct S535 T535;

/* [detachable] XM_EIFFEL_ENTITY_DEF */
typedef struct S538 T538;

/* [detachable] XM_EIFFEL_SCANNER_DTD */
typedef struct S539 T539;

/* [detachable] XM_EIFFEL_PE_ENTITY_DEF */
typedef struct S541 T541;

/* [detachable] XM_NAMESPACE_RESOLVER */
typedef struct S542 T542;

/* [detachable] ARRAY [[attached] XM_CALLBACKS_FILTER] */
typedef struct S543 T543;

/* [detachable] SPECIAL [[attached] XM_CALLBACKS_FILTER] */
typedef struct S544 T544;

/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE] */
typedef struct S545 T545;

/* [detachable] ET_CLUSTERS */
typedef struct S546 T546;

/* [detachable] ET_CLASS_NAME_TESTER */
typedef struct S547 T547;

/* [detachable] ET_PARENT */
typedef struct S549 T549;

/* [detachable] ET_PARENT_LIST */
typedef struct S550 T550;

/* [detachable] ET_BUILTIN_CONVERT_FEATURE */
typedef struct S551 T551;

/* [detachable] ET_MASTER_CLASS */
typedef struct S552 T552;

/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD */
typedef struct S553 T553;

/* detachable ET_RENAME_LIST */
typedef struct S554 T554;

/* detachable ET_EXPORT_LIST */
typedef struct S555 T555;

/* detachable ET_KEYWORD_FEATURE_NAME_LIST */
typedef struct S556 T556;

/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
typedef struct S559 T559;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY] */
typedef struct S560 T560;

/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE] */
typedef struct S561 T561;

/* [detachable] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG] */
typedef struct S564 T564;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG] */
typedef struct S566 T566;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8] */
typedef struct S567 T567;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8] */
typedef struct S568 T568;

/* [detachable] SPECIAL [[attached] ET_ECF_TARGET] */
typedef struct S569 T569;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET] */
typedef struct S571 T571;

/* detachable DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
typedef struct S573 T573;

/* [detachable] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
typedef struct S574 T574;

/* [detachable] SPECIAL [detachable RX_REGULAR_EXPRESSION] */
typedef struct S575 T575;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S576 T576;

/* [detachable] ET_DOTNET_ASSEMBLIES */
typedef struct S577 T577;

/* [detachable] ET_DOTNET_ASSEMBLY */
typedef struct S578 T578;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER] */
typedef struct S581 T581;

/* [detachable] SPECIAL [[attached] ET_IDENTIFIER] */
typedef struct S582 T582;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8] */
typedef struct S583 T583;

/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32] */
typedef struct S584 T584;

/* detachable ET_FORMAL_PARAMETER_LIST */
typedef struct S585 T585;

/* detachable ET_FEATURE_IDS */
typedef struct S586 T586;

/* [detachable] SPECIAL [[attached] ET_DYNAMIC_FEATURE] */
typedef struct S587 T587;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_FEATURE] */
typedef struct S588 T588;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME] */
typedef struct S591 T591;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS] */
typedef struct S592 T592;

/* [detachable] SPECIAL [[attached] ET_MASTER_CLASS] */
typedef struct S593 T593;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME] */
typedef struct S594 T594;

/* [detachable] SPECIAL [[attached] ET_CLASS_NAME] */
typedef struct S595 T595;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8] */
typedef struct S597 T597;

/* [detachable] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S601 T601;

/* [detachable] ET_BRACKET_SYMBOL */
typedef struct S602 T602;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S604 T604;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE] */
typedef struct S605 T605;

/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET] */
typedef struct S606 T606;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET] */
typedef struct S607 T607;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_IDENTIFIER] */
typedef struct S608 T608;

/* [detachable] SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S609 T609;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S610 T610;

/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S611 T611;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] INTEGER_32] */
typedef struct S612 T612;

/* [detachable] SPECIAL [[attached] ET_EXPRESSION] */
typedef struct S614 T614;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION] */
typedef struct S615 T615;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_EXPRESSION] */
typedef struct S616 T616;

/* detachable KL_EQUALITY_TESTER [[attached] INTEGER_32] */
typedef struct S617 T617;

/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32] */
typedef struct S618 T618;

/* [detachable] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S619 T619;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S620 T620;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S621 T621;

/* [detachable] SPECIAL [[attached] ET_OBJECT_TEST] */
typedef struct S623 T623;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST] */
typedef struct S624 T624;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_TEST] */
typedef struct S625 T625;

/* [detachable] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S626 T626;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S627 T627;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S628 T628;

/* [detachable] SPECIAL [[attached] ET_EQUALITY_EXPRESSION] */
typedef struct S629 T629;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION] */
typedef struct S630 T630;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_EQUALITY_EXPRESSION] */
typedef struct S631 T631;

/* [detachable] SPECIAL [[attached] ET_AGENT] */
typedef struct S632 T632;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_AGENT] */
typedef struct S633 T633;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_AGENT] */
typedef struct S634 T634;

/* [detachable] SPECIAL [[attached] ET_EXPRESSION_ITEM] */
typedef struct S635 T635;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION_ITEM] */
typedef struct S637 T637;

/* [detachable] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S638 T638;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S639 T639;

/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S640 T640;

/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S641 T641;

/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S642 T642;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S643 T643;

/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FEATURE] */
typedef struct S645 T645;

/* [detachable] SPECIAL [[attached] ET_FEATURE] */
typedef struct S646 T646;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE] */
typedef struct S647 T647;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE] */
typedef struct S648 T648;

/* [detachable] SPECIAL [[attached] ET_CONSTANT] */
typedef struct S649 T649;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CONSTANT] */
typedef struct S651 T651;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT] */
typedef struct S652 T652;

/* [detachable] SPECIAL [[attached] ET_INLINE_CONSTANT] */
typedef struct S653 T653;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT] */
typedef struct S655 T655;

/* [detachable] SPECIAL [detachable ET_DYNAMIC_FEATURE] */
typedef struct S656 T656;

/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S658 T658;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
typedef struct S659 T659;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_FEATURE] */
typedef struct S660 T660;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8] */
typedef struct S661 T661;

/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER] */
typedef struct S664 T664;

/* [detachable] TYPE [[attached] ET_IDENTIFIER] */
#define T665 EIF_TYPE_OBJ

/* TYPED_POINTER [[attached] ANY] */
typedef struct S666 T666;
extern T0* GE_boxed666(T666 a1);
typedef struct Sb666 Tb666;

/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S667 T667;

/* [detachable] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]] */
typedef struct S668 T668;

/* [detachable] ARRAY [[attached] BOOLEAN] */
typedef struct S669 T669;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_SYSTEM_PROCESSOR] */
typedef struct S672 T672;

/* [detachable] WORKER_THREAD */
typedef struct S673 T673;

/* [detachable] TUPLE [[attached] ET_SYSTEM_PROCESSOR, [attached] DS_ARRAYED_LIST [[attached] ET_CLASS]] */
typedef struct S674 T674;

/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE] */
typedef struct S678 T678;

/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TYPE] */
typedef struct S679 T679;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE] */
typedef struct S680 T680;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS] */
typedef struct S682 T682;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_AGENT] */
typedef struct S683 T683;

/* [detachable] SPECIAL [[attached] ET_INLINE_AGENT] */
typedef struct S685 T685;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_INLINE_AGENT] */
typedef struct S686 T686;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
typedef struct S687 T687;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE] */
typedef struct S688 T688;

/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
typedef struct S689 T689;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
typedef struct S690 T690;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
typedef struct S691 T691;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY] */
typedef struct S692 T692;

/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
typedef struct S693 T693;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
typedef struct S694 T694;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
typedef struct S695 T695;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_FEATURE] */
typedef struct S696 T696;

/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
typedef struct S697 T697;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
typedef struct S698 T698;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]] */
typedef struct S699 T699;

/* [detachable] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT] */
typedef struct S700 T700;

/* [detachable] SPECIAL [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]] */
typedef struct S701 T701;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]] */
typedef struct S702 T702;

/* [detachable] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT] */
typedef struct S703 T703;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT] */
typedef struct S704 T704;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT] */
typedef struct S705 T705;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST] */
typedef struct S706 T706;

/* [detachable] ET_NAMED_OBJECT_TEST */
typedef struct S709 T709;

/* [detachable] SPECIAL [[attached] ET_NAMED_OBJECT_TEST] */
typedef struct S710 T710;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST] */
typedef struct S711 T711;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST] */
typedef struct S712 T712;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT] */
typedef struct S713 T713;

/* [detachable] SPECIAL [[attached] ET_ACROSS_COMPONENT] */
typedef struct S716 T716;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT] */
typedef struct S717 T717;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT] */
typedef struct S718 T718;

/* [detachable] DS_HASH_SET [[attached] INTEGER_32] */
typedef struct S719 T719;

/* [detachable] SPECIAL [[attached] ET_ATTACHMENT_SCOPE] */
typedef struct S721 T721;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE] */
typedef struct S722 T722;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ATTACHMENT_SCOPE] */
typedef struct S723 T723;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM] */
typedef struct S724 T724;

/* [detachable] SPECIAL [[attached] ET_INDEXING_TERM] */
typedef struct S726 T726;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_INDEXING_TERM] */
typedef struct S727 T727;

/* [detachable] SPECIAL [[attached] ET_CLIENT_ITEM] */
typedef struct S728 T728;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_ITEM] */
typedef struct S729 T729;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]] */
typedef struct S730 T730;

/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]] */
typedef struct S731 T731;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]] */
typedef struct S732 T732;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE] */
typedef struct S733 T733;

/* [detachable] SPECIAL [[attached] ET_ASSERTIONS] */
typedef struct S734 T734;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS] */
typedef struct S736 T736;

/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME] */
typedef struct S737 T737;

/* [detachable] STRING_8_SEARCHER */
typedef struct S738 T738;

/* detachable ARRAYED_LIST [[attached] INTEGER_32] */
typedef struct S739 T739;

/* [detachable] ET_SYSTEM_ERROR */
typedef struct S740 T740;

/* [detachable] ET_INTERNAL_ERROR */
typedef struct S741 T741;

/* [detachable] ET_VALIDITY_ERROR */
typedef struct S742 T742;

/* detachable ET_ECF_NOTE_ELEMENT */
typedef struct S743 T743;

/* detachable ET_ECF_CLUSTERS */
typedef struct S744 T744;

/* detachable ET_ECF_ADAPTED_LIBRARIES */
typedef struct S745 T745;

/* detachable ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S746 T746;

/* detachable ET_ECF_FILE_RULES */
typedef struct S747 T747;

/* detachable ET_ECF_EXTERNAL_CFLAGS */
typedef struct S748 T748;

/* detachable ET_ECF_EXTERNAL_INCLUDES */
typedef struct S749 T749;

/* detachable ET_ECF_EXTERNAL_LIBRARIES */
typedef struct S750 T750;

/* detachable ET_ECF_EXTERNAL_LINKER_FLAGS */
typedef struct S751 T751;

/* detachable ET_ECF_EXTERNAL_MAKES */
typedef struct S752 T752;

/* detachable ET_ECF_EXTERNAL_OBJECTS */
typedef struct S753 T753;

/* detachable ET_ECF_EXTERNAL_RESOURCES */
typedef struct S754 T754;

/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_ACTION] */
typedef struct S755 T755;

/* detachable ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
typedef struct S756 T756;

/* detachable ET_ECF_VERSION */
typedef struct S758 T758;

/* detachable ET_ECF_CLUSTER */
typedef struct S759 T759;

/* detachable ET_ECF_EXTERNAL_CFLAG */
typedef struct S760 T760;

/* detachable ET_ECF_EXTERNAL_INCLUDE */
typedef struct S761 T761;

/* detachable ET_ECF_EXTERNAL_LIBRARY */
typedef struct S762 T762;

/* detachable ET_ECF_EXTERNAL_LINKER_FLAG */
typedef struct S763 T763;

/* detachable ET_ECF_EXTERNAL_MAKE */
typedef struct S764 T764;

/* detachable ET_ECF_EXTERNAL_OBJECT */
typedef struct S765 T765;

/* detachable ET_ECF_EXTERNAL_RESOURCE */
typedef struct S766 T766;

/* detachable ET_ECF_FILE_RULE */
typedef struct S767 T767;

/* detachable ET_ECF_ACTION */
typedef struct S768 T768;

/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
typedef struct S769 T769;

/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS] */
typedef struct S770 T770;

/* [detachable] TUPLE [[attached] ET_ECF_OPTIONS] */
typedef struct S771 T771;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_OPTIONS]] */
typedef struct S772 T772;

/* detachable ET_ECF_ROOT_CLASS */
typedef struct S773 T773;

/* [detachable] ET_ECF_ROOT_ALL_CLASSES */
typedef struct S774 T774;

/* [detachable] ET_ECF_ORED_CONDITIONS */
typedef struct S775 T775;

/* detachable ET_ECF_ANDED_CONDITIONS */
typedef struct S776 T776;

/* detachable ET_ECF_VISIBLE_CLASS */
typedef struct S777 T777;

/* detachable ET_ECF_BUILD_CONDITION */
typedef struct S779 T779;

/* detachable ET_ECF_CONCURRENCY_CONDITION */
typedef struct S780 T780;

/* detachable ET_ECF_VOID_SAFETY_CONDITION */
typedef struct S781 T781;

/* detachable ET_ECF_CUSTOM_CONDITION */
typedef struct S782 T782;

/* detachable ET_ECF_DOTNET_CONDITION */
typedef struct S783 T783;

/* detachable ET_ECF_DYNAMIC_RUNTIME_CONDITION */
typedef struct S784 T784;

/* detachable ET_ECF_PLATFORM_CONDITION */
typedef struct S785 T785;

/* [detachable] ET_ECF_COMPILER_VERSION_CONDITION */
typedef struct S787 T787;

/* [detachable] ET_ECF_MSIL_CLR_VERSION_CONDITION */
typedef struct S788 T788;

/* [detachable] UT_COUNTER */
typedef struct S790 T790;

/* [detachable] KL_AGENT_ROUTINES [[attached] ET_CLASS] */
typedef struct S791 T791;

/* [detachable] TUPLE [[attached] UT_COUNTER] */
typedef struct S792 T792;

/* [detachable] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ET_CLASS], [attached] PROCEDURE [[attached] TUPLE]] */
typedef struct S793 T793;

/* [detachable] TUPLE [[attached] ET_UNIVERSE] */
typedef struct S794 T794;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_UNIVERSE]] */
typedef struct S795 T795;

/* [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]]] */
typedef struct S796 T796;

/* [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
typedef struct S797 T797;

/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S799 T799;

/* [detachable] TUPLE [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S800 T800;

/* [detachable] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]] */
typedef struct S801 T801;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]] */
typedef struct S802 T802;

/* [detachable] TUPLE [[attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY]] */
typedef struct S803 T803;

/* [detachable] TUPLE [[attached] ET_INTERNAL_UNIVERSE] */
typedef struct S804 T804;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_INTERNAL_UNIVERSE]] */
typedef struct S805 T805;

/* [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]]] */
typedef struct S806 T806;

/* [detachable] TUPLE [[attached] ET_DOTNET_ASSEMBLIES] */
typedef struct S807 T807;

/* [detachable] TUPLE [[attached] ET_SYSTEM_PROCESSOR] */
typedef struct S808 T808;

/* [detachable] ET_LIBRARY */
typedef struct S809 T809;

/* [detachable] TUPLE [[attached] ET_LIBRARY] */
typedef struct S810 T810;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_LIBRARY]] */
typedef struct S811 T811;

/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE] */
typedef struct S812 T812;

/* [detachable] TUPLE [[attached] ET_CLUSTER] */
typedef struct S814 T814;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]] */
typedef struct S815 T815;

/* [detachable] TUPLE [[attached] ET_ECF_SYSTEM] */
typedef struct S816 T816;

/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE] */
typedef struct S817 T817;

/* [detachable] TUPLE [[attached] ET_AST_PROCESSOR] */
typedef struct S818 T818;

/* [detachable] TUPLE [[attached] ET_MASTER_CLASS] */
typedef struct S819 T819;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]] */
typedef struct S820 T820;

/* [detachable] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S821 T821;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY]] */
typedef struct S822 T822;

/* [detachable] ET_ANCESTORS_STATUS_CHECKER */
typedef struct S823 T823;

/* [detachable] ET_FLATTENING_STATUS_CHECKER */
typedef struct S824 T824;

/* [detachable] ET_INTERFACE_STATUS_CHECKER */
typedef struct S825 T825;

/* [detachable] ET_IMPLEMENTATION_STATUS_CHECKER */
typedef struct S826 T826;

/* [detachable] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]] */
typedef struct S827 T827;

/* [detachable] TUPLE [[attached] ET_ANCESTORS_STATUS_CHECKER] */
typedef struct S829 T829;

/* [detachable] TUPLE [[attached] ET_FLATTENING_STATUS_CHECKER] */
typedef struct S830 T830;

/* [detachable] TUPLE [[attached] ET_INTERFACE_STATUS_CHECKER] */
typedef struct S831 T831;

/* [detachable] TUPLE [[attached] ET_IMPLEMENTATION_STATUS_CHECKER] */
typedef struct S832 T832;

/* [detachable] TUPLE [BOOLEAN] */
typedef struct S833 T833;

/* [detachable] TUPLE [[attached] DS_HASH_SET [[attached] ET_UNIVERSE]] */
typedef struct S834 T834;

/* [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]]] */
typedef struct S837 T837;

/* [detachable] TUPLE [[attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE]] */
typedef struct S841 T841;

/* [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]]] */
typedef struct S842 T842;

/* [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_CLASS], [attached] BOOLEAN]] */
typedef struct S843 T843;

/* [detachable] ET_NONE_GROUP */
typedef struct S844 T844;

/* detachable ET_PARENTHESIS_EXPRESSION */
typedef struct S845 T845;

/* [detachable] ET_REGULAR_MANIFEST_STRING */
typedef struct S848 T848;

/* [detachable] ET_INFIX_FREE_NAME */
typedef struct S849 T849;

/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S851 T851;

/* [detachable] ET_FORMAL_PARAMETER */
typedef struct S852 T852;

/* TYPED_POINTER [[attached] NATURAL_8] */
typedef struct S853 T853;
extern T0* GE_boxed853(T853 a1);
typedef struct Sb853 Tb853;

/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE] */
typedef struct S854 T854;

/* [detachable] UC_STRING_EQUALITY_TESTER */
typedef struct S856 T856;

/* [detachable] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
typedef struct S858 T858;

/* [detachable] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
typedef struct S859 T859;

/* [detachable] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE] */
typedef struct S860 T860;

/* [detachable] UC_UTF8_ROUTINES */
typedef struct S861 T861;

/* [detachable] UC_UTF8_STRING */
typedef struct S862 T862;

/* [detachable] XM_EIFFEL_INPUT_STREAM */
typedef struct S863 T863;

/* [detachable] KL_INTEGER_ROUTINES */
typedef struct S864 T864;

/* [detachable] KL_ARRAY_ROUTINES [[attached] INTEGER_32] */
typedef struct S865 T865;

/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY] */
typedef struct S866 T866;

/* [detachable] TUPLE [[attached] DS_HASH_SET [[attached] ET_LIBRARY]] */
typedef struct S867 T867;

/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE] */
typedef struct S868 T868;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET] */
typedef struct S869 T869;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE] */
typedef struct S870 T870;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT] */
typedef struct S872 T872;

/* [detachable] SPECIAL [[attached] ET_QUERY] */
typedef struct S873 T873;

/* detachable ET_ALIAS_NAME */
typedef struct S874 T874;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_QUERY] */
typedef struct S875 T875;

/* [detachable] SPECIAL [[attached] ET_PROCEDURE] */
typedef struct S876 T876;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PROCEDURE] */
typedef struct S877 T877;

/* [detachable] TYPE [[attached] INTEGER_32] */
#define T882 EIF_TYPE_OBJ

/* [detachable] CONSOLE */
typedef struct S884 T884;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
typedef struct S885 T885;

/* [detachable] SPECIAL [[attached] ET_BASE_TYPE] */
typedef struct S887 T887;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE] */
typedef struct S888 T888;

/* [detachable] INTEGER_OVERFLOW_CHECKER */
typedef struct S889 T889;

/* [detachable] ARRAY [[attached] IMMUTABLE_STRING_32] */
typedef struct S890 T890;

/* [detachable] SPECIAL [[attached] IMMUTABLE_STRING_32] */
typedef struct S891 T891;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT] */
typedef struct S892 T892;

/* [detachable] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT] */
typedef struct S893 T893;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_NOTE_ELEMENT] */
typedef struct S894 T894;

/* detachable C_DATE */
typedef struct S895 T895;

/* [detachable] YY_FILE_BUFFER */
typedef struct S896 T896;

/* [detachable] KL_STDIN_FILE */
typedef struct S897 T897;

/* [detachable] YY_BUFFER */
typedef struct S898 T898;

/* [detachable] DS_ARRAYED_STACK [[attached] INTEGER_32] */
typedef struct S902 T902;

/* [detachable] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S903 T903;

/* [detachable] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S904 T904;

/* [detachable] DS_ARRAYED_STACK [detachable ET_KEYWORD] */
typedef struct S905 T905;

/* [detachable] DS_ARRAYED_STACK [detachable ET_SYMBOL] */
typedef struct S906 T906;

/* [detachable] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
typedef struct S907 T907;

/* [detachable] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST] */
typedef struct S908 T908;

/* [detachable] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S909 T909;

/* [detachable] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST] */
typedef struct S910 T910;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM] */
typedef struct S911 T911;

/* [detachable] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
typedef struct S912 T912;

/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS] */
typedef struct S913 T913;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
typedef struct S914 T914;

/* [detachable] SPECIAL [detachable ET_KEYWORD] */
typedef struct S915 T915;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
typedef struct S916 T916;

/* detachable ET_AGENT_KEYWORD */
typedef struct S917 T917;

/* [detachable] SPECIAL [detachable ET_AGENT_KEYWORD] */
typedef struct S918 T918;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
typedef struct S919 T919;

/* detachable ET_PRECURSOR_KEYWORD */
typedef struct S920 T920;

/* [detachable] SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
typedef struct S921 T921;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
typedef struct S922 T922;

/* [detachable] SPECIAL [detachable ET_SYMBOL] */
typedef struct S923 T923;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
typedef struct S924 T924;

/* [detachable] SPECIAL [detachable ET_POSITION] */
typedef struct S925 T925;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
typedef struct S926 T926;

/* [detachable] SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
typedef struct S928 T928;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
typedef struct S929 T929;

/* [detachable] SPECIAL [detachable ET_BREAK] */
typedef struct S931 T931;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
typedef struct S932 T932;

/* [detachable] SPECIAL [detachable ET_CHARACTER_CONSTANT] */
typedef struct S934 T934;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
typedef struct S935 T935;

/* [detachable] SPECIAL [detachable ET_CURRENT] */
typedef struct S936 T936;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
typedef struct S937 T937;

/* detachable ET_FREE_OPERATOR */
typedef struct S938 T938;

/* [detachable] SPECIAL [detachable ET_FREE_OPERATOR] */
typedef struct S939 T939;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER] */
typedef struct S940 T940;

/* [detachable] SPECIAL [detachable ET_IDENTIFIER] */
typedef struct S941 T941;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
typedef struct S942 T942;

/* [detachable] SPECIAL [detachable ET_INTEGER_CONSTANT] */
typedef struct S944 T944;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
typedef struct S945 T945;

/* detachable ET_KEYWORD_OPERATOR */
typedef struct S946 T946;

/* [detachable] SPECIAL [detachable ET_KEYWORD_OPERATOR] */
typedef struct S947 T947;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
typedef struct S948 T948;

/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING] */
typedef struct S949 T949;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
typedef struct S950 T950;

/* [detachable] SPECIAL [detachable ET_REAL_CONSTANT] */
typedef struct S952 T952;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
typedef struct S953 T953;

/* [detachable] SPECIAL [detachable ET_RESULT] */
typedef struct S954 T954;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
typedef struct S955 T955;

/* detachable ET_RETRY_INSTRUCTION */
typedef struct S956 T956;

/* [detachable] SPECIAL [detachable ET_RETRY_INSTRUCTION] */
typedef struct S957 T957;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
typedef struct S958 T958;

/* detachable ET_SYMBOL_OPERATOR */
typedef struct S959 T959;

/* [detachable] SPECIAL [detachable ET_SYMBOL_OPERATOR] */
typedef struct S960 T960;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_VOID] */
typedef struct S961 T961;

/* detachable ET_VOID */
typedef struct S962 T962;

/* [detachable] SPECIAL [detachable ET_VOID] */
typedef struct S963 T963;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
typedef struct S964 T964;

/* detachable ET_SEMICOLON_SYMBOL */
typedef struct S965 T965;

/* [detachable] SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
typedef struct S966 T966;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
typedef struct S967 T967;

/* [detachable] SPECIAL [detachable ET_BRACKET_SYMBOL] */
typedef struct S968 T968;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
typedef struct S969 T969;

/* detachable ET_QUESTION_MARK_SYMBOL */
typedef struct S970 T970;

/* [detachable] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
typedef struct S971 T971;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
typedef struct S972 T972;

/* detachable ET_ACROSS_EXPRESSION */
typedef struct S973 T973;

/* [detachable] SPECIAL [detachable ET_ACROSS_EXPRESSION] */
typedef struct S974 T974;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
typedef struct S975 T975;

/* detachable ET_ACROSS_INSTRUCTION */
typedef struct S976 T976;

/* [detachable] SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
typedef struct S977 T977;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S978 T978;

/* [detachable] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S979 T979;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S980 T980;

/* [detachable] SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S981 T981;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef struct S982 T982;

/* [detachable] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef struct S983 T983;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S984 T984;

/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S985 T985;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S986 T986;

/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S988 T988;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S989 T989;

/* detachable ET_AGENT_ARGUMENT_OPERAND_LIST */
typedef struct S990 T990;

/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S991 T991;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
typedef struct S992 T992;

/* [detachable] SPECIAL [detachable ET_AGENT_TARGET] */
typedef struct S993 T993;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
typedef struct S994 T994;

/* [detachable] SPECIAL [detachable ET_ALIAS_NAME] */
typedef struct S995 T995;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
typedef struct S996 T996;

/* [detachable] SPECIAL [detachable ET_ASSIGNER] */
typedef struct S998 T998;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
typedef struct S999 T999;

/* detachable ET_BRACKET_EXPRESSION */
typedef struct S1000 T1000;

/* [detachable] SPECIAL [detachable ET_BRACKET_EXPRESSION] */
typedef struct S1001 T1001;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
typedef struct S1002 T1002;

/* detachable ET_CALL_AGENT */
typedef struct S1003 T1003;

/* [detachable] SPECIAL [detachable ET_CALL_AGENT] */
typedef struct S1004 T1004;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
typedef struct S1005 T1005;

/* detachable ET_CHECK_INSTRUCTION */
typedef struct S1006 T1006;

/* [detachable] SPECIAL [detachable ET_CHECK_INSTRUCTION] */
typedef struct S1007 T1007;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
typedef struct S1008 T1008;

/* [detachable] SPECIAL [detachable ET_CHOICE] */
typedef struct S1010 T1010;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
typedef struct S1011 T1011;

/* [detachable] SPECIAL [detachable ET_CHOICE_CONSTANT] */
typedef struct S1013 T1013;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
typedef struct S1014 T1014;

/* [detachable] SPECIAL [detachable ET_CHOICE_ITEM] */
typedef struct S1016 T1016;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
typedef struct S1017 T1017;

/* detachable ET_CHOICE_LIST */
typedef struct S1018 T1018;

/* [detachable] SPECIAL [detachable ET_CHOICE_LIST] */
typedef struct S1019 T1019;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
typedef struct S1020 T1020;

/* [detachable] SPECIAL [detachable ET_CLASS] */
typedef struct S1021 T1021;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
typedef struct S1022 T1022;

/* [detachable] SPECIAL [detachable ET_CLIENT_ITEM] */
typedef struct S1023 T1023;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
typedef struct S1024 T1024;

/* detachable ET_CLIENTS */
typedef struct S1025 T1025;

/* [detachable] SPECIAL [detachable ET_CLIENTS] */
typedef struct S1026 T1026;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
typedef struct S1027 T1027;

/* [detachable] SPECIAL [detachable ET_COMPOUND] */
typedef struct S1028 T1028;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
typedef struct S1029 T1029;

/* [detachable] SPECIAL [detachable ET_CONDITIONAL] */
typedef struct S1031 T1031;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
typedef struct S1032 T1032;

/* [detachable] SPECIAL [detachable ET_CONSTANT] */
typedef struct S1033 T1033;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1034 T1034;

/* [detachable] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1036 T1036;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1037 T1037;

/* detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
typedef struct S1038 T1038;

/* [detachable] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1039 T1039;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
typedef struct S1040 T1040;

/* detachable ET_CONSTRAINT_CREATOR */
typedef struct S1041 T1041;

/* [detachable] SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
typedef struct S1042 T1042;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST] */
typedef struct S1043 T1043;

/* detachable ET_CONSTRAINT_RENAME_LIST */
typedef struct S1044 T1044;

/* [detachable] SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST] */
typedef struct S1045 T1045;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1046 T1046;

/* [detachable] SPECIAL [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1048 T1048;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
typedef struct S1049 T1049;

/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE] */
typedef struct S1051 T1051;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
typedef struct S1052 T1052;

/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
typedef struct S1054 T1054;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
typedef struct S1055 T1055;

/* detachable ET_CONVERT_FEATURE_LIST */
typedef struct S1056 T1056;

/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
typedef struct S1057 T1057;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
typedef struct S1058 T1058;

/* [detachable] SPECIAL [detachable ET_CREATE_EXPRESSION] */
typedef struct S1059 T1059;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
typedef struct S1060 T1060;

/* detachable ET_CREATION_REGION */
typedef struct S1061 T1061;

/* [detachable] SPECIAL [detachable ET_CREATION_REGION] */
typedef struct S1062 T1062;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
typedef struct S1063 T1063;

/* detachable ET_CREATOR */
typedef struct S1064 T1064;

/* [detachable] SPECIAL [detachable ET_CREATOR] */
typedef struct S1065 T1065;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
typedef struct S1066 T1066;

/* detachable ET_CREATOR_LIST */
typedef struct S1067 T1067;

/* [detachable] SPECIAL [detachable ET_CREATOR_LIST] */
typedef struct S1068 T1068;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
typedef struct S1069 T1069;

/* detachable ET_DEBUG_INSTRUCTION */
typedef struct S1070 T1070;

/* [detachable] SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
typedef struct S1071 T1071;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
typedef struct S1072 T1072;

/* detachable ET_ELSEIF_EXPRESSION */
typedef struct S1073 T1073;

/* [detachable] SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
typedef struct S1074 T1074;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
typedef struct S1075 T1075;

/* detachable ET_ELSEIF_EXPRESSION_LIST */
typedef struct S1076 T1076;

/* [detachable] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
typedef struct S1077 T1077;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
typedef struct S1078 T1078;

/* detachable ET_ELSEIF_PART */
typedef struct S1079 T1079;

/* [detachable] SPECIAL [detachable ET_ELSEIF_PART] */
typedef struct S1080 T1080;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
typedef struct S1081 T1081;

/* detachable ET_ELSEIF_PART_LIST */
typedef struct S1082 T1082;

/* [detachable] SPECIAL [detachable ET_ELSEIF_PART_LIST] */
typedef struct S1083 T1083;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
typedef struct S1084 T1084;

/* [detachable] SPECIAL [detachable ET_EXPORT] */
typedef struct S1086 T1086;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
typedef struct S1087 T1087;

/* [detachable] SPECIAL [detachable ET_EXPORT_LIST] */
typedef struct S1088 T1088;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
typedef struct S1089 T1089;

/* [detachable] SPECIAL [detachable ET_EXPRESSION] */
typedef struct S1090 T1090;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
typedef struct S1091 T1091;

/* [detachable] SPECIAL [detachable ET_EXPRESSION_ITEM] */
typedef struct S1092 T1092;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
typedef struct S1093 T1093;

/* [detachable] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
typedef struct S1094 T1094;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
typedef struct S1095 T1095;

/* [detachable] SPECIAL [detachable ET_EXTERNAL_ALIAS] */
typedef struct S1097 T1097;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
typedef struct S1098 T1098;

/* detachable ET_FEATURE_CLAUSE */
typedef struct S1099 T1099;

/* [detachable] SPECIAL [detachable ET_FEATURE_CLAUSE] */
typedef struct S1100 T1100;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
typedef struct S1101 T1101;

/* detachable ET_FEATURE_CLAUSE_LIST */
typedef struct S1102 T1102;

/* [detachable] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
typedef struct S1103 T1103;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
typedef struct S1104 T1104;

/* detachable ET_FEATURE_EXPORT */
typedef struct S1105 T1105;

/* [detachable] SPECIAL [detachable ET_FEATURE_EXPORT] */
typedef struct S1106 T1106;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
typedef struct S1107 T1107;

/* [detachable] SPECIAL [detachable ET_FEATURE_NAME] */
typedef struct S1108 T1108;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
typedef struct S1109 T1109;

/* [detachable] SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
typedef struct S1111 T1111;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
typedef struct S1112 T1112;

/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT] */
typedef struct S1113 T1113;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1114 T1114;

/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1116 T1116;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1117 T1117;

/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1118 T1118;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
typedef struct S1119 T1119;

/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER] */
typedef struct S1120 T1120;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1121 T1121;

/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1123 T1123;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
typedef struct S1124 T1124;

/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
typedef struct S1125 T1125;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
typedef struct S1126 T1126;

/* detachable ET_IF_EXPRESSION */
typedef struct S1127 T1127;

/* [detachable] SPECIAL [detachable ET_IF_EXPRESSION] */
typedef struct S1128 T1128;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
typedef struct S1129 T1129;

/* detachable ET_IF_INSTRUCTION */
typedef struct S1130 T1130;

/* [detachable] SPECIAL [detachable ET_IF_INSTRUCTION] */
typedef struct S1131 T1131;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
typedef struct S1132 T1132;

/* detachable ET_INDEXING_LIST */
typedef struct S1133 T1133;

/* [detachable] SPECIAL [detachable ET_INDEXING_LIST] */
typedef struct S1134 T1134;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
typedef struct S1135 T1135;

/* [detachable] SPECIAL [detachable ET_INDEXING_ITEM] */
typedef struct S1137 T1137;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
typedef struct S1138 T1138;

/* [detachable] SPECIAL [detachable ET_INDEXING_TERM] */
typedef struct S1139 T1139;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
typedef struct S1140 T1140;

/* [detachable] SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
typedef struct S1142 T1142;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
typedef struct S1143 T1143;

/* detachable ET_INDEXING_TERM_LIST */
typedef struct S1144 T1144;

/* [detachable] SPECIAL [detachable ET_INDEXING_TERM_LIST] */
typedef struct S1145 T1145;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
typedef struct S1146 T1146;

/* [detachable] SPECIAL [detachable ET_INLINE_AGENT] */
typedef struct S1147 T1147;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
typedef struct S1148 T1148;

/* detachable ET_INSPECT_INSTRUCTION */
typedef struct S1149 T1149;

/* [detachable] SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
typedef struct S1150 T1150;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
typedef struct S1151 T1151;

/* [detachable] SPECIAL [detachable ET_INSTRUCTION] */
typedef struct S1153 T1153;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
typedef struct S1154 T1154;

/* detachable ET_INVARIANTS */
typedef struct S1155 T1155;

/* [detachable] SPECIAL [detachable ET_INVARIANTS] */
typedef struct S1156 T1156;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1157 T1157;

/* [detachable] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1158 T1158;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
typedef struct S1159 T1159;

/* [detachable] SPECIAL [detachable ET_LIKE_TYPE] */
typedef struct S1161 T1161;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
typedef struct S1162 T1162;

/* detachable ET_LOCAL_VARIABLE */
typedef struct S1163 T1163;

/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE] */
typedef struct S1164 T1164;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1165 T1165;

/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1167 T1167;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S1168 T1168;

/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S1169 T1169;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
typedef struct S1170 T1170;

/* detachable ET_LOOP_INVARIANTS */
typedef struct S1171 T1171;

/* [detachable] SPECIAL [detachable ET_LOOP_INVARIANTS] */
typedef struct S1172 T1172;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
typedef struct S1173 T1173;

/* detachable ET_MANIFEST_ARRAY */
typedef struct S1174 T1174;

/* [detachable] SPECIAL [detachable ET_MANIFEST_ARRAY] */
typedef struct S1175 T1175;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
typedef struct S1176 T1176;

/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
typedef struct S1178 T1178;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
typedef struct S1179 T1179;

/* detachable ET_MANIFEST_STRING_LIST */
typedef struct S1180 T1180;

/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
typedef struct S1181 T1181;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
typedef struct S1182 T1182;

/* [detachable] SPECIAL [detachable ET_MANIFEST_TUPLE] */
typedef struct S1183 T1183;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
typedef struct S1184 T1184;

/* [detachable] SPECIAL [detachable ET_OBSOLETE] */
typedef struct S1186 T1186;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1187 T1187;

/* detachable ET_PARENTHESIZED_EXPRESSION */
typedef struct S1188 T1188;

/* [detachable] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1189 T1189;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
typedef struct S1190 T1190;

/* [detachable] SPECIAL [detachable ET_PARENT] */
typedef struct S1191 T1191;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
typedef struct S1192 T1192;

/* detachable ET_PARENT_CLAUSE_LIST */
typedef struct S1193 T1193;

/* [detachable] SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
typedef struct S1194 T1194;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
typedef struct S1195 T1195;

/* [detachable] SPECIAL [detachable ET_PARENT_ITEM] */
typedef struct S1196 T1196;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
typedef struct S1197 T1197;

/* [detachable] SPECIAL [detachable ET_PARENT_LIST] */
typedef struct S1198 T1198;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
typedef struct S1199 T1199;

/* detachable ET_POSTCONDITIONS */
typedef struct S1200 T1200;

/* [detachable] SPECIAL [detachable ET_POSTCONDITIONS] */
typedef struct S1201 T1201;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
typedef struct S1202 T1202;

/* [detachable] SPECIAL [detachable ET_PRECONDITIONS] */
typedef struct S1203 T1203;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
typedef struct S1204 T1204;

/* [detachable] SPECIAL [detachable ET_PROCEDURE] */
typedef struct S1205 T1205;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S1206 T1206;

/* [detachable] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S1208 T1208;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
typedef struct S1209 T1209;

/* [detachable] SPECIAL [detachable ET_QUERY] */
typedef struct S1210 T1210;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
typedef struct S1211 T1211;

/* [detachable] SPECIAL [detachable ET_RENAME_ITEM] */
typedef struct S1213 T1213;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
typedef struct S1214 T1214;

/* [detachable] SPECIAL [detachable ET_RENAME_LIST] */
typedef struct S1215 T1215;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
typedef struct S1216 T1216;

/* detachable ET_STATIC_CALL_EXPRESSION */
typedef struct S1217 T1217;

/* [detachable] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
typedef struct S1218 T1218;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
typedef struct S1219 T1219;

/* detachable ET_STRIP_EXPRESSION */
typedef struct S1220 T1220;

/* [detachable] SPECIAL [detachable ET_STRIP_EXPRESSION] */
typedef struct S1221 T1221;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
typedef struct S1222 T1222;

/* [detachable] SPECIAL [detachable ET_TYPE] */
typedef struct S1223 T1223;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT] */
typedef struct S1224 T1224;

/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT] */
typedef struct S1226 T1226;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM] */
typedef struct S1227 T1227;

/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM] */
typedef struct S1229 T1229;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST] */
typedef struct S1230 T1230;

/* detachable ET_TYPE_CONSTRAINT_LIST */
typedef struct S1231 T1231;

/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST] */
typedef struct S1232 T1232;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
typedef struct S1233 T1233;

/* [detachable] SPECIAL [detachable ET_TYPE_ITEM] */
typedef struct S1235 T1235;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
typedef struct S1236 T1236;

/* [detachable] SPECIAL [detachable ET_TYPE_LIST] */
typedef struct S1238 T1238;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
typedef struct S1239 T1239;

/* detachable ET_VARIANT */
typedef struct S1240 T1240;

/* [detachable] SPECIAL [detachable ET_VARIANT] */
typedef struct S1241 T1241;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
typedef struct S1242 T1242;

/* detachable ET_WHEN_PART */
typedef struct S1243 T1243;

/* [detachable] SPECIAL [detachable ET_WHEN_PART] */
typedef struct S1244 T1244;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
typedef struct S1245 T1245;

/* detachable ET_WHEN_PART_LIST */
typedef struct S1246 T1246;

/* [detachable] SPECIAL [detachable ET_WHEN_PART_LIST] */
typedef struct S1247 T1247;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
typedef struct S1248 T1248;

/* [detachable] SPECIAL [detachable ET_WRITABLE] */
typedef struct S1249 T1249;

/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS] */
typedef struct S1250 T1250;

/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS] */
typedef struct S1251 T1251;

/* [detachable] ET_PARENT_CHECKER1 */
typedef struct S1252 T1252;

/* [detachable] ET_FORMAL_PARAMETER_CHECKER1 */
typedef struct S1253 T1253;

/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME] */
typedef struct S1254 T1254;

/* [detachable] ET_FEATURE_NAME_TESTER */
typedef struct S1255 T1255;

/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME] */
typedef struct S1257 T1257;

/* [detachable] ET_ALIAS_NAME_TESTER */
typedef struct S1258 T1258;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST] */
typedef struct S1260 T1260;

/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS] */
typedef struct S1261 T1261;

/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1262 T1262;

/* [detachable] ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1263 T1263;

/* [detachable] ET_IDENTIFIER_TYPE_RESOLVER */
typedef struct S1264 T1264;

/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
typedef struct S1265 T1265;

/* [detachable] ET_ANCHORED_TYPE_CHECKER */
typedef struct S1266 T1266;

/* [detachable] ET_SIGNATURE_CHECKER */
typedef struct S1267 T1267;

/* [detachable] ET_PARENT_CHECKER2 */
typedef struct S1268 T1268;

/* [detachable] ET_FORMAL_PARAMETER_CHECKER2 */
typedef struct S1269 T1269;

/* [detachable] ET_BUILTIN_FEATURE_CHECKER */
typedef struct S1270 T1270;

/* [detachable] ET_PRECURSOR_CHECKER */
typedef struct S1271 T1271;

/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32] */
typedef struct S1272 T1272;

/* [detachable] DS_HASH_SET [[attached] ET_CLASS] */
typedef struct S1273 T1273;

/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
typedef struct S1274 T1274;

/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
typedef struct S1275 T1275;

/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME] */
typedef struct S1276 T1276;

/* [detachable] ET_CALL_NAME_TESTER */
typedef struct S1277 T1277;

/* [detachable] ET_RENAME */
typedef struct S1282 T1282;

/* [detachable] ET_PARENT_CHECKER3 */
typedef struct S1283 T1283;

/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE] */
typedef struct S1284 T1284;

/* [detachable] DS_HASH_SET [[attached] ET_QUERY] */
typedef struct S1285 T1285;

/* [detachable] ET_SUPPLIER_BUILDER */
typedef struct S1286 T1286;

/* detachable ET_PARENT_FEATURE */
typedef struct S1289 T1289;

/* [detachable] ET_INHERITED_FEATURE */
typedef struct S1290 T1290;

/* [detachable] SPECIAL [[attached] ET_CLASS] */
typedef struct S1291 T1291;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLASS] */
typedef struct S1292 T1292;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS] */
typedef struct S1293 T1293;

/* [detachable] DS_ARRAYED_STACK [[attached] YY_BUFFER] */
typedef struct S1294 T1294;

/* [detachable] UT_SYNTAX_ERROR */
typedef struct S1295 T1295;

/* [detachable] UT_TOO_MANY_INCLUDES_ERROR */
typedef struct S1296 T1296;

/* detachable ET_DYNAMIC_TARGET_LIST */
typedef struct S1298 T1298;

/* [detachable] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]] */
typedef struct S1299 T1299;

/* [detachable] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]] */
typedef struct S1300 T1300;

/* [detachable] SPECIAL [[attached] NATIVE_STRING] */
typedef struct S1301 T1301;

/* [detachable] ARRAY [detachable STRING_8] */
typedef struct S1302 T1302;

/* [detachable] XM_EIFFEL_CHARACTER_ENTITY */
typedef struct S1303 T1303;

/* detachable DS_BILINKABLE [[attached] XM_POSITION] */
typedef struct S1305 T1305;

/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] XM_POSITION] */
typedef struct S1306 T1306;

/* detachable DS_LINKABLE [[attached] XM_EIFFEL_SCANNER] */
typedef struct S1307 T1307;

/* [detachable] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF] */
typedef struct S1308 T1308;

/* detachable DS_HASH_TABLE_CURSOR [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8] */
typedef struct S1311 T1311;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF] */
typedef struct S1312 T1312;

/* detachable KL_EQUALITY_TESTER [[attached] XM_EIFFEL_PARSER_NAME] */
typedef struct S1315 T1315;

/* [detachable] DS_HASH_SET_CURSOR [[attached] XM_EIFFEL_PARSER_NAME] */
typedef struct S1316 T1316;

/* [detachable] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT] */
typedef struct S1317 T1317;

/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1318 T1318;

/* detachable DS_BILINKABLE [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1319 T1319;

/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] STRING_8] */
typedef struct S1320 T1320;

/* detachable DS_BILINKABLE [[attached] STRING_8] */
typedef struct S1321 T1321;

/* [detachable] XM_NAMESPACE_RESOLVER_CONTEXT */
typedef struct S1322 T1322;

/* [detachable] DS_LINKED_QUEUE [detachable STRING_8] */
typedef struct S1325 T1325;

/* [detachable] DS_LINKED_QUEUE [[attached] STRING_8] */
typedef struct S1326 T1326;

/* detachable KL_EQUALITY_TESTER [[attached] XM_NAMESPACE] */
typedef struct S1327 T1327;

/* [detachable] DS_HASH_SET_CURSOR [[attached] XM_NAMESPACE] */
typedef struct S1328 T1328;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE] */
typedef struct S1329 T1329;

/* [detachable] SPECIAL [[attached] XM_NAMESPACE] */
typedef struct S1330 T1330;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLUSTER] */
typedef struct S1331 T1331;

/* [detachable] SPECIAL [[attached] ET_PARENT_ITEM] */
typedef struct S1333 T1333;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_ITEM] */
typedef struct S1334 T1334;

/* [detachable] ET_BRACED_TYPE_LIST */
typedef struct S1335 T1335;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS] */
typedef struct S1336 T1336;

/* [detachable] SPECIAL [[attached] ET_ADAPTED_LIBRARY] */
typedef struct S1337 T1337;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY] */
typedef struct S1338 T1338;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_LIBRARY] */
typedef struct S1339 T1339;

/* detachable DS_LINKABLE [[attached] XM_DOCUMENT_NODE] */
typedef struct S1340 T1340;

/* [detachable] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1342 T1342;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1343 T1343;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1344 T1344;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S1345 T1345;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32] */
typedef struct S1347 T1347;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S1348 T1348;

/* [detachable] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]] */
typedef struct S1349 T1349;

/* [detachable] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]] */
typedef struct S1350 T1350;

/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [[attached] INTEGER_32]] */
typedef struct S1351 T1351;

/* [detachable] SPECIAL [[attached] ET_SYSTEM_PROCESSOR] */
typedef struct S1353 T1353;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_SYSTEM_PROCESSOR] */
typedef struct S1354 T1354;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_SYSTEM_PROCESSOR] */
typedef struct S1355 T1355;

/* [detachable] THREAD_ATTRIBUTES */
typedef struct S1356 T1356;

/* [detachable] CELL [[attached] BOOLEAN] */
typedef struct S1357 T1357;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_CLASS] */
typedef struct S1359 T1359;

/* [detachable] SPECIAL [[attached] ET_ADAPTED_CLASS] */
typedef struct S1361 T1361;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_CLASS] */
typedef struct S1362 T1362;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE] */
typedef struct S1363 T1363;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY] */
typedef struct S1364 T1364;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_NAMED_OBJECT_TEST] */
typedef struct S1365 T1365;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ACROSS_COMPONENT] */
typedef struct S1366 T1366;

/* [detachable] DS_HASH_SET_CURSOR [[attached] INTEGER_32] */
typedef struct S1367 T1367;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] NATURAL_8] */
typedef struct S1371 T1371;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] NATURAL_8, [attached] ET_CLASS_NAME] */
typedef struct S1372 T1372;

/* [detachable] KL_CHARACTER_BUFFER */
typedef struct S1373 T1373;

/* [detachable] UT_TRISTATE */
typedef struct S1375 T1375;

/* [detachable] KL_AGENT_ROUTINES [[attached] ANY] */
typedef struct S1376 T1376;

/* [detachable] TUPLE [[attached] UT_TRISTATE] */
typedef struct S1377 T1377;

/* [detachable] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ANY], [attached] PROCEDURE [[attached] TUPLE]] */
typedef struct S1378 T1378;

/* [detachable] PREDICATE [[attached] TUPLE [[attached] ET_MASTER_CLASS]] */
typedef struct S1379 T1379;

/* [detachable] PREDICATE [[attached] TUPLE] */
typedef struct S1380 T1380;

/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE] */
typedef struct S1382 T1382;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE] */
typedef struct S1383 T1383;

/* [detachable] TUPLE [[attached] ET_ECF_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S1384 T1384;

/* [detachable] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE] */
typedef struct S1385 T1385;

/* [detachable] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]] */
typedef struct S1386 T1386;

/* [detachable] TUPLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE]] */
typedef struct S1387 T1387;

/* [detachable] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE], [attached] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]]] */
typedef struct S1388 T1388;

/* [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
typedef struct S1390 T1390;

/* [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_MASTER_CLASS], [attached] BOOLEAN]] */
typedef struct S1391 T1391;

/* [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_MASTER_CLASS], [attached] BOOLEAN], [attached] FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
typedef struct S1392 T1392;

/* [detachable] ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
typedef struct S1393 T1393;

/* TYPED_POINTER [[attached] NATURAL_16] */
typedef struct S1395 T1395;
extern T0* GE_boxed1395(T1395 a1);
typedef struct Sb1395 Tb1395;

/* [detachable] XM_COMMENT */
typedef struct S1396 T1396;

/* [detachable] XM_PROCESSING_INSTRUCTION */
typedef struct S1397 T1397;

/* [detachable] XM_CHARACTER_DATA */
typedef struct S1398 T1398;

/* [detachable] ET_LIKE_N */
typedef struct S1401 T1401;

/* [detachable] KL_STRING_INPUT_STREAM */
typedef struct S1404 T1404;

/* detachable ET_OBJECT_TEST_LIST */
typedef struct S1407 T1407;

/* detachable ET_ACROSS_COMPONENT_LIST */
typedef struct S1408 T1408;

/* detachable ET_C3_CHARACTER_CONSTANT */
typedef struct S1409 T1409;

/* detachable ET_VERBATIM_STRING */
typedef struct S1410 T1410;

/* detachable ET_SPECIAL_MANIFEST_STRING */
typedef struct S1411 T1411;

/* detachable ET_UNDERSCORED_INTEGER_CONSTANT */
typedef struct S1412 T1412;

/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT */
typedef struct S1413 T1413;

/* detachable ET_OCTAL_INTEGER_CONSTANT */
typedef struct S1414 T1414;

/* detachable ET_BINARY_INTEGER_CONSTANT */
typedef struct S1415 T1415;

/* detachable ET_REGULAR_REAL_CONSTANT */
typedef struct S1416 T1416;

/* detachable ET_UNDERSCORED_REAL_CONSTANT */
typedef struct S1417 T1417;

/* detachable ET_TRUE_CONSTANT */
typedef struct S1419 T1419;

/* detachable ET_FALSE_CONSTANT */
typedef struct S1420 T1420;

/* detachable ET_C1_CHARACTER_CONSTANT */
typedef struct S1421 T1421;

/* detachable ET_C2_CHARACTER_CONSTANT */
typedef struct S1422 T1422;

/* detachable ET_TAGGED_INDEXING */
typedef struct S1424 T1424;

/* detachable ET_INDEXING */
typedef struct S1425 T1425;

/* detachable ET_CUSTOM_ATTRIBUTE */
typedef struct S1426 T1426;

/* detachable ET_CONSTRAINED_FORMAL_PARAMETER */
typedef struct S1427 T1427;

/* detachable ET_TYPE_RENAME_CONSTRAINT */
typedef struct S1428 T1428;

/* detachable ET_CONSTRAINT_NAMED_TYPE */
typedef struct S1429 T1429;

/* detachable ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
typedef struct S1430 T1430;

/* detachable ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S1431 T1431;

/* detachable ET_ALL_EXPORT */
typedef struct S1432 T1432;

/* detachable ET_CONVERT_FUNCTION */
typedef struct S1434 T1434;

/* detachable ET_CONVERT_PROCEDURE */
typedef struct S1435 T1435;

/* detachable ET_DO_FUNCTION */
typedef struct S1437 T1437;

/* detachable ET_ONCE_FUNCTION */
typedef struct S1438 T1438;

/* detachable ET_DEFERRED_FUNCTION */
typedef struct S1439 T1439;

/* detachable ET_ONCE_PROCEDURE */
typedef struct S1441 T1441;

/* detachable ET_EXTERNAL_PROCEDURE */
typedef struct S1442 T1442;

/* detachable ET_PREFIX_NAME */
typedef struct S1443 T1443;

/* detachable ET_PREFIX_FREE_NAME */
typedef struct S1444 T1444;

/* detachable ET_INFIX_NAME */
typedef struct S1445 T1445;

/* detachable ET_ALIASED_FEATURE_NAME */
typedef struct S1446 T1446;

/* detachable ET_ALIAS_FREE_NAME */
typedef struct S1447 T1447;

/* detachable ET_CLASS_ASSERTION */
typedef struct S1450 T1450;

/* detachable ET_LABELED_ACTUAL_PARAMETER */
typedef struct S1451 T1451;

/* detachable ET_LIKE_FEATURE */
typedef struct S1453 T1453;

/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE */
typedef struct S1454 T1454;

/* detachable ET_QUALIFIED_LIKE_TYPE */
typedef struct S1455 T1455;

/* detachable ET_ASSIGNER_INSTRUCTION */
typedef struct S1456 T1456;

/* detachable ET_ASSIGNMENT */
typedef struct S1457 T1457;

/* detachable ET_ASSIGNMENT_ATTEMPT */
typedef struct S1458 T1458;

/* detachable ET_LOOP_INSTRUCTION */
typedef struct S1459 T1459;

/* detachable ET_BANG_INSTRUCTION */
typedef struct S1461 T1461;

/* detachable ET_CREATE_INSTRUCTION */
typedef struct S1462 T1462;

/* detachable ET_CHOICE_RANGE */
typedef struct S1463 T1463;

/* detachable ET_PRECURSOR_INSTRUCTION */
typedef struct S1464 T1464;

/* detachable ET_STATIC_CALL_INSTRUCTION */
typedef struct S1466 T1466;

/* detachable ET_PRECURSOR_EXPRESSION */
typedef struct S1467 T1467;

/* detachable ET_FEATURE_ADDRESS */
typedef struct S1468 T1468;

/* detachable ET_CURRENT_ADDRESS */
typedef struct S1469 T1469;

/* detachable ET_RESULT_ADDRESS */
typedef struct S1470 T1470;

/* detachable ET_EXPRESSION_ADDRESS */
typedef struct S1471 T1471;

/* detachable ET_INFIX_EXPRESSION */
typedef struct S1472 T1472;

/* detachable ET_INFIX_AND_THEN_OPERATOR */
typedef struct S1473 T1473;

/* detachable ET_INFIX_OR_ELSE_OPERATOR */
typedef struct S1474 T1474;

/* detachable ET_MANIFEST_TYPE */
typedef struct S1475 T1475;

/* detachable ET_PREFIX_EXPRESSION */
typedef struct S1476 T1476;

/* detachable ET_OLD_EXPRESSION */
typedef struct S1477 T1477;

/* detachable ET_OLD_OBJECT_TEST */
typedef struct S1478 T1478;

/* detachable ET_ONCE_MANIFEST_STRING */
typedef struct S1479 T1479;

/* detachable ET_DO_FUNCTION_INLINE_AGENT */
typedef struct S1480 T1480;

/* detachable ET_ONCE_FUNCTION_INLINE_AGENT */
typedef struct S1481 T1481;

/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT */
typedef struct S1482 T1482;

/* detachable ET_DO_PROCEDURE_INLINE_AGENT */
typedef struct S1483 T1483;

/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT */
typedef struct S1484 T1484;

/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
typedef struct S1485 T1485;

/* detachable ET_AGENT_OPEN_TARGET */
typedef struct S1486 T1486;

/* detachable ET_AGENT_TYPED_OPEN_ARGUMENT */
typedef struct S1487 T1487;

/* detachable ET_TAGGED_ASSERTION */
typedef struct S1490 T1490;

/* [detachable] ET_FILE_POSITION */
typedef struct S1492 T1492;

/* [detachable] DS_QUICK_SORTER [[attached] ET_QUERY] */
typedef struct S1494 T1494;

/* [detachable] DS_QUICK_SORTER [[attached] ET_PROCEDURE] */
typedef struct S1495 T1495;

/* [detachable] ET_REDECLARED_FEATURE */
typedef struct S1497 T1497;

/* [detachable] HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
typedef struct S1499 T1499;

/* [detachable] TUPLE [[attached] ET_MASTER_CLASS, [attached] ET_SYSTEM_PROCESSOR] */
typedef struct S1501 T1501;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER] */
typedef struct S1503 T1503;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1504 T1504;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1505 T1505;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE] */
typedef struct S1506 T1506;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1507 T1507;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1508 T1508;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1509 T1509;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1510 T1510;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE] */
typedef struct S1511 T1511;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1512 T1512;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1513 T1513;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION] */
typedef struct S1514 T1514;

/* [detachable] SPECIAL [[attached] ET_ECF_ACTION] */
typedef struct S1515 T1515;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ACTION] */
typedef struct S1516 T1516;

/* detachable DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1517 T1517;

/* [detachable] SPECIAL [[attached] ET_ECF_OPTIONS] */
typedef struct S1518 T1518;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS] */
typedef struct S1521 T1521;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
typedef struct S1522 T1522;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS] */
typedef struct S1523 T1523;

/* [detachable] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS] */
typedef struct S1524 T1524;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_VISIBLE_CLASS] */
typedef struct S1525 T1525;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS] */
typedef struct S1526 T1526;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM] */
typedef struct S1527 T1527;

/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S1528 T1528;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S1529 T1529;

/* [detachable] SPECIAL [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S1530 T1530;

/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE] */
typedef struct S1532 T1532;

/* [detachable] SPECIAL [[attached] ET_UNIVERSE] */
typedef struct S1533 T1533;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE] */
typedef struct S1535 T1535;

/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_INTERNAL_UNIVERSE] */
typedef struct S1536 T1536;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE] */
typedef struct S1538 T1538;

/* [detachable] SPECIAL [[attached] ET_INTERNAL_UNIVERSE] */
typedef struct S1539 T1539;

/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER1 */
typedef struct S1540 T1540;

/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER2 */
typedef struct S1541 T1541;

/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
typedef struct S1542 T1542;

/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER3 */
typedef struct S1543 T1543;

/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS] */
typedef struct S1544 T1544;

/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1545 T1545;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1546 T1546;

/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1547 T1547;

/* [detachable] DS_LINKED_QUEUE [[attached] CHARACTER_8] */
typedef struct S1551 T1551;

/* [detachable] UC_UTF16_ROUTINES */
typedef struct S1552 T1552;

/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_LIBRARY] */
typedef struct S1553 T1553;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY] */
typedef struct S1554 T1554;

/* [detachable] SPECIAL [[attached] ET_LIBRARY] */
typedef struct S1555 T1555;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET] */
typedef struct S1556 T1556;

/* [detachable] SPECIAL [[attached] ET_ADAPTED_UNIVERSE] */
typedef struct S1557 T1557;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE] */
typedef struct S1558 T1558;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_UNIVERSE] */
typedef struct S1559 T1559;

/* [detachable] SPECIAL [[attached] ET_ECF_TARGET_PARENT] */
typedef struct S1560 T1560;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT] */
typedef struct S1561 T1561;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET_PARENT] */
typedef struct S1562 T1562;

/* [detachable] SPECIAL [[attached] NATURAL_64] */
typedef struct S1563 T1563;

/* [detachable] SPECIAL [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1564 T1564;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1565 T1565;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST_LIST] */
typedef struct S1566 T1566;

/* [detachable] SPECIAL [[attached] ET_OBJECT_TEST_LIST] */
typedef struct S1567 T1567;

/* [detachable] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S1568 T1568;

/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S1569 T1569;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT_LIST] */
typedef struct S1570 T1570;

/* [detachable] SPECIAL [[attached] ET_ACROSS_COMPONENT_LIST] */
typedef struct S1571 T1571;

/* [detachable] SPECIAL [[attached] ET_ASSERTION_ITEM] */
typedef struct S1572 T1572;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM] */
typedef struct S1573 T1573;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ASSERTION_ITEM] */
typedef struct S1574 T1574;

/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1575 T1575;

/* [detachable] SPECIAL [[attached] ET_NAMED_CLASS] */
typedef struct S1576 T1576;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS] */
typedef struct S1578 T1578;

/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS] */
typedef struct S1580 T1580;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS] */
typedef struct S1581 T1581;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_BASE_TYPE_CONSTRAINT] */
typedef struct S1584 T1584;

/* [detachable] DS_ARRAYED_LIST [[attached] NATURAL_32] */
typedef struct S1585 T1585;

/* [detachable] SPECIAL [[attached] NATURAL_32] */
typedef struct S1586 T1586;

/* [detachable] ET_BASE_TYPE_CONSTRAINT_LIST */
typedef struct S1587 T1587;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME] */
typedef struct S1588 T1588;

/* [detachable] SPECIAL [[attached] ET_FLATTENED_FEATURE] */
typedef struct S1589 T1589;

/* [detachable] SPECIAL [[attached] ET_FEATURE_NAME] */
typedef struct S1592 T1592;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE] */
typedef struct S1593 T1593;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME] */
typedef struct S1594 T1594;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ALIAS_NAME] */
typedef struct S1596 T1596;

/* [detachable] SPECIAL [[attached] ET_ALIAS_NAME] */
typedef struct S1597 T1597;

/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME] */
typedef struct S1598 T1598;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST] */
typedef struct S1599 T1599;

/* [detachable] SPECIAL [[attached] ET_CLIENT_LIST] */
typedef struct S1600 T1600;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST] */
typedef struct S1601 T1601;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS] */
typedef struct S1603 T1603;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT] */
typedef struct S1604 T1604;

/* [detachable] SPECIAL [[attached] ET_CLIENT] */
typedef struct S1605 T1605;

/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME] */
typedef struct S1606 T1606;

/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME] */
typedef struct S1607 T1607;

/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME] */
typedef struct S1608 T1608;

/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32] */
typedef struct S1609 T1609;

/* [detachable] ET_REPLICATED_FEATURE */
typedef struct S1611 T1611;

/* [detachable] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE] */
typedef struct S1612 T1612;

/* [detachable] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE] */
typedef struct S1613 T1613;

/* [detachable] ET_DOTNET_SIGNATURE_TESTER */
typedef struct S1614 T1614;

/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE] */
typedef struct S1615 T1615;

/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE] */
typedef struct S1617 T1617;

/* [detachable] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE] */
typedef struct S1619 T1619;

/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE] */
typedef struct S1620 T1620;

/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE] */
typedef struct S1621 T1621;

/* [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE] */
typedef struct S1622 T1622;

/* detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE] */
typedef struct S1623 T1623;

/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8] */
typedef struct S1624 T1624;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32] */
typedef struct S1625 T1625;

/* [detachable] TYPE [[attached] ET_FEATURE] */
#define T1626 EIF_TYPE_OBJ

/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_CLASS] */
typedef struct S1628 T1628;

/* [detachable] TYPE [[attached] ET_CLASS] */
#define T1629 EIF_TYPE_OBJ

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME] */
typedef struct S1630 T1630;

/* [detachable] SPECIAL [[attached] ET_RENAME] */
typedef struct S1631 T1631;

/* [detachable] SPECIAL [[attached] ET_CALL_NAME] */
typedef struct S1632 T1632;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_RENAME] */
typedef struct S1635 T1635;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME] */
typedef struct S1636 T1636;

/* [detachable] TYPE [[attached] ET_RENAME] */
#define T1637 EIF_TYPE_OBJ

/* [detachable] TYPE [[attached] ET_CALL_NAME] */
#define T1638 EIF_TYPE_OBJ

/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE] */
typedef struct S1639 T1639;

/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_QUERY] */
typedef struct S1640 T1640;

/* [detachable] SPECIAL [[attached] YY_BUFFER] */
typedef struct S1641 T1641;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] YY_BUFFER] */
typedef struct S1642 T1642;

/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TARGET] */
typedef struct S1643 T1643;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET] */
typedef struct S1644 T1644;

/* [detachable] TYPE [detachable STRING_8] */
#define T1645 EIF_TYPE_OBJ

/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ELEMENT_CONTENT] */
typedef struct S1646 T1646;

/* detachable DS_BILINKABLE [[attached] XM_DTD_ELEMENT_CONTENT] */
typedef struct S1647 T1647;

/* [detachable] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
typedef struct S1649 T1649;

/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
typedef struct S1650 T1650;

/* detachable DS_LINKABLE [detachable STRING_8] */
typedef struct S1651 T1651;

/* [detachable] SPECIAL [[attached] ET_CLUSTER] */
typedef struct S1652 T1652;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER] */
typedef struct S1653 T1653;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLUSTER] */
typedef struct S1654 T1654;

/* [detachable] SPECIAL [[attached] ET_TYPE_ITEM] */
typedef struct S1655 T1655;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE_ITEM] */
typedef struct S1656 T1656;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS] */
typedef struct S1657 T1657;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S1658 T1658;

/* [detachable] TUPLE [[attached] ET_ECF_CLUSTER] */
typedef struct S1659 T1659;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_CLUSTER]] */
typedef struct S1660 T1660;

/* [detachable] TUPLE [[attached] ET_ECF_TARGET, [attached] STRING_8] */
typedef struct S1661 T1661;

/* [detachable] TUPLE [[attached] ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1663 T1663;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_ADAPTED_LIBRARY]] */
typedef struct S1664 T1664;

/* [detachable] TUPLE [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1665 T1665;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY]] */
typedef struct S1666 T1666;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] STRING_8]] */
typedef struct S1669 T1669;

/* [detachable] TUPLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
typedef struct S1670 T1670;

/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8] */
typedef struct S1671 T1671;

/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8] */
typedef struct S1672 T1672;

/* detachable DS_LINKABLE [[attached] XM_ELEMENT_NODE] */
typedef struct S1677 T1677;

/* detachable ET_CONSTRAINT_GENERIC_NAMED_TYPE */
typedef struct S1681 T1681;

/* detachable ET_UNQUALIFIED_CALL_INSTRUCTION */
typedef struct S1682 T1682;

/* detachable ET_CLUSTER_DEPENDENCE_CONSTRAINT */
typedef struct S1684 T1684;

/* [detachable] ET_SEEDED_QUERY_COMPARATOR */
typedef struct S1685 T1685;

/* [detachable] ET_SEEDED_PROCEDURE_COMPARATOR */
typedef struct S1688 T1688;

/* [detachable] TUPLE [[attached] ET_CLIENT_LIST] */
typedef struct S1692 T1692;

/* [detachable] ET_FORMAL_COMMA_ARGUMENT */
typedef struct S1693 T1693;

/* [detachable] ET_LOCAL_COMMA_VARIABLE */
typedef struct S1694 T1694;

/* [detachable] ET_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S1695 T1695;

/* [detachable] ET_KEYWORD_EXPRESSION */
typedef struct S1697 T1697;

/* [detachable] SPECIAL [[attached] ET_RENAME_ITEM] */
typedef struct S1702 T1702;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_RENAME_ITEM] */
typedef struct S1703 T1703;

/* [detachable] SPECIAL [[attached] ET_EXPORT] */
typedef struct S1705 T1705;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPORT] */
typedef struct S1706 T1706;

/* [detachable] SPECIAL [[attached] ET_FEATURE_NAME_ITEM] */
typedef struct S1708 T1708;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME_ITEM] */
typedef struct S1709 T1709;

/* [detachable] SPECIAL [[attached] ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1710 T1710;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1711 T1711;

/* [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1714 T1714;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG]] */
typedef struct S1715 T1715;

/* [detachable] TUPLE [[attached] ET_ECF_TARGET, [attached] ET_ECF_STATE] */
typedef struct S1716 T1716;

/* [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1717 T1717;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE]] */
typedef struct S1718 T1718;

/* [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1719 T1719;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY]] */
typedef struct S1720 T1720;

/* [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1721 T1721;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG]] */
typedef struct S1722 T1722;

/* [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE] */
typedef struct S1723 T1723;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE]] */
typedef struct S1724 T1724;

/* [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1725 T1725;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT]] */
typedef struct S1726 T1726;

/* [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1727 T1727;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE]] */
typedef struct S1728 T1728;

/* detachable DS_LINKABLE [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
typedef struct S1733 T1733;

/* [detachable] SPECIAL [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1736 T1736;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1737 T1737;

/* [detachable] ET_AGENT_IMPLICIT_CURRENT_TARGET */
typedef struct S1738 T1738;

/* [detachable] SPECIAL [[attached] ET_CHOICE_ITEM] */
typedef struct S1740 T1740;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CHOICE_ITEM] */
typedef struct S1741 T1741;

/* [detachable] SPECIAL [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1742 T1742;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1744 T1744;

/* [detachable] SPECIAL [[attached] ET_CONVERT_FEATURE_ITEM] */
typedef struct S1746 T1746;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CONVERT_FEATURE_ITEM] */
typedef struct S1747 T1747;

/* [detachable] SPECIAL [[attached] ET_CREATOR] */
typedef struct S1748 T1748;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CREATOR] */
typedef struct S1749 T1749;

/* [detachable] SPECIAL [[attached] ET_ELSEIF_EXPRESSION] */
typedef struct S1750 T1750;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_EXPRESSION] */
typedef struct S1751 T1751;

/* [detachable] SPECIAL [[attached] ET_ELSEIF_PART] */
typedef struct S1752 T1752;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_PART] */
typedef struct S1753 T1753;

/* [detachable] SPECIAL [[attached] ET_FEATURE_CLAUSE] */
typedef struct S1754 T1754;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_CLAUSE] */
typedef struct S1755 T1755;

/* [detachable] SPECIAL [[attached] ET_INDEXING_ITEM] */
typedef struct S1757 T1757;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_ITEM] */
typedef struct S1758 T1758;

/* [detachable] SPECIAL [[attached] ET_INDEXING_TERM_ITEM] */
typedef struct S1759 T1759;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM_ITEM] */
typedef struct S1760 T1760;

/* [detachable] SPECIAL [[attached] ET_MANIFEST_STRING_ITEM] */
typedef struct S1762 T1762;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_MANIFEST_STRING_ITEM] */
typedef struct S1763 T1763;

/* [detachable] SPECIAL [[attached] ET_PARENT_LIST] */
typedef struct S1764 T1764;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_LIST] */
typedef struct S1765 T1765;

/* [detachable] SPECIAL [[attached] ET_TYPE_CONSTRAINT_ITEM] */
typedef struct S1767 T1767;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE_CONSTRAINT_ITEM] */
typedef struct S1768 T1768;

/* [detachable] SPECIAL [[attached] ET_WHEN_PART] */
typedef struct S1769 T1769;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_WHEN_PART] */
typedef struct S1770 T1770;

/* [detachable] ET_BASE_TYPE_RENAME_CONSTRAINT */
typedef struct S1772 T1772;

/* detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS] */
typedef struct S1775 T1775;

/* [detachable] ET_STANDARD_ONCE_KEYS */
typedef struct S1780 T1780;

/* [detachable] SPECIAL [[attached] ET_ECF_CLUSTER] */
typedef struct S1782 T1782;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER] */
typedef struct S1783 T1783;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER] */
typedef struct S1784 T1784;

/* [detachable] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1785 T1785;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1786 T1786;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1787 T1787;

/* [detachable] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1788 T1788;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1789 T1789;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1790 T1790;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE] */
typedef struct S1791 T1791;

/* [detachable] SPECIAL [[attached] ET_ECF_FILE_RULE] */
typedef struct S1792 T1792;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_FILE_RULE] */
typedef struct S1793 T1793;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1794 T1794;

/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1795 T1795;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1796 T1796;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1797 T1797;

/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1798 T1798;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1799 T1799;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1800 T1800;

/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1801 T1801;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1802 T1802;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1803 T1803;

/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1804 T1804;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1805 T1805;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE] */
typedef struct S1806 T1806;

/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE] */
typedef struct S1807 T1807;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_MAKE] */
typedef struct S1808 T1808;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1809 T1809;

/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1810 T1810;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1811 T1811;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1812 T1812;

/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1813 T1813;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1814 T1814;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1815 T1815;

/* [detachable] SPECIAL [[attached] RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1816 T1816;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1817 T1817;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS] */
typedef struct S1818 T1818;

/* [detachable] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS] */
typedef struct S1819 T1819;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ANDED_CONDITIONS] */
typedef struct S1820 T1820;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM] */
typedef struct S1821 T1821;

/* [detachable] SPECIAL [[attached] ET_ECF_CONDITION_ITEM] */
typedef struct S1822 T1822;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CONDITION_ITEM] */
typedef struct S1823 T1823;

/* detachable DS_LINKABLE [[attached] CHARACTER_8] */
typedef struct S1825 T1825;

/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_CLASS] */
typedef struct S1826 T1826;

/* [detachable] SPECIAL [[attached] ET_BASE_TYPE_CONSTRAINT] */
typedef struct S1827 T1827;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE_CONSTRAINT] */
typedef struct S1828 T1828;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_BASE_TYPE_CONSTRAINT] */
typedef struct S1829 T1829;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] NATURAL_32] */
typedef struct S1830 T1830;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] NATURAL_32] */
typedef struct S1831 T1831;

/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME] */
typedef struct S1832 T1832;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME] */
typedef struct S1833 T1833;

/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME] */
typedef struct S1836 T1836;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32] */
typedef struct S1837 T1837;

/* [detachable] SPECIAL [[attached] ET_REPLICABLE_FEATURE] */
typedef struct S1838 T1838;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE] */
typedef struct S1840 T1840;

/* [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE] */
typedef struct S1841 T1841;

/* detachable DS_LINKABLE [[attached] ET_ADAPTED_FEATURE] */
typedef struct S1842 T1842;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_FEATURE] */
typedef struct S1843 T1843;

/* [detachable] SPECIAL [[attached] ET_PARENT_FEATURE] */
typedef struct S1844 T1844;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE] */
typedef struct S1845 T1845;

/* [detachable] SPECIAL [[attached] ET_DOTNET_FEATURE] */
typedef struct S1846 T1846;

/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_FEATURE] */
typedef struct S1847 T1847;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE] */
typedef struct S1848 T1848;

/* [detachable] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]] */
typedef struct S1849 T1849;

/* detachable DS_HASH_TABLE_CURSOR [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE] */
typedef struct S1852 T1852;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]] */
typedef struct S1853 T1853;

/* [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE] */
typedef struct S1854 T1854;

/* detachable DS_LINKABLE [[attached] ET_DOTNET_FEATURE] */
typedef struct S1855 T1855;

/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE] */
typedef struct S1856 T1856;

/* [detachable] SPECIAL [[attached] ET_LIKE_FEATURE] */
typedef struct S1857 T1857;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE] */
typedef struct S1858 T1858;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE] */
typedef struct S1859 T1859;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8] */
typedef struct S1861 T1861;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]] */
typedef struct S1862 T1862;

/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME] */
typedef struct S1863 T1863;

/* [detachable] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]] */
typedef struct S1864 T1864;

/* detachable DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
typedef struct S1865 T1865;

/* [detachable] ET_CLUSTER_ERROR */
typedef struct S1866 T1866;

/* [detachable] ET_SYNTAX_ERROR */
typedef struct S1867 T1867;

/* [detachable] ET_DOTNET_ASSEMBLY_ERROR */
typedef struct S1868 T1868;

/* [detachable] AP_OPTION_COMPARATOR */
typedef struct S1869 T1869;

/* [detachable] DS_QUICK_SORTER [[attached] AP_OPTION] */
typedef struct S1870 T1870;

/* [detachable] ST_SPLITTER */
typedef struct S1877 T1877;

/* [detachable] KL_CHARACTER_ROUTINES */
typedef struct S1878 T1878;

/* [detachable] TUPLE [[attached] ET_C_GENERATOR, INTEGER_32, [attached] ET_CURRENT, [attached] ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
typedef struct S1879 T1879;

/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
typedef struct S1880 T1880;

/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST */
typedef struct S1881 T1881;

/* [detachable] TYPE [[detachable] DEVELOPER_EXCEPTION] */
#define T1882 EIF_TYPE_OBJ

/* [detachable] SPECIAL [[attached] ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1884 T1884;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1886 T1886;

/* [detachable] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR] */
typedef struct S1888 T1888;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR] */
typedef struct S1889 T1889;

/* [detachable] SPECIAL [[attached] ET_INSTRUCTION] */
typedef struct S1890 T1890;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INSTRUCTION] */
typedef struct S1892 T1892;

/* [detachable] SPECIAL [[attached] ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1893 T1893;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1895 T1895;

/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
typedef struct S1903 T1903;

/* [detachable] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8] */
typedef struct S1904 T1904;

/* [detachable] ET_INFIX_CAST_EXPRESSION */
typedef struct S1905 T1905;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] STRING_8] */
typedef struct S1909 T1909;

/* [detachable] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]] */
typedef struct S1910 T1910;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]] */
typedef struct S1913 T1913;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8] */
typedef struct S1914 T1914;

/* [detachable] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS] */
typedef struct S1915 T1915;

/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE] */
typedef struct S1918 T1918;

/* [detachable] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]] */
typedef struct S1919 T1919;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]] */
typedef struct S1922 T1922;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME] */
typedef struct S1923 T1923;

/* [detachable] ET_UNIVERSE_ERROR */
typedef struct S1924 T1924;

/* [detachable] TUPLE [[attached] ET_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S1925 T1925;

/* detachable ET_PARENTHESIS_INSTRUCTION */
typedef struct S1926 T1926;

/* [detachable] TYPE [detachable RX_REGULAR_EXPRESSION] */
#define T1931 EIF_TYPE_OBJ

/* [detachable] ET_PARENTHESIS_SYMBOL */
typedef struct S1946 T1946;

/* [detachable] ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
typedef struct S1952 T1952;

/* [detachable] ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
typedef struct S1953 T1953;

/* [detachable] TYPE [[attached] ET_NESTED_TYPE_CONTEXT] */
#define T1956 EIF_TYPE_OBJ

/* [detachable] TYPE [[attached] ET_ACROSS_COMPONENT] */
#define T1957 EIF_TYPE_OBJ

/* [detachable] DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
typedef struct S1960 T1960;

/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8] */
typedef struct S1965 T1965;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8] */
typedef struct S1966 T1966;

/* [detachable] ET_DYNAMIC_EQUALITY_EXPRESSION */
typedef struct S1967 T1967;

/* [detachable] ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
typedef struct S1968 T1968;

/* [detachable] TUPLE [[attached] ET_ECF_LIBRARY] */
typedef struct S1969 T1969;

/* [detachable] ET_CONVERT_BUILTIN_EXPRESSION */
typedef struct S1971 T1971;

/* [detachable] ET_CONVERT_FROM_EXPRESSION */
typedef struct S1972 T1972;

/* [detachable] ET_CONVERT_TO_EXPRESSION */
typedef struct S1973 T1973;

/* detachable DS_CELL [detachable ET_CLASS] */
typedef struct S1976 T1976;

/* [detachable] TUPLE [[attached] DS_CELL [detachable ET_CLASS]] */
typedef struct S1977 T1977;

/* [detachable] TUPLE [[attached] ET_EIFFEL_PREPARSER, [attached] DS_ARRAYED_LIST [[attached] STRING_8]] */
typedef struct S1979 T1979;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE] */
typedef struct S1981 T1981;

/* [detachable] TUPLE [[attached] ET_ECF_FILE_RULE] */
typedef struct S1982 T1982;

/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]] */
typedef struct S1983 T1983;

/* [detachable] TUPLE [[attached] ET_ECF_FILE_RULES] */
typedef struct S1984 T1984;

/* [detachable] PREDICATE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]] */
typedef struct S1985 T1985;

/* [detachable] TUPLE [[attached] ET_ECF_STATE] */
typedef struct S1986 T1986;

/* [detachable] PREDICATE [[attached] TUPLE [[attached] STRING_8]] */
typedef struct S1988 T1988;

/* [detachable] TUPLE [[attached] KL_STRING_ROUTINES, [attached] STRING_8] */
typedef struct S1989 T1989;

/* [detachable] TUPLE [[attached] DS_HASH_SET [[attached] STRING_8]] */
typedef struct S1991 T1991;

/* [detachable] LX_DFA_WILDCARD */
typedef struct S1993 T1993;

/* detachable DS_LINKABLE [[attached] ET_PARENT_FEATURE] */
typedef struct S1996 T1996;

/* [detachable] TUPLE [[attached] LX_WILDCARD] */
typedef struct S1998 T1998;

/* [detachable] PREDICATE [[attached] TUPLE [[attached] LX_WILDCARD]] */
typedef struct S1999 T1999;

/* [detachable] TUPLE [[attached] ET_CLUSTER_DEPENDENCE_CONSTRAINT, [attached] ET_GROUP, [attached] STRING_8] */
typedef struct S2000 T2000;

/* [detachable] SPECIAL [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S2002 T2002;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S2003 T2003;

/* [detachable] SPECIAL [[attached] LX_WILDCARD] */
typedef struct S2004 T2004;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_WILDCARD] */
typedef struct S2007 T2007;

/* [detachable] CHARACTER_PROPERTY */
typedef struct S2008 T2008;

/* [detachable] TUPLE [[attached] ET_ECF_LIBRARY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S2013 T2013;

/* [detachable] TUPLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S2014 T2014;

/* [detachable] TUPLE [[attached] ET_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S2015 T2015;

/* [detachable] TUPLE [[attached] ET_LIBRARY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S2016 T2016;

/* [detachable] ET_AST_NULL_LEAF */
typedef struct S2018 T2018;

/* [detachable] LX_WILDCARD_PARSER */
typedef struct S2019 T2019;

/* [detachable] LX_DESCRIPTION */
typedef struct S2020 T2020;

/* [detachable] LX_FULL_DFA */
typedef struct S2021 T2021;

/* [detachable] TUPLE [[attached] ET_GROUP] */
typedef struct S2023 T2023;

/* [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]]] */
typedef struct S2024 T2024;

/* [detachable] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S2026 T2026;

/* [detachable] PREDICATE [[attached] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION]] */
typedef struct S2027 T2027;

/* [detachable] SPECIAL [[attached] NATURAL_16] */
typedef struct S2030 T2030;

/* [detachable] ARRAY [[attached] NATURAL_16] */
typedef struct S2031 T2031;

/* [detachable] ARRAY [[attached] NATURAL_32] */
typedef struct S2032 T2032;

/* [detachable] DS_ARRAYED_LIST [[attached] LX_RULE] */
typedef struct S2033 T2033;

/* [detachable] LX_START_CONDITIONS */
typedef struct S2034 T2034;

/* [detachable] LX_ACTION_FACTORY */
typedef struct S2035 T2035;

/* [detachable] LX_SYMBOL_CLASS */
typedef struct S2036 T2036;

/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8] */
typedef struct S2037 T2037;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS] */
typedef struct S2038 T2038;

/* [detachable] SPECIAL [[attached] LX_SYMBOL_CLASS] */
typedef struct S2039 T2039;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_NFA] */
typedef struct S2040 T2040;

/* [detachable] LX_NFA */
typedef struct S2041 T2041;

/* [detachable] SPECIAL [[attached] LX_NFA] */
typedef struct S2042 T2042;

/* detachable LX_EQUIVALENCE_CLASSES */
typedef struct S2043 T2043;

/* detachable LX_RULE */
typedef struct S2044 T2044;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8] */
typedef struct S2045 T2045;

/* [detachable] LX_UNRECOGNIZED_RULE_ERROR */
typedef struct S2046 T2046;

/* [detachable] LX_MISSING_QUOTE_ERROR */
typedef struct S2047 T2047;

/* [detachable] LX_BAD_CHARACTER_CLASS_ERROR */
typedef struct S2048 T2048;

/* [detachable] LX_BAD_CHARACTER_ERROR */
typedef struct S2049 T2049;

/* [detachable] LX_FULL_AND_META_ERROR */
typedef struct S2050 T2050;

/* [detachable] LX_FULL_AND_REJECT_ERROR */
typedef struct S2051 T2051;

/* [detachable] LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
typedef struct S2052 T2052;

/* [detachable] LX_CHARACTER_OUT_OF_RANGE_ERROR */
typedef struct S2053 T2053;

/* [detachable] ARRAY [[attached] LX_RULE] */
typedef struct S2054 T2054;

/* [detachable] SPECIAL [[attached] LX_RULE] */
typedef struct S2055 T2055;

/* [detachable] LX_DFA_STATE */
typedef struct S2056 T2056;

/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE] */
typedef struct S2057 T2057;

/* [detachable] DS_ARRAYED_LIST [[attached] LX_DFA_STATE] */
typedef struct S2058 T2058;

/* detachable LX_SYMBOL_PARTITIONS */
typedef struct S2059 T2059;

/* [detachable] KL_ARRAY_ROUTINES [[attached] LX_RULE] */
typedef struct S2060 T2060;

/* [detachable] ARRAY [detachable LX_RULE] */
typedef struct S2061 T2061;

/* [detachable] SPECIAL [detachable LX_RULE] */
typedef struct S2062 T2062;

/* [detachable] LX_START_CONDITION */
typedef struct S2063 T2063;

/* [detachable] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE] */
typedef struct S2064 T2064;

/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA] */
typedef struct S2065 T2065;

/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32] */
typedef struct S2066 T2066;

/* [detachable] LX_NFA_STATE */
typedef struct S2067 T2067;

/* [detachable] LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
typedef struct S2068 T2068;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_RULE] */
typedef struct S2069 T2069;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_RULE] */
typedef struct S2070 T2070;

/* [detachable] KL_ARRAY_ROUTINES [[attached] STRING_8] */
typedef struct S2071 T2071;

/* [detachable] SPECIAL [[attached] LX_START_CONDITION] */
typedef struct S2072 T2072;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_START_CONDITION] */
typedef struct S2073 T2073;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_START_CONDITION] */
typedef struct S2074 T2074;

/* [detachable] LX_SYMBOL_CLASS_TRANSITION [[attached] LX_NFA_STATE] */
typedef struct S2077 T2077;

/* [detachable] LX_EPSILON_TRANSITION [[attached] LX_NFA_STATE] */
typedef struct S2079 T2079;

/* [detachable] LX_SYMBOL_TRANSITION [[attached] LX_NFA_STATE] */
typedef struct S2081 T2081;

/* [detachable] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]] */
typedef struct S2082 T2082;

/* [detachable] DS_BILINKABLE [[attached] INTEGER_32] */
typedef struct S2083 T2083;

/* [detachable] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]] */
typedef struct S2084 T2084;

/* [detachable] LX_ACTION */
typedef struct S2086 T2086;

/* [detachable] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE] */
typedef struct S2087 T2087;

/* [detachable] DS_BUBBLE_SORTER [[attached] LX_RULE] */
typedef struct S2089 T2089;

/* [detachable] SPECIAL [[attached] LX_NFA_STATE] */
typedef struct S2091 T2091;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE] */
typedef struct S2093 T2093;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE] */
typedef struct S2094 T2094;

/* [detachable] SPECIAL [[attached] LX_DFA_STATE] */
typedef struct S2096 T2096;

/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE] */
typedef struct S2097 T2097;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_DFA_STATE] */
typedef struct S2098 T2098;

/* [detachable] KL_ARRAY [[attached] LX_RULE] */
typedef struct S2099 T2099;

/* [detachable] ARRAY [detachable LX_DFA_STATE] */
typedef struct S2100 T2100;

/* [detachable] SPECIAL [detachable LX_DFA_STATE] */
typedef struct S2101 T2101;

/* [detachable] KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
typedef struct S2102 T2102;

/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA] */
typedef struct S2103 T2103;

/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_NFA, [attached] INTEGER_32] */
typedef struct S2105 T2105;

/* [detachable] TYPE [[attached] BOOLEAN] */
#define T2106 EIF_TYPE_OBJ

/* [detachable] DS_SHELL_SORTER [[attached] INTEGER_32] */
typedef struct S2108 T2108;

/* [detachable] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE] */
typedef struct S2109 T2109;

/* [detachable] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE] */
typedef struct S2112 T2112;

/* [detachable] KL_ARRAY [[attached] STRING_8] */
typedef struct S2115 T2115;

/* Struct for boxed version of type BOOLEAN */
struct Sb1 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_8 */
struct Sb2 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_32 */
struct Sb3 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T3 z1; /* item */
};

/* Struct for boxed version of type INTEGER_8 */
struct Sb4 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T4 z1; /* item */
};

/* Struct for boxed version of type INTEGER_16 */
struct Sb5 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T5 z1; /* item */
};

/* Struct for boxed version of type INTEGER_32 */
struct Sb6 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1; /* item */
};

/* Struct for boxed version of type INTEGER_64 */
struct Sb7 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T7 z1; /* item */
};

/* Struct for boxed version of type NATURAL_8 */
struct Sb8 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T8 z1; /* item */
};

/* Struct for boxed version of type NATURAL_16 */
struct Sb9 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T9 z1; /* item */
};

/* Struct for boxed version of type NATURAL_32 */
struct Sb10 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T10 z1; /* item */
};

/* Struct for boxed version of type NATURAL_64 */
struct Sb11 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T11 z1; /* item */
};

/* Struct for boxed version of type REAL_32 */
struct Sb12 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T12 z1; /* item */
};

/* Struct for boxed version of type REAL_64 */
struct Sb13 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T13 z1; /* item */
};

/* Struct for boxed version of type POINTER */
struct Sb14 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 z1; /* item */
};

/* Struct for type UTF_CONVERTER */
struct S462 {
	char dummy;
};

/* Struct for boxed version of type UTF_CONVERTER */
struct Sb462 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T462 z1; /* item */
};

/* Struct for type TYPED_POINTER [[attached] NATURAL_16] */
struct S1395 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [[attached] NATURAL_16] */
struct Sb1395 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1395 z1; /* item */
};

/* Struct for type TYPED_POINTER [[attached] NATURAL_8] */
struct S853 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [[attached] NATURAL_8] */
struct Sb853 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T853 z1; /* item */
};

/* Struct for type TYPED_POINTER [[attached] ANY] */
struct S666 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [[attached] ANY] */
struct Sb666 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T666 z1; /* item */
};

/* Struct for type TYPED_POINTER [[attached] SPECIAL [[attached] NATURAL_8]] */
struct S470 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [[attached] SPECIAL [[attached] NATURAL_8]] */
struct Sb470 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T470 z1; /* item */
};

/* Struct for type [detachable] SPECIAL [CHARACTER_8] */
struct S15 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T2 z2[1]; /* item */
};

/* Struct for type [detachable] SPECIAL [CHARACTER_32] */
struct S16 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T3 z2[1]; /* item */
};

/* Struct for type [detachable] STRING_8 */
struct S17 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
};

/* Struct for type [detachable] STRING_32 */
struct S18 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
};

/* Struct for type [detachable] IMMUTABLE_STRING_32 */
struct S19 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* area_lower */
};

/* Struct for type [detachable] ISE_EXCEPTION_MANAGER */
struct S20 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] GEC */
struct S24 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_handler */
	T0* a2; /* ecf_filename */
	T0* a3; /* last_system */
	T0* a4; /* target_option */
	T0* a5; /* setting_option */
	T0* a6; /* capability_option */
	T0* a7; /* variable_option */
	T0* a8; /* finalize_flag */
	T0* a9; /* gelint_flag */
	T0* a10; /* ise_option */
	T0* a11; /* catcall_option */
	T0* a12; /* c_compile_option */
	T0* a13; /* split_option */
	T0* a14; /* split_size_option */
	T0* a15; /* new_instance_types_option */
	T0* a16; /* gc_option */
	T0* a17; /* thread_option */
	T0* a18; /* silent_flag */
	T0* a19; /* no_benchmark_flag */
	T0* a20; /* nested_benchmark_flag */
	T0* a21; /* metrics_flag */
	T0* a22; /* verbose_flag */
	T0* a23; /* version_flag */
	T0* a24; /* override_settings */
	T0* a25; /* override_capabilities */
	T0* a26; /* override_variables */
	T1 a27; /* ecf_gelint_option */
	T0* a28; /* ise_version */
	T0* a29; /* new_instance_types */
	T6 a30; /* split_size */
};

/* Struct for type [detachable] CELL [detachable EXCEPTION] */
struct S25 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32] */
struct S26 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T0* a3; /* keys */
	T0* a4; /* deleted_marks */
	T0* a5; /* indexes_map */
	T6 a6; /* iteration_position */
	T6 a7; /* count */
	T6 a8; /* deleted_item_position */
	T6 a9; /* control */
	T6 a10; /* found_item */
	T1 a11; /* has_default */
	T6 a12; /* item_position */
	T6 a13; /* ht_lowest_deleted_position */
	T6 a14; /* ht_deleted_item */
	T6 a15; /* ht_deleted_key */
	T1 a16; /* object_comparison */
};

/* Struct for type [detachable] CELL [detachable TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN]] */
struct S27 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type [detachable] CELL [[attached] NO_MORE_MEMORY] */
struct S28 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type detachable C_STRING */
struct S29 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* managed_data */
	T6 a2; /* count */
};

/* Struct for type [detachable] TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN] */
struct S30 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1;
	T6 z2;
	T6 z3;
	T0* z4;
	T0* z5;
	T0* z6;
	T0* z7;
	T0* z8;
	T0* z9;
	T6 z10;
	T1 z11;
};

/* Struct for type [detachable] KL_TEXT_INPUT_FILE */
struct S31 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_file */
	T0* a2; /* last_string */
	T6 a3; /* mode */
	T0* a4; /* name */
	T0* a5; /* character_buffer */
	T2 a6; /* last_character */
	T14 a7; /* file_pointer */
	T1 a8; /* descriptor_available */
	T0* a9; /* internal_name */
	T0* a10; /* internal_detachable_name_pointer */
};

/* Struct for type [detachable] KL_ARGUMENTS */
struct S32 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* program_name */
};

/* Struct for type [detachable] ET_ISE_VARIABLES */
struct S33 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] ET_ERROR_HANDLER */
struct S34 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* info_file */
	T0* a3; /* mutex */
	T0* a4; /* error_file */
	T0* a5; /* warning_file */
	T1 a6; /* is_ise */
	T1 a7; /* is_verbose */
	T1 a8; /* has_eiffel_error */
	T1 a9; /* has_internal_error */
	T1 a10; /* is_ge */
};

/* Struct for type detachable ET_SYSTEM */
struct S35 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implicit_attachment_type_mark */
	T0* a2; /* integer_type */
	T0* a3; /* current_system */
	T0* a4; /* tuple_type */
	T0* a5; /* boolean_type */
	T0* a6; /* pointer_type */
	T0* a7; /* system_object_parents */
	T0* a8; /* any_parents */
	T0* a9; /* system_object_type */
	T0* a10; /* any_type */
	T0* a11; /* register_class_mutex */
	T0* a12; /* external_include_pathnames */
	T0* a13; /* external_object_pathnames */
	T0* a14; /* external_library_pathnames */
	T0* a15; /* external_make_pathnames */
	T0* a16; /* external_resource_pathnames */
	T0* a17; /* external_cflags */
	T0* a18; /* external_linker_flags */
	T1 a19; /* console_application_mode */
	T1 a20; /* alias_transition_mode */
	T1 a21; /* total_order_on_reals_mode */
	T1 a22; /* attachment_type_conformance_mode */
	T1 a23; /* scoop_mode */
	T6 a24; /* default_create_seed */
	T0* a25; /* universe */
	T0* a26; /* name */
	T0* a27; /* libraries */
	T0* a28; /* clusters */
	T0* a29; /* dotnet_assemblies */
	T0* a30; /* master_classes */
	T0* a31; /* master_class_mutex */
	T0* a32; /* system_name */
	T0* a33; /* detachable_any_type */
	T0* a34; /* detachable_separate_any_type */
	T0* a35; /* any_parent */
	T0* a36; /* any_clients */
	T0* a37; /* detachable_tuple_type */
	T0* a38; /* tuple_identity_type */
	T0* a39; /* unfolded_empty_tuple_actual_parameters */
	T0* a40; /* array_any_type */
	T0* a41; /* array_detachable_any_type */
	T0* a42; /* array_none_type */
	T0* a43; /* array_identity_type */
	T0* a44; /* character_type */
	T0* a45; /* character_8_type */
	T0* a46; /* character_8_convert_feature */
	T0* a47; /* character_32_type */
	T0* a48; /* character_32_convert_feature */
	T0* a49; /* double_type */
	T0* a50; /* exception_type */
	T0* a51; /* detachable_exception_type */
	T0* a52; /* exception_manager_type */
	T0* a53; /* function_identity_any_type */
	T0* a54; /* immutable_string_32_type */
	T0* a55; /* integer_8_type */
	T0* a56; /* integer_8_convert_feature */
	T0* a57; /* integer_16_type */
	T0* a58; /* integer_16_convert_feature */
	T0* a59; /* integer_32_type */
	T0* a60; /* integer_32_convert_feature */
	T0* a61; /* integer_64_type */
	T0* a62; /* integer_64_convert_feature */
	T0* a63; /* ise_exception_manager_type */
	T0* a64; /* iterable_detachable_separate_any_type */
	T0* a65; /* natural_type */
	T0* a66; /* natural_8_type */
	T0* a67; /* natural_8_convert_feature */
	T0* a68; /* natural_16_type */
	T0* a69; /* natural_16_convert_feature */
	T0* a70; /* natural_32_type */
	T0* a71; /* natural_32_convert_feature */
	T0* a72; /* natural_64_type */
	T0* a73; /* natural_64_convert_feature */
	T0* a74; /* none_type */
	T0* a75; /* detachable_none_type */
	T0* a76; /* predicate_identity_type */
	T0* a77; /* procedure_identity_type */
	T0* a78; /* real_type */
	T0* a79; /* real_32_type */
	T0* a80; /* real_32_convert_feature */
	T0* a81; /* real_64_type */
	T0* a82; /* real_64_convert_feature */
	T0* a83; /* routine_identity_type */
	T0* a84; /* special_any_type */
	T0* a85; /* special_detachable_any_type */
	T0* a86; /* special_identity_type */
	T0* a87; /* string_type */
	T0* a88; /* detachable_string_type */
	T0* a89; /* string_8_type */
	T0* a90; /* string_8_convert_feature */
	T0* a91; /* string_32_type */
	T0* a92; /* string_32_convert_feature */
	T0* a93; /* system_string_type */
	T0* a94; /* type_detachable_any_type */
	T0* a95; /* detachable_type_exception_type */
	T0* a96; /* type_detachable_exception_type */
	T0* a97; /* type_detachable_like_current_type */
	T0* a98; /* type_identity_type */
	T0* a99; /* typed_pointer_identity_type */
	T0* a100; /* wide_character_type */
	T1 a101; /* is_read_only */
	T6 a102; /* registered_class_count */
	T6 a103; /* copy_seed */
	T6 a104; /* is_equal_seed */
	T6 a105; /* routine_call_seed */
	T6 a106; /* function_item_seed */
	T6 a107; /* dispose_seed */
	T6 a108; /* iterable_new_cursor_seed */
	T6 a109; /* iteration_cursor_after_seed */
	T6 a110; /* iteration_cursor_forth_seed */
	T1 a111; /* target_type_attachment_mode */
	T1 a112; /* obsolete_routine_type_mode */
	T1 a113; /* is_dotnet */
};

/* Struct for type [detachable] KL_EXCEPTIONS */
struct S37 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] AP_PARSER */
struct S38 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* options */
	T0* a2; /* alternative_options_lists */
	T0* a3; /* parameters */
	T0* a4; /* parameters_description */
	T0* a5; /* help_option */
	T0* a6; /* error_handler */
	T0* a7; /* application_description */
	T0* a8; /* current_options */
	T1 a9; /* is_first_option */
	T0* a10; /* last_option_parameter */
};

/* Struct for type [detachable] AP_ALTERNATIVE_OPTIONS_LIST */
struct S39 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* introduction_option */
	T0* a2; /* parameters_description */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type [detachable] AP_STRING_OPTION */
struct S40 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* has_default_parameter */
	T1 a6; /* needs_parameter */
	T0* a7; /* long_form */
	T1 a8; /* is_hidden */
	T1 a9; /* is_mandatory */
	T6 a10; /* maximum_occurrences */
	T1 a11; /* has_short_form */
	T2 a12; /* short_form */
};

/* Struct for type [detachable] AP_FLAG */
struct S42 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* occurrences */
	T0* a2; /* description */
	T0* a3; /* long_form */
	T2 a4; /* short_form */
	T1 a5; /* has_short_form */
	T1 a6; /* is_hidden */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
};

/* Struct for type [detachable] UT_VERSION */
struct S43 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_revision */
	T6 a4; /* internal_build */
};

/* Struct for type [detachable] AP_ENUMERATION_OPTION */
struct S44 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* possible_values */
	T0* a5; /* parameter_description */
	T1 a6; /* needs_parameter */
	T0* a7; /* long_form */
	T1 a8; /* is_hidden */
	T1 a9; /* is_mandatory */
	T6 a10; /* maximum_occurrences */
	T1 a11; /* has_short_form */
	T2 a12; /* short_form */
};

/* Struct for type [detachable] AP_BOOLEAN_OPTION */
struct S45 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T1 a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T1 a7; /* is_hidden */
	T1 a8; /* is_mandatory */
	T6 a9; /* maximum_occurrences */
	T1 a10; /* has_short_form */
	T2 a11; /* short_form */
};

/* Struct for type [detachable] AP_INTEGER_OPTION */
struct S46 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T6 a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T2 a7; /* short_form */
	T1 a8; /* is_hidden */
	T1 a9; /* is_mandatory */
	T6 a10; /* maximum_occurrences */
	T1 a11; /* has_short_form */
};

/* Struct for type [detachable] ET_NULL_ERROR_HANDLER */
struct S50 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* info_file */
	T0* a3; /* mutex */
	T0* a4; /* error_file */
	T0* a5; /* warning_file */
	T1 a6; /* is_ise */
	T1 a7; /* is_verbose */
	T1 a8; /* has_eiffel_error */
	T1 a9; /* has_internal_error */
	T1 a10; /* is_ge */
};

/* Struct for type [detachable] ET_ECF_SYSTEM_PARSER */
struct S52 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_system */
	T0* a2; /* ast_factory */
	T0* a3; /* override_settings */
	T0* a4; /* override_capabilities */
	T0* a5; /* override_variables */
	T0* a6; /* parsed_libraries */
	T0* a7; /* parsed_dotnet_assemblies */
	T0* a8; /* redirected_locations */
	T0* a9; /* xml_parser */
	T0* a10; /* tree_pipe */
	T0* a11; /* error_handler */
	T0* a12; /* ise_version */
};

/* Struct for type [detachable] ET_ECF_ERROR_HANDLER */
struct S53 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* error_count */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type detachable ET_ECF_SETTINGS */
struct S54 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_settings */
	T0* a2; /* secondary_settings */
};

/* Struct for type [detachable] ET_ECF_SYSTEM */
struct S55 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* filename */
	T0* a2; /* targets */
	T0* a3; /* library_target */
	T0* a4; /* libraries */
	T0* a5; /* selected_target */
	T0* a6; /* dotnet_assemblies */
	T0* a7; /* master_classes */
	T0* a8; /* root_type */
	T0* a9; /* none_type */
	T0* a10; /* any_type */
	T0* a11; /* root_creation */
	T6 a12; /* default_create_seed */
	T0* a13; /* boolean_type */
	T0* a14; /* character_8_type */
	T0* a15; /* character_32_type */
	T0* a16; /* integer_8_type */
	T0* a17; /* integer_16_type */
	T0* a18; /* integer_32_type */
	T0* a19; /* integer_64_type */
	T0* a20; /* natural_8_type */
	T0* a21; /* natural_16_type */
	T0* a22; /* natural_32_type */
	T0* a23; /* natural_64_type */
	T0* a24; /* real_32_type */
	T0* a25; /* real_64_type */
	T0* a26; /* pointer_type */
	T0* a27; /* special_any_type */
	T0* a28; /* string_8_type */
	T0* a29; /* string_32_type */
	T0* a30; /* immutable_string_32_type */
	T0* a31; /* array_any_type */
	T0* a32; /* special_identity_type */
	T0* a33; /* typed_pointer_identity_type */
	T0* a34; /* routine_identity_type */
	T0* a35; /* detachable_tuple_type */
	T0* a36; /* universe */
	T0* a37; /* ise_exception_manager_type */
	T0* a38; /* detachable_none_type */
	T1 a39; /* attachment_type_conformance_mode */
	T1 a40; /* use_boehm_gc */
	T0* a41; /* external_include_pathnames */
	T0* a42; /* external_cflags */
	T0* a43; /* external_linker_flags */
	T0* a44; /* external_library_pathnames */
	T0* a45; /* external_object_pathnames */
	T0* a46; /* character_type */
	T0* a47; /* wide_character_type */
	T0* a48; /* integer_type */
	T0* a49; /* natural_type */
	T0* a50; /* real_type */
	T0* a51; /* double_type */
	T0* a52; /* external_make_pathnames */
	T0* a53; /* external_resource_pathnames */
	T6 a54; /* routine_call_seed */
	T6 a55; /* function_item_seed */
	T6 a56; /* is_equal_seed */
	T6 a57; /* dispose_seed */
	T1 a58; /* trace_mode */
	T1 a59; /* exception_trace_mode */
	T1 a60; /* multithreaded_mode */
	T1 a61; /* total_order_on_reals_mode */
	T1 a62; /* console_application_mode */
	T0* a63; /* system_name */
	T0* a64; /* name */
	T0* a65; /* ecf_namespace */
	T0* a66; /* ecf_version */
	T0* a67; /* description */
	T0* a68; /* notes */
	T1 a69; /* is_read_only */
	T0* a70; /* uuid */
	T0* a71; /* register_class_mutex */
	T1 a72; /* alias_transition_mode */
	T0* a73; /* current_system */
	T0* a74; /* tuple_type */
	T0* a75; /* detachable_exception_type */
	T0* a76; /* exception_type */
	T0* a77; /* string_type */
	T1 a78; /* is_preparsed */
	T0* a79; /* clusters */
	T0* a80; /* implicit_attachment_type_mark */
	T0* a81; /* master_class_mutex */
	T0* a82; /* detachable_any_type */
	T0* a83; /* detachable_separate_any_type */
	T0* a84; /* any_parent */
	T0* a85; /* any_parents */
	T0* a86; /* any_clients */
	T0* a87; /* tuple_identity_type */
	T0* a88; /* unfolded_empty_tuple_actual_parameters */
	T0* a89; /* array_detachable_any_type */
	T0* a90; /* array_none_type */
	T0* a91; /* array_identity_type */
	T0* a92; /* character_8_convert_feature */
	T0* a93; /* character_32_convert_feature */
	T0* a94; /* exception_manager_type */
	T0* a95; /* function_identity_any_type */
	T0* a96; /* integer_8_convert_feature */
	T0* a97; /* integer_16_convert_feature */
	T0* a98; /* integer_32_convert_feature */
	T0* a99; /* integer_64_convert_feature */
	T0* a100; /* iterable_detachable_separate_any_type */
	T0* a101; /* natural_8_convert_feature */
	T0* a102; /* natural_16_convert_feature */
	T0* a103; /* natural_32_convert_feature */
	T0* a104; /* natural_64_convert_feature */
	T0* a105; /* predicate_identity_type */
	T0* a106; /* procedure_identity_type */
	T0* a107; /* real_32_convert_feature */
	T0* a108; /* real_64_convert_feature */
	T0* a109; /* special_detachable_any_type */
	T0* a110; /* detachable_string_type */
	T0* a111; /* string_8_convert_feature */
	T0* a112; /* string_32_convert_feature */
	T0* a113; /* system_object_type */
	T0* a114; /* system_object_parents */
	T0* a115; /* system_string_type */
	T0* a116; /* type_detachable_any_type */
	T0* a117; /* detachable_type_exception_type */
	T0* a118; /* type_detachable_exception_type */
	T0* a119; /* type_detachable_like_current_type */
	T0* a120; /* type_identity_type */
	T0* a121; /* scm_read_mapping_builder */
	T0* a122; /* scm_write_mapping_builder */
	T6 a123; /* registered_class_count */
	T1 a124; /* scoop_mode */
	T1 a125; /* is_dotnet */
	T1 a126; /* obsolete_routine_type_mode */
	T1 a127; /* target_type_attachment_mode */
	T6 a128; /* copy_seed */
	T6 a129; /* iterable_new_cursor_seed */
	T6 a130; /* iteration_cursor_after_seed */
	T6 a131; /* iteration_cursor_forth_seed */
};

/* Struct for type [detachable] ET_ECF_TARGET */
struct S56 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* settings */
	T0* a2; /* capabilities */
	T0* a3; /* options */
	T0* a4; /* system_config */
	T0* a5; /* root */
	T0* a6; /* variables */
	T0* a7; /* name */
	T0* a8; /* parent */
	T0* a9; /* description */
	T0* a10; /* precompiled_library */
	T0* a11; /* version */
	T1 a12; /* is_abstract */
	T0* a13; /* clusters */
	T0* a14; /* libraries */
	T0* a15; /* dotnet_assemblies */
	T0* a16; /* file_rules */
	T0* a17; /* class_mappings */
	T0* a18; /* external_cflags */
	T0* a19; /* external_includes */
	T0* a20; /* external_libraries */
	T0* a21; /* external_linker_flags */
	T0* a22; /* external_makes */
	T0* a23; /* external_objects */
	T0* a24; /* external_resources */
	T0* a25; /* pre_compile_actions */
	T0* a26; /* post_compile_actions */
	T0* a27; /* notes */
};

/* Struct for type detachable ET_ECF_CAPABILITIES */
struct S58 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_use_capabilities */
	T0* a2; /* primary_support_capabilities */
	T0* a3; /* secondary_capabilities */
};

/* Struct for type detachable ET_ECF_VARIABLES */
struct S59 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* secondary_variables */
	T0* a2; /* primary_variables */
};

/* Struct for type [detachable] ET_DYNAMIC_SYSTEM */
struct S60 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* dynamic_types */
	T1 a3; /* catcall_error_mode */
	T0* a4; /* current_system */
	T0* a5; /* system_processor */
	T0* a6; /* dynamic_generic_types_by_name */
	T0* a7; /* null_dynamic_type_set_builder */
	T1 a8; /* full_class_checking */
	T1 a9; /* catcall_warning_mode */
	T0* a10; /* new_instance_types */
	T0* a11; /* dynamic_type_set_builder */
	T0* a12; /* unknown_type */
	T0* a13; /* boolean_type */
	T0* a14; /* character_8_type */
	T0* a15; /* character_32_type */
	T0* a16; /* immutable_string_32_type */
	T0* a17; /* integer_8_type */
	T0* a18; /* integer_16_type */
	T0* a19; /* integer_32_type */
	T0* a20; /* integer_64_type */
	T0* a21; /* natural_8_type */
	T0* a22; /* natural_16_type */
	T0* a23; /* natural_32_type */
	T0* a24; /* natural_64_type */
	T0* a25; /* real_32_type */
	T0* a26; /* real_64_type */
	T0* a27; /* pointer_type */
	T0* a28; /* string_8_type */
	T0* a29; /* string_32_type */
	T0* a30; /* special_character_8_type */
	T0* a31; /* special_character_32_type */
	T0* a32; /* ise_exception_manager_type */
	T0* a33; /* any_type */
	T0* a34; /* none_type */
	T0* a35; /* root_type */
	T0* a36; /* root_creation_procedure */
	T0* a37; /* special_count_feature */
	T0* a38; /* special_capacity_feature */
	T0* a39; /* array_area_feature */
	T0* a40; /* array_lower_feature */
	T0* a41; /* array_upper_feature */
	T0* a42; /* typed_pointer_to_pointer_feature */
	T0* a43; /* routine_closed_operands_feature */
	T0* a44; /* routine_rout_disp_feature */
	T0* a45; /* routine_set_rout_disp_final_feature */
	T0* a46; /* ise_exception_manager_init_exception_manager_feature */
	T0* a47; /* ise_exception_manager_last_exception_feature */
	T0* a48; /* ise_exception_manager_once_raise_feature */
	T0* a49; /* ise_exception_manager_set_exception_data_feature */
	T0* a50; /* ise_runtime_type_conforms_to_feature */
	T1 a51; /* in_dynamic_primary_type */
	T0* a52; /* ise_runtime_new_type_instance_of_feature */
	T1 a53; /* in_create_meta_type */
	T1 a54; /* all_attributes_used */
	T0* a55; /* ise_runtime_reference_field_feature */
	T0* a56; /* ise_runtime_set_reference_field_feature */
};

/* Struct for type [detachable] ET_SYSTEM_PROCESSOR */
struct S61 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* interface_checker */
	T0* a2; /* stop_request */
	T0* a3; /* eiffel_parser */
	T0* a4; /* implementation_checker */
	T0* a5; /* error_handler */
	T1 a6; /* benchmark_shown */
	T0* a7; /* ise_version */
	T0* a8; /* eiffel_preparser */
	T0* a9; /* master_class_checker */
	T0* a10; /* provider_checker */
	T0* a11; /* ancestor_builder */
	T0* a12; /* feature_flattener */
	T0* a13; /* processed_class_count_stack */
	T0* a14; /* ast_factory */
	T0* a15; /* dotnet_assembly_consumer */
	T0* a16; /* ecma_version */
	T1 a17; /* nested_benchmark_shown */
	T1 a18; /* metrics_shown */
	T1 a19; /* flat_mode */
	T1 a20; /* flat_dbc_mode */
	T1 a21; /* preparse_shallow_mode */
	T1 a22; /* preparse_single_mode */
	T1 a23; /* preparse_multiple_mode */
	T1 a24; /* unknown_builtin_reported */
	T1 a25; /* qualified_anchored_types_cycle_detection_enabled */
	T1 a26; /* use_attribute_keyword */
	T1 a27; /* use_note_keyword */
	T1 a28; /* use_reference_keyword */
	T1 a29; /* use_attached_keyword */
	T1 a30; /* use_detachable_keyword */
	T1 a31; /* cluster_dependence_enabled */
	T6 a32; /* postponed_class_count */
	T6 a33; /* processed_class_count */
	T1 a34; /* suppliers_enabled */
	T1 a35; /* preparse_override_mode */
	T1 a36; /* preparse_readonly_mode */
	T1 a37; /* providers_enabled */
	T1 a38; /* use_cluster_dependence_pathnames */
};

/* Struct for type [detachable] ET_C_GENERATOR */
struct S64 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* never_void_target_count */
	T6 a2; /* can_be_void_target_count */
	T1 a3; /* has_fatal_error */
	T0* a4; /* system_processor */
	T0* a5; /* current_dynamic_system */
	T0* a6; /* dynamic_types */
	T1 a7; /* short_names */
	T1 a8; /* split_mode */
	T6 a9; /* split_threshold */
	T1 a10; /* use_boehm_gc */
	T0* a11; /* system_name */
	T0* a12; /* current_file */
	T0* a13; /* header_file */
	T0* a14; /* current_type */
	T0* a15; /* current_feature */
	T0* a16; /* extra_dynamic_type_sets */
	T0* a17; /* current_dynamic_type_sets */
	T0* a18; /* current_function_header_buffer */
	T0* a19; /* current_function_body_buffer */
	T0* a20; /* temp_variables */
	T0* a21; /* used_temp_variables */
	T0* a22; /* free_temp_variables */
	T0* a23; /* frozen_temp_variables */
	T0* a24; /* conforming_types */
	T0* a25; /* conforming_type_set */
	T0* a26; /* non_conforming_types */
	T0* a27; /* equality_type_set */
	T0* a28; /* equality_common_types */
	T0* a29; /* operand_stack */
	T0* a30; /* call_operands */
	T0* a31; /* attachment_dynamic_type_ids */
	T0* a32; /* target_dynamic_type_ids */
	T0* a33; /* target_dynamic_types */
	T0* a34; /* standalone_type_sets */
	T0* a35; /* deep_twin_types */
	T0* a36; /* deep_equal_types */
	T0* a37; /* deep_feature_target_type_sets */
	T0* a38; /* current_object_tests */
	T0* a39; /* current_object_equalities */
	T0* a40; /* current_equalities */
	T0* a41; /* current_agents */
	T0* a42; /* agent_open_operands */
	T0* a43; /* agent_closed_operands */
	T0* a44; /* agent_target */
	T0* a45; /* agent_arguments */
	T0* a46; /* agent_instruction */
	T0* a47; /* agent_expression */
	T0* a48; /* agent_closed_operands_type */
	T0* a49; /* wrapper_expression */
	T0* a50; /* agent_tuple_item_expressions */
	T0* a51; /* agent_manifest_tuple */
	T0* a52; /* formal_arguments */
	T0* a53; /* manifest_array_types */
	T0* a54; /* big_manifest_array_types */
	T0* a55; /* manifest_tuple_types */
	T0* a56; /* once_features */
	T0* a57; /* once_per_process_counts */
	T0* a58; /* once_per_thread_counts */
	T0* a59; /* constant_features */
	T0* a60; /* inline_constants */
	T0* a61; /* dispose_procedures */
	T0* a62; /* dynamic_type_id_set_names */
	T0* a63; /* called_features */
	T0* a64; /* called_static_features */
	T0* a65; /* included_header_filenames */
	T0* a66; /* included_runtime_header_files */
	T0* a67; /* included_runtime_c_files */
	T0* a68; /* c_filenames */
	T1 a69; /* finalize_mode */
	T0* a70; /* locals_written_in_body */
	T0* a71; /* locals_written_in_rescue */
	T0* a72; /* locals_written */
	T0* a73; /* locals_read_in_body */
	T0* a74; /* locals_read_in_rescue */
	T0* a75; /* locals_read */
	T0* a76; /* external_c_regexp */
	T0* a77; /* external_c_macro_regexp */
	T0* a78; /* external_c_struct_regexp */
	T0* a79; /* external_c_inline_regexp */
	T0* a80; /* old_external_c_regexp */
	T0* a81; /* old_external_c_macro_regexp */
	T0* a82; /* old_external_c_struct_regexp */
	T0* a83; /* external_cpp_regexp */
	T0* a84; /* external_cpp_struct_regexp */
	T0* a85; /* external_cpp_inline_regexp */
	T0* a86; /* external_dllwin_regexp */
	T0* a87; /* old_external_dllwin32_regexp */
	T1 a88; /* in_static_feature */
	T1 a89; /* type_info_ancestors_used */
	T1 a90; /* type_info_attributes_used */
	T1 a91; /* type_info_attribute_name_used */
	T1 a92; /* type_info_attribute_type_id_used */
	T1 a93; /* type_info_attribute_offset_used */
	T1 a94; /* type_info_generator_used */
	T1 a95; /* type_info_name_used */
	T1 a96; /* type_info_generic_parameters_used */
	T1 a97; /* type_info_object_size_used */
	T0* a98; /* c_file */
	T6 a99; /* c_file_size */
	T0* a100; /* cpp_file */
	T6 a101; /* cpp_file_size */
	T6 a102; /* indentation */
	T0* a103; /* assignment_target */
	T1 a104; /* in_operand */
	T0* a105; /* call_target_type */
	T0* a106; /* current_agent */
	T1 a107; /* call_target_check_void */
	T1 a108; /* has_rescue */
	T1 a109; /* result_written */
	T1 a110; /* result_read */
	T1 a111; /* has_retry */
};

/* Struct for type [detachable] KL_SHELL_COMMAND */
struct S65 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* exit_code */
	T0* a2; /* string_command */
	T0* a3; /* command */
	T6 a4; /* return_code */
	T1 a5; /* is_system_code */
};

/* Struct for type detachable DT_DATE_TIME */
struct S66 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* time_storage */
	T6 a2; /* date_storage */
};

/* Struct for type detachable DS_HASH_SET [[attached] STRING_8] */
struct S68 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T0* a4; /* equality_tester */
	T6 a5; /* count */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* free_slot */
	T6 a9; /* last_position */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* hash_function */
};

/* Struct for type [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
struct S69 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* dynamic_type_set_count */
	T1 a2; /* has_fatal_error */
	T0* a3; /* current_dynamic_system */
	T0* a4; /* feature_checker */
	T0* a5; /* current_dynamic_type */
	T0* a6; /* current_dynamic_feature */
	T0* a7; /* dynamic_type_sets */
	T0* a8; /* object_id_dynamic_type_set */
	T0* a9; /* constant_indexes */
	T1 a10; /* catcall_error_mode */
	T1 a11; /* catcall_warning_mode */
	T1 a12; /* no_debug */
	T1 a13; /* no_assertion */
	T1 a14; /* is_built */
	T0* a15; /* alive_conforming_descendants_per_type */
	T0* a16; /* type_checker */
	T0* a17; /* current_type */
	T0* a18; /* current_class */
	T0* a19; /* current_feature */
	T0* a20; /* current_feature_impl */
	T0* a21; /* current_class_impl */
	T0* a22; /* enclosing_inline_agents */
	T0* a23; /* unused_overloaded_procedures_list */
	T0* a24; /* unused_overloaded_queries_list */
	T0* a25; /* unused_overloaded_features_list */
	T0* a26; /* unused_call_infos */
	T0* a27; /* unused_contexts */
	T0* a28; /* current_context */
	T0* a29; /* current_target_type */
	T0* a30; /* current_object_test_types */
	T0* a31; /* current_object_test_scope */
	T0* a32; /* object_test_scope_builder */
	T0* a33; /* current_across_cursor_types */
	T0* a34; /* current_across_cursor_scope */
	T0* a35; /* current_initialization_scope */
	T0* a36; /* current_attachment_scope */
	T0* a37; /* attachment_scope_builder */
	T0* a38; /* unused_attachment_scopes */
	T0* a39; /* common_ancestor_type_list */
	T0* a40; /* indexing_term_list */
	T0* a41; /* default_creation_call_name */
	T0* a42; /* default_creation_call */
	T0* a43; /* vape_non_descendant_clients */
	T0* a44; /* vape_creation_clients */
	T0* a45; /* vape_client */
	T0* a46; /* unused_adapted_base_classes */
	T0* a47; /* adapted_base_class_checker */
	T0* a48; /* system_processor */
	T6 a49; /* current_index */
	T6 a50; /* result_index */
	T6 a51; /* attached_result_index */
	T6 a52; /* void_index */
	T1 a53; /* in_precursor */
	T1 a54; /* in_static_feature */
	T1 a55; /* in_rescue */
	T0* a56; /* current_inline_agent */
	T0* a57; /* supplier_handler */
	T1 a58; /* in_invariant */
	T1 a59; /* in_precondition */
	T1 a60; /* in_postcondition */
	T1 a61; /* in_check_instruction */
	T0* a62; /* precursor_queries */
	T0* a63; /* precursor_procedures */
};

/* Struct for type [detachable] ET_CLASS_TYPE */
struct S70 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
	T0* a4; /* named_base_class */
	T1 a5; /* tuple_actual_parameters_unfolded_1 */
	T1 a6; /* tuple_actual_parameters_unfolded_2 */
};

/* Struct for type [detachable] ET_TOKEN_CONSTANTS */
struct S71 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] ET_CLASS */
struct S72 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* group */
	T0* a2; /* status_mutex */
	T1 a3; /* unprotected_is_parsed */
	T1 a4; /* unprotected_has_syntax_error */
	T1 a5; /* unprotected_ancestors_built */
	T1 a6; /* unprotected_has_ancestors_error */
	T1 a7; /* unprotected_features_flattened */
	T1 a8; /* unprotected_has_flattening_error */
	T1 a9; /* unprotected_interface_checked */
	T1 a10; /* unprotected_has_interface_error */
	T1 a11; /* unprotected_implementation_checked */
	T1 a12; /* unprotected_has_implementation_error */
	T0* a13; /* name */
	T6 a14; /* id */
	T0* a15; /* ancestors */
	T0* a16; /* conforming_ancestors */
	T0* a17; /* queries */
	T0* a18; /* procedures */
	T0* a19; /* class_keyword */
	T0* a20; /* end_keyword */
	T0* a21; /* processing_mutex */
	T0* a22; /* formal_parameter_types_mutex */
	T0* a23; /* named_base_class */
	T6 a24; /* time_stamp */
	T8 a25; /* class_code */
	T1 a26; /* tuple_actual_parameters_unfolded_1 */
	T1 a27; /* tuple_actual_parameters_unfolded_2 */
	T1 a28; /* is_checking_implementation */
	T0* a29; /* formal_parameters */
	T6 a30; /* index */
	T0* a31; /* class_mark */
	T1 a32; /* has_deferred_features */
	T0* a33; /* formal_parameter_types */
	T0* a34; /* parent_clauses */
	T0* a35; /* suppliers */
	T1 a36; /* redeclared_signatures_checked */
	T0* a37; /* invariants */
	T0* a38; /* filename */
	T0* a39; /* creators */
	T0* a40; /* convert_features */
	T1 a41; /* is_ignored */
	T0* a42; /* providers */
	T1 a43; /* is_interface */
	T1 a44; /* unprotected_is_marked */
	T6 a45; /* registered_feature_count */
	T0* a46; /* external_keyword */
	T0* a47; /* frozen_keyword */
	T0* a48; /* feature_clauses */
	T0* a49; /* first_indexing */
	T0* a50; /* second_indexing */
	T6 a51; /* tuple_constraint_position */
	T0* a52; /* obsolete_message */
	T6 a53; /* registered_inline_constant_count */
	T0* a54; /* leading_break */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
struct S74 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] KL_OPERATING_SYSTEM */
struct S75 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] UT_CANNOT_READ_FILE_ERROR */
struct S78 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type [detachable] UT_VERSION_NUMBER */
struct S80 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type [detachable] UT_MESSAGE */
struct S81 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type [detachable] RX_PCRE_REGULAR_EXPRESSION */
struct S82 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* match_count */
	T0* a2; /* subject */
	T6 a3; /* subject_end */
	T6 a4; /* subject_start */
	T0* a5; /* offset_vector */
	T6 a6; /* offset_vector_count */
	T6 a7; /* brastart_capacity */
	T0* a8; /* brastart_vector */
	T6 a9; /* brastart_lower */
	T6 a10; /* brastart_count */
	T6 a11; /* eptr_capacity */
	T0* a12; /* eptr_vector */
	T6 a13; /* eptr_lower */
	T6 a14; /* eptr_upper */
	T0* a15; /* byte_code */
	T0* a16; /* internal_start_bits */
	T0* a17; /* pattern_buffer */
	T6 a18; /* subexpression_count */
	T0* a19; /* pattern */
	T6 a20; /* pattern_count */
	T6 a21; /* pattern_position */
	T6 a22; /* code_index */
	T6 a23; /* maxbackrefs */
	T6 a24; /* optchanged */
	T6 a25; /* first_character */
	T6 a26; /* required_character */
	T6 a27; /* regexp_countlits */
	T0* a28; /* start_bits */
	T0* a29; /* error_message */
	T1 a30; /* is_anchored */
	T0* a31; /* character_case_mapping */
	T0* a32; /* word_set */
	T6 a33; /* subject_next_start */
	T6 a34; /* error_code */
	T6 a35; /* error_position */
	T1 a36; /* is_startline */
	T1 a37; /* is_caseless */
	T1 a38; /* is_bol */
	T1 a39; /* is_eol */
	T1 a40; /* is_multiline */
	T1 a41; /* is_dotall */
	T1 a42; /* is_extended */
	T1 a43; /* is_empty_allowed */
	T1 a44; /* is_dollar_endonly */
	T1 a45; /* is_greedy */
	T1 a46; /* is_strict */
	T1 a47; /* is_ichanged */
	T6 a48; /* first_matched_index */
	T6 a49; /* eptr */
	T6 a50; /* offset_top */
	T1 a51; /* is_matching_caseless */
	T1 a52; /* is_matching_multiline */
	T1 a53; /* is_matching_dotall */
};

/* Struct for type [detachable] KL_STRING_ROUTINES */
struct S83 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] KL_EXECUTION_ENVIRONMENT */
struct S86 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] AP_ERROR */
struct S87 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_template */
	T0* a3; /* code */
};

/* Struct for type [detachable] VOID_TARGET */
struct S90 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type [detachable] ROUTINE_FAILURE */
struct S92 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* routine_name */
	T0* a2; /* class_name */
	T0* a3; /* throwing_exception */
	T0* a4; /* internal_trace */
	T0* a5; /* c_description */
	T0* a6; /* recipient_name */
	T0* a7; /* type_name */
};

/* Struct for type [detachable] OLD_VIOLATION */
struct S94 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type [detachable] NO_MORE_MEMORY */
struct S96 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_trace */
	T6 a2; /* internal_code */
	T0* a3; /* throwing_exception */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type [detachable] INVARIANT_VIOLATION */
struct S97 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T1 a2; /* is_entry */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type [detachable] OPERATING_SYSTEM_SIGNAL_FAILURE */
struct S98 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T6 a2; /* signal_code */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type [detachable] IO_FAILURE */
struct S99 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_code */
	T0* a2; /* throwing_exception */
	T6 a3; /* error_code */
	T0* a4; /* internal_trace */
	T0* a5; /* c_description */
	T0* a6; /* recipient_name */
	T0* a7; /* type_name */
};

/* Struct for type [detachable] OPERATING_SYSTEM_FAILURE */
struct S100 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T6 a2; /* error_code */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type [detachable] COM_FAILURE */
struct S101 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T6 a2; /* hresult_code */
	T0* a3; /* exception_information */
	T6 a4; /* hresult */
	T0* a5; /* internal_trace */
	T0* a6; /* c_description */
	T0* a7; /* recipient_name */
	T0* a8; /* type_name */
};

/* Struct for type [detachable] EIFFEL_RUNTIME_PANIC */
struct S102 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_code */
	T0* a2; /* throwing_exception */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type [detachable] PRECONDITION_VIOLATION */
struct S104 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type [detachable] POSTCONDITION_VIOLATION */
struct S105 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type [detachable] FLOATING_POINT_FAILURE */
struct S106 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type [detachable] CHECK_VIOLATION */
struct S107 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type [detachable] BAD_INSPECT_VALUE */
struct S108 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type [detachable] VARIANT_VIOLATION */
struct S109 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type [detachable] LOOP_INVARIANT_VIOLATION */
struct S110 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type [detachable] RESCUE_FAILURE */
struct S111 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type [detachable] RESUMPTION_FAILURE */
struct S112 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type [detachable] CREATE_ON_DEFERRED */
struct S113 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type [detachable] EXTERNAL_FAILURE */
struct S114 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type [detachable] VOID_ASSIGNED_TO_EXPANDED */
struct S115 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type [detachable] EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
struct S116 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type [detachable] MISMATCH_FAILURE */
struct S117 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type [detachable] DEVELOPER_EXCEPTION */
struct S118 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type [detachable] ADDRESS_APPLIED_TO_MELTED_FEATURE */
struct S119 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type [detachable] SERIALIZATION_FAILURE */
struct S120 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type [detachable] EXECUTION_ENVIRONMENT */
struct S121 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* return_code */
};

/* Struct for type [detachable] KL_WINDOWS_FILE_SYSTEM */
struct S122 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] KL_UNIX_FILE_SYSTEM */
struct S123 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] PRIMES */
struct S124 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] INTEGER_32] */
struct S125 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 z2[1]; /* item */
};

/* Struct for type [detachable] SPECIAL [[attached] BOOLEAN] */
struct S126 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T1 z2[1]; /* item */
};

/* Struct for type detachable KL_LINKABLE [[attached] CHARACTER_8] */
struct S128 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [detachable] MANAGED_POINTER */
struct S130 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* item */
	T1 a2; /* is_shared */
	T6 a3; /* count */
};

/* Struct for type [detachable] FILE_INFO */
struct S131 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* buffered_file_info */
	T1 a2; /* is_following_symlinks */
	T1 a3; /* exists */
	T0* a4; /* internal_file_name */
	T0* a5; /* internal_name_pointer */
};

/* Struct for type [detachable] MUTEX */
struct S132 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* owner_thread_id */
	T14 a2; /* mutex_pointer */
};

/* Struct for type [detachable] UT_ERROR_HANDLER */
struct S133 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
};

/* Struct for type [detachable] KL_STANDARD_FILES */
struct S134 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] KL_STDERR_FILE */
struct S135 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] KL_STDOUT_FILE */
struct S136 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] ST_WORD_WRAPPER */
struct S137 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* new_line_indentation */
	T6 a2; /* broken_words */
	T6 a3; /* maximum_text_width */
};

/* Struct for type [detachable] AP_DISPLAY_HELP_FLAG */
struct S139 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* description */
	T2 a2; /* short_form */
	T1 a3; /* has_short_form */
	T0* a4; /* long_form */
	T6 a5; /* occurrences */
	T1 a6; /* is_hidden */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION] */
struct S140 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T0* a3; /* equality_tester */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
struct S141 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T6 a5; /* count */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] STRING_8] */
struct S142 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* equality_tester */
};

/* Struct for type [detachable] AP_ERROR_HANDLER */
struct S143 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type [detachable] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION] */
struct S144 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [detachable STRING_8] */
struct S145 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [detachable STRING_8] */
struct S146 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type [detachable] DS_LINKED_LIST [[attached] STRING_8] */
struct S147 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
	T0* a5; /* equality_tester */
};

/* Struct for type [detachable] KL_STRING_EQUALITY_TESTER */
struct S148 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable KL_EQUALITY_TESTER [[attached] STRING_8] */
struct S149 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_LINKED_LIST [[attached] BOOLEAN] */
struct S152 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type [detachable] DS_LINKED_LIST [[attached] INTEGER_32] */
struct S155 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type [detachable] KL_NULL_TEXT_OUTPUT_STREAM */
struct S156 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
};

/* Struct for type [detachable] ET_ECF_AST_FACTORY */
struct S157 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_CELL [detachable ET_ECF_SYSTEM] */
struct S158 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_TARGET] */
struct S159 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_TARGET]] */
struct S160 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type detachable TUPLE */
struct S161 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_SYSTEM_PARSER] */
struct S162 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] XM_ELEMENT */
struct S163 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* parent */
	T0* a4; /* children */
};

/* Struct for type detachable XM_POSITION_TABLE */
struct S164 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
};

/* Struct for type [detachable] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8] */
struct S165 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8]] */
struct S166 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_SYSTEM_PARSER, [detachable] STRING_8, [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_TARGET]], [attached] DS_CELL [detachable ET_ECF_SYSTEM]] */
struct S167 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8] */
struct S169 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T6 a10; /* capacity */
	T0* a11; /* equality_tester */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type [detachable] KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
struct S170 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8] */
struct S171 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type [detachable] XM_EIFFEL_PARSER */
struct S173 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_last_error_description */
	T0* a2; /* scanner */
	T0* a3; /* error_positions */
	T0* a4; /* scanners */
	T1 a5; /* in_external_dtd */
	T0* a6; /* callbacks */
	T0* a7; /* entities */
	T0* a8; /* pe_entities */
	T0* a9; /* dtd_resolver */
	T0* a10; /* entity_resolver */
	T1 a11; /* use_namespaces */
	T6 a12; /* string_mode */
	T0* a13; /* dtd_callbacks */
	T0* a14; /* last_string_value */
	T0* a15; /* yyss */
	T0* a16; /* yyspecial_routines1 */
	T6 a17; /* yyvsc1 */
	T0* a18; /* yyvs1 */
	T0* a19; /* yyspecial_routines2 */
	T6 a20; /* yyvsc2 */
	T0* a21; /* yyvs2 */
	T0* a22; /* yyspecial_routines3 */
	T6 a23; /* yyvsc3 */
	T0* a24; /* yyvs3 */
	T0* a25; /* yyspecial_routines4 */
	T6 a26; /* yyvsc4 */
	T0* a27; /* yyvs4 */
	T0* a28; /* yyspecial_routines5 */
	T6 a29; /* yyvsc5 */
	T0* a30; /* yyvs5 */
	T0* a31; /* yyspecial_routines6 */
	T6 a32; /* yyvsc6 */
	T0* a33; /* yyvs6 */
	T0* a34; /* yyspecial_routines7 */
	T6 a35; /* yyvsc7 */
	T0* a36; /* yyvs7 */
	T0* a37; /* yyspecial_routines8 */
	T6 a38; /* yyvsc8 */
	T0* a39; /* yyvs8 */
	T0* a40; /* yyspecial_routines9 */
	T6 a41; /* yyvsc9 */
	T0* a42; /* yyvs9 */
	T0* a43; /* yyspecial_routines10 */
	T6 a44; /* yyvsc10 */
	T0* a45; /* yyvs10 */
	T0* a46; /* yyspecial_routines11 */
	T6 a47; /* yyvsc11 */
	T0* a48; /* yyvs11 */
	T0* a49; /* yytranslate */
	T0* a50; /* yyr1 */
	T0* a51; /* yytypes1 */
	T0* a52; /* yytypes2 */
	T0* a53; /* yydefact */
	T0* a54; /* yydefgoto */
	T0* a55; /* yypact */
	T0* a56; /* yypgoto */
	T0* a57; /* yytable */
	T0* a58; /* yycheck */
	T6 a59; /* yy_parsing_status */
	T6 a60; /* yy_suspended_yystacksize */
	T6 a61; /* yy_suspended_yystate */
	T6 a62; /* yy_suspended_yyn */
	T6 a63; /* yy_suspended_yychar1 */
	T6 a64; /* yy_suspended_index */
	T6 a65; /* yy_suspended_yyss_top */
	T6 a66; /* yy_suspended_yy_goto */
	T6 a67; /* yyssp */
	T6 a68; /* error_count */
	T1 a69; /* yy_lookahead_needed */
	T6 a70; /* yyerrstatus */
	T6 a71; /* last_token */
	T6 a72; /* yyvsp1 */
	T6 a73; /* yyvsp2 */
	T6 a74; /* yyvsp3 */
	T6 a75; /* yyvsp4 */
	T6 a76; /* yyvsp5 */
	T6 a77; /* yyvsp6 */
	T6 a78; /* yyvsp7 */
	T6 a79; /* yyvsp8 */
	T6 a80; /* yyvsp9 */
	T6 a81; /* yyvsp10 */
	T6 a82; /* yyvsp11 */
	T0* a83; /* last_detachable_any_value */
};

/* Struct for type [detachable] XM_TREE_CALLBACKS_PIPE */
struct S174 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* start */
	T0* a2; /* tree */
	T0* a3; /* error */
	T0* a4; /* last */
};

/* Struct for type [detachable] XM_CALLBACKS_TO_TREE_FILTER */
struct S177 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_position_table */
	T0* a2; /* document */
	T0* a3; /* source_parser */
	T0* a4; /* current_element */
	T0* a5; /* namespace_cache */
	T0* a6; /* next */
};

/* Struct for type [detachable] ET_ECF_STATE */
struct S178 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* ise_version */
};

/* Struct for type [detachable] ET_IDENTIFIER */
struct S179 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T6 a2; /* index */
	T0* a3; /* name */
	T2 a4; /* status_code */
	T6 a5; /* compressed_position */
	T6 a6; /* hash_code */
};

/* Struct for type [detachable] ET_ECF_SYSTEM_CONFIG */
struct S180 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* filename */
	T0* a3; /* universe */
	T0* a4; /* ecf_namespace */
	T0* a5; /* ecf_version */
	T0* a6; /* description */
	T0* a7; /* notes */
	T0* a8; /* targets */
	T1 a9; /* is_read_only */
	T0* a10; /* uuid */
	T0* a11; /* library_target */
};

/* Struct for type [detachable] ET_ECF_LIBRARY */
struct S182 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* filename */
	T0* a3; /* ecf_namespace */
	T0* a4; /* ecf_version */
	T0* a5; /* description */
	T0* a6; /* notes */
	T0* a7; /* targets */
	T1 a8; /* is_read_only */
	T0* a9; /* uuid */
	T0* a10; /* library_target */
	T0* a11; /* current_system */
	T0* a12; /* library */
	T0* a13; /* libraries */
	T0* a14; /* clusters */
	T0* a15; /* dotnet_assemblies */
	T0* a16; /* implicit_attachment_type_mark */
	T0* a17; /* master_classes */
	T0* a18; /* master_class_mutex */
	T0* a19; /* any_type */
	T0* a20; /* detachable_any_type */
	T0* a21; /* detachable_separate_any_type */
	T0* a22; /* any_parent */
	T0* a23; /* any_parents */
	T0* a24; /* any_clients */
	T0* a25; /* tuple_type */
	T0* a26; /* detachable_tuple_type */
	T0* a27; /* tuple_identity_type */
	T0* a28; /* unfolded_empty_tuple_actual_parameters */
	T0* a29; /* array_any_type */
	T0* a30; /* array_detachable_any_type */
	T0* a31; /* array_none_type */
	T0* a32; /* array_identity_type */
	T0* a33; /* boolean_type */
	T0* a34; /* character_type */
	T0* a35; /* character_8_type */
	T0* a36; /* character_8_convert_feature */
	T0* a37; /* character_32_type */
	T0* a38; /* character_32_convert_feature */
	T0* a39; /* double_type */
	T0* a40; /* exception_type */
	T0* a41; /* detachable_exception_type */
	T0* a42; /* exception_manager_type */
	T0* a43; /* function_identity_any_type */
	T0* a44; /* immutable_string_32_type */
	T0* a45; /* integer_type */
	T0* a46; /* integer_8_type */
	T0* a47; /* integer_8_convert_feature */
	T0* a48; /* integer_16_type */
	T0* a49; /* integer_16_convert_feature */
	T0* a50; /* integer_32_type */
	T0* a51; /* integer_32_convert_feature */
	T0* a52; /* integer_64_type */
	T0* a53; /* integer_64_convert_feature */
	T0* a54; /* ise_exception_manager_type */
	T0* a55; /* iterable_detachable_separate_any_type */
	T0* a56; /* natural_type */
	T0* a57; /* natural_8_type */
	T0* a58; /* natural_8_convert_feature */
	T0* a59; /* natural_16_type */
	T0* a60; /* natural_16_convert_feature */
	T0* a61; /* natural_32_type */
	T0* a62; /* natural_32_convert_feature */
	T0* a63; /* natural_64_type */
	T0* a64; /* natural_64_convert_feature */
	T0* a65; /* none_type */
	T0* a66; /* detachable_none_type */
	T0* a67; /* pointer_type */
	T0* a68; /* predicate_identity_type */
	T0* a69; /* procedure_identity_type */
	T0* a70; /* real_type */
	T0* a71; /* real_32_type */
	T0* a72; /* real_32_convert_feature */
	T0* a73; /* real_64_type */
	T0* a74; /* real_64_convert_feature */
	T0* a75; /* routine_identity_type */
	T0* a76; /* special_any_type */
	T0* a77; /* special_detachable_any_type */
	T0* a78; /* special_identity_type */
	T0* a79; /* string_type */
	T0* a80; /* detachable_string_type */
	T0* a81; /* string_8_type */
	T0* a82; /* string_8_convert_feature */
	T0* a83; /* string_32_type */
	T0* a84; /* string_32_convert_feature */
	T0* a85; /* system_object_type */
	T0* a86; /* system_object_parents */
	T0* a87; /* system_string_type */
	T0* a88; /* type_detachable_any_type */
	T0* a89; /* detachable_type_exception_type */
	T0* a90; /* type_detachable_exception_type */
	T0* a91; /* type_detachable_like_current_type */
	T0* a92; /* type_identity_type */
	T0* a93; /* typed_pointer_identity_type */
	T0* a94; /* wide_character_type */
	T0* a95; /* selected_target */
	T1 a96; /* obsolete_routine_type_mode */
	T1 a97; /* is_preparsed */
};

/* Struct for type [detachable] ET_ADAPTED_LIBRARIES */
struct S183 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* libraries */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ADAPTED_LIBRARY] */
struct S185 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_LIBRARY]] */
struct S186 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] XM_DOCUMENT */
struct S187 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* root_element */
	T0* a2; /* children */
};

/* Struct for type [detachable] ET_COMPRESSED_POSITION */
struct S188 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
};

/* Struct for type [detachable] XM_STOP_ON_ERROR_FILTER */
struct S190 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* last_error */
	T0* a3; /* next */
};

/* Struct for type detachable XM_ATTRIBUTE */
struct S191 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* value */
	T0* a4; /* parent */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8] */
struct S193 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T6 a4; /* last_position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* key_equality_tester */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* special_key_routines */
	T0* a15; /* key_storage */
	T0* a16; /* equality_tester */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8] */
struct S194 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* position */
	T0* a3; /* internal_cursor */
	T0* a4; /* key_storage */
	T0* a5; /* item_storage */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* equality_tester */
	T6 a18; /* free_slot */
	T0* a19; /* hash_function */
};

/* Struct for type detachable ET_ECF_TARGET_PARENT */
struct S195 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* location_id */
	T0* a3; /* target */
};

/* Struct for type [detachable] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
struct S196 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_SYSTEM_PARSER, [attached] ET_ECF_INTERNAL_UNIVERSE, [attached] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
struct S197 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type detachable ET_ECF_TARGETS */
struct S198 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* targets */
};

/* Struct for type [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
struct S199 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* hash_function */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T6 a19; /* free_slot */
	T0* a20; /* internal_cursor */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
struct S200 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type [detachable] DS_CELL [detachable ET_ECF_LIBRARY] */
struct S201 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type [detachable] ET_ECF_ADAPTED_LIBRARY */
struct S202 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* filename_id */
	T0* a3; /* universe */
	T0* a4; /* target */
	T0* a5; /* description */
	T0* a6; /* classname_prefix */
	T1 a7; /* is_read_only */
	T1 a8; /* use_application_options */
	T0* a9; /* options */
	T0* a10; /* class_options */
	T0* a11; /* class_renamings */
	T0* a12; /* visible_classes */
	T0* a13; /* conditions */
	T0* a14; /* notes */
	T0* a15; /* name */
	T0* a16; /* library */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_SYSTEM_PARSER, [attached] ET_ECF_ADAPTED_LIBRARY, [attached] DS_CELL [detachable ET_ECF_LIBRARY]] */
struct S203 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [detachable] ET_ADAPTED_DOTNET_ASSEMBLIES */
struct S205 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type [detachable] ET_ECF_DOTNET_ASSEMBLY */
struct S206 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* referenced_assemblies */
	T0* a3; /* current_system */
	T0* a4; /* dotnet_assembly */
	T0* a5; /* name */
	T0* a6; /* implicit_attachment_type_mark */
	T0* a7; /* master_classes */
	T0* a8; /* master_class_mutex */
	T0* a9; /* any_type */
	T0* a10; /* detachable_any_type */
	T0* a11; /* detachable_separate_any_type */
	T0* a12; /* any_parent */
	T0* a13; /* any_parents */
	T0* a14; /* any_clients */
	T0* a15; /* tuple_type */
	T0* a16; /* detachable_tuple_type */
	T0* a17; /* tuple_identity_type */
	T0* a18; /* unfolded_empty_tuple_actual_parameters */
	T0* a19; /* array_any_type */
	T0* a20; /* array_detachable_any_type */
	T0* a21; /* array_none_type */
	T0* a22; /* array_identity_type */
	T0* a23; /* boolean_type */
	T0* a24; /* character_type */
	T0* a25; /* character_8_type */
	T0* a26; /* character_8_convert_feature */
	T0* a27; /* character_32_type */
	T0* a28; /* character_32_convert_feature */
	T0* a29; /* double_type */
	T0* a30; /* exception_type */
	T0* a31; /* detachable_exception_type */
	T0* a32; /* exception_manager_type */
	T0* a33; /* function_identity_any_type */
	T0* a34; /* immutable_string_32_type */
	T0* a35; /* integer_type */
	T0* a36; /* integer_8_type */
	T0* a37; /* integer_8_convert_feature */
	T0* a38; /* integer_16_type */
	T0* a39; /* integer_16_convert_feature */
	T0* a40; /* integer_32_type */
	T0* a41; /* integer_32_convert_feature */
	T0* a42; /* integer_64_type */
	T0* a43; /* integer_64_convert_feature */
	T0* a44; /* ise_exception_manager_type */
	T0* a45; /* iterable_detachable_separate_any_type */
	T0* a46; /* natural_type */
	T0* a47; /* natural_8_type */
	T0* a48; /* natural_8_convert_feature */
	T0* a49; /* natural_16_type */
	T0* a50; /* natural_16_convert_feature */
	T0* a51; /* natural_32_type */
	T0* a52; /* natural_32_convert_feature */
	T0* a53; /* natural_64_type */
	T0* a54; /* natural_64_convert_feature */
	T0* a55; /* none_type */
	T0* a56; /* detachable_none_type */
	T0* a57; /* pointer_type */
	T0* a58; /* predicate_identity_type */
	T0* a59; /* procedure_identity_type */
	T0* a60; /* real_type */
	T0* a61; /* real_32_type */
	T0* a62; /* real_32_convert_feature */
	T0* a63; /* real_64_type */
	T0* a64; /* real_64_convert_feature */
	T0* a65; /* routine_identity_type */
	T0* a66; /* special_any_type */
	T0* a67; /* special_detachable_any_type */
	T0* a68; /* special_identity_type */
	T0* a69; /* string_type */
	T0* a70; /* detachable_string_type */
	T0* a71; /* string_8_type */
	T0* a72; /* string_8_convert_feature */
	T0* a73; /* string_32_type */
	T0* a74; /* string_32_convert_feature */
	T0* a75; /* system_object_type */
	T0* a76; /* system_object_parents */
	T0* a77; /* system_string_type */
	T0* a78; /* type_detachable_any_type */
	T0* a79; /* detachable_type_exception_type */
	T0* a80; /* type_detachable_exception_type */
	T0* a81; /* type_detachable_like_current_type */
	T0* a82; /* type_identity_type */
	T0* a83; /* typed_pointer_identity_type */
	T0* a84; /* wide_character_type */
	T1 a85; /* is_read_only */
	T1 a86; /* is_preparsed */
};

/* Struct for type [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
struct S208 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* filename_id */
	T0* a3; /* universe */
	T0* a4; /* target */
	T0* a5; /* description */
	T0* a6; /* assembly_culture */
	T0* a7; /* assembly_key */
	T0* a8; /* assembly_name */
	T0* a9; /* assembly_version */
	T0* a10; /* classname_prefix */
	T1 a11; /* is_read_only */
	T0* a12; /* options */
	T0* a13; /* class_options */
	T0* a14; /* class_renamings */
	T0* a15; /* conditions */
	T0* a16; /* notes */
	T0* a17; /* name */
	T0* a18; /* dotnet_assembly */
};

/* Struct for type [detachable] ET_ECF_ERROR */
struct S209 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* system_config */
	T0* a4; /* position */
	T0* a5; /* code */
};

/* Struct for type [detachable] KL_AGENT_HASH_FUNCTION [[attached] STRING_8] */
struct S210 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* hash_agent */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8] */
struct S211 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T0* a5; /* key_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T0* a8; /* hash_function */
	T6 a9; /* position */
	T6 a10; /* last_position */
	T6 a11; /* capacity */
	T6 a12; /* slots_position */
	T6 a13; /* free_slot */
	T0* a14; /* equality_tester */
	T6 a15; /* modulus */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* clashes */
	T0* a19; /* slots */
	T0* a20; /* special_key_routines */
};

/* Struct for type [detachable] TUPLE [[attached] STRING_8] */
struct S212 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] FUNCTION [[attached] TUPLE [[attached] STRING_8], [attached] INTEGER_32] */
struct S213 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] KL_STRING_ROUTINES] */
struct S214 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8] */
struct S216 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* hash_function */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T6 a19; /* free_slot */
	T0* a20; /* internal_cursor */
};

/* Struct for type [detachable] ET_DYNAMIC_PRIMARY_TYPE */
struct S218 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* attribute_count */
	T0* a2; /* queries */
	T1 a3; /* is_alive */
	T6 a4; /* id */
	T0* a5; /* base_type */
	T0* a6; /* attached_type */
	T0* a7; /* base_class */
	T0* a8; /* meta_type */
	T0* a9; /* conforming_ancestors */
	T0* a10; /* procedures_by_seed */
	T0* a11; /* procedures */
	T0* a12; /* queries_by_seed */
	T6 a13; /* hash_code */
	T0* a14; /* next_type */
	T1 a15; /* has_reference_attributes */
	T1 a16; /* has_generic_expanded_attributes */
	T0* a17; /* query_calls */
	T1 a18; /* has_static */
	T0* a19; /* procedure_calls */
	T0* a20; /* equality_expressions */
	T0* a21; /* object_equality_expressions */
};

/* Struct for type [detachable] ET_DYNAMIC_FEATURE_LIST */
struct S219 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME] */
struct S220 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* special_key_routines */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* internal_cursor */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8] */
struct S221 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* special_item_routines */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type [detachable] TUPLE [[attached] ET_CLASS] */
struct S222 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]] */
struct S223 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [INTEGER_32] */
struct S224 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1;
};

/* Struct for type [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
struct S225 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_dynamic_system */
	T1 a3; /* catcall_error_mode */
	T1 a4; /* catcall_warning_mode */
	T1 a5; /* no_debug */
	T1 a6; /* no_assertion */
	T0* a7; /* alive_conforming_descendants_per_type */
};

/* Struct for type [detachable] TUPLE [[attached] ET_DYNAMIC_SYSTEM] */
struct S226 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type detachable ET_DYNAMIC_FEATURE */
struct S231 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_feature */
	T0* a2; /* dynamic_type_sets */
	T6 a3; /* id */
	T1 a4; /* is_generated */
	T0* a5; /* result_type_set */
	T0* a6; /* target_type */
	T8 a7; /* builtin_class_code */
	T8 a8; /* builtin_feature_code */
	T1 a9; /* is_regular */
	T0* a10; /* first_precursor */
	T1 a11; /* is_creation */
	T0* a12; /* other_precursors */
	T1 a13; /* is_built */
	T1 a14; /* is_address */
	T1 a15; /* is_static_generated */
};

/* Struct for type [detachable] ET_ACTUAL_PARAMETER_LIST */
struct S235 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type [detachable] ET_NESTED_TYPE_CONTEXT */
struct S236 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* root_context */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type [detachable] ET_FORMAL_PARAMETER_TYPE */
struct S245 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T6 a3; /* index */
	T0* a4; /* implementation_class */
};

/* Struct for type [detachable] ET_EXTERNAL_FUNCTION */
struct S246 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* other_seeds */
	T0* a4; /* implementation_feature */
	T0* a5; /* first_precursor */
	T0* a6; /* other_precursors */
	T0* a7; /* preconditions */
	T6 a8; /* hash_code */
	T8 a9; /* builtin_class_code */
	T8 a10; /* builtin_feature_code */
	T0* a11; /* arguments */
	T0* a12; /* postconditions */
	T0* a13; /* assigner */
	T0* a14; /* declared_type */
	T0* a15; /* frozen_keyword */
	T0* a16; /* extended_name */
	T0* a17; /* language */
	T0* a18; /* obsolete_message */
	T0* a19; /* alias_clause */
	T0* a20; /* clients */
	T0* a21; /* is_keyword */
	T0* a22; /* end_keyword */
	T0* a23; /* semicolon */
	T0* a24; /* feature_clause */
	T0* a25; /* first_indexing */
	T0* a26; /* object_tests */
	T0* a27; /* across_components */
	T1 a28; /* validity_checked */
	T1 a29; /* has_validity_error */
	T6 a30; /* id */
	T6 a31; /* version */
	T0* a32; /* synonym */
};

/* Struct for type [detachable] ET_TUPLE_TYPE */
struct S247 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* actual_parameters */
	T0* a2; /* type_mark */
	T0* a3; /* named_base_class */
	T0* a4; /* tuple_keyword */
};

/* Struct for type detachable ET_FORMAL_ARGUMENT_LIST */
struct S248 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type [detachable] ARRAY [[attached] ET_TYPE] */
struct S249 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_TYPE] */
struct S250 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] ET_FORMAL_ARGUMENT */
struct S251 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T6 a3; /* index */
	T6 a4; /* attached_index */
	T1 a5; /* is_used */
};

/* Struct for type [detachable] ET_QUERY_LIST */
struct S252 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* declared_count */
	T0* a3; /* storage */
};

/* Struct for type [detachable] ET_PROCEDURE_LIST */
struct S253 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* declared_count */
	T0* a3; /* storage */
};

/* Struct for type [detachable] ET_DYNAMIC_TYPE_SET_LIST */
struct S254 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [detachable] KL_STRING_OUTPUT_STREAM */
struct S255 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* string */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER] */
struct S256 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE] */
struct S257 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32] */
struct S258 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST */
struct S259 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* clashes */
	T0* a4; /* slots */
};

/* Struct for type [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET */
struct S260 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
};

/* Struct for type [detachable] DS_ARRAYED_STACK [[attached] ET_EXPRESSION] */
struct S261 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_EXPRESSION] */
struct S262 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32] */
struct S263 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* last_position */
	T6 a4; /* capacity */
	T6 a5; /* count */
	T6 a6; /* free_slot */
	T6 a7; /* slots_position */
	T6 a8; /* modulus */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* key_equality_tester */
	T0* a11; /* equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
struct S264 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
struct S265 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T6 a3; /* position */
	T0* a4; /* item_storage */
	T6 a5; /* capacity */
	T6 a6; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
struct S266 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST] */
struct S267 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
struct S268 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION] */
struct S269 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_AGENT] */
struct S270 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] ET_CURRENT */
struct S272 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type [detachable] ET_ACTUAL_ARGUMENT_LIST */
struct S273 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_symbol */
	T0* a4; /* right_symbol */
};

/* Struct for type [detachable] ET_QUALIFIED_CALL_INSTRUCTION */
struct S274 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
	T0* a4; /* parenthesis_call */
};

/* Struct for type [detachable] ET_QUALIFIED_CALL_EXPRESSION */
struct S277 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T6 a2; /* index */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* parenthesis_call */
};

/* Struct for type [detachable] ET_UNQUALIFIED_CALL_EXPRESSION */
struct S278 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* arguments */
	T6 a3; /* index */
	T0* a4; /* parenthesis_call */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S279 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] ET_MANIFEST_TUPLE */
struct S280 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_symbol */
	T0* a2; /* right_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
	T6 a5; /* index */
};

/* Struct for type [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE] */
struct S281 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE] */
struct S282 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* count */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* modulus */
	T6 a6; /* slots_position */
	T6 a7; /* clashes_previous_position */
	T0* a8; /* key_equality_tester */
	T0* a9; /* equality_tester */
	T0* a10; /* internal_cursor */
	T6 a11; /* found_position */
	T0* a12; /* item_storage */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* capacity */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type [detachable] ARRAY [[attached] INTEGER_32] */
struct S283 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE] */
struct S284 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT] */
struct S285 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
struct S286 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T0* a10; /* internal_cursor */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE] */
struct S287 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8] */
struct S288 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* count */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* capacity */
	T6 a11; /* slots_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* equality_tester */
	T6 a15; /* found_position */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER] */
struct S289 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T0* a6; /* equality_tester */
	T6 a7; /* slots_position */
	T6 a8; /* count */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T0* a16; /* hash_function */
};

/* Struct for type [detachable] ET_IDENTIFIER_TESTER */
struct S290 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] KL_TEXT_OUTPUT_FILE */
struct S292 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* mode */
	T14 a3; /* file_pointer */
	T1 a4; /* descriptor_available */
	T0* a5; /* last_string */
	T0* a6; /* internal_name */
	T0* a7; /* internal_detachable_name_pointer */
};

/* Struct for type [detachable] ET_DYNAMIC_TUPLE_TYPE */
struct S293 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T0* a5; /* attached_type */
	T6 a6; /* attribute_count */
	T0* a7; /* queries */
	T0* a8; /* meta_type */
	T0* a9; /* conforming_ancestors */
	T0* a10; /* procedures_by_seed */
	T0* a11; /* procedures */
	T0* a12; /* queries_by_seed */
	T0* a13; /* item_type_sets */
	T1 a14; /* has_reference_attributes */
	T1 a15; /* has_generic_expanded_attributes */
	T6 a16; /* hash_code */
	T0* a17; /* next_type */
	T0* a18; /* query_calls */
	T1 a19; /* has_static */
	T0* a20; /* procedure_calls */
	T0* a21; /* equality_expressions */
	T0* a22; /* object_equality_expressions */
};

/* Struct for type [detachable] DS_STRING_HASH_TABLE */
struct S294 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T0* a5; /* key_equality_tester */
	T0* a6; /* slots */
	T0* a7; /* hash_function */
	T0* a8; /* key_storage */
	T0* a9; /* clashes */
	T6 a10; /* count */
	T6 a11; /* capacity */
	T6 a12; /* slots_position */
	T6 a13; /* free_slot */
	T6 a14; /* last_position */
	T0* a15; /* internal_keys */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* equality_tester */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* internal_cursor */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8] */
struct S295 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] UT_CANNOT_WRITE_TO_FILE_ERROR */
struct S296 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type detachable ET_DYNAMIC_PRECURSOR */
struct S297 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* is_static_generated */
	T0* a2; /* target_type */
	T0* a3; /* static_feature */
	T0* a4; /* dynamic_type_sets */
	T0* a5; /* current_feature */
	T6 a6; /* id */
	T0* a7; /* result_type_set */
	T1 a8; /* is_regular */
	T1 a9; /* is_creation */
	T1 a10; /* is_address */
	T8 a11; /* builtin_class_code */
	T0* a12; /* first_precursor */
	T0* a13; /* other_precursors */
	T1 a14; /* is_built */
	T8 a15; /* builtin_feature_code */
	T1 a16; /* is_generated */
	T0* a17; /* parent_type */
};

/* Struct for type detachable ET_DYNAMIC_PRECURSOR_LIST */
struct S298 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
struct S299 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* items */
	T0* a5; /* counts */
	T0* a6; /* successors */
};

/* Struct for type [detachable] ET_RESULT */
struct S300 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type detachable ET_DYNAMIC_QUALIFIED_QUERY_CALL */
struct S301 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_call */
	T0* a2; /* target_type_set */
	T0* a3; /* result_type_set */
	T0* a4; /* current_feature */
	T0* a5; /* current_type */
	T0* a6; /* next */
};

/* Struct for type detachable ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
struct S305 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* next */
	T0* a3; /* static_call */
	T0* a4; /* current_feature */
	T0* a5; /* current_type */
};

/* Struct for type [detachable] ET_OBJECT_TEST */
struct S307 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* attached_keyword */
	T0* a3; /* declared_type */
	T0* a4; /* expression */
};

/* Struct for type [detachable] ET_OBJECT_EQUALITY_EXPRESSION */
struct S308 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type [detachable] ET_EQUALITY_EXPRESSION */
struct S309 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type [detachable] ET_DYNAMIC_SPECIAL_TYPE */
struct S310 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T0* a5; /* attached_type */
	T6 a6; /* attribute_count */
	T0* a7; /* queries */
	T0* a8; /* meta_type */
	T0* a9; /* conforming_ancestors */
	T0* a10; /* procedures_by_seed */
	T0* a11; /* procedures */
	T0* a12; /* queries_by_seed */
	T0* a13; /* item_type_set */
	T1 a14; /* has_reference_attributes */
	T1 a15; /* has_generic_expanded_attributes */
	T6 a16; /* hash_code */
	T0* a17; /* next_type */
	T0* a18; /* query_calls */
	T1 a19; /* has_static */
	T0* a20; /* procedure_calls */
	T0* a21; /* equality_expressions */
	T0* a22; /* object_equality_expressions */
};

/* Struct for type [detachable] DS_QUICK_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
struct S313 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type detachable ET_DYNAMIC_SECONDARY_TYPE */
struct S314 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_type */
	T0* a2; /* meta_type */
	T0* a3; /* internal_base_type */
	T0* a4; /* type_mark */
};

/* Struct for type [detachable] ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID */
struct S315 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] ET_CREATE_EXPRESSION */
struct S319 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* creation_call */
	T0* a3; /* creation_type */
	T0* a4; /* create_keyword */
	T0* a5; /* creation_region */
};

/* Struct for type [detachable] ET_QUALIFIED_CALL */
struct S320 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T0* a2; /* qualified_name */
};

/* Struct for type [detachable] ARRAY [[attached] STRING_8] */
struct S323 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [detachable] SPECIAL [[attached] STRING_8] */
struct S324 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_DIRECTORY */
struct S326 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_input */
	T0* a2; /* last_entry */
	T6 a3; /* mode */
	T0* a4; /* name */
	T0* a5; /* entry_buffer */
	T1 a6; /* old_end_of_input */
	T14 a7; /* directory_pointer */
	T14 a8; /* last_entry_pointer */
	T0* a9; /* lastentry */
	T0* a10; /* internal_name */
	T0* a11; /* internal_detachable_name_pointer */
};

/* Struct for type [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
struct S327 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] ET_EXTENDED_ATTRIBUTE */
struct S328 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* other_seeds */
	T0* a4; /* implementation_feature */
	T0* a5; /* compound */
	T0* a6; /* locals */
	T0* a7; /* rescue_clause */
	T0* a8; /* first_precursor */
	T0* a9; /* other_precursors */
	T0* a10; /* preconditions */
	T6 a11; /* hash_code */
	T0* a12; /* postconditions */
	T0* a13; /* assigner */
	T0* a14; /* declared_type */
	T0* a15; /* frozen_keyword */
	T0* a16; /* extended_name */
	T0* a17; /* obsolete_message */
	T0* a18; /* clients */
	T0* a19; /* end_keyword */
	T0* a20; /* semicolon */
	T0* a21; /* feature_clause */
	T0* a22; /* first_indexing */
	T0* a23; /* object_tests */
	T0* a24; /* across_components */
	T1 a25; /* validity_checked */
	T1 a26; /* has_validity_error */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* synonym */
};

/* Struct for type detachable ET_COMPOUND */
struct S329 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* keyword */
};

/* Struct for type detachable ET_LOCAL_VARIABLE_LIST */
struct S330 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* local_keyword */
};

/* Struct for type [detachable] DS_QUICK_SORTER [[attached] INTEGER_32] */
struct S334 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type [detachable] ET_IMPLICIT_TYPE_MARK */
struct S341 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* is_expanded_mark */
	T1 a2; /* is_attached_mark */
	T1 a3; /* is_reference_mark */
	T1 a4; /* is_separate_mark */
	T1 a5; /* is_detachable_mark */
};

/* Struct for type [detachable] ET_SYMBOL */
struct S342 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE] */
struct S343 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] ET_C_GENERATOR, [attached] ET_IDENTIFIER, [attached] ET_CURRENT, [attached] ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S344 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [detachable] TUPLE [[attached] ET_C_GENERATOR, [attached] ET_IDENTIFIER, [attached] ET_RESULT, [attached] ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S345 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [detachable] TUPLE [[attached] ET_C_GENERATOR, [attached] ET_DYNAMIC_FEATURE, [attached] ET_RESULT, [attached] ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S346 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [detachable] TUPLE [[attached] ET_C_GENERATOR, INTEGER_32, [attached] ET_RESULT, [attached] ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S347 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [detachable] UT_INTEGER_FORMATTER */
struct S348 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] STD_FILES */
struct S351 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_output */
};

/* Struct for type [detachable] TUPLE [[attached] ET_C_GENERATOR, INTEGER_32, [attached] ET_EXPRESSION, [attached] ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S353 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [detachable] TUPLE [[attached] ET_C_GENERATOR, [attached] ET_EXPRESSION, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
struct S355 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [detachable] TUPLE [[attached] ET_C_GENERATOR, [attached] ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S356 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T1 z4;
};

/* Struct for type [detachable] ET_CONSTANT_ATTRIBUTE */
struct S357 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* other_seeds */
	T0* a4; /* constant */
	T0* a5; /* implementation_feature */
	T0* a6; /* first_precursor */
	T0* a7; /* other_precursors */
	T6 a8; /* hash_code */
	T0* a9; /* assigner */
	T0* a10; /* extended_name */
	T0* a11; /* declared_type */
	T0* a12; /* frozen_keyword */
	T0* a13; /* clients */
	T0* a14; /* is_keyword */
	T0* a15; /* semicolon */
	T0* a16; /* feature_clause */
	T0* a17; /* first_indexing */
	T0* a18; /* object_tests */
	T0* a19; /* across_components */
	T1 a20; /* validity_checked */
	T1 a21; /* has_validity_error */
	T6 a22; /* id */
	T6 a23; /* version */
	T0* a24; /* synonym */
};

/* Struct for type [detachable] ET_UNIQUE_ATTRIBUTE */
struct S359 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constant */
	T6 a2; /* id */
	T6 a3; /* first_seed */
	T0* a4; /* implementation_class */
	T0* a5; /* other_seeds */
	T0* a6; /* implementation_feature */
	T0* a7; /* first_precursor */
	T0* a8; /* other_precursors */
	T6 a9; /* hash_code */
	T0* a10; /* assigner */
	T0* a11; /* declared_type */
	T0* a12; /* frozen_keyword */
	T0* a13; /* extended_name */
	T0* a14; /* clients */
	T0* a15; /* is_keyword */
	T0* a16; /* unique_keyword */
	T0* a17; /* semicolon */
	T0* a18; /* feature_clause */
	T0* a19; /* first_indexing */
	T0* a20; /* object_tests */
	T0* a21; /* across_components */
	T1 a22; /* validity_checked */
	T1 a23; /* has_validity_error */
	T6 a24; /* version */
	T0* a25; /* synonym */
};

/* Struct for type [detachable] ET_REGULAR_INTEGER_CONSTANT */
struct S360 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T11 a4; /* value */
	T6 a5; /* compressed_position */
	T0* a6; /* literal */
	T1 a7; /* has_overflow */
	T0* a8; /* type */
};

/* Struct for type [detachable] ET_ATTRIBUTE */
struct S361 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* other_seeds */
	T0* a4; /* implementation_feature */
	T0* a5; /* first_precursor */
	T0* a6; /* other_precursors */
	T6 a7; /* hash_code */
	T0* a8; /* assigner */
	T0* a9; /* declared_type */
	T0* a10; /* frozen_keyword */
	T0* a11; /* extended_name */
	T0* a12; /* clients */
	T0* a13; /* semicolon */
	T0* a14; /* feature_clause */
	T0* a15; /* first_indexing */
	T0* a16; /* object_tests */
	T0* a17; /* across_components */
	T1 a18; /* validity_checked */
	T1 a19; /* has_validity_error */
	T6 a20; /* id */
	T6 a21; /* version */
	T0* a22; /* synonym */
};

/* Struct for type [detachable] NATIVE_STRING */
struct S363 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* managed_data */
	T6 a2; /* unit_count */
};

/* Struct for type [detachable] ET_SYSTEM_MULTIPROCESSOR */
struct S364 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* interface_checker */
	T0* a2; /* stop_request */
	T0* a3; /* eiffel_parser */
	T0* a4; /* implementation_checker */
	T0* a5; /* error_handler */
	T1 a6; /* benchmark_shown */
	T0* a7; /* ise_version */
	T0* a8; /* other_processors */
	T0* a9; /* eiffel_preparser */
	T0* a10; /* master_class_checker */
	T0* a11; /* provider_checker */
	T0* a12; /* ancestor_builder */
	T0* a13; /* feature_flattener */
	T0* a14; /* ecma_version */
	T1 a15; /* nested_benchmark_shown */
	T1 a16; /* metrics_shown */
	T1 a17; /* flat_mode */
	T1 a18; /* flat_dbc_mode */
	T0* a19; /* processed_class_count_stack */
	T0* a20; /* ast_factory */
	T0* a21; /* dotnet_assembly_consumer */
	T1 a22; /* use_attribute_keyword */
	T1 a23; /* use_note_keyword */
	T1 a24; /* use_reference_keyword */
	T1 a25; /* use_attached_keyword */
	T1 a26; /* use_detachable_keyword */
	T1 a27; /* preparse_shallow_mode */
	T1 a28; /* preparse_single_mode */
	T1 a29; /* preparse_multiple_mode */
	T1 a30; /* unknown_builtin_reported */
	T1 a31; /* qualified_anchored_types_cycle_detection_enabled */
	T1 a32; /* cluster_dependence_enabled */
	T6 a33; /* postponed_class_count */
	T6 a34; /* processed_class_count */
	T1 a35; /* suppliers_enabled */
	T1 a36; /* preparse_override_mode */
	T1 a37; /* preparse_readonly_mode */
	T1 a38; /* providers_enabled */
	T1 a39; /* use_cluster_dependence_pathnames */
};

/* Struct for type [detachable] DS_HASH_SET_CURSOR [[attached] STRING_8] */
struct S365 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] STRING_8] */
struct S366 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] INTEGER_32] */
struct S368 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] ET_FEATURE_CHECKER */
struct S369 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_checker */
	T0* a2; /* current_type */
	T0* a3; /* current_class */
	T0* a4; /* current_feature */
	T0* a5; /* current_feature_impl */
	T0* a6; /* current_class_impl */
	T0* a7; /* enclosing_inline_agents */
	T0* a8; /* unused_overloaded_procedures_list */
	T0* a9; /* unused_overloaded_queries_list */
	T0* a10; /* unused_overloaded_features_list */
	T0* a11; /* unused_call_infos */
	T0* a12; /* unused_contexts */
	T0* a13; /* current_context */
	T0* a14; /* current_target_type */
	T0* a15; /* current_object_test_types */
	T0* a16; /* current_object_test_scope */
	T0* a17; /* object_test_scope_builder */
	T0* a18; /* current_across_cursor_types */
	T0* a19; /* current_across_cursor_scope */
	T0* a20; /* current_initialization_scope */
	T0* a21; /* current_attachment_scope */
	T0* a22; /* attachment_scope_builder */
	T0* a23; /* unused_attachment_scopes */
	T0* a24; /* common_ancestor_type_list */
	T0* a25; /* indexing_term_list */
	T0* a26; /* default_creation_call_name */
	T0* a27; /* default_creation_call */
	T0* a28; /* vape_non_descendant_clients */
	T0* a29; /* vape_creation_clients */
	T0* a30; /* vape_client */
	T0* a31; /* unused_adapted_base_classes */
	T0* a32; /* adapted_base_class_checker */
	T0* a33; /* system_processor */
	T1 a34; /* has_fatal_error */
	T1 a35; /* in_static_feature */
	T1 a36; /* in_precondition */
	T0* a37; /* supplier_handler */
	T1 a38; /* in_invariant */
	T0* a39; /* precursor_queries */
	T0* a40; /* precursor_procedures */
	T1 a41; /* in_postcondition */
	T1 a42; /* in_precursor */
	T1 a43; /* in_rescue */
	T0* a44; /* current_inline_agent */
	T1 a45; /* in_check_instruction */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE] */
struct S370 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T0* a5; /* equality_tester */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_cursor */
	T6 a8; /* found_position */
	T0* a9; /* item_storage */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
struct S371 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* modulus */
	T6 a7; /* slots_position */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* key_equality_tester */
	T0* a10; /* equality_tester */
	T6 a11; /* capacity */
	T6 a12; /* free_slot */
	T0* a13; /* special_item_routines */
	T0* a14; /* special_key_routines */
	T0* a15; /* key_storage */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* hash_function */
	T6 a19; /* count */
};

/* Struct for type [detachable] ET_TYPE_CHECKER */
struct S373 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_context */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_feature_impl */
	T0* a4; /* constraint_context */
	T0* a5; /* current_class */
	T0* a6; /* target_context */
	T0* a7; /* other_context */
	T0* a8; /* adapted_base_class_checker */
	T0* a9; /* adapted_base_classes */
	T0* a10; /* system_processor */
	T0* a11; /* supplier_handler */
	T1 a12; /* has_fatal_error */
	T1 a13; /* class_interface_error_only */
	T1 a14; /* in_qualified_anchored_type */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT] */
struct S375 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
struct S376 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
struct S377 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
struct S378 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]] */
struct S379 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT] */
struct S380 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST] */
struct S381 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T6 a9; /* found_position */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type [detachable] ET_OBJECT_TEST_SCOPE */
struct S382 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* object_tests */
	T6 a2; /* hidden_count */
};

/* Struct for type [detachable] ET_OBJECT_TEST_SCOPE_BUILDER */
struct S383 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* scope */
	T1 a5; /* is_negated */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT] */
struct S384 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T6 a9; /* found_position */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type [detachable] ET_ACROSS_CURSOR_SCOPE */
struct S385 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hidden_count */
	T0* a2; /* across_components */
};

/* Struct for type [detachable] ET_ATTACHMENT_SCOPE */
struct S386 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* locals_attached */
	T0* a2; /* arguments_attached */
	T0* a3; /* attributes_attached */
	T1 a4; /* result_attached */
	T1 a5; /* is_code_unreachable */
};

/* Struct for type [detachable] ET_ATTACHMENT_SCOPE_BUILDER */
struct S387 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* scope */
	T1 a2; /* is_negated */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE] */
struct S388 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM] */
struct S389 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [detachable] ET_CLIENT_LIST */
struct S390 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [detachable] ET_CLIENT */
struct S391 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* named_base_class */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]] */
struct S392 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [detachable] ET_ADAPTED_BASE_CLASS_CHECKER */
struct S393 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class_impl */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T1 a4; /* feature_flattening_error_only */
	T1 a5; /* has_fatal_error */
	T1 a6; /* class_interface_error_only */
};

/* Struct for type detachable ET_PRECONDITIONS */
struct S394 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* validity_checked */
	T1 a2; /* has_validity_error */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* require_keyword */
	T0* a6; /* else_keyword */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE] */
struct S395 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* hash_function */
};

/* Struct for type detachable ET_FEATURE_LIST */
struct S397 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
};

/* Struct for type [detachable] ET_UNKNOWN_GROUP */
struct S399 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T1 a2; /* use_obsolete_syntax */
	T0* a3; /* cached_absolute_pathname */
};

/* Struct for type [detachable] ET_BASE_TYPE_LIST */
struct S401 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [detachable] ET_KEYWORD */
struct S402 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T0* a2; /* text */
	T6 a3; /* compressed_position */
};

/* Struct for type [detachable] ET_CLASS_CODES */
struct S403 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
struct S404 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
struct S405 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
struct S406 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] PATH */
struct S409 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_name */
	T0* a2; /* storage */
	T1 a3; /* is_normalized */
};

/* Struct for type [detachable] RX_BYTE_CODE */
struct S411 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* byte_code */
	T0* a3; /* character_sets */
	T6 a4; /* capacity */
	T6 a5; /* character_sets_count */
	T6 a6; /* character_sets_capacity */
};

/* Struct for type [detachable] RX_CHARACTER_SET */
struct S412 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* set */
};

/* Struct for type [detachable] RX_CASE_MAPPING */
struct S413 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* lower_table */
	T0* a2; /* flip_table */
};

/* Struct for type [detachable] ARRAY [[attached] RX_CHARACTER_SET] */
struct S415 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [detachable] SPECIAL [[attached] RX_CHARACTER_SET] */
struct S416 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] UC_STRING */
struct S417 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* byte_count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
	T0* a5; /* area */
	T6 a6; /* last_byte_index_input */
	T6 a7; /* last_byte_index_result */
};

/* Struct for type [detachable] KL_ANY_ROUTINES */
struct S418 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] STRING_TO_INTEGER_CONVERTOR */
struct S419 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* sign */
	T11 a2; /* part1 */
	T11 a3; /* part2 */
	T6 a4; /* last_state */
	T1 a5; /* internal_overflowed */
	T0* a6; /* leading_separators */
	T0* a7; /* trailing_separators */
	T1 a8; /* leading_separators_acceptable */
	T1 a9; /* trailing_separators_acceptable */
	T6 a10; /* conversion_type */
};

/* Struct for type [detachable] ARGUMENTS_32 */
struct S421 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] ET_ECF_OPTIONS */
struct S427 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_assertions */
	T0* a2; /* primary_debugs */
	T0* a3; /* primary_warnings */
	T0* a4; /* primary_options */
	T0* a5; /* description */
	T0* a6; /* secondary_options */
};

/* Struct for type detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT] */
struct S428 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] XM_NAMESPACE */
struct S429 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* uri */
	T0* a2; /* ns_prefix */
};

/* Struct for type [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE] */
struct S430 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type [detachable] ET_LIKE_CURRENT */
struct S432 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* like_keyword */
	T0* a3; /* current_keyword */
};

/* Struct for type [detachable] ET_DYNAMIC_PROCEDURE_TYPE */
struct S433 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T0* a5; /* attached_type */
	T6 a6; /* attribute_count */
	T0* a7; /* queries */
	T0* a8; /* meta_type */
	T0* a9; /* conforming_ancestors */
	T0* a10; /* next_type */
	T0* a11; /* procedures */
	T1 a12; /* has_static */
	T0* a13; /* query_calls */
	T0* a14; /* procedure_calls */
	T0* a15; /* open_operand_type_sets */
	T6 a16; /* hash_code */
	T0* a17; /* procedures_by_seed */
	T1 a18; /* has_reference_attributes */
	T0* a19; /* queries_by_seed */
	T0* a20; /* set_rout_disp_final_feature */
	T1 a21; /* has_generic_expanded_attributes */
	T0* a22; /* equality_expressions */
	T0* a23; /* object_equality_expressions */
};

/* Struct for type [detachable] ET_DYNAMIC_FUNCTION_TYPE */
struct S434 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T0* a5; /* attached_type */
	T6 a6; /* attribute_count */
	T0* a7; /* queries */
	T0* a8; /* meta_type */
	T0* a9; /* conforming_ancestors */
	T0* a10; /* next_type */
	T0* a11; /* procedures */
	T1 a12; /* has_static */
	T0* a13; /* query_calls */
	T0* a14; /* procedure_calls */
	T0* a15; /* open_operand_type_sets */
	T0* a16; /* result_type_set */
	T6 a17; /* hash_code */
	T0* a18; /* procedures_by_seed */
	T1 a19; /* has_reference_attributes */
	T0* a20; /* queries_by_seed */
	T0* a21; /* set_rout_disp_final_feature */
	T1 a22; /* has_generic_expanded_attributes */
	T0* a23; /* equality_expressions */
	T0* a24; /* object_equality_expressions */
};

/* Struct for type [detachable] DT_SHARED_SYSTEM_CLOCK */
struct S435 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DT_SYSTEM_CLOCK */
struct S436 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* second */
	T6 a2; /* year */
	T6 a3; /* month */
	T6 a4; /* day */
	T6 a5; /* hour */
	T6 a6; /* minute */
	T6 a7; /* millisecond */
	T0* a8; /* local_clock */
};

/* Struct for type [detachable] ET_EIFFEL_PREPARSER */
struct S437 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* eiffel_buffer */
	T0* a2; /* system_processor */
	T6 a3; /* last_text_count */
	T6 a4; /* last_literal_start */
	T0* a5; /* filename */
	T0* a6; /* group */
	T0* a7; /* verbatim_marker */
	T0* a8; /* verbatim_open_white_characters */
	T0* a9; /* verbatim_close_white_characters */
	T0* a10; /* yy_pushed_start_conditions */
	T0* a11; /* input_buffer */
	T0* a12; /* yy_state_stack */
	T6 a13; /* yy_start_state */
	T6 a14; /* yy_line */
	T6 a15; /* yy_column */
	T6 a16; /* yy_position */
	T6 a17; /* yy_start */
	T6 a18; /* yy_end */
	T6 a19; /* line */
	T6 a20; /* column */
	T6 a21; /* position */
	T0* a22; /* yy_nxt */
	T0* a23; /* yy_chk */
	T0* a24; /* yy_base */
	T0* a25; /* yy_def */
	T0* a26; /* yy_ec */
	T0* a27; /* yy_meta */
	T0* a28; /* yy_accept */
	T0* a29; /* yy_acclist */
	T0* a30; /* yy_content */
	T0* a31; /* yy_content_area */
	T0* a32; /* last_classname */
	T1 a33; /* class_keyword_found */
	T6 a34; /* last_token */
	T1 a35; /* yy_more_flag */
	T6 a36; /* yy_more_len */
	T6 a37; /* yy_state_count */
	T6 a38; /* yy_last_accepting_state */
	T6 a39; /* yy_last_accepting_cpos */
	T6 a40; /* yy_lp */
	T6 a41; /* yy_looking_for_trail_begin */
	T6 a42; /* yy_full_match */
	T6 a43; /* yy_full_state */
	T6 a44; /* yy_full_lp */
	T1 a45; /* yy_rejected */
	T6 a46; /* last_literal_end */
	T6 a47; /* pushed_start_condition_count */
	T6 a48; /* ms_column */
	T6 a49; /* ms_line */
	T6 a50; /* last_break_end */
	T6 a51; /* last_comment_end */
};

/* Struct for type [detachable] ET_MASTER_CLASS_CHECKER */
struct S438 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
	T1 a3; /* has_fatal_error */
};

/* Struct for type [detachable] ET_EIFFEL_PARSER */
struct S439 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* eiffel_buffer */
	T0* a2; /* counters */
	T0* a3; /* last_formal_arguments_stack */
	T0* a4; /* last_local_variables_stack */
	T0* a5; /* last_keywords */
	T0* a6; /* last_symbols */
	T0* a7; /* last_object_tests_stack */
	T0* a8; /* last_object_tests_pool */
	T0* a9; /* last_across_components_stack */
	T0* a10; /* last_across_components_pool */
	T0* a11; /* assertions */
	T0* a12; /* assertion_counters */
	T0* a13; /* assertion_kinds */
	T6 a14; /* assertion_kind */
	T0* a15; /* queries */
	T0* a16; /* procedures */
	T0* a17; /* constraints */
	T0* a18; /* providers */
	T0* a19; /* current_class */
	T0* a20; /* system_processor */
	T6 a21; /* last_text_count */
	T6 a22; /* last_literal_start */
	T0* a23; /* filename */
	T0* a24; /* group */
	T0* a25; /* verbatim_marker */
	T0* a26; /* verbatim_open_white_characters */
	T0* a27; /* verbatim_close_white_characters */
	T0* a28; /* yyss */
	T0* a29; /* yy_pushed_start_conditions */
	T0* a30; /* input_buffer */
	T0* a31; /* yyspecial_routines1 */
	T6 a32; /* yyvsc1 */
	T0* a33; /* yyvs1 */
	T0* a34; /* yyspecial_routines2 */
	T6 a35; /* yyvsc2 */
	T0* a36; /* yyvs2 */
	T0* a37; /* yyspecial_routines3 */
	T6 a38; /* yyvsc3 */
	T0* a39; /* yyvs3 */
	T0* a40; /* yyspecial_routines4 */
	T6 a41; /* yyvsc4 */
	T0* a42; /* yyvs4 */
	T0* a43; /* yyspecial_routines5 */
	T6 a44; /* yyvsc5 */
	T0* a45; /* yyvs5 */
	T0* a46; /* yyspecial_routines6 */
	T6 a47; /* yyvsc6 */
	T0* a48; /* yyvs6 */
	T0* a49; /* yyspecial_routines7 */
	T6 a50; /* yyvsc7 */
	T0* a51; /* yyvs7 */
	T0* a52; /* yyspecial_routines8 */
	T6 a53; /* yyvsc8 */
	T0* a54; /* yyvs8 */
	T0* a55; /* yyspecial_routines9 */
	T6 a56; /* yyvsc9 */
	T0* a57; /* yyvs9 */
	T0* a58; /* yyspecial_routines10 */
	T6 a59; /* yyvsc10 */
	T0* a60; /* yyvs10 */
	T0* a61; /* yyspecial_routines11 */
	T6 a62; /* yyvsc11 */
	T0* a63; /* yyvs11 */
	T0* a64; /* yyspecial_routines12 */
	T6 a65; /* yyvsc12 */
	T0* a66; /* yyvs12 */
	T0* a67; /* yyspecial_routines13 */
	T6 a68; /* yyvsc13 */
	T0* a69; /* yyvs13 */
	T0* a70; /* yyspecial_routines14 */
	T6 a71; /* yyvsc14 */
	T0* a72; /* yyvs14 */
	T0* a73; /* yyspecial_routines15 */
	T6 a74; /* yyvsc15 */
	T0* a75; /* yyvs15 */
	T0* a76; /* yyspecial_routines16 */
	T6 a77; /* yyvsc16 */
	T0* a78; /* yyvs16 */
	T0* a79; /* yyspecial_routines17 */
	T6 a80; /* yyvsc17 */
	T0* a81; /* yyvs17 */
	T0* a82; /* yyspecial_routines18 */
	T6 a83; /* yyvsc18 */
	T0* a84; /* yyvs18 */
	T0* a85; /* yyspecial_routines19 */
	T6 a86; /* yyvsc19 */
	T0* a87; /* yyvs19 */
	T0* a88; /* yyspecial_routines20 */
	T6 a89; /* yyvsc20 */
	T0* a90; /* yyvs20 */
	T0* a91; /* yyspecial_routines21 */
	T6 a92; /* yyvsc21 */
	T0* a93; /* yyvs21 */
	T0* a94; /* yyspecial_routines22 */
	T6 a95; /* yyvsc22 */
	T0* a96; /* yyvs22 */
	T0* a97; /* yyspecial_routines23 */
	T6 a98; /* yyvsc23 */
	T0* a99; /* yyvs23 */
	T0* a100; /* yyspecial_routines24 */
	T6 a101; /* yyvsc24 */
	T0* a102; /* yyvs24 */
	T0* a103; /* yyspecial_routines25 */
	T6 a104; /* yyvsc25 */
	T0* a105; /* yyvs25 */
	T0* a106; /* yyspecial_routines26 */
	T6 a107; /* yyvsc26 */
	T0* a108; /* yyvs26 */
	T0* a109; /* yyspecial_routines27 */
	T6 a110; /* yyvsc27 */
	T0* a111; /* yyvs27 */
	T0* a112; /* yyspecial_routines28 */
	T6 a113; /* yyvsc28 */
	T0* a114; /* yyvs28 */
	T0* a115; /* yyspecial_routines29 */
	T6 a116; /* yyvsc29 */
	T0* a117; /* yyvs29 */
	T0* a118; /* yyspecial_routines30 */
	T6 a119; /* yyvsc30 */
	T0* a120; /* yyvs30 */
	T0* a121; /* yyspecial_routines31 */
	T6 a122; /* yyvsc31 */
	T0* a123; /* yyvs31 */
	T0* a124; /* yyspecial_routines32 */
	T6 a125; /* yyvsc32 */
	T0* a126; /* yyvs32 */
	T0* a127; /* yyspecial_routines33 */
	T6 a128; /* yyvsc33 */
	T0* a129; /* yyvs33 */
	T0* a130; /* yyspecial_routines34 */
	T6 a131; /* yyvsc34 */
	T0* a132; /* yyvs34 */
	T0* a133; /* yyspecial_routines35 */
	T6 a134; /* yyvsc35 */
	T0* a135; /* yyvs35 */
	T0* a136; /* yyspecial_routines36 */
	T6 a137; /* yyvsc36 */
	T0* a138; /* yyvs36 */
	T0* a139; /* yyspecial_routines37 */
	T6 a140; /* yyvsc37 */
	T0* a141; /* yyvs37 */
	T0* a142; /* yyspecial_routines38 */
	T6 a143; /* yyvsc38 */
	T0* a144; /* yyvs38 */
	T0* a145; /* yyspecial_routines39 */
	T6 a146; /* yyvsc39 */
	T0* a147; /* yyvs39 */
	T0* a148; /* yyspecial_routines40 */
	T6 a149; /* yyvsc40 */
	T0* a150; /* yyvs40 */
	T0* a151; /* yyspecial_routines41 */
	T6 a152; /* yyvsc41 */
	T0* a153; /* yyvs41 */
	T0* a154; /* yyspecial_routines42 */
	T6 a155; /* yyvsc42 */
	T0* a156; /* yyvs42 */
	T0* a157; /* yyspecial_routines43 */
	T6 a158; /* yyvsc43 */
	T0* a159; /* yyvs43 */
	T0* a160; /* yyspecial_routines44 */
	T6 a161; /* yyvsc44 */
	T0* a162; /* yyvs44 */
	T0* a163; /* yyspecial_routines45 */
	T6 a164; /* yyvsc45 */
	T0* a165; /* yyvs45 */
	T0* a166; /* yyspecial_routines46 */
	T6 a167; /* yyvsc46 */
	T0* a168; /* yyvs46 */
	T0* a169; /* yyspecial_routines47 */
	T6 a170; /* yyvsc47 */
	T0* a171; /* yyvs47 */
	T0* a172; /* yyspecial_routines48 */
	T6 a173; /* yyvsc48 */
	T0* a174; /* yyvs48 */
	T0* a175; /* yyspecial_routines49 */
	T6 a176; /* yyvsc49 */
	T0* a177; /* yyvs49 */
	T0* a178; /* yyspecial_routines50 */
	T6 a179; /* yyvsc50 */
	T0* a180; /* yyvs50 */
	T0* a181; /* yyspecial_routines51 */
	T6 a182; /* yyvsc51 */
	T0* a183; /* yyvs51 */
	T0* a184; /* yyspecial_routines52 */
	T6 a185; /* yyvsc52 */
	T0* a186; /* yyvs52 */
	T0* a187; /* yyspecial_routines53 */
	T6 a188; /* yyvsc53 */
	T0* a189; /* yyvs53 */
	T0* a190; /* yyspecial_routines54 */
	T6 a191; /* yyvsc54 */
	T0* a192; /* yyvs54 */
	T0* a193; /* yyspecial_routines55 */
	T6 a194; /* yyvsc55 */
	T0* a195; /* yyvs55 */
	T0* a196; /* yyspecial_routines56 */
	T6 a197; /* yyvsc56 */
	T0* a198; /* yyvs56 */
	T0* a199; /* yyspecial_routines57 */
	T6 a200; /* yyvsc57 */
	T0* a201; /* yyvs57 */
	T0* a202; /* yyspecial_routines58 */
	T6 a203; /* yyvsc58 */
	T0* a204; /* yyvs58 */
	T0* a205; /* yyspecial_routines59 */
	T6 a206; /* yyvsc59 */
	T0* a207; /* yyvs59 */
	T0* a208; /* yyspecial_routines60 */
	T6 a209; /* yyvsc60 */
	T0* a210; /* yyvs60 */
	T0* a211; /* yyspecial_routines61 */
	T6 a212; /* yyvsc61 */
	T0* a213; /* yyvs61 */
	T0* a214; /* yyspecial_routines62 */
	T6 a215; /* yyvsc62 */
	T0* a216; /* yyvs62 */
	T0* a217; /* yyspecial_routines63 */
	T6 a218; /* yyvsc63 */
	T0* a219; /* yyvs63 */
	T0* a220; /* yyspecial_routines64 */
	T6 a221; /* yyvsc64 */
	T0* a222; /* yyvs64 */
	T0* a223; /* yyspecial_routines65 */
	T6 a224; /* yyvsc65 */
	T0* a225; /* yyvs65 */
	T0* a226; /* yyspecial_routines66 */
	T6 a227; /* yyvsc66 */
	T0* a228; /* yyvs66 */
	T0* a229; /* yyspecial_routines67 */
	T6 a230; /* yyvsc67 */
	T0* a231; /* yyvs67 */
	T0* a232; /* yyspecial_routines68 */
	T6 a233; /* yyvsc68 */
	T0* a234; /* yyvs68 */
	T0* a235; /* yyspecial_routines69 */
	T6 a236; /* yyvsc69 */
	T0* a237; /* yyvs69 */
	T0* a238; /* yyspecial_routines70 */
	T6 a239; /* yyvsc70 */
	T0* a240; /* yyvs70 */
	T0* a241; /* yyspecial_routines71 */
	T6 a242; /* yyvsc71 */
	T0* a243; /* yyvs71 */
	T0* a244; /* yyspecial_routines72 */
	T6 a245; /* yyvsc72 */
	T0* a246; /* yyvs72 */
	T0* a247; /* yyspecial_routines73 */
	T6 a248; /* yyvsc73 */
	T0* a249; /* yyvs73 */
	T0* a250; /* yyspecial_routines74 */
	T6 a251; /* yyvsc74 */
	T0* a252; /* yyvs74 */
	T0* a253; /* yyspecial_routines75 */
	T6 a254; /* yyvsc75 */
	T0* a255; /* yyvs75 */
	T0* a256; /* yyspecial_routines76 */
	T6 a257; /* yyvsc76 */
	T0* a258; /* yyvs76 */
	T0* a259; /* yyspecial_routines77 */
	T6 a260; /* yyvsc77 */
	T0* a261; /* yyvs77 */
	T0* a262; /* yyspecial_routines78 */
	T6 a263; /* yyvsc78 */
	T0* a264; /* yyvs78 */
	T0* a265; /* yyspecial_routines79 */
	T6 a266; /* yyvsc79 */
	T0* a267; /* yyvs79 */
	T0* a268; /* yyspecial_routines80 */
	T6 a269; /* yyvsc80 */
	T0* a270; /* yyvs80 */
	T0* a271; /* yyspecial_routines81 */
	T6 a272; /* yyvsc81 */
	T0* a273; /* yyvs81 */
	T0* a274; /* yyspecial_routines82 */
	T6 a275; /* yyvsc82 */
	T0* a276; /* yyvs82 */
	T0* a277; /* yyspecial_routines83 */
	T6 a278; /* yyvsc83 */
	T0* a279; /* yyvs83 */
	T0* a280; /* yyspecial_routines84 */
	T6 a281; /* yyvsc84 */
	T0* a282; /* yyvs84 */
	T0* a283; /* yyspecial_routines85 */
	T6 a284; /* yyvsc85 */
	T0* a285; /* yyvs85 */
	T0* a286; /* yyspecial_routines86 */
	T6 a287; /* yyvsc86 */
	T0* a288; /* yyvs86 */
	T0* a289; /* yyspecial_routines87 */
	T6 a290; /* yyvsc87 */
	T0* a291; /* yyvs87 */
	T0* a292; /* yyspecial_routines88 */
	T6 a293; /* yyvsc88 */
	T0* a294; /* yyvs88 */
	T0* a295; /* yyspecial_routines89 */
	T6 a296; /* yyvsc89 */
	T0* a297; /* yyvs89 */
	T0* a298; /* yyspecial_routines90 */
	T6 a299; /* yyvsc90 */
	T0* a300; /* yyvs90 */
	T0* a301; /* yyspecial_routines91 */
	T6 a302; /* yyvsc91 */
	T0* a303; /* yyvs91 */
	T0* a304; /* yyspecial_routines92 */
	T6 a305; /* yyvsc92 */
	T0* a306; /* yyvs92 */
	T0* a307; /* yyspecial_routines93 */
	T6 a308; /* yyvsc93 */
	T0* a309; /* yyvs93 */
	T0* a310; /* yyspecial_routines94 */
	T6 a311; /* yyvsc94 */
	T0* a312; /* yyvs94 */
	T0* a313; /* yyspecial_routines95 */
	T6 a314; /* yyvsc95 */
	T0* a315; /* yyvs95 */
	T0* a316; /* yyspecial_routines96 */
	T6 a317; /* yyvsc96 */
	T0* a318; /* yyvs96 */
	T0* a319; /* yyspecial_routines97 */
	T6 a320; /* yyvsc97 */
	T0* a321; /* yyvs97 */
	T0* a322; /* yyspecial_routines98 */
	T6 a323; /* yyvsc98 */
	T0* a324; /* yyvs98 */
	T0* a325; /* yyspecial_routines99 */
	T6 a326; /* yyvsc99 */
	T0* a327; /* yyvs99 */
	T0* a328; /* yyspecial_routines100 */
	T6 a329; /* yyvsc100 */
	T0* a330; /* yyvs100 */
	T0* a331; /* yyspecial_routines101 */
	T6 a332; /* yyvsc101 */
	T0* a333; /* yyvs101 */
	T0* a334; /* yyspecial_routines102 */
	T6 a335; /* yyvsc102 */
	T0* a336; /* yyvs102 */
	T0* a337; /* yyspecial_routines103 */
	T6 a338; /* yyvsc103 */
	T0* a339; /* yyvs103 */
	T0* a340; /* yyspecial_routines104 */
	T6 a341; /* yyvsc104 */
	T0* a342; /* yyvs104 */
	T0* a343; /* yyspecial_routines105 */
	T6 a344; /* yyvsc105 */
	T0* a345; /* yyvs105 */
	T0* a346; /* yyspecial_routines106 */
	T6 a347; /* yyvsc106 */
	T0* a348; /* yyvs106 */
	T0* a349; /* yyspecial_routines107 */
	T6 a350; /* yyvsc107 */
	T0* a351; /* yyvs107 */
	T0* a352; /* yyspecial_routines108 */
	T6 a353; /* yyvsc108 */
	T0* a354; /* yyvs108 */
	T0* a355; /* yyspecial_routines109 */
	T6 a356; /* yyvsc109 */
	T0* a357; /* yyvs109 */
	T0* a358; /* yyspecial_routines110 */
	T6 a359; /* yyvsc110 */
	T0* a360; /* yyvs110 */
	T0* a361; /* yyspecial_routines111 */
	T6 a362; /* yyvsc111 */
	T0* a363; /* yyvs111 */
	T0* a364; /* yyspecial_routines112 */
	T6 a365; /* yyvsc112 */
	T0* a366; /* yyvs112 */
	T0* a367; /* yyspecial_routines113 */
	T6 a368; /* yyvsc113 */
	T0* a369; /* yyvs113 */
	T0* a370; /* yyspecial_routines114 */
	T6 a371; /* yyvsc114 */
	T0* a372; /* yyvs114 */
	T0* a373; /* yyspecial_routines115 */
	T6 a374; /* yyvsc115 */
	T0* a375; /* yyvs115 */
	T0* a376; /* yyspecial_routines116 */
	T6 a377; /* yyvsc116 */
	T0* a378; /* yyvs116 */
	T0* a379; /* yyspecial_routines117 */
	T6 a380; /* yyvsc117 */
	T0* a381; /* yyvs117 */
	T0* a382; /* yyspecial_routines118 */
	T6 a383; /* yyvsc118 */
	T0* a384; /* yyvs118 */
	T0* a385; /* yyspecial_routines119 */
	T6 a386; /* yyvsc119 */
	T0* a387; /* yyvs119 */
	T0* a388; /* yyspecial_routines120 */
	T6 a389; /* yyvsc120 */
	T0* a390; /* yyvs120 */
	T0* a391; /* yyspecial_routines121 */
	T6 a392; /* yyvsc121 */
	T0* a393; /* yyvs121 */
	T0* a394; /* yyspecial_routines122 */
	T6 a395; /* yyvsc122 */
	T0* a396; /* yyvs122 */
	T0* a397; /* yyspecial_routines123 */
	T6 a398; /* yyvsc123 */
	T0* a399; /* yyvs123 */
	T0* a400; /* yyspecial_routines124 */
	T6 a401; /* yyvsc124 */
	T0* a402; /* yyvs124 */
	T0* a403; /* yyspecial_routines125 */
	T6 a404; /* yyvsc125 */
	T0* a405; /* yyvs125 */
	T0* a406; /* yyspecial_routines126 */
	T6 a407; /* yyvsc126 */
	T0* a408; /* yyvs126 */
	T0* a409; /* yyspecial_routines127 */
	T6 a410; /* yyvsc127 */
	T0* a411; /* yyvs127 */
	T0* a412; /* yyspecial_routines128 */
	T6 a413; /* yyvsc128 */
	T0* a414; /* yyvs128 */
	T0* a415; /* yytranslate */
	T0* a416; /* yyr1 */
	T0* a417; /* yytypes1 */
	T0* a418; /* yytypes2 */
	T0* a419; /* yydefact */
	T0* a420; /* yydefgoto */
	T0* a421; /* yypact */
	T0* a422; /* yypgoto */
	T0* a423; /* yytable */
	T0* a424; /* yycheck */
	T0* a425; /* yy_state_stack */
	T6 a426; /* yy_start_state */
	T6 a427; /* yy_line */
	T6 a428; /* yy_column */
	T6 a429; /* yy_position */
	T6 a430; /* yy_start */
	T6 a431; /* yy_end */
	T6 a432; /* line */
	T6 a433; /* column */
	T6 a434; /* position */
	T0* a435; /* yy_nxt */
	T0* a436; /* yy_chk */
	T0* a437; /* yy_base */
	T0* a438; /* yy_def */
	T0* a439; /* yy_ec */
	T0* a440; /* yy_meta */
	T0* a441; /* yy_accept */
	T0* a442; /* yy_acclist */
	T0* a443; /* yy_content */
	T0* a444; /* yy_content_area */
	T6 a445; /* time_stamp */
	T0* a446; /* last_class */
	T6 a447; /* yy_parsing_status */
	T6 a448; /* yy_suspended_yystacksize */
	T6 a449; /* yy_suspended_yystate */
	T6 a450; /* yy_suspended_yyn */
	T6 a451; /* yy_suspended_yychar1 */
	T6 a452; /* yy_suspended_index */
	T6 a453; /* yy_suspended_yyss_top */
	T6 a454; /* yy_suspended_yy_goto */
	T6 a455; /* yyssp */
	T6 a456; /* error_count */
	T1 a457; /* yy_lookahead_needed */
	T6 a458; /* yyerrstatus */
	T6 a459; /* last_token */
	T0* a460; /* last_clients */
	T0* a461; /* last_export_clients */
	T0* a462; /* last_feature_clause */
	T6 a463; /* last_literal_end */
	T1 a464; /* yy_rejected */
	T6 a465; /* yy_state_count */
	T6 a466; /* yy_full_match */
	T6 a467; /* yy_lp */
	T6 a468; /* yy_looking_for_trail_begin */
	T6 a469; /* yy_full_lp */
	T6 a470; /* yy_full_state */
	T6 a471; /* pushed_start_condition_count */
	T1 a472; /* yy_more_flag */
	T6 a473; /* yy_more_len */
	T6 a474; /* yy_last_accepting_state */
	T6 a475; /* yy_last_accepting_cpos */
	T6 a476; /* yyvsp1 */
	T6 a477; /* yyvsp2 */
	T6 a478; /* yyvsp3 */
	T6 a479; /* yyvsp4 */
	T6 a480; /* yyvsp5 */
	T6 a481; /* yyvsp6 */
	T6 a482; /* yyvsp7 */
	T6 a483; /* yyvsp8 */
	T6 a484; /* yyvsp9 */
	T6 a485; /* yyvsp10 */
	T6 a486; /* yyvsp11 */
	T6 a487; /* yyvsp12 */
	T6 a488; /* yyvsp13 */
	T6 a489; /* yyvsp14 */
	T6 a490; /* yyvsp15 */
	T6 a491; /* yyvsp16 */
	T6 a492; /* yyvsp17 */
	T6 a493; /* yyvsp18 */
	T6 a494; /* yyvsp19 */
	T6 a495; /* yyvsp20 */
	T6 a496; /* yyvsp21 */
	T6 a497; /* yyvsp22 */
	T6 a498; /* yyvsp23 */
	T6 a499; /* yyvsp24 */
	T6 a500; /* yyvsp25 */
	T6 a501; /* yyvsp26 */
	T6 a502; /* yyvsp27 */
	T6 a503; /* yyvsp28 */
	T6 a504; /* yyvsp29 */
	T6 a505; /* yyvsp30 */
	T6 a506; /* yyvsp31 */
	T6 a507; /* yyvsp32 */
	T6 a508; /* yyvsp33 */
	T6 a509; /* yyvsp34 */
	T6 a510; /* yyvsp35 */
	T6 a511; /* yyvsp36 */
	T6 a512; /* yyvsp37 */
	T6 a513; /* yyvsp38 */
	T6 a514; /* yyvsp39 */
	T6 a515; /* yyvsp40 */
	T6 a516; /* yyvsp41 */
	T6 a517; /* yyvsp42 */
	T6 a518; /* yyvsp43 */
	T6 a519; /* yyvsp44 */
	T6 a520; /* yyvsp45 */
	T6 a521; /* yyvsp46 */
	T6 a522; /* yyvsp47 */
	T6 a523; /* yyvsp48 */
	T6 a524; /* yyvsp49 */
	T6 a525; /* yyvsp50 */
	T6 a526; /* yyvsp51 */
	T6 a527; /* yyvsp52 */
	T6 a528; /* yyvsp53 */
	T6 a529; /* yyvsp54 */
	T6 a530; /* yyvsp55 */
	T6 a531; /* yyvsp56 */
	T6 a532; /* yyvsp57 */
	T6 a533; /* yyvsp58 */
	T6 a534; /* yyvsp59 */
	T6 a535; /* yyvsp60 */
	T6 a536; /* yyvsp61 */
	T6 a537; /* yyvsp62 */
	T6 a538; /* yyvsp63 */
	T6 a539; /* yyvsp64 */
	T6 a540; /* yyvsp65 */
	T6 a541; /* yyvsp66 */
	T6 a542; /* yyvsp67 */
	T6 a543; /* yyvsp68 */
	T6 a544; /* yyvsp69 */
	T6 a545; /* yyvsp70 */
	T6 a546; /* yyvsp71 */
	T6 a547; /* yyvsp72 */
	T6 a548; /* yyvsp73 */
	T6 a549; /* yyvsp74 */
	T6 a550; /* yyvsp75 */
	T6 a551; /* yyvsp76 */
	T6 a552; /* yyvsp77 */
	T6 a553; /* yyvsp78 */
	T6 a554; /* yyvsp79 */
	T6 a555; /* yyvsp80 */
	T6 a556; /* yyvsp81 */
	T6 a557; /* yyvsp82 */
	T6 a558; /* yyvsp83 */
	T6 a559; /* yyvsp84 */
	T6 a560; /* yyvsp85 */
	T6 a561; /* yyvsp86 */
	T6 a562; /* yyvsp87 */
	T6 a563; /* yyvsp88 */
	T6 a564; /* yyvsp89 */
	T6 a565; /* yyvsp90 */
	T6 a566; /* yyvsp91 */
	T6 a567; /* yyvsp92 */
	T6 a568; /* yyvsp93 */
	T6 a569; /* yyvsp94 */
	T6 a570; /* yyvsp95 */
	T6 a571; /* yyvsp96 */
	T6 a572; /* yyvsp97 */
	T6 a573; /* yyvsp98 */
	T6 a574; /* yyvsp99 */
	T6 a575; /* yyvsp100 */
	T6 a576; /* yyvsp101 */
	T6 a577; /* yyvsp102 */
	T6 a578; /* yyvsp103 */
	T6 a579; /* yyvsp104 */
	T6 a580; /* yyvsp105 */
	T6 a581; /* yyvsp106 */
	T6 a582; /* yyvsp107 */
	T6 a583; /* yyvsp108 */
	T6 a584; /* yyvsp109 */
	T6 a585; /* yyvsp110 */
	T6 a586; /* yyvsp111 */
	T6 a587; /* yyvsp112 */
	T6 a588; /* yyvsp113 */
	T6 a589; /* yyvsp114 */
	T6 a590; /* yyvsp115 */
	T6 a591; /* yyvsp116 */
	T6 a592; /* yyvsp117 */
	T6 a593; /* yyvsp118 */
	T6 a594; /* yyvsp119 */
	T6 a595; /* yyvsp120 */
	T6 a596; /* yyvsp121 */
	T6 a597; /* yyvsp122 */
	T6 a598; /* yyvsp123 */
	T6 a599; /* yyvsp124 */
	T6 a600; /* yyvsp125 */
	T6 a601; /* yyvsp126 */
	T6 a602; /* yyvsp127 */
	T6 a603; /* yyvsp128 */
	T0* a604; /* last_detachable_any_value */
	T0* a605; /* last_detachable_et_keyword_value */
	T0* a606; /* last_detachable_et_agent_keyword_value */
	T0* a607; /* last_detachable_et_precursor_keyword_value */
	T0* a608; /* last_detachable_et_symbol_value */
	T0* a609; /* last_detachable_et_position_value */
	T0* a610; /* last_detachable_et_boolean_constant_value */
	T0* a611; /* last_detachable_et_break_value */
	T0* a612; /* last_detachable_et_character_constant_value */
	T0* a613; /* last_detachable_et_current_value */
	T0* a614; /* last_detachable_et_free_operator_value */
	T0* a615; /* last_detachable_et_identifier_value */
	T0* a616; /* last_detachable_et_integer_constant_value */
	T0* a617; /* last_detachable_et_keyword_operator_value */
	T0* a618; /* last_detachable_et_manifest_string_value */
	T0* a619; /* last_detachable_et_real_constant_value */
	T0* a620; /* last_detachable_et_result_value */
	T0* a621; /* last_detachable_et_retry_instruction_value */
	T0* a622; /* last_detachable_et_symbol_operator_value */
	T0* a623; /* last_detachable_et_void_value */
	T0* a624; /* last_detachable_et_semicolon_symbol_value */
	T0* a625; /* last_detachable_et_bracket_symbol_value */
	T0* a626; /* last_detachable_et_question_mark_symbol_value */
	T0* a627; /* last_formal_arguments */
	T0* a628; /* last_local_variables */
	T0* a629; /* last_object_tests */
	T0* a630; /* last_across_components */
	T6 a631; /* last_break_end */
	T6 a632; /* last_comment_end */
	T6 a633; /* ms_column */
	T6 a634; /* ms_line */
	T6 a635; /* break_kind */
};

/* Struct for type [detachable] ET_PROVIDER_CHECKER */
struct S440 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
};

/* Struct for type [detachable] ET_ANCESTOR_BUILDER */
struct S441 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_sorter */
	T0* a2; /* ancestors */
	T0* a3; /* conforming_ancestors */
	T0* a4; /* parent_checker */
	T0* a5; /* formal_parameter_checker */
	T0* a6; /* parent_context */
	T0* a7; /* current_class */
	T0* a8; /* system_processor */
};

/* Struct for type [detachable] ET_FEATURE_FLATTENER */
struct S442 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* named_features */
	T0* a2; /* queries */
	T0* a3; /* procedures */
	T0* a4; /* aliased_features */
	T0* a5; /* clients_list */
	T0* a6; /* client_classes */
	T0* a7; /* feature_adaptation_resolver */
	T0* a8; /* dotnet_feature_adaptation_resolver */
	T0* a9; /* identifier_type_resolver */
	T0* a10; /* unfolded_tuple_actual_parameters_resolver */
	T0* a11; /* anchored_type_checker */
	T0* a12; /* signature_checker */
	T0* a13; /* parent_checker */
	T0* a14; /* formal_parameter_checker */
	T0* a15; /* builtin_feature_checker */
	T0* a16; /* precursor_checker */
	T0* a17; /* precursors */
	T0* a18; /* current_class */
	T0* a19; /* system_processor */
	T1 a20; /* has_signature_error */
};

/* Struct for type [detachable] ET_INTERFACE_CHECKER */
struct S443 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* classes_to_be_processed */
	T0* a2; /* qualified_anchored_type_checker */
	T0* a3; /* unfolded_tuple_actual_parameters_resolver */
	T0* a4; /* old_name_rename_table */
	T0* a5; /* new_name_rename_table */
	T0* a6; /* current_class */
	T0* a7; /* system_processor */
};

/* Struct for type [detachable] ET_IMPLEMENTATION_CHECKER */
struct S444 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
	T0* a3; /* feature_checker */
	T0* a4; /* named_features */
	T0* a5; /* feature_adaptation_resolver */
	T0* a6; /* dotnet_feature_adaptation_resolver */
	T0* a7; /* signature_checker */
	T0* a8; /* parent_checker3 */
	T0* a9; /* precursor_procedures */
	T0* a10; /* precursor_queries */
	T0* a11; /* supplier_builder */
	T0* a12; /* no_suppliers */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS] */
struct S445 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
	T0* a6; /* equality_tester */
};

/* Struct for type [detachable] TUPLE [[attached] DS_ARRAYED_LIST [[attached] ET_CLASS]] */
struct S446 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] ET_AST_NULL_PROCESSOR */
struct S447 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] ET_AST_FACTORY */
struct S448 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
struct S450 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* system_processor */
};

/* Struct for type [detachable] DT_DATE_TIME_DURATION */
struct S451 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* year */
	T6 a2; /* month */
	T6 a3; /* day */
	T6 a4; /* hour */
	T6 a5; /* minute */
	T6 a6; /* second */
	T6 a7; /* millisecond */
};

/* Struct for type [detachable] UT_CONFIG_PARSER */
struct S452 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* config_values */
	T0* a3; /* error_handler */
	T0* a4; /* defined_values */
	T0* a5; /* include_stack */
	T0* a6; /* line_nb_stack */
	T0* a7; /* last_string_value */
	T6 a8; /* line_nb */
	T0* a9; /* yyss */
	T0* a10; /* input_buffer */
	T6 a11; /* yy_end */
	T6 a12; /* yy_position */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_parsing_status */
	T6 a16; /* yy_suspended_yystacksize */
	T6 a17; /* yy_suspended_yystate */
	T6 a18; /* yy_suspended_yyn */
	T6 a19; /* yy_suspended_yychar1 */
	T6 a20; /* yy_suspended_index */
	T6 a21; /* yy_suspended_yyss_top */
	T6 a22; /* yy_suspended_yy_goto */
	T0* a23; /* yyr1 */
	T6 a24; /* yyssp */
	T0* a25; /* yypgoto */
	T0* a26; /* yycheck */
	T0* a27; /* yytable */
	T0* a28; /* yydefgoto */
	T6 a29; /* error_count */
	T1 a30; /* yy_lookahead_needed */
	T6 a31; /* yyerrstatus */
	T0* a32; /* yypact */
	T6 a33; /* last_token */
	T0* a34; /* yytranslate */
	T0* a35; /* yydefact */
	T0* a36; /* yy_pushed_start_conditions */
	T0* a37; /* yyspecial_routines1 */
	T6 a38; /* yyvsc1 */
	T0* a39; /* yyvs1 */
	T0* a40; /* yyspecial_routines2 */
	T6 a41; /* yyvsc2 */
	T0* a42; /* yyvs2 */
	T0* a43; /* yyspecial_routines3 */
	T6 a44; /* yyvsc3 */
	T0* a45; /* yyvs3 */
	T0* a46; /* yytypes1 */
	T0* a47; /* yytypes2 */
	T6 a48; /* yy_start */
	T6 a49; /* yyvsp1 */
	T6 a50; /* yyvsp2 */
	T6 a51; /* yyvsp3 */
	T1 a52; /* yy_more_flag */
	T6 a53; /* yy_more_len */
	T6 a54; /* line */
	T6 a55; /* column */
	T6 a56; /* position */
	T6 a57; /* yy_start_state */
	T0* a58; /* yy_state_stack */
	T6 a59; /* yy_state_count */
	T0* a60; /* yy_content_area */
	T0* a61; /* yy_ec */
	T0* a62; /* yy_content */
	T0* a63; /* yy_accept */
	T6 a64; /* yy_last_accepting_state */
	T6 a65; /* yy_last_accepting_cpos */
	T0* a66; /* yy_chk */
	T0* a67; /* yy_base */
	T0* a68; /* yy_def */
	T0* a69; /* yy_meta */
	T0* a70; /* yy_nxt */
	T6 a71; /* yy_lp */
	T0* a72; /* yy_acclist */
	T6 a73; /* yy_looking_for_trail_begin */
	T6 a74; /* yy_full_match */
	T6 a75; /* yy_full_state */
	T6 a76; /* yy_full_lp */
	T1 a77; /* yy_rejected */
	T0* a78; /* last_detachable_any_value */
	T6 a79; /* if_level */
	T6 a80; /* ignored_level */
};

/* Struct for type [detachable] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32] */
struct S453 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] ET_DO_PROCEDURE */
struct S456 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_class */
	T6 a2; /* first_seed */
	T0* a3; /* other_seeds */
	T0* a4; /* arguments */
	T0* a5; /* compound */
	T0* a6; /* implementation_feature */
	T0* a7; /* extended_name */
	T6 a8; /* hash_code */
	T0* a9; /* end_keyword */
	T0* a10; /* clients */
	T1 a11; /* validity_checked */
	T1 a12; /* has_validity_error */
	T0* a13; /* preconditions */
	T0* a14; /* first_precursor */
	T0* a15; /* other_precursors */
	T0* a16; /* postconditions */
	T0* a17; /* rescue_clause */
	T0* a18; /* locals */
	T0* a19; /* object_tests */
	T0* a20; /* across_components */
	T0* a21; /* frozen_keyword */
	T0* a22; /* obsolete_message */
	T0* a23; /* is_keyword */
	T0* a24; /* semicolon */
	T0* a25; /* feature_clause */
	T0* a26; /* first_indexing */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* synonym */
};

/* Struct for type [detachable] ET_DEFERRED_PROCEDURE */
struct S458 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T6 a3; /* first_seed */
	T0* a4; /* other_seeds */
	T0* a5; /* arguments */
	T0* a6; /* extended_name */
	T0* a7; /* deferred_keyword */
	T6 a8; /* hash_code */
	T0* a9; /* end_keyword */
	T0* a10; /* clients */
	T1 a11; /* validity_checked */
	T1 a12; /* has_validity_error */
	T0* a13; /* preconditions */
	T0* a14; /* first_precursor */
	T0* a15; /* other_precursors */
	T0* a16; /* postconditions */
	T0* a17; /* object_tests */
	T0* a18; /* across_components */
	T0* a19; /* frozen_keyword */
	T0* a20; /* obsolete_message */
	T0* a21; /* is_keyword */
	T0* a22; /* semicolon */
	T0* a23; /* feature_clause */
	T0* a24; /* first_indexing */
	T6 a25; /* id */
	T6 a26; /* version */
	T0* a27; /* synonym */
};

/* Struct for type [detachable] ET_DYNAMIC_PUSH_TYPE_SET */
struct S459 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
	T0* a5; /* targets */
	T1 a6; /* is_dynamic_types_readonly */
};

/* Struct for type [detachable] KL_PLATFORM */
struct S460 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] UC_UNICODE_ROUTINES */
struct S461 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] CELL [[attached] INTEGER_32] */
struct S463 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
};

/* Struct for type [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32] */
struct S464 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T0* a3; /* keys */
	T0* a4; /* deleted_marks */
	T0* a5; /* indexes_map */
	T6 a6; /* iteration_position */
	T6 a7; /* count */
	T6 a8; /* deleted_item_position */
	T6 a9; /* control */
	T0* a10; /* found_item */
	T1 a11; /* has_default */
	T6 a12; /* item_position */
	T6 a13; /* ht_lowest_deleted_position */
	T0* a14; /* ht_deleted_item */
	T0* a15; /* ht_deleted_key */
	T1 a16; /* object_comparison */
};

/* Struct for type [detachable] KL_PATHNAME */
struct S466 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* drive */
	T0* a3; /* hostname */
	T0* a4; /* sharename */
	T1 a5; /* is_relative */
	T0* a6; /* components */
};

/* Struct for type [detachable] EXCEPTIONS */
struct S467 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] NATURAL_8] */
struct S469 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T8 z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION] */
struct S471 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [[attached] AP_OPTION] */
struct S473 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] AP_OPTION] */
struct S474 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
struct S475 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
struct S476 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
struct S477 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8] */
struct S478 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [detachable STRING_8] */
struct S479 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable STRING_8] */
struct S480 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_LINKED_LIST_CURSOR [[attached] STRING_8] */
struct S481 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* before */
};

/* Struct for type detachable DS_LINKABLE [[attached] STRING_8] */
struct S482 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type detachable DS_LINKABLE [[attached] BOOLEAN] */
struct S483 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [detachable] DS_LINKED_LIST_CURSOR [[attached] BOOLEAN] */
struct S484 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [[attached] INTEGER_32] */
struct S485 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [detachable] DS_LINKED_LIST_CURSOR [[attached] INTEGER_32] */
struct S486 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8] */
struct S488 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_LIBRARY] */
struct S489 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY] */
struct S492 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY] */
struct S493 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8] */
struct S496 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY] */
struct S497 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] XM_EIFFEL_SCANNER */
struct S498 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* yy_more_flag */
	T6 a13; /* yy_more_len */
	T6 a14; /* yy_end */
	T6 a15; /* yy_start */
	T6 a16; /* yy_line */
	T6 a17; /* yy_column */
	T6 a18; /* yy_position */
	T0* a19; /* input_buffer */
	T0* a20; /* yy_state_stack */
	T6 a21; /* yy_state_count */
	T0* a22; /* yy_content_area */
	T0* a23; /* yy_ec */
	T0* a24; /* yy_content */
	T0* a25; /* yy_accept */
	T6 a26; /* yy_last_accepting_state */
	T6 a27; /* yy_last_accepting_cpos */
	T0* a28; /* yy_chk */
	T0* a29; /* yy_base */
	T0* a30; /* yy_def */
	T0* a31; /* yy_meta */
	T0* a32; /* yy_nxt */
	T6 a33; /* yy_lp */
	T0* a34; /* yy_acclist */
	T6 a35; /* yy_looking_for_trail_begin */
	T6 a36; /* yy_full_match */
	T6 a37; /* yy_full_state */
	T6 a38; /* yy_full_lp */
	T1 a39; /* yy_rejected */
	T0* a40; /* yy_pushed_start_conditions */
	T0* a41; /* last_string_value */
	T0* a42; /* last_error */
	T6 a43; /* pushed_start_condition_count */
};

/* Struct for type [detachable] XM_DEFAULT_POSITION */
struct S499 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* row */
	T6 a2; /* column */
	T0* a3; /* source_name */
	T6 a4; /* byte_index */
};

/* Struct for type [detachable] DS_BILINKED_LIST [[attached] XM_POSITION] */
struct S501 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* internal_cursor */
};

/* Struct for type [detachable] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER] */
struct S502 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* first_cell */
};

/* Struct for type [detachable] XM_CALLBACKS_NULL */
struct S503 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8] */
struct S504 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* capacity */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* modulus */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* found_position */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* equality_tester */
	T0* a20; /* hash_function */
};

/* Struct for type [detachable] XM_NULL_EXTERNAL_RESOLVER */
struct S506 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] XM_DTD_CALLBACKS_NULL */
struct S508 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ANY] */
struct S509 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ANY] */
struct S510 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME] */
struct S511 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] XM_EIFFEL_PARSER_NAME */
struct S512 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* use_namespaces */
	T6 a2; /* count */
	T0* a3; /* first */
	T0* a4; /* second */
	T0* a5; /* tail */
};

/* Struct for type [detachable] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME] */
struct S513 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]] */
struct S514 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME] */
struct S515 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* equality_tester */
	T6 a3; /* count */
	T6 a4; /* capacity */
	T6 a5; /* free_slot */
	T6 a6; /* last_position */
	T6 a7; /* modulus */
	T6 a8; /* slots_position */
	T6 a9; /* clashes_previous_position */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* internal_cursor */
	T0* a16; /* hash_function */
};

/* Struct for type [detachable] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]] */
struct S516 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID] */
struct S517 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] XM_DTD_EXTERNAL_ID */
struct S518 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* system_id */
	T0* a2; /* public_id */
};

/* Struct for type [detachable] SPECIAL [[attached] XM_DTD_EXTERNAL_ID] */
struct S519 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT] */
struct S520 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] XM_DTD_ELEMENT_CONTENT */
struct S521 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* items */
	T2 a2; /* repetition */
	T0* a3; /* name */
	T2 a4; /* type */
	T1 a5; /* is_character_data_allowed */
};

/* Struct for type [detachable] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT] */
struct S522 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]] */
struct S523 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
struct S524 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [detachable] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]] */
struct S525 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
struct S526 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] XM_DTD_ATTRIBUTE_CONTENT */
struct S527 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* default_value */
	T2 a3; /* type */
	T1 a4; /* is_list_type */
	T0* a5; /* enumeration_list */
	T2 a6; /* value */
};

/* Struct for type [detachable] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
struct S528 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]] */
struct S529 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_BILINKED_LIST [[attached] STRING_8] */
struct S530 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* equality_tester */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]] */
struct S531 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] BOOLEAN] */
struct S532 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION] */
struct S533 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] XM_EIFFEL_DECLARATION */
struct S534 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* encoding */
	T0* a2; /* version */
	T1 a3; /* stand_alone */
};

/* Struct for type [detachable] SPECIAL [[attached] XM_EIFFEL_DECLARATION] */
struct S535 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] XM_EIFFEL_ENTITY_DEF */
struct S538 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* literal_name */
	T0* a2; /* value */
	T0* a3; /* resolver */
	T0* a4; /* external_id */
	T0* a5; /* character_entity */
	T0* a6; /* yy_pushed_start_conditions */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_value */
	T0* a11; /* last_string_value */
	T0* a12; /* last_error */
	T1 a13; /* yy_rejected */
	T6 a14; /* yy_state_count */
	T6 a15; /* yy_full_match */
	T6 a16; /* yy_lp */
	T6 a17; /* yy_looking_for_trail_begin */
	T6 a18; /* yy_full_lp */
	T6 a19; /* yy_full_state */
	T6 a20; /* pushed_start_condition_count */
	T6 a21; /* yy_start_state */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_position */
	T6 a25; /* yy_start */
	T6 a26; /* yy_end */
	T6 a27; /* line */
	T6 a28; /* column */
	T6 a29; /* position */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T0* a34; /* yy_state_stack */
	T0* a35; /* yy_nxt */
	T0* a36; /* yy_chk */
	T0* a37; /* yy_base */
	T0* a38; /* yy_def */
	T0* a39; /* yy_ec */
	T0* a40; /* yy_meta */
	T0* a41; /* yy_accept */
	T0* a42; /* yy_content */
	T0* a43; /* yy_content_area */
	T6 a44; /* last_token */
	T0* a45; /* input_filter */
	T0* a46; /* input_stream */
	T0* a47; /* input_resolver */
	T0* a48; /* yy_acclist */
};

/* Struct for type [detachable] XM_EIFFEL_SCANNER_DTD */
struct S539 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* decl_start_sent */
	T1 a13; /* decl_end_sent */
	T1 a14; /* yy_more_flag */
	T6 a15; /* yy_more_len */
	T6 a16; /* yy_end */
	T6 a17; /* yy_start */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_position */
	T0* a21; /* input_buffer */
	T0* a22; /* yy_state_stack */
	T6 a23; /* yy_state_count */
	T0* a24; /* yy_content_area */
	T0* a25; /* yy_ec */
	T0* a26; /* yy_content */
	T0* a27; /* yy_accept */
	T6 a28; /* yy_last_accepting_state */
	T6 a29; /* yy_last_accepting_cpos */
	T0* a30; /* yy_chk */
	T0* a31; /* yy_base */
	T0* a32; /* yy_def */
	T0* a33; /* yy_meta */
	T0* a34; /* yy_nxt */
	T6 a35; /* yy_lp */
	T0* a36; /* yy_acclist */
	T6 a37; /* yy_looking_for_trail_begin */
	T6 a38; /* yy_full_match */
	T6 a39; /* yy_full_state */
	T6 a40; /* yy_full_lp */
	T1 a41; /* yy_rejected */
	T0* a42; /* yy_pushed_start_conditions */
	T0* a43; /* last_string_value */
	T0* a44; /* last_error */
	T6 a45; /* pushed_start_condition_count */
};

/* Struct for type [detachable] XM_EIFFEL_PE_ENTITY_DEF */
struct S541 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* resolver */
	T0* a2; /* external_id */
	T0* a3; /* literal_name */
	T0* a4; /* value */
	T0* a5; /* character_entity */
	T0* a6; /* yy_pushed_start_conditions */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_value */
	T0* a11; /* last_string_value */
	T0* a12; /* last_error */
	T1 a13; /* yy_rejected */
	T6 a14; /* yy_state_count */
	T6 a15; /* yy_full_match */
	T6 a16; /* yy_lp */
	T6 a17; /* yy_looking_for_trail_begin */
	T6 a18; /* yy_full_lp */
	T6 a19; /* yy_full_state */
	T6 a20; /* pushed_start_condition_count */
	T6 a21; /* yy_start_state */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_position */
	T6 a25; /* yy_start */
	T6 a26; /* yy_end */
	T6 a27; /* line */
	T6 a28; /* column */
	T6 a29; /* position */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T0* a34; /* yy_state_stack */
	T1 a35; /* pre_sent */
	T1 a36; /* post_sent */
	T0* a37; /* yy_nxt */
	T0* a38; /* yy_chk */
	T0* a39; /* yy_base */
	T0* a40; /* yy_def */
	T0* a41; /* yy_ec */
	T0* a42; /* yy_meta */
	T0* a43; /* yy_accept */
	T0* a44; /* yy_content */
	T0* a45; /* yy_content_area */
	T6 a46; /* last_token */
	T0* a47; /* input_filter */
	T0* a48; /* input_stream */
	T0* a49; /* input_resolver */
	T0* a50; /* yy_acclist */
};

/* Struct for type [detachable] XM_NAMESPACE_RESOLVER */
struct S542 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* element_local_part */
	T0* a3; /* element_prefix */
	T0* a4; /* context */
	T1 a5; /* forward_xmlns */
	T0* a6; /* attributes_prefix */
	T0* a7; /* attributes_local_part */
	T0* a8; /* attributes_value */
};

/* Struct for type [detachable] ARRAY [[attached] XM_CALLBACKS_FILTER] */
struct S543 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [detachable] SPECIAL [[attached] XM_CALLBACKS_FILTER] */
struct S544 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_HASH_SET [[attached] XM_NAMESPACE] */
struct S545 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* special_item_routines */
	T0* a8; /* item_storage */
	T0* a9; /* clashes */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a14; /* count */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type [detachable] ET_CLUSTERS */
struct S546 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type [detachable] ET_CLASS_NAME_TESTER */
struct S547 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] ET_PARENT */
struct S549 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* renames */
	T0* a3; /* exports */
	T0* a4; /* undefines */
	T0* a5; /* redefines */
	T0* a6; /* selects */
	T0* a7; /* end_keyword */
};

/* Struct for type [detachable] ET_PARENT_LIST */
struct S550 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* inherit_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* clients_clause */
};

/* Struct for type [detachable] ET_BUILTIN_CONVERT_FEATURE */
struct S551 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* type */
};

/* Struct for type [detachable] ET_MASTER_CLASS */
struct S552 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* mapped_class */
	T0* a2; /* first_overriding_class */
	T0* a3; /* intrinsic_class */
	T0* a4; /* name */
	T0* a5; /* universe */
	T0* a6; /* other_local_override_classes */
	T0* a7; /* other_local_non_override_classes */
	T0* a8; /* other_local_ignored_classes */
	T0* a9; /* other_local_hidden_classes */
	T0* a10; /* other_imported_classes */
	T0* a11; /* other_overriding_classes */
	T0* a12; /* status_mutex */
	T0* a13; /* processing_mutex */
	T1 a14; /* unprotected_is_marked */
	T0* a15; /* first_imported_class */
	T1 a16; /* is_modified */
	T0* a17; /* first_local_override_class */
	T0* a18; /* first_local_non_override_class */
	T0* a19; /* first_local_ignored_class */
	T0* a20; /* first_local_hidden_class */
};

/* Struct for type [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD */
struct S553 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* attachment_mark */
	T0* a2; /* separateness_keyword */
};

/* Struct for type detachable ET_RENAME_LIST */
struct S554 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* rename_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type detachable ET_EXPORT_LIST */
struct S555 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* export_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type detachable ET_KEYWORD_FEATURE_NAME_LIST */
struct S556 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
struct S559 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tuple_type */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY] */
struct S560 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE] */
struct S561 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG] */
struct S564 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG] */
struct S566 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8] */
struct S567 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8] */
struct S568 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_TARGET] */
struct S569 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET] */
struct S571 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
struct S573 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
struct S574 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable RX_REGULAR_EXPRESSION] */
struct S575 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S576 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] ET_DOTNET_ASSEMBLIES */
struct S577 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type [detachable] ET_DOTNET_ASSEMBLY */
struct S578 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* referenced_assemblies */
	T0* a3; /* current_system */
	T0* a4; /* dotnet_assembly */
	T0* a5; /* name */
	T0* a6; /* implicit_attachment_type_mark */
	T0* a7; /* master_classes */
	T0* a8; /* master_class_mutex */
	T0* a9; /* any_type */
	T0* a10; /* detachable_any_type */
	T0* a11; /* detachable_separate_any_type */
	T0* a12; /* any_parent */
	T0* a13; /* any_parents */
	T0* a14; /* any_clients */
	T0* a15; /* tuple_type */
	T0* a16; /* detachable_tuple_type */
	T0* a17; /* tuple_identity_type */
	T0* a18; /* unfolded_empty_tuple_actual_parameters */
	T0* a19; /* array_any_type */
	T0* a20; /* array_detachable_any_type */
	T0* a21; /* array_none_type */
	T0* a22; /* array_identity_type */
	T0* a23; /* boolean_type */
	T0* a24; /* character_type */
	T0* a25; /* character_8_type */
	T0* a26; /* character_8_convert_feature */
	T0* a27; /* character_32_type */
	T0* a28; /* character_32_convert_feature */
	T0* a29; /* double_type */
	T0* a30; /* exception_type */
	T0* a31; /* detachable_exception_type */
	T0* a32; /* exception_manager_type */
	T0* a33; /* function_identity_any_type */
	T0* a34; /* immutable_string_32_type */
	T0* a35; /* integer_type */
	T0* a36; /* integer_8_type */
	T0* a37; /* integer_8_convert_feature */
	T0* a38; /* integer_16_type */
	T0* a39; /* integer_16_convert_feature */
	T0* a40; /* integer_32_type */
	T0* a41; /* integer_32_convert_feature */
	T0* a42; /* integer_64_type */
	T0* a43; /* integer_64_convert_feature */
	T0* a44; /* ise_exception_manager_type */
	T0* a45; /* iterable_detachable_separate_any_type */
	T0* a46; /* natural_type */
	T0* a47; /* natural_8_type */
	T0* a48; /* natural_8_convert_feature */
	T0* a49; /* natural_16_type */
	T0* a50; /* natural_16_convert_feature */
	T0* a51; /* natural_32_type */
	T0* a52; /* natural_32_convert_feature */
	T0* a53; /* natural_64_type */
	T0* a54; /* natural_64_convert_feature */
	T0* a55; /* none_type */
	T0* a56; /* detachable_none_type */
	T0* a57; /* pointer_type */
	T0* a58; /* predicate_identity_type */
	T0* a59; /* procedure_identity_type */
	T0* a60; /* real_type */
	T0* a61; /* real_32_type */
	T0* a62; /* real_32_convert_feature */
	T0* a63; /* real_64_type */
	T0* a64; /* real_64_convert_feature */
	T0* a65; /* routine_identity_type */
	T0* a66; /* special_any_type */
	T0* a67; /* special_detachable_any_type */
	T0* a68; /* special_identity_type */
	T0* a69; /* string_type */
	T0* a70; /* detachable_string_type */
	T0* a71; /* string_8_type */
	T0* a72; /* string_8_convert_feature */
	T0* a73; /* string_32_type */
	T0* a74; /* string_32_convert_feature */
	T0* a75; /* system_object_type */
	T0* a76; /* system_object_parents */
	T0* a77; /* system_string_type */
	T0* a78; /* type_detachable_any_type */
	T0* a79; /* detachable_type_exception_type */
	T0* a80; /* type_detachable_exception_type */
	T0* a81; /* type_detachable_like_current_type */
	T0* a82; /* type_identity_type */
	T0* a83; /* typed_pointer_identity_type */
	T0* a84; /* wide_character_type */
	T1 a85; /* is_read_only */
	T1 a86; /* is_preparsed */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER] */
struct S581 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_IDENTIFIER] */
struct S582 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8] */
struct S583 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32] */
struct S584 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* modulus */
	T0* a2; /* key_equality_tester */
	T0* a3; /* item_storage */
	T0* a4; /* slots */
	T0* a5; /* hash_function */
	T0* a6; /* key_storage */
	T0* a7; /* clashes */
	T6 a8; /* position */
	T6 a9; /* last_position */
	T6 a10; /* capacity */
	T6 a11; /* slots_position */
	T6 a12; /* count */
	T0* a13; /* equality_tester */
	T6 a14; /* found_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
};

/* Struct for type detachable ET_FORMAL_PARAMETER_LIST */
struct S585 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type detachable ET_FEATURE_IDS */
struct S586 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* feature_ids */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_DYNAMIC_FEATURE] */
struct S587 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_FEATURE] */
struct S588 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME] */
struct S591 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS] */
struct S592 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_MASTER_CLASS] */
struct S593 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME] */
struct S594 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_CLASS_NAME] */
struct S595 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8] */
struct S597 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM] */
struct S601 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] ET_BRACKET_SYMBOL */
struct S602 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T2 a2; /* code */
	T6 a3; /* seed */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM] */
struct S604 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE] */
struct S605 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET] */
struct S606 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET] */
struct S607 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_IDENTIFIER] */
struct S608 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE] */
struct S609 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE] */
struct S610 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE] */
struct S611 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] INTEGER_32] */
struct S612 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_EXPRESSION] */
struct S614 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION] */
struct S615 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_EXPRESSION] */
struct S616 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type detachable KL_EQUALITY_TESTER [[attached] INTEGER_32] */
struct S617 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32] */
struct S618 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S619 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S620 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
struct S621 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_OBJECT_TEST] */
struct S623 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST] */
struct S624 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_TEST] */
struct S625 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
struct S626 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
struct S627 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
struct S628 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_EQUALITY_EXPRESSION] */
struct S629 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION] */
struct S630 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_EQUALITY_EXPRESSION] */
struct S631 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_AGENT] */
struct S632 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_AGENT] */
struct S633 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_AGENT] */
struct S634 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_EXPRESSION_ITEM] */
struct S635 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION_ITEM] */
struct S637 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S638 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S639 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S640 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE] */
struct S641 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE] */
struct S642 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE] */
struct S643 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FEATURE] */
struct S645 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_FEATURE] */
struct S646 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE] */
struct S647 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE] */
struct S648 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_CONSTANT] */
struct S649 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CONSTANT] */
struct S651 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT] */
struct S652 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_INLINE_CONSTANT] */
struct S653 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT] */
struct S655 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_DYNAMIC_FEATURE] */
struct S656 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
struct S658 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
struct S659 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_FEATURE] */
struct S660 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8] */
struct S661 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER] */
struct S664 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
struct S667 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* free_slot */
	T6 a8; /* count */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* slots */
	T0* a14; /* clashes */
	T0* a15; /* special_item_routines */
	T0* a16; /* key_storage */
	T0* a17; /* special_key_routines */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]] */
struct S668 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] ARRAY [[attached] BOOLEAN] */
struct S669 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_SYSTEM_PROCESSOR] */
struct S672 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] WORKER_THREAD */
struct S673 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* thread_procedure */
	T0* a2; /* launch_mutex */
	T14 a3; /* thread_id */
	T1 a4; /* terminated */
};

/* Struct for type [detachable] TUPLE [[attached] ET_SYSTEM_PROCESSOR, [attached] DS_ARRAYED_LIST [[attached] ET_CLASS]] */
struct S674 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE] */
struct S678 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_DYNAMIC_TYPE] */
struct S679 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE] */
struct S680 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS] */
struct S682 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_AGENT] */
struct S683 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_INLINE_AGENT] */
struct S685 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_INLINE_AGENT] */
struct S686 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
struct S687 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE] */
struct S688 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
struct S689 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
struct S690 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
struct S691 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY] */
struct S692 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
struct S693 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
struct S694 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
struct S695 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_FEATURE] */
struct S696 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
struct S697 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
struct S698 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]] */
struct S699 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT] */
struct S700 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [detachable] SPECIAL [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]] */
struct S701 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]] */
struct S702 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT] */
struct S703 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT] */
struct S704 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT] */
struct S705 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST] */
struct S706 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] ET_NAMED_OBJECT_TEST */
struct S709 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* attached_keyword */
	T0* a4; /* declared_type */
	T0* a5; /* expression */
	T0* a6; /* as_keyword */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_NAMED_OBJECT_TEST] */
struct S710 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST] */
struct S711 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST] */
struct S712 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* special_routines */
	T0* a3; /* storage */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT] */
struct S713 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ACROSS_COMPONENT] */
struct S716 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT] */
struct S717 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT] */
struct S718 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_HASH_SET [[attached] INTEGER_32] */
struct S719 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* count */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ATTACHMENT_SCOPE] */
struct S721 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE] */
struct S722 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ATTACHMENT_SCOPE] */
struct S723 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM] */
struct S724 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_INDEXING_TERM] */
struct S726 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_INDEXING_TERM] */
struct S727 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_CLIENT_ITEM] */
struct S728 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_ITEM] */
struct S729 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]] */
struct S730 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]] */
struct S731 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]] */
struct S732 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE] */
struct S733 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ASSERTIONS] */
struct S734 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS] */
struct S736 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME] */
struct S737 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type [detachable] STRING_8_SEARCHER */
struct S738 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* deltas */
};

/* Struct for type detachable ARRAYED_LIST [[attached] INTEGER_32] */
struct S739 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area_v2 */
	T6 a2; /* index */
};

/* Struct for type [detachable] ET_SYSTEM_ERROR */
struct S740 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type [detachable] ET_INTERNAL_ERROR */
struct S741 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type [detachable] ET_VALIDITY_ERROR */
struct S742 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* ise_reported */
	T1 a2; /* ge_reported */
	T0* a3; /* default_template */
	T0* a4; /* parameters */
	T0* a5; /* current_class */
	T0* a6; /* class_impl */
	T0* a7; /* position */
	T0* a8; /* code */
	T0* a9; /* etl_code */
	T1 a10; /* ise_fatal */
	T1 a11; /* ge_fatal */
};

/* Struct for type detachable ET_ECF_NOTE_ELEMENT */
struct S743 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* attributes */
	T0* a3; /* elements */
	T0* a4; /* content */
};

/* Struct for type detachable ET_ECF_CLUSTERS */
struct S744 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type detachable ET_ECF_ADAPTED_LIBRARIES */
struct S745 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* libraries */
};

/* Struct for type detachable ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
struct S746 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type detachable ET_ECF_FILE_RULES */
struct S747 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* file_rules */
};

/* Struct for type detachable ET_ECF_EXTERNAL_CFLAGS */
struct S748 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type detachable ET_ECF_EXTERNAL_INCLUDES */
struct S749 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type detachable ET_ECF_EXTERNAL_LIBRARIES */
struct S750 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type detachable ET_ECF_EXTERNAL_LINKER_FLAGS */
struct S751 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type detachable ET_ECF_EXTERNAL_MAKES */
struct S752 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type detachable ET_ECF_EXTERNAL_OBJECTS */
struct S753 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type detachable ET_ECF_EXTERNAL_RESOURCES */
struct S754 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type detachable DS_ARRAYED_LIST [[attached] ET_ECF_ACTION] */
struct S755 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type detachable ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
struct S756 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* filename_id */
	T0* a3; /* universe */
	T0* a4; /* target */
	T0* a5; /* description */
	T0* a6; /* eifgens_location */
	T0* a7; /* classname_prefix */
	T1 a8; /* is_read_only */
	T1 a9; /* use_application_options */
	T0* a10; /* options */
	T0* a11; /* class_options */
	T0* a12; /* class_renamings */
	T0* a13; /* visible_classes */
	T0* a14; /* conditions */
	T0* a15; /* name */
	T0* a16; /* library */
};

/* Struct for type detachable ET_ECF_VERSION */
struct S758 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_release */
	T6 a4; /* internal_build */
	T0* a5; /* product */
	T0* a6; /* company */
	T0* a7; /* copyright */
};

/* Struct for type detachable ET_ECF_CLUSTER */
struct S759 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T0* a5; /* target */
	T0* a6; /* description */
	T1 a7; /* is_hidden */
	T0* a8; /* classname_prefix */
	T1 a9; /* is_read_only */
	T1 a10; /* is_recursive */
	T0* a11; /* conditioned_subclusters */
	T0* a12; /* conditioned_file_rules */
	T0* a13; /* options */
	T0* a14; /* class_options */
	T0* a15; /* class_renamings */
	T0* a16; /* class_mappings */
	T0* a17; /* visible_classes */
	T0* a18; /* provider_groups */
	T0* a19; /* conditions */
	T0* a20; /* notes */
	T1 a21; /* is_override */
	T0* a22; /* overridden_group */
	T1 a23; /* overridden_constraint_enabled */
	T1 a24; /* scm_mapping_constraint_enabled */
	T0* a25; /* subclusters */
	T1 a26; /* use_obsolete_syntax */
	T0* a27; /* scm_read_mapping */
	T0* a28; /* scm_write_mapping */
	T1 a29; /* is_implicit */
	T0* a30; /* file_rules */
	T0* a31; /* parent */
	T0* a32; /* provider_constraint */
	T0* a33; /* dependant_constraint */
	T1 a34; /* is_preparsed */
	T1 a35; /* is_abstract */
	T0* a36; /* cached_absolute_pathname */
};

/* Struct for type detachable ET_ECF_EXTERNAL_CFLAG */
struct S760 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* flag */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type detachable ET_ECF_EXTERNAL_INCLUDE */
struct S761 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type detachable ET_ECF_EXTERNAL_LIBRARY */
struct S762 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type detachable ET_ECF_EXTERNAL_LINKER_FLAG */
struct S763 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* flag */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type detachable ET_ECF_EXTERNAL_MAKE */
struct S764 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type detachable ET_ECF_EXTERNAL_OBJECT */
struct S765 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type detachable ET_ECF_EXTERNAL_RESOURCE */
struct S766 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type detachable ET_ECF_FILE_RULE */
struct S767 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* exclude */
	T0* a2; /* include */
	T0* a3; /* exclude_regexp */
	T0* a4; /* include_regexp */
	T0* a5; /* conditions */
	T0* a6; /* description */
};

/* Struct for type detachable ET_ECF_ACTION */
struct S768 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* command_name */
	T0* a2; /* description */
	T1 a3; /* must_succeed */
	T0* a4; /* working_directory */
	T0* a5; /* conditions */
};

/* Struct for type detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
struct S769 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* last_position */
	T6 a4; /* position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* key_equality_tester */
	T0* a9; /* internal_keys */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type detachable DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS] */
struct S770 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_OPTIONS] */
struct S771 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_OPTIONS]] */
struct S772 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type detachable ET_ECF_ROOT_CLASS */
struct S773 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_name */
	T0* a2; /* creation_procedure_name */
	T0* a3; /* cluster_name */
};

/* Struct for type [detachable] ET_ECF_ROOT_ALL_CLASSES */
struct S774 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] ET_ECF_ORED_CONDITIONS */
struct S775 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditions */
};

/* Struct for type detachable ET_ECF_ANDED_CONDITIONS */
struct S776 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditions */
};

/* Struct for type detachable ET_ECF_VISIBLE_CLASS */
struct S777 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_name */
	T0* a2; /* feature_name */
	T0* a3; /* new_class_name */
	T0* a4; /* new_feature_name */
};

/* Struct for type detachable ET_ECF_BUILD_CONDITION */
struct S779 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type detachable ET_ECF_CONCURRENCY_CONDITION */
struct S780 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type detachable ET_ECF_VOID_SAFETY_CONDITION */
struct S781 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type detachable ET_ECF_CUSTOM_CONDITION */
struct S782 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* value */
	T0* a3; /* match */
	T1 a4; /* is_excluded */
};

/* Struct for type detachable ET_ECF_DOTNET_CONDITION */
struct S783 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* value */
};

/* Struct for type detachable ET_ECF_DYNAMIC_RUNTIME_CONDITION */
struct S784 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* value */
};

/* Struct for type detachable ET_ECF_PLATFORM_CONDITION */
struct S785 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type [detachable] ET_ECF_COMPILER_VERSION_CONDITION */
struct S787 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* min_value */
	T0* a2; /* max_value */
};

/* Struct for type [detachable] ET_ECF_MSIL_CLR_VERSION_CONDITION */
struct S788 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* min_value */
	T0* a2; /* max_value */
};

/* Struct for type [detachable] UT_COUNTER */
struct S790 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
};

/* Struct for type [detachable] KL_AGENT_ROUTINES [[attached] ET_CLASS] */
struct S791 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] TUPLE [[attached] UT_COUNTER] */
struct S792 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ET_CLASS], [attached] PROCEDURE [[attached] TUPLE]] */
struct S793 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [detachable] TUPLE [[attached] ET_UNIVERSE] */
struct S794 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_UNIVERSE]] */
struct S795 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]]] */
struct S796 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
struct S797 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY] */
struct S799 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T0* a13; /* internal_cursor */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [detachable] TUPLE [[attached] ET_DOTNET_ASSEMBLY] */
struct S800 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]] */
struct S801 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]] */
struct S802 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY]] */
struct S803 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] TUPLE [[attached] ET_INTERNAL_UNIVERSE] */
struct S804 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_INTERNAL_UNIVERSE]] */
struct S805 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]]] */
struct S806 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [detachable] TUPLE [[attached] ET_DOTNET_ASSEMBLIES] */
struct S807 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] TUPLE [[attached] ET_SYSTEM_PROCESSOR] */
struct S808 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] ET_LIBRARY */
struct S809 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_system */
	T0* a2; /* library */
	T0* a3; /* name */
	T0* a4; /* libraries */
	T0* a5; /* clusters */
	T0* a6; /* dotnet_assemblies */
	T0* a7; /* implicit_attachment_type_mark */
	T0* a8; /* master_classes */
	T0* a9; /* master_class_mutex */
	T0* a10; /* any_type */
	T0* a11; /* detachable_any_type */
	T0* a12; /* detachable_separate_any_type */
	T0* a13; /* any_parent */
	T0* a14; /* any_parents */
	T0* a15; /* any_clients */
	T0* a16; /* tuple_type */
	T0* a17; /* detachable_tuple_type */
	T0* a18; /* tuple_identity_type */
	T0* a19; /* unfolded_empty_tuple_actual_parameters */
	T0* a20; /* array_any_type */
	T0* a21; /* array_detachable_any_type */
	T0* a22; /* array_none_type */
	T0* a23; /* array_identity_type */
	T0* a24; /* boolean_type */
	T0* a25; /* character_type */
	T0* a26; /* character_8_type */
	T0* a27; /* character_8_convert_feature */
	T0* a28; /* character_32_type */
	T0* a29; /* character_32_convert_feature */
	T0* a30; /* double_type */
	T0* a31; /* exception_type */
	T0* a32; /* detachable_exception_type */
	T0* a33; /* exception_manager_type */
	T0* a34; /* function_identity_any_type */
	T0* a35; /* immutable_string_32_type */
	T0* a36; /* integer_type */
	T0* a37; /* integer_8_type */
	T0* a38; /* integer_8_convert_feature */
	T0* a39; /* integer_16_type */
	T0* a40; /* integer_16_convert_feature */
	T0* a41; /* integer_32_type */
	T0* a42; /* integer_32_convert_feature */
	T0* a43; /* integer_64_type */
	T0* a44; /* integer_64_convert_feature */
	T0* a45; /* ise_exception_manager_type */
	T0* a46; /* iterable_detachable_separate_any_type */
	T0* a47; /* natural_type */
	T0* a48; /* natural_8_type */
	T0* a49; /* natural_8_convert_feature */
	T0* a50; /* natural_16_type */
	T0* a51; /* natural_16_convert_feature */
	T0* a52; /* natural_32_type */
	T0* a53; /* natural_32_convert_feature */
	T0* a54; /* natural_64_type */
	T0* a55; /* natural_64_convert_feature */
	T0* a56; /* none_type */
	T0* a57; /* detachable_none_type */
	T0* a58; /* pointer_type */
	T0* a59; /* predicate_identity_type */
	T0* a60; /* procedure_identity_type */
	T0* a61; /* real_type */
	T0* a62; /* real_32_type */
	T0* a63; /* real_32_convert_feature */
	T0* a64; /* real_64_type */
	T0* a65; /* real_64_convert_feature */
	T0* a66; /* routine_identity_type */
	T0* a67; /* special_any_type */
	T0* a68; /* special_detachable_any_type */
	T0* a69; /* special_identity_type */
	T0* a70; /* string_type */
	T0* a71; /* detachable_string_type */
	T0* a72; /* string_8_type */
	T0* a73; /* string_8_convert_feature */
	T0* a74; /* string_32_type */
	T0* a75; /* string_32_convert_feature */
	T0* a76; /* system_object_type */
	T0* a77; /* system_object_parents */
	T0* a78; /* system_string_type */
	T0* a79; /* type_detachable_any_type */
	T0* a80; /* detachable_type_exception_type */
	T0* a81; /* type_detachable_exception_type */
	T0* a82; /* type_detachable_like_current_type */
	T0* a83; /* type_identity_type */
	T0* a84; /* typed_pointer_identity_type */
	T0* a85; /* wide_character_type */
	T1 a86; /* is_read_only */
	T1 a87; /* is_preparsed */
};

/* Struct for type [detachable] TUPLE [[attached] ET_LIBRARY] */
struct S810 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_LIBRARY]] */
struct S811 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] DS_HASH_SET [[attached] ET_UNIVERSE] */
struct S812 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [detachable] TUPLE [[attached] ET_CLUSTER] */
struct S814 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]] */
struct S815 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_SYSTEM] */
struct S816 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE] */
struct S817 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type [detachable] TUPLE [[attached] ET_AST_PROCESSOR] */
struct S818 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] TUPLE [[attached] ET_MASTER_CLASS] */
struct S819 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]] */
struct S820 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S821 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY]] */
struct S822 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] ET_ANCESTORS_STATUS_CHECKER */
struct S823 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type [detachable] ET_FLATTENING_STATUS_CHECKER */
struct S824 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type [detachable] ET_INTERFACE_STATUS_CHECKER */
struct S825 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* qualified_anchored_type_checker */
	T0* a2; /* class_type_checker */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type [detachable] ET_IMPLEMENTATION_STATUS_CHECKER */
struct S826 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
};

/* Struct for type [detachable] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]] */
struct S827 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ANCESTORS_STATUS_CHECKER] */
struct S829 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] TUPLE [[attached] ET_FLATTENING_STATUS_CHECKER] */
struct S830 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] TUPLE [[attached] ET_INTERFACE_STATUS_CHECKER] */
struct S831 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] TUPLE [[attached] ET_IMPLEMENTATION_STATUS_CHECKER] */
struct S832 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] TUPLE [BOOLEAN] */
struct S833 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 z1;
};

/* Struct for type [detachable] TUPLE [[attached] DS_HASH_SET [[attached] ET_UNIVERSE]] */
struct S834 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]]] */
struct S837 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] TUPLE [[attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE]] */
struct S841 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]]] */
struct S842 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_CLASS], [attached] BOOLEAN]] */
struct S843 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [detachable] ET_NONE_GROUP */
struct S844 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* universe */
	T0* a2; /* name */
	T1 a3; /* use_obsolete_syntax */
	T0* a4; /* cached_absolute_pathname */
};

/* Struct for type detachable ET_PARENTHESIS_EXPRESSION */
struct S845 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type [detachable] ET_REGULAR_MANIFEST_STRING */
struct S848 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
	T0* a4; /* cast_type */
	T0* a5; /* type */
};

/* Struct for type [detachable] ET_INFIX_FREE_NAME */
struct S849 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* infix_keyword */
	T0* a2; /* operator_string */
	T2 a3; /* code */
	T6 a4; /* hash_code */
	T6 a5; /* seed */
	T0* a6; /* convert_keyword */
};

/* Struct for type detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S851 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] ET_FORMAL_PARAMETER */
struct S852 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* implementation_class */
	T0* a4; /* type_mark */
};

/* Struct for type [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE] */
struct S854 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type [detachable] UC_STRING_EQUALITY_TESTER */
struct S856 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
struct S858 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type [detachable] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
struct S859 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type [detachable] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE] */
struct S860 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first */
	T0* a2; /* second */
};

/* Struct for type [detachable] UC_UTF8_ROUTINES */
struct S861 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] UC_UTF8_STRING */
struct S862 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* area */
	T6 a3; /* byte_count */
	T6 a4; /* internal_hash_code */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
	T6 a7; /* internal_case_insensitive_hash_code */
};

/* Struct for type [detachable] XM_EIFFEL_INPUT_STREAM */
struct S863 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_string */
	T6 a2; /* encoding */
	T0* a3; /* impl */
	T0* a4; /* utf_queue */
};

/* Struct for type [detachable] KL_INTEGER_ROUTINES */
struct S864 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] KL_ARRAY_ROUTINES [[attached] INTEGER_32] */
struct S865 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_SET [[attached] ET_LIBRARY] */
struct S866 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* special_item_routines */
	T0* a7; /* item_storage */
	T0* a8; /* clashes */
	T0* a9; /* slots */
	T6 a10; /* found_position */
	T0* a11; /* internal_cursor */
	T6 a12; /* slots_position */
	T6 a13; /* count */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [detachable] TUPLE [[attached] DS_HASH_SET [[attached] ET_LIBRARY]] */
struct S867 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE] */
struct S868 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET] */
struct S869 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE] */
struct S870 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT] */
struct S872 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_QUERY] */
struct S873 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable ET_ALIAS_NAME */
struct S874 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* alias_keyword */
	T0* a2; /* alias_string */
	T2 a3; /* code */
	T0* a4; /* convert_keyword */
	T6 a5; /* seed */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_QUERY] */
struct S875 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_PROCEDURE] */
struct S876 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PROCEDURE] */
struct S877 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] CONSOLE */
struct S884 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* file_pointer */
	T6 a2; /* mode */
	T0* a3; /* last_string */
	T0* a4; /* internal_name */
	T0* a5; /* internal_detachable_name_pointer */
	T2 a6; /* last_character */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
struct S885 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_BASE_TYPE] */
struct S887 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE] */
struct S888 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] INTEGER_OVERFLOW_CHECKER */
struct S889 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* integer_overflow_state1 */
	T0* a2; /* integer_overflow_state2 */
	T0* a3; /* natural_overflow_state1 */
	T0* a4; /* natural_overflow_state2 */
};

/* Struct for type [detachable] ARRAY [[attached] IMMUTABLE_STRING_32] */
struct S890 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
	T1 a4; /* object_comparison */
};

/* Struct for type [detachable] SPECIAL [[attached] IMMUTABLE_STRING_32] */
struct S891 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT] */
struct S892 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT] */
struct S893 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_NOTE_ELEMENT] */
struct S894 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type detachable C_DATE */
struct S895 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* millisecond_now */
	T0* a2; /* internal_item */
	T1 a3; /* is_utc */
};

/* Struct for type [detachable] YY_FILE_BUFFER */
struct S896 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T0* a9; /* file */
	T6 a10; /* capacity */
	T1 a11; /* end_of_file */
	T1 a12; /* interactive */
};

/* Struct for type [detachable] KL_STDIN_FILE */
struct S897 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_file */
	T2 a2; /* last_character */
	T0* a3; /* last_string */
	T0* a4; /* character_buffer */
};

/* Struct for type [detachable] YY_BUFFER */
struct S898 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T6 a9; /* capacity */
};

/* Struct for type [detachable] DS_ARRAYED_STACK [[attached] INTEGER_32] */
struct S902 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type [detachable] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S903 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type [detachable] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
struct S904 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type [detachable] DS_ARRAYED_STACK [detachable ET_KEYWORD] */
struct S905 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type [detachable] DS_ARRAYED_STACK [detachable ET_SYMBOL] */
struct S906 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type [detachable] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
struct S907 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type [detachable] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST] */
struct S908 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type [detachable] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
struct S909 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type [detachable] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST] */
struct S910 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM] */
struct S911 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
struct S912 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS] */
struct S913 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
struct S914 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_KEYWORD] */
struct S915 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
struct S916 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_AGENT_KEYWORD */
struct S917 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
};

/* Struct for type [detachable] SPECIAL [detachable ET_AGENT_KEYWORD] */
struct S918 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
struct S919 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_PRECURSOR_KEYWORD */
struct S920 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
	T6 a4; /* seed */
};

/* Struct for type [detachable] SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
struct S921 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
struct S922 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_SYMBOL] */
struct S923 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
struct S924 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_POSITION] */
struct S925 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
struct S926 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
struct S928 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
struct S929 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_BREAK] */
struct S931 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
struct S932 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_CHARACTER_CONSTANT] */
struct S934 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
struct S935 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_CURRENT] */
struct S936 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
struct S937 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_FREE_OPERATOR */
struct S938 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* hash_code */
	T6 a3; /* compressed_position */
	T0* a4; /* operator_name */
	T6 a5; /* seed */
};

/* Struct for type [detachable] SPECIAL [detachable ET_FREE_OPERATOR] */
struct S939 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER] */
struct S940 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_IDENTIFIER] */
struct S941 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
struct S942 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_INTEGER_CONSTANT] */
struct S944 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
struct S945 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_KEYWORD_OPERATOR */
struct S946 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* seed */
};

/* Struct for type [detachable] SPECIAL [detachable ET_KEYWORD_OPERATOR] */
struct S947 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
struct S948 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_MANIFEST_STRING] */
struct S949 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
struct S950 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_REAL_CONSTANT] */
struct S952 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
struct S953 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_RESULT] */
struct S954 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
struct S955 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_RETRY_INSTRUCTION */
struct S956 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
};

/* Struct for type [detachable] SPECIAL [detachable ET_RETRY_INSTRUCTION] */
struct S957 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
struct S958 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_SYMBOL_OPERATOR */
struct S959 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* seed */
};

/* Struct for type [detachable] SPECIAL [detachable ET_SYMBOL_OPERATOR] */
struct S960 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_VOID] */
struct S961 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_VOID */
struct S962 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type [detachable] SPECIAL [detachable ET_VOID] */
struct S963 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
struct S964 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_SEMICOLON_SYMBOL */
struct S965 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type [detachable] SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
struct S966 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
struct S967 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_BRACKET_SYMBOL] */
struct S968 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
struct S969 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_QUESTION_MARK_SYMBOL */
struct S970 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
};

/* Struct for type [detachable] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
struct S971 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
struct S972 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_ACROSS_EXPRESSION */
struct S973 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cursor_name */
	T0* a3; /* across_keyword */
	T0* a4; /* iterable_expression */
	T0* a5; /* as_keyword */
	T0* a6; /* until_conditional */
	T0* a7; /* iteration_conditional */
	T0* a8; /* end_keyword */
	T1 a9; /* is_all */
	T0* a10; /* invariant_part */
	T0* a11; /* variant_part */
	T0* a12; /* new_cursor_expression */
	T0* a13; /* cursor_after_expression */
	T0* a14; /* cursor_forth_instruction */
};

/* Struct for type [detachable] SPECIAL [detachable ET_ACROSS_EXPRESSION] */
struct S974 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
struct S975 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_ACROSS_INSTRUCTION */
struct S976 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* cursor_name */
	T0* a2; /* across_keyword */
	T0* a3; /* iterable_expression */
	T0* a4; /* as_keyword */
	T0* a5; /* from_compound */
	T0* a6; /* until_conditional */
	T0* a7; /* loop_compound */
	T0* a8; /* end_keyword */
	T0* a9; /* invariant_part */
	T0* a10; /* variant_part */
	T0* a11; /* new_cursor_expression */
	T0* a12; /* cursor_after_expression */
	T0* a13; /* cursor_forth_instruction */
};

/* Struct for type [detachable] SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
struct S977 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S978 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S979 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM] */
struct S980 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM] */
struct S981 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S982 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S983 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S984 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S985 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S986 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S988 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S989 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_AGENT_ARGUMENT_OPERAND_LIST */
struct S990 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S991 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
struct S992 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_AGENT_TARGET] */
struct S993 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
struct S994 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_ALIAS_NAME] */
struct S995 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
struct S996 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_ASSIGNER] */
struct S998 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
struct S999 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_BRACKET_EXPRESSION */
struct S1000 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* target */
	T0* a3; /* name */
	T0* a4; /* arguments */
};

/* Struct for type [detachable] SPECIAL [detachable ET_BRACKET_EXPRESSION] */
struct S1001 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
struct S1002 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_CALL_AGENT */
struct S1003 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* target */
	T0* a4; /* qualified_name */
	T0* a5; /* arguments */
	T0* a6; /* implicit_result */
};

/* Struct for type [detachable] SPECIAL [detachable ET_CALL_AGENT] */
struct S1004 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
struct S1005 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_CHECK_INSTRUCTION */
struct S1006 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* check_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* then_compound */
};

/* Struct for type [detachable] SPECIAL [detachable ET_CHECK_INSTRUCTION] */
struct S1007 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
struct S1008 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_CHOICE] */
struct S1010 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
struct S1011 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_CHOICE_CONSTANT] */
struct S1013 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
struct S1014 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_CHOICE_ITEM] */
struct S1016 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
struct S1017 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_CHOICE_LIST */
struct S1018 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* when_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type [detachable] SPECIAL [detachable ET_CHOICE_LIST] */
struct S1019 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
struct S1020 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_CLASS] */
struct S1021 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
struct S1022 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_CLIENT_ITEM] */
struct S1023 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
struct S1024 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_CLIENTS */
struct S1025 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type [detachable] SPECIAL [detachable ET_CLIENTS] */
struct S1026 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
struct S1027 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_COMPOUND] */
struct S1028 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
struct S1029 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_CONDITIONAL] */
struct S1031 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
struct S1032 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_CONSTANT] */
struct S1033 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1034 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1036 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1037 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
struct S1038 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type [detachable] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1039 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
struct S1040 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_CONSTRAINT_CREATOR */
struct S1041 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* create_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type [detachable] SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
struct S1042 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST] */
struct S1043 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_CONSTRAINT_RENAME_LIST */
struct S1044 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* end_keyword */
	T0* a2; /* rename_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type [detachable] SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST] */
struct S1045 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
struct S1046 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_CONSTRAINT_TYPE] */
struct S1048 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
struct S1049 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_CONVERT_FEATURE] */
struct S1051 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
struct S1052 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
struct S1054 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
struct S1055 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_CONVERT_FEATURE_LIST */
struct S1056 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* convert_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type [detachable] SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
struct S1057 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
struct S1058 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_CREATE_EXPRESSION] */
struct S1059 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
struct S1060 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_CREATION_REGION */
struct S1061 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_name */
	T0* a2; /* left_symbol */
	T0* a3; /* right_symbol */
};

/* Struct for type [detachable] SPECIAL [detachable ET_CREATION_REGION] */
struct S1062 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
struct S1063 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_CREATOR */
struct S1064 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_keyword */
	T0* a2; /* clients */
	T0* a3; /* storage */
	T6 a4; /* count */
};

/* Struct for type [detachable] SPECIAL [detachable ET_CREATOR] */
struct S1065 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
struct S1066 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_CREATOR_LIST */
struct S1067 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [detachable] SPECIAL [detachable ET_CREATOR_LIST] */
struct S1068 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
struct S1069 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_DEBUG_INSTRUCTION */
struct S1070 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* keys */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type [detachable] SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
struct S1071 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
struct S1072 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_ELSEIF_EXPRESSION */
struct S1073 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_keyword */
	T0* a3; /* then_expression */
};

/* Struct for type [detachable] SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
struct S1074 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
struct S1075 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_ELSEIF_EXPRESSION_LIST */
struct S1076 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [detachable] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
struct S1077 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
struct S1078 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_ELSEIF_PART */
struct S1079 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
};

/* Struct for type [detachable] SPECIAL [detachable ET_ELSEIF_PART] */
struct S1080 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
struct S1081 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_ELSEIF_PART_LIST */
struct S1082 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [detachable] SPECIAL [detachable ET_ELSEIF_PART_LIST] */
struct S1083 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
struct S1084 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_EXPORT] */
struct S1086 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
struct S1087 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_EXPORT_LIST] */
struct S1088 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
struct S1089 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_EXPRESSION] */
struct S1090 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
struct S1091 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_EXPRESSION_ITEM] */
struct S1092 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
struct S1093 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
struct S1094 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
struct S1095 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_EXTERNAL_ALIAS] */
struct S1097 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
struct S1098 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_FEATURE_CLAUSE */
struct S1099 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_keyword */
	T0* a2; /* clients */
};

/* Struct for type [detachable] SPECIAL [detachable ET_FEATURE_CLAUSE] */
struct S1100 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
struct S1101 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_FEATURE_CLAUSE_LIST */
struct S1102 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [detachable] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
struct S1103 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
struct S1104 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_FEATURE_EXPORT */
struct S1105 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clients_clause */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type [detachable] SPECIAL [detachable ET_FEATURE_EXPORT] */
struct S1106 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
struct S1107 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_FEATURE_NAME] */
struct S1108 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
struct S1109 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
struct S1111 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
struct S1112 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT] */
struct S1113 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S1114 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S1116 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S1117 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S1118 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
struct S1119 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER] */
struct S1120 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S1121 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S1123 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
struct S1124 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
struct S1125 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
struct S1126 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_IF_EXPRESSION */
struct S1127 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* conditional */
	T0* a3; /* then_keyword */
	T0* a4; /* then_expression */
	T0* a5; /* else_keyword */
	T0* a6; /* else_expression */
	T0* a7; /* end_keyword */
	T0* a8; /* elseif_parts */
};

/* Struct for type [detachable] SPECIAL [detachable ET_IF_EXPRESSION] */
struct S1128 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
struct S1129 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_IF_INSTRUCTION */
struct S1130 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
	T0* a3; /* end_keyword */
	T0* a4; /* elseif_parts */
	T0* a5; /* else_compound */
};

/* Struct for type [detachable] SPECIAL [detachable ET_IF_INSTRUCTION] */
struct S1131 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
struct S1132 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_INDEXING_LIST */
struct S1133 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* indexing_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type [detachable] SPECIAL [detachable ET_INDEXING_LIST] */
struct S1134 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
struct S1135 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_INDEXING_ITEM] */
struct S1137 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
struct S1138 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_INDEXING_TERM] */
struct S1139 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
struct S1140 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
struct S1142 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
struct S1143 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_INDEXING_TERM_LIST */
struct S1144 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [detachable] SPECIAL [detachable ET_INDEXING_TERM_LIST] */
struct S1145 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
struct S1146 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_INLINE_AGENT] */
struct S1147 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
struct S1148 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_INSPECT_INSTRUCTION */
struct S1149 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* when_parts */
	T0* a3; /* end_keyword */
	T0* a4; /* else_compound */
};

/* Struct for type [detachable] SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
struct S1150 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
struct S1151 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_INSTRUCTION] */
struct S1153 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
struct S1154 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_INVARIANTS */
struct S1155 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_class */
	T0* a2; /* invariant_keyword */
	T0* a3; /* storage */
	T6 a4; /* count */
	T0* a5; /* object_tests */
	T0* a6; /* across_components */
	T1 a7; /* validity_checked */
	T1 a8; /* has_validity_error */
};

/* Struct for type [detachable] SPECIAL [detachable ET_INVARIANTS] */
struct S1156 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1157 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1158 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
struct S1159 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_LIKE_TYPE] */
struct S1161 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
struct S1162 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_LOCAL_VARIABLE */
struct S1163 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T6 a3; /* index */
	T6 a4; /* attached_index */
	T1 a5; /* is_used */
};

/* Struct for type [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE] */
struct S1164 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S1165 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S1167 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
struct S1168 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
struct S1169 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
struct S1170 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_LOOP_INVARIANTS */
struct S1171 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* invariant_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type [detachable] SPECIAL [detachable ET_LOOP_INVARIANTS] */
struct S1172 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
struct S1173 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_MANIFEST_ARRAY */
struct S1174 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T0* a3; /* left_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
	T0* a6; /* right_symbol */
};

/* Struct for type [detachable] SPECIAL [detachable ET_MANIFEST_ARRAY] */
struct S1175 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
struct S1176 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
struct S1178 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
struct S1179 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_MANIFEST_STRING_LIST */
struct S1180 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type [detachable] SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
struct S1181 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
struct S1182 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_MANIFEST_TUPLE] */
struct S1183 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
struct S1184 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_OBSOLETE] */
struct S1186 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S1187 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_PARENTHESIZED_EXPRESSION */
struct S1188 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left_parenthesis */
	T0* a3; /* expression */
	T0* a4; /* right_parenthesis */
};

/* Struct for type [detachable] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S1189 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
struct S1190 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_PARENT] */
struct S1191 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
struct S1192 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_PARENT_CLAUSE_LIST */
struct S1193 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [detachable] SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
struct S1194 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
struct S1195 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_PARENT_ITEM] */
struct S1196 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
struct S1197 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_PARENT_LIST] */
struct S1198 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
struct S1199 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_POSTCONDITIONS */
struct S1200 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* validity_checked */
	T1 a2; /* has_validity_error */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* ensure_keyword */
	T0* a6; /* then_keyword */
};

/* Struct for type [detachable] SPECIAL [detachable ET_POSTCONDITIONS] */
struct S1201 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
struct S1202 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_PRECONDITIONS] */
struct S1203 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
struct S1204 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_PROCEDURE] */
struct S1205 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S1206 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S1208 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
struct S1209 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_QUERY] */
struct S1210 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
struct S1211 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_RENAME_ITEM] */
struct S1213 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
struct S1214 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_RENAME_LIST] */
struct S1215 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
struct S1216 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_STATIC_CALL_EXPRESSION */
struct S1217 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* feature_keyword */
	T0* a3; /* static_type */
	T0* a4; /* qualified_name */
	T0* a5; /* arguments */
	T0* a6; /* parenthesis_call */
};

/* Struct for type [detachable] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
struct S1218 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
struct S1219 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_STRIP_EXPRESSION */
struct S1220 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* strip_keyword */
	T0* a3; /* left_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
	T0* a6; /* right_parenthesis */
};

/* Struct for type [detachable] SPECIAL [detachable ET_STRIP_EXPRESSION] */
struct S1221 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
struct S1222 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_TYPE] */
struct S1223 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT] */
struct S1224 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT] */
struct S1226 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM] */
struct S1227 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM] */
struct S1229 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST] */
struct S1230 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_TYPE_CONSTRAINT_LIST */
struct S1231 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST] */
struct S1232 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
struct S1233 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_TYPE_ITEM] */
struct S1235 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
struct S1236 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_TYPE_LIST] */
struct S1238 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
struct S1239 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_VARIANT */
struct S1240 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* variant_keyword */
	T0* a2; /* tag */
	T0* a3; /* expression */
};

/* Struct for type [detachable] SPECIAL [detachable ET_VARIANT] */
struct S1241 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
struct S1242 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_WHEN_PART */
struct S1243 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* choices */
	T0* a2; /* then_compound */
};

/* Struct for type [detachable] SPECIAL [detachable ET_WHEN_PART] */
struct S1244 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
struct S1245 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable ET_WHEN_PART_LIST */
struct S1246 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [detachable] SPECIAL [detachable ET_WHEN_PART_LIST] */
struct S1247 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
struct S1248 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [detachable ET_WRITABLE] */
struct S1249 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS] */
struct S1250 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* items */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS] */
struct S1251 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type [detachable] ET_PARENT_CHECKER1 */
struct S1252 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* current_parent */
};

/* Struct for type [detachable] ET_FORMAL_PARAMETER_CHECKER1 */
struct S1253 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* all_base_types */
	T0* a3; /* base_types */
	T0* a4; /* formal_dependencies */
	T0* a5; /* base_type_dependencies */
	T0* a6; /* recursive_formal_constraints */
	T0* a7; /* recursive_formal_constraints_to_be_processed */
	T0* a8; /* current_class */
	T0* a9; /* system_processor */
	T0* a10; /* current_formal */
	T0* a11; /* current_type_constraint */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME] */
struct S1254 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T6 a4; /* position */
	T0* a5; /* item_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* modulus */
	T6 a11; /* slots_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T6 a17; /* capacity */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type [detachable] ET_FEATURE_NAME_TESTER */
struct S1255 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME] */
struct S1257 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* position */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* count */
	T6 a9; /* free_slot */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* slots_position */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type [detachable] ET_ALIAS_NAME_TESTER */
struct S1258 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST] */
struct S1260 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS] */
struct S1261 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* count */
	T0* a17; /* internal_keys */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type [detachable] ET_FEATURE_ADAPTATION_RESOLVER */
struct S1262 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* rename_table */
	T0* a3; /* export_table */
	T0* a4; /* undefine_table */
	T0* a5; /* redefine_table */
	T0* a6; /* select_table */
	T0* a7; /* alias_mapping */
	T0* a8; /* replicable_features */
	T0* a9; /* current_class */
	T0* a10; /* system_processor */
	T0* a11; /* free_parent_feature */
	T0* a12; /* parent_feature_list */
	T0* a13; /* free_inherited_feature */
	T0* a14; /* inherited_feature_list */
	T0* a15; /* free_redeclared_feature */
	T0* a16; /* redeclared_feature_list */
};

/* Struct for type [detachable] ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
struct S1263 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* dotnet_features */
	T0* a3; /* other_dotnet_features */
	T0* a4; /* current_class */
	T0* a5; /* system_processor */
	T0* a6; /* free_parent_feature */
	T0* a7; /* parent_feature_list */
	T0* a8; /* free_inherited_feature */
	T0* a9; /* inherited_feature_list */
	T0* a10; /* free_redeclared_feature */
	T0* a11; /* redeclared_feature_list */
};

/* Struct for type [detachable] ET_IDENTIFIER_TYPE_RESOLVER */
struct S1264 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* current_feature */
};

/* Struct for type [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
struct S1265 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type [detachable] ET_ANCHORED_TYPE_CHECKER */
struct S1266 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* anchored_type_sorter */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
	T0* a5; /* current_anchored_type */
};

/* Struct for type [detachable] ET_SIGNATURE_CHECKER */
struct S1267 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* parent_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
	T6 a5; /* processing_mode */
};

/* Struct for type [detachable] ET_PARENT_CHECKER2 */
struct S1268 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* constraint_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type [detachable] ET_FORMAL_PARAMETER_CHECKER2 */
struct S1269 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* constraint_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type [detachable] ET_BUILTIN_FEATURE_CHECKER */
struct S1270 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* builtin_features */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type [detachable] ET_PRECURSOR_CHECKER */
struct S1271 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_feature */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32] */
struct S1272 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* free_slot */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type [detachable] DS_HASH_SET [[attached] ET_CLASS] */
struct S1273 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T6 a5; /* capacity */
	T6 a6; /* modulus */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
struct S1274 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_class */
	T0* a4; /* adapted_base_class_checker */
	T0* a5; /* adapted_base_classes */
	T0* a6; /* target_context */
	T0* a7; /* other_context */
	T0* a8; /* classes_to_be_processed */
	T0* a9; /* system_processor */
	T1 a10; /* in_qualified_anchored_type */
};

/* Struct for type [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
struct S1275 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME] */
struct S1276 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T6 a3; /* position */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
	T0* a6; /* item_storage */
	T0* a7; /* key_storage */
	T0* a8; /* key_equality_tester */
	T0* a9; /* internal_keys */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* modulus */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type [detachable] ET_CALL_NAME_TESTER */
struct S1277 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] ET_RENAME */
struct S1282 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* old_name */
	T0* a2; /* as_keyword */
	T0* a3; /* new_name */
};

/* Struct for type [detachable] ET_PARENT_CHECKER3 */
struct S1283 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type [detachable] DS_HASH_SET [[attached] ET_PROCEDURE] */
struct S1284 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [detachable] DS_HASH_SET [[attached] ET_QUERY] */
struct S1285 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [detachable] ET_SUPPLIER_BUILDER */
struct S1286 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* supplier_classes */
	T0* a2; /* current_class */
};

/* Struct for type detachable ET_PARENT_FEATURE */
struct S1289 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* parent */
	T0* a3; /* precursor_feature */
	T0* a4; /* new_name */
	T0* a5; /* undefine_name */
	T0* a6; /* redefine_name */
	T0* a7; /* select_name */
	T0* a8; /* merged_feature */
	T1 a9; /* has_other_deferred */
	T1 a10; /* has_other_effective */
};

/* Struct for type [detachable] ET_INHERITED_FEATURE */
struct S1290 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* parent_feature */
	T0* a3; /* flattened_feature */
	T0* a4; /* flattened_parent */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T1 a7; /* is_selected */
	T0* a8; /* replicated_features */
	T0* a9; /* replicated_seeds */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_CLASS] */
struct S1291 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLASS] */
struct S1292 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS] */
struct S1293 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] DS_ARRAYED_STACK [[attached] YY_BUFFER] */
struct S1294 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
};

/* Struct for type [detachable] UT_SYNTAX_ERROR */
struct S1295 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type [detachable] UT_TOO_MANY_INCLUDES_ERROR */
struct S1296 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type detachable ET_DYNAMIC_TARGET_LIST */
struct S1298 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [detachable] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]] */
struct S1299 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]] */
struct S1300 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] SPECIAL [[attached] NATIVE_STRING] */
struct S1301 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] ARRAY [detachable STRING_8] */
struct S1302 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [detachable] XM_EIFFEL_CHARACTER_ENTITY */
struct S1303 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* code */
};

/* Struct for type detachable DS_BILINKABLE [[attached] XM_POSITION] */
struct S1305 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type [detachable] DS_BILINKED_LIST_CURSOR [[attached] XM_POSITION] */
struct S1306 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [[attached] XM_EIFFEL_SCANNER] */
struct S1307 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [detachable] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF] */
struct S1308 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8] */
struct S1311 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF] */
struct S1312 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable KL_EQUALITY_TESTER [[attached] XM_EIFFEL_PARSER_NAME] */
struct S1315 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_SET_CURSOR [[attached] XM_EIFFEL_PARSER_NAME] */
struct S1316 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT] */
struct S1317 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [detachable] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
struct S1318 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_BILINKABLE [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
struct S1319 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type [detachable] DS_BILINKED_LIST_CURSOR [[attached] STRING_8] */
struct S1320 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_BILINKABLE [[attached] STRING_8] */
struct S1321 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type [detachable] XM_NAMESPACE_RESOLVER_CONTEXT */
struct S1322 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* context */
};

/* Struct for type [detachable] DS_LINKED_QUEUE [detachable STRING_8] */
struct S1325 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
};

/* Struct for type [detachable] DS_LINKED_QUEUE [[attached] STRING_8] */
struct S1326 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T0* a2; /* last_cell */
	T6 a3; /* count */
};

/* Struct for type detachable KL_EQUALITY_TESTER [[attached] XM_NAMESPACE] */
struct S1327 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_SET_CURSOR [[attached] XM_NAMESPACE] */
struct S1328 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE] */
struct S1329 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] XM_NAMESPACE] */
struct S1330 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_CLUSTER] */
struct S1331 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_PARENT_ITEM] */
struct S1333 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_ITEM] */
struct S1334 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] ET_BRACED_TYPE_LIST */
struct S1335 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS] */
struct S1336 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* equality_tester */
	T0* a6; /* internal_cursor */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ADAPTED_LIBRARY] */
struct S1337 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY] */
struct S1338 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_LIBRARY] */
struct S1339 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type detachable DS_LINKABLE [[attached] XM_DOCUMENT_NODE] */
struct S1340 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1342 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1343 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1344 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY] */
struct S1345 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
	T0* a6; /* equality_tester */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32] */
struct S1347 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
struct S1348 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]] */
struct S1349 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]] */
struct S1350 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [[attached] INTEGER_32]] */
struct S1351 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_SYSTEM_PROCESSOR] */
struct S1353 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_SYSTEM_PROCESSOR] */
struct S1354 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_SYSTEM_PROCESSOR] */
struct S1355 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] THREAD_ATTRIBUTES */
struct S1356 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* shared */
	T14 a2; /* internal_item */
	T0* a3; /* managed_pointer */
};

/* Struct for type [detachable] CELL [[attached] BOOLEAN] */
struct S1357 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_CLASS] */
struct S1359 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ADAPTED_CLASS] */
struct S1361 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_CLASS] */
struct S1362 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE] */
struct S1363 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY] */
struct S1364 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_NAMED_OBJECT_TEST] */
struct S1365 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ACROSS_COMPONENT] */
struct S1366 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] DS_HASH_SET_CURSOR [[attached] INTEGER_32] */
struct S1367 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] NATURAL_8] */
struct S1371 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] NATURAL_8, [attached] ET_CLASS_NAME] */
struct S1372 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] KL_CHARACTER_BUFFER */
struct S1373 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* as_special */
	T0* a2; /* area */
};

/* Struct for type [detachable] UT_TRISTATE */
struct S1375 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* value */
};

/* Struct for type [detachable] KL_AGENT_ROUTINES [[attached] ANY] */
struct S1376 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] TUPLE [[attached] UT_TRISTATE] */
struct S1377 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ANY], [attached] PROCEDURE [[attached] TUPLE]] */
struct S1378 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [detachable] PREDICATE [[attached] TUPLE [[attached] ET_MASTER_CLASS]] */
struct S1379 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] PREDICATE [[attached] TUPLE] */
struct S1380 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE] */
struct S1382 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* last_position */
	T6 a3; /* capacity */
	T6 a4; /* slots_position */
	T6 a5; /* count */
	T6 a6; /* modulus */
	T6 a7; /* clashes_previous_position */
	T0* a8; /* key_equality_tester */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* item_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE] */
struct S1383 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S1384 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [detachable] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE] */
struct S1385 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]] */
struct S1386 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE]] */
struct S1387 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE], [attached] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]]] */
struct S1388 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
struct S1390 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_MASTER_CLASS], [attached] BOOLEAN]] */
struct S1391 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_MASTER_CLASS], [attached] BOOLEAN], [attached] FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
struct S1392 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [detachable] ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
struct S1393 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
	T0* a5; /* agent_type */
	T1 a6; /* is_dynamic_types_readonly */
};

/* Struct for type [detachable] XM_COMMENT */
struct S1396 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* data */
	T0* a2; /* parent */
};

/* Struct for type [detachable] XM_PROCESSING_INSTRUCTION */
struct S1397 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* data */
	T0* a3; /* parent */
};

/* Struct for type [detachable] XM_CHARACTER_DATA */
struct S1398 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T0* a2; /* parent */
};

/* Struct for type [detachable] ET_LIKE_N */
struct S1401 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* previous */
	T0* a3; /* type_mark */
	T0* a4; /* like_keyword */
};

/* Struct for type [detachable] KL_STRING_INPUT_STREAM */
struct S1404 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_input */
	T2 a2; /* last_character */
	T0* a3; /* last_string */
	T0* a4; /* string */
	T6 a5; /* location */
};

/* Struct for type detachable ET_OBJECT_TEST_LIST */
struct S1407 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type detachable ET_ACROSS_COMPONENT_LIST */
struct S1408 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type detachable ET_C3_CHARACTER_CONSTANT */
struct S1409 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T6 a3; /* compressed_position */
	T0* a4; /* literal */
	T3 a5; /* value */
	T0* a6; /* type */
};

/* Struct for type detachable ET_VERBATIM_STRING */
struct S1410 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* marker */
	T0* a7; /* open_white_characters */
	T0* a8; /* close_white_characters */
	T1 a9; /* is_left_aligned */
	T0* a10; /* type */
};

/* Struct for type detachable ET_SPECIAL_MANIFEST_STRING */
struct S1411 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type detachable ET_UNDERSCORED_INTEGER_CONSTANT */
struct S1412 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_overflow */
	T11 a7; /* value */
	T0* a8; /* type */
};

/* Struct for type detachable ET_HEXADECIMAL_INTEGER_CONSTANT */
struct S1413 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_overflow */
	T11 a7; /* value */
	T0* a8; /* type */
};

/* Struct for type detachable ET_OCTAL_INTEGER_CONSTANT */
struct S1414 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_overflow */
	T11 a7; /* value */
	T0* a8; /* type */
};

/* Struct for type detachable ET_BINARY_INTEGER_CONSTANT */
struct S1415 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_overflow */
	T11 a7; /* value */
	T0* a8; /* type */
};

/* Struct for type detachable ET_REGULAR_REAL_CONSTANT */
struct S1416 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type detachable ET_UNDERSCORED_REAL_CONSTANT */
struct S1417 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type detachable ET_TRUE_CONSTANT */
struct S1419 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type detachable ET_FALSE_CONSTANT */
struct S1420 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type detachable ET_C1_CHARACTER_CONSTANT */
struct S1421 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T6 a3; /* compressed_position */
	T3 a4; /* value */
	T0* a5; /* type */
};

/* Struct for type detachable ET_C2_CHARACTER_CONSTANT */
struct S1422 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T6 a3; /* compressed_position */
	T3 a4; /* value */
	T0* a5; /* type */
};

/* Struct for type detachable ET_TAGGED_INDEXING */
struct S1424 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tag */
	T0* a2; /* terms */
};

/* Struct for type detachable ET_INDEXING */
struct S1425 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* terms */
};

/* Struct for type detachable ET_CUSTOM_ATTRIBUTE */
struct S1426 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_expression */
	T0* a2; /* settings */
	T0* a3; /* end_keyword */
};

/* Struct for type detachable ET_CONSTRAINED_FORMAL_PARAMETER */
struct S1427 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arrow_symbol */
	T0* a2; /* constraint */
	T0* a3; /* creation_procedures */
	T0* a4; /* constraint_base_types */
	T0* a5; /* implementation_class */
	T0* a6; /* type_mark */
	T6 a7; /* index */
	T0* a8; /* name */
	T0* a9; /* recursive_formal_constraints */
};

/* Struct for type detachable ET_TYPE_RENAME_CONSTRAINT */
struct S1428 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* renames */
};

/* Struct for type detachable ET_CONSTRAINT_NAMED_TYPE */
struct S1429 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
};

/* Struct for type detachable ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
struct S1430 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* colon */
	T0* a3; /* type */
};

/* Struct for type detachable ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
struct S1431 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* comma */
	T0* a3; /* type */
};

/* Struct for type detachable ET_ALL_EXPORT */
struct S1432 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clients_clause */
	T0* a2; /* all_keyword */
};

/* Struct for type detachable ET_CONVERT_FUNCTION */
struct S1434 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* colon */
};

/* Struct for type detachable ET_CONVERT_PROCEDURE */
struct S1435 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type detachable ET_DO_FUNCTION */
struct S1437 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* other_seeds */
	T0* a4; /* implementation_feature */
	T0* a5; /* first_precursor */
	T0* a6; /* other_precursors */
	T0* a7; /* preconditions */
	T6 a8; /* hash_code */
	T0* a9; /* arguments */
	T0* a10; /* postconditions */
	T0* a11; /* assigner */
	T0* a12; /* extended_name */
	T0* a13; /* declared_type */
	T0* a14; /* frozen_keyword */
	T0* a15; /* obsolete_message */
	T0* a16; /* locals */
	T0* a17; /* compound */
	T0* a18; /* rescue_clause */
	T0* a19; /* clients */
	T0* a20; /* is_keyword */
	T0* a21; /* end_keyword */
	T0* a22; /* semicolon */
	T0* a23; /* feature_clause */
	T0* a24; /* first_indexing */
	T0* a25; /* object_tests */
	T0* a26; /* across_components */
	T1 a27; /* validity_checked */
	T1 a28; /* has_validity_error */
	T6 a29; /* id */
	T6 a30; /* version */
	T0* a31; /* synonym */
};

/* Struct for type detachable ET_ONCE_FUNCTION */
struct S1438 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* other_seeds */
	T0* a4; /* implementation_feature */
	T0* a5; /* first_precursor */
	T0* a6; /* other_precursors */
	T0* a7; /* preconditions */
	T6 a8; /* hash_code */
	T0* a9; /* arguments */
	T0* a10; /* postconditions */
	T0* a11; /* assigner */
	T0* a12; /* extended_name */
	T0* a13; /* declared_type */
	T0* a14; /* keys */
	T0* a15; /* first_indexing */
	T0* a16; /* frozen_keyword */
	T0* a17; /* obsolete_message */
	T0* a18; /* locals */
	T0* a19; /* compound */
	T0* a20; /* rescue_clause */
	T0* a21; /* clients */
	T0* a22; /* is_keyword */
	T0* a23; /* end_keyword */
	T0* a24; /* semicolon */
	T0* a25; /* feature_clause */
	T0* a26; /* object_tests */
	T0* a27; /* across_components */
	T1 a28; /* validity_checked */
	T1 a29; /* has_validity_error */
	T6 a30; /* id */
	T6 a31; /* version */
	T0* a32; /* synonym */
};

/* Struct for type detachable ET_DEFERRED_FUNCTION */
struct S1439 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* other_seeds */
	T0* a4; /* implementation_feature */
	T0* a5; /* first_precursor */
	T0* a6; /* other_precursors */
	T0* a7; /* preconditions */
	T6 a8; /* hash_code */
	T0* a9; /* arguments */
	T0* a10; /* postconditions */
	T0* a11; /* assigner */
	T0* a12; /* extended_name */
	T0* a13; /* declared_type */
	T0* a14; /* frozen_keyword */
	T0* a15; /* obsolete_message */
	T0* a16; /* clients */
	T0* a17; /* is_keyword */
	T0* a18; /* deferred_keyword */
	T0* a19; /* end_keyword */
	T0* a20; /* semicolon */
	T0* a21; /* feature_clause */
	T0* a22; /* first_indexing */
	T0* a23; /* object_tests */
	T0* a24; /* across_components */
	T1 a25; /* validity_checked */
	T1 a26; /* has_validity_error */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* synonym */
};

/* Struct for type detachable ET_ONCE_PROCEDURE */
struct S1441 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* other_seeds */
	T0* a4; /* compound */
	T0* a5; /* implementation_feature */
	T0* a6; /* first_precursor */
	T0* a7; /* other_precursors */
	T0* a8; /* preconditions */
	T6 a9; /* hash_code */
	T0* a10; /* arguments */
	T0* a11; /* postconditions */
	T0* a12; /* extended_name */
	T0* a13; /* keys */
	T0* a14; /* first_indexing */
	T0* a15; /* frozen_keyword */
	T0* a16; /* obsolete_message */
	T0* a17; /* locals */
	T0* a18; /* rescue_clause */
	T0* a19; /* clients */
	T0* a20; /* is_keyword */
	T0* a21; /* end_keyword */
	T0* a22; /* semicolon */
	T0* a23; /* feature_clause */
	T0* a24; /* object_tests */
	T0* a25; /* across_components */
	T1 a26; /* validity_checked */
	T1 a27; /* has_validity_error */
	T6 a28; /* id */
	T6 a29; /* version */
	T0* a30; /* synonym */
};

/* Struct for type detachable ET_EXTERNAL_PROCEDURE */
struct S1442 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* other_seeds */
	T0* a4; /* implementation_feature */
	T0* a5; /* first_precursor */
	T0* a6; /* other_precursors */
	T0* a7; /* preconditions */
	T6 a8; /* hash_code */
	T8 a9; /* builtin_class_code */
	T8 a10; /* builtin_feature_code */
	T0* a11; /* arguments */
	T0* a12; /* postconditions */
	T0* a13; /* extended_name */
	T0* a14; /* frozen_keyword */
	T0* a15; /* language */
	T0* a16; /* obsolete_message */
	T0* a17; /* alias_clause */
	T0* a18; /* clients */
	T0* a19; /* is_keyword */
	T0* a20; /* end_keyword */
	T0* a21; /* semicolon */
	T0* a22; /* feature_clause */
	T0* a23; /* first_indexing */
	T0* a24; /* object_tests */
	T0* a25; /* across_components */
	T1 a26; /* validity_checked */
	T1 a27; /* has_validity_error */
	T6 a28; /* id */
	T6 a29; /* version */
	T0* a30; /* synonym */
};

/* Struct for type detachable ET_PREFIX_NAME */
struct S1443 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T0* a2; /* convert_keyword */
	T2 a3; /* code */
	T0* a4; /* prefix_keyword */
	T0* a5; /* operator_string */
};

/* Struct for type detachable ET_PREFIX_FREE_NAME */
struct S1444 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hash_code */
	T6 a2; /* seed */
	T0* a3; /* prefix_keyword */
	T0* a4; /* operator_string */
	T0* a5; /* convert_keyword */
	T2 a6; /* code */
};

/* Struct for type detachable ET_INFIX_NAME */
struct S1445 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T0* a2; /* convert_keyword */
	T2 a3; /* code */
	T0* a4; /* infix_keyword */
	T0* a5; /* operator_string */
};

/* Struct for type detachable ET_ALIASED_FEATURE_NAME */
struct S1446 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_name */
	T0* a2; /* alias_name */
};

/* Struct for type detachable ET_ALIAS_FREE_NAME */
struct S1447 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* convert_keyword */
	T6 a2; /* hash_code */
	T2 a3; /* code */
	T0* a4; /* alias_string */
	T0* a5; /* alias_keyword */
	T6 a6; /* seed */
};

/* Struct for type detachable ET_CLASS_ASSERTION */
struct S1450 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_keyword */
};

/* Struct for type detachable ET_LABELED_ACTUAL_PARAMETER */
struct S1451 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type detachable ET_LIKE_FEATURE */
struct S1453 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* like_keyword */
	T0* a3; /* name */
	T6 a4; /* seed */
	T1 a5; /* is_procedure */
};

/* Struct for type detachable ET_QUALIFIED_LIKE_BRACED_TYPE */
struct S1454 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* like_keyword */
	T0* a3; /* target_type */
	T0* a4; /* implementation_class */
	T0* a5; /* qualified_name */
	T0* a6; /* left_brace */
	T0* a7; /* right_brace */
};

/* Struct for type detachable ET_QUALIFIED_LIKE_TYPE */
struct S1455 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* target_type */
	T0* a3; /* implementation_class */
	T0* a4; /* qualified_name */
};

/* Struct for type detachable ET_ASSIGNER_INSTRUCTION */
struct S1456 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* call */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T0* a4; /* name */
};

/* Struct for type detachable ET_ASSIGNMENT */
struct S1457 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
};

/* Struct for type detachable ET_ASSIGNMENT_ATTEMPT */
struct S1458 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_attempt_symbol */
};

/* Struct for type detachable ET_LOOP_INSTRUCTION */
struct S1459 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* from_compound */
	T0* a2; /* until_conditional */
	T0* a3; /* loop_compound */
	T0* a4; /* end_keyword */
	T0* a5; /* invariant_part */
	T0* a6; /* variant_part */
	T1 a7; /* has_old_variant_syntax */
};

/* Struct for type detachable ET_BANG_INSTRUCTION */
struct S1461 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* left_bang */
	T0* a5; /* right_bang */
};

/* Struct for type detachable ET_CREATE_INSTRUCTION */
struct S1462 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* create_keyword */
	T0* a5; /* creation_region */
};

/* Struct for type detachable ET_CHOICE_RANGE */
struct S1463 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* lower */
	T0* a2; /* upper */
	T0* a3; /* dotdot */
};

/* Struct for type detachable ET_PRECURSOR_INSTRUCTION */
struct S1464 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a4; /* is_parent_prefixed */
	T0* a5; /* parenthesis_call */
	T0* a6; /* parent_type */
};

/* Struct for type detachable ET_STATIC_CALL_INSTRUCTION */
struct S1466 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* parenthesis_call */
};

/* Struct for type detachable ET_PRECURSOR_EXPRESSION */
struct S1467 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T1 a2; /* is_parent_prefixed */
	T0* a3; /* parent_name */
	T0* a4; /* precursor_keyword */
	T0* a5; /* arguments */
	T0* a6; /* parenthesis_call */
	T0* a7; /* parent_type */
};

/* Struct for type detachable ET_FEATURE_ADDRESS */
struct S1468 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* name */
};

/* Struct for type detachable ET_CURRENT_ADDRESS */
struct S1469 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* current_keyword */
};

/* Struct for type detachable ET_RESULT_ADDRESS */
struct S1470 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* result_keyword */
};

/* Struct for type detachable ET_EXPRESSION_ADDRESS */
struct S1471 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* expression */
};

/* Struct for type detachable ET_INFIX_EXPRESSION */
struct S1472 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* name */
	T0* a4; /* right */
	T1 a5; /* is_boolean_operator */
};

/* Struct for type detachable ET_INFIX_AND_THEN_OPERATOR */
struct S1473 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* and_keyword */
	T0* a2; /* then_keyword */
	T6 a3; /* seed */
};

/* Struct for type detachable ET_INFIX_OR_ELSE_OPERATOR */
struct S1474 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* or_keyword */
	T0* a2; /* else_keyword */
	T6 a3; /* seed */
};

/* Struct for type detachable ET_MANIFEST_TYPE */
struct S1475 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left_brace */
	T0* a3; /* type */
	T0* a4; /* right_brace */
};

/* Struct for type detachable ET_PREFIX_EXPRESSION */
struct S1476 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* expression */
	T1 a4; /* is_boolean_operator */
};

/* Struct for type detachable ET_OLD_EXPRESSION */
struct S1477 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* old_keyword */
	T0* a3; /* expression */
};

/* Struct for type detachable ET_OLD_OBJECT_TEST */
struct S1478 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* left_brace */
	T0* a4; /* attached_keyword */
	T0* a5; /* as_keyword */
	T0* a6; /* colon */
	T0* a7; /* declared_type */
	T0* a8; /* right_brace */
	T0* a9; /* expression */
};

/* Struct for type detachable ET_ONCE_MANIFEST_STRING */
struct S1479 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* once_keyword */
	T0* a3; /* manifest_string */
	T6 a4; /* id */
};

/* Struct for type detachable ET_DO_FUNCTION_INLINE_AGENT */
struct S1480 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* declared_type */
	T0* a5; /* end_keyword */
	T0* a6; /* implicit_result */
	T0* a7; /* object_tests */
	T0* a8; /* across_components */
	T0* a9; /* actual_arguments */
	T0* a10; /* preconditions */
	T0* a11; /* locals */
	T0* a12; /* compound */
	T0* a13; /* postconditions */
	T0* a14; /* rescue_clause */
	T0* a15; /* target */
	T6 a16; /* attached_result_index */
	T6 a17; /* result_index */
};

/* Struct for type detachable ET_ONCE_FUNCTION_INLINE_AGENT */
struct S1481 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* declared_type */
	T0* a5; /* end_keyword */
	T0* a6; /* implicit_result */
	T0* a7; /* object_tests */
	T0* a8; /* across_components */
	T0* a9; /* actual_arguments */
	T0* a10; /* preconditions */
	T0* a11; /* locals */
	T0* a12; /* keys */
	T0* a13; /* compound */
	T0* a14; /* postconditions */
	T0* a15; /* rescue_clause */
	T0* a16; /* target */
	T6 a17; /* attached_result_index */
	T6 a18; /* result_index */
};

/* Struct for type detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT */
struct S1482 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* language */
	T0* a4; /* object_tests */
	T0* a5; /* across_components */
	T0* a6; /* actual_arguments */
	T0* a7; /* preconditions */
	T0* a8; /* alias_clause */
	T0* a9; /* postconditions */
	T0* a10; /* formal_arguments */
	T0* a11; /* declared_type */
	T0* a12; /* end_keyword */
	T0* a13; /* implicit_result */
	T0* a14; /* target */
	T6 a15; /* attached_result_index */
	T6 a16; /* result_index */
};

/* Struct for type detachable ET_DO_PROCEDURE_INLINE_AGENT */
struct S1483 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* end_keyword */
	T0* a5; /* object_tests */
	T0* a6; /* across_components */
	T0* a7; /* actual_arguments */
	T0* a8; /* preconditions */
	T0* a9; /* locals */
	T0* a10; /* compound */
	T0* a11; /* postconditions */
	T0* a12; /* rescue_clause */
	T0* a13; /* target */
	T6 a14; /* attached_result_index */
	T6 a15; /* result_index */
};

/* Struct for type detachable ET_ONCE_PROCEDURE_INLINE_AGENT */
struct S1484 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* end_keyword */
	T0* a5; /* object_tests */
	T0* a6; /* across_components */
	T0* a7; /* actual_arguments */
	T0* a8; /* preconditions */
	T0* a9; /* locals */
	T0* a10; /* keys */
	T0* a11; /* compound */
	T0* a12; /* postconditions */
	T0* a13; /* rescue_clause */
	T0* a14; /* target */
	T6 a15; /* attached_result_index */
	T6 a16; /* result_index */
};

/* Struct for type detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
struct S1485 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* language */
	T0* a4; /* object_tests */
	T0* a5; /* across_components */
	T0* a6; /* actual_arguments */
	T0* a7; /* preconditions */
	T0* a8; /* alias_clause */
	T0* a9; /* postconditions */
	T0* a10; /* formal_arguments */
	T0* a11; /* end_keyword */
	T0* a12; /* target */
	T6 a13; /* attached_result_index */
	T6 a14; /* result_index */
};

/* Struct for type detachable ET_AGENT_OPEN_TARGET */
struct S1486 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* type */
	T0* a3; /* right_brace */
	T6 a4; /* index */
};

/* Struct for type detachable ET_AGENT_TYPED_OPEN_ARGUMENT */
struct S1487 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
	T0* a4; /* question_mark */
	T6 a5; /* index */
};

/* Struct for type detachable ET_TAGGED_ASSERTION */
struct S1490 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tag */
	T0* a2; /* untagged_assertion */
};

/* Struct for type [detachable] ET_FILE_POSITION */
struct S1492 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T0* a2; /* filename */
};

/* Struct for type [detachable] DS_QUICK_SORTER [[attached] ET_QUERY] */
struct S1494 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type [detachable] DS_QUICK_SORTER [[attached] ET_PROCEDURE] */
struct S1495 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type [detachable] ET_REDECLARED_FEATURE */
struct S1497 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* flattened_feature */
	T0* a3; /* parent_feature */
	T6 a4; /* first_seed */
	T0* a5; /* other_seeds */
	T1 a6; /* is_selected */
	T0* a7; /* replicated_features */
	T0* a8; /* replicated_seeds */
};

/* Struct for type [detachable] HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
struct S1499 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_state */
	T1 a2; /* internal_overflowed */
	T11 a3; /* part1 */
	T11 a4; /* part2 */
	T0* a5; /* leading_separators */
	T0* a6; /* trailing_separators */
	T6 a7; /* sign */
	T6 a8; /* conversion_type */
	T2 a9; /* internal_lookahead */
	T1 a10; /* leading_separators_acceptable */
	T1 a11; /* trailing_separators_acceptable */
};

/* Struct for type [detachable] TUPLE [[attached] ET_MASTER_CLASS, [attached] ET_SYSTEM_PROCESSOR] */
struct S1501 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER] */
struct S1503 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY] */
struct S1504 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1505 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE] */
struct S1506 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG] */
struct S1507 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE] */
struct S1508 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY] */
struct S1509 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1510 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE] */
struct S1511 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT] */
struct S1512 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE] */
struct S1513 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION] */
struct S1514 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_ACTION] */
struct S1515 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ACTION] */
struct S1516 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type detachable DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION] */
struct S1517 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_OPTIONS] */
struct S1518 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS] */
struct S1521 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
struct S1522 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS] */
struct S1523 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS] */
struct S1524 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_VISIBLE_CLASS] */
struct S1525 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS] */
struct S1526 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM] */
struct S1527 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_ASSEMBLY] */
struct S1528 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY] */
struct S1529 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_DOTNET_ASSEMBLY] */
struct S1530 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE] */
struct S1532 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_UNIVERSE] */
struct S1533 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE] */
struct S1535 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_SET_CURSOR [[attached] ET_INTERNAL_UNIVERSE] */
struct S1536 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE] */
struct S1538 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_INTERNAL_UNIVERSE] */
struct S1539 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] ET_CLASS_TYPE_STATUS_CHECKER1 */
struct S1540 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type [detachable] ET_CLASS_TYPE_STATUS_CHECKER2 */
struct S1541 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type [detachable] ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
struct S1542 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type [detachable] ET_CLASS_TYPE_STATUS_CHECKER3 */
struct S1543 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type [detachable] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS] */
struct S1544 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1545 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1546 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1547 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] DS_LINKED_QUEUE [[attached] CHARACTER_8] */
struct S1551 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
};

/* Struct for type [detachable] UC_UTF16_ROUTINES */
struct S1552 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_SET_CURSOR [[attached] ET_LIBRARY] */
struct S1553 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY] */
struct S1554 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_LIBRARY] */
struct S1555 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET] */
struct S1556 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ADAPTED_UNIVERSE] */
struct S1557 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE] */
struct S1558 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_UNIVERSE] */
struct S1559 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_TARGET_PARENT] */
struct S1560 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT] */
struct S1561 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET_PARENT] */
struct S1562 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] SPECIAL [[attached] NATURAL_64] */
struct S1563 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T11 z2[1]; /* item */
};

/* Struct for type [detachable] SPECIAL [detachable ET_OBJECT_TEST_LIST] */
struct S1564 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
struct S1565 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST_LIST] */
struct S1566 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_OBJECT_TEST_LIST] */
struct S1567 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
struct S1568 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
struct S1569 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT_LIST] */
struct S1570 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ACROSS_COMPONENT_LIST] */
struct S1571 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ASSERTION_ITEM] */
struct S1572 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM] */
struct S1573 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ASSERTION_ITEM] */
struct S1574 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
struct S1575 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_NAMED_CLASS] */
struct S1576 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS] */
struct S1578 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS] */
struct S1580 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* modulus */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* internal_cursor */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS] */
struct S1581 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_BASE_TYPE_CONSTRAINT] */
struct S1584 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] NATURAL_32] */
struct S1585 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] SPECIAL [[attached] NATURAL_32] */
struct S1586 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T10 z2[1]; /* item */
};

/* Struct for type [detachable] ET_BASE_TYPE_CONSTRAINT_LIST */
struct S1587 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T0* a3; /* storage */
	T6 a4; /* count */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME] */
struct S1588 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_FLATTENED_FEATURE] */
struct S1589 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_FEATURE_NAME] */
struct S1592 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE] */
struct S1593 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME] */
struct S1594 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ALIAS_NAME] */
struct S1596 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ALIAS_NAME] */
struct S1597 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME] */
struct S1598 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST] */
struct S1599 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_CLIENT_LIST] */
struct S1600 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST] */
struct S1601 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS] */
struct S1603 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT] */
struct S1604 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_CLIENT] */
struct S1605 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_HASH_SET [[attached] ET_CALL_NAME] */
struct S1606 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* internal_cursor */
	T6 a4; /* count */
	T0* a5; /* item_storage */
	T6 a6; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T0* a10; /* equality_tester */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME] */
struct S1607 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 a3; /* found_position */
	T0* a4; /* internal_cursor */
	T0* a5; /* key_storage */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* position */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* modulus */
	T0* a13; /* equality_tester */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* special_item_routines */
	T0* a17; /* clashes */
	T0* a18; /* slots */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME] */
struct S1608 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* key_storage */
	T0* a4; /* item_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* count */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* capacity */
	T6 a11; /* modulus */
	T6 a12; /* slots_position */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* equality_tester */
	T0* a15; /* internal_cursor */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32] */
struct S1609 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type [detachable] ET_REPLICATED_FEATURE */
struct S1611 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* features */
	T6 a2; /* selected_count */
};

/* Struct for type [detachable] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE] */
struct S1612 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE] */
struct S1613 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] ET_DOTNET_SIGNATURE_TESTER */
struct S1614 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE] */
struct S1615 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T6 a9; /* count */
	T6 a10; /* slots_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* internal_cursor */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE] */
struct S1617 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type [detachable] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE] */
struct S1619 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE] */
struct S1620 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* cycle */
	T0* a2; /* counts */
	T0* a3; /* successors */
	T0* a4; /* items */
	T0* a5; /* sorted_items */
	T0* a6; /* indexes */
};

/* Struct for type detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE] */
struct S1621 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE] */
struct S1622 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE] */
struct S1623 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8] */
struct S1624 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* slots_position */
	T6 a17; /* count */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32] */
struct S1625 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] DS_HASH_SET_CURSOR [[attached] ET_CLASS] */
struct S1628 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME] */
struct S1630 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_RENAME] */
struct S1631 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_CALL_NAME] */
struct S1632 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_RENAME] */
struct S1635 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME] */
struct S1636 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE] */
struct S1639 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] DS_HASH_SET_CURSOR [[attached] ET_QUERY] */
struct S1640 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [[attached] YY_BUFFER] */
struct S1641 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] YY_BUFFER] */
struct S1642 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_DYNAMIC_TARGET] */
struct S1643 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET] */
struct S1644 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ELEMENT_CONTENT] */
struct S1646 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_BILINKABLE [[attached] XM_DTD_ELEMENT_CONTENT] */
struct S1647 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type [detachable] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
struct S1649 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [detachable] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
struct S1650 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* before */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* after */
};

/* Struct for type detachable DS_LINKABLE [detachable STRING_8] */
struct S1651 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_CLUSTER] */
struct S1652 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER] */
struct S1653 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLUSTER] */
struct S1654 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_TYPE_ITEM] */
struct S1655 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE_ITEM] */
struct S1656 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS] */
struct S1657 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_DOTNET_ASSEMBLY] */
struct S1658 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_CLUSTER] */
struct S1659 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_CLUSTER]] */
struct S1660 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_TARGET, [attached] STRING_8] */
struct S1661 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_ADAPTED_LIBRARY] */
struct S1663 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_ADAPTED_LIBRARY]] */
struct S1664 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1665 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY]] */
struct S1666 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] STRING_8]] */
struct S1669 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
struct S1670 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8] */
struct S1671 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T0* a6; /* hash_function */
	T6 a7; /* position */
	T6 a8; /* last_position */
	T6 a9; /* capacity */
	T6 a10; /* slots_position */
	T6 a11; /* count */
	T6 a12; /* free_slot */
	T0* a13; /* equality_tester */
	T6 a14; /* modulus */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* special_item_routines */
	T0* a17; /* clashes */
	T0* a18; /* slots */
	T0* a19; /* special_key_routines */
	T0* a20; /* internal_cursor */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8] */
struct S1672 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T0* a6; /* hash_function */
	T6 a7; /* last_position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* count */
	T0* a11; /* equality_tester */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T6 a19; /* free_slot */
	T0* a20; /* internal_cursor */
};

/* Struct for type detachable DS_LINKABLE [[attached] XM_ELEMENT_NODE] */
struct S1677 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* right */
	T0* a2; /* item */
};

/* Struct for type detachable ET_CONSTRAINT_GENERIC_NAMED_TYPE */
struct S1681 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
};

/* Struct for type detachable ET_UNQUALIFIED_CALL_INSTRUCTION */
struct S1682 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* arguments */
	T0* a3; /* parenthesis_call */
};

/* Struct for type detachable ET_CLUSTER_DEPENDENCE_CONSTRAINT */
struct S1684 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_cluster */
	T0* a2; /* group_names */
	T0* a3; /* group_pathnames */
	T0* a4; /* pathname_buffer */
};

/* Struct for type [detachable] ET_SEEDED_QUERY_COMPARATOR */
struct S1685 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] ET_SEEDED_PROCEDURE_COMPARATOR */
struct S1688 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] TUPLE [[attached] ET_CLIENT_LIST] */
struct S1692 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] ET_FORMAL_COMMA_ARGUMENT */
struct S1693 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T6 a3; /* index */
	T6 a4; /* attached_index */
	T1 a5; /* is_used */
};

/* Struct for type [detachable] ET_LOCAL_COMMA_VARIABLE */
struct S1694 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T6 a3; /* index */
	T6 a4; /* attached_index */
	T1 a5; /* is_used */
};

/* Struct for type [detachable] ET_LABELED_COMMA_ACTUAL_PARAMETER */
struct S1695 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type [detachable] ET_KEYWORD_EXPRESSION */
struct S1697 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* expression */
	T0* a2; /* keyword */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_RENAME_ITEM] */
struct S1702 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_RENAME_ITEM] */
struct S1703 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_EXPORT] */
struct S1705 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPORT] */
struct S1706 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_FEATURE_NAME_ITEM] */
struct S1708 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME_ITEM] */
struct S1709 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_FORMAL_PARAMETER_ITEM] */
struct S1710 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER_ITEM] */
struct S1711 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG] */
struct S1714 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG]] */
struct S1715 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_TARGET, [attached] ET_ECF_STATE] */
struct S1716 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE] */
struct S1717 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE]] */
struct S1718 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY] */
struct S1719 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY]] */
struct S1720 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1721 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG]] */
struct S1722 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE] */
struct S1723 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE]] */
struct S1724 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT] */
struct S1725 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT]] */
struct S1726 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE] */
struct S1727 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE]] */
struct S1728 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type detachable DS_LINKABLE [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
struct S1733 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1736 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1737 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] ET_AGENT_IMPLICIT_CURRENT_TARGET */
struct S1738 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_expression */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_CHOICE_ITEM] */
struct S1740 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CHOICE_ITEM] */
struct S1741 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1742 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1744 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_CONVERT_FEATURE_ITEM] */
struct S1746 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CONVERT_FEATURE_ITEM] */
struct S1747 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_CREATOR] */
struct S1748 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CREATOR] */
struct S1749 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ELSEIF_EXPRESSION] */
struct S1750 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_EXPRESSION] */
struct S1751 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ELSEIF_PART] */
struct S1752 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_PART] */
struct S1753 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_FEATURE_CLAUSE] */
struct S1754 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_CLAUSE] */
struct S1755 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_INDEXING_ITEM] */
struct S1757 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_ITEM] */
struct S1758 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_INDEXING_TERM_ITEM] */
struct S1759 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM_ITEM] */
struct S1760 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_MANIFEST_STRING_ITEM] */
struct S1762 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_MANIFEST_STRING_ITEM] */
struct S1763 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_PARENT_LIST] */
struct S1764 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_LIST] */
struct S1765 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_TYPE_CONSTRAINT_ITEM] */
struct S1767 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE_CONSTRAINT_ITEM] */
struct S1768 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_WHEN_PART] */
struct S1769 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_WHEN_PART] */
struct S1770 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] ET_BASE_TYPE_RENAME_CONSTRAINT */
struct S1772 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* renames */
};

/* Struct for type detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS] */
struct S1775 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type [detachable] ET_STANDARD_ONCE_KEYS */
struct S1780 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_CLUSTER] */
struct S1782 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER] */
struct S1783 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER] */
struct S1784 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY] */
struct S1785 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY] */
struct S1786 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_LIBRARY] */
struct S1787 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1788 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1789 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1790 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE] */
struct S1791 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_FILE_RULE] */
struct S1792 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_FILE_RULE] */
struct S1793 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG] */
struct S1794 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG] */
struct S1795 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_CFLAG] */
struct S1796 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE] */
struct S1797 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE] */
struct S1798 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_INCLUDE] */
struct S1799 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY] */
struct S1800 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY] */
struct S1801 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LIBRARY] */
struct S1802 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1803 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1804 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1805 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE] */
struct S1806 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE] */
struct S1807 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_MAKE] */
struct S1808 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT] */
struct S1809 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT] */
struct S1810 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_OBJECT] */
struct S1811 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE] */
struct S1812 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE] */
struct S1813 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_RESOURCE] */
struct S1814 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] RX_PCRE_REGULAR_EXPRESSION] */
struct S1815 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] RX_PCRE_REGULAR_EXPRESSION] */
struct S1816 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] RX_PCRE_REGULAR_EXPRESSION] */
struct S1817 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS] */
struct S1818 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS] */
struct S1819 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ANDED_CONDITIONS] */
struct S1820 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM] */
struct S1821 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_ECF_CONDITION_ITEM] */
struct S1822 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CONDITION_ITEM] */
struct S1823 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type detachable DS_LINKABLE [[attached] CHARACTER_8] */
struct S1825 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_CLASS] */
struct S1826 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_BASE_TYPE_CONSTRAINT] */
struct S1827 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE_CONSTRAINT] */
struct S1828 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_BASE_TYPE_CONSTRAINT] */
struct S1829 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] NATURAL_32] */
struct S1830 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] NATURAL_32] */
struct S1831 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME] */
struct S1832 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME] */
struct S1833 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME] */
struct S1836 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32] */
struct S1837 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_REPLICABLE_FEATURE] */
struct S1838 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE] */
struct S1840 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE] */
struct S1841 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_LINKABLE [[attached] ET_ADAPTED_FEATURE] */
struct S1842 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_FEATURE] */
struct S1843 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_PARENT_FEATURE] */
struct S1844 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE] */
struct S1845 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_DOTNET_FEATURE] */
struct S1846 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_FEATURE] */
struct S1847 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE] */
struct S1848 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]] */
struct S1849 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE] */
struct S1852 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]] */
struct S1853 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE] */
struct S1854 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_LINKABLE [[attached] ET_DOTNET_FEATURE] */
struct S1855 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE] */
struct S1856 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T6 a5; /* modulus */
	T6 a6; /* capacity */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T0* a9; /* internal_cursor */
	T6 a10; /* found_position */
	T0* a11; /* item_storage */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* hash_function */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_LIKE_FEATURE] */
struct S1857 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE] */
struct S1858 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE] */
struct S1859 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8] */
struct S1861 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]] */
struct S1862 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME] */
struct S1863 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* position */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type [detachable] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]] */
struct S1864 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
struct S1865 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type [detachable] ET_CLUSTER_ERROR */
struct S1866 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* cluster */
};

/* Struct for type [detachable] ET_SYNTAX_ERROR */
struct S1867 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* filename */
	T0* a6; /* position */
	T1 a7; /* ise_reported */
	T1 a8; /* ise_fatal */
	T1 a9; /* ge_reported */
	T1 a10; /* ge_fatal */
};

/* Struct for type [detachable] ET_DOTNET_ASSEMBLY_ERROR */
struct S1868 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* assembly */
};

/* Struct for type [detachable] AP_OPTION_COMPARATOR */
struct S1869 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_QUICK_SORTER [[attached] AP_OPTION] */
struct S1870 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type [detachable] ST_SPLITTER */
struct S1877 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_escape_character */
	T2 a2; /* escape_character */
	T0* a3; /* separator_codes */
	T0* a4; /* separators */
};

/* Struct for type [detachable] KL_CHARACTER_ROUTINES */
struct S1878 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] TUPLE [[attached] ET_C_GENERATOR, INTEGER_32, [attached] ET_CURRENT, [attached] ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
struct S1879 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
struct S1880 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* actual_parameters */
	T6 a3; /* tuple_position */
	T0* a4; /* tuple_type */
};

/* Struct for type [detachable] ET_ACTUAL_PARAMETER_SUBLIST */
struct S1881 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* actual_parameters */
	T6 a2; /* upper */
	T6 a3; /* lower */
};

/* Struct for type [detachable] SPECIAL [[attached] ET_FORMAL_ARGUMENT_ITEM] */
struct S1884 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_ARGUMENT_ITEM] */
struct S1886 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR] */
struct S1888 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR] */
struct S1889 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_INSTRUCTION] */
struct S1890 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INSTRUCTION] */
struct S1892 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_LOCAL_VARIABLE_ITEM] */
struct S1893 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_LOCAL_VARIABLE_ITEM] */
struct S1895 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
struct S1903 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* actual_arguments */
	T0* a3; /* left_symbol */
	T0* a4; /* storage */
	T0* a5; /* right_symbol */
};

/* Struct for type [detachable] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8] */
struct S1904 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T8 z3;
};

/* Struct for type [detachable] ET_INFIX_CAST_EXPRESSION */
struct S1905 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* type */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] STRING_8] */
struct S1909 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]] */
struct S1910 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]] */
struct S1913 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8] */
struct S1914 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS] */
struct S1915 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table_cursor */
	T0* a2; /* container */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE] */
struct S1918 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [detachable] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]] */
struct S1919 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]] */
struct S1922 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME] */
struct S1923 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] ET_UNIVERSE_ERROR */
struct S1924 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* universe */
};

/* Struct for type [detachable] TUPLE [[attached] ET_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S1925 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type detachable ET_PARENTHESIS_INSTRUCTION */
struct S1926 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
};

/* Struct for type [detachable] ET_PARENTHESIS_SYMBOL */
struct S1946 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
};

/* Struct for type [detachable] ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
struct S1952 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [detachable] ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
struct S1953 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* agent_expression */
	T6 a2; /* argument_index */
	T6 a3; /* index */
};

/* Struct for type [detachable] DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
struct S1960 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table_cursor */
	T0* a2; /* container */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8] */
struct S1965 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8] */
struct S1966 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] ET_DYNAMIC_EQUALITY_EXPRESSION */
struct S1967 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* static_equality */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
};

/* Struct for type [detachable] ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
struct S1968 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* static_equality */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_LIBRARY] */
struct S1969 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] ET_CONVERT_BUILTIN_EXPRESSION */
struct S1971 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* convert_feature */
	T0* a4; /* type */
};

/* Struct for type [detachable] ET_CONVERT_FROM_EXPRESSION */
struct S1972 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* expression */
	T0* a4; /* convert_feature */
	T0* a5; /* type */
};

/* Struct for type [detachable] ET_CONVERT_TO_EXPRESSION */
struct S1973 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* expression */
	T0* a4; /* convert_feature */
};

/* Struct for type detachable DS_CELL [detachable ET_CLASS] */
struct S1976 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type [detachable] TUPLE [[attached] DS_CELL [detachable ET_CLASS]] */
struct S1977 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] TUPLE [[attached] ET_EIFFEL_PREPARSER, [attached] DS_ARRAYED_LIST [[attached] STRING_8]] */
struct S1979 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE] */
struct S1981 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_FILE_RULE] */
struct S1982 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]] */
struct S1983 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_FILE_RULES] */
struct S1984 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PREDICATE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]] */
struct S1985 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_STATE] */
struct S1986 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PREDICATE [[attached] TUPLE [[attached] STRING_8]] */
struct S1988 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] KL_STRING_ROUTINES, [attached] STRING_8] */
struct S1989 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [detachable] TUPLE [[attached] DS_HASH_SET [[attached] STRING_8]] */
struct S1991 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] LX_DFA_WILDCARD */
struct S1993 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* yy_nxt */
	T0* a2; /* yy_accept */
	T0* a3; /* subject */
	T6 a4; /* subject_start */
	T6 a5; /* subject_end */
	T6 a6; /* match_count */
	T6 a7; /* matched_start */
	T6 a8; /* matched_end */
	T6 a9; /* yyNb_rows */
	T0* a10; /* pattern */
	T1 a11; /* is_case_insensitive */
};

/* Struct for type detachable DS_LINKABLE [[attached] ET_PARENT_FEATURE] */
struct S1996 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [detachable] TUPLE [[attached] LX_WILDCARD] */
struct S1998 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PREDICATE [[attached] TUPLE [[attached] LX_WILDCARD]] */
struct S1999 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] TUPLE [[attached] ET_CLUSTER_DEPENDENCE_CONSTRAINT, [attached] ET_GROUP, [attached] STRING_8] */
struct S2000 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [detachable] SPECIAL [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S2002 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S2003 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] LX_WILDCARD] */
struct S2004 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] LX_WILDCARD] */
struct S2007 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] CHARACTER_PROPERTY */
struct S2008 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_LIBRARY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S2013 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [detachable] TUPLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S2014 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [detachable] TUPLE [[attached] ET_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S2015 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [detachable] TUPLE [[attached] ET_LIBRARY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S2016 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [detachable] ET_AST_NULL_LEAF */
struct S2018 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
};

/* Struct for type [detachable] LX_WILDCARD_PARSER */
struct S2019 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* successful */
	T0* a2; /* pending_rules */
	T0* a3; /* start_condition_stack */
	T0* a4; /* action_factory */
	T0* a5; /* old_singleton_lines */
	T0* a6; /* old_singleton_columns */
	T0* a7; /* old_singleton_counts */
	T0* a8; /* old_regexp_lines */
	T0* a9; /* old_regexp_columns */
	T0* a10; /* old_regexp_counts */
	T0* a11; /* description */
	T0* a12; /* last_string_value */
	T0* a13; /* last_lx_symbol_class_value */
	T0* a14; /* error_handler */
	T0* a15; /* name_definitions */
	T0* a16; /* character_classes */
	T6 a17; /* line_nb */
	T0* a18; /* yyss */
	T0* a19; /* input_buffer */
	T6 a20; /* yy_end */
	T6 a21; /* yy_position */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_parsing_status */
	T6 a25; /* yy_suspended_yystacksize */
	T6 a26; /* yy_suspended_yystate */
	T6 a27; /* yy_suspended_yyn */
	T6 a28; /* yy_suspended_yychar1 */
	T6 a29; /* yy_suspended_index */
	T6 a30; /* yy_suspended_yyss_top */
	T6 a31; /* yy_suspended_yy_goto */
	T0* a32; /* yyr1 */
	T6 a33; /* yyssp */
	T0* a34; /* yypgoto */
	T0* a35; /* yycheck */
	T0* a36; /* yytable */
	T0* a37; /* yydefgoto */
	T6 a38; /* error_count */
	T1 a39; /* yy_lookahead_needed */
	T6 a40; /* yyerrstatus */
	T0* a41; /* yypact */
	T6 a42; /* last_token */
	T0* a43; /* yytranslate */
	T0* a44; /* yydefact */
	T0* a45; /* yy_pushed_start_conditions */
	T0* a46; /* yyspecial_routines1 */
	T6 a47; /* yyvsc1 */
	T0* a48; /* yyvs1 */
	T0* a49; /* yyspecial_routines2 */
	T6 a50; /* yyvsc2 */
	T0* a51; /* yyvs2 */
	T0* a52; /* yyspecial_routines3 */
	T6 a53; /* yyvsc3 */
	T0* a54; /* yyvs3 */
	T0* a55; /* yyspecial_routines4 */
	T6 a56; /* yyvsc4 */
	T0* a57; /* yyvs4 */
	T0* a58; /* yyspecial_routines5 */
	T6 a59; /* yyvsc5 */
	T0* a60; /* yyvs5 */
	T0* a61; /* yytypes1 */
	T0* a62; /* yytypes2 */
	T6 a63; /* yy_start */
	T6 a64; /* yyvsp1 */
	T6 a65; /* yyvsp2 */
	T6 a66; /* yyvsp3 */
	T6 a67; /* yyvsp4 */
	T6 a68; /* yyvsp5 */
	T1 a69; /* yy_more_flag */
	T6 a70; /* yy_more_len */
	T6 a71; /* line */
	T6 a72; /* column */
	T6 a73; /* position */
	T6 a74; /* yy_start_state */
	T0* a75; /* yy_state_stack */
	T6 a76; /* yy_state_count */
	T0* a77; /* yy_content_area */
	T0* a78; /* yy_ec */
	T0* a79; /* yy_content */
	T0* a80; /* yy_accept */
	T6 a81; /* yy_last_accepting_state */
	T6 a82; /* yy_last_accepting_cpos */
	T0* a83; /* yy_chk */
	T0* a84; /* yy_base */
	T0* a85; /* yy_def */
	T0* a86; /* yy_meta */
	T0* a87; /* yy_nxt */
	T6 a88; /* yy_lp */
	T0* a89; /* yy_acclist */
	T6 a90; /* yy_looking_for_trail_begin */
	T6 a91; /* yy_full_match */
	T6 a92; /* yy_full_state */
	T6 a93; /* yy_full_lp */
	T1 a94; /* yy_rejected */
	T0* a95; /* last_detachable_any_value */
	T6 a96; /* last_integer_value */
	T1 a97; /* in_trail_context */
	T0* a98; /* rule */
	T1 a99; /* has_trail_context */
	T6 a100; /* head_count */
	T6 a101; /* head_line */
	T6 a102; /* head_column */
	T6 a103; /* trail_count */
	T6 a104; /* rule_line_nb */
};

/* Struct for type [detachable] LX_DESCRIPTION */
struct S2020 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equiv_classes */
	T1 a2; /* equiv_classes_used */
	T1 a3; /* full_table */
	T1 a4; /* meta_equiv_classes_used */
	T1 a5; /* reject_used */
	T1 a6; /* variable_trail_context */
	T0* a7; /* rules */
	T0* a8; /* start_conditions */
	T6 a9; /* characters_count */
	T6 a10; /* array_size */
	T1 a11; /* line_pragma */
	T1 a12; /* inspect_used */
	T0* a13; /* eof_rules */
	T0* a14; /* eiffel_header */
	T1 a15; /* case_insensitive */
	T0* a16; /* input_filename */
	T1 a17; /* actions_separated */
	T0* a18; /* eiffel_code */
	T1 a19; /* bol_needed */
	T1 a20; /* pre_action_used */
	T1 a21; /* post_action_used */
	T1 a22; /* pre_eof_action_used */
	T1 a23; /* post_eof_action_used */
	T1 a24; /* line_used */
	T1 a25; /* position_used */
};

/* Struct for type [detachable] LX_FULL_DFA */
struct S2021 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* yy_nxt */
	T0* a2; /* yy_accept */
	T6 a3; /* yyNb_rows */
	T0* a4; /* input_filename */
	T6 a5; /* characters_count */
	T6 a6; /* array_size */
	T1 a7; /* inspect_used */
	T1 a8; /* actions_separated */
	T0* a9; /* eiffel_code */
	T0* a10; /* eiffel_header */
	T1 a11; /* bol_needed */
	T1 a12; /* pre_action_used */
	T1 a13; /* post_action_used */
	T1 a14; /* pre_eof_action_used */
	T1 a15; /* post_eof_action_used */
	T1 a16; /* line_pragma */
	T0* a17; /* yy_start_conditions */
	T0* a18; /* yy_ec */
	T6 a19; /* yyNull_equiv_class */
	T6 a20; /* yyNb_rules */
	T0* a21; /* yy_rules */
	T6 a22; /* yyEnd_of_buffer */
	T1 a23; /* yyLine_used */
	T1 a24; /* yyPosition_used */
	T6 a25; /* minimum_symbol */
	T6 a26; /* maximum_symbol */
	T0* a27; /* states */
	T6 a28; /* backing_up_count */
	T0* a29; /* partitions */
	T6 a30; /* start_states_count */
	T1 a31; /* yyBacking_up */
	T0* a32; /* yy_eof_rules */
};

/* Struct for type [detachable] TUPLE [[attached] ET_GROUP] */
struct S2023 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]]] */
struct S2024 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [detachable] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION] */
struct S2026 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [detachable] PREDICATE [[attached] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION]] */
struct S2027 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [detachable] SPECIAL [[attached] NATURAL_16] */
struct S2030 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T9 z2[1]; /* item */
};

/* Struct for type [detachable] ARRAY [[attached] NATURAL_16] */
struct S2031 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [detachable] ARRAY [[attached] NATURAL_32] */
struct S2032 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] LX_RULE] */
struct S2033 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] LX_START_CONDITIONS */
struct S2034 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [detachable] LX_ACTION_FACTORY */
struct S2035 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] LX_SYMBOL_CLASS */
struct S2036 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T1 a4; /* sort_needed */
	T1 a5; /* negated */
	T0* a6; /* internal_cursor */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8] */
struct S2037 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* free_slot */
	T6 a10; /* last_position */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS] */
struct S2038 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] LX_SYMBOL_CLASS] */
struct S2039 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] LX_NFA] */
struct S2040 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] LX_NFA */
struct S2041 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* in_trail_context */
	T0* a2; /* states */
};

/* Struct for type [detachable] SPECIAL [[attached] LX_NFA] */
struct S2042 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable LX_EQUIVALENCE_CLASSES */
struct S2043 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type detachable LX_RULE */
struct S2044 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* pattern */
	T0* a3; /* action */
	T6 a4; /* head_count */
	T6 a5; /* trail_count */
	T6 a6; /* line_count */
	T6 a7; /* column_count */
	T6 a8; /* line_nb */
	T1 a9; /* has_trail_context */
	T1 a10; /* is_useful */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8] */
struct S2045 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type [detachable] LX_UNRECOGNIZED_RULE_ERROR */
struct S2046 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type [detachable] LX_MISSING_QUOTE_ERROR */
struct S2047 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type [detachable] LX_BAD_CHARACTER_CLASS_ERROR */
struct S2048 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type [detachable] LX_BAD_CHARACTER_ERROR */
struct S2049 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type [detachable] LX_FULL_AND_META_ERROR */
struct S2050 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type [detachable] LX_FULL_AND_REJECT_ERROR */
struct S2051 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type [detachable] LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
struct S2052 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type [detachable] LX_CHARACTER_OUT_OF_RANGE_ERROR */
struct S2053 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type [detachable] ARRAY [[attached] LX_RULE] */
struct S2054 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [detachable] SPECIAL [[attached] LX_RULE] */
struct S2055 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] LX_DFA_STATE */
struct S2056 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* accepted_rules */
	T0* a2; /* states */
	T0* a3; /* transitions */
	T0* a4; /* accepted_head_rules */
	T6 a5; /* code */
	T6 a6; /* id */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE] */
struct S2057 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] LX_DFA_STATE] */
struct S2058 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type detachable LX_SYMBOL_PARTITIONS */
struct S2059 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* symbols */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type [detachable] KL_ARRAY_ROUTINES [[attached] LX_RULE] */
struct S2060 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] ARRAY [detachable LX_RULE] */
struct S2061 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [detachable] SPECIAL [detachable LX_RULE] */
struct S2062 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] LX_START_CONDITION */
struct S2063 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* id */
	T1 a3; /* is_exclusive */
	T0* a4; /* patterns */
	T0* a5; /* bol_patterns */
};

/* Struct for type [detachable] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE] */
struct S2064 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* array_routines */
	T6 a3; /* count */
};

/* Struct for type [detachable] DS_ARRAYED_LIST [[attached] LX_NFA] */
struct S2065 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32] */
struct S2066 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* count */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* free_slot */
	T6 a8; /* last_position */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type [detachable] LX_NFA_STATE */
struct S2067 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* in_trail_context */
	T0* a2; /* transition */
	T0* a3; /* epsilon_transition */
	T6 a4; /* id */
	T0* a5; /* accepted_rule */
};

/* Struct for type [detachable] LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
struct S2068 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] LX_RULE] */
struct S2069 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_RULE] */
struct S2070 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] KL_ARRAY_ROUTINES [[attached] STRING_8] */
struct S2071 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] SPECIAL [[attached] LX_START_CONDITION] */
struct S2072 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] LX_START_CONDITION] */
struct S2073 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_START_CONDITION] */
struct S2074 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] LX_SYMBOL_CLASS_TRANSITION [[attached] LX_NFA_STATE] */
struct S2077 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* target */
};

/* Struct for type [detachable] LX_EPSILON_TRANSITION [[attached] LX_NFA_STATE] */
struct S2079 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
};

/* Struct for type [detachable] LX_SYMBOL_TRANSITION [[attached] LX_NFA_STATE] */
struct S2081 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* label */
	T0* a2; /* target */
};

/* Struct for type [detachable] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]] */
struct S2082 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [detachable] DS_BILINKABLE [[attached] INTEGER_32] */
struct S2083 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type [detachable] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]] */
struct S2084 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] LX_ACTION */
struct S2086 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* text */
};

/* Struct for type [detachable] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE] */
struct S2087 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type [detachable] DS_BUBBLE_SORTER [[attached] LX_RULE] */
struct S2089 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type [detachable] SPECIAL [[attached] LX_NFA_STATE] */
struct S2091 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE] */
struct S2093 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE] */
struct S2094 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [detachable] SPECIAL [[attached] LX_DFA_STATE] */
struct S2096 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE] */
struct S2097 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_DFA_STATE] */
struct S2098 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] KL_ARRAY [[attached] LX_RULE] */
struct S2099 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [detachable] ARRAY [detachable LX_DFA_STATE] */
struct S2100 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [detachable] SPECIAL [detachable LX_DFA_STATE] */
struct S2101 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [detachable] KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
struct S2102 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA] */
struct S2103 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_NFA, [attached] INTEGER_32] */
struct S2105 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [detachable] DS_SHELL_SORTER [[attached] INTEGER_32] */
struct S2108 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type [detachable] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE] */
struct S2109 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE] */
struct S2112 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [detachable] KL_ARRAY [[attached] STRING_8] */
struct S2115 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};


extern T1 GE_default1;
extern T2 GE_default2;
extern T3 GE_default3;
extern T4 GE_default4;
extern T5 GE_default5;
extern T6 GE_default6;
extern T7 GE_default7;
extern T8 GE_default8;
extern T9 GE_default9;
extern T10 GE_default10;
extern T11 GE_default11;
extern T12 GE_default12;
extern T13 GE_default13;
extern T14 GE_default14;
extern T15 GE_default15;
extern T16 GE_default16;
extern T17 GE_default17;
extern T18 GE_default18;
extern T19 GE_default19;
extern T20 GE_default20;
extern T24 GE_default24;
extern T25 GE_default25;
extern T26 GE_default26;
extern T27 GE_default27;
extern T28 GE_default28;
extern T29 GE_default29;
extern T30 GE_default30;
extern T31 GE_default31;
extern T32 GE_default32;
extern T33 GE_default33;
extern T34 GE_default34;
extern T35 GE_default35;
extern T37 GE_default37;
extern T38 GE_default38;
extern T39 GE_default39;
extern T40 GE_default40;
extern T42 GE_default42;
extern T43 GE_default43;
extern T44 GE_default44;
extern T45 GE_default45;
extern T46 GE_default46;
extern T50 GE_default50;
extern T52 GE_default52;
extern T53 GE_default53;
extern T54 GE_default54;
extern T55 GE_default55;
extern T56 GE_default56;
extern T58 GE_default58;
extern T59 GE_default59;
extern T60 GE_default60;
extern T61 GE_default61;
extern T64 GE_default64;
extern T65 GE_default65;
extern T66 GE_default66;
extern T68 GE_default68;
extern T69 GE_default69;
extern T70 GE_default70;
extern T71 GE_default71;
extern T72 GE_default72;
extern T74 GE_default74;
extern T75 GE_default75;
extern T78 GE_default78;
extern T80 GE_default80;
extern T81 GE_default81;
extern T82 GE_default82;
extern T83 GE_default83;
extern T86 GE_default86;
extern T87 GE_default87;
extern T90 GE_default90;
extern T92 GE_default92;
extern T94 GE_default94;
extern T96 GE_default96;
extern T97 GE_default97;
extern T98 GE_default98;
extern T99 GE_default99;
extern T100 GE_default100;
extern T101 GE_default101;
extern T102 GE_default102;
extern T104 GE_default104;
extern T105 GE_default105;
extern T106 GE_default106;
extern T107 GE_default107;
extern T108 GE_default108;
extern T109 GE_default109;
extern T110 GE_default110;
extern T111 GE_default111;
extern T112 GE_default112;
extern T113 GE_default113;
extern T114 GE_default114;
extern T115 GE_default115;
extern T116 GE_default116;
extern T117 GE_default117;
extern T118 GE_default118;
extern T119 GE_default119;
extern T120 GE_default120;
extern T121 GE_default121;
extern T122 GE_default122;
extern T123 GE_default123;
extern T124 GE_default124;
extern T125 GE_default125;
extern T126 GE_default126;
extern T128 GE_default128;
extern T130 GE_default130;
extern T131 GE_default131;
extern T132 GE_default132;
extern T133 GE_default133;
extern T134 GE_default134;
extern T135 GE_default135;
extern T136 GE_default136;
extern T137 GE_default137;
extern T139 GE_default139;
extern T140 GE_default140;
extern T141 GE_default141;
extern T142 GE_default142;
extern T143 GE_default143;
extern T144 GE_default144;
extern T145 GE_default145;
extern T146 GE_default146;
extern T147 GE_default147;
extern T148 GE_default148;
extern T149 GE_default149;
extern T152 GE_default152;
extern T155 GE_default155;
extern T156 GE_default156;
extern T157 GE_default157;
extern T158 GE_default158;
extern T159 GE_default159;
extern T160 GE_default160;
extern T161 GE_default161;
extern T162 GE_default162;
extern T163 GE_default163;
extern T164 GE_default164;
extern T165 GE_default165;
extern T166 GE_default166;
extern T167 GE_default167;
extern T169 GE_default169;
extern T170 GE_default170;
extern T171 GE_default171;
extern T173 GE_default173;
extern T174 GE_default174;
extern T177 GE_default177;
extern T178 GE_default178;
extern T179 GE_default179;
extern T180 GE_default180;
extern T182 GE_default182;
extern T183 GE_default183;
extern T185 GE_default185;
extern T186 GE_default186;
extern T187 GE_default187;
extern T188 GE_default188;
extern T190 GE_default190;
extern T191 GE_default191;
extern T193 GE_default193;
extern T194 GE_default194;
extern T195 GE_default195;
extern T196 GE_default196;
extern T197 GE_default197;
extern T198 GE_default198;
extern T199 GE_default199;
extern T200 GE_default200;
extern T201 GE_default201;
extern T202 GE_default202;
extern T203 GE_default203;
extern T205 GE_default205;
extern T206 GE_default206;
extern T208 GE_default208;
extern T209 GE_default209;
extern T210 GE_default210;
extern T211 GE_default211;
extern T212 GE_default212;
extern T213 GE_default213;
extern T214 GE_default214;
extern T216 GE_default216;
extern T218 GE_default218;
extern T219 GE_default219;
extern T220 GE_default220;
extern T221 GE_default221;
extern T222 GE_default222;
extern T223 GE_default223;
extern T224 GE_default224;
extern T225 GE_default225;
extern T226 GE_default226;
extern T231 GE_default231;
extern T235 GE_default235;
extern T236 GE_default236;
extern T245 GE_default245;
extern T246 GE_default246;
extern T247 GE_default247;
extern T248 GE_default248;
extern T249 GE_default249;
extern T250 GE_default250;
extern T251 GE_default251;
extern T252 GE_default252;
extern T253 GE_default253;
extern T254 GE_default254;
extern T255 GE_default255;
extern T256 GE_default256;
extern T257 GE_default257;
extern T258 GE_default258;
extern T259 GE_default259;
extern T260 GE_default260;
extern T261 GE_default261;
extern T262 GE_default262;
extern T263 GE_default263;
extern T264 GE_default264;
extern T265 GE_default265;
extern T266 GE_default266;
extern T267 GE_default267;
extern T268 GE_default268;
extern T269 GE_default269;
extern T270 GE_default270;
extern T272 GE_default272;
extern T273 GE_default273;
extern T274 GE_default274;
extern T277 GE_default277;
extern T278 GE_default278;
extern T279 GE_default279;
extern T280 GE_default280;
extern T281 GE_default281;
extern T282 GE_default282;
extern T283 GE_default283;
extern T284 GE_default284;
extern T285 GE_default285;
extern T286 GE_default286;
extern T287 GE_default287;
extern T288 GE_default288;
extern T289 GE_default289;
extern T290 GE_default290;
extern T292 GE_default292;
extern T293 GE_default293;
extern T294 GE_default294;
extern T295 GE_default295;
extern T296 GE_default296;
extern T297 GE_default297;
extern T298 GE_default298;
extern T299 GE_default299;
extern T300 GE_default300;
extern T301 GE_default301;
extern T305 GE_default305;
extern T307 GE_default307;
extern T308 GE_default308;
extern T309 GE_default309;
extern T310 GE_default310;
extern T313 GE_default313;
extern T314 GE_default314;
extern T315 GE_default315;
extern T319 GE_default319;
extern T320 GE_default320;
extern T323 GE_default323;
extern T324 GE_default324;
extern T326 GE_default326;
extern T327 GE_default327;
extern T328 GE_default328;
extern T329 GE_default329;
extern T330 GE_default330;
extern T334 GE_default334;
extern T341 GE_default341;
extern T342 GE_default342;
extern T343 GE_default343;
extern T344 GE_default344;
extern T345 GE_default345;
extern T346 GE_default346;
extern T347 GE_default347;
extern T348 GE_default348;
extern T351 GE_default351;
extern T353 GE_default353;
extern T355 GE_default355;
extern T356 GE_default356;
extern T357 GE_default357;
extern T359 GE_default359;
extern T360 GE_default360;
extern T361 GE_default361;
extern T363 GE_default363;
extern T364 GE_default364;
extern T365 GE_default365;
extern T366 GE_default366;
extern T368 GE_default368;
extern T369 GE_default369;
extern T370 GE_default370;
extern T371 GE_default371;
extern T373 GE_default373;
extern T375 GE_default375;
extern T376 GE_default376;
extern T377 GE_default377;
extern T378 GE_default378;
extern T379 GE_default379;
extern T380 GE_default380;
extern T381 GE_default381;
extern T382 GE_default382;
extern T383 GE_default383;
extern T384 GE_default384;
extern T385 GE_default385;
extern T386 GE_default386;
extern T387 GE_default387;
extern T388 GE_default388;
extern T389 GE_default389;
extern T390 GE_default390;
extern T391 GE_default391;
extern T392 GE_default392;
extern T393 GE_default393;
extern T394 GE_default394;
extern T395 GE_default395;
extern T397 GE_default397;
extern T399 GE_default399;
extern T401 GE_default401;
extern T402 GE_default402;
extern T403 GE_default403;
extern T404 GE_default404;
extern T405 GE_default405;
extern T406 GE_default406;
extern T409 GE_default409;
extern T411 GE_default411;
extern T412 GE_default412;
extern T413 GE_default413;
extern T415 GE_default415;
extern T416 GE_default416;
extern T417 GE_default417;
extern T418 GE_default418;
extern T419 GE_default419;
extern T421 GE_default421;
extern T427 GE_default427;
extern T428 GE_default428;
extern T429 GE_default429;
extern T430 GE_default430;
extern T432 GE_default432;
extern T433 GE_default433;
extern T434 GE_default434;
extern T435 GE_default435;
extern T436 GE_default436;
extern T437 GE_default437;
extern T438 GE_default438;
extern T439 GE_default439;
extern T440 GE_default440;
extern T441 GE_default441;
extern T442 GE_default442;
extern T443 GE_default443;
extern T444 GE_default444;
extern T445 GE_default445;
extern T446 GE_default446;
extern T447 GE_default447;
extern T448 GE_default448;
extern T450 GE_default450;
extern T451 GE_default451;
extern T452 GE_default452;
extern T453 GE_default453;
extern T456 GE_default456;
extern T458 GE_default458;
extern T459 GE_default459;
extern T460 GE_default460;
extern T461 GE_default461;
extern T462 GE_default462;
extern T463 GE_default463;
extern T464 GE_default464;
extern T466 GE_default466;
extern T467 GE_default467;
extern T469 GE_default469;
extern T470 GE_default470;
extern T471 GE_default471;
extern T473 GE_default473;
extern T474 GE_default474;
extern T475 GE_default475;
extern T476 GE_default476;
extern T477 GE_default477;
extern T478 GE_default478;
extern T479 GE_default479;
extern T480 GE_default480;
extern T481 GE_default481;
extern T482 GE_default482;
extern T483 GE_default483;
extern T484 GE_default484;
extern T485 GE_default485;
extern T486 GE_default486;
extern T488 GE_default488;
extern T489 GE_default489;
extern T492 GE_default492;
extern T493 GE_default493;
extern T496 GE_default496;
extern T497 GE_default497;
extern T498 GE_default498;
extern T499 GE_default499;
extern T501 GE_default501;
extern T502 GE_default502;
extern T503 GE_default503;
extern T504 GE_default504;
extern T506 GE_default506;
extern T508 GE_default508;
extern T509 GE_default509;
extern T510 GE_default510;
extern T511 GE_default511;
extern T512 GE_default512;
extern T513 GE_default513;
extern T514 GE_default514;
extern T515 GE_default515;
extern T516 GE_default516;
extern T517 GE_default517;
extern T518 GE_default518;
extern T519 GE_default519;
extern T520 GE_default520;
extern T521 GE_default521;
extern T522 GE_default522;
extern T523 GE_default523;
extern T524 GE_default524;
extern T525 GE_default525;
extern T526 GE_default526;
extern T527 GE_default527;
extern T528 GE_default528;
extern T529 GE_default529;
extern T530 GE_default530;
extern T531 GE_default531;
extern T532 GE_default532;
extern T533 GE_default533;
extern T534 GE_default534;
extern T535 GE_default535;
extern T538 GE_default538;
extern T539 GE_default539;
extern T541 GE_default541;
extern T542 GE_default542;
extern T543 GE_default543;
extern T544 GE_default544;
extern T545 GE_default545;
extern T546 GE_default546;
extern T547 GE_default547;
extern T549 GE_default549;
extern T550 GE_default550;
extern T551 GE_default551;
extern T552 GE_default552;
extern T553 GE_default553;
extern T554 GE_default554;
extern T555 GE_default555;
extern T556 GE_default556;
extern T559 GE_default559;
extern T560 GE_default560;
extern T561 GE_default561;
extern T564 GE_default564;
extern T566 GE_default566;
extern T567 GE_default567;
extern T568 GE_default568;
extern T569 GE_default569;
extern T571 GE_default571;
extern T573 GE_default573;
extern T574 GE_default574;
extern T575 GE_default575;
extern T576 GE_default576;
extern T577 GE_default577;
extern T578 GE_default578;
extern T581 GE_default581;
extern T582 GE_default582;
extern T583 GE_default583;
extern T584 GE_default584;
extern T585 GE_default585;
extern T586 GE_default586;
extern T587 GE_default587;
extern T588 GE_default588;
extern T591 GE_default591;
extern T592 GE_default592;
extern T593 GE_default593;
extern T594 GE_default594;
extern T595 GE_default595;
extern T597 GE_default597;
extern T601 GE_default601;
extern T602 GE_default602;
extern T604 GE_default604;
extern T605 GE_default605;
extern T606 GE_default606;
extern T607 GE_default607;
extern T608 GE_default608;
extern T609 GE_default609;
extern T610 GE_default610;
extern T611 GE_default611;
extern T612 GE_default612;
extern T614 GE_default614;
extern T615 GE_default615;
extern T616 GE_default616;
extern T617 GE_default617;
extern T618 GE_default618;
extern T619 GE_default619;
extern T620 GE_default620;
extern T621 GE_default621;
extern T623 GE_default623;
extern T624 GE_default624;
extern T625 GE_default625;
extern T626 GE_default626;
extern T627 GE_default627;
extern T628 GE_default628;
extern T629 GE_default629;
extern T630 GE_default630;
extern T631 GE_default631;
extern T632 GE_default632;
extern T633 GE_default633;
extern T634 GE_default634;
extern T635 GE_default635;
extern T637 GE_default637;
extern T638 GE_default638;
extern T639 GE_default639;
extern T640 GE_default640;
extern T641 GE_default641;
extern T642 GE_default642;
extern T643 GE_default643;
extern T645 GE_default645;
extern T646 GE_default646;
extern T647 GE_default647;
extern T648 GE_default648;
extern T649 GE_default649;
extern T651 GE_default651;
extern T652 GE_default652;
extern T653 GE_default653;
extern T655 GE_default655;
extern T656 GE_default656;
extern T658 GE_default658;
extern T659 GE_default659;
extern T660 GE_default660;
extern T661 GE_default661;
extern T664 GE_default664;
extern T666 GE_default666;
extern T667 GE_default667;
extern T668 GE_default668;
extern T669 GE_default669;
extern T672 GE_default672;
extern T673 GE_default673;
extern T674 GE_default674;
extern T678 GE_default678;
extern T679 GE_default679;
extern T680 GE_default680;
extern T682 GE_default682;
extern T683 GE_default683;
extern T685 GE_default685;
extern T686 GE_default686;
extern T687 GE_default687;
extern T688 GE_default688;
extern T689 GE_default689;
extern T690 GE_default690;
extern T691 GE_default691;
extern T692 GE_default692;
extern T693 GE_default693;
extern T694 GE_default694;
extern T695 GE_default695;
extern T696 GE_default696;
extern T697 GE_default697;
extern T698 GE_default698;
extern T699 GE_default699;
extern T700 GE_default700;
extern T701 GE_default701;
extern T702 GE_default702;
extern T703 GE_default703;
extern T704 GE_default704;
extern T705 GE_default705;
extern T706 GE_default706;
extern T709 GE_default709;
extern T710 GE_default710;
extern T711 GE_default711;
extern T712 GE_default712;
extern T713 GE_default713;
extern T716 GE_default716;
extern T717 GE_default717;
extern T718 GE_default718;
extern T719 GE_default719;
extern T721 GE_default721;
extern T722 GE_default722;
extern T723 GE_default723;
extern T724 GE_default724;
extern T726 GE_default726;
extern T727 GE_default727;
extern T728 GE_default728;
extern T729 GE_default729;
extern T730 GE_default730;
extern T731 GE_default731;
extern T732 GE_default732;
extern T733 GE_default733;
extern T734 GE_default734;
extern T736 GE_default736;
extern T737 GE_default737;
extern T738 GE_default738;
extern T739 GE_default739;
extern T740 GE_default740;
extern T741 GE_default741;
extern T742 GE_default742;
extern T743 GE_default743;
extern T744 GE_default744;
extern T745 GE_default745;
extern T746 GE_default746;
extern T747 GE_default747;
extern T748 GE_default748;
extern T749 GE_default749;
extern T750 GE_default750;
extern T751 GE_default751;
extern T752 GE_default752;
extern T753 GE_default753;
extern T754 GE_default754;
extern T755 GE_default755;
extern T756 GE_default756;
extern T758 GE_default758;
extern T759 GE_default759;
extern T760 GE_default760;
extern T761 GE_default761;
extern T762 GE_default762;
extern T763 GE_default763;
extern T764 GE_default764;
extern T765 GE_default765;
extern T766 GE_default766;
extern T767 GE_default767;
extern T768 GE_default768;
extern T769 GE_default769;
extern T770 GE_default770;
extern T771 GE_default771;
extern T772 GE_default772;
extern T773 GE_default773;
extern T774 GE_default774;
extern T775 GE_default775;
extern T776 GE_default776;
extern T777 GE_default777;
extern T779 GE_default779;
extern T780 GE_default780;
extern T781 GE_default781;
extern T782 GE_default782;
extern T783 GE_default783;
extern T784 GE_default784;
extern T785 GE_default785;
extern T787 GE_default787;
extern T788 GE_default788;
extern T790 GE_default790;
extern T791 GE_default791;
extern T792 GE_default792;
extern T793 GE_default793;
extern T794 GE_default794;
extern T795 GE_default795;
extern T796 GE_default796;
extern T797 GE_default797;
extern T799 GE_default799;
extern T800 GE_default800;
extern T801 GE_default801;
extern T802 GE_default802;
extern T803 GE_default803;
extern T804 GE_default804;
extern T805 GE_default805;
extern T806 GE_default806;
extern T807 GE_default807;
extern T808 GE_default808;
extern T809 GE_default809;
extern T810 GE_default810;
extern T811 GE_default811;
extern T812 GE_default812;
extern T814 GE_default814;
extern T815 GE_default815;
extern T816 GE_default816;
extern T817 GE_default817;
extern T818 GE_default818;
extern T819 GE_default819;
extern T820 GE_default820;
extern T821 GE_default821;
extern T822 GE_default822;
extern T823 GE_default823;
extern T824 GE_default824;
extern T825 GE_default825;
extern T826 GE_default826;
extern T827 GE_default827;
extern T829 GE_default829;
extern T830 GE_default830;
extern T831 GE_default831;
extern T832 GE_default832;
extern T833 GE_default833;
extern T834 GE_default834;
extern T837 GE_default837;
extern T841 GE_default841;
extern T842 GE_default842;
extern T843 GE_default843;
extern T844 GE_default844;
extern T845 GE_default845;
extern T848 GE_default848;
extern T849 GE_default849;
extern T851 GE_default851;
extern T852 GE_default852;
extern T853 GE_default853;
extern T854 GE_default854;
extern T856 GE_default856;
extern T858 GE_default858;
extern T859 GE_default859;
extern T860 GE_default860;
extern T861 GE_default861;
extern T862 GE_default862;
extern T863 GE_default863;
extern T864 GE_default864;
extern T865 GE_default865;
extern T866 GE_default866;
extern T867 GE_default867;
extern T868 GE_default868;
extern T869 GE_default869;
extern T870 GE_default870;
extern T872 GE_default872;
extern T873 GE_default873;
extern T874 GE_default874;
extern T875 GE_default875;
extern T876 GE_default876;
extern T877 GE_default877;
extern T884 GE_default884;
extern T885 GE_default885;
extern T887 GE_default887;
extern T888 GE_default888;
extern T889 GE_default889;
extern T890 GE_default890;
extern T891 GE_default891;
extern T892 GE_default892;
extern T893 GE_default893;
extern T894 GE_default894;
extern T895 GE_default895;
extern T896 GE_default896;
extern T897 GE_default897;
extern T898 GE_default898;
extern T902 GE_default902;
extern T903 GE_default903;
extern T904 GE_default904;
extern T905 GE_default905;
extern T906 GE_default906;
extern T907 GE_default907;
extern T908 GE_default908;
extern T909 GE_default909;
extern T910 GE_default910;
extern T911 GE_default911;
extern T912 GE_default912;
extern T913 GE_default913;
extern T914 GE_default914;
extern T915 GE_default915;
extern T916 GE_default916;
extern T917 GE_default917;
extern T918 GE_default918;
extern T919 GE_default919;
extern T920 GE_default920;
extern T921 GE_default921;
extern T922 GE_default922;
extern T923 GE_default923;
extern T924 GE_default924;
extern T925 GE_default925;
extern T926 GE_default926;
extern T928 GE_default928;
extern T929 GE_default929;
extern T931 GE_default931;
extern T932 GE_default932;
extern T934 GE_default934;
extern T935 GE_default935;
extern T936 GE_default936;
extern T937 GE_default937;
extern T938 GE_default938;
extern T939 GE_default939;
extern T940 GE_default940;
extern T941 GE_default941;
extern T942 GE_default942;
extern T944 GE_default944;
extern T945 GE_default945;
extern T946 GE_default946;
extern T947 GE_default947;
extern T948 GE_default948;
extern T949 GE_default949;
extern T950 GE_default950;
extern T952 GE_default952;
extern T953 GE_default953;
extern T954 GE_default954;
extern T955 GE_default955;
extern T956 GE_default956;
extern T957 GE_default957;
extern T958 GE_default958;
extern T959 GE_default959;
extern T960 GE_default960;
extern T961 GE_default961;
extern T962 GE_default962;
extern T963 GE_default963;
extern T964 GE_default964;
extern T965 GE_default965;
extern T966 GE_default966;
extern T967 GE_default967;
extern T968 GE_default968;
extern T969 GE_default969;
extern T970 GE_default970;
extern T971 GE_default971;
extern T972 GE_default972;
extern T973 GE_default973;
extern T974 GE_default974;
extern T975 GE_default975;
extern T976 GE_default976;
extern T977 GE_default977;
extern T978 GE_default978;
extern T979 GE_default979;
extern T980 GE_default980;
extern T981 GE_default981;
extern T982 GE_default982;
extern T983 GE_default983;
extern T984 GE_default984;
extern T985 GE_default985;
extern T986 GE_default986;
extern T988 GE_default988;
extern T989 GE_default989;
extern T990 GE_default990;
extern T991 GE_default991;
extern T992 GE_default992;
extern T993 GE_default993;
extern T994 GE_default994;
extern T995 GE_default995;
extern T996 GE_default996;
extern T998 GE_default998;
extern T999 GE_default999;
extern T1000 GE_default1000;
extern T1001 GE_default1001;
extern T1002 GE_default1002;
extern T1003 GE_default1003;
extern T1004 GE_default1004;
extern T1005 GE_default1005;
extern T1006 GE_default1006;
extern T1007 GE_default1007;
extern T1008 GE_default1008;
extern T1010 GE_default1010;
extern T1011 GE_default1011;
extern T1013 GE_default1013;
extern T1014 GE_default1014;
extern T1016 GE_default1016;
extern T1017 GE_default1017;
extern T1018 GE_default1018;
extern T1019 GE_default1019;
extern T1020 GE_default1020;
extern T1021 GE_default1021;
extern T1022 GE_default1022;
extern T1023 GE_default1023;
extern T1024 GE_default1024;
extern T1025 GE_default1025;
extern T1026 GE_default1026;
extern T1027 GE_default1027;
extern T1028 GE_default1028;
extern T1029 GE_default1029;
extern T1031 GE_default1031;
extern T1032 GE_default1032;
extern T1033 GE_default1033;
extern T1034 GE_default1034;
extern T1036 GE_default1036;
extern T1037 GE_default1037;
extern T1038 GE_default1038;
extern T1039 GE_default1039;
extern T1040 GE_default1040;
extern T1041 GE_default1041;
extern T1042 GE_default1042;
extern T1043 GE_default1043;
extern T1044 GE_default1044;
extern T1045 GE_default1045;
extern T1046 GE_default1046;
extern T1048 GE_default1048;
extern T1049 GE_default1049;
extern T1051 GE_default1051;
extern T1052 GE_default1052;
extern T1054 GE_default1054;
extern T1055 GE_default1055;
extern T1056 GE_default1056;
extern T1057 GE_default1057;
extern T1058 GE_default1058;
extern T1059 GE_default1059;
extern T1060 GE_default1060;
extern T1061 GE_default1061;
extern T1062 GE_default1062;
extern T1063 GE_default1063;
extern T1064 GE_default1064;
extern T1065 GE_default1065;
extern T1066 GE_default1066;
extern T1067 GE_default1067;
extern T1068 GE_default1068;
extern T1069 GE_default1069;
extern T1070 GE_default1070;
extern T1071 GE_default1071;
extern T1072 GE_default1072;
extern T1073 GE_default1073;
extern T1074 GE_default1074;
extern T1075 GE_default1075;
extern T1076 GE_default1076;
extern T1077 GE_default1077;
extern T1078 GE_default1078;
extern T1079 GE_default1079;
extern T1080 GE_default1080;
extern T1081 GE_default1081;
extern T1082 GE_default1082;
extern T1083 GE_default1083;
extern T1084 GE_default1084;
extern T1086 GE_default1086;
extern T1087 GE_default1087;
extern T1088 GE_default1088;
extern T1089 GE_default1089;
extern T1090 GE_default1090;
extern T1091 GE_default1091;
extern T1092 GE_default1092;
extern T1093 GE_default1093;
extern T1094 GE_default1094;
extern T1095 GE_default1095;
extern T1097 GE_default1097;
extern T1098 GE_default1098;
extern T1099 GE_default1099;
extern T1100 GE_default1100;
extern T1101 GE_default1101;
extern T1102 GE_default1102;
extern T1103 GE_default1103;
extern T1104 GE_default1104;
extern T1105 GE_default1105;
extern T1106 GE_default1106;
extern T1107 GE_default1107;
extern T1108 GE_default1108;
extern T1109 GE_default1109;
extern T1111 GE_default1111;
extern T1112 GE_default1112;
extern T1113 GE_default1113;
extern T1114 GE_default1114;
extern T1116 GE_default1116;
extern T1117 GE_default1117;
extern T1118 GE_default1118;
extern T1119 GE_default1119;
extern T1120 GE_default1120;
extern T1121 GE_default1121;
extern T1123 GE_default1123;
extern T1124 GE_default1124;
extern T1125 GE_default1125;
extern T1126 GE_default1126;
extern T1127 GE_default1127;
extern T1128 GE_default1128;
extern T1129 GE_default1129;
extern T1130 GE_default1130;
extern T1131 GE_default1131;
extern T1132 GE_default1132;
extern T1133 GE_default1133;
extern T1134 GE_default1134;
extern T1135 GE_default1135;
extern T1137 GE_default1137;
extern T1138 GE_default1138;
extern T1139 GE_default1139;
extern T1140 GE_default1140;
extern T1142 GE_default1142;
extern T1143 GE_default1143;
extern T1144 GE_default1144;
extern T1145 GE_default1145;
extern T1146 GE_default1146;
extern T1147 GE_default1147;
extern T1148 GE_default1148;
extern T1149 GE_default1149;
extern T1150 GE_default1150;
extern T1151 GE_default1151;
extern T1153 GE_default1153;
extern T1154 GE_default1154;
extern T1155 GE_default1155;
extern T1156 GE_default1156;
extern T1157 GE_default1157;
extern T1158 GE_default1158;
extern T1159 GE_default1159;
extern T1161 GE_default1161;
extern T1162 GE_default1162;
extern T1163 GE_default1163;
extern T1164 GE_default1164;
extern T1165 GE_default1165;
extern T1167 GE_default1167;
extern T1168 GE_default1168;
extern T1169 GE_default1169;
extern T1170 GE_default1170;
extern T1171 GE_default1171;
extern T1172 GE_default1172;
extern T1173 GE_default1173;
extern T1174 GE_default1174;
extern T1175 GE_default1175;
extern T1176 GE_default1176;
extern T1178 GE_default1178;
extern T1179 GE_default1179;
extern T1180 GE_default1180;
extern T1181 GE_default1181;
extern T1182 GE_default1182;
extern T1183 GE_default1183;
extern T1184 GE_default1184;
extern T1186 GE_default1186;
extern T1187 GE_default1187;
extern T1188 GE_default1188;
extern T1189 GE_default1189;
extern T1190 GE_default1190;
extern T1191 GE_default1191;
extern T1192 GE_default1192;
extern T1193 GE_default1193;
extern T1194 GE_default1194;
extern T1195 GE_default1195;
extern T1196 GE_default1196;
extern T1197 GE_default1197;
extern T1198 GE_default1198;
extern T1199 GE_default1199;
extern T1200 GE_default1200;
extern T1201 GE_default1201;
extern T1202 GE_default1202;
extern T1203 GE_default1203;
extern T1204 GE_default1204;
extern T1205 GE_default1205;
extern T1206 GE_default1206;
extern T1208 GE_default1208;
extern T1209 GE_default1209;
extern T1210 GE_default1210;
extern T1211 GE_default1211;
extern T1213 GE_default1213;
extern T1214 GE_default1214;
extern T1215 GE_default1215;
extern T1216 GE_default1216;
extern T1217 GE_default1217;
extern T1218 GE_default1218;
extern T1219 GE_default1219;
extern T1220 GE_default1220;
extern T1221 GE_default1221;
extern T1222 GE_default1222;
extern T1223 GE_default1223;
extern T1224 GE_default1224;
extern T1226 GE_default1226;
extern T1227 GE_default1227;
extern T1229 GE_default1229;
extern T1230 GE_default1230;
extern T1231 GE_default1231;
extern T1232 GE_default1232;
extern T1233 GE_default1233;
extern T1235 GE_default1235;
extern T1236 GE_default1236;
extern T1238 GE_default1238;
extern T1239 GE_default1239;
extern T1240 GE_default1240;
extern T1241 GE_default1241;
extern T1242 GE_default1242;
extern T1243 GE_default1243;
extern T1244 GE_default1244;
extern T1245 GE_default1245;
extern T1246 GE_default1246;
extern T1247 GE_default1247;
extern T1248 GE_default1248;
extern T1249 GE_default1249;
extern T1250 GE_default1250;
extern T1251 GE_default1251;
extern T1252 GE_default1252;
extern T1253 GE_default1253;
extern T1254 GE_default1254;
extern T1255 GE_default1255;
extern T1257 GE_default1257;
extern T1258 GE_default1258;
extern T1260 GE_default1260;
extern T1261 GE_default1261;
extern T1262 GE_default1262;
extern T1263 GE_default1263;
extern T1264 GE_default1264;
extern T1265 GE_default1265;
extern T1266 GE_default1266;
extern T1267 GE_default1267;
extern T1268 GE_default1268;
extern T1269 GE_default1269;
extern T1270 GE_default1270;
extern T1271 GE_default1271;
extern T1272 GE_default1272;
extern T1273 GE_default1273;
extern T1274 GE_default1274;
extern T1275 GE_default1275;
extern T1276 GE_default1276;
extern T1277 GE_default1277;
extern T1282 GE_default1282;
extern T1283 GE_default1283;
extern T1284 GE_default1284;
extern T1285 GE_default1285;
extern T1286 GE_default1286;
extern T1289 GE_default1289;
extern T1290 GE_default1290;
extern T1291 GE_default1291;
extern T1292 GE_default1292;
extern T1293 GE_default1293;
extern T1294 GE_default1294;
extern T1295 GE_default1295;
extern T1296 GE_default1296;
extern T1298 GE_default1298;
extern T1299 GE_default1299;
extern T1300 GE_default1300;
extern T1301 GE_default1301;
extern T1302 GE_default1302;
extern T1303 GE_default1303;
extern T1305 GE_default1305;
extern T1306 GE_default1306;
extern T1307 GE_default1307;
extern T1308 GE_default1308;
extern T1311 GE_default1311;
extern T1312 GE_default1312;
extern T1315 GE_default1315;
extern T1316 GE_default1316;
extern T1317 GE_default1317;
extern T1318 GE_default1318;
extern T1319 GE_default1319;
extern T1320 GE_default1320;
extern T1321 GE_default1321;
extern T1322 GE_default1322;
extern T1325 GE_default1325;
extern T1326 GE_default1326;
extern T1327 GE_default1327;
extern T1328 GE_default1328;
extern T1329 GE_default1329;
extern T1330 GE_default1330;
extern T1331 GE_default1331;
extern T1333 GE_default1333;
extern T1334 GE_default1334;
extern T1335 GE_default1335;
extern T1336 GE_default1336;
extern T1337 GE_default1337;
extern T1338 GE_default1338;
extern T1339 GE_default1339;
extern T1340 GE_default1340;
extern T1342 GE_default1342;
extern T1343 GE_default1343;
extern T1344 GE_default1344;
extern T1345 GE_default1345;
extern T1347 GE_default1347;
extern T1348 GE_default1348;
extern T1349 GE_default1349;
extern T1350 GE_default1350;
extern T1351 GE_default1351;
extern T1353 GE_default1353;
extern T1354 GE_default1354;
extern T1355 GE_default1355;
extern T1356 GE_default1356;
extern T1357 GE_default1357;
extern T1359 GE_default1359;
extern T1361 GE_default1361;
extern T1362 GE_default1362;
extern T1363 GE_default1363;
extern T1364 GE_default1364;
extern T1365 GE_default1365;
extern T1366 GE_default1366;
extern T1367 GE_default1367;
extern T1371 GE_default1371;
extern T1372 GE_default1372;
extern T1373 GE_default1373;
extern T1375 GE_default1375;
extern T1376 GE_default1376;
extern T1377 GE_default1377;
extern T1378 GE_default1378;
extern T1379 GE_default1379;
extern T1380 GE_default1380;
extern T1382 GE_default1382;
extern T1383 GE_default1383;
extern T1384 GE_default1384;
extern T1385 GE_default1385;
extern T1386 GE_default1386;
extern T1387 GE_default1387;
extern T1388 GE_default1388;
extern T1390 GE_default1390;
extern T1391 GE_default1391;
extern T1392 GE_default1392;
extern T1393 GE_default1393;
extern T1395 GE_default1395;
extern T1396 GE_default1396;
extern T1397 GE_default1397;
extern T1398 GE_default1398;
extern T1401 GE_default1401;
extern T1404 GE_default1404;
extern T1407 GE_default1407;
extern T1408 GE_default1408;
extern T1409 GE_default1409;
extern T1410 GE_default1410;
extern T1411 GE_default1411;
extern T1412 GE_default1412;
extern T1413 GE_default1413;
extern T1414 GE_default1414;
extern T1415 GE_default1415;
extern T1416 GE_default1416;
extern T1417 GE_default1417;
extern T1419 GE_default1419;
extern T1420 GE_default1420;
extern T1421 GE_default1421;
extern T1422 GE_default1422;
extern T1424 GE_default1424;
extern T1425 GE_default1425;
extern T1426 GE_default1426;
extern T1427 GE_default1427;
extern T1428 GE_default1428;
extern T1429 GE_default1429;
extern T1430 GE_default1430;
extern T1431 GE_default1431;
extern T1432 GE_default1432;
extern T1434 GE_default1434;
extern T1435 GE_default1435;
extern T1437 GE_default1437;
extern T1438 GE_default1438;
extern T1439 GE_default1439;
extern T1441 GE_default1441;
extern T1442 GE_default1442;
extern T1443 GE_default1443;
extern T1444 GE_default1444;
extern T1445 GE_default1445;
extern T1446 GE_default1446;
extern T1447 GE_default1447;
extern T1450 GE_default1450;
extern T1451 GE_default1451;
extern T1453 GE_default1453;
extern T1454 GE_default1454;
extern T1455 GE_default1455;
extern T1456 GE_default1456;
extern T1457 GE_default1457;
extern T1458 GE_default1458;
extern T1459 GE_default1459;
extern T1461 GE_default1461;
extern T1462 GE_default1462;
extern T1463 GE_default1463;
extern T1464 GE_default1464;
extern T1466 GE_default1466;
extern T1467 GE_default1467;
extern T1468 GE_default1468;
extern T1469 GE_default1469;
extern T1470 GE_default1470;
extern T1471 GE_default1471;
extern T1472 GE_default1472;
extern T1473 GE_default1473;
extern T1474 GE_default1474;
extern T1475 GE_default1475;
extern T1476 GE_default1476;
extern T1477 GE_default1477;
extern T1478 GE_default1478;
extern T1479 GE_default1479;
extern T1480 GE_default1480;
extern T1481 GE_default1481;
extern T1482 GE_default1482;
extern T1483 GE_default1483;
extern T1484 GE_default1484;
extern T1485 GE_default1485;
extern T1486 GE_default1486;
extern T1487 GE_default1487;
extern T1490 GE_default1490;
extern T1492 GE_default1492;
extern T1494 GE_default1494;
extern T1495 GE_default1495;
extern T1497 GE_default1497;
extern T1499 GE_default1499;
extern T1501 GE_default1501;
extern T1503 GE_default1503;
extern T1504 GE_default1504;
extern T1505 GE_default1505;
extern T1506 GE_default1506;
extern T1507 GE_default1507;
extern T1508 GE_default1508;
extern T1509 GE_default1509;
extern T1510 GE_default1510;
extern T1511 GE_default1511;
extern T1512 GE_default1512;
extern T1513 GE_default1513;
extern T1514 GE_default1514;
extern T1515 GE_default1515;
extern T1516 GE_default1516;
extern T1517 GE_default1517;
extern T1518 GE_default1518;
extern T1521 GE_default1521;
extern T1522 GE_default1522;
extern T1523 GE_default1523;
extern T1524 GE_default1524;
extern T1525 GE_default1525;
extern T1526 GE_default1526;
extern T1527 GE_default1527;
extern T1528 GE_default1528;
extern T1529 GE_default1529;
extern T1530 GE_default1530;
extern T1532 GE_default1532;
extern T1533 GE_default1533;
extern T1535 GE_default1535;
extern T1536 GE_default1536;
extern T1538 GE_default1538;
extern T1539 GE_default1539;
extern T1540 GE_default1540;
extern T1541 GE_default1541;
extern T1542 GE_default1542;
extern T1543 GE_default1543;
extern T1544 GE_default1544;
extern T1545 GE_default1545;
extern T1546 GE_default1546;
extern T1547 GE_default1547;
extern T1551 GE_default1551;
extern T1552 GE_default1552;
extern T1553 GE_default1553;
extern T1554 GE_default1554;
extern T1555 GE_default1555;
extern T1556 GE_default1556;
extern T1557 GE_default1557;
extern T1558 GE_default1558;
extern T1559 GE_default1559;
extern T1560 GE_default1560;
extern T1561 GE_default1561;
extern T1562 GE_default1562;
extern T1563 GE_default1563;
extern T1564 GE_default1564;
extern T1565 GE_default1565;
extern T1566 GE_default1566;
extern T1567 GE_default1567;
extern T1568 GE_default1568;
extern T1569 GE_default1569;
extern T1570 GE_default1570;
extern T1571 GE_default1571;
extern T1572 GE_default1572;
extern T1573 GE_default1573;
extern T1574 GE_default1574;
extern T1575 GE_default1575;
extern T1576 GE_default1576;
extern T1578 GE_default1578;
extern T1580 GE_default1580;
extern T1581 GE_default1581;
extern T1584 GE_default1584;
extern T1585 GE_default1585;
extern T1586 GE_default1586;
extern T1587 GE_default1587;
extern T1588 GE_default1588;
extern T1589 GE_default1589;
extern T1592 GE_default1592;
extern T1593 GE_default1593;
extern T1594 GE_default1594;
extern T1596 GE_default1596;
extern T1597 GE_default1597;
extern T1598 GE_default1598;
extern T1599 GE_default1599;
extern T1600 GE_default1600;
extern T1601 GE_default1601;
extern T1603 GE_default1603;
extern T1604 GE_default1604;
extern T1605 GE_default1605;
extern T1606 GE_default1606;
extern T1607 GE_default1607;
extern T1608 GE_default1608;
extern T1609 GE_default1609;
extern T1611 GE_default1611;
extern T1612 GE_default1612;
extern T1613 GE_default1613;
extern T1614 GE_default1614;
extern T1615 GE_default1615;
extern T1617 GE_default1617;
extern T1619 GE_default1619;
extern T1620 GE_default1620;
extern T1621 GE_default1621;
extern T1622 GE_default1622;
extern T1623 GE_default1623;
extern T1624 GE_default1624;
extern T1625 GE_default1625;
extern T1628 GE_default1628;
extern T1630 GE_default1630;
extern T1631 GE_default1631;
extern T1632 GE_default1632;
extern T1635 GE_default1635;
extern T1636 GE_default1636;
extern T1639 GE_default1639;
extern T1640 GE_default1640;
extern T1641 GE_default1641;
extern T1642 GE_default1642;
extern T1643 GE_default1643;
extern T1644 GE_default1644;
extern T1646 GE_default1646;
extern T1647 GE_default1647;
extern T1649 GE_default1649;
extern T1650 GE_default1650;
extern T1651 GE_default1651;
extern T1652 GE_default1652;
extern T1653 GE_default1653;
extern T1654 GE_default1654;
extern T1655 GE_default1655;
extern T1656 GE_default1656;
extern T1657 GE_default1657;
extern T1658 GE_default1658;
extern T1659 GE_default1659;
extern T1660 GE_default1660;
extern T1661 GE_default1661;
extern T1663 GE_default1663;
extern T1664 GE_default1664;
extern T1665 GE_default1665;
extern T1666 GE_default1666;
extern T1669 GE_default1669;
extern T1670 GE_default1670;
extern T1671 GE_default1671;
extern T1672 GE_default1672;
extern T1677 GE_default1677;
extern T1681 GE_default1681;
extern T1682 GE_default1682;
extern T1684 GE_default1684;
extern T1685 GE_default1685;
extern T1688 GE_default1688;
extern T1692 GE_default1692;
extern T1693 GE_default1693;
extern T1694 GE_default1694;
extern T1695 GE_default1695;
extern T1697 GE_default1697;
extern T1702 GE_default1702;
extern T1703 GE_default1703;
extern T1705 GE_default1705;
extern T1706 GE_default1706;
extern T1708 GE_default1708;
extern T1709 GE_default1709;
extern T1710 GE_default1710;
extern T1711 GE_default1711;
extern T1714 GE_default1714;
extern T1715 GE_default1715;
extern T1716 GE_default1716;
extern T1717 GE_default1717;
extern T1718 GE_default1718;
extern T1719 GE_default1719;
extern T1720 GE_default1720;
extern T1721 GE_default1721;
extern T1722 GE_default1722;
extern T1723 GE_default1723;
extern T1724 GE_default1724;
extern T1725 GE_default1725;
extern T1726 GE_default1726;
extern T1727 GE_default1727;
extern T1728 GE_default1728;
extern T1733 GE_default1733;
extern T1736 GE_default1736;
extern T1737 GE_default1737;
extern T1738 GE_default1738;
extern T1740 GE_default1740;
extern T1741 GE_default1741;
extern T1742 GE_default1742;
extern T1744 GE_default1744;
extern T1746 GE_default1746;
extern T1747 GE_default1747;
extern T1748 GE_default1748;
extern T1749 GE_default1749;
extern T1750 GE_default1750;
extern T1751 GE_default1751;
extern T1752 GE_default1752;
extern T1753 GE_default1753;
extern T1754 GE_default1754;
extern T1755 GE_default1755;
extern T1757 GE_default1757;
extern T1758 GE_default1758;
extern T1759 GE_default1759;
extern T1760 GE_default1760;
extern T1762 GE_default1762;
extern T1763 GE_default1763;
extern T1764 GE_default1764;
extern T1765 GE_default1765;
extern T1767 GE_default1767;
extern T1768 GE_default1768;
extern T1769 GE_default1769;
extern T1770 GE_default1770;
extern T1772 GE_default1772;
extern T1775 GE_default1775;
extern T1780 GE_default1780;
extern T1782 GE_default1782;
extern T1783 GE_default1783;
extern T1784 GE_default1784;
extern T1785 GE_default1785;
extern T1786 GE_default1786;
extern T1787 GE_default1787;
extern T1788 GE_default1788;
extern T1789 GE_default1789;
extern T1790 GE_default1790;
extern T1791 GE_default1791;
extern T1792 GE_default1792;
extern T1793 GE_default1793;
extern T1794 GE_default1794;
extern T1795 GE_default1795;
extern T1796 GE_default1796;
extern T1797 GE_default1797;
extern T1798 GE_default1798;
extern T1799 GE_default1799;
extern T1800 GE_default1800;
extern T1801 GE_default1801;
extern T1802 GE_default1802;
extern T1803 GE_default1803;
extern T1804 GE_default1804;
extern T1805 GE_default1805;
extern T1806 GE_default1806;
extern T1807 GE_default1807;
extern T1808 GE_default1808;
extern T1809 GE_default1809;
extern T1810 GE_default1810;
extern T1811 GE_default1811;
extern T1812 GE_default1812;
extern T1813 GE_default1813;
extern T1814 GE_default1814;
extern T1815 GE_default1815;
extern T1816 GE_default1816;
extern T1817 GE_default1817;
extern T1818 GE_default1818;
extern T1819 GE_default1819;
extern T1820 GE_default1820;
extern T1821 GE_default1821;
extern T1822 GE_default1822;
extern T1823 GE_default1823;
extern T1825 GE_default1825;
extern T1826 GE_default1826;
extern T1827 GE_default1827;
extern T1828 GE_default1828;
extern T1829 GE_default1829;
extern T1830 GE_default1830;
extern T1831 GE_default1831;
extern T1832 GE_default1832;
extern T1833 GE_default1833;
extern T1836 GE_default1836;
extern T1837 GE_default1837;
extern T1838 GE_default1838;
extern T1840 GE_default1840;
extern T1841 GE_default1841;
extern T1842 GE_default1842;
extern T1843 GE_default1843;
extern T1844 GE_default1844;
extern T1845 GE_default1845;
extern T1846 GE_default1846;
extern T1847 GE_default1847;
extern T1848 GE_default1848;
extern T1849 GE_default1849;
extern T1852 GE_default1852;
extern T1853 GE_default1853;
extern T1854 GE_default1854;
extern T1855 GE_default1855;
extern T1856 GE_default1856;
extern T1857 GE_default1857;
extern T1858 GE_default1858;
extern T1859 GE_default1859;
extern T1861 GE_default1861;
extern T1862 GE_default1862;
extern T1863 GE_default1863;
extern T1864 GE_default1864;
extern T1865 GE_default1865;
extern T1866 GE_default1866;
extern T1867 GE_default1867;
extern T1868 GE_default1868;
extern T1869 GE_default1869;
extern T1870 GE_default1870;
extern T1877 GE_default1877;
extern T1878 GE_default1878;
extern T1879 GE_default1879;
extern T1880 GE_default1880;
extern T1881 GE_default1881;
extern T1884 GE_default1884;
extern T1886 GE_default1886;
extern T1888 GE_default1888;
extern T1889 GE_default1889;
extern T1890 GE_default1890;
extern T1892 GE_default1892;
extern T1893 GE_default1893;
extern T1895 GE_default1895;
extern T1903 GE_default1903;
extern T1904 GE_default1904;
extern T1905 GE_default1905;
extern T1909 GE_default1909;
extern T1910 GE_default1910;
extern T1913 GE_default1913;
extern T1914 GE_default1914;
extern T1915 GE_default1915;
extern T1918 GE_default1918;
extern T1919 GE_default1919;
extern T1922 GE_default1922;
extern T1923 GE_default1923;
extern T1924 GE_default1924;
extern T1925 GE_default1925;
extern T1926 GE_default1926;
extern T1946 GE_default1946;
extern T1952 GE_default1952;
extern T1953 GE_default1953;
extern T1960 GE_default1960;
extern T1965 GE_default1965;
extern T1966 GE_default1966;
extern T1967 GE_default1967;
extern T1968 GE_default1968;
extern T1969 GE_default1969;
extern T1971 GE_default1971;
extern T1972 GE_default1972;
extern T1973 GE_default1973;
extern T1976 GE_default1976;
extern T1977 GE_default1977;
extern T1979 GE_default1979;
extern T1981 GE_default1981;
extern T1982 GE_default1982;
extern T1983 GE_default1983;
extern T1984 GE_default1984;
extern T1985 GE_default1985;
extern T1986 GE_default1986;
extern T1988 GE_default1988;
extern T1989 GE_default1989;
extern T1991 GE_default1991;
extern T1993 GE_default1993;
extern T1996 GE_default1996;
extern T1998 GE_default1998;
extern T1999 GE_default1999;
extern T2000 GE_default2000;
extern T2002 GE_default2002;
extern T2003 GE_default2003;
extern T2004 GE_default2004;
extern T2007 GE_default2007;
extern T2008 GE_default2008;
extern T2013 GE_default2013;
extern T2014 GE_default2014;
extern T2015 GE_default2015;
extern T2016 GE_default2016;
extern T2018 GE_default2018;
extern T2019 GE_default2019;
extern T2020 GE_default2020;
extern T2021 GE_default2021;
extern T2023 GE_default2023;
extern T2024 GE_default2024;
extern T2026 GE_default2026;
extern T2027 GE_default2027;
extern T2030 GE_default2030;
extern T2031 GE_default2031;
extern T2032 GE_default2032;
extern T2033 GE_default2033;
extern T2034 GE_default2034;
extern T2035 GE_default2035;
extern T2036 GE_default2036;
extern T2037 GE_default2037;
extern T2038 GE_default2038;
extern T2039 GE_default2039;
extern T2040 GE_default2040;
extern T2041 GE_default2041;
extern T2042 GE_default2042;
extern T2043 GE_default2043;
extern T2044 GE_default2044;
extern T2045 GE_default2045;
extern T2046 GE_default2046;
extern T2047 GE_default2047;
extern T2048 GE_default2048;
extern T2049 GE_default2049;
extern T2050 GE_default2050;
extern T2051 GE_default2051;
extern T2052 GE_default2052;
extern T2053 GE_default2053;
extern T2054 GE_default2054;
extern T2055 GE_default2055;
extern T2056 GE_default2056;
extern T2057 GE_default2057;
extern T2058 GE_default2058;
extern T2059 GE_default2059;
extern T2060 GE_default2060;
extern T2061 GE_default2061;
extern T2062 GE_default2062;
extern T2063 GE_default2063;
extern T2064 GE_default2064;
extern T2065 GE_default2065;
extern T2066 GE_default2066;
extern T2067 GE_default2067;
extern T2068 GE_default2068;
extern T2069 GE_default2069;
extern T2070 GE_default2070;
extern T2071 GE_default2071;
extern T2072 GE_default2072;
extern T2073 GE_default2073;
extern T2074 GE_default2074;
extern T2077 GE_default2077;
extern T2079 GE_default2079;
extern T2081 GE_default2081;
extern T2082 GE_default2082;
extern T2083 GE_default2083;
extern T2084 GE_default2084;
extern T2086 GE_default2086;
extern T2087 GE_default2087;
extern T2089 GE_default2089;
extern T2091 GE_default2091;
extern T2093 GE_default2093;
extern T2094 GE_default2094;
extern T2096 GE_default2096;
extern T2097 GE_default2097;
extern T2098 GE_default2098;
extern T2099 GE_default2099;
extern T2100 GE_default2100;
extern T2101 GE_default2101;
extern T2102 GE_default2102;
extern T2103 GE_default2103;
extern T2105 GE_default2105;
extern T2108 GE_default2108;
extern T2109 GE_default2109;
extern T2112 GE_default2112;
extern T2115 GE_default2115;

extern T0* GE_new_str8(T6 c);
extern T0* GE_new_str32(T6 c);
extern T0* GE_new_istr32(T6 c);
/* Call to [detachable] ANY.same_type */
extern T1 T22x49156T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] KI_CHARACTER_INPUT_STREAM.read_to_string */
extern T6 T36x5750785T0T6T6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* Call to [detachable] KI_CHARACTER_INPUT_STREAM.end_of_input */
extern T1 T36x5865477(GE_context* ac, T0* C);
/* Call to [detachable] KI_CHARACTER_INPUT_STREAM.last_character */
extern T2 T36x5865480(GE_context* ac, T0* C);
/* Call to [detachable] KI_CHARACTER_INPUT_STREAM.name */
extern T0* T36x5865479(GE_context* ac, T0* C);
/* Call to [detachable] KI_CHARACTER_INPUT_STREAM.is_closable */
extern T1 T36x5865474(GE_context* ac, T0* C);
/* Call to [detachable] AP_OPTION.short_form */
extern T2 T48x5275656(GE_context* ac, T0* C);
/* Call to [detachable] AP_OPTION.long_form */
extern T0* T48x5275651(GE_context* ac, T0* C);
/* Call to [detachable] AP_OPTION.description */
extern T0* T48x5275649(GE_context* ac, T0* C);
/* Call to [detachable] AP_OPTION.names */
extern T0* T48x5275653(GE_context* ac, T0* C);
/* Call to [detachable] AP_OPTION.is_hidden */
extern T1 T48x5275659(GE_context* ac, T0* C);
/* Call to [detachable] AP_OPTION.name */
extern T0* T48x5275652(GE_context* ac, T0* C);
/* Call to [detachable] AP_OPTION.needs_parameter */
extern T1 T48x5275662(GE_context* ac, T0* C);
/* Call to [detachable] AP_OPTION.has_short_form */
extern T1 T48x5275658(GE_context* ac, T0* C);
/* Call to [detachable] AP_OPTION.allows_parameter */
extern T1 T48x5275661(GE_context* ac, T0* C);
/* Call to [detachable] AP_OPTION.maximum_occurrences */
extern T6 T48x5275655(GE_context* ac, T0* C);
/* Call to [detachable] AP_OPTION.occurrences */
extern T6 T48x5275654(GE_context* ac, T0* C);
/* Call to [detachable] AP_OPTION.was_found */
extern T1 T48x5275665(GE_context* ac, T0* C);
/* Call to [detachable] AP_OPTION.is_mandatory */
extern T1 T48x5275660(GE_context* ac, T0* C);
/* Call to [detachable] AP_OPTION.example */
extern T0* T48x5275650(GE_context* ac, T0* C);
/* Call to [detachable] ET_BASE_TYPE.conforms_to_type_with_type_marks */
extern T1 T63x14811142T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to [detachable] ET_BASE_TYPE.base_class */
extern T0* T63x21741571(GE_context* ac, T0* C);
/* Call to [detachable] ET_BASE_TYPE.index_of_label */
extern T6 T63x21168137T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_BASE_TYPE.base_type_index_of_label */
extern T6 T63x21708813T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_BASE_TYPE.same_base_type_with_type_marks */
extern T1 T63x21708849T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_BASE_TYPE.to_text */
extern T0* T63x21708874(GE_context* ac, T0* C);
/* Call to [detachable] ET_BASE_TYPE.type_with_type_mark */
extern T0* T63x21708821T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_BASE_TYPE.actual_parameters */
extern T0* T63x21168132(GE_context* ac, T0* C);
/* Call to [detachable] ET_BASE_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T63x21708806T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to [detachable] ET_BASE_TYPE.adapted_base_class_with_named_feature */
extern T0* T63x21708805T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_BASE_TYPE.is_type_attached_with_type_mark */
extern T1 T63x21708832T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_BASE_TYPE.named_base_class */
extern T0* T63x21741572(GE_context* ac, T0* C);
/* Call to [detachable] ET_BASE_TYPE.base_type_actual */
extern T0* T63x21708811T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to [detachable] ET_BASE_TYPE.actual_parameter_count */
extern T6 T63x21168140(GE_context* ac, T0* C);
/* Call to [detachable] ET_BASE_TYPE.shallow_named_type_with_type_mark */
extern T0* T63x21708817T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_BASE_TYPE.is_type_reference_with_type_mark */
extern T1 T63x21708830T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_BASE_TYPE.context_adapted_base_class_with_seeded_feature */
extern T0* T63x21741574T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] ET_BASE_TYPE.context_adapted_base_class_with_named_feature */
extern T0* T63x21741573T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_BASE_TYPE.is_expanded */
extern T1 T63x21168144(GE_context* ac, T0* C);
/* Call to [detachable] ET_BASE_TYPE.is_attached */
extern T1 T63x21168145(GE_context* ac, T0* C);
/* Call to [detachable] ET_BASE_TYPE.is_type_detachable_with_type_mark */
extern T1 T63x21708834T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_BASE_TYPE.is_type_expanded_with_type_mark */
extern T1 T63x21708828T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_BASE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T63x21708866T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to [detachable] ET_BASE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T63x21708865T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to [detachable] ET_BASE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T63x21708864T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to [detachable] ET_BASE_TYPE.base_type_with_type_mark */
extern T0* T63x21708808T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_BASE_TYPE.shallow_base_type_with_type_mark */
extern T0* T63x21708810T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_BASE_TYPE.same_named_type */
extern T1 T63x21708846T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to [detachable] ET_BASE_TYPE.unaliased_to_text */
extern T0* T63x21708875(GE_context* ac, T0* C);
/* Call to [detachable] ET_BASE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T63x21708857T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_BASE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T63x21708858T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_BASE_TYPE.same_named_class_type_with_type_marks */
extern T1 T63x21708856T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_BASE_TYPE.base_type_actual_count */
extern T6 T63x21708823T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_BASE_TYPE.named_type_with_type_mark */
extern T0* T63x21708815T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_BASE_TYPE.same_named_type_with_type_marks */
extern T1 T63x21708847T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_BASE_TYPE.upper_name */
extern T0* T63x21594114(GE_context* ac, T0* C);
/* Call to [detachable] ET_BASE_TYPE.name */
extern T0* T63x21594113(GE_context* ac, T0* C);
/* Call to [detachable] ET_BASE_TYPE.same_as_base_class */
extern T1 T63x21168151(GE_context* ac, T0* C);
/* Call to [detachable] ET_BASE_TYPE.runtime_name_to_text */
extern T0* T63x21708876(GE_context* ac, T0* C);
/* Call to [detachable] READABLE_STRING_GENERAL.code */
extern T10 T77x2048001T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] READABLE_STRING_GENERAL.count */
extern T6 T77x2048039(GE_context* ac, T0* C);
/* Call to [detachable] READABLE_STRING_GENERAL.substring */
extern T0* T77x2048080T6T6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* Call to [detachable] READABLE_STRING_GENERAL.item */
extern T3 T77x2048002T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] UT_ERROR.default_message */
extern T0* T79x11485187(GE_context* ac, T0* C);
/* Call to detachable KL_EQUALITY_TESTER [[attached] STRING_8].test */
extern T1 T149x7274497T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_ECF_SYSTEM_CONFIG.ecf_version */
extern T0* T180x13598726(GE_context* ac, T0* C);
/* Call to [detachable] ET_ECF_SYSTEM_CONFIG.filename */
extern T0* T180x13598723(GE_context* ac, T0* C);
/* Call to [detachable] ET_ECF_SYSTEM_CONFIG.universe */
extern T0* T180x13598732(GE_context* ac, T0* C);
/* Call to [detachable] ET_ECF_SYSTEM_CONFIG.targets */
extern T0* T180x13598727(GE_context* ac, T0* C);
/* Call to [detachable] ET_ECF_SYSTEM_CONFIG.library_target */
extern T0* T180x13598728(GE_context* ac, T0* C);
/* Call to [detachable] ET_POSITION.column */
extern T6 T192x19890178(GE_context* ac, T0* C);
/* Call to [detachable] ET_POSITION.line */
extern T6 T192x19890177(GE_context* ac, T0* C);
/* Call to [detachable] ET_POSITION.to_text */
extern T0* T192x19890183(GE_context* ac, T0* C);
/* Call to [detachable] ET_POSITION.is_null */
extern T1 T192x19890179(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.conforms_to_primary_type */
extern T1 T218x23085071T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.base_class */
extern T0* T218x23494663(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.base_type */
extern T0* T218x23494662(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.seeded_dynamic_query */
extern T0* T218x23085081T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.is_basic */
extern T1 T218x23494660(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.is_expanded */
extern T1 T218x23527425(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.dynamic_procedure */
extern T0* T218x23085080T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.is_agent_type */
extern T1 T218x23085058(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.dynamic_query */
extern T0* T218x23085079T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.seeded_dynamic_procedure */
extern T0* T218x23085082T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.id */
extern T6 T218x23085069(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.queries */
extern T0* T218x23085077(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.attribute_count */
extern T6 T218x23085073(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.is_special */
extern T1 T218x23085059(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.is_builtin_attribute */
extern T1 T218x23085083T0T8T8(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.primary_type */
extern T0* T218x23494664(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.hash_code */
extern T6 T218x475137(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.is_generic */
extern T1 T218x23494659(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.has_nested_reference_attributes */
extern T1 T218x23085075(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.is_alive */
extern T1 T218x23085057(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.attached_type */
extern T0* T218x23085067(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.next_type */
extern T0* T218x23085090(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.conforming_ancestors */
extern T0* T218x23085072(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.type_mark */
extern T0* T218x23494666(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.procedure_calls */
extern T0* T218x23085087(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.query_calls */
extern T0* T218x23085086(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.procedures */
extern T0* T218x23085078(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.meta_type */
extern T0* T218x23494665(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.is_tuple */
extern T1 T218x23085060(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.has_static */
extern T1 T218x23085061(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE_NAME.last_leaf */
extern T0* T228x19677189(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE_NAME.name */
extern T0* T228x20250625(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE_NAME.lower_name */
extern T0* T228x20250626(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE_NAME.position */
extern T0* T228x19677185(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE_NAME.seed */
extern T6 T228x20250627(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE_NAME.same_feature_name */
extern T1 T228x20381699T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_FEATURE_NAME.is_tuple_label */
extern T1 T228x20250633(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE_NAME.across_cursor_name */
extern T0* T228x20250669(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE_NAME.is_across_cursor */
extern T1 T228x20250631(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE_NAME.object_test_local_name */
extern T0* T228x20250668(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE_NAME.is_object_test_local */
extern T1 T228x20250630(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE_NAME.local_name */
extern T0* T228x20250666(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE_NAME.is_local */
extern T1 T228x20250629(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE_NAME.argument_name */
extern T0* T228x20250667(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE_NAME.is_argument */
extern T1 T228x20250632(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE_NAME.hash_code */
extern T6 T228x475137(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE_NAME.first_leaf */
extern T0* T228x19677188(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE_NAME.is_prefix */
extern T1 T228x20250655(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE_NAME.is_infix */
extern T1 T228x20250635(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.hash_code */
extern T6 T229x475137(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.first_seed */
extern T6 T229x17629195(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.is_static */
extern T1 T229x17547302(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.is_exported_to */
extern T1 T229x17547319T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to detachable ET_PROCEDURE.arguments_count */
extern T6 T229x17547318(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.arguments */
extern T0* T229x17629194(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.overloaded_alias_name */
extern T0* T229x17547271(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.alias_name */
extern T0* T229x17547267(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.overloaded_name */
extern T0* T229x17547270(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.name */
extern T0* T229x17629192(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.lower_name */
extern T0* T229x18251779(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.is_creation_exported_to */
extern T1 T229x17547321T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to detachable ET_PROCEDURE.new_synonym */
extern T0* T229x17547325T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_PROCEDURE.has_seed */
extern T1 T229x17629190T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_PROCEDURE.implementation_class */
extern T0* T229x18251781(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.is_parenthesisable */
extern T1 T229x17547309(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.is_frozen */
extern T1 T229x17547291(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.is_deferred */
extern T1 T229x17547292(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.postconditions */
extern T0* T229x17137674(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.preconditions */
extern T0* T229x17137673(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.lower_name */
extern T0* T230x18251779(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.type */
extern T0* T230x17629193(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.first_seed */
extern T6 T230x17629195(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.is_attribute */
extern T1 T230x17547295(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.assigner */
extern T0* T230x18055171(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.overloaded_alias_name */
extern T0* T230x17547271(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.alias_name */
extern T0* T230x17547267(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.overloaded_name */
extern T0* T230x17547270(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.name */
extern T0* T230x17629192(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.hash_code */
extern T6 T230x475137(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.arguments */
extern T0* T230x17629194(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.is_exported_to */
extern T1 T230x17547319T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to detachable ET_QUERY.is_static */
extern T1 T230x17547302(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.arguments_count */
extern T6 T230x17547318(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.has_seed */
extern T1 T230x17629190T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_QUERY.implementation_class */
extern T0* T230x18251781(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.implementation_feature */
extern T0* T230x17137677(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.is_unique_attribute */
extern T1 T230x17547297(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.is_constant_attribute */
extern T1 T230x17547296(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.new_synonym */
extern T0* T230x17547325T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_QUERY.is_prefixable */
extern T1 T230x17547307(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.is_infixable */
extern T1 T230x17547306(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.is_once_per_object */
extern T1 T230x17137668(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.is_once */
extern T1 T230x17137665(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.is_parenthesisable */
extern T1 T230x17547309(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.is_bracketable */
extern T1 T230x17547308(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.is_frozen */
extern T1 T230x17547291(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.is_deferred */
extern T1 T230x17547292(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.postconditions */
extern T0* T230x17137674(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.preconditions */
extern T0* T230x17137673(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE.position */
extern T0* T233x19677185(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE.is_type_detachable */
extern T1 T233x21708833T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE.shallow_named_type */
extern T0* T233x21708816T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE.is_type_attached */
extern T1 T233x21708831T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE.base_type_index_of_label */
extern T6 T233x21708813T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T233x21708806T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to [detachable] ET_TYPE.adapted_base_class_with_named_feature */
extern T0* T233x21708805T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_TYPE.same_base_type_with_type_marks */
extern T1 T233x21708849T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_TYPE.same_named_type_with_type_marks */
extern T1 T233x21708847T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_TYPE.to_text */
extern T0* T233x21708874(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE.is_base_type */
extern T1 T233x21708826(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T233x21708852T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T233x21708855T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T233x21708850T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_TYPE.is_like_current */
extern T1 T233x21708824(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE.named_type */
extern T0* T233x21708814T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE.conforms_to_type */
extern T1 T233x14811141T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to [detachable] ET_TYPE.same_named_type */
extern T1 T233x21708846T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to [detachable] ET_TYPE.is_named_type */
extern T1 T233x14811139(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE.is_type_expanded */
extern T1 T233x21708827T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE.same_syntactical_type */
extern T1 T233x21708844T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to [detachable] ET_TYPE.resolved_formal_parameters */
extern T0* T233x21708867T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE.has_identifier_anchored_type */
extern T1 T233x21708837(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE.depends_on_qualified_anchored_type */
extern T1 T233x21708838T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE.has_formal_types */
extern T1 T233x21708839T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE.has_unqualified_anchored_type */
extern T1 T233x21708836(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE.type_with_type_mark */
extern T0* T233x21708821T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE.shallow_base_type_with_type_mark */
extern T0* T233x21708810T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T233x21708851T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T233x21708854T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T233x21708853T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_TYPE.same_syntactical_type_with_type_marks */
extern T1 T233x21708845T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_TYPE.shallow_named_type_with_type_mark */
extern T0* T233x21708817T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_TYPE.is_type_reference_with_type_mark */
extern T1 T233x21708830T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_TYPE.is_type_attached_with_type_mark */
extern T1 T233x21708832T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_TYPE.is_type_detachable_with_type_mark */
extern T1 T233x21708834T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_TYPE.is_type_expanded_with_type_mark */
extern T1 T233x21708828T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T233x21708866T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to [detachable] ET_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T233x21708865T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to [detachable] ET_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T233x21708864T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to [detachable] ET_TYPE.base_type_with_type_mark */
extern T0* T233x21708808T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_TYPE.named_base_class */
extern T0* T233x21708804T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T233x21708857T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_TYPE.conforms_to_type_with_type_marks */
extern T1 T233x14811142T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to [detachable] ET_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T233x21708858T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_TYPE.same_named_class_type_with_type_marks */
extern T1 T233x21708856T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_TYPE.base_type_actual */
extern T0* T233x21708811T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to [detachable] ET_TYPE.base_type_actual_count */
extern T6 T233x21708823T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE.named_type_with_type_mark */
extern T0* T233x21708815T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_TYPE.base_class */
extern T0* T233x21708803T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE.conforms_to_constraint */
extern T1 T233x21708862T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to [detachable] ET_TYPE.is_type_reference */
extern T1 T233x21708829T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE.shallow_base_type */
extern T0* T233x21708809T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE.type */
extern T0* T233x21757953(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE_CONTEXT.to_nested_type_context */
extern T0* T234x21741619(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE_CONTEXT.as_nested_type_context */
extern T0* T234x21741618(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE_CONTEXT.root_context */
extern T0* T234x21741569(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE_CONTEXT.is_root_context */
extern T1 T234x21741584(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE_CONTEXT.base_type_actual */
extern T0* T234x21741577T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] ET_TYPE_CONTEXT.base_type_actual_count */
extern T6 T234x21741582(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE_CONTEXT.base_class */
extern T0* T234x21741571(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE_CONTEXT.scoop_mode */
extern T1 T234x21741598(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T234x21741597(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE_CONTEXT.named_type */
extern T0* T234x21741580(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE_CONTEXT.same_base_type_with_type_marks */
extern T1 T234x21741604T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to [detachable] ET_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T234x21741591T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T234x21741589T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE_CONTEXT.adapted_base_class_with_seeded_feature */
extern T0* T234x21741574T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] ET_TYPE_CONTEXT.adapted_base_class_with_named_feature */
extern T0* T234x21741573T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T234x21741616T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T234x21741606T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to [detachable] ET_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T234x21741581T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T234x21741600T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to [detachable] ET_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T234x21741612T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T234x21741607T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to [detachable] ET_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T234x21741605T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to [detachable] ET_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T234x21741617T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T234x21741615T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to [detachable] ET_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T234x21741593T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T234x21741587T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE_CONTEXT.named_base_class */
extern T0* T234x21741572(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T234x21741576T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_UNIVERSE.adapted_universe */
extern T0* T237x18776082T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_UNIVERSE.boolean_type */
extern T0* T237x18776105(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.character_32_type */
extern T0* T237x18776108(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.character_8_type */
extern T0* T237x18776107(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.natural_64_type */
extern T0* T237x18776126(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.natural_32_type */
extern T0* T237x18776125(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.natural_16_type */
extern T0* T237x18776124(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.natural_8_type */
extern T0* T237x18776123(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.integer_64_type */
extern T0* T237x18776119(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.integer_32_type */
extern T0* T237x18776118(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.integer_16_type */
extern T0* T237x18776117(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.integer_8_type */
extern T0* T237x18776116(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.real_64_convert_feature */
extern T0* T237x18776170(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.real_64_type */
extern T0* T237x18776134(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.real_32_convert_feature */
extern T0* T237x18776169(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.real_32_type */
extern T0* T237x18776133(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.natural_64_convert_feature */
extern T0* T237x18776168(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.natural_32_convert_feature */
extern T0* T237x18776167(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.natural_16_convert_feature */
extern T0* T237x18776166(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.natural_8_convert_feature */
extern T0* T237x18776165(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.integer_64_convert_feature */
extern T0* T237x18776164(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.integer_32_convert_feature */
extern T0* T237x18776163(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.integer_16_convert_feature */
extern T0* T237x18776162(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.integer_8_convert_feature */
extern T0* T237x18776161(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.shortest_path */
extern T0* T237x18776083T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_UNIVERSE.full_lower_name */
extern T0* T237x18776087T2(GE_context* ac, T0* C, T2 a1);
/* Call to [detachable] ET_UNIVERSE.kind_name */
extern T0* T237x18776089(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.any_clients */
extern T0* T237x18776100(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.character_32_convert_feature */
extern T0* T237x18776160(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.character_8_convert_feature */
extern T0* T237x18776159(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.string_32_convert_feature */
extern T0* T237x18776172(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.string_32_type */
extern T0* T237x18776142(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.string_8_convert_feature */
extern T0* T237x18776171(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.string_8_type */
extern T0* T237x18776141(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.master_class */
extern T0* T237x18776071T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_UNIVERSE.has_master_class */
extern T1 T237x18776065T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_UNIVERSE.full_name */
extern T0* T237x18776086T2(GE_context* ac, T0* C, T2 a1);
/* Call to [detachable] ET_UNIVERSE.classes_in_group */
extern T0* T237x18776076T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_UNIVERSE.tuple_type */
extern T0* T237x18776146(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.function_identity_any_type */
extern T0* T237x18776113(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.predicate_identity_type */
extern T0* T237x18776130(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.tuple_identity_type */
extern T0* T237x18776148(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.procedure_identity_type */
extern T0* T237x18776131(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.integer_type */
extern T0* T237x18776115(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.iterable_detachable_separate_any_type */
extern T0* T237x18776121(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.pointer_type */
extern T0* T237x18776129(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.typed_pointer_identity_type */
extern T0* T237x18776155(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.type_identity_type */
extern T0* T237x18776154(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.detachable_any_type */
extern T0* T237x18776096(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.implicit_attachment_type_mark */
extern T0* T237x18776157(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.unfolded_empty_tuple_actual_parameters */
extern T0* T237x18776149(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.obsolete_routine_type_mode */
extern T1 T237x18776158(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.immutable_string_32_type */
extern T0* T237x18776114(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.system_string_type */
extern T0* T237x18776145(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.string_type */
extern T0* T237x18776139(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.hash_code */
extern T6 T237x475137(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.detachable_separate_any_type */
extern T0* T237x18776097(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.double_type */
extern T0* T237x18776109(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.real_type */
extern T0* T237x18776132(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.detachable_string_type */
extern T0* T237x18776140(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.any_type */
extern T0* T237x18776095(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.special_any_type */
extern T0* T237x18776136(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.type_detachable_any_type */
extern T0* T237x18776150(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.special_detachable_any_type */
extern T0* T237x18776137(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.exception_manager_type */
extern T0* T237x18776112(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.type_detachable_exception_type */
extern T0* T237x18776152(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.exception_type */
extern T0* T237x18776110(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.detachable_type_exception_type */
extern T0* T237x18776151(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.detachable_exception_type */
extern T0* T237x18776111(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.type_detachable_like_current_type */
extern T0* T237x18776153(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.system_object_parents */
extern T0* T237x18776144(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.any_parents */
extern T0* T237x18776099(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.system_object_type */
extern T0* T237x18776143(GE_context* ac, T0* C);
/* Call to [detachable] ET_UNIVERSE.current_system */
extern T0* T237x18776081(GE_context* ac, T0* C);
/* Call to [detachable] ET_ACTUAL_PARAMETER_ITEM.resolved_formal_parameters_with_type */
extern T0* T238x21118981T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_ACTUAL_PARAMETER_ITEM.type */
extern T0* T238x21118978(GE_context* ac, T0* C);
/* Call to [detachable] ET_ACTUAL_PARAMETER_ITEM.actual_parameter */
extern T0* T238x21118977(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_MARK.is_detachable_mark */
extern T1 T240x20086788(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_MARK.is_attached_mark */
extern T1 T240x20086787(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_MARK.position */
extern T0* T240x19677185(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_MARK.is_expandedness_mark */
extern T1 T240x20086797(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_MARK.is_attachment_mark */
extern T1 T240x20086785(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_MARK.is_implicit_mark */
extern T1 T240x20086803(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_MARK.is_separateness_mark */
extern T1 T240x20086793(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_MARK.is_expanded_mark */
extern T1 T240x20086799(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_MARK.overridden_type_mark */
extern T0* T240x20086804T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_TYPE_MARK.is_explicit_attachment_mark */
extern T1 T240x20086786(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_MARK.is_separate_mark */
extern T1 T240x20086795(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_MARK.is_reference_mark */
extern T1 T240x20086800(GE_context* ac, T0* C);
/* Call to detachable ET_ACTUAL_PARAMETERS.last_leaf */
extern T0* T241x19677189(GE_context* ac, T0* C);
/* Call to detachable ET_ACTUAL_PARAMETERS.type */
extern T0* T241x21086211T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_ACTUAL_PARAMETERS.count */
extern T6 T241x21086209(GE_context* ac, T0* C);
/* Call to detachable ET_ACTUAL_PARAMETERS.is_empty */
extern T1 T241x21086215(GE_context* ac, T0* C);
/* Call to detachable ET_ACTUAL_PARAMETERS.same_named_types */
extern T1 T241x21086223T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to detachable ET_ACTUAL_PARAMETERS.index_of_label */
extern T6 T241x21086213T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T241x21086210T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T241x21086222T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to detachable ET_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T241x21086227T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T241x21086218(GE_context* ac, T0* C);
/* Call to detachable ET_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T241x21086219T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T241x21086220T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_ACTUAL_PARAMETERS.has_unqualified_anchored_type */
extern T1 T241x21086217(GE_context* ac, T0* C);
/* Call to detachable ET_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T241x21086224T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to detachable ET_ACTUAL_PARAMETERS.named_types */
extern T0* T241x21086212T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_DYNAMIC_TYPE_SET.static_type */
extern T0* T243x23527429(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE_SET.is_never_void */
extern T1 T243x23527426(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE_SET.can_be_void */
extern T1 T243x23527427(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE_SET.dynamic_type */
extern T0* T243x23101441T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_DYNAMIC_TYPE_SET.count */
extern T6 T243x23101444(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE_SET.has_expanded */
extern T1 T243x23101448(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE_SET.is_expanded */
extern T1 T243x23527425(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE_SET.is_empty */
extern T1 T243x23101445(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE_SET.special_type */
extern T0* T243x23101442(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE_SET.dynamic_types */
extern T0* T243x23527431(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE_SET.has_type */
extern T1 T243x23101446T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_DYNAMIC_TYPE.primary_type */
extern T0* T244x23494664(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_TYPE.type_mark */
extern T0* T244x23494666(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_TYPE.is_basic */
extern T1 T244x23494660(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_TYPE.is_expanded */
extern T1 T244x23527425(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_TYPE.hash_code */
extern T6 T244x475137(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T244x23494672T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_DYNAMIC_TYPE.base_class */
extern T0* T244x23494663(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_TYPE.base_type */
extern T0* T244x23494662(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_TYPE.meta_type */
extern T0* T244x23494665(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_TYPE.is_generic */
extern T1 T244x23494659(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_TYPE.type_id */
extern T6 T244x23494667(GE_context* ac, T0* C);
/* Call to [detachable] ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T245x21446659(GE_context* ac, T0* C);
/* Call to [detachable] ET_FORMAL_PARAMETER_TYPE.implementation_class */
extern T0* T245x21446660(GE_context* ac, T0* C);
/* Call to [detachable] ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T245x21708834T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T245x21708832T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_FORMAL_PARAMETER_TYPE.type_with_type_mark */
extern T0* T245x21708821T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T245x21708802T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_FORMAL_PARAMETER_TYPE.name */
extern T0* T245x21594113(GE_context* ac, T0* C);
/* Call to [detachable] ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T245x21757953(GE_context* ac, T0* C);
/* Call to [detachable] ET_EXPRESSION.last_leaf */
extern T0* T271x19677189(GE_context* ac, T0* C);
/* Call to [detachable] ET_EXPRESSION.position */
extern T0* T271x19677185(GE_context* ac, T0* C);
/* Call to [detachable] ET_EXPRESSION.is_instance_free */
extern T1 T271x16121860(GE_context* ac, T0* C);
/* Call to [detachable] ET_EXPRESSION.is_false */
extern T1 T271x16400391(GE_context* ac, T0* C);
/* Call to [detachable] ET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T271x16400395T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to [detachable] ET_EXPRESSION.index */
extern T6 T271x16777219(GE_context* ac, T0* C);
/* Call to [detachable] ET_EXPRESSION.is_instance_free */
extern T1 T271x16777218(GE_context* ac, T0* C);
/* Call to [detachable] ET_EXPRESSION.count */
extern T6 T271x16121862(GE_context* ac, T0* C);
/* Call to [detachable] ET_EXPRESSION.unparenthesized_expression */
extern T0* T271x16400388(GE_context* ac, T0* C);
/* Call to [detachable] ET_EXPRESSION.is_never_void */
extern T1 T271x16400389(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.lower_name */
extern T0* T275x18251779(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.name */
extern T0* T275x17629192(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.implementation_feature */
extern T0* T275x17137677(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.implementation_class */
extern T0* T275x18251781(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.arguments */
extern T0* T275x17629194(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.has_seed */
extern T1 T275x17629190T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] ET_FEATURE.first_seed */
extern T6 T275x17629195(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.is_deferred */
extern T1 T275x17547292(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.is_static */
extern T1 T275x17547302(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.clients */
extern T0* T275x18251783(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.is_exported_to */
extern T1 T275x17547319T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_FEATURE.extended_name */
extern T0* T275x17547268(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.arguments_count */
extern T6 T275x17547318(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.version */
extern T6 T275x17547276(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.are_postconditions_instance_free_recursive */
extern T1 T275x17547311(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.are_preconditions_instance_free_recursive */
extern T1 T275x17547310(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.alias_name */
extern T0* T275x17547267(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.is_constant_attribute */
extern T1 T275x17547296(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.is_procedure */
extern T1 T275x17547299(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.other_seeds */
extern T0* T275x17629196(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.type */
extern T0* T275x17629193(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.has_class_postcondition_recursive */
extern T1 T275x17547312(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.is_unique_attribute */
extern T1 T275x17547297(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.is_attribute */
extern T1 T275x17547295(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.is_once_per_process */
extern T1 T275x17137666(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.is_frozen */
extern T1 T275x17547291(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.is_infixable */
extern T1 T275x17547306(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.is_prefixable */
extern T1 T275x17547307(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.is_parenthesisable */
extern T1 T275x17547309(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.is_bracketable */
extern T1 T275x17547308(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.id */
extern T6 T275x17547275(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.renamed_feature */
extern T0* T275x17547326T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_FEATURE.undefined_feature */
extern T0* T275x17547327T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_FEATURE.postconditions */
extern T0* T275x17137674(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.preconditions */
extern T0* T275x17137673(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.same_version */
extern T1 T275x17547324T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_FEATURE.is_dotnet */
extern T1 T275x17629189(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.is_query */
extern T1 T275x17547298(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.is_once */
extern T1 T275x17137665(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.other_precursors */
extern T0* T275x17547278(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.first_precursor */
extern T0* T275x18251780(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.has_validity_error */
extern T1 T275x18251785(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.validity_checked */
extern T1 T275x18251784(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.hash_code */
extern T6 T275x475137(GE_context* ac, T0* C);
/* Call to [detachable] ET_QUALIFIED_FEATURE_NAME.last_leaf */
extern T0* T276x19677189(GE_context* ac, T0* C);
/* Call to [detachable] ET_QUALIFIED_FEATURE_NAME.feature_name */
extern T0* T276x20856833(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_COMPONENT.name */
extern T0* T302x16171010(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_COMPONENT.arguments */
extern T0* T302x16171011(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_COMPONENT.position */
extern T0* T302x19677185(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_COMPONENT.is_tuple_label */
extern T1 T302x16171013(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_COMPONENT.is_call_agent */
extern T1 T302x16171014(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.position */
extern T0* T303x19677185(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.seed */
extern T6 T303x20250627(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_tuple_label */
extern T1 T303x20250633(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.lower_name */
extern T0* T303x20250626(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.name */
extern T0* T303x20250625(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_infix_or_else */
extern T1 T303x20250649(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_infix_implies */
extern T1 T303x20250643(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_infix_and_then */
extern T1 T303x20250637(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.precursor_keyword */
extern T0* T303x20250665(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_precursor */
extern T1 T303x20250663(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.hash_code */
extern T6 T303x475137(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_prefix_not */
extern T1 T303x20250659(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_prefix_plus */
extern T1 T303x20250657(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_prefix_minus */
extern T1 T303x20250656(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_infix_dotdot */
extern T1 T303x20250654(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_infix_xor */
extern T1 T303x20250653(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_infix_times */
extern T1 T303x20250652(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_infix_power */
extern T1 T303x20250651(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_infix_plus */
extern T1 T303x20250650(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_infix_or */
extern T1 T303x20250648(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_infix_mod */
extern T1 T303x20250647(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_infix_minus */
extern T1 T303x20250646(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_infix_lt */
extern T1 T303x20250645(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_infix_le */
extern T1 T303x20250644(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_infix_gt */
extern T1 T303x20250642(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_infix_ge */
extern T1 T303x20250641(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_infix_divide */
extern T1 T303x20250639(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_infix_div */
extern T1 T303x20250638(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_infix_and */
extern T1 T303x20250636(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_parenthesis */
extern T1 T303x20250661(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_bracket */
extern T1 T303x20250660(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.same_call_name */
extern T1 T303x20250664T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_CALL_NAME.feature_name */
extern T0* T303x20250670(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_infix */
extern T1 T303x20250635(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.is_prefix */
extern T1 T303x20250655(GE_context* ac, T0* C);
/* Call to [detachable] ET_AGENT.target */
extern T0* T306x13910018(GE_context* ac, T0* C);
/* Call to [detachable] ET_AGENT.arguments */
extern T0* T306x13910019(GE_context* ac, T0* C);
/* Call to [detachable] ET_AGENT.implicit_target_position */
extern T0* T306x13910026(GE_context* ac, T0* C);
/* Call to [detachable] ET_AGENT.position */
extern T0* T306x19677185(GE_context* ac, T0* C);
/* Call to [detachable] ET_AGENT.is_inline_agent */
extern T1 T306x13910024(GE_context* ac, T0* C);
/* Call to [detachable] ET_AGENT.index */
extern T6 T306x16777219(GE_context* ac, T0* C);
/* Call to [detachable] ET_AGENT.is_qualified_call */
extern T1 T306x13910021(GE_context* ac, T0* C);
/* Call to [detachable] ET_AGENT.implicit_result */
extern T0* T306x13910020(GE_context* ac, T0* C);
/* Call to [detachable] ET_OBJECT_TEST.expression */
extern T0* T307x16728068(GE_context* ac, T0* C);
/* Call to [detachable] ET_OBJECT_TEST.index */
extern T6 T307x16777219(GE_context* ac, T0* C);
/* Call to [detachable] ET_OBJECT_TEST.type */
extern T0* T307x16728067(GE_context* ac, T0* C);
/* Call to [detachable] ET_OBJECT_TEST.name */
extern T0* T307x16728069(GE_context* ac, T0* C);
/* Call to [detachable] ET_CONSTANT.is_integer_constant */
extern T1 T312x15745027(GE_context* ac, T0* C);
/* Call to [detachable] ET_CONSTANT.is_character_constant */
extern T1 T312x15745026(GE_context* ac, T0* C);
/* Call to [detachable] ET_CONSTANT.is_string_constant */
extern T1 T312x15745029(GE_context* ac, T0* C);
/* Call to [detachable] ET_CONSTANT.is_boolean_constant */
extern T1 T312x15745025(GE_context* ac, T0* C);
/* Call to [detachable] ET_CONSTANT.index */
extern T6 T312x16777219(GE_context* ac, T0* C);
/* Call to [detachable] ET_TARGET_TYPE.type */
extern T0* T321x21676033(GE_context* ac, T0* C);
/* Call to [detachable] ET_TARGET_TYPE.position */
extern T0* T321x19677185(GE_context* ac, T0* C);
/* Call to [detachable] ET_TARGET_TYPE.last_leaf */
extern T0* T321x19677189(GE_context* ac, T0* C);
/* Call to detachable ET_ARGUMENT_OPERANDS.actual_argument */
extern T0* T331x16121861T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_ARGUMENT_OPERANDS.count */
extern T6 T331x16121862(GE_context* ac, T0* C);
/* Call to detachable ET_ARGUMENT_OPERANDS.is_empty */
extern T1 T331x16121858(GE_context* ac, T0* C);
/* Call to [detachable] ET_EXPRESSION_ITEM.expression */
extern T0* T333x16465921(GE_context* ac, T0* C);
/* Call to [detachable] ET_EXPRESSION_ITEM.position */
extern T0* T333x19677185(GE_context* ac, T0* C);
/* Call to [detachable] ET_OPERAND.is_open_operand */
extern T1 T336x16777217(GE_context* ac, T0* C);
/* Call to [detachable] ET_OPERAND.index */
extern T6 T336x16777219(GE_context* ac, T0* C);
/* Call to [detachable] ET_AGENT_TARGET.index */
extern T6 T337x16777219(GE_context* ac, T0* C);
/* Call to [detachable] ET_AGENT_TARGET.is_instance_free */
extern T1 T337x16777218(GE_context* ac, T0* C);
/* Call to [detachable] ET_AGENT_TARGET.position */
extern T0* T337x19677185(GE_context* ac, T0* C);
/* Call to [detachable] ET_AGENT_TARGET.is_open_operand */
extern T1 T337x16777217(GE_context* ac, T0* C);
/* Call to [detachable] ET_AGENT_ARGUMENT_OPERAND.is_instance_free */
extern T1 T339x16777218(GE_context* ac, T0* C);
/* Call to [detachable] ET_AGENT_ARGUMENT_OPERAND.is_open_operand */
extern T1 T339x16777217(GE_context* ac, T0* C);
/* Call to [detachable] ET_AGENT_ARGUMENT_OPERAND.index */
extern T6 T339x16777219(GE_context* ac, T0* C);
/* Call to detachable ET_ACTUAL_ARGUMENTS.actual_argument */
extern T0* T350x16121861T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_ACTUAL_ARGUMENTS.count */
extern T6 T350x16121862(GE_context* ac, T0* C);
/* Call to detachable ET_ACTUAL_ARGUMENTS.is_empty */
extern T1 T350x16121858(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPES.dynamic_type */
extern T0* T352x23101441T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPES.count */
extern T6 T352x23101444(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPES.index_of */
extern T6 T352x23101443T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPES.has_type */
extern T1 T352x23101446T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_MANIFEST_STRING.cast_type */
extern T0* T358x15826949(GE_context* ac, T0* C);
/* Call to [detachable] ET_MANIFEST_STRING.index */
extern T6 T358x16777219(GE_context* ac, T0* C);
/* Call to [detachable] ET_MANIFEST_STRING.value */
extern T0* T358x15826947(GE_context* ac, T0* C);
/* Call to [detachable] ET_MANIFEST_STRING.position */
extern T0* T358x19677185(GE_context* ac, T0* C);
/* Call to [detachable] ET_STANDALONE_CLOSURE.as_invariants */
extern T0* T374x18251787(GE_context* ac, T0* C);
/* Call to [detachable] ET_STANDALONE_CLOSURE.is_invariants */
extern T1 T374x18251778(GE_context* ac, T0* C);
/* Call to [detachable] ET_STANDALONE_CLOSURE.as_feature */
extern T0* T374x18251786(GE_context* ac, T0* C);
/* Call to [detachable] ET_STANDALONE_CLOSURE.is_feature */
extern T1 T374x18251777(GE_context* ac, T0* C);
/* Call to [detachable] ET_STANDALONE_CLOSURE.first_precursor */
extern T0* T374x18251780(GE_context* ac, T0* C);
/* Call to [detachable] ET_STANDALONE_CLOSURE.has_validity_error */
extern T1 T374x18251785(GE_context* ac, T0* C);
/* Call to [detachable] ET_STANDALONE_CLOSURE.implementation_feature */
extern T0* T374x17137677(GE_context* ac, T0* C);
/* Call to [detachable] ET_STANDALONE_CLOSURE.postconditions */
extern T0* T374x17137674(GE_context* ac, T0* C);
/* Call to [detachable] ET_STANDALONE_CLOSURE.preconditions */
extern T0* T374x17137673(GE_context* ac, T0* C);
/* Call to [detachable] ET_STANDALONE_CLOSURE.clients */
extern T0* T374x18251783(GE_context* ac, T0* C);
/* Call to [detachable] ET_STANDALONE_CLOSURE.locals */
extern T0* T374x17137672(GE_context* ac, T0* C);
/* Call to [detachable] ET_STANDALONE_CLOSURE.arguments */
extern T0* T374x17137670(GE_context* ac, T0* C);
/* Call to [detachable] ET_STANDALONE_CLOSURE.type */
extern T0* T374x17137669(GE_context* ac, T0* C);
/* Call to [detachable] ET_STANDALONE_CLOSURE.implementation_class */
extern T0* T374x18251781(GE_context* ac, T0* C);
/* Call to [detachable] ET_ASSERTION.expression */
extern T0* T398x14385154(GE_context* ac, T0* C);
/* Call to [detachable] ET_ASSERTION.is_class_assertion */
extern T1 T398x14385153(GE_context* ac, T0* C);
/* Call to [detachable] ET_PRIMARY_GROUP.relative_lower_name */
extern T0* T400x18628629T0T2(GE_context* ac, T0* C, T0* a1, T2 a2);
/* Call to [detachable] ET_PRIMARY_GROUP.kind_name */
extern T0* T400x18628635(GE_context* ac, T0* C);
/* Call to [detachable] ET_PRIMARY_GROUP.full_lower_name */
extern T0* T400x18628631T2(GE_context* ac, T0* C, T2 a1);
/* Call to [detachable] ET_PRIMARY_GROUP.is_hidden */
extern T1 T400x18628618(GE_context* ac, T0* C);
/* Call to [detachable] ET_PRIMARY_GROUP.is_cluster */
extern T1 T400x18628611(GE_context* ac, T0* C);
/* Call to [detachable] ET_PRIMARY_GROUP.current_system */
extern T0* T400x18628625(GE_context* ac, T0* C);
/* Call to [detachable] ET_PRIMARY_GROUP.universe */
extern T0* T400x18628624(GE_context* ac, T0* C);
/* Call to [detachable] ET_PRIMARY_GROUP.use_obsolete_syntax */
extern T1 T400x18628619(GE_context* ac, T0* C);
/* Call to [detachable] ET_PRIMARY_GROUP.is_override */
extern T1 T400x18628616(GE_context* ac, T0* C);
/* Call to [detachable] ET_PRIMARY_GROUP.cluster */
extern T0* T400x18628648(GE_context* ac, T0* C);
/* Call to [detachable] ET_PRIMARY_GROUP.dotnet_assembly */
extern T0* T400x18628650(GE_context* ac, T0* C);
/* Call to [detachable] ET_PRIMARY_GROUP.is_dotnet_assembly */
extern T1 T400x18628613(GE_context* ac, T0* C);
/* Call to [detachable] ET_PRIMARY_GROUP.is_unknown */
extern T1 T400x18628615(GE_context* ac, T0* C);
/* Call to [detachable] ET_PRIMARY_GROUP.is_none */
extern T1 T400x18628614(GE_context* ac, T0* C);
/* Call to [detachable] ET_EXTENDED_FEATURE_NAME.alias_name */
extern T0* T457x20348930(GE_context* ac, T0* C);
/* Call to [detachable] ET_EXTENDED_FEATURE_NAME.feature_name */
extern T0* T457x20348929(GE_context* ac, T0* C);
/* Call to [detachable] ET_EXTENDED_FEATURE_NAME.same_call_name */
extern T1 T457x20348932T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_EXTENDED_FEATURE_NAME.position */
extern T0* T457x19677185(GE_context* ac, T0* C);
/* Call to [detachable] ET_EXTENDED_FEATURE_NAME.same_extended_feature_name */
extern T1 T457x20348931T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] XM_EIFFEL_SCANNER.start_condition */
extern T6 T498x12222469(GE_context* ac, T0* C);
/* Call to [detachable] XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T498x28246020T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] XM_EIFFEL_SCANNER.end_of_file */
extern T1 T498x12222475(GE_context* ac, T0* C);
/* Call to [detachable] XM_EIFFEL_SCANNER.last_value */
extern T0* T498x28246029(GE_context* ac, T0* C);
/* Call to [detachable] XM_EIFFEL_SCANNER.last_token */
extern T6 T498x12222465(GE_context* ac, T0* C);
/* Call to [detachable] XM_EIFFEL_SCANNER.error_position */
extern T0* T498x28246027(GE_context* ac, T0* C);
/* Call to [detachable] XM_DOCUMENT_NODE.parent */
extern T0* T563x29163521(GE_context* ac, T0* C);
/* Call to [detachable] ET_ACTUAL_PARAMETER.last_leaf */
extern T0* T599x19677189(GE_context* ac, T0* C);
/* Call to [detachable] ET_ACTUAL_PARAMETER.label */
extern T0* T599x21118979(GE_context* ac, T0* C);
/* Call to [detachable] ET_ACTUAL_PARAMETER.position */
extern T0* T599x19677185(GE_context* ac, T0* C);
/* Call to [detachable] ET_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T599x21069828T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_ACTUAL_PARAMETER.type */
extern T0* T599x21118978(GE_context* ac, T0* C);
/* Call to detachable ET_NAMED_TYPE.to_text */
extern T0* T600x21708874(GE_context* ac, T0* C);
/* Call to detachable ET_NAMED_TYPE.type_with_type_mark */
extern T0* T600x21708821T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_NAMED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T600x21708852T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to detachable ET_NAMED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T600x21708855T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to detachable ET_NAMED_TYPE.has_formal_types */
extern T1 T600x21708839T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_NAMED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T600x21708851T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to detachable ET_NAMED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T600x21708850T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to detachable ET_NAMED_TYPE.same_base_type_with_type_marks */
extern T1 T600x21708849T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to detachable ET_NAMED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T600x21708854T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to detachable ET_NAMED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T600x21708853T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to detachable ET_NAMED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T600x21708845T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to detachable ET_NAMED_TYPE.is_type_reference_with_type_mark */
extern T1 T600x21708830T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to detachable ET_NAMED_TYPE.is_type_attached_with_type_mark */
extern T1 T600x21708832T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to detachable ET_NAMED_TYPE.is_type_detachable_with_type_mark */
extern T1 T600x21708834T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to detachable ET_NAMED_TYPE.is_type_expanded_with_type_mark */
extern T1 T600x21708828T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to detachable ET_NAMED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T600x21708866T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to detachable ET_NAMED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T600x21708865T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to detachable ET_NAMED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T600x21708864T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to detachable ET_NAMED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T600x21708857T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to detachable ET_NAMED_TYPE.conforms_to_type_with_type_marks */
extern T1 T600x14811142T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to detachable ET_NAMED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T600x21708858T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to detachable ET_NAMED_TYPE.same_named_class_type_with_type_marks */
extern T1 T600x21708856T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to detachable ET_NAMED_TYPE.same_named_type_with_type_marks */
extern T1 T600x21708847T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to detachable ET_NAMED_TYPE.base_class */
extern T0* T600x21708803T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_CLOSURE.type */
extern T0* T681x17137669(GE_context* ac, T0* C);
/* Call to [detachable] ET_CLOSURE.arguments */
extern T0* T681x17137670(GE_context* ac, T0* C);
/* Call to [detachable] ET_CLOSURE.locals */
extern T0* T681x17137672(GE_context* ac, T0* C);
/* Call to [detachable] ET_CLOSURE.across_components */
extern T0* T681x17137676(GE_context* ac, T0* C);
/* Call to [detachable] ET_CLOSURE.object_tests */
extern T0* T681x17137675(GE_context* ac, T0* C);
/* Call to [detachable] ET_INLINE_AGENT.position */
extern T0* T684x19677185(GE_context* ac, T0* C);
/* Call to [detachable] ET_INLINE_AGENT.implicit_result */
extern T0* T684x13910020(GE_context* ac, T0* C);
/* Call to [detachable] ET_INLINE_AGENT.formal_arguments */
extern T0* T684x17137670(GE_context* ac, T0* C);
/* Call to [detachable] ET_INLINE_AGENT.actual_arguments */
extern T0* T684x13910019(GE_context* ac, T0* C);
/* Call to [detachable] ET_INLINE_AGENT.target */
extern T0* T684x13910018(GE_context* ac, T0* C);
/* Call to [detachable] ET_INLINE_AGENT.locals */
extern T0* T684x17137672(GE_context* ac, T0* C);
/* Call to [detachable] ET_INLINE_AGENT.attached_result_index */
extern T6 T684x14221314(GE_context* ac, T0* C);
/* Call to [detachable] ET_INLINE_AGENT.result_index */
extern T6 T684x14221313(GE_context* ac, T0* C);
/* Call to [detachable] ET_INLINE_AGENT.type */
extern T0* T684x17137669(GE_context* ac, T0* C);
/* Call to [detachable] ET_INDEXING_TERM.indexing_term_value */
extern T0* T725x15269890(GE_context* ac, T0* C);
/* Call to [detachable] ET_INDEXING_TERM.position */
extern T0* T725x19677185(GE_context* ac, T0* C);
/* Call to [detachable] ET_INDEXING_TERM.has_indexing_term_value */
extern T1 T725x15269891T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_ECF_CONDITION_ITEM.is_enabled */
extern T1 T778x12795905T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_ECF_CONDITION_ITEM.is_capability_supported */
extern T1 T778x12795906T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to detachable ET_ECF_CONDITION_ITEM.is_capability_aware */
extern T1 T778x12845057T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_INTERNAL_UNIVERSE.hash_code */
extern T6 T798x475137(GE_context* ac, T0* C);
/* Call to [detachable] ET_QUALIFIED_FEATURE_CALL_EXPRESSION.parenthesis_call */
extern T0* T846x19218435(GE_context* ac, T0* C);
/* Call to [detachable] ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T846x16171011(GE_context* ac, T0* C);
/* Call to [detachable] ET_QUALIFIED_FEATURE_CALL_EXPRESSION.name */
extern T0* T846x16171010(GE_context* ac, T0* C);
/* Call to [detachable] ET_QUALIFIED_FEATURE_CALL_EXPRESSION.target */
extern T0* T846x16171009(GE_context* ac, T0* C);
/* Call to [detachable] ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments_count */
extern T6 T846x18923523(GE_context* ac, T0* C);
/* Call to [detachable] ET_QUALIFIED_FEATURE_CALL_EXPRESSION.index */
extern T6 T846x16777219(GE_context* ac, T0* C);
/* Call to [detachable] ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_call_agent */
extern T1 T846x16171014(GE_context* ac, T0* C);
/* Call to [detachable] ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_tuple_label */
extern T1 T846x16171013(GE_context* ac, T0* C);
/* Call to [detachable] ET_ADAPTED_UNIVERSE.lower_name */
extern T0* T871x18415619(GE_context* ac, T0* C);
/* Call to [detachable] ET_ADAPTED_UNIVERSE.name */
extern T0* T871x18415618(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.same_call_name */
extern T1 T874x20250664T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_ALIAS_NAME.same_alias_name */
extern T1 T874x20168748T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_ALIAS_NAME.is_infix_minus */
extern T1 T874x20250646(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.is_infix_plus */
extern T1 T874x20250650(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.is_prefix_minus */
extern T1 T874x20250656(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.is_prefix_plus */
extern T1 T874x20250657(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.hash_code */
extern T6 T874x475137(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.alias_lower_name */
extern T0* T874x20168737(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.lower_name */
extern T0* T874x20250626(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.position */
extern T0* T874x19677185(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.is_prefixable */
extern T1 T874x20168732(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.is_infixable */
extern T1 T874x20168733(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.is_infix */
extern T1 T874x20250635(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.convert_keyword */
extern T0* T874x20168743(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.is_prefix */
extern T1 T874x20250655(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.is_parenthesis */
extern T1 T874x20250661(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.is_bracket */
extern T1 T874x20250660(GE_context* ac, T0* C);
/* Call to detachable ET_CHARACTER_CONSTANT.cast_type */
extern T0* T933x15728644(GE_context* ac, T0* C);
/* Call to detachable ET_CHARACTER_CONSTANT.index */
extern T6 T933x16777219(GE_context* ac, T0* C);
/* Call to detachable ET_CHARACTER_CONSTANT.value */
extern T3 T933x15728643(GE_context* ac, T0* C);
/* Call to detachable ET_INTEGER_CONSTANT.cast_type */
extern T0* T943x15810572(GE_context* ac, T0* C);
/* Call to detachable ET_INTEGER_CONSTANT.index */
extern T6 T943x16777219(GE_context* ac, T0* C);
/* Call to detachable ET_INTEGER_CONSTANT.is_negative */
extern T1 T943x15810579(GE_context* ac, T0* C);
/* Call to detachable ET_INTEGER_CONSTANT.value */
extern T11 T943x15810562(GE_context* ac, T0* C);
/* Call to detachable ET_INTEGER_CONSTANT.to_integer_32 */
extern T6 T943x15810565(GE_context* ac, T0* C);
/* Call to detachable ET_INTEGER_CONSTANT.literal */
extern T0* T943x15810561(GE_context* ac, T0* C);
/* Call to detachable ET_INTEGER_CONSTANT.sign */
extern T0* T943x15810571(GE_context* ac, T0* C);
/* Call to detachable ET_INTEGER_CONSTANT.value_position */
extern T0* T943x15810576(GE_context* ac, T0* C);
/* Call to detachable ET_INTEGER_CONSTANT.is_natural_64 */
extern T1 T943x15810591(GE_context* ac, T0* C);
/* Call to detachable ET_INTEGER_CONSTANT.is_binary */
extern T1 T943x15810582(GE_context* ac, T0* C);
/* Call to detachable ET_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T943x15810581(GE_context* ac, T0* C);
/* Call to detachable ET_INTEGER_CONSTANT.is_integer_64 */
extern T1 T943x15810587(GE_context* ac, T0* C);
/* Call to detachable ET_INTEGER_CONSTANT.is_integer_32 */
extern T1 T943x15810586(GE_context* ac, T0* C);
/* Call to detachable ET_INTEGER_CONSTANT.is_natural_32 */
extern T1 T943x15810590(GE_context* ac, T0* C);
/* Call to detachable ET_INTEGER_CONSTANT.is_natural_16 */
extern T1 T943x15810589(GE_context* ac, T0* C);
/* Call to detachable ET_INTEGER_CONSTANT.is_natural_8 */
extern T1 T943x15810588(GE_context* ac, T0* C);
/* Call to detachable ET_INTEGER_CONSTANT.is_integer_16 */
extern T1 T943x15810585(GE_context* ac, T0* C);
/* Call to detachable ET_INTEGER_CONSTANT.is_integer_8 */
extern T1 T943x15810584(GE_context* ac, T0* C);
/* Call to detachable ET_AGENT_ARGUMENT_OPERAND_ITEM.agent_actual_argument */
extern T0* T987x13975553(GE_context* ac, T0* C);
/* Call to detachable ET_ASSIGNER.feature_name */
extern T0* T997x17088513(GE_context* ac, T0* C);
/* Call to detachable ET_CHOICE.upper */
extern T0* T1009x18972675(GE_context* ac, T0* C);
/* Call to detachable ET_CHOICE.is_range */
extern T1 T1009x18972673(GE_context* ac, T0* C);
/* Call to detachable ET_CHOICE.lower */
extern T0* T1009x18972674(GE_context* ac, T0* C);
/* Call to detachable ET_CHOICE_CONSTANT.position */
extern T0* T1012x19677185(GE_context* ac, T0* C);
/* Call to detachable ET_CHOICE_ITEM.choice */
extern T0* T1015x19021825(GE_context* ac, T0* C);
/* Call to detachable ET_CONDITIONAL.expression */
extern T0* T1030x16203777(GE_context* ac, T0* C);
/* Call to detachable ET_CONDITIONAL.position */
extern T0* T1030x19677185(GE_context* ac, T0* C);
/* Call to detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.resolved_syntactical_constraint_with_type */
extern T0* T1035x21299204T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.type */
extern T0* T1035x21299202(GE_context* ac, T0* C);
/* Call to detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.position */
extern T0* T1035x21299203(GE_context* ac, T0* C);
/* Call to detachable ET_CONSTRAINT_TYPE.resolved_syntactical_constraint */
extern T0* T1047x21413890T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to detachable ET_CONVERT_FEATURE.name */
extern T0* T1050x14876675(GE_context* ac, T0* C);
/* Call to detachable ET_CONVERT_FEATURE.is_convert_to */
extern T1 T1050x14876674(GE_context* ac, T0* C);
/* Call to detachable ET_CONVERT_FEATURE.is_convert_from */
extern T1 T1050x14876673(GE_context* ac, T0* C);
/* Call to detachable ET_EXTERNAL_ALIAS.manifest_string */
extern T0* T1096x17448961(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE_NAME_ITEM.feature_name */
extern T0* T1110x20348929(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE_NAME_ITEM.position */
extern T0* T1110x19677185(GE_context* ac, T0* C);
/* Call to detachable ET_INDEXING_TERM_ITEM.indexing_term */
extern T0* T1141x15269889(GE_context* ac, T0* C);
/* Call to detachable ET_INDEXING_TERM_ITEM.position */
extern T0* T1141x19677185(GE_context* ac, T0* C);
/* Call to detachable ET_INDEXING_TERM_ITEM.has_indexing_term_value */
extern T1 T1141x15269891T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_LIKE_TYPE.to_text */
extern T0* T1160x21708874(GE_context* ac, T0* C);
/* Call to detachable ET_LIKE_TYPE.position */
extern T0* T1160x19677185(GE_context* ac, T0* C);
/* Call to detachable ET_LIKE_TYPE.resolved_formal_parameters */
extern T0* T1160x21708867T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_LIKE_TYPE.like_keyword */
extern T0* T1160x21577730(GE_context* ac, T0* C);
/* Call to detachable ET_LIKE_TYPE.has_formal_types */
extern T1 T1160x21708839T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_LIKE_TYPE.has_unqualified_anchored_type */
extern T1 T1160x21708836(GE_context* ac, T0* C);
/* Call to detachable ET_MANIFEST_STRING_ITEM.manifest_string */
extern T0* T1177x16646145(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_CONSTRAINT.type */
extern T0* T1225x15597570(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_CONSTRAINT.renames */
extern T0* T1225x15597571(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_CONSTRAINT_ITEM.type_constraint */
extern T0* T1228x15597569(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_CONSTRAINT_ITEM.type */
extern T0* T1228x15597570(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_ITEM.type */
extern T0* T1234x21757953(GE_context* ac, T0* C);
/* Call to detachable ET_CONSTRAINT.last_leaf */
extern T0* T1279x19677189(GE_context* ac, T0* C);
/* Call to detachable ET_CONSTRAINT.type_constraint */
extern T0* T1279x14811137T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_CONSTRAINT.count */
extern T6 T1279x14811140(GE_context* ac, T0* C);
/* Call to detachable ET_CONSTRAINT.types_to_text */
extern T0* T1279x14811143(GE_context* ac, T0* C);
/* Call to [detachable] ET_CONSTRAINT_BASE_TYPES.type_constraint */
extern T0* T1280x14811137T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] ET_CONSTRAINT_BASE_TYPES.count */
extern T6 T1280x14811140(GE_context* ac, T0* C);
/* Call to [detachable] ET_CONSTRAINT_BASE_TYPES.conforms_to_type_with_type_marks */
extern T1 T1280x14811142T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to [detachable] ET_CONSTRAINT_BASE_TYPES.types_to_text */
extern T0* T1280x14811143(GE_context* ac, T0* C);
/* Call to [detachable] ET_BASE_TYPE_CONSTRAINT.renames */
extern T0* T1281x15597571(GE_context* ac, T0* C);
/* Call to [detachable] ET_BASE_TYPE_CONSTRAINT.type */
extern T0* T1281x15597570(GE_context* ac, T0* C);
/* Call to [detachable] ET_BASE_TYPE_CONSTRAINT.base_class */
extern T0* T1281x14581761(GE_context* ac, T0* C);
/* Call to [detachable] ET_BASE_TYPE_CONSTRAINT.named_feature */
extern T0* T1281x14581765T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_FLATTENED_FEATURE.adapted_feature */
extern T0* T1288x17629201(GE_context* ac, T0* C);
/* Call to [detachable] ET_FLATTENED_FEATURE.is_adapted */
extern T1 T1288x17629188(GE_context* ac, T0* C);
/* Call to [detachable] ET_FLATTENED_FEATURE.inherited_feature */
extern T0* T1288x17629199(GE_context* ac, T0* C);
/* Call to [detachable] ET_FLATTENED_FEATURE.is_inherited */
extern T1 T1288x17629186(GE_context* ac, T0* C);
/* Call to [detachable] ET_FLATTENED_FEATURE.redeclared_feature */
extern T0* T1288x17629200(GE_context* ac, T0* C);
/* Call to [detachable] ET_FLATTENED_FEATURE.is_redeclared */
extern T1 T1288x17629187(GE_context* ac, T0* C);
/* Call to [detachable] ET_FLATTENED_FEATURE.is_immediate */
extern T1 T1288x17629185(GE_context* ac, T0* C);
/* Call to [detachable] ET_FLATTENED_FEATURE.flattened_feature */
extern T0* T1288x17629197(GE_context* ac, T0* C);
/* Call to [detachable] ET_FLATTENED_FEATURE.immediate_feature */
extern T0* T1288x17629198(GE_context* ac, T0* C);
/* Call to [detachable] ET_ADAPTED_CLASS.named_query */
extern T0* T1360x14581763T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_ADAPTED_CLASS.base_class */
extern T0* T1360x14581761(GE_context* ac, T0* C);
/* Call to [detachable] ET_ADAPTED_CLASS.named_procedure */
extern T0* T1360x14581764T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_ADAPTED_CLASS.base_type */
extern T0* T1360x14581762(GE_context* ac, T0* C);
/* Call to [detachable] ET_ADAPTED_CLASS.named_feature */
extern T0* T1360x14581765T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_ADAPTED_CLASS.base_type_index_of_label */
extern T6 T1360x14581766T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] XM_ELEMENT_NODE.parent */
extern T0* T1399x29163521(GE_context* ac, T0* C);
/* Call to detachable ET_DECLARED_TYPE.last_leaf */
extern T0* T1436x19677189(GE_context* ac, T0* C);
/* Call to detachable ET_DECLARED_TYPE.type */
extern T0* T1436x21430273(GE_context* ac, T0* C);
/* Call to detachable ET_DECLARED_TYPE.position */
extern T0* T1436x19677185(GE_context* ac, T0* C);
/* Call to detachable ET_EXTERNAL_LANGUAGE.manifest_string */
extern T0* T1440x17481729(GE_context* ac, T0* C);
/* Call to detachable ET_UNTAGGED_ASSERTION.is_class_assertion */
extern T1 T1489x14385153(GE_context* ac, T0* C);
/* Call to detachable ET_ASSERTION_ITEM.assertion */
extern T0* T1491x14417921(GE_context* ac, T0* C);
/* Call to detachable ET_ASSERTION_ITEM.position */
extern T0* T1491x19677185(GE_context* ac, T0* C);
/* Call to [detachable] ET_REPLICABLE_FEATURE.first_feature */
extern T0* T1610x18104323(GE_context* ac, T0* C);
/* Call to [detachable] ET_REPLICABLE_FEATURE.replicated_feature */
extern T0* T1610x18104322(GE_context* ac, T0* C);
/* Call to [detachable] ET_REPLICABLE_FEATURE.has_replication */
extern T1 T1610x18104321(GE_context* ac, T0* C);
/* Call to [detachable] ET_REPLICABLE_FEATURE.selected_count */
extern T6 T1610x18104324(GE_context* ac, T0* C);
/* Call to [detachable] ET_ECF_GROUP.class_options */
extern T0* T1662x13303814(GE_context* ac, T0* C);
/* Call to [detachable] ET_ECF_GROUP.options */
extern T0* T1662x13303813(GE_context* ac, T0* C);
/* Call to [detachable] ET_INTERNAL_ROUTINE.implementation_feature */
extern T0* T1673x17137677(GE_context* ac, T0* C);
/* Call to [detachable] ET_INTERNAL_ROUTINE.is_once_per_process */
extern T1 T1673x17137666(GE_context* ac, T0* C);
/* Call to [detachable] ET_INTERNAL_ROUTINE.is_once */
extern T1 T1673x17137665(GE_context* ac, T0* C);
/* Call to [detachable] ET_INTERNAL_ROUTINE.lower_name */
extern T0* T1673x18251779(GE_context* ac, T0* C);
/* Call to [detachable] ET_INTERNAL_ROUTINE.rescue_clause */
extern T0* T1673x17809411(GE_context* ac, T0* C);
/* Call to [detachable] ET_INTERNAL_ROUTINE.compound */
extern T0* T1673x17809409(GE_context* ac, T0* C);
/* Call to [detachable] ET_INTERNAL_ROUTINE.arguments */
extern T0* T1673x17629194(GE_context* ac, T0* C);
/* Call to [detachable] ET_ROUTINE.implementation_feature */
extern T0* T1674x17137677(GE_context* ac, T0* C);
/* Call to [detachable] ET_ROUTINE.arguments */
extern T0* T1674x17629194(GE_context* ac, T0* C);
/* Call to [detachable] ET_INTERNAL_ROUTINE_CLOSURE.locals */
extern T0* T1675x17137672(GE_context* ac, T0* C);
/* Call to [detachable] ET_INTERNAL_ROUTINE_CLOSURE.compound */
extern T0* T1675x17809409(GE_context* ac, T0* C);
/* Call to [detachable] ET_INTERNAL_ROUTINE_CLOSURE.is_once_per_process */
extern T1 T1675x17137666(GE_context* ac, T0* C);
/* Call to [detachable] ET_INTERNAL_ROUTINE_CLOSURE.rescue_clause */
extern T0* T1675x17809411(GE_context* ac, T0* C);
/* Call to detachable ET_AST_LEAF.last_position */
extern T0* T1679x19677187(GE_context* ac, T0* C);
/* Call to detachable ET_OPERATOR.is_prefix_not */
extern T1 T1680x20250659(GE_context* ac, T0* C);
/* Call to detachable ET_OPERATOR.is_infix_and_then */
extern T1 T1680x20250637(GE_context* ac, T0* C);
/* Call to detachable ET_OPERATOR.is_infix_and */
extern T1 T1680x20250636(GE_context* ac, T0* C);
/* Call to detachable ET_OPERATOR.is_infix_implies */
extern T1 T1680x20250643(GE_context* ac, T0* C);
/* Call to detachable ET_OPERATOR.is_infix_or_else */
extern T1 T1680x20250649(GE_context* ac, T0* C);
/* Call to detachable ET_OPERATOR.is_infix_or */
extern T1 T1680x20250648(GE_context* ac, T0* C);
/* Call to detachable ET_OPERATOR.is_tuple_label */
extern T1 T1680x20250633(GE_context* ac, T0* C);
/* Call to detachable ET_OPERATOR.position */
extern T0* T1680x19677185(GE_context* ac, T0* C);
/* Call to [detachable] ET_GROUP.is_cluster */
extern T1 T1683x18628611(GE_context* ac, T0* C);
/* Call to [detachable] ET_GROUP.absolute_pathname */
extern T0* T1683x18628634(GE_context* ac, T0* C);
/* Call to [detachable] ET_GROUP.universe */
extern T0* T1683x18628624(GE_context* ac, T0* C);
/* Call to [detachable] ET_GROUP.parent */
extern T0* T1683x18628651(GE_context* ac, T0* C);
/* Call to [detachable] ET_GROUP.full_name */
extern T0* T1683x18628630T2(GE_context* ac, T0* C, T2 a1);
/* Call to [detachable] ET_GROUP.full_lower_name */
extern T0* T1683x18628631T2(GE_context* ac, T0* C, T2 a1);
/* Call to [detachable] ET_GROUP.kind_lower_name */
extern T0* T1683x18628636(GE_context* ac, T0* C);
/* Call to [detachable] ET_GROUP.cluster */
extern T0* T1683x18628648(GE_context* ac, T0* C);
/* Call to detachable ET_AST_NODE.position */
extern T0* T1713x19677185(GE_context* ac, T0* C);
/* Call to [detachable] ET_FREE_NAME.operator_name */
extern T0* T1732x20496386(GE_context* ac, T0* C);
/* Call to [detachable] ET_FREE_NAME.hash_code */
extern T6 T1732x475137(GE_context* ac, T0* C);
/* Call to [detachable] ET_FREE_NAME.is_infix_freeop */
extern T1 T1732x20250640(GE_context* ac, T0* C);
/* Call to [detachable] ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.target */
extern T0* T1873x16171009(GE_context* ac, T0* C);
/* Call to [detachable] ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.name */
extern T0* T1873x16171010(GE_context* ac, T0* C);
/* Call to [detachable] ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_call_agent */
extern T1 T1873x16171014(GE_context* ac, T0* C);
/* Call to [detachable] ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_tuple_label */
extern T1 T1873x16171013(GE_context* ac, T0* C);
/* Call to [detachable] ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.arguments */
extern T0* T1873x16171011(GE_context* ac, T0* C);
/* Call to [detachable] ET_INTERNAL_ROUTINE_INLINE_AGENT.implicit_result */
extern T0* T1876x13910020(GE_context* ac, T0* C);
/* Call to [detachable] ET_LIKE_IDENTIFIER.name */
extern T0* T1897x21544961(GE_context* ac, T0* C);
/* Call to [detachable] ET_LIKE_IDENTIFIER.to_text */
extern T0* T1897x21708874(GE_context* ac, T0* C);
/* Call to [detachable] ET_CONVERT_EXPRESSION.expression */
extern T0* T1901x16236545(GE_context* ac, T0* C);
/* Call to [detachable] ET_CONVERT_EXPRESSION.index */
extern T6 T1901x16777219(GE_context* ac, T0* C);
/* Call to [detachable] ET_CONVERT_EXPRESSION.convert_feature */
extern T0* T1901x16236546(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_WITH_ACTUAL_ARGUMENTS.name */
extern T0* T1935x18923521(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_WITH_ACTUAL_ARGUMENTS.arguments */
extern T0* T1935x18923522(GE_context* ac, T0* C);
/* Call to [detachable] ET_QUALIFIED_FEATURE_CALL.name */
extern T0* T1937x16171010(GE_context* ac, T0* C);
/* Call to [detachable] ET_QUERY_INLINE_AGENT.type */
extern T0* T1942x17137669(GE_context* ac, T0* C);
/* Call to [detachable] ET_QUERY_INLINE_AGENT.formal_arguments */
extern T0* T1942x17137670(GE_context* ac, T0* C);
/* Call to [detachable] ET_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T1945x17137670(GE_context* ac, T0* C);
/* Call to [detachable] ET_REGULAR_FEATURE_CALL.parenthesis_call */
extern T0* T1947x19218435(GE_context* ac, T0* C);
/* Call to [detachable] ET_REGULAR_FEATURE_CALL.name */
extern T0* T1947x16171010(GE_context* ac, T0* C);
/* Call to [detachable] ET_REGULAR_FEATURE_CALL.target */
extern T0* T1947x16171009(GE_context* ac, T0* C);
/* Call to [detachable] ET_REGULAR_FEATURE_CALL.arguments */
extern T0* T1947x16171011(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T1949x16171011(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_WITH_ACTUAL_ARGUMENT_LIST.arguments */
extern T0* T1951x18923522(GE_context* ac, T0* C);
/* Call to [detachable] ET_CREATION_COMPONENT.position */
extern T0* T1955x19677185(GE_context* ac, T0* C);
/* Call to detachable LX_TRANSITION [[attached] LX_NFA_STATE].target */
extern T0* T2078x25804801(GE_context* ac, T0* C);
/* Call to detachable LX_TRANSITION [[attached] LX_NFA_STATE].labeled */
extern T1 T2078x25804802T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable EXCEPTION.set_type_name */
extern void T21x1572888T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable EXCEPTION.set_recipient_name */
extern void T21x1572891T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable EXCEPTION.set_description */
extern void T21x1572893T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable EXCEPTION.set_exception_trace */
extern void T21x1572887T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable EXCEPTION.set_throwing_exception */
extern void T21x1572892T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] KI_CHARACTER_INPUT_STREAM.read_character */
extern void T36x5865484(GE_context* ac, T0* C);
/* Call to [detachable] KI_CHARACTER_INPUT_STREAM.close */
extern void T36x5865482(GE_context* ac, T0* C);
/* Call to [detachable] AP_OPTION.record_occurrence */
extern void T48x5275667T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] AP_OPTION.reset */
extern void T48x5275666(GE_context* ac, T0* C);
/* Call to [detachable] ET_BASE_TYPE.append_to_string */
extern void T63x21708880T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_BASE_TYPE.add_adapted_base_classes_to_list */
extern void T63x21708881T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_BASE_TYPE.context_add_adapted_base_classes_to_list */
extern void T63x21741621T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_BASE_TYPE.process */
extern void T63x19677194T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_BASE_TYPE.append_runtime_name_to_string */
extern void T63x21708878T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] KI_TEXT_OUTPUT_STREAM.put_integer */
extern void T73x5767182T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] KI_TEXT_OUTPUT_STREAM.put_character */
extern void T73x5898246T2(GE_context* ac, T0* C, T2 a1);
/* Call to [detachable] KI_TEXT_OUTPUT_STREAM.put_new_line */
extern void T73x5980162(GE_context* ac, T0* C);
/* Call to [detachable] KI_TEXT_OUTPUT_STREAM.put_string */
extern void T73x5767184T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] KI_TEXT_OUTPUT_STREAM.append */
extern void T73x5898245T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] KI_TEXT_OUTPUT_STREAM.put_line */
extern void T73x5980163T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] XM_CALLBACKS_FILTER.set_next */
extern void T175x27295746T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] XM_CALLBACKS.on_xml_declaration */
extern void T176x27230221T0T0T1(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* Call to [detachable] XM_CALLBACKS.on_attribute */
extern void T176x27230216T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to [detachable] XM_CALLBACKS.on_error */
extern void T176x27230220T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] XM_CALLBACKS.on_end_tag */
extern void T176x27230214T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to [detachable] XM_CALLBACKS.on_start_tag_finish */
extern void T176x27230215(GE_context* ac, T0* C);
/* Call to [detachable] XM_CALLBACKS.on_start_tag */
extern void T176x27230217T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to [detachable] XM_CALLBACKS.on_content */
extern void T176x27230213T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] XM_CALLBACKS.on_processing_instruction */
extern void T176x27230219T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] XM_CALLBACKS.on_comment */
extern void T176x27230218T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] XM_CALLBACKS.on_finish */
extern void T176x27230222(GE_context* ac, T0* C);
/* Call to [detachable] XM_CALLBACKS.on_start */
extern void T176x27230223(GE_context* ac, T0* C);
/* Call to [detachable] ET_ECF_SYSTEM_CONFIG.set_library_target */
extern void T180x13598738T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_ECF_SYSTEM_CONFIG.set_uuid */
extern void T180x13598737T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_ECF_SYSTEM_CONFIG.set_read_only */
extern void T180x13598741T1(GE_context* ac, T0* C, T1 a1);
/* Call to [detachable] ET_ECF_SYSTEM_CONFIG.set_targets */
extern void T180x13598739T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_ECF_SYSTEM_CONFIG.set_notes */
extern void T180x13598733T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_ECF_SYSTEM_CONFIG.set_description */
extern void T180x13598734T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_ECF_SYSTEM_CONFIG.set_ecf_version */
extern void T180x13598735T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_ECF_SYSTEM_CONFIG.set_ecf_namespace */
extern void T180x13598736T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.set_static */
extern void T218x23085106T1(GE_context* ac, T0* C, T1 a1);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.put_procedure_call */
extern void T218x23085097T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.put_query_call */
extern void T218x23085098T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.put_object_equality_expression */
extern void T218x23085095T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.put_equality_expression */
extern void T218x23085096T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.use_all_attributes */
extern void T218x23085101T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.set_alive */
extern void T218x23085107(GE_context* ac, T0* C);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.set_attribute_position */
extern void T218x23085102T0T6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.set_next_type */
extern void T218x23085094T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.set_hash_code */
extern void T218x23085103T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.set_attached_type */
extern void T218x23085105T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_DYNAMIC_PRIMARY_TYPE.set_id */
extern void T218x23085104T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_FEATURE_NAME.set_seed */
extern void T228x20250671T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_FEATURE_NAME.reset */
extern void T228x20250672(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.add_creation_clients_to */
extern void T229x17547349T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to detachable ET_PROCEDURE.reset_after_interface_checked */
extern void T229x17547351(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.reset_after_features_flattened */
extern void T229x17547352(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.reset */
extern void T229x17547353(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.set_across_components */
extern void T229x17137678T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_PROCEDURE.set_object_tests */
extern void T229x17137679T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_PROCEDURE.set_frozen_keyword */
extern void T229x17547337T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_PROCEDURE.reset_validity_checked */
extern void T229x18251789(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.reset_after_interface_checked */
extern void T230x17547351(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.reset_after_features_flattened */
extern void T230x17547352(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.reset */
extern void T230x17547353(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.set_across_components */
extern void T230x17137678T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_QUERY.set_object_tests */
extern void T230x17137679T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_QUERY.set_frozen_keyword */
extern void T230x17547337T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_QUERY.reset_validity_checked */
extern void T230x18251789(GE_context* ac, T0* C);
/* Call to [detachable] ET_AST_PROCESSOR.process_convert_to_expression */
extern void T232x24084644T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_convert_from_expression */
extern void T232x24084646T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_convert_builtin_expression */
extern void T232x24084650T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_unqualified_call_instruction */
extern void T232x24084488T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_static_call_instruction */
extern void T232x24084507T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_precursor_instruction */
extern void T232x24084530T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_create_instruction */
extern void T232x24084642T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_bang_instruction */
extern void T232x24084679T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_loop_instruction */
extern void T232x24084559T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_assignment_attempt */
extern void T232x24084683T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_assignment */
extern void T232x24084684T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_assigner_instruction */
extern void T232x24084685T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_inspect_instruction */
extern void T232x24084576T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_if_instruction */
extern void T232x24084589T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_debug_instruction */
extern void T232x24084635T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_check_instruction */
extern void T232x24084666T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_across_instruction */
extern void T232x24084703T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_retry_instruction */
extern void T232x24084511T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_infix_cast_expression */
extern void T232x24084582T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_constrained_formal_parameter */
extern void T232x24084653T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_formal_parameter */
extern void T232x24084599T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_special_manifest_string */
extern void T232x24084509T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_verbatim_string */
extern void T232x24084486T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_c3_character_constant */
extern void T232x24084668T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_like_current */
extern void T232x24084566T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_attribute */
extern void T232x24084680T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_regular_integer_constant */
extern void T232x24084519T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_unique_attribute */
extern void T232x24084490T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_constant_attribute */
extern void T232x24084654T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_extended_attribute */
extern void T232x24084615T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_create_expression */
extern void T232x24084643T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_equality_expression */
extern void T232x24084619T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_object_equality_expression */
extern void T232x24084551T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_object_test */
extern void T232x24084550T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_unqualified_call_expression */
extern void T232x24084489T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_qualified_call_instruction */
extern void T232x24084523T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_tuple_type */
extern void T232x24084500T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_external_function */
extern void T232x24084613T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_formal_parameter_type */
extern void T232x24084596T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_class_type */
extern void T232x24084660T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_external_procedure_inline_agent */
extern void T232x24084610T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_once_procedure_inline_agent */
extern void T232x24084542T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_do_procedure_inline_agent */
extern void T232x24084629T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_external_function_inline_agent */
extern void T232x24084612T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_once_function_inline_agent */
extern void T232x24084545T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_do_function_inline_agent */
extern void T232x24084631T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_once_manifest_string */
extern void T232x24084544T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_old_object_test */
extern void T232x24084547T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_old_expression */
extern void T232x24084548T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_prefix_expression */
extern void T232x24084528T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_manifest_type */
extern void T232x24084553T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_infix_expression */
extern void T232x24084580T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_expression_address */
extern void T232x24084617T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_result_address */
extern void T232x24084512T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_current_address */
extern void T232x24084637T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_feature_address */
extern void T232x24084608T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_precursor_expression */
extern void T232x24084531T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_qualified_like_type */
extern void T232x24084521T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_qualified_like_braced_type */
extern void T232x24084522T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_like_feature */
extern void T232x24084565T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_external_procedure */
extern void T232x24084611T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_once_procedure */
extern void T232x24084543T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_deferred_function */
extern void T232x24084634T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_once_function */
extern void T232x24084546T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_do_function */
extern void T232x24084632T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_c2_character_constant */
extern void T232x24084669T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_c1_character_constant */
extern void T232x24084670T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_false_constant */
extern void T232x24084609T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_true_constant */
extern void T232x24084501T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_underscored_real_constant */
extern void T232x24084494T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_regular_real_constant */
extern void T232x24084517T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_binary_integer_constant */
extern void T232x24084676T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_octal_integer_constant */
extern void T232x24084549T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_hexadecimal_integer_constant */
extern void T232x24084594T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_underscored_integer_constant */
extern void T232x24084495T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_strip_expression */
extern void T232x24084506T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_static_call_expression */
extern void T232x24084508T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_parenthesized_expression */
extern void T232x24084534T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_manifest_array */
extern void T232x24084557T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_if_expression */
extern void T232x24084590T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_call_agent */
extern void T232x24084667T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_bracket_expression */
extern void T232x24084672T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_across_expression */
extern void T232x24084704T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_void */
extern void T232x24084485T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_regular_manifest_string */
extern void T232x24084518T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_named_object_test */
extern void T232x24084552T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_deferred_procedure */
extern void T232x24084633T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_do_procedure */
extern void T232x24084630T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_manifest_tuple */
extern void T232x24084554T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_result */
extern void T232x24084513T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_qualified_call_expression */
extern void T232x24084524T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_current */
extern void T232x24084638T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_identifier */
extern void T232x24084593T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AST_PROCESSOR.process_class */
extern void T232x24084662T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE.add_adapted_base_classes_to_list */
extern void T233x21708881T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_TYPE.reset */
extern void T233x14811146(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE.process */
extern void T233x19677194T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE.reset_qualified_anchored_types */
extern void T233x21708882(GE_context* ac, T0* C);
/* Call to [detachable] ET_TYPE.append_to_string */
extern void T233x21708880T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE.append_unaliased_to_string */
extern void T233x21708879T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_TYPE.append_runtime_name_to_string */
extern void T233x21708878T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_UNIVERSE.universes_do_if */
extern void T237x18776194T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_UNIVERSE.master_classes_do_if_until */
extern void T237x18776200T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to [detachable] ET_UNIVERSE.master_classes_do_if */
extern void T237x18776201T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_UNIVERSE.master_classes_do_until */
extern void T237x18776202T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_UNIVERSE.master_classes_do_all */
extern void T237x18776203T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_UNIVERSE.classes_do_if */
extern void T237x18776211T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_UNIVERSE.classes_do_until */
extern void T237x18776212T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_UNIVERSE.classes_do_all */
extern void T237x18776213T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_TYPE_MARK.append_to_string_with_space */
extern void T240x20086808T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T241x21086231(GE_context* ac, T0* C);
/* Call to detachable ET_ACTUAL_PARAMETERS.reset */
extern void T241x21086232(GE_context* ac, T0* C);
/* Call to detachable ET_ACTUAL_PARAMETERS.append_to_string */
extern void T241x21086230T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T241x21086229T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_ACTUAL_PARAMETERS.append_runtime_name_to_string */
extern void T241x21086228T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_DYNAMIC_TYPE_SET.put_target */
extern void T243x23527434T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to detachable ET_DYNAMIC_TYPE_SET.set_never_void */
extern void T243x23527435(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE_SET.propagate_can_be_void */
extern void T243x23412737T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_DYNAMIC_TYPE_SET.put_type_from_type_set */
extern void T243x23412739T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to [detachable] ET_DYNAMIC_TYPE.put_target */
extern void T244x23527434T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_DYNAMIC_TYPE.set_meta_type */
extern void T244x23494677T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_EXPRESSION.process */
extern void T271x19677194T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_EXPRESSION.reset */
extern void T271x14385156(GE_context* ac, T0* C);
/* Call to [detachable] ET_EXPRESSION.set_index */
extern void T271x16777220T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] ET_FEATURE.set_id */
extern void T275x17547347T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] ET_FEATURE.process */
extern void T275x19677194T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_FEATURE.set_other_seeds */
extern void T275x17547340T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_FEATURE.set_first_seed */
extern void T275x17547341T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] ET_FEATURE.set_clients */
extern void T275x17547348T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_FEATURE.set_version */
extern void T275x17547344T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] ET_FEATURE.set_other_precursors */
extern void T275x17547338T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_FEATURE.set_first_precursor */
extern void T275x17547339T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_FEATURE.reset_postconditions */
extern void T275x17547333(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.reset_preconditions */
extern void T275x17547334(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.set_implementation_class */
extern void T275x17547343T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_FEATURE.set_implementation_feature */
extern void T275x17547342T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_FEATURE.set_validity_error */
extern void T275x18251790(GE_context* ac, T0* C);
/* Call to [detachable] ET_FEATURE.set_validity_checked */
extern void T275x18251791(GE_context* ac, T0* C);
/* Call to [detachable] ET_CALL_NAME.set_seed */
extern void T303x20250671T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] ET_AGENT.set_arguments */
extern void T306x13910028T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AGENT.process */
extern void T306x19677194T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_CONSTANT.set_index */
extern void T312x16777220T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] ET_CONSTANT.process */
extern void T312x19677194T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_OPERAND.set_index */
extern void T336x16777220T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] ET_AGENT_TARGET.process */
extern void T337x19677194T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AGENT_TARGET.set_index */
extern void T337x16777220T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] ET_AGENT_TARGET.reset */
extern void T337x16777221(GE_context* ac, T0* C);
/* Call to [detachable] ET_AGENT_ARGUMENT_OPERAND.process */
extern void T339x19677194T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_AGENT_ARGUMENT_OPERAND.reset */
extern void T339x16777221(GE_context* ac, T0* C);
/* Call to [detachable] ET_MANIFEST_STRING.set_index */
extern void T358x16777220T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] ET_MANIFEST_STRING.set_type */
extern void T358x15826956T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_MANIFEST_STRING.set_cast_type */
extern void T358x15826957T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_ASSERTION.process */
extern void T398x19677194T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_ASSERTION.reset */
extern void T398x14385156(GE_context* ac, T0* C);
/* Call to [detachable] ET_EXTENDED_FEATURE_NAME.reset */
extern void T457x20348933(GE_context* ac, T0* C);
/* Call to [detachable] XM_EIFFEL_SCANNER.close_input */
extern void T498x28246039(GE_context* ac, T0* C);
/* Call to [detachable] XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T498x28246040T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] XM_EIFFEL_SCANNER.set_encoding */
extern void T498x28246038T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T498x28246043(GE_context* ac, T0* C);
/* Call to [detachable] XM_EIFFEL_SCANNER.read_token */
extern void T498x12222505(GE_context* ac, T0* C);
/* Call to [detachable] XM_EIFFEL_SCANNER.set_input_stream */
extern void T498x28246041T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] XM_DOCUMENT_NODE.node_set_parent */
extern void T563x29016066T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_DYNAMIC_TARGET.propagate_can_be_void */
extern void T670x23412737T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_DYNAMIC_TARGET.put_type_from_type_set */
extern void T670x23412739T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to [detachable] ET_INLINE_AGENT.set_result_index */
extern void T684x14221324T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] ET_INLINE_AGENT.set_attached_result_index */
extern void T684x14221323T6(GE_context* ac, T0* C, T6 a1);
/* Call to [detachable] ET_INLINE_AGENT.set_across_components */
extern void T684x17137678T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_INLINE_AGENT.set_object_tests */
extern void T684x17137679T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_INLINE_AGENT.set_actual_arguments */
extern void T684x13910028T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_INTERNAL_UNIVERSE.clusters_do_explicit */
extern void T798x18661418T0(GE_context* ac, T0* C, T0* a1);
/* Call to [detachable] ET_INTERNAL_UNIVERSE.dotnet_assemblies_do_if */
extern void T798x18661411T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_QUALIFIED_FEATURE_CALL_EXPRESSION.set_index */
extern void T846x16777220T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_ALIAS_NAME.reset */
extern void T874x20250672(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.set_prefix */
extern void T874x20168753(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.set_infix */
extern void T874x20168752(GE_context* ac, T0* C);
/* Call to detachable ET_CHARACTER_CONSTANT.set_index */
extern void T933x16777220T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_CHARACTER_CONSTANT.set_cast_type */
extern void T933x15728651T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_CHARACTER_CONSTANT.set_type */
extern void T933x15728650T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_INTEGER_CONSTANT.set_index */
extern void T943x16777220T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_INTEGER_CONSTANT.set_cast_type */
extern void T943x15810599T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_INTEGER_CONSTANT.set_type */
extern void T943x15810598T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_INTEGER_CONSTANT.set_sign */
extern void T943x15810600T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_ASSIGNER.reset */
extern void T997x17088514(GE_context* ac, T0* C);
/* Call to detachable ET_CHOICE.reset */
extern void T1009x18972677(GE_context* ac, T0* C);
/* Call to detachable ET_CHOICE_CONSTANT.reset */
extern void T1012x18972677(GE_context* ac, T0* C);
/* Call to detachable ET_INSTRUCTION.process */
extern void T1152x19677194T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_INSTRUCTION.reset */
extern void T1152x19283970(GE_context* ac, T0* C);
/* Call to detachable ET_LIKE_TYPE.reset_qualified_anchored_types */
extern void T1160x21708882(GE_context* ac, T0* C);
/* Call to detachable ET_LIKE_TYPE.reset */
extern void T1160x14811146(GE_context* ac, T0* C);
/* Call to detachable ET_LIKE_TYPE.append_to_string */
extern void T1160x21708880T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_TYPE_CONSTRAINT.reset */
extern void T1225x14811146(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_CONSTRAINT.reset_renames */
extern void T1225x14811145(GE_context* ac, T0* C);
/* Call to detachable ET_CONSTRAINT.reset */
extern void T1279x14811146(GE_context* ac, T0* C);
/* Call to detachable ET_CONSTRAINT.reset_renames */
extern void T1279x14811145(GE_context* ac, T0* C);
/* Call to [detachable] ET_ADAPTED_CLASS.add_overloaded_procedures */
extern void T1360x14581767T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] ET_ADAPTED_CLASS.add_overloaded_queries */
extern void T1360x14581768T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to [detachable] XM_ELEMENT_NODE.node_set_parent */
extern void T1399x29016066T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_UNTAGGED_ASSERTION.reset */
extern void T1489x14385156(GE_context* ac, T0* C);
/* Call to [detachable] ET_ECF_GROUP.set_options */
extern void T1662x13303824T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_OPERATOR.set_seed */
extern void T1680x20250671T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_OPERATOR.reset */
extern void T1680x20250672(GE_context* ac, T0* C);
/* Call to [detachable] ET_REGULAR_FEATURE_CALL.set_parenthesis_call */
extern void T1947x19496962T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to [detachable] ET_CALL_WITH_ACTUAL_ARGUMENT_LIST.set_arguments */
extern void T1951x18939906T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable LX_TRANSITION [[attached] LX_NFA_STATE].record */
extern void T2078x25804804T0(GE_context* ac, T0* C, T0* a1);
/* New instance of type [detachable] SPECIAL [CHARACTER_8] */
extern T0* GE_new15(T6 a1, T1 initialize);
/* New instance of type [detachable] SPECIAL [CHARACTER_32] */
extern T0* GE_new16(T6 a1, T1 initialize);
/* New instance of type [detachable] STRING_8 */
extern T0* GE_new17(T1 initialize);
/* New instance of type [detachable] STRING_32 */
extern T0* GE_new18(T1 initialize);
/* New instance of type [detachable] IMMUTABLE_STRING_32 */
extern T0* GE_new19(T1 initialize);
/* New instance of type [detachable] ISE_EXCEPTION_MANAGER */
extern T0* GE_new20(T1 initialize);
/* New instance of type [detachable] GEC */
extern T0* GE_new24(T1 initialize);
/* New instance of type [detachable] CELL [detachable EXCEPTION] */
extern T0* GE_new25(T1 initialize);
/* New instance of type [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32] */
extern T0* GE_new26(T1 initialize);
/* New instance of type [detachable] CELL [detachable TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN]] */
extern T0* GE_new27(T1 initialize);
/* New instance of type [detachable] CELL [[attached] NO_MORE_MEMORY] */
extern T0* GE_new28(T1 initialize);
/* New instance of type detachable C_STRING */
extern T0* GE_new29(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN] */
extern T0* GE_new30(T1 initialize);
/* New instance of type [detachable] KL_TEXT_INPUT_FILE */
extern T0* GE_new31(T1 initialize);
/* New instance of type [detachable] KL_ARGUMENTS */
extern T0* GE_new32(T1 initialize);
/* New instance of type [detachable] ET_ISE_VARIABLES */
extern T0* GE_new33(T1 initialize);
/* New instance of type [detachable] ET_ERROR_HANDLER */
extern T0* GE_new34(T1 initialize);
/* New instance of type detachable ET_SYSTEM */
extern T0* GE_new35(T1 initialize);
/* New instance of type [detachable] KL_EXCEPTIONS */
extern T0* GE_new37(T1 initialize);
/* New instance of type [detachable] AP_PARSER */
extern T0* GE_new38(T1 initialize);
/* New instance of type [detachable] AP_ALTERNATIVE_OPTIONS_LIST */
extern T0* GE_new39(T1 initialize);
/* New instance of type [detachable] AP_STRING_OPTION */
extern T0* GE_new40(T1 initialize);
/* New instance of type [detachable] AP_FLAG */
extern T0* GE_new42(T1 initialize);
/* New instance of type [detachable] UT_VERSION */
extern T0* GE_new43(T1 initialize);
/* New instance of type [detachable] AP_ENUMERATION_OPTION */
extern T0* GE_new44(T1 initialize);
/* New instance of type [detachable] AP_BOOLEAN_OPTION */
extern T0* GE_new45(T1 initialize);
/* New instance of type [detachable] AP_INTEGER_OPTION */
extern T0* GE_new46(T1 initialize);
/* New instance of type [detachable] ET_NULL_ERROR_HANDLER */
extern T0* GE_new50(T1 initialize);
/* New instance of type [detachable] ET_ECF_SYSTEM_PARSER */
extern T0* GE_new52(T1 initialize);
/* New instance of type [detachable] ET_ECF_ERROR_HANDLER */
extern T0* GE_new53(T1 initialize);
/* New instance of type detachable ET_ECF_SETTINGS */
extern T0* GE_new54(T1 initialize);
/* New instance of type [detachable] ET_ECF_SYSTEM */
extern T0* GE_new55(T1 initialize);
/* New instance of type [detachable] ET_ECF_TARGET */
extern T0* GE_new56(T1 initialize);
/* New instance of type detachable ET_ECF_CAPABILITIES */
extern T0* GE_new58(T1 initialize);
/* New instance of type detachable ET_ECF_VARIABLES */
extern T0* GE_new59(T1 initialize);
/* New instance of type [detachable] ET_DYNAMIC_SYSTEM */
extern T0* GE_new60(T1 initialize);
/* New instance of type [detachable] ET_SYSTEM_PROCESSOR */
extern T0* GE_new61(T1 initialize);
/* New instance of type [detachable] ET_C_GENERATOR */
extern T0* GE_new64(T1 initialize);
/* New instance of type [detachable] KL_SHELL_COMMAND */
extern T0* GE_new65(T1 initialize);
/* New instance of type detachable DT_DATE_TIME */
extern T0* GE_new66(T1 initialize);
/* New instance of type detachable DS_HASH_SET [[attached] STRING_8] */
extern T0* GE_new68(T1 initialize);
/* New instance of type [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
extern T0* GE_new69(T1 initialize);
/* New instance of type [detachable] ET_CLASS_TYPE */
extern T0* GE_new70(T1 initialize);
/* New instance of type [detachable] ET_TOKEN_CONSTANTS */
extern T0* GE_new71(T1 initialize);
/* New instance of type [detachable] ET_CLASS */
extern T0* GE_new72(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new74(T1 initialize);
/* New instance of type [detachable] KL_OPERATING_SYSTEM */
extern T0* GE_new75(T1 initialize);
/* New instance of type [detachable] UT_CANNOT_READ_FILE_ERROR */
extern T0* GE_new78(T1 initialize);
/* New instance of type [detachable] UT_VERSION_NUMBER */
extern T0* GE_new80(T1 initialize);
/* New instance of type [detachable] UT_MESSAGE */
extern T0* GE_new81(T1 initialize);
/* New instance of type [detachable] RX_PCRE_REGULAR_EXPRESSION */
extern T0* GE_new82(T1 initialize);
/* New instance of type [detachable] KL_STRING_ROUTINES */
extern T0* GE_new83(T1 initialize);
/* New instance of type [detachable] KL_EXECUTION_ENVIRONMENT */
extern T0* GE_new86(T1 initialize);
/* New instance of type [detachable] AP_ERROR */
extern T0* GE_new87(T1 initialize);
/* New instance of type [detachable] VOID_TARGET */
extern T0* GE_new90(T1 initialize);
/* New instance of type [detachable] ROUTINE_FAILURE */
extern T0* GE_new92(T1 initialize);
/* New instance of type [detachable] OLD_VIOLATION */
extern T0* GE_new94(T1 initialize);
/* New instance of type [detachable] NO_MORE_MEMORY */
extern T0* GE_new96(T1 initialize);
/* New instance of type [detachable] INVARIANT_VIOLATION */
extern T0* GE_new97(T1 initialize);
/* New instance of type [detachable] OPERATING_SYSTEM_SIGNAL_FAILURE */
extern T0* GE_new98(T1 initialize);
/* New instance of type [detachable] IO_FAILURE */
extern T0* GE_new99(T1 initialize);
/* New instance of type [detachable] OPERATING_SYSTEM_FAILURE */
extern T0* GE_new100(T1 initialize);
/* New instance of type [detachable] COM_FAILURE */
extern T0* GE_new101(T1 initialize);
/* New instance of type [detachable] EIFFEL_RUNTIME_PANIC */
extern T0* GE_new102(T1 initialize);
/* New instance of type [detachable] PRECONDITION_VIOLATION */
extern T0* GE_new104(T1 initialize);
/* New instance of type [detachable] POSTCONDITION_VIOLATION */
extern T0* GE_new105(T1 initialize);
/* New instance of type [detachable] FLOATING_POINT_FAILURE */
extern T0* GE_new106(T1 initialize);
/* New instance of type [detachable] CHECK_VIOLATION */
extern T0* GE_new107(T1 initialize);
/* New instance of type [detachable] BAD_INSPECT_VALUE */
extern T0* GE_new108(T1 initialize);
/* New instance of type [detachable] VARIANT_VIOLATION */
extern T0* GE_new109(T1 initialize);
/* New instance of type [detachable] LOOP_INVARIANT_VIOLATION */
extern T0* GE_new110(T1 initialize);
/* New instance of type [detachable] RESCUE_FAILURE */
extern T0* GE_new111(T1 initialize);
/* New instance of type [detachable] RESUMPTION_FAILURE */
extern T0* GE_new112(T1 initialize);
/* New instance of type [detachable] CREATE_ON_DEFERRED */
extern T0* GE_new113(T1 initialize);
/* New instance of type [detachable] EXTERNAL_FAILURE */
extern T0* GE_new114(T1 initialize);
/* New instance of type [detachable] VOID_ASSIGNED_TO_EXPANDED */
extern T0* GE_new115(T1 initialize);
/* New instance of type [detachable] EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
extern T0* GE_new116(T1 initialize);
/* New instance of type [detachable] MISMATCH_FAILURE */
extern T0* GE_new117(T1 initialize);
/* New instance of type [detachable] DEVELOPER_EXCEPTION */
extern T0* GE_new118(T1 initialize);
/* New instance of type [detachable] ADDRESS_APPLIED_TO_MELTED_FEATURE */
extern T0* GE_new119(T1 initialize);
/* New instance of type [detachable] SERIALIZATION_FAILURE */
extern T0* GE_new120(T1 initialize);
/* New instance of type [detachable] EXECUTION_ENVIRONMENT */
extern T0* GE_new121(T1 initialize);
/* New instance of type [detachable] KL_WINDOWS_FILE_SYSTEM */
extern T0* GE_new122(T1 initialize);
/* New instance of type [detachable] KL_UNIX_FILE_SYSTEM */
extern T0* GE_new123(T1 initialize);
/* New instance of type [detachable] PRIMES */
extern T0* GE_new124(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] INTEGER_32] */
extern T0* GE_new125(T6 a1, T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] BOOLEAN] */
extern T0* GE_new126(T6 a1, T1 initialize);
/* New instance of type detachable KL_LINKABLE [[attached] CHARACTER_8] */
extern T0* GE_new128(T1 initialize);
/* New instance of type [detachable] MANAGED_POINTER */
extern T0* GE_new130(T1 initialize);
/* New instance of type [detachable] FILE_INFO */
extern T0* GE_new131(T1 initialize);
/* New instance of type [detachable] MUTEX */
extern T0* GE_new132(T1 initialize);
/* New instance of type [detachable] UT_ERROR_HANDLER */
extern T0* GE_new133(T1 initialize);
/* New instance of type [detachable] KL_STANDARD_FILES */
extern T0* GE_new134(T1 initialize);
/* New instance of type [detachable] KL_STDERR_FILE */
extern T0* GE_new135(T1 initialize);
/* New instance of type [detachable] KL_STDOUT_FILE */
extern T0* GE_new136(T1 initialize);
/* New instance of type [detachable] ST_WORD_WRAPPER */
extern T0* GE_new137(T1 initialize);
/* New instance of type [detachable] AP_DISPLAY_HELP_FLAG */
extern T0* GE_new139(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION] */
extern T0* GE_new140(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new141(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] STRING_8] */
extern T0* GE_new142(T1 initialize);
/* New instance of type [detachable] AP_ERROR_HANDLER */
extern T0* GE_new143(T1 initialize);
/* New instance of type [detachable] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION] */
extern T0* GE_new144(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [detachable STRING_8] */
extern T0* GE_new145(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [detachable STRING_8] */
extern T0* GE_new146(T1 initialize);
/* New instance of type [detachable] DS_LINKED_LIST [[attached] STRING_8] */
extern T0* GE_new147(T1 initialize);
/* New instance of type [detachable] KL_STRING_EQUALITY_TESTER */
extern T0* GE_new148(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [[attached] STRING_8] */
extern T0* GE_new149(T1 initialize);
/* New instance of type [detachable] DS_LINKED_LIST [[attached] BOOLEAN] */
extern T0* GE_new152(T1 initialize);
/* New instance of type [detachable] DS_LINKED_LIST [[attached] INTEGER_32] */
extern T0* GE_new155(T1 initialize);
/* New instance of type [detachable] KL_NULL_TEXT_OUTPUT_STREAM */
extern T0* GE_new156(T1 initialize);
/* New instance of type [detachable] ET_ECF_AST_FACTORY */
extern T0* GE_new157(T1 initialize);
/* New instance of type [detachable] DS_CELL [detachable ET_ECF_SYSTEM] */
extern T0* GE_new158(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_TARGET] */
extern T0* GE_new159(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_TARGET]] */
extern T0* GE_new160(T1 initialize);
/* New instance of type detachable TUPLE */
extern T0* GE_new161(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_SYSTEM_PARSER] */
extern T0* GE_new162(T1 initialize);
/* New instance of type [detachable] XM_ELEMENT */
extern T0* GE_new163(T1 initialize);
/* New instance of type detachable XM_POSITION_TABLE */
extern T0* GE_new164(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8] */
extern T0* GE_new165(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8]] */
extern T0* GE_new166(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_SYSTEM_PARSER, [detachable] STRING_8, [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_TARGET]], [attached] DS_CELL [detachable ET_ECF_SYSTEM]] */
extern T0* GE_new167(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8] */
extern T0* GE_new169(T1 initialize);
/* New instance of type [detachable] KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
extern T0* GE_new170(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8] */
extern T0* GE_new171(T1 initialize);
/* New instance of type [detachable] XM_EIFFEL_PARSER */
extern T0* GE_new173(T1 initialize);
/* New instance of type [detachable] XM_TREE_CALLBACKS_PIPE */
extern T0* GE_new174(T1 initialize);
/* New instance of type [detachable] XM_CALLBACKS_TO_TREE_FILTER */
extern T0* GE_new177(T1 initialize);
/* New instance of type [detachable] ET_ECF_STATE */
extern T0* GE_new178(T1 initialize);
/* New instance of type [detachable] ET_IDENTIFIER */
extern T0* GE_new179(T1 initialize);
/* New instance of type [detachable] ET_ECF_SYSTEM_CONFIG */
extern T0* GE_new180(T1 initialize);
/* New instance of type [detachable] ET_ECF_LIBRARY */
extern T0* GE_new182(T1 initialize);
/* New instance of type [detachable] ET_ADAPTED_LIBRARIES */
extern T0* GE_new183(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ADAPTED_LIBRARY] */
extern T0* GE_new185(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_LIBRARY]] */
extern T0* GE_new186(T1 initialize);
/* New instance of type [detachable] XM_DOCUMENT */
extern T0* GE_new187(T1 initialize);
/* New instance of type [detachable] ET_COMPRESSED_POSITION */
extern T0* GE_new188(T1 initialize);
/* New instance of type [detachable] XM_STOP_ON_ERROR_FILTER */
extern T0* GE_new190(T1 initialize);
/* New instance of type detachable XM_ATTRIBUTE */
extern T0* GE_new191(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8] */
extern T0* GE_new193(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8] */
extern T0* GE_new194(T1 initialize);
/* New instance of type detachable ET_ECF_TARGET_PARENT */
extern T0* GE_new195(T1 initialize);
/* New instance of type [detachable] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new196(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_SYSTEM_PARSER, [attached] ET_ECF_INTERNAL_UNIVERSE, [attached] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
extern T0* GE_new197(T1 initialize);
/* New instance of type detachable ET_ECF_TARGETS */
extern T0* GE_new198(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
extern T0* GE_new199(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
extern T0* GE_new200(T1 initialize);
/* New instance of type [detachable] DS_CELL [detachable ET_ECF_LIBRARY] */
extern T0* GE_new201(T1 initialize);
/* New instance of type [detachable] ET_ECF_ADAPTED_LIBRARY */
extern T0* GE_new202(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_SYSTEM_PARSER, [attached] ET_ECF_ADAPTED_LIBRARY, [attached] DS_CELL [detachable ET_ECF_LIBRARY]] */
extern T0* GE_new203(T1 initialize);
/* New instance of type [detachable] ET_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new205(T1 initialize);
/* New instance of type [detachable] ET_ECF_DOTNET_ASSEMBLY */
extern T0* GE_new206(T1 initialize);
/* New instance of type [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
extern T0* GE_new208(T1 initialize);
/* New instance of type [detachable] ET_ECF_ERROR */
extern T0* GE_new209(T1 initialize);
/* New instance of type [detachable] KL_AGENT_HASH_FUNCTION [[attached] STRING_8] */
extern T0* GE_new210(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8] */
extern T0* GE_new211(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] STRING_8] */
extern T0* GE_new212(T1 initialize);
/* New instance of type [detachable] FUNCTION [[attached] TUPLE [[attached] STRING_8], [attached] INTEGER_32] */
extern T0* GE_new213(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] KL_STRING_ROUTINES] */
extern T0* GE_new214(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8] */
extern T0* GE_new216(T1 initialize);
/* New instance of type [detachable] ET_DYNAMIC_PRIMARY_TYPE */
extern T0* GE_new218(T1 initialize);
/* New instance of type [detachable] ET_DYNAMIC_FEATURE_LIST */
extern T0* GE_new219(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME] */
extern T0* GE_new220(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8] */
extern T0* GE_new221(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_CLASS] */
extern T0* GE_new222(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]] */
extern T0* GE_new223(T1 initialize);
/* New instance of type [detachable] TUPLE [INTEGER_32] */
extern T0* GE_new224(T1 initialize);
/* New instance of type [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
extern T0* GE_new225(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_DYNAMIC_SYSTEM] */
extern T0* GE_new226(T1 initialize);
/* New instance of type detachable ET_DYNAMIC_FEATURE */
extern T0* GE_new231(T1 initialize);
/* New instance of type [detachable] ET_ACTUAL_PARAMETER_LIST */
extern T0* GE_new235(T1 initialize);
/* New instance of type [detachable] ET_NESTED_TYPE_CONTEXT */
extern T0* GE_new236(T1 initialize);
/* New instance of type [detachable] ET_FORMAL_PARAMETER_TYPE */
extern T0* GE_new245(T1 initialize);
/* New instance of type [detachable] ET_EXTERNAL_FUNCTION */
extern T0* GE_new246(T1 initialize);
/* New instance of type [detachable] ET_TUPLE_TYPE */
extern T0* GE_new247(T1 initialize);
/* New instance of type detachable ET_FORMAL_ARGUMENT_LIST */
extern T0* GE_new248(T1 initialize);
/* New instance of type [detachable] ARRAY [[attached] ET_TYPE] */
extern T0* GE_new249(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_TYPE] */
extern T0* GE_new250(T6 a1, T1 initialize);
/* New instance of type [detachable] ET_FORMAL_ARGUMENT */
extern T0* GE_new251(T1 initialize);
/* New instance of type [detachable] ET_QUERY_LIST */
extern T0* GE_new252(T1 initialize);
/* New instance of type [detachable] ET_PROCEDURE_LIST */
extern T0* GE_new253(T1 initialize);
/* New instance of type [detachable] ET_DYNAMIC_TYPE_SET_LIST */
extern T0* GE_new254(T1 initialize);
/* New instance of type [detachable] KL_STRING_OUTPUT_STREAM */
extern T0* GE_new255(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER] */
extern T0* GE_new256(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new257(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32] */
extern T0* GE_new258(T1 initialize);
/* New instance of type [detachable] ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST */
extern T0* GE_new259(T1 initialize);
/* New instance of type [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET */
extern T0* GE_new260(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_STACK [[attached] ET_EXPRESSION] */
extern T0* GE_new261(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_EXPRESSION] */
extern T0* GE_new262(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32] */
extern T0* GE_new263(T1 initialize);
/* New instance of type [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
extern T0* GE_new264(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new265(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new266(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST] */
extern T0* GE_new267(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new268(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION] */
extern T0* GE_new269(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_AGENT] */
extern T0* GE_new270(T1 initialize);
/* New instance of type [detachable] ET_CURRENT */
extern T0* GE_new272(T1 initialize);
/* New instance of type [detachable] ET_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new273(T1 initialize);
/* New instance of type [detachable] ET_QUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new274(T1 initialize);
/* New instance of type [detachable] ET_QUALIFIED_CALL_EXPRESSION */
extern T0* GE_new277(T1 initialize);
/* New instance of type [detachable] ET_UNQUALIFIED_CALL_EXPRESSION */
extern T0* GE_new278(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new279(T1 initialize);
/* New instance of type [detachable] ET_MANIFEST_TUPLE */
extern T0* GE_new280(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new281(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE] */
extern T0* GE_new282(T1 initialize);
/* New instance of type [detachable] ARRAY [[attached] INTEGER_32] */
extern T0* GE_new283(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE] */
extern T0* GE_new284(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT] */
extern T0* GE_new285(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new286(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE] */
extern T0* GE_new287(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8] */
extern T0* GE_new288(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER] */
extern T0* GE_new289(T1 initialize);
/* New instance of type [detachable] ET_IDENTIFIER_TESTER */
extern T0* GE_new290(T1 initialize);
/* New instance of type [detachable] KL_TEXT_OUTPUT_FILE */
extern T0* GE_new292(T1 initialize);
/* New instance of type [detachable] ET_DYNAMIC_TUPLE_TYPE */
extern T0* GE_new293(T1 initialize);
/* New instance of type [detachable] DS_STRING_HASH_TABLE */
extern T0* GE_new294(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8] */
extern T0* GE_new295(T1 initialize);
/* New instance of type [detachable] UT_CANNOT_WRITE_TO_FILE_ERROR */
extern T0* GE_new296(T1 initialize);
/* New instance of type detachable ET_DYNAMIC_PRECURSOR */
extern T0* GE_new297(T1 initialize);
/* New instance of type detachable ET_DYNAMIC_PRECURSOR_LIST */
extern T0* GE_new298(T1 initialize);
/* New instance of type [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new299(T1 initialize);
/* New instance of type [detachable] ET_RESULT */
extern T0* GE_new300(T1 initialize);
/* New instance of type detachable ET_DYNAMIC_QUALIFIED_QUERY_CALL */
extern T0* GE_new301(T1 initialize);
/* New instance of type detachable ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
extern T0* GE_new305(T1 initialize);
/* New instance of type [detachable] ET_OBJECT_TEST */
extern T0* GE_new307(T1 initialize);
/* New instance of type [detachable] ET_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new308(T1 initialize);
/* New instance of type [detachable] ET_EQUALITY_EXPRESSION */
extern T0* GE_new309(T1 initialize);
/* New instance of type [detachable] ET_DYNAMIC_SPECIAL_TYPE */
extern T0* GE_new310(T1 initialize);
/* New instance of type [detachable] DS_QUICK_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new313(T1 initialize);
/* New instance of type detachable ET_DYNAMIC_SECONDARY_TYPE */
extern T0* GE_new314(T1 initialize);
/* New instance of type [detachable] ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID */
extern T0* GE_new315(T1 initialize);
/* New instance of type [detachable] ET_CREATE_EXPRESSION */
extern T0* GE_new319(T1 initialize);
/* New instance of type [detachable] ET_QUALIFIED_CALL */
extern T0* GE_new320(T1 initialize);
/* New instance of type [detachable] ARRAY [[attached] STRING_8] */
extern T0* GE_new323(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] STRING_8] */
extern T0* GE_new324(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_DIRECTORY */
extern T0* GE_new326(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new327(T1 initialize);
/* New instance of type [detachable] ET_EXTENDED_ATTRIBUTE */
extern T0* GE_new328(T1 initialize);
/* New instance of type detachable ET_COMPOUND */
extern T0* GE_new329(T1 initialize);
/* New instance of type detachable ET_LOCAL_VARIABLE_LIST */
extern T0* GE_new330(T1 initialize);
/* New instance of type [detachable] DS_QUICK_SORTER [[attached] INTEGER_32] */
extern T0* GE_new334(T1 initialize);
/* New instance of type [detachable] ET_IMPLICIT_TYPE_MARK */
extern T0* GE_new341(T1 initialize);
/* New instance of type [detachable] ET_SYMBOL */
extern T0* GE_new342(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE] */
extern T0* GE_new343(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_C_GENERATOR, [attached] ET_IDENTIFIER, [attached] ET_CURRENT, [attached] ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new344(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_C_GENERATOR, [attached] ET_IDENTIFIER, [attached] ET_RESULT, [attached] ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new345(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_C_GENERATOR, [attached] ET_DYNAMIC_FEATURE, [attached] ET_RESULT, [attached] ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new346(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_C_GENERATOR, INTEGER_32, [attached] ET_RESULT, [attached] ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new347(T1 initialize);
/* New instance of type [detachable] UT_INTEGER_FORMATTER */
extern T0* GE_new348(T1 initialize);
/* New instance of type [detachable] STD_FILES */
extern T0* GE_new351(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_C_GENERATOR, INTEGER_32, [attached] ET_EXPRESSION, [attached] ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new353(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_C_GENERATOR, [attached] ET_EXPRESSION, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new355(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_C_GENERATOR, [attached] ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new356(T1 initialize);
/* New instance of type [detachable] ET_CONSTANT_ATTRIBUTE */
extern T0* GE_new357(T1 initialize);
/* New instance of type [detachable] ET_UNIQUE_ATTRIBUTE */
extern T0* GE_new359(T1 initialize);
/* New instance of type [detachable] ET_REGULAR_INTEGER_CONSTANT */
extern T0* GE_new360(T1 initialize);
/* New instance of type [detachable] ET_ATTRIBUTE */
extern T0* GE_new361(T1 initialize);
/* New instance of type [detachable] NATIVE_STRING */
extern T0* GE_new363(T1 initialize);
/* New instance of type [detachable] ET_SYSTEM_MULTIPROCESSOR */
extern T0* GE_new364(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET_CURSOR [[attached] STRING_8] */
extern T0* GE_new365(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] STRING_8] */
extern T0* GE_new366(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] INTEGER_32] */
extern T0* GE_new368(T1 initialize);
/* New instance of type [detachable] ET_FEATURE_CHECKER */
extern T0* GE_new369(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new370(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new371(T1 initialize);
/* New instance of type [detachable] ET_TYPE_CHECKER */
extern T0* GE_new373(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT] */
extern T0* GE_new375(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
extern T0* GE_new376(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
extern T0* GE_new377(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
extern T0* GE_new378(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]] */
extern T0* GE_new379(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new380(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST] */
extern T0* GE_new381(T1 initialize);
/* New instance of type [detachable] ET_OBJECT_TEST_SCOPE */
extern T0* GE_new382(T1 initialize);
/* New instance of type [detachable] ET_OBJECT_TEST_SCOPE_BUILDER */
extern T0* GE_new383(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT] */
extern T0* GE_new384(T1 initialize);
/* New instance of type [detachable] ET_ACROSS_CURSOR_SCOPE */
extern T0* GE_new385(T1 initialize);
/* New instance of type [detachable] ET_ATTACHMENT_SCOPE */
extern T0* GE_new386(T1 initialize);
/* New instance of type [detachable] ET_ATTACHMENT_SCOPE_BUILDER */
extern T0* GE_new387(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE] */
extern T0* GE_new388(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM] */
extern T0* GE_new389(T1 initialize);
/* New instance of type [detachable] ET_CLIENT_LIST */
extern T0* GE_new390(T1 initialize);
/* New instance of type [detachable] ET_CLIENT */
extern T0* GE_new391(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]] */
extern T0* GE_new392(T1 initialize);
/* New instance of type [detachable] ET_ADAPTED_BASE_CLASS_CHECKER */
extern T0* GE_new393(T1 initialize);
/* New instance of type detachable ET_PRECONDITIONS */
extern T0* GE_new394(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE] */
extern T0* GE_new395(T1 initialize);
/* New instance of type detachable ET_FEATURE_LIST */
extern T0* GE_new397(T1 initialize);
/* New instance of type [detachable] ET_UNKNOWN_GROUP */
extern T0* GE_new399(T1 initialize);
/* New instance of type [detachable] ET_BASE_TYPE_LIST */
extern T0* GE_new401(T1 initialize);
/* New instance of type [detachable] ET_KEYWORD */
extern T0* GE_new402(T1 initialize);
/* New instance of type [detachable] ET_CLASS_CODES */
extern T0* GE_new403(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new404(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new405(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new406(T1 initialize);
/* New instance of type [detachable] PATH */
extern T0* GE_new409(T1 initialize);
/* New instance of type [detachable] RX_BYTE_CODE */
extern T0* GE_new411(T1 initialize);
/* New instance of type [detachable] RX_CHARACTER_SET */
extern T0* GE_new412(T1 initialize);
/* New instance of type [detachable] RX_CASE_MAPPING */
extern T0* GE_new413(T1 initialize);
/* New instance of type [detachable] ARRAY [[attached] RX_CHARACTER_SET] */
extern T0* GE_new415(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] RX_CHARACTER_SET] */
extern T0* GE_new416(T6 a1, T1 initialize);
/* New instance of type [detachable] UC_STRING */
extern T0* GE_new417(T1 initialize);
/* New instance of type [detachable] KL_ANY_ROUTINES */
extern T0* GE_new418(T1 initialize);
/* New instance of type [detachable] STRING_TO_INTEGER_CONVERTOR */
extern T0* GE_new419(T1 initialize);
/* New instance of type [detachable] ARGUMENTS_32 */
extern T0* GE_new421(T1 initialize);
/* New instance of type [detachable] ET_ECF_OPTIONS */
extern T0* GE_new427(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new428(T1 initialize);
/* New instance of type [detachable] XM_NAMESPACE */
extern T0* GE_new429(T1 initialize);
/* New instance of type [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE] */
extern T0* GE_new430(T1 initialize);
/* New instance of type [detachable] ET_LIKE_CURRENT */
extern T0* GE_new432(T1 initialize);
/* New instance of type [detachable] ET_DYNAMIC_PROCEDURE_TYPE */
extern T0* GE_new433(T1 initialize);
/* New instance of type [detachable] ET_DYNAMIC_FUNCTION_TYPE */
extern T0* GE_new434(T1 initialize);
/* New instance of type [detachable] DT_SHARED_SYSTEM_CLOCK */
extern T0* GE_new435(T1 initialize);
/* New instance of type [detachable] DT_SYSTEM_CLOCK */
extern T0* GE_new436(T1 initialize);
/* New instance of type [detachable] ET_EIFFEL_PREPARSER */
extern T0* GE_new437(T1 initialize);
/* New instance of type [detachable] ET_MASTER_CLASS_CHECKER */
extern T0* GE_new438(T1 initialize);
/* New instance of type [detachable] ET_EIFFEL_PARSER */
extern T0* GE_new439(T1 initialize);
/* New instance of type [detachable] ET_PROVIDER_CHECKER */
extern T0* GE_new440(T1 initialize);
/* New instance of type [detachable] ET_ANCESTOR_BUILDER */
extern T0* GE_new441(T1 initialize);
/* New instance of type [detachable] ET_FEATURE_FLATTENER */
extern T0* GE_new442(T1 initialize);
/* New instance of type [detachable] ET_INTERFACE_CHECKER */
extern T0* GE_new443(T1 initialize);
/* New instance of type [detachable] ET_IMPLEMENTATION_CHECKER */
extern T0* GE_new444(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS] */
extern T0* GE_new445(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] DS_ARRAYED_LIST [[attached] ET_CLASS]] */
extern T0* GE_new446(T1 initialize);
/* New instance of type [detachable] ET_AST_NULL_PROCESSOR */
extern T0* GE_new447(T1 initialize);
/* New instance of type [detachable] ET_AST_FACTORY */
extern T0* GE_new448(T1 initialize);
/* New instance of type [detachable] ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
extern T0* GE_new450(T1 initialize);
/* New instance of type [detachable] DT_DATE_TIME_DURATION */
extern T0* GE_new451(T1 initialize);
/* New instance of type [detachable] UT_CONFIG_PARSER */
extern T0* GE_new452(T1 initialize);
/* New instance of type [detachable] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32] */
extern T0* GE_new453(T1 initialize);
/* New instance of type [detachable] ET_DO_PROCEDURE */
extern T0* GE_new456(T1 initialize);
/* New instance of type [detachable] ET_DEFERRED_PROCEDURE */
extern T0* GE_new458(T1 initialize);
/* New instance of type [detachable] ET_DYNAMIC_PUSH_TYPE_SET */
extern T0* GE_new459(T1 initialize);
/* New instance of type [detachable] KL_PLATFORM */
extern T0* GE_new460(T1 initialize);
/* New instance of type [detachable] UC_UNICODE_ROUTINES */
extern T0* GE_new461(T1 initialize);
/* New instance of type [detachable] CELL [[attached] INTEGER_32] */
extern T0* GE_new463(T1 initialize);
/* New instance of type [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32] */
extern T0* GE_new464(T1 initialize);
/* New instance of type [detachable] KL_PATHNAME */
extern T0* GE_new466(T1 initialize);
/* New instance of type [detachable] EXCEPTIONS */
extern T0* GE_new467(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] NATURAL_8] */
extern T0* GE_new469(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION] */
extern T0* GE_new471(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] AP_OPTION] */
extern T0* GE_new473(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] AP_OPTION] */
extern T0* GE_new474(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new475(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new476(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new477(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8] */
extern T0* GE_new478(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable STRING_8] */
extern T0* GE_new479(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable STRING_8] */
extern T0* GE_new480(T1 initialize);
/* New instance of type [detachable] DS_LINKED_LIST_CURSOR [[attached] STRING_8] */
extern T0* GE_new481(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] STRING_8] */
extern T0* GE_new482(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] BOOLEAN] */
extern T0* GE_new483(T1 initialize);
/* New instance of type [detachable] DS_LINKED_LIST_CURSOR [[attached] BOOLEAN] */
extern T0* GE_new484(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] INTEGER_32] */
extern T0* GE_new485(T1 initialize);
/* New instance of type [detachable] DS_LINKED_LIST_CURSOR [[attached] INTEGER_32] */
extern T0* GE_new486(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8] */
extern T0* GE_new488(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_LIBRARY] */
extern T0* GE_new489(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY] */
extern T0* GE_new492(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new493(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8] */
extern T0* GE_new496(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new497(T1 initialize);
/* New instance of type [detachable] XM_EIFFEL_SCANNER */
extern T0* GE_new498(T1 initialize);
/* New instance of type [detachable] XM_DEFAULT_POSITION */
extern T0* GE_new499(T1 initialize);
/* New instance of type [detachable] DS_BILINKED_LIST [[attached] XM_POSITION] */
extern T0* GE_new501(T1 initialize);
/* New instance of type [detachable] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER] */
extern T0* GE_new502(T1 initialize);
/* New instance of type [detachable] XM_CALLBACKS_NULL */
extern T0* GE_new503(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8] */
extern T0* GE_new504(T1 initialize);
/* New instance of type [detachable] XM_NULL_EXTERNAL_RESOLVER */
extern T0* GE_new506(T1 initialize);
/* New instance of type [detachable] XM_DTD_CALLBACKS_NULL */
extern T0* GE_new508(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ANY] */
extern T0* GE_new509(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ANY] */
extern T0* GE_new510(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new511(T1 initialize);
/* New instance of type [detachable] XM_EIFFEL_PARSER_NAME */
extern T0* GE_new512(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new513(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new514(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new515(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new516(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID] */
extern T0* GE_new517(T1 initialize);
/* New instance of type [detachable] XM_DTD_EXTERNAL_ID */
extern T0* GE_new518(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] XM_DTD_EXTERNAL_ID] */
extern T0* GE_new519(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new520(T1 initialize);
/* New instance of type [detachable] XM_DTD_ELEMENT_CONTENT */
extern T0* GE_new521(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new522(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new523(T1 initialize);
/* New instance of type [detachable] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new524(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new525(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new526(T1 initialize);
/* New instance of type [detachable] XM_DTD_ATTRIBUTE_CONTENT */
extern T0* GE_new527(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new528(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]] */
extern T0* GE_new529(T1 initialize);
/* New instance of type [detachable] DS_BILINKED_LIST [[attached] STRING_8] */
extern T0* GE_new530(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]] */
extern T0* GE_new531(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] BOOLEAN] */
extern T0* GE_new532(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION] */
extern T0* GE_new533(T1 initialize);
/* New instance of type [detachable] XM_EIFFEL_DECLARATION */
extern T0* GE_new534(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] XM_EIFFEL_DECLARATION] */
extern T0* GE_new535(T6 a1, T1 initialize);
/* New instance of type [detachable] XM_EIFFEL_ENTITY_DEF */
extern T0* GE_new538(T1 initialize);
/* New instance of type [detachable] XM_EIFFEL_SCANNER_DTD */
extern T0* GE_new539(T1 initialize);
/* New instance of type [detachable] XM_EIFFEL_PE_ENTITY_DEF */
extern T0* GE_new541(T1 initialize);
/* New instance of type [detachable] XM_NAMESPACE_RESOLVER */
extern T0* GE_new542(T1 initialize);
/* New instance of type [detachable] ARRAY [[attached] XM_CALLBACKS_FILTER] */
extern T0* GE_new543(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] XM_CALLBACKS_FILTER] */
extern T0* GE_new544(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_HASH_SET [[attached] XM_NAMESPACE] */
extern T0* GE_new545(T1 initialize);
/* New instance of type [detachable] ET_CLUSTERS */
extern T0* GE_new546(T1 initialize);
/* New instance of type [detachable] ET_CLASS_NAME_TESTER */
extern T0* GE_new547(T1 initialize);
/* New instance of type [detachable] ET_PARENT */
extern T0* GE_new549(T1 initialize);
/* New instance of type [detachable] ET_PARENT_LIST */
extern T0* GE_new550(T1 initialize);
/* New instance of type [detachable] ET_BUILTIN_CONVERT_FEATURE */
extern T0* GE_new551(T1 initialize);
/* New instance of type [detachable] ET_MASTER_CLASS */
extern T0* GE_new552(T1 initialize);
/* New instance of type [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD */
extern T0* GE_new553(T1 initialize);
/* New instance of type detachable ET_RENAME_LIST */
extern T0* GE_new554(T1 initialize);
/* New instance of type detachable ET_EXPORT_LIST */
extern T0* GE_new555(T1 initialize);
/* New instance of type detachable ET_KEYWORD_FEATURE_NAME_LIST */
extern T0* GE_new556(T1 initialize);
/* New instance of type [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new559(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY] */
extern T0* GE_new560(T1 initialize);
/* New instance of type [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE] */
extern T0* GE_new561(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new564(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new566(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8] */
extern T0* GE_new567(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8] */
extern T0* GE_new568(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_TARGET] */
extern T0* GE_new569(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET] */
extern T0* GE_new571(T1 initialize);
/* New instance of type detachable DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
extern T0* GE_new573(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
extern T0* GE_new574(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable RX_REGULAR_EXPRESSION] */
extern T0* GE_new575(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new576(T1 initialize);
/* New instance of type [detachable] ET_DOTNET_ASSEMBLIES */
extern T0* GE_new577(T1 initialize);
/* New instance of type [detachable] ET_DOTNET_ASSEMBLY */
extern T0* GE_new578(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER] */
extern T0* GE_new581(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_IDENTIFIER] */
extern T0* GE_new582(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8] */
extern T0* GE_new583(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32] */
extern T0* GE_new584(T1 initialize);
/* New instance of type detachable ET_FORMAL_PARAMETER_LIST */
extern T0* GE_new585(T1 initialize);
/* New instance of type detachable ET_FEATURE_IDS */
extern T0* GE_new586(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_DYNAMIC_FEATURE] */
extern T0* GE_new587(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_FEATURE] */
extern T0* GE_new588(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME] */
extern T0* GE_new591(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS] */
extern T0* GE_new592(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_MASTER_CLASS] */
extern T0* GE_new593(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME] */
extern T0* GE_new594(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_CLASS_NAME] */
extern T0* GE_new595(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8] */
extern T0* GE_new597(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new601(T6 a1, T1 initialize);
/* New instance of type [detachable] ET_BRACKET_SYMBOL */
extern T0* GE_new602(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new604(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE] */
extern T0* GE_new605(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new606(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new607(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_IDENTIFIER] */
extern T0* GE_new608(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new609(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new610(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new611(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] INTEGER_32] */
extern T0* GE_new612(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_EXPRESSION] */
extern T0* GE_new614(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION] */
extern T0* GE_new615(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_EXPRESSION] */
extern T0* GE_new616(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [[attached] INTEGER_32] */
extern T0* GE_new617(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32] */
extern T0* GE_new618(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new619(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new620(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new621(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_OBJECT_TEST] */
extern T0* GE_new623(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST] */
extern T0* GE_new624(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_TEST] */
extern T0* GE_new625(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new626(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new627(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new628(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_EQUALITY_EXPRESSION] */
extern T0* GE_new629(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION] */
extern T0* GE_new630(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_EQUALITY_EXPRESSION] */
extern T0* GE_new631(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_AGENT] */
extern T0* GE_new632(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_AGENT] */
extern T0* GE_new633(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_AGENT] */
extern T0* GE_new634(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_EXPRESSION_ITEM] */
extern T0* GE_new635(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION_ITEM] */
extern T0* GE_new637(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new638(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new639(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new640(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new641(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new642(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new643(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FEATURE] */
extern T0* GE_new645(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_FEATURE] */
extern T0* GE_new646(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE] */
extern T0* GE_new647(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE] */
extern T0* GE_new648(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_CONSTANT] */
extern T0* GE_new649(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CONSTANT] */
extern T0* GE_new651(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT] */
extern T0* GE_new652(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_INLINE_CONSTANT] */
extern T0* GE_new653(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT] */
extern T0* GE_new655(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new656(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new658(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new659(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_FEATURE] */
extern T0* GE_new660(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8] */
extern T0* GE_new661(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER] */
extern T0* GE_new664(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new667(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]] */
extern T0* GE_new668(T1 initialize);
/* New instance of type [detachable] ARRAY [[attached] BOOLEAN] */
extern T0* GE_new669(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_SYSTEM_PROCESSOR] */
extern T0* GE_new672(T1 initialize);
/* New instance of type [detachable] WORKER_THREAD */
extern T0* GE_new673(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_SYSTEM_PROCESSOR, [attached] DS_ARRAYED_LIST [[attached] ET_CLASS]] */
extern T0* GE_new674(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new678(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new679(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new680(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS] */
extern T0* GE_new682(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_AGENT] */
extern T0* GE_new683(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_INLINE_AGENT] */
extern T0* GE_new685(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_INLINE_AGENT] */
extern T0* GE_new686(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
extern T0* GE_new687(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE] */
extern T0* GE_new688(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
extern T0* GE_new689(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
extern T0* GE_new690(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
extern T0* GE_new691(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY] */
extern T0* GE_new692(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
extern T0* GE_new693(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
extern T0* GE_new694(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
extern T0* GE_new695(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_FEATURE] */
extern T0* GE_new696(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
extern T0* GE_new697(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
extern T0* GE_new698(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]] */
extern T0* GE_new699(T1 initialize);
/* New instance of type [detachable] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new700(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]] */
extern T0* GE_new701(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]] */
extern T0* GE_new702(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new703(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new704(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new705(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST] */
extern T0* GE_new706(T1 initialize);
/* New instance of type [detachable] ET_NAMED_OBJECT_TEST */
extern T0* GE_new709(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_NAMED_OBJECT_TEST] */
extern T0* GE_new710(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST] */
extern T0* GE_new711(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST] */
extern T0* GE_new712(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT] */
extern T0* GE_new713(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ACROSS_COMPONENT] */
extern T0* GE_new716(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT] */
extern T0* GE_new717(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT] */
extern T0* GE_new718(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET [[attached] INTEGER_32] */
extern T0* GE_new719(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ATTACHMENT_SCOPE] */
extern T0* GE_new721(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE] */
extern T0* GE_new722(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ATTACHMENT_SCOPE] */
extern T0* GE_new723(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM] */
extern T0* GE_new724(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_INDEXING_TERM] */
extern T0* GE_new726(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_INDEXING_TERM] */
extern T0* GE_new727(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_CLIENT_ITEM] */
extern T0* GE_new728(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_ITEM] */
extern T0* GE_new729(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]] */
extern T0* GE_new730(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]] */
extern T0* GE_new731(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]] */
extern T0* GE_new732(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE] */
extern T0* GE_new733(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ASSERTIONS] */
extern T0* GE_new734(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS] */
extern T0* GE_new736(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME] */
extern T0* GE_new737(T1 initialize);
/* New instance of type [detachable] STRING_8_SEARCHER */
extern T0* GE_new738(T1 initialize);
/* New instance of type detachable ARRAYED_LIST [[attached] INTEGER_32] */
extern T0* GE_new739(T1 initialize);
/* New instance of type [detachable] ET_SYSTEM_ERROR */
extern T0* GE_new740(T1 initialize);
/* New instance of type [detachable] ET_INTERNAL_ERROR */
extern T0* GE_new741(T1 initialize);
/* New instance of type [detachable] ET_VALIDITY_ERROR */
extern T0* GE_new742(T1 initialize);
/* New instance of type detachable ET_ECF_NOTE_ELEMENT */
extern T0* GE_new743(T1 initialize);
/* New instance of type detachable ET_ECF_CLUSTERS */
extern T0* GE_new744(T1 initialize);
/* New instance of type detachable ET_ECF_ADAPTED_LIBRARIES */
extern T0* GE_new745(T1 initialize);
/* New instance of type detachable ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new746(T1 initialize);
/* New instance of type detachable ET_ECF_FILE_RULES */
extern T0* GE_new747(T1 initialize);
/* New instance of type detachable ET_ECF_EXTERNAL_CFLAGS */
extern T0* GE_new748(T1 initialize);
/* New instance of type detachable ET_ECF_EXTERNAL_INCLUDES */
extern T0* GE_new749(T1 initialize);
/* New instance of type detachable ET_ECF_EXTERNAL_LIBRARIES */
extern T0* GE_new750(T1 initialize);
/* New instance of type detachable ET_ECF_EXTERNAL_LINKER_FLAGS */
extern T0* GE_new751(T1 initialize);
/* New instance of type detachable ET_ECF_EXTERNAL_MAKES */
extern T0* GE_new752(T1 initialize);
/* New instance of type detachable ET_ECF_EXTERNAL_OBJECTS */
extern T0* GE_new753(T1 initialize);
/* New instance of type detachable ET_ECF_EXTERNAL_RESOURCES */
extern T0* GE_new754(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [[attached] ET_ECF_ACTION] */
extern T0* GE_new755(T1 initialize);
/* New instance of type detachable ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
extern T0* GE_new756(T1 initialize);
/* New instance of type detachable ET_ECF_VERSION */
extern T0* GE_new758(T1 initialize);
/* New instance of type detachable ET_ECF_CLUSTER */
extern T0* GE_new759(T1 initialize);
/* New instance of type detachable ET_ECF_EXTERNAL_CFLAG */
extern T0* GE_new760(T1 initialize);
/* New instance of type detachable ET_ECF_EXTERNAL_INCLUDE */
extern T0* GE_new761(T1 initialize);
/* New instance of type detachable ET_ECF_EXTERNAL_LIBRARY */
extern T0* GE_new762(T1 initialize);
/* New instance of type detachable ET_ECF_EXTERNAL_LINKER_FLAG */
extern T0* GE_new763(T1 initialize);
/* New instance of type detachable ET_ECF_EXTERNAL_MAKE */
extern T0* GE_new764(T1 initialize);
/* New instance of type detachable ET_ECF_EXTERNAL_OBJECT */
extern T0* GE_new765(T1 initialize);
/* New instance of type detachable ET_ECF_EXTERNAL_RESOURCE */
extern T0* GE_new766(T1 initialize);
/* New instance of type detachable ET_ECF_FILE_RULE */
extern T0* GE_new767(T1 initialize);
/* New instance of type detachable ET_ECF_ACTION */
extern T0* GE_new768(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
extern T0* GE_new769(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new770(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_OPTIONS] */
extern T0* GE_new771(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_OPTIONS]] */
extern T0* GE_new772(T1 initialize);
/* New instance of type detachable ET_ECF_ROOT_CLASS */
extern T0* GE_new773(T1 initialize);
/* New instance of type [detachable] ET_ECF_ROOT_ALL_CLASSES */
extern T0* GE_new774(T1 initialize);
/* New instance of type [detachable] ET_ECF_ORED_CONDITIONS */
extern T0* GE_new775(T1 initialize);
/* New instance of type detachable ET_ECF_ANDED_CONDITIONS */
extern T0* GE_new776(T1 initialize);
/* New instance of type detachable ET_ECF_VISIBLE_CLASS */
extern T0* GE_new777(T1 initialize);
/* New instance of type detachable ET_ECF_BUILD_CONDITION */
extern T0* GE_new779(T1 initialize);
/* New instance of type detachable ET_ECF_CONCURRENCY_CONDITION */
extern T0* GE_new780(T1 initialize);
/* New instance of type detachable ET_ECF_VOID_SAFETY_CONDITION */
extern T0* GE_new781(T1 initialize);
/* New instance of type detachable ET_ECF_CUSTOM_CONDITION */
extern T0* GE_new782(T1 initialize);
/* New instance of type detachable ET_ECF_DOTNET_CONDITION */
extern T0* GE_new783(T1 initialize);
/* New instance of type detachable ET_ECF_DYNAMIC_RUNTIME_CONDITION */
extern T0* GE_new784(T1 initialize);
/* New instance of type detachable ET_ECF_PLATFORM_CONDITION */
extern T0* GE_new785(T1 initialize);
/* New instance of type [detachable] ET_ECF_COMPILER_VERSION_CONDITION */
extern T0* GE_new787(T1 initialize);
/* New instance of type [detachable] ET_ECF_MSIL_CLR_VERSION_CONDITION */
extern T0* GE_new788(T1 initialize);
/* New instance of type [detachable] UT_COUNTER */
extern T0* GE_new790(T1 initialize);
/* New instance of type [detachable] KL_AGENT_ROUTINES [[attached] ET_CLASS] */
extern T0* GE_new791(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] UT_COUNTER] */
extern T0* GE_new792(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ET_CLASS], [attached] PROCEDURE [[attached] TUPLE]] */
extern T0* GE_new793(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_UNIVERSE] */
extern T0* GE_new794(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_UNIVERSE]] */
extern T0* GE_new795(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]]] */
extern T0* GE_new796(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
extern T0* GE_new797(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new799(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new800(T1 initialize);
/* New instance of type [detachable] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new801(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new802(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new803(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_INTERNAL_UNIVERSE] */
extern T0* GE_new804(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new805(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]]] */
extern T0* GE_new806(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_DOTNET_ASSEMBLIES] */
extern T0* GE_new807(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_SYSTEM_PROCESSOR] */
extern T0* GE_new808(T1 initialize);
/* New instance of type [detachable] ET_LIBRARY */
extern T0* GE_new809(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_LIBRARY] */
extern T0* GE_new810(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_LIBRARY]] */
extern T0* GE_new811(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET [[attached] ET_UNIVERSE] */
extern T0* GE_new812(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_CLUSTER] */
extern T0* GE_new814(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]] */
extern T0* GE_new815(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_SYSTEM] */
extern T0* GE_new816(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE] */
extern T0* GE_new817(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_AST_PROCESSOR] */
extern T0* GE_new818(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_MASTER_CLASS] */
extern T0* GE_new819(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]] */
extern T0* GE_new820(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new821(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY]] */
extern T0* GE_new822(T1 initialize);
/* New instance of type [detachable] ET_ANCESTORS_STATUS_CHECKER */
extern T0* GE_new823(T1 initialize);
/* New instance of type [detachable] ET_FLATTENING_STATUS_CHECKER */
extern T0* GE_new824(T1 initialize);
/* New instance of type [detachable] ET_INTERFACE_STATUS_CHECKER */
extern T0* GE_new825(T1 initialize);
/* New instance of type [detachable] ET_IMPLEMENTATION_STATUS_CHECKER */
extern T0* GE_new826(T1 initialize);
/* New instance of type [detachable] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]] */
extern T0* GE_new827(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ANCESTORS_STATUS_CHECKER] */
extern T0* GE_new829(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_FLATTENING_STATUS_CHECKER] */
extern T0* GE_new830(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_INTERFACE_STATUS_CHECKER] */
extern T0* GE_new831(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_IMPLEMENTATION_STATUS_CHECKER] */
extern T0* GE_new832(T1 initialize);
/* New instance of type [detachable] TUPLE [BOOLEAN] */
extern T0* GE_new833(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] DS_HASH_SET [[attached] ET_UNIVERSE]] */
extern T0* GE_new834(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]]] */
extern T0* GE_new837(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new841(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]]] */
extern T0* GE_new842(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_CLASS], [attached] BOOLEAN]] */
extern T0* GE_new843(T1 initialize);
/* New instance of type [detachable] ET_NONE_GROUP */
extern T0* GE_new844(T1 initialize);
/* New instance of type detachable ET_PARENTHESIS_EXPRESSION */
extern T0* GE_new845(T1 initialize);
/* New instance of type [detachable] ET_REGULAR_MANIFEST_STRING */
extern T0* GE_new848(T1 initialize);
/* New instance of type [detachable] ET_INFIX_FREE_NAME */
extern T0* GE_new849(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new851(T1 initialize);
/* New instance of type [detachable] ET_FORMAL_PARAMETER */
extern T0* GE_new852(T1 initialize);
/* New instance of type [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE] */
extern T0* GE_new854(T1 initialize);
/* New instance of type [detachable] UC_STRING_EQUALITY_TESTER */
extern T0* GE_new856(T1 initialize);
/* New instance of type [detachable] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
extern T0* GE_new858(T1 initialize);
/* New instance of type [detachable] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
extern T0* GE_new859(T1 initialize);
/* New instance of type [detachable] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE] */
extern T0* GE_new860(T1 initialize);
/* New instance of type [detachable] UC_UTF8_ROUTINES */
extern T0* GE_new861(T1 initialize);
/* New instance of type [detachable] UC_UTF8_STRING */
extern T0* GE_new862(T1 initialize);
/* New instance of type [detachable] XM_EIFFEL_INPUT_STREAM */
extern T0* GE_new863(T1 initialize);
/* New instance of type [detachable] KL_INTEGER_ROUTINES */
extern T0* GE_new864(T1 initialize);
/* New instance of type [detachable] KL_ARRAY_ROUTINES [[attached] INTEGER_32] */
extern T0* GE_new865(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET [[attached] ET_LIBRARY] */
extern T0* GE_new866(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] DS_HASH_SET [[attached] ET_LIBRARY]] */
extern T0* GE_new867(T1 initialize);
/* New instance of type [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE] */
extern T0* GE_new868(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET] */
extern T0* GE_new869(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE] */
extern T0* GE_new870(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT] */
extern T0* GE_new872(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_QUERY] */
extern T0* GE_new873(T6 a1, T1 initialize);
/* New instance of type detachable ET_ALIAS_NAME */
extern T0* GE_new874(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_QUERY] */
extern T0* GE_new875(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_PROCEDURE] */
extern T0* GE_new876(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PROCEDURE] */
extern T0* GE_new877(T1 initialize);
/* New instance of type [detachable] CONSOLE */
extern T0* GE_new884(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new885(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_BASE_TYPE] */
extern T0* GE_new887(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE] */
extern T0* GE_new888(T1 initialize);
/* New instance of type [detachable] INTEGER_OVERFLOW_CHECKER */
extern T0* GE_new889(T1 initialize);
/* New instance of type [detachable] ARRAY [[attached] IMMUTABLE_STRING_32] */
extern T0* GE_new890(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] IMMUTABLE_STRING_32] */
extern T0* GE_new891(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new892(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new893(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new894(T1 initialize);
/* New instance of type detachable C_DATE */
extern T0* GE_new895(T1 initialize);
/* New instance of type [detachable] YY_FILE_BUFFER */
extern T0* GE_new896(T1 initialize);
/* New instance of type [detachable] KL_STDIN_FILE */
extern T0* GE_new897(T1 initialize);
/* New instance of type [detachable] YY_BUFFER */
extern T0* GE_new898(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_STACK [[attached] INTEGER_32] */
extern T0* GE_new902(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new903(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new904(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_STACK [detachable ET_KEYWORD] */
extern T0* GE_new905(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_STACK [detachable ET_SYMBOL] */
extern T0* GE_new906(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new907(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST] */
extern T0* GE_new908(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new909(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new910(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM] */
extern T0* GE_new911(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new912(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS] */
extern T0* GE_new913(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
extern T0* GE_new914(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_KEYWORD] */
extern T0* GE_new915(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new916(T1 initialize);
/* New instance of type detachable ET_AGENT_KEYWORD */
extern T0* GE_new917(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new918(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new919(T1 initialize);
/* New instance of type detachable ET_PRECURSOR_KEYWORD */
extern T0* GE_new920(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new921(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
extern T0* GE_new922(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_SYMBOL] */
extern T0* GE_new923(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
extern T0* GE_new924(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_POSITION] */
extern T0* GE_new925(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new926(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new928(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
extern T0* GE_new929(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_BREAK] */
extern T0* GE_new931(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new932(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new934(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
extern T0* GE_new935(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CURRENT] */
extern T0* GE_new936(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
extern T0* GE_new937(T1 initialize);
/* New instance of type detachable ET_FREE_OPERATOR */
extern T0* GE_new938(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_FREE_OPERATOR] */
extern T0* GE_new939(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER] */
extern T0* GE_new940(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_IDENTIFIER] */
extern T0* GE_new941(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new942(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new944(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new945(T1 initialize);
/* New instance of type detachable ET_KEYWORD_OPERATOR */
extern T0* GE_new946(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new947(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
extern T0* GE_new948(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_MANIFEST_STRING] */
extern T0* GE_new949(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
extern T0* GE_new950(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_REAL_CONSTANT] */
extern T0* GE_new952(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
extern T0* GE_new953(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_RESULT] */
extern T0* GE_new954(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new955(T1 initialize);
/* New instance of type detachable ET_RETRY_INSTRUCTION */
extern T0* GE_new956(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new957(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new958(T1 initialize);
/* New instance of type detachable ET_SYMBOL_OPERATOR */
extern T0* GE_new959(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new960(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_VOID] */
extern T0* GE_new961(T1 initialize);
/* New instance of type detachable ET_VOID */
extern T0* GE_new962(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_VOID] */
extern T0* GE_new963(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new964(T1 initialize);
/* New instance of type detachable ET_SEMICOLON_SYMBOL */
extern T0* GE_new965(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new966(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new967(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new968(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new969(T1 initialize);
/* New instance of type detachable ET_QUESTION_MARK_SYMBOL */
extern T0* GE_new970(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new971(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new972(T1 initialize);
/* New instance of type detachable ET_ACROSS_EXPRESSION */
extern T0* GE_new973(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new974(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new975(T1 initialize);
/* New instance of type detachable ET_ACROSS_INSTRUCTION */
extern T0* GE_new976(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new977(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new978(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new979(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new980(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new981(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new982(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new983(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new984(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new985(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new986(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new988(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new989(T1 initialize);
/* New instance of type detachable ET_AGENT_ARGUMENT_OPERAND_LIST */
extern T0* GE_new990(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new991(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
extern T0* GE_new992(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_AGENT_TARGET] */
extern T0* GE_new993(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
extern T0* GE_new994(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_ALIAS_NAME] */
extern T0* GE_new995(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
extern T0* GE_new996(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_ASSIGNER] */
extern T0* GE_new998(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new999(T1 initialize);
/* New instance of type detachable ET_BRACKET_EXPRESSION */
extern T0* GE_new1000(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new1001(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
extern T0* GE_new1002(T1 initialize);
/* New instance of type detachable ET_CALL_AGENT */
extern T0* GE_new1003(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CALL_AGENT] */
extern T0* GE_new1004(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new1005(T1 initialize);
/* New instance of type detachable ET_CHECK_INSTRUCTION */
extern T0* GE_new1006(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new1007(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
extern T0* GE_new1008(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CHOICE] */
extern T0* GE_new1010(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new1011(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new1013(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
extern T0* GE_new1014(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CHOICE_ITEM] */
extern T0* GE_new1016(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
extern T0* GE_new1017(T1 initialize);
/* New instance of type detachable ET_CHOICE_LIST */
extern T0* GE_new1018(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CHOICE_LIST] */
extern T0* GE_new1019(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
extern T0* GE_new1020(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CLASS] */
extern T0* GE_new1021(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
extern T0* GE_new1022(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CLIENT_ITEM] */
extern T0* GE_new1023(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
extern T0* GE_new1024(T1 initialize);
/* New instance of type detachable ET_CLIENTS */
extern T0* GE_new1025(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CLIENTS] */
extern T0* GE_new1026(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
extern T0* GE_new1027(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_COMPOUND] */
extern T0* GE_new1028(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
extern T0* GE_new1029(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CONDITIONAL] */
extern T0* GE_new1031(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
extern T0* GE_new1032(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CONSTANT] */
extern T0* GE_new1033(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1034(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1036(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1037(T1 initialize);
/* New instance of type detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
extern T0* GE_new1038(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1039(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new1040(T1 initialize);
/* New instance of type detachable ET_CONSTRAINT_CREATOR */
extern T0* GE_new1041(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new1042(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST] */
extern T0* GE_new1043(T1 initialize);
/* New instance of type detachable ET_CONSTRAINT_RENAME_LIST */
extern T0* GE_new1044(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST] */
extern T0* GE_new1045(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1046(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1048(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new1049(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new1051(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1052(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1054(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new1055(T1 initialize);
/* New instance of type detachable ET_CONVERT_FEATURE_LIST */
extern T0* GE_new1056(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new1057(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new1058(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new1059(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
extern T0* GE_new1060(T1 initialize);
/* New instance of type detachable ET_CREATION_REGION */
extern T0* GE_new1061(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CREATION_REGION] */
extern T0* GE_new1062(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
extern T0* GE_new1063(T1 initialize);
/* New instance of type detachable ET_CREATOR */
extern T0* GE_new1064(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CREATOR] */
extern T0* GE_new1065(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
extern T0* GE_new1066(T1 initialize);
/* New instance of type detachable ET_CREATOR_LIST */
extern T0* GE_new1067(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_CREATOR_LIST] */
extern T0* GE_new1068(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new1069(T1 initialize);
/* New instance of type detachable ET_DEBUG_INSTRUCTION */
extern T0* GE_new1070(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new1071(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
extern T0* GE_new1072(T1 initialize);
/* New instance of type detachable ET_ELSEIF_EXPRESSION */
extern T0* GE_new1073(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
extern T0* GE_new1074(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
extern T0* GE_new1075(T1 initialize);
/* New instance of type detachable ET_ELSEIF_EXPRESSION_LIST */
extern T0* GE_new1076(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
extern T0* GE_new1077(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
extern T0* GE_new1078(T1 initialize);
/* New instance of type detachable ET_ELSEIF_PART */
extern T0* GE_new1079(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_ELSEIF_PART] */
extern T0* GE_new1080(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new1081(T1 initialize);
/* New instance of type detachable ET_ELSEIF_PART_LIST */
extern T0* GE_new1082(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new1083(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
extern T0* GE_new1084(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_EXPORT] */
extern T0* GE_new1086(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
extern T0* GE_new1087(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_EXPORT_LIST] */
extern T0* GE_new1088(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
extern T0* GE_new1089(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_EXPRESSION] */
extern T0* GE_new1090(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
extern T0* GE_new1091(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_EXPRESSION_ITEM] */
extern T0* GE_new1092(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new1093(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new1094(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new1095(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new1097(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new1098(T1 initialize);
/* New instance of type detachable ET_FEATURE_CLAUSE */
extern T0* GE_new1099(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new1100(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new1101(T1 initialize);
/* New instance of type detachable ET_FEATURE_CLAUSE_LIST */
extern T0* GE_new1102(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new1103(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new1104(T1 initialize);
/* New instance of type detachable ET_FEATURE_EXPORT */
extern T0* GE_new1105(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new1106(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
extern T0* GE_new1107(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_FEATURE_NAME] */
extern T0* GE_new1108(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1109(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1111(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new1112(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new1113(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1114(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1116(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new1117(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new1118(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new1119(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new1120(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1121(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1123(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new1124(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new1125(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
extern T0* GE_new1126(T1 initialize);
/* New instance of type detachable ET_IF_EXPRESSION */
extern T0* GE_new1127(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_IF_EXPRESSION] */
extern T0* GE_new1128(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new1129(T1 initialize);
/* New instance of type detachable ET_IF_INSTRUCTION */
extern T0* GE_new1130(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new1131(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
extern T0* GE_new1132(T1 initialize);
/* New instance of type detachable ET_INDEXING_LIST */
extern T0* GE_new1133(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_INDEXING_LIST] */
extern T0* GE_new1134(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
extern T0* GE_new1135(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_INDEXING_ITEM] */
extern T0* GE_new1137(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
extern T0* GE_new1138(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_INDEXING_TERM] */
extern T0* GE_new1139(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
extern T0* GE_new1140(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
extern T0* GE_new1142(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
extern T0* GE_new1143(T1 initialize);
/* New instance of type detachable ET_INDEXING_TERM_LIST */
extern T0* GE_new1144(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_INDEXING_TERM_LIST] */
extern T0* GE_new1145(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
extern T0* GE_new1146(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_INLINE_AGENT] */
extern T0* GE_new1147(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new1148(T1 initialize);
/* New instance of type detachable ET_INSPECT_INSTRUCTION */
extern T0* GE_new1149(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new1150(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
extern T0* GE_new1151(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_INSTRUCTION] */
extern T0* GE_new1153(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
extern T0* GE_new1154(T1 initialize);
/* New instance of type detachable ET_INVARIANTS */
extern T0* GE_new1155(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_INVARIANTS] */
extern T0* GE_new1156(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new1157(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new1158(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
extern T0* GE_new1159(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_LIKE_TYPE] */
extern T0* GE_new1161(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new1162(T1 initialize);
/* New instance of type detachable ET_LOCAL_VARIABLE */
extern T0* GE_new1163(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new1164(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1165(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1167(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new1168(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new1169(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new1170(T1 initialize);
/* New instance of type detachable ET_LOOP_INVARIANTS */
extern T0* GE_new1171(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new1172(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new1173(T1 initialize);
/* New instance of type detachable ET_MANIFEST_ARRAY */
extern T0* GE_new1174(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new1175(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1176(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1178(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new1179(T1 initialize);
/* New instance of type detachable ET_MANIFEST_STRING_LIST */
extern T0* GE_new1180(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new1181(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new1182(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new1183(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
extern T0* GE_new1184(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_OBSOLETE] */
extern T0* GE_new1186(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new1187(T1 initialize);
/* New instance of type detachable ET_PARENTHESIZED_EXPRESSION */
extern T0* GE_new1188(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new1189(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
extern T0* GE_new1190(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_PARENT] */
extern T0* GE_new1191(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
extern T0* GE_new1192(T1 initialize);
/* New instance of type detachable ET_PARENT_CLAUSE_LIST */
extern T0* GE_new1193(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
extern T0* GE_new1194(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
extern T0* GE_new1195(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_PARENT_ITEM] */
extern T0* GE_new1196(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
extern T0* GE_new1197(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_PARENT_LIST] */
extern T0* GE_new1198(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
extern T0* GE_new1199(T1 initialize);
/* New instance of type detachable ET_POSTCONDITIONS */
extern T0* GE_new1200(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_POSTCONDITIONS] */
extern T0* GE_new1201(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
extern T0* GE_new1202(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_PRECONDITIONS] */
extern T0* GE_new1203(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
extern T0* GE_new1204(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_PROCEDURE] */
extern T0* GE_new1205(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new1206(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new1208(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
extern T0* GE_new1209(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_QUERY] */
extern T0* GE_new1210(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
extern T0* GE_new1211(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_RENAME_ITEM] */
extern T0* GE_new1213(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
extern T0* GE_new1214(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_RENAME_LIST] */
extern T0* GE_new1215(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new1216(T1 initialize);
/* New instance of type detachable ET_STATIC_CALL_EXPRESSION */
extern T0* GE_new1217(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new1218(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new1219(T1 initialize);
/* New instance of type detachable ET_STRIP_EXPRESSION */
extern T0* GE_new1220(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new1221(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
extern T0* GE_new1222(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_TYPE] */
extern T0* GE_new1223(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT] */
extern T0* GE_new1224(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT] */
extern T0* GE_new1226(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM] */
extern T0* GE_new1227(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM] */
extern T0* GE_new1229(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST] */
extern T0* GE_new1230(T1 initialize);
/* New instance of type detachable ET_TYPE_CONSTRAINT_LIST */
extern T0* GE_new1231(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST] */
extern T0* GE_new1232(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
extern T0* GE_new1233(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_TYPE_ITEM] */
extern T0* GE_new1235(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
extern T0* GE_new1236(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_TYPE_LIST] */
extern T0* GE_new1238(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
extern T0* GE_new1239(T1 initialize);
/* New instance of type detachable ET_VARIANT */
extern T0* GE_new1240(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_VARIANT] */
extern T0* GE_new1241(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
extern T0* GE_new1242(T1 initialize);
/* New instance of type detachable ET_WHEN_PART */
extern T0* GE_new1243(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_WHEN_PART] */
extern T0* GE_new1244(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new1245(T1 initialize);
/* New instance of type detachable ET_WHEN_PART_LIST */
extern T0* GE_new1246(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new1247(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
extern T0* GE_new1248(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_WRITABLE] */
extern T0* GE_new1249(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS] */
extern T0* GE_new1250(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS] */
extern T0* GE_new1251(T1 initialize);
/* New instance of type [detachable] ET_PARENT_CHECKER1 */
extern T0* GE_new1252(T1 initialize);
/* New instance of type [detachable] ET_FORMAL_PARAMETER_CHECKER1 */
extern T0* GE_new1253(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME] */
extern T0* GE_new1254(T1 initialize);
/* New instance of type [detachable] ET_FEATURE_NAME_TESTER */
extern T0* GE_new1255(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME] */
extern T0* GE_new1257(T1 initialize);
/* New instance of type [detachable] ET_ALIAS_NAME_TESTER */
extern T0* GE_new1258(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST] */
extern T0* GE_new1260(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS] */
extern T0* GE_new1261(T1 initialize);
/* New instance of type [detachable] ET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1262(T1 initialize);
/* New instance of type [detachable] ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1263(T1 initialize);
/* New instance of type [detachable] ET_IDENTIFIER_TYPE_RESOLVER */
extern T0* GE_new1264(T1 initialize);
/* New instance of type [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
extern T0* GE_new1265(T1 initialize);
/* New instance of type [detachable] ET_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1266(T1 initialize);
/* New instance of type [detachable] ET_SIGNATURE_CHECKER */
extern T0* GE_new1267(T1 initialize);
/* New instance of type [detachable] ET_PARENT_CHECKER2 */
extern T0* GE_new1268(T1 initialize);
/* New instance of type [detachable] ET_FORMAL_PARAMETER_CHECKER2 */
extern T0* GE_new1269(T1 initialize);
/* New instance of type [detachable] ET_BUILTIN_FEATURE_CHECKER */
extern T0* GE_new1270(T1 initialize);
/* New instance of type [detachable] ET_PRECURSOR_CHECKER */
extern T0* GE_new1271(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32] */
extern T0* GE_new1272(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET [[attached] ET_CLASS] */
extern T0* GE_new1273(T1 initialize);
/* New instance of type [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1274(T1 initialize);
/* New instance of type [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
extern T0* GE_new1275(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME] */
extern T0* GE_new1276(T1 initialize);
/* New instance of type [detachable] ET_CALL_NAME_TESTER */
extern T0* GE_new1277(T1 initialize);
/* New instance of type [detachable] ET_RENAME */
extern T0* GE_new1282(T1 initialize);
/* New instance of type [detachable] ET_PARENT_CHECKER3 */
extern T0* GE_new1283(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET [[attached] ET_PROCEDURE] */
extern T0* GE_new1284(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET [[attached] ET_QUERY] */
extern T0* GE_new1285(T1 initialize);
/* New instance of type [detachable] ET_SUPPLIER_BUILDER */
extern T0* GE_new1286(T1 initialize);
/* New instance of type detachable ET_PARENT_FEATURE */
extern T0* GE_new1289(T1 initialize);
/* New instance of type [detachable] ET_INHERITED_FEATURE */
extern T0* GE_new1290(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_CLASS] */
extern T0* GE_new1291(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLASS] */
extern T0* GE_new1292(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS] */
extern T0* GE_new1293(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_STACK [[attached] YY_BUFFER] */
extern T0* GE_new1294(T1 initialize);
/* New instance of type [detachable] UT_SYNTAX_ERROR */
extern T0* GE_new1295(T1 initialize);
/* New instance of type [detachable] UT_TOO_MANY_INCLUDES_ERROR */
extern T0* GE_new1296(T1 initialize);
/* New instance of type detachable ET_DYNAMIC_TARGET_LIST */
extern T0* GE_new1298(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]] */
extern T0* GE_new1299(T6 a1, T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]] */
extern T0* GE_new1300(T6 a1, T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] NATIVE_STRING] */
extern T0* GE_new1301(T6 a1, T1 initialize);
/* New instance of type [detachable] ARRAY [detachable STRING_8] */
extern T0* GE_new1302(T1 initialize);
/* New instance of type [detachable] XM_EIFFEL_CHARACTER_ENTITY */
extern T0* GE_new1303(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [[attached] XM_POSITION] */
extern T0* GE_new1305(T1 initialize);
/* New instance of type [detachable] DS_BILINKED_LIST_CURSOR [[attached] XM_POSITION] */
extern T0* GE_new1306(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] XM_EIFFEL_SCANNER] */
extern T0* GE_new1307(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1308(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8] */
extern T0* GE_new1311(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1312(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [[attached] XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1315(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET_CURSOR [[attached] XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1316(T1 initialize);
/* New instance of type [detachable] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1317(T1 initialize);
/* New instance of type [detachable] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1318(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1319(T1 initialize);
/* New instance of type [detachable] DS_BILINKED_LIST_CURSOR [[attached] STRING_8] */
extern T0* GE_new1320(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [[attached] STRING_8] */
extern T0* GE_new1321(T1 initialize);
/* New instance of type [detachable] XM_NAMESPACE_RESOLVER_CONTEXT */
extern T0* GE_new1322(T1 initialize);
/* New instance of type [detachable] DS_LINKED_QUEUE [detachable STRING_8] */
extern T0* GE_new1325(T1 initialize);
/* New instance of type [detachable] DS_LINKED_QUEUE [[attached] STRING_8] */
extern T0* GE_new1326(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [[attached] XM_NAMESPACE] */
extern T0* GE_new1327(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET_CURSOR [[attached] XM_NAMESPACE] */
extern T0* GE_new1328(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE] */
extern T0* GE_new1329(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] XM_NAMESPACE] */
extern T0* GE_new1330(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_CLUSTER] */
extern T0* GE_new1331(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_PARENT_ITEM] */
extern T0* GE_new1333(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_ITEM] */
extern T0* GE_new1334(T1 initialize);
/* New instance of type [detachable] ET_BRACED_TYPE_LIST */
extern T0* GE_new1335(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS] */
extern T0* GE_new1336(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ADAPTED_LIBRARY] */
extern T0* GE_new1337(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY] */
extern T0* GE_new1338(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_LIBRARY] */
extern T0* GE_new1339(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] XM_DOCUMENT_NODE] */
extern T0* GE_new1340(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1342(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1343(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1344(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1345(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32] */
extern T0* GE_new1347(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1348(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]] */
extern T0* GE_new1349(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]] */
extern T0* GE_new1350(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [[attached] INTEGER_32]] */
extern T0* GE_new1351(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1353(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1354(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1355(T1 initialize);
/* New instance of type [detachable] THREAD_ATTRIBUTES */
extern T0* GE_new1356(T1 initialize);
/* New instance of type [detachable] CELL [[attached] BOOLEAN] */
extern T0* GE_new1357(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_CLASS] */
extern T0* GE_new1359(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ADAPTED_CLASS] */
extern T0* GE_new1361(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_CLASS] */
extern T0* GE_new1362(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE] */
extern T0* GE_new1363(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY] */
extern T0* GE_new1364(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1365(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ACROSS_COMPONENT] */
extern T0* GE_new1366(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET_CURSOR [[attached] INTEGER_32] */
extern T0* GE_new1367(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] NATURAL_8] */
extern T0* GE_new1371(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] NATURAL_8, [attached] ET_CLASS_NAME] */
extern T0* GE_new1372(T1 initialize);
/* New instance of type [detachable] KL_CHARACTER_BUFFER */
extern T0* GE_new1373(T1 initialize);
/* New instance of type [detachable] UT_TRISTATE */
extern T0* GE_new1375(T1 initialize);
/* New instance of type [detachable] KL_AGENT_ROUTINES [[attached] ANY] */
extern T0* GE_new1376(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] UT_TRISTATE] */
extern T0* GE_new1377(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ANY], [attached] PROCEDURE [[attached] TUPLE]] */
extern T0* GE_new1378(T1 initialize);
/* New instance of type [detachable] PREDICATE [[attached] TUPLE [[attached] ET_MASTER_CLASS]] */
extern T0* GE_new1379(T1 initialize);
/* New instance of type [detachable] PREDICATE [[attached] TUPLE] */
extern T0* GE_new1380(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE] */
extern T0* GE_new1382(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE] */
extern T0* GE_new1383(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1384(T1 initialize);
/* New instance of type [detachable] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE] */
extern T0* GE_new1385(T1 initialize);
/* New instance of type [detachable] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]] */
extern T0* GE_new1386(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE]] */
extern T0* GE_new1387(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE], [attached] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]]] */
extern T0* GE_new1388(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
extern T0* GE_new1390(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_MASTER_CLASS], [attached] BOOLEAN]] */
extern T0* GE_new1391(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_MASTER_CLASS], [attached] BOOLEAN], [attached] FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
extern T0* GE_new1392(T1 initialize);
/* New instance of type [detachable] ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
extern T0* GE_new1393(T1 initialize);
/* New instance of type [detachable] XM_COMMENT */
extern T0* GE_new1396(T1 initialize);
/* New instance of type [detachable] XM_PROCESSING_INSTRUCTION */
extern T0* GE_new1397(T1 initialize);
/* New instance of type [detachable] XM_CHARACTER_DATA */
extern T0* GE_new1398(T1 initialize);
/* New instance of type [detachable] ET_LIKE_N */
extern T0* GE_new1401(T1 initialize);
/* New instance of type [detachable] KL_STRING_INPUT_STREAM */
extern T0* GE_new1404(T1 initialize);
/* New instance of type detachable ET_OBJECT_TEST_LIST */
extern T0* GE_new1407(T1 initialize);
/* New instance of type detachable ET_ACROSS_COMPONENT_LIST */
extern T0* GE_new1408(T1 initialize);
/* New instance of type detachable ET_C3_CHARACTER_CONSTANT */
extern T0* GE_new1409(T1 initialize);
/* New instance of type detachable ET_VERBATIM_STRING */
extern T0* GE_new1410(T1 initialize);
/* New instance of type detachable ET_SPECIAL_MANIFEST_STRING */
extern T0* GE_new1411(T1 initialize);
/* New instance of type detachable ET_UNDERSCORED_INTEGER_CONSTANT */
extern T0* GE_new1412(T1 initialize);
/* New instance of type detachable ET_HEXADECIMAL_INTEGER_CONSTANT */
extern T0* GE_new1413(T1 initialize);
/* New instance of type detachable ET_OCTAL_INTEGER_CONSTANT */
extern T0* GE_new1414(T1 initialize);
/* New instance of type detachable ET_BINARY_INTEGER_CONSTANT */
extern T0* GE_new1415(T1 initialize);
/* New instance of type detachable ET_REGULAR_REAL_CONSTANT */
extern T0* GE_new1416(T1 initialize);
/* New instance of type detachable ET_UNDERSCORED_REAL_CONSTANT */
extern T0* GE_new1417(T1 initialize);
/* New instance of type detachable ET_TRUE_CONSTANT */
extern T0* GE_new1419(T1 initialize);
/* New instance of type detachable ET_FALSE_CONSTANT */
extern T0* GE_new1420(T1 initialize);
/* New instance of type detachable ET_C1_CHARACTER_CONSTANT */
extern T0* GE_new1421(T1 initialize);
/* New instance of type detachable ET_C2_CHARACTER_CONSTANT */
extern T0* GE_new1422(T1 initialize);
/* New instance of type detachable ET_TAGGED_INDEXING */
extern T0* GE_new1424(T1 initialize);
/* New instance of type detachable ET_INDEXING */
extern T0* GE_new1425(T1 initialize);
/* New instance of type detachable ET_CUSTOM_ATTRIBUTE */
extern T0* GE_new1426(T1 initialize);
/* New instance of type detachable ET_CONSTRAINED_FORMAL_PARAMETER */
extern T0* GE_new1427(T1 initialize);
/* New instance of type detachable ET_TYPE_RENAME_CONSTRAINT */
extern T0* GE_new1428(T1 initialize);
/* New instance of type detachable ET_CONSTRAINT_NAMED_TYPE */
extern T0* GE_new1429(T1 initialize);
/* New instance of type detachable ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new1430(T1 initialize);
/* New instance of type detachable ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new1431(T1 initialize);
/* New instance of type detachable ET_ALL_EXPORT */
extern T0* GE_new1432(T1 initialize);
/* New instance of type detachable ET_CONVERT_FUNCTION */
extern T0* GE_new1434(T1 initialize);
/* New instance of type detachable ET_CONVERT_PROCEDURE */
extern T0* GE_new1435(T1 initialize);
/* New instance of type detachable ET_DO_FUNCTION */
extern T0* GE_new1437(T1 initialize);
/* New instance of type detachable ET_ONCE_FUNCTION */
extern T0* GE_new1438(T1 initialize);
/* New instance of type detachable ET_DEFERRED_FUNCTION */
extern T0* GE_new1439(T1 initialize);
/* New instance of type detachable ET_ONCE_PROCEDURE */
extern T0* GE_new1441(T1 initialize);
/* New instance of type detachable ET_EXTERNAL_PROCEDURE */
extern T0* GE_new1442(T1 initialize);
/* New instance of type detachable ET_PREFIX_NAME */
extern T0* GE_new1443(T1 initialize);
/* New instance of type detachable ET_PREFIX_FREE_NAME */
extern T0* GE_new1444(T1 initialize);
/* New instance of type detachable ET_INFIX_NAME */
extern T0* GE_new1445(T1 initialize);
/* New instance of type detachable ET_ALIASED_FEATURE_NAME */
extern T0* GE_new1446(T1 initialize);
/* New instance of type detachable ET_ALIAS_FREE_NAME */
extern T0* GE_new1447(T1 initialize);
/* New instance of type detachable ET_CLASS_ASSERTION */
extern T0* GE_new1450(T1 initialize);
/* New instance of type detachable ET_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new1451(T1 initialize);
/* New instance of type detachable ET_LIKE_FEATURE */
extern T0* GE_new1453(T1 initialize);
/* New instance of type detachable ET_QUALIFIED_LIKE_BRACED_TYPE */
extern T0* GE_new1454(T1 initialize);
/* New instance of type detachable ET_QUALIFIED_LIKE_TYPE */
extern T0* GE_new1455(T1 initialize);
/* New instance of type detachable ET_ASSIGNER_INSTRUCTION */
extern T0* GE_new1456(T1 initialize);
/* New instance of type detachable ET_ASSIGNMENT */
extern T0* GE_new1457(T1 initialize);
/* New instance of type detachable ET_ASSIGNMENT_ATTEMPT */
extern T0* GE_new1458(T1 initialize);
/* New instance of type detachable ET_LOOP_INSTRUCTION */
extern T0* GE_new1459(T1 initialize);
/* New instance of type detachable ET_BANG_INSTRUCTION */
extern T0* GE_new1461(T1 initialize);
/* New instance of type detachable ET_CREATE_INSTRUCTION */
extern T0* GE_new1462(T1 initialize);
/* New instance of type detachable ET_CHOICE_RANGE */
extern T0* GE_new1463(T1 initialize);
/* New instance of type detachable ET_PRECURSOR_INSTRUCTION */
extern T0* GE_new1464(T1 initialize);
/* New instance of type detachable ET_STATIC_CALL_INSTRUCTION */
extern T0* GE_new1466(T1 initialize);
/* New instance of type detachable ET_PRECURSOR_EXPRESSION */
extern T0* GE_new1467(T1 initialize);
/* New instance of type detachable ET_FEATURE_ADDRESS */
extern T0* GE_new1468(T1 initialize);
/* New instance of type detachable ET_CURRENT_ADDRESS */
extern T0* GE_new1469(T1 initialize);
/* New instance of type detachable ET_RESULT_ADDRESS */
extern T0* GE_new1470(T1 initialize);
/* New instance of type detachable ET_EXPRESSION_ADDRESS */
extern T0* GE_new1471(T1 initialize);
/* New instance of type detachable ET_INFIX_EXPRESSION */
extern T0* GE_new1472(T1 initialize);
/* New instance of type detachable ET_INFIX_AND_THEN_OPERATOR */
extern T0* GE_new1473(T1 initialize);
/* New instance of type detachable ET_INFIX_OR_ELSE_OPERATOR */
extern T0* GE_new1474(T1 initialize);
/* New instance of type detachable ET_MANIFEST_TYPE */
extern T0* GE_new1475(T1 initialize);
/* New instance of type detachable ET_PREFIX_EXPRESSION */
extern T0* GE_new1476(T1 initialize);
/* New instance of type detachable ET_OLD_EXPRESSION */
extern T0* GE_new1477(T1 initialize);
/* New instance of type detachable ET_OLD_OBJECT_TEST */
extern T0* GE_new1478(T1 initialize);
/* New instance of type detachable ET_ONCE_MANIFEST_STRING */
extern T0* GE_new1479(T1 initialize);
/* New instance of type detachable ET_DO_FUNCTION_INLINE_AGENT */
extern T0* GE_new1480(T1 initialize);
/* New instance of type detachable ET_ONCE_FUNCTION_INLINE_AGENT */
extern T0* GE_new1481(T1 initialize);
/* New instance of type detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT */
extern T0* GE_new1482(T1 initialize);
/* New instance of type detachable ET_DO_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1483(T1 initialize);
/* New instance of type detachable ET_ONCE_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1484(T1 initialize);
/* New instance of type detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1485(T1 initialize);
/* New instance of type detachable ET_AGENT_OPEN_TARGET */
extern T0* GE_new1486(T1 initialize);
/* New instance of type detachable ET_AGENT_TYPED_OPEN_ARGUMENT */
extern T0* GE_new1487(T1 initialize);
/* New instance of type detachable ET_TAGGED_ASSERTION */
extern T0* GE_new1490(T1 initialize);
/* New instance of type [detachable] ET_FILE_POSITION */
extern T0* GE_new1492(T1 initialize);
/* New instance of type [detachable] DS_QUICK_SORTER [[attached] ET_QUERY] */
extern T0* GE_new1494(T1 initialize);
/* New instance of type [detachable] DS_QUICK_SORTER [[attached] ET_PROCEDURE] */
extern T0* GE_new1495(T1 initialize);
/* New instance of type [detachable] ET_REDECLARED_FEATURE */
extern T0* GE_new1497(T1 initialize);
/* New instance of type [detachable] HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
extern T0* GE_new1499(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_MASTER_CLASS, [attached] ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1501(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER] */
extern T0* GE_new1503(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1504(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1505(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE] */
extern T0* GE_new1506(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1507(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1508(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1509(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1510(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1511(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1512(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1513(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION] */
extern T0* GE_new1514(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_ACTION] */
extern T0* GE_new1515(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ACTION] */
extern T0* GE_new1516(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1517(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_OPTIONS] */
extern T0* GE_new1518(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS] */
extern T0* GE_new1521(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
extern T0* GE_new1522(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1523(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1524(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1525(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new1526(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM] */
extern T0* GE_new1527(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1528(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1529(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1530(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE] */
extern T0* GE_new1532(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_UNIVERSE] */
extern T0* GE_new1533(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE] */
extern T0* GE_new1535(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET_CURSOR [[attached] ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1536(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1538(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1539(T6 a1, T1 initialize);
/* New instance of type [detachable] ET_CLASS_TYPE_STATUS_CHECKER1 */
extern T0* GE_new1540(T1 initialize);
/* New instance of type [detachable] ET_CLASS_TYPE_STATUS_CHECKER2 */
extern T0* GE_new1541(T1 initialize);
/* New instance of type [detachable] ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
extern T0* GE_new1542(T1 initialize);
/* New instance of type [detachable] ET_CLASS_TYPE_STATUS_CHECKER3 */
extern T0* GE_new1543(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS] */
extern T0* GE_new1544(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1545(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1546(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1547(T1 initialize);
/* New instance of type [detachable] DS_LINKED_QUEUE [[attached] CHARACTER_8] */
extern T0* GE_new1551(T1 initialize);
/* New instance of type [detachable] UC_UTF16_ROUTINES */
extern T0* GE_new1552(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET_CURSOR [[attached] ET_LIBRARY] */
extern T0* GE_new1553(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY] */
extern T0* GE_new1554(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_LIBRARY] */
extern T0* GE_new1555(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET] */
extern T0* GE_new1556(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1557(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1558(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1559(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_TARGET_PARENT] */
extern T0* GE_new1560(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT] */
extern T0* GE_new1561(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET_PARENT] */
extern T0* GE_new1562(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] NATURAL_64] */
extern T0* GE_new1563(T6 a1, T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1564(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1565(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST_LIST] */
extern T0* GE_new1566(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_OBJECT_TEST_LIST] */
extern T0* GE_new1567(T6 a1, T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new1568(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new1569(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new1570(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new1571(T6 a1, T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ASSERTION_ITEM] */
extern T0* GE_new1572(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM] */
extern T0* GE_new1573(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ASSERTION_ITEM] */
extern T0* GE_new1574(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1575(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_NAMED_CLASS] */
extern T0* GE_new1576(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS] */
extern T0* GE_new1578(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS] */
extern T0* GE_new1580(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS] */
extern T0* GE_new1581(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_BASE_TYPE_CONSTRAINT] */
extern T0* GE_new1584(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] NATURAL_32] */
extern T0* GE_new1585(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] NATURAL_32] */
extern T0* GE_new1586(T6 a1, T1 initialize);
/* New instance of type [detachable] ET_BASE_TYPE_CONSTRAINT_LIST */
extern T0* GE_new1587(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME] */
extern T0* GE_new1588(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_FLATTENED_FEATURE] */
extern T0* GE_new1589(T6 a1, T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_FEATURE_NAME] */
extern T0* GE_new1592(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE] */
extern T0* GE_new1593(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME] */
extern T0* GE_new1594(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ALIAS_NAME] */
extern T0* GE_new1596(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ALIAS_NAME] */
extern T0* GE_new1597(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME] */
extern T0* GE_new1598(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST] */
extern T0* GE_new1599(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_CLIENT_LIST] */
extern T0* GE_new1600(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST] */
extern T0* GE_new1601(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS] */
extern T0* GE_new1603(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT] */
extern T0* GE_new1604(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_CLIENT] */
extern T0* GE_new1605(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_HASH_SET [[attached] ET_CALL_NAME] */
extern T0* GE_new1606(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME] */
extern T0* GE_new1607(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME] */
extern T0* GE_new1608(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32] */
extern T0* GE_new1609(T1 initialize);
/* New instance of type [detachable] ET_REPLICATED_FEATURE */
extern T0* GE_new1611(T1 initialize);
/* New instance of type [detachable] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE] */
extern T0* GE_new1612(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new1613(T1 initialize);
/* New instance of type [detachable] ET_DOTNET_SIGNATURE_TESTER */
extern T0* GE_new1614(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1615(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1617(T1 initialize);
/* New instance of type [detachable] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1619(T1 initialize);
/* New instance of type [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE] */
extern T0* GE_new1620(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE] */
extern T0* GE_new1621(T1 initialize);
/* New instance of type [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new1622(T1 initialize);
/* New instance of type detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new1623(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8] */
extern T0* GE_new1624(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32] */
extern T0* GE_new1625(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET_CURSOR [[attached] ET_CLASS] */
extern T0* GE_new1628(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME] */
extern T0* GE_new1630(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_RENAME] */
extern T0* GE_new1631(T6 a1, T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_CALL_NAME] */
extern T0* GE_new1632(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_RENAME] */
extern T0* GE_new1635(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME] */
extern T0* GE_new1636(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE] */
extern T0* GE_new1639(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET_CURSOR [[attached] ET_QUERY] */
extern T0* GE_new1640(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] YY_BUFFER] */
extern T0* GE_new1641(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] YY_BUFFER] */
extern T0* GE_new1642(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_DYNAMIC_TARGET] */
extern T0* GE_new1643(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET] */
extern T0* GE_new1644(T1 initialize);
/* New instance of type [detachable] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1646(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [[attached] XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1647(T1 initialize);
/* New instance of type [detachable] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
extern T0* GE_new1649(T1 initialize);
/* New instance of type [detachable] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
extern T0* GE_new1650(T1 initialize);
/* New instance of type detachable DS_LINKABLE [detachable STRING_8] */
extern T0* GE_new1651(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_CLUSTER] */
extern T0* GE_new1652(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER] */
extern T0* GE_new1653(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLUSTER] */
extern T0* GE_new1654(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_TYPE_ITEM] */
extern T0* GE_new1655(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE_ITEM] */
extern T0* GE_new1656(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS] */
extern T0* GE_new1657(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1658(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_CLUSTER] */
extern T0* GE_new1659(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_CLUSTER]] */
extern T0* GE_new1660(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_TARGET, [attached] STRING_8] */
extern T0* GE_new1661(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1663(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_ADAPTED_LIBRARY]] */
extern T0* GE_new1664(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1665(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY]] */
extern T0* GE_new1666(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] STRING_8]] */
extern T0* GE_new1669(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
extern T0* GE_new1670(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8] */
extern T0* GE_new1671(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8] */
extern T0* GE_new1672(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] XM_ELEMENT_NODE] */
extern T0* GE_new1677(T1 initialize);
/* New instance of type detachable ET_CONSTRAINT_GENERIC_NAMED_TYPE */
extern T0* GE_new1681(T1 initialize);
/* New instance of type detachable ET_UNQUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new1682(T1 initialize);
/* New instance of type detachable ET_CLUSTER_DEPENDENCE_CONSTRAINT */
extern T0* GE_new1684(T1 initialize);
/* New instance of type [detachable] ET_SEEDED_QUERY_COMPARATOR */
extern T0* GE_new1685(T1 initialize);
/* New instance of type [detachable] ET_SEEDED_PROCEDURE_COMPARATOR */
extern T0* GE_new1688(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_CLIENT_LIST] */
extern T0* GE_new1692(T1 initialize);
/* New instance of type [detachable] ET_FORMAL_COMMA_ARGUMENT */
extern T0* GE_new1693(T1 initialize);
/* New instance of type [detachable] ET_LOCAL_COMMA_VARIABLE */
extern T0* GE_new1694(T1 initialize);
/* New instance of type [detachable] ET_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new1695(T1 initialize);
/* New instance of type [detachable] ET_KEYWORD_EXPRESSION */
extern T0* GE_new1697(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_RENAME_ITEM] */
extern T0* GE_new1702(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_RENAME_ITEM] */
extern T0* GE_new1703(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_EXPORT] */
extern T0* GE_new1705(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPORT] */
extern T0* GE_new1706(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1708(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1709(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1710(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1711(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1714(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG]] */
extern T0* GE_new1715(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_TARGET, [attached] ET_ECF_STATE] */
extern T0* GE_new1716(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1717(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE]] */
extern T0* GE_new1718(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1719(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY]] */
extern T0* GE_new1720(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1721(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG]] */
extern T0* GE_new1722(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1723(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE]] */
extern T0* GE_new1724(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1725(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT]] */
extern T0* GE_new1726(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1727(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE]] */
extern T0* GE_new1728(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
extern T0* GE_new1733(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new1736(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new1737(T1 initialize);
/* New instance of type [detachable] ET_AGENT_IMPLICIT_CURRENT_TARGET */
extern T0* GE_new1738(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_CHOICE_ITEM] */
extern T0* GE_new1740(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CHOICE_ITEM] */
extern T0* GE_new1741(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1742(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1744(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1746(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1747(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_CREATOR] */
extern T0* GE_new1748(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CREATOR] */
extern T0* GE_new1749(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ELSEIF_EXPRESSION] */
extern T0* GE_new1750(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_EXPRESSION] */
extern T0* GE_new1751(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ELSEIF_PART] */
extern T0* GE_new1752(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_PART] */
extern T0* GE_new1753(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_FEATURE_CLAUSE] */
extern T0* GE_new1754(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_CLAUSE] */
extern T0* GE_new1755(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_INDEXING_ITEM] */
extern T0* GE_new1757(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_ITEM] */
extern T0* GE_new1758(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_INDEXING_TERM_ITEM] */
extern T0* GE_new1759(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM_ITEM] */
extern T0* GE_new1760(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1762(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1763(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_PARENT_LIST] */
extern T0* GE_new1764(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_LIST] */
extern T0* GE_new1765(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_TYPE_CONSTRAINT_ITEM] */
extern T0* GE_new1767(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE_CONSTRAINT_ITEM] */
extern T0* GE_new1768(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_WHEN_PART] */
extern T0* GE_new1769(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_WHEN_PART] */
extern T0* GE_new1770(T1 initialize);
/* New instance of type [detachable] ET_BASE_TYPE_RENAME_CONSTRAINT */
extern T0* GE_new1772(T1 initialize);
/* New instance of type detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS] */
extern T0* GE_new1775(T1 initialize);
/* New instance of type [detachable] ET_STANDARD_ONCE_KEYS */
extern T0* GE_new1780(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_CLUSTER] */
extern T0* GE_new1782(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER] */
extern T0* GE_new1783(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER] */
extern T0* GE_new1784(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1785(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1786(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1787(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1788(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1789(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1790(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE] */
extern T0* GE_new1791(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_FILE_RULE] */
extern T0* GE_new1792(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_FILE_RULE] */
extern T0* GE_new1793(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1794(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1795(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1796(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1797(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1798(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1799(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1800(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1801(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1802(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1803(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1804(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1805(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1806(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1807(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1808(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1809(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1810(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1811(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1812(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1813(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1814(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1815(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1816(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1817(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new1818(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new1819(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new1820(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM] */
extern T0* GE_new1821(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_ECF_CONDITION_ITEM] */
extern T0* GE_new1822(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CONDITION_ITEM] */
extern T0* GE_new1823(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] CHARACTER_8] */
extern T0* GE_new1825(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_CLASS] */
extern T0* GE_new1826(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_BASE_TYPE_CONSTRAINT] */
extern T0* GE_new1827(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE_CONSTRAINT] */
extern T0* GE_new1828(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_BASE_TYPE_CONSTRAINT] */
extern T0* GE_new1829(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] NATURAL_32] */
extern T0* GE_new1830(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] NATURAL_32] */
extern T0* GE_new1831(T1 initialize);
/* New instance of type [detachable] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME] */
extern T0* GE_new1832(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME] */
extern T0* GE_new1833(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME] */
extern T0* GE_new1836(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32] */
extern T0* GE_new1837(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_REPLICABLE_FEATURE] */
extern T0* GE_new1838(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE] */
extern T0* GE_new1840(T1 initialize);
/* New instance of type [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE] */
extern T0* GE_new1841(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] ET_ADAPTED_FEATURE] */
extern T0* GE_new1842(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new1843(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new1844(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new1845(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1846(T6 a1, T1 initialize);
/* New instance of type [detachable] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1847(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1848(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]] */
extern T0* GE_new1849(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1852(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]] */
extern T0* GE_new1853(T1 initialize);
/* New instance of type [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1854(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1855(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE] */
extern T0* GE_new1856(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_LIKE_FEATURE] */
extern T0* GE_new1857(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE] */
extern T0* GE_new1858(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE] */
extern T0* GE_new1859(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8] */
extern T0* GE_new1861(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]] */
extern T0* GE_new1862(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME] */
extern T0* GE_new1863(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]] */
extern T0* GE_new1864(T6 a1, T1 initialize);
/* New instance of type detachable DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
extern T0* GE_new1865(T1 initialize);
/* New instance of type [detachable] ET_CLUSTER_ERROR */
extern T0* GE_new1866(T1 initialize);
/* New instance of type [detachable] ET_SYNTAX_ERROR */
extern T0* GE_new1867(T1 initialize);
/* New instance of type [detachable] ET_DOTNET_ASSEMBLY_ERROR */
extern T0* GE_new1868(T1 initialize);
/* New instance of type [detachable] AP_OPTION_COMPARATOR */
extern T0* GE_new1869(T1 initialize);
/* New instance of type [detachable] DS_QUICK_SORTER [[attached] AP_OPTION] */
extern T0* GE_new1870(T1 initialize);
/* New instance of type [detachable] ST_SPLITTER */
extern T0* GE_new1877(T1 initialize);
/* New instance of type [detachable] KL_CHARACTER_ROUTINES */
extern T0* GE_new1878(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_C_GENERATOR, INTEGER_32, [attached] ET_CURRENT, [attached] ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
extern T0* GE_new1879(T1 initialize);
/* New instance of type [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new1880(T1 initialize);
/* New instance of type [detachable] ET_ACTUAL_PARAMETER_SUBLIST */
extern T0* GE_new1881(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1884(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1886(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new1888(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new1889(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_INSTRUCTION] */
extern T0* GE_new1890(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INSTRUCTION] */
extern T0* GE_new1892(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1893(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1895(T1 initialize);
/* New instance of type [detachable] ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new1903(T1 initialize);
/* New instance of type [detachable] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8] */
extern T0* GE_new1904(T1 initialize);
/* New instance of type [detachable] ET_INFIX_CAST_EXPRESSION */
extern T0* GE_new1905(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] STRING_8] */
extern T0* GE_new1909(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]] */
extern T0* GE_new1910(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]] */
extern T0* GE_new1913(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8] */
extern T0* GE_new1914(T1 initialize);
/* New instance of type [detachable] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS] */
extern T0* GE_new1915(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE] */
extern T0* GE_new1918(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]] */
extern T0* GE_new1919(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]] */
extern T0* GE_new1922(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME] */
extern T0* GE_new1923(T1 initialize);
/* New instance of type [detachable] ET_UNIVERSE_ERROR */
extern T0* GE_new1924(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1925(T1 initialize);
/* New instance of type detachable ET_PARENTHESIS_INSTRUCTION */
extern T0* GE_new1926(T1 initialize);
/* New instance of type [detachable] ET_PARENTHESIS_SYMBOL */
extern T0* GE_new1946(T1 initialize);
/* New instance of type [detachable] ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
extern T0* GE_new1952(T1 initialize);
/* New instance of type [detachable] ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
extern T0* GE_new1953(T1 initialize);
/* New instance of type [detachable] DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
extern T0* GE_new1960(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8] */
extern T0* GE_new1965(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8] */
extern T0* GE_new1966(T1 initialize);
/* New instance of type [detachable] ET_DYNAMIC_EQUALITY_EXPRESSION */
extern T0* GE_new1967(T1 initialize);
/* New instance of type [detachable] ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new1968(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_LIBRARY] */
extern T0* GE_new1969(T1 initialize);
/* New instance of type [detachable] ET_CONVERT_BUILTIN_EXPRESSION */
extern T0* GE_new1971(T1 initialize);
/* New instance of type [detachable] ET_CONVERT_FROM_EXPRESSION */
extern T0* GE_new1972(T1 initialize);
/* New instance of type [detachable] ET_CONVERT_TO_EXPRESSION */
extern T0* GE_new1973(T1 initialize);
/* New instance of type detachable DS_CELL [detachable ET_CLASS] */
extern T0* GE_new1976(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] DS_CELL [detachable ET_CLASS]] */
extern T0* GE_new1977(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_EIFFEL_PREPARSER, [attached] DS_ARRAYED_LIST [[attached] STRING_8]] */
extern T0* GE_new1979(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE] */
extern T0* GE_new1981(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_FILE_RULE] */
extern T0* GE_new1982(T1 initialize);
/* New instance of type [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]] */
extern T0* GE_new1983(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_FILE_RULES] */
extern T0* GE_new1984(T1 initialize);
/* New instance of type [detachable] PREDICATE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]] */
extern T0* GE_new1985(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_STATE] */
extern T0* GE_new1986(T1 initialize);
/* New instance of type [detachable] PREDICATE [[attached] TUPLE [[attached] STRING_8]] */
extern T0* GE_new1988(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] KL_STRING_ROUTINES, [attached] STRING_8] */
extern T0* GE_new1989(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] DS_HASH_SET [[attached] STRING_8]] */
extern T0* GE_new1991(T1 initialize);
/* New instance of type [detachable] LX_DFA_WILDCARD */
extern T0* GE_new1993(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new1996(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] LX_WILDCARD] */
extern T0* GE_new1998(T1 initialize);
/* New instance of type [detachable] PREDICATE [[attached] TUPLE [[attached] LX_WILDCARD]] */
extern T0* GE_new1999(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_CLUSTER_DEPENDENCE_CONSTRAINT, [attached] ET_GROUP, [attached] STRING_8] */
extern T0* GE_new2000(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new2002(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new2003(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] LX_WILDCARD] */
extern T0* GE_new2004(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] LX_WILDCARD] */
extern T0* GE_new2007(T1 initialize);
/* New instance of type [detachable] CHARACTER_PROPERTY */
extern T0* GE_new2008(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_LIBRARY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2013(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2014(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2015(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_LIBRARY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2016(T1 initialize);
/* New instance of type [detachable] ET_AST_NULL_LEAF */
extern T0* GE_new2018(T1 initialize);
/* New instance of type [detachable] LX_WILDCARD_PARSER */
extern T0* GE_new2019(T1 initialize);
/* New instance of type [detachable] LX_DESCRIPTION */
extern T0* GE_new2020(T1 initialize);
/* New instance of type [detachable] LX_FULL_DFA */
extern T0* GE_new2021(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] ET_GROUP] */
extern T0* GE_new2023(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]]] */
extern T0* GE_new2024(T1 initialize);
/* New instance of type [detachable] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new2026(T1 initialize);
/* New instance of type [detachable] PREDICATE [[attached] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION]] */
extern T0* GE_new2027(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] NATURAL_16] */
extern T0* GE_new2030(T6 a1, T1 initialize);
/* New instance of type [detachable] ARRAY [[attached] NATURAL_16] */
extern T0* GE_new2031(T1 initialize);
/* New instance of type [detachable] ARRAY [[attached] NATURAL_32] */
extern T0* GE_new2032(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] LX_RULE] */
extern T0* GE_new2033(T1 initialize);
/* New instance of type [detachable] LX_START_CONDITIONS */
extern T0* GE_new2034(T1 initialize);
/* New instance of type [detachable] LX_ACTION_FACTORY */
extern T0* GE_new2035(T1 initialize);
/* New instance of type [detachable] LX_SYMBOL_CLASS */
extern T0* GE_new2036(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8] */
extern T0* GE_new2037(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS] */
extern T0* GE_new2038(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] LX_SYMBOL_CLASS] */
extern T0* GE_new2039(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] LX_NFA] */
extern T0* GE_new2040(T1 initialize);
/* New instance of type [detachable] LX_NFA */
extern T0* GE_new2041(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] LX_NFA] */
extern T0* GE_new2042(T6 a1, T1 initialize);
/* New instance of type detachable LX_EQUIVALENCE_CLASSES */
extern T0* GE_new2043(T1 initialize);
/* New instance of type detachable LX_RULE */
extern T0* GE_new2044(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8] */
extern T0* GE_new2045(T1 initialize);
/* New instance of type [detachable] LX_UNRECOGNIZED_RULE_ERROR */
extern T0* GE_new2046(T1 initialize);
/* New instance of type [detachable] LX_MISSING_QUOTE_ERROR */
extern T0* GE_new2047(T1 initialize);
/* New instance of type [detachable] LX_BAD_CHARACTER_CLASS_ERROR */
extern T0* GE_new2048(T1 initialize);
/* New instance of type [detachable] LX_BAD_CHARACTER_ERROR */
extern T0* GE_new2049(T1 initialize);
/* New instance of type [detachable] LX_FULL_AND_META_ERROR */
extern T0* GE_new2050(T1 initialize);
/* New instance of type [detachable] LX_FULL_AND_REJECT_ERROR */
extern T0* GE_new2051(T1 initialize);
/* New instance of type [detachable] LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
extern T0* GE_new2052(T1 initialize);
/* New instance of type [detachable] LX_CHARACTER_OUT_OF_RANGE_ERROR */
extern T0* GE_new2053(T1 initialize);
/* New instance of type [detachable] ARRAY [[attached] LX_RULE] */
extern T0* GE_new2054(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] LX_RULE] */
extern T0* GE_new2055(T6 a1, T1 initialize);
/* New instance of type [detachable] LX_DFA_STATE */
extern T0* GE_new2056(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE] */
extern T0* GE_new2057(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] LX_DFA_STATE] */
extern T0* GE_new2058(T1 initialize);
/* New instance of type detachable LX_SYMBOL_PARTITIONS */
extern T0* GE_new2059(T1 initialize);
/* New instance of type [detachable] KL_ARRAY_ROUTINES [[attached] LX_RULE] */
extern T0* GE_new2060(T1 initialize);
/* New instance of type [detachable] ARRAY [detachable LX_RULE] */
extern T0* GE_new2061(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable LX_RULE] */
extern T0* GE_new2062(T6 a1, T1 initialize);
/* New instance of type [detachable] LX_START_CONDITION */
extern T0* GE_new2063(T1 initialize);
/* New instance of type [detachable] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE] */
extern T0* GE_new2064(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST [[attached] LX_NFA] */
extern T0* GE_new2065(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32] */
extern T0* GE_new2066(T1 initialize);
/* New instance of type [detachable] LX_NFA_STATE */
extern T0* GE_new2067(T1 initialize);
/* New instance of type [detachable] LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
extern T0* GE_new2068(T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] LX_RULE] */
extern T0* GE_new2069(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_RULE] */
extern T0* GE_new2070(T1 initialize);
/* New instance of type [detachable] KL_ARRAY_ROUTINES [[attached] STRING_8] */
extern T0* GE_new2071(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] LX_START_CONDITION] */
extern T0* GE_new2072(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] LX_START_CONDITION] */
extern T0* GE_new2073(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_START_CONDITION] */
extern T0* GE_new2074(T1 initialize);
/* New instance of type [detachable] LX_SYMBOL_CLASS_TRANSITION [[attached] LX_NFA_STATE] */
extern T0* GE_new2077(T1 initialize);
/* New instance of type [detachable] LX_EPSILON_TRANSITION [[attached] LX_NFA_STATE] */
extern T0* GE_new2079(T1 initialize);
/* New instance of type [detachable] LX_SYMBOL_TRANSITION [[attached] LX_NFA_STATE] */
extern T0* GE_new2081(T1 initialize);
/* New instance of type [detachable] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]] */
extern T0* GE_new2082(T1 initialize);
/* New instance of type [detachable] DS_BILINKABLE [[attached] INTEGER_32] */
extern T0* GE_new2083(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]] */
extern T0* GE_new2084(T6 a1, T1 initialize);
/* New instance of type [detachable] LX_ACTION */
extern T0* GE_new2086(T1 initialize);
/* New instance of type [detachable] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE] */
extern T0* GE_new2087(T1 initialize);
/* New instance of type [detachable] DS_BUBBLE_SORTER [[attached] LX_RULE] */
extern T0* GE_new2089(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] LX_NFA_STATE] */
extern T0* GE_new2091(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE] */
extern T0* GE_new2093(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE] */
extern T0* GE_new2094(T1 initialize);
/* New instance of type [detachable] SPECIAL [[attached] LX_DFA_STATE] */
extern T0* GE_new2096(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE] */
extern T0* GE_new2097(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_DFA_STATE] */
extern T0* GE_new2098(T1 initialize);
/* New instance of type [detachable] KL_ARRAY [[attached] LX_RULE] */
extern T0* GE_new2099(T1 initialize);
/* New instance of type [detachable] ARRAY [detachable LX_DFA_STATE] */
extern T0* GE_new2100(T1 initialize);
/* New instance of type [detachable] SPECIAL [detachable LX_DFA_STATE] */
extern T0* GE_new2101(T6 a1, T1 initialize);
/* New instance of type [detachable] KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
extern T0* GE_new2102(T1 initialize);
/* New instance of type [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA] */
extern T0* GE_new2103(T1 initialize);
/* New instance of type [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_NFA, [attached] INTEGER_32] */
extern T0* GE_new2105(T1 initialize);
/* New instance of type [detachable] DS_SHELL_SORTER [[attached] INTEGER_32] */
extern T0* GE_new2108(T1 initialize);
/* New instance of type [detachable] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE] */
extern T0* GE_new2109(T1 initialize);
/* New instance of type [detachable] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE] */
extern T0* GE_new2112(T1 initialize);
/* New instance of type [detachable] KL_ARRAY [[attached] STRING_8] */
extern T0* GE_new2115(T1 initialize);
/* [detachable] GEC.execute */
extern T0* T24c59(GE_context* ac);
/* [detachable] GEC.report_cannot_read_error */
extern void T24f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_error */
extern void T50f180(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_error_message */
extern void T50f182(GE_context* ac, T0* C, T0* a1);
/* [detachable] MUTEX.unlock */
extern void T132f12(GE_context* ac, T0* C);
/* [detachable] MUTEX.eif_thr_mutex_unlock */
extern void T132f15(GE_context* ac, T0* C, T14 a1);
/* [detachable] MUTEX.default_pointer */
extern T14 T132f3(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.set_has_error */
extern void T50f184(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_error_message */
extern void T50f182p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] MUTEX.lock */
extern void T132f11(GE_context* ac, T0* C);
/* [detachable] MUTEX.current_thread_id */
extern T14 T132f4(GE_context* ac, T0* C);
/* [detachable] MUTEX.eif_thr_mutex_lock */
extern void T132f14(GE_context* ac, T0* C, T14 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.message */
extern T0* T50f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_error */
extern void T34f180(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_error_message */
extern void T34f182(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.set_has_error */
extern void T34f184(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ERROR_HANDLER.report_error_message */
extern void T34f182p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_STDERR_FILE.put_line */
extern void T135f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_STDERR_FILE.put_new_line */
extern void T135f8(GE_context* ac, T0* C);
/* [detachable] KL_STDERR_FILE.put_string */
extern void T135f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] CONSOLE.put_string */
extern void T884f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] CONSOLE.console_ps */
extern void T884f26(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* [detachable] KL_STDERR_FILE.console */
extern T0* T135f2(GE_context* ac, T0* C);
/* [detachable] STD_FILES.error */
extern T0* T351f4(GE_context* ac, T0* C);
/* [detachable] CONSOLE.make_open_stderr */
extern T0* T884c23(GE_context* ac, T0* a1);
/* [detachable] CONSOLE.set_write_mode */
extern void T884f25(GE_context* ac, T0* C);
/* [detachable] CONSOLE.console_def */
extern T14 T884f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] CONSOLE.make_with_name */
extern void T884f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] STRING_8.make_empty */
extern T0* T17c55(GE_context* ac);
/* [detachable] STRING_8.make */
extern void T17f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] STRING_8.make */
extern T0* T17c45(GE_context* ac, T6 a1);
/* [detachable] SPECIAL [CHARACTER_8].make_filled */
extern T0* T15c12(GE_context* ac, T2 a1, T6 a2);
/* [detachable] SPECIAL [CHARACTER_8].fill_with */
extern void T15f15(GE_context* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [CHARACTER_8].extend */
extern void T15f19(GE_context* ac, T0* C, T2 a1);
/* INTEGER_32.min */
extern T6 T6f19(GE_context* ac, T6* C, T6 a1);
/* INTEGER_32.is_less_equal */
extern T1 T6f13(GE_context* ac, T6* C, T6 a1);
/* [detachable] SPECIAL [CHARACTER_8].make_empty */
extern void T15f16(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [CHARACTER_8].make_empty */
extern T0* T15c16(GE_context* ac, T6 a1);
/* [detachable] CONSOLE.default_pointer */
extern T14 T884f9(GE_context* ac, T0* C);
/* [detachable] CONSOLE.set_name */
extern void T884f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] FILE_INFO.file_name_to_pointer */
extern T0* T131f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable C_STRING.set_string */
extern void T29f11(GE_context* ac, T0* C, T0* a1);
/* detachable C_STRING.set_substring */
extern void T29f13(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] MANAGED_POINTER.put_natural_8 */
extern void T130f15(GE_context* ac, T0* C, T8 a1, T6 a2);
/* POINTER.memory_copy */
extern void T14f16(GE_context* ac, T14* C, T14 a1, T6 a2);
/* POINTER.c_memcpy */
extern void T14f17(GE_context* ac, T14* C, T14 a1, T14 a2, T6 a3);
/* NATURAL_32.to_natural_8 */
extern T8 T10f6(GE_context* ac, T10* C);
/* detachable C_STRING.make_shared_from_pointer_and_count */
extern void T29f10(GE_context* ac, T0* C, T14 a1, T6 a2);
/* detachable C_STRING.make_shared_from_pointer_and_count */
extern T0* T29c10(GE_context* ac, T14 a1, T6 a2);
/* [detachable] MANAGED_POINTER.share_from_pointer */
extern T0* T130c14(GE_context* ac, T14 a1, T6 a2);
/* [detachable] MANAGED_POINTER.increment_counter */
extern void T130f12(GE_context* ac, T0* C);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_8_0_pointer */
extern void T462f14(GE_context* ac, T462* C, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* [detachable] CELL [[attached] INTEGER_32].put */
extern void T463f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] CELL [[attached] INTEGER_32].put */
extern T0* T463c2(GE_context* ac, T6 a1);
/* INTEGER_32.is_greater */
extern T1 T6f6(GE_context* ac, T6* C, T6 a1);
/* NATURAL_32.is_less_equal */
extern T1 T10f5(GE_context* ac, T10* C, T10 a1);
/* UTF_CONVERTER.to_natural_32 */
extern T10 T462f10(GE_context* ac, T462* C, T0* a1);
/* [detachable] HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parsed_natural_32 */
extern T10 T1499f12(GE_context* ac, T0* C);
/* [detachable] HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_string_with_type */
extern void T1499f19(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T1499f19ot1(T0* a1, T0** a2);
extern T1 T1499f19ot2(T0* a1, T0** a2);
/* NATURAL_32.is_valid_character_8_code */
extern T1 T10f7(GE_context* ac, T10* C);
/* INTEGER_32.to_natural_32 */
extern T10 T6f20(GE_context* ac, T6* C);
/* CHARACTER_32.is_character_8 */
extern T1 T3f2(GE_context* ac, T3* C);
/* [detachable] HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_character */
extern void T1499f22(GE_context* ac, T0* C, T2 a1);
/* [detachable] HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflowed */
extern T1 T1499f16(GE_context* ac, T0* C);
/* [detachable] INTEGER_OVERFLOW_CHECKER.will_overflow */
extern T1 T889f7(GE_context* ac, T0* C, T11 a1, T11 a2, T6 a3, T6 a4);
/* NATURAL_64.is_greater */
extern T1 T11f7(GE_context* ac, T11* C, T11 a1);
/* [detachable] HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflow_checker */
extern T0* T1499f15(GE_context* ac, T0* C);
/* [detachable] INTEGER_OVERFLOW_CHECKER.make */
extern T0* T889c13(GE_context* ac);
/* NATURAL_64.to_natural_64 */
extern T11 T11f10(GE_context* ac, T11* C);
/* NATURAL_32.to_natural_64 */
extern T11 T10f23(GE_context* ac, T10* C);
/* NATURAL_16.to_natural_64 */
extern T11 T9f15(GE_context* ac, T9* C);
/* NATURAL_8.to_natural_64 */
extern T11 T8f17(GE_context* ac, T8* C);
/* INTEGER_64.to_natural_64 */
extern T11 T7f7(GE_context* ac, T7* C);
/* INTEGER_16.to_natural_64 */
extern T11 T5f3(GE_context* ac, T5* C);
/* INTEGER_8.to_natural_64 */
extern T11 T4f3(GE_context* ac, T4* C);
/* [detachable] SPECIAL [[attached] NATURAL_64].extend */
extern void T1563f5(GE_context* ac, T0* C, T11 a1);
/* [detachable] SPECIAL [[attached] NATURAL_64].make_empty */
extern T0* T1563c4(GE_context* ac, T6 a1);
/* [detachable] STRING_8.has */
extern T1 T17f41(GE_context* ac, T0* C, T2 a1);
/* [detachable] STRING_8.area_lower */
extern T6 T17f9(GE_context* ac, T0* C);
/* INTEGER_32.to_natural_64 */
extern T11 T6f27(GE_context* ac, T6* C);
/* CHARACTER_8.is_less_equal */
extern T1 T2f8(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.is_less */
extern T1 T2f14(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.natural_32_code */
extern T10 T2f18(GE_context* ac, T2* C);
/* CHARACTER_8.is_greater_equal */
extern T1 T2f7(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.is_hexa_digit */
extern T1 T2f29(GE_context* ac, T2* C);
/* NATURAL_8.is_greater */
extern T1 T8f2(GE_context* ac, T8* C, T8 a1);
/* CHARACTER_8.character_types */
extern T8 T2f10(GE_context* ac, T2* C, T6 a1);
/* CHARACTER_8.internal_character_types */
extern T0* T2f15(GE_context* ac, T2* C);
/* [detachable] SPECIAL [[attached] NATURAL_8].fill_with */
extern void T469f8(GE_context* ac, T0* C, T8 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] NATURAL_8].extend */
extern void T469f7(GE_context* ac, T0* C, T8 a1);
/* [detachable] SPECIAL [[attached] NATURAL_8].make_empty */
extern void T469f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] NATURAL_8].make_empty */
extern T0* T469c6(GE_context* ac, T6 a1);
/* [detachable] HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.reset */
extern void T1499f18(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.ctoi_convertor */
extern T0* T462f11(GE_context* ac, T462* C);
/* [detachable] HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_trailing_separators_acceptable */
extern void T1499f21(GE_context* ac, T0* C, T1 a1);
/* [detachable] HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_leading_separators_acceptable */
extern void T1499f20(GE_context* ac, T0* C, T1 a1);
/* [detachable] HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.make */
extern T0* T1499c17(GE_context* ac);
/* [detachable] STRING_8.make_from_string */
extern T0* T17c70(GE_context* ac, T0* a1);
/* [detachable] SPECIAL [CHARACTER_8].copy_data */
extern void T15f14(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [detachable] SPECIAL [CHARACTER_8].force */
extern void T15f18(GE_context* ac, T0* C, T2 a1, T6 a2);
/* [detachable] SPECIAL [CHARACTER_8].move_data */
extern void T15f17(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [CHARACTER_8].overlapping_move */
extern void T15f21(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [CHARACTER_8].non_overlapping_move */
extern void T15f20(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UTF_CONVERTER.is_hexa_decimal */
extern T1 T462f9(GE_context* ac, T462* C, T0* a1);
/* [detachable] HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.is_integral_integer */
extern T1 T1499f14(GE_context* ac, T0* C);
/* INTEGER_32.is_greater_equal */
extern T1 T6f12(GE_context* ac, T6* C, T6 a1);
/* UTF_CONVERTER.utf_8_bytes_count */
extern T6 T462f6(GE_context* ac, T462* C, T0* a1, T6 a2, T6 a3);
/* INTEGER_32.do_nothing */
extern void T6f33(GE_context* ac, T6* C);
/* [detachable] FILE_INFO.multi_byte_to_utf_16 */
extern T6 T131f10(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* [detachable] FILE_INFO.default_pointer */
extern T14 T131f9(GE_context* ac, T0* C);
/* detachable C_STRING.item */
extern T14 T29f4(GE_context* ac, T0* C);
/* detachable C_STRING.make */
extern T0* T29c9(GE_context* ac, T0* a1);
/* detachable C_STRING.make_empty */
extern void T29f7(GE_context* ac, T0* C, T6 a1);
/* detachable C_STRING.make_empty */
extern T0* T29c7(GE_context* ac, T6 a1);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_16_0_pointer */
extern void T462f13(GE_context* ac, T462* C, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* [detachable] MANAGED_POINTER.put_natural_16 */
extern void T130f16(GE_context* ac, T0* C, T9 a1, T6 a2);
/* NATURAL_32.to_natural_16 */
extern T9 T10f12(GE_context* ac, T10* C);
/* NATURAL_32.is_greater */
extern T1 T10f11(GE_context* ac, T10* C, T10 a1);
/* UTF_CONVERTER.utf_16_bytes_count */
extern T6 T462f7(GE_context* ac, T462* C, T0* a1, T6 a2, T6 a3);
/* [detachable] MANAGED_POINTER.make */
extern T0* T130c10(GE_context* ac, T6 a1);
/* [detachable] EXCEPTIONS.raise */
extern void T467f2(GE_context* ac, T0* C, T0* a1);
/* [detachable] DEVELOPER_EXCEPTION.raise */
extern void T118f16(GE_context* ac, T0* C);
/* [detachable] ISE_EXCEPTION_MANAGER.raise */
extern void T20f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] DEVELOPER_EXCEPTION.code */
extern T6 T118f8(GE_context* ac, T0* C);
/* [detachable] ISE_EXCEPTION_MANAGER.default_pointer */
extern T14 T20f9(GE_context* ac, T0* C);
/* [detachable] ISE_EXCEPTION_MANAGER.set_last_exception */
extern void T20f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] CELL [detachable EXCEPTION].put */
extern void T25f2(GE_context* ac, T0* C, T0* a1);
/* [detachable] CELL [detachable EXCEPTION].put */
extern T0* T25c2(GE_context* ac, T0* a1);
/* [detachable] ISE_EXCEPTION_MANAGER.last_exception_cell */
extern T0* T20f2(GE_context* ac, T0* C);
/* [detachable] ISE_EXCEPTION_MANAGER.in_rescue */
extern T1 T20f8(GE_context* ac, T0* C);
/* [detachable] DEVELOPER_EXCEPTION.is_ignored */
extern T1 T118f7(GE_context* ac, T0* C);
/* [detachable] ISE_EXCEPTION_MANAGER.is_ignored */
extern T1 T20f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].has */
extern T1 T26f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].same_keys */
extern T1 T26f26(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].hash_code_of */
extern T6 T26f25(GE_context* ac, T0* C, T6 a1);
/* INTEGER_32.hash_code */
extern T6 T6f21(GE_context* ac, T6* C);
/* [detachable] ISE_EXCEPTION_MANAGER.ignored_exceptions */
extern T0* T20f3(GE_context* ac, T0* C);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].make */
extern T0* T26c35(GE_context* ac, T6 a1);
/* [detachable] SPECIAL [[attached] INTEGER_32].make_filled */
extern T0* T125c9(GE_context* ac, T6 a1, T6 a2);
/* [detachable] SPECIAL [[attached] INTEGER_32].fill_with */
extern void T125f12(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] INTEGER_32].extend */
extern void T125f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] BOOLEAN].make_filled */
extern T0* T126c6(GE_context* ac, T1 a1, T6 a2);
/* [detachable] SPECIAL [[attached] BOOLEAN].fill_with */
extern void T126f9(GE_context* ac, T0* C, T1 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] BOOLEAN].extend */
extern void T126f11(GE_context* ac, T0* C, T1 a1);
/* [detachable] SPECIAL [[attached] BOOLEAN].make_empty */
extern void T126f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] BOOLEAN].make_empty */
extern T0* T126c8(GE_context* ac, T6 a1);
/* [detachable] SPECIAL [[attached] INTEGER_32].make_empty */
extern void T125f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] INTEGER_32].make_empty */
extern T0* T125c8(GE_context* ac, T6 a1);
/* [detachable] PRIMES.higher_prime */
extern T6 T124f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] PRIMES.is_prime */
extern T1 T124f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] PRIMES.default_create */
extern T0* T124c5(GE_context* ac);
/* [detachable] DEVELOPER_EXCEPTION.exception_manager */
extern T0* T118f6(GE_context* ac, T0* C);
/* [detachable] DEVELOPER_EXCEPTION.default_create */
extern T0* T118c10(GE_context* ac);
/* [detachable] EXCEPTIONS.default_create */
extern T0* T467c1(GE_context* ac);
/* [detachable] MANAGED_POINTER.default_pointer */
extern T14 T130f4(GE_context* ac, T0* C);
/* POINTER.memory_calloc */
extern T14 T14f2(GE_context* ac, T14* C, T6 a1, T6 a2);
/* POINTER.c_calloc */
extern T14 T14f5(GE_context* ac, T14* C, T6 a1, T6 a2);
/* INTEGER_32.max */
extern T6 T6f14(GE_context* ac, T6* C, T6 a1);
/* [detachable] MANAGED_POINTER.resize */
extern void T130f11(GE_context* ac, T0* C, T6 a1);
/* POINTER.memory_set */
extern void T14f12(GE_context* ac, T14* C, T6 a1, T6 a2);
/* POINTER.c_memset */
extern void T14f15(GE_context* ac, T14* C, T14 a1, T6 a2, T6 a3);
/* POINTER.memory_realloc */
extern T14 T14f3(GE_context* ac, T14* C, T6 a1);
/* POINTER.c_realloc */
extern T14 T14f7(GE_context* ac, T14* C, T14 a1, T6 a2);
/* [detachable] CONSOLE.buffered_file_info */
extern T0* T884f10(GE_context* ac, T0* C);
/* [detachable] FILE_INFO.make */
extern T0* T131c19(GE_context* ac);
/* [detachable] FILE_INFO.make_filled_area */
extern void T131f21(GE_context* ac, T0* C, T8 a1, T6 a2);
/* [detachable] SPECIAL [[attached] NATURAL_8].make_filled */
extern T0* T469c5(GE_context* ac, T8 a1, T6 a2);
/* [detachable] FILE_INFO.stat_size */
extern T6 T131f7(GE_context* ac, T0* C);
/* [detachable] KL_STDERR_FILE.io */
extern T0* T135f4(GE_context* ac, T0* C);
/* [detachable] STD_FILES.set_output_default */
extern void T351f8(GE_context* ac, T0* C);
/* [detachable] STD_FILES.output */
extern T0* T351f3(GE_context* ac, T0* C);
/* [detachable] CONSOLE.make_open_stdout */
extern T0* T884c20(GE_context* ac, T0* a1);
/* [detachable] STD_FILES.default_create */
extern T0* T351c6(GE_context* ac);
/* [detachable] KL_STRING_ROUTINES.as_string */
extern T0* T83f7(GE_context* ac, T0* C, T0* a1);
extern T1 T83f7ot1(T0* a1, T0** a2);
/* [detachable] UC_UTF8_STRING.string */
extern T0* T862f20(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.next_byte_index */
extern T6 T862f40(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_ROUTINES.encoded_byte_count */
extern T6 T861f3(GE_context* ac, T0* C, T2 a1);
/* [detachable] UC_UTF8_STRING.utf8 */
extern T0* T862f34(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_ROUTINES.default_create */
extern T0* T861c36(GE_context* ac);
/* [detachable] KL_INTEGER_ROUTINES.to_character */
extern T2 T864f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_STRING.integer_ */
extern T0* T862f46(GE_context* ac, T0* C);
/* [detachable] KL_INTEGER_ROUTINES.default_create */
extern T0* T864c5(GE_context* ac);
/* [detachable] KL_PLATFORM.maximum_character_code */
extern T6 T460f2(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.platform */
extern T0* T862f39(GE_context* ac, T0* C);
/* [detachable] KL_PLATFORM.default_create */
extern T0* T460c3(GE_context* ac);
/* [detachable] UC_UTF8_STRING.item_code_at_byte_index */
extern T6 T862f37(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_ROUTINES.encoded_next_value */
extern T6 T861f6(GE_context* ac, T0* C, T2 a1);
/* [detachable] UC_UTF8_ROUTINES.encoded_first_value */
extern T6 T861f4(GE_context* ac, T0* C, T2 a1);
/* [detachable] STRING_8.append_character */
extern void T17f49(GE_context* ac, T0* C, T2 a1);
/* [detachable] STRING_8.reset_hash_codes */
extern void T17f51(GE_context* ac, T0* C);
/* [detachable] STRING_8.resize */
extern void T17f50(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [CHARACTER_8].aliased_resized_area_with_default */
extern T0* T15f4(GE_context* ac, T0* C, T2 a1, T6 a2);
/* [detachable] SPECIAL [CHARACTER_8].aliased_resized_area */
extern T0* T15f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] STRING_8.additional_space */
extern T6 T17f8(GE_context* ac, T0* C);
/* [detachable] STRING_8.capacity */
extern T6 T17f7(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.byte_item */
extern T2 T862f35(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_STRING.old_item */
extern T2 T862f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_STRING.set_count */
extern void T862f83(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_STRING.reset_byte_index_cache */
extern void T862f93(GE_context* ac, T0* C);
/* [detachable] STRING_8.string */
extern T0* T17f27(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.as_string */
extern T0* T862f19(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.to_utf8 */
extern T0* T862f45(GE_context* ac, T0* C);
/* [detachable] KL_ANY_ROUTINES.same_types */
extern T1 T418f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] KL_STRING_ROUTINES.any_ */
extern T0* T83f4(GE_context* ac, T0* C);
/* [detachable] KL_ANY_ROUTINES.default_create */
extern T0* T418c3(GE_context* ac);
/* [detachable] KL_STDERR_FILE.string_ */
extern T0* T135f1(GE_context* ac, T0* C);
/* [detachable] KL_STRING_ROUTINES.default_create */
extern T0* T83c19(GE_context* ac);
/* [detachable] ET_ERROR_HANDLER.message */
extern T0* T34f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_CANNOT_READ_FILE_ERROR.make */
extern T0* T78c8(GE_context* ac, T0* a1);
/* [detachable] ARRAY [[attached] STRING_8].put */
extern void T323f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ARRAY [[attached] STRING_8].make_filled */
extern T0* T323c7(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [detachable] ARRAY [[attached] STRING_8].make_filled_area */
extern void T323f9(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] STRING_8].make_filled */
extern T0* T324c7(GE_context* ac, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] STRING_8].fill_with */
extern void T324f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] STRING_8].extend */
extern void T324f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] SPECIAL [[attached] STRING_8].make_empty */
extern void T324f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] STRING_8].make_empty */
extern T0* T324c8(GE_context* ac, T6 a1);
/* [detachable] GEC.process_system */
extern void T24f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SHELL_COMMAND.execute */
extern void T65f13(GE_context* ac, T0* C);
/* [detachable] KL_SHELL_COMMAND.operating_system */
extern T0* T65f6(GE_context* ac, T0* C);
/* [detachable] KL_OPERATING_SYSTEM.default_create */
extern T0* T75c6(GE_context* ac);
/* [detachable] KL_SHELL_COMMAND.system */
extern void T65f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SHELL_COMMAND.system_call */
extern T6 T65f9(GE_context* ac, T0* C, T14 a1);
/* [detachable] NATIVE_STRING.item */
extern T14 T363f3(GE_context* ac, T0* C);
/* [detachable] NATIVE_STRING.make */
extern T0* T363c9(GE_context* ac, T0* a1);
/* [detachable] NATIVE_STRING.set_string */
extern void T363f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] NATIVE_STRING.set_substring */
extern void T363f13(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] NATIVE_STRING.unit_size */
extern T6 T363f5(GE_context* ac, T0* C);
/* [detachable] NATIVE_STRING.upper_cell */
extern T0* T363f7(GE_context* ac, T0* C);
/* [detachable] NATIVE_STRING.make_empty */
extern void T363f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SHELL_COMMAND.default_shell */
extern T0* T65f8(GE_context* ac, T0* C);
/* [detachable] STRING_32.make_empty */
extern T0* T18c14(GE_context* ac);
/* [detachable] STRING_32.make */
extern void T18f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] STRING_32.make */
extern T0* T18c15(GE_context* ac, T6 a1);
/* [detachable] SPECIAL [CHARACTER_32].make_filled */
extern T0* T16c7(GE_context* ac, T3 a1, T6 a2);
/* [detachable] SPECIAL [CHARACTER_32].fill_with */
extern void T16f12(GE_context* ac, T0* C, T3 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [CHARACTER_32].extend */
extern void T16f11(GE_context* ac, T0* C, T3 a1);
/* [detachable] SPECIAL [CHARACTER_32].make_empty */
extern void T16f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [CHARACTER_32].make_empty */
extern T0* T16c10(GE_context* ac, T6 a1);
/* [detachable] KL_SHELL_COMMAND.item */
extern T0* T65f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] NATIVE_STRING.string */
extern T0* T363f6(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_8_0_pointer_to_escaped_string_32 */
extern T0* T462f2(GE_context* ac, T462* C, T0* a1);
/* UTF_CONVERTER.utf_8_0_pointer_into_escaped_string_32 */
extern void T462f18(GE_context* ac, T462* C, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_8_0_subpointer_into_escaped_string_32 */
extern void T462f23(GE_context* ac, T462* C, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* UTF_CONVERTER.escape_code_into */
extern void T462f24(GE_context* ac, T462* C, T0* a1, T9 a2);
/* NATURAL_16.to_hex_string */
extern T0* T9f7(GE_context* ac, T9* C);
/* [detachable] STRING_8.put */
extern void T17f67(GE_context* ac, T0* C, T2 a1, T6 a2);
/* INTEGER_32.to_hex_character */
extern T2 T6f29(GE_context* ac, T6* C);
/* CHARACTER_8.plus */
extern T2 T2f28(GE_context* ac, T2* C, T6 a1);
/* CHARACTER_8.minus */
extern T2 T2f27(GE_context* ac, T2* C, T6 a1);
/* NATURAL_16.to_integer_32 */
extern T6 T9f11(GE_context* ac, T9* C);
/* [detachable] STRING_8.make_filled */
extern T0* T17c57(GE_context* ac, T2 a1, T6 a2);
/* [detachable] STRING_8.fill_character */
extern void T17f63(GE_context* ac, T0* C, T2 a1);
/* [detachable] STRING_32.append_string_general */
extern void T18f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] STRING_32.append */
extern void T18f16p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] STRING_32.reset_hash_codes */
extern void T18f22(GE_context* ac, T0* C);
/* [detachable] STRING_32.set_count */
extern void T18f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] STRING_32.append_code */
extern void T18f20(GE_context* ac, T0* C, T10 a1);
/* [detachable] STRING_32.put_code */
extern void T18f23(GE_context* ac, T0* C, T10 a1, T6 a2);
/* [detachable] STRING_32.resize */
extern void T18f19(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [CHARACTER_32].aliased_resized_area_with_default */
extern T0* T16f3(GE_context* ac, T0* C, T3 a1, T6 a2);
/* [detachable] SPECIAL [CHARACTER_32].aliased_resized_area */
extern T0* T16f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] STRING_32.capacity */
extern T6 T18f6(GE_context* ac, T0* C);
/* [detachable] STRING_32.append */
extern void T18f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] SPECIAL [CHARACTER_32].copy_data */
extern void T16f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [detachable] SPECIAL [CHARACTER_32].force */
extern void T16f14(GE_context* ac, T0* C, T3 a1, T6 a2);
/* [detachable] SPECIAL [CHARACTER_32].move_data */
extern void T16f13(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [CHARACTER_32].overlapping_move */
extern void T16f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [CHARACTER_32].non_overlapping_move */
extern void T16f15(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] STRING_32.additional_space */
extern T6 T18f5(GE_context* ac, T0* C);
/* NATURAL_8.to_hex_string */
extern T0* T8f11(GE_context* ac, T8* C);
/* NATURAL_8.to_integer_32 */
extern T6 T8f14(GE_context* ac, T8* C);
/* NATURAL_16.is_less_equal */
extern T1 T9f5(GE_context* ac, T9* C, T9 a1);
/* [detachable] STRING_32.append_character */
extern void T18f17(GE_context* ac, T0* C, T3 a1);
/* NATURAL_8.to_natural_16 */
extern T9 T8f9(GE_context* ac, T8* C);
/* [detachable] STRING_32.extend */
extern void T18f25(GE_context* ac, T0* C, T3 a1);
/* NATURAL_8.is_less_equal */
extern T1 T8f6(GE_context* ac, T8* C, T8 a1);
/* [detachable] MANAGED_POINTER.read_natural_8 */
extern T8 T130f5(GE_context* ac, T0* C, T6 a1);
/* TYPED_POINTER [[attached] NATURAL_8].memory_copy */
extern void T853f2(GE_context* ac, T853* C, T14 a1, T6 a2);
/* TYPED_POINTER [[attached] NATURAL_8].c_memcpy */
extern void T853f3(GE_context* ac, T853* C, T14 a1, T14 a2, T6 a3);
/* [detachable] STRING_32.grow */
extern void T18f24(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.utf_16_0_pointer_to_escaped_string_32 */
extern T0* T462f1(GE_context* ac, T462* C, T0* a1);
/* UTF_CONVERTER.utf_16_0_pointer_into_escaped_string_32 */
extern void T462f17(GE_context* ac, T462* C, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_16_0_subpointer_into_escaped_string_32 */
extern void T462f22(GE_context* ac, T462* C, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* NATURAL_32.is_greater_equal */
extern T1 T10f15(GE_context* ac, T10* C, T10 a1);
/* NATURAL_16.to_natural_32 */
extern T10 T9f4(GE_context* ac, T9* C);
/* [detachable] MANAGED_POINTER.read_natural_16 */
extern T9 T130f7(GE_context* ac, T0* C, T6 a1);
/* TYPED_POINTER [[attached] NATURAL_16].memory_copy */
extern void T1395f2(GE_context* ac, T1395* C, T14 a1, T6 a2);
/* TYPED_POINTER [[attached] NATURAL_16].c_memcpy */
extern void T1395f3(GE_context* ac, T1395* C, T14 a1, T14 a2, T6 a3);
/* [detachable] NATIVE_STRING.make_from_pointer */
extern T0* T363c10(GE_context* ac, T14 a1);
/* [detachable] MANAGED_POINTER.make_from_pointer */
extern T0* T130c13(GE_context* ac, T14 a1, T6 a2);
/* POINTER.memory_alloc */
extern T14 T14f9(GE_context* ac, T14* C, T6 a1);
/* POINTER.c_malloc */
extern T14 T14f10(GE_context* ac, T14* C, T6 a1);
/* [detachable] NATIVE_STRING.pointer_length_in_bytes */
extern T6 T363f4(GE_context* ac, T0* C, T14 a1);
/* NATURAL_64.to_integer_32 */
extern T6 T11f2(GE_context* ac, T11* C);
/* NATURAL_64.is_less_equal */
extern T1 T11f12(GE_context* ac, T11* C, T11 a1);
/* [detachable] NATIVE_STRING.c_pointer_length_in_bytes */
extern T11 T363f8(GE_context* ac, T0* C, T14 a1);
/* [detachable] KL_SHELL_COMMAND.eif_getenv */
extern T14 T65f11(GE_context* ac, T0* C, T14 a1);
/* [detachable] UC_UTF8_STRING.old_is_empty */
extern T1 T862f17(GE_context* ac, T0* C);
/* [detachable] STRING_8.is_empty */
extern T1 T17f12(GE_context* ac, T0* C);
/* INTEGER_32.out */
extern T0* T6f2(GE_context* ac, T6* C);
/* [detachable] STRING_8.append_integer */
extern void T17f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] GEC.c_compile_using_make */
extern T1 T24f53(GE_context* ac, T0* C);
/* [detachable] KL_STRING_ROUTINES.same_string */
extern T1 T83f1(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T83f1ot1(T0* a1, T0** a2);
extern T1 T83f1ot2(T0* a1, T0** a2);
/* [detachable] UC_UTF8_STRING.item_code */
extern T6 T862f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_STRING.byte_index */
extern T6 T862f36(GE_context* ac, T0* C, T6 a1);
/* [detachable] STRING_8.item_code */
extern T6 T17f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_STRING_ROUTINES.elks_same_string */
extern T1 T83f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] UC_UTF8_STRING.same_string */
extern T1 T862f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] UC_UTF8_STRING.substring_index */
extern T6 T862f23(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T862f23ot1(T0* a1, T0** a2);
extern T1 T862f23ot2(T0* a1, T0** a2);
/* [detachable] UC_UTF8_STRING.item */
extern T2 T862f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_STRING.character_item_at_byte_index */
extern T2 T862f43(GE_context* ac, T0* C, T6 a1);
/* [detachable] STRING_8.item */
extern T2 T17f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_STRING.as_string_8 */
extern T0* T862f16(GE_context* ac, T0* C);
/* [detachable] STRING_8.put_code */
extern void T17f54(GE_context* ac, T0* C, T10 a1, T6 a2);
/* [detachable] UC_UTF8_STRING.put_code */
extern void T862f82(GE_context* ac, T0* C, T10 a1, T6 a2);
/* [detachable] UC_UTF8_STRING.put_item_code */
extern void T862f101(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] UC_UTF8_STRING.put_code_at_byte_index */
extern void T862f102(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] UC_UTF8_STRING.put_byte */
extern void T862f103(GE_context* ac, T0* C, T2 a1, T6 a2);
/* [detachable] UC_UTF8_STRING.old_put */
extern void T862f89(GE_context* ac, T0* C, T2 a1, T6 a2);
/* [detachable] UC_UTF8_STRING.reset_hash_codes */
extern void T862f96(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.move_bytes_right */
extern void T862f99(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] UC_UTF8_STRING.resize_byte_storage */
extern void T862f88(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_STRING.resize */
extern void T862f104(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_STRING.byte_capacity */
extern T6 T862f56(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.capacity */
extern T6 T862f56p1(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.move_bytes_left */
extern void T862f98(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] UC_UTF8_ROUTINES.code_byte_count */
extern T6 T861f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] STRING_8.valid_code */
extern T1 T17f37(GE_context* ac, T0* C, T10 a1);
/* [detachable] UC_UTF8_STRING.valid_code */
extern T1 T862f44(GE_context* ac, T0* C, T10 a1);
/* [detachable] STRING_8.set_count */
extern void T17f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_STRING.old_set_count */
extern void T862f81(GE_context* ac, T0* C, T6 a1);
/* [detachable] STRING_8.as_string_8 */
extern T0* T17f24(GE_context* ac, T0* C);
/* [detachable] STRING_8.same_string */
extern T1 T17f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] STRING_8.same_characters */
extern T1 T17f20(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [detachable] SPECIAL [CHARACTER_8].same_items */
extern T1 T15f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [detachable] UC_UTF8_STRING.area_lower */
extern T6 T862f38(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.same_unicode_string */
extern T1 T862f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] UC_UTF8_STRING.unicode_substring_index */
extern T6 T862f49(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T862f49ot1(T0* a1, T0** a2);
extern T1 T862f49ot2(T0* a1, T0** a2);
/* NATURAL_32.to_integer_32 */
extern T6 T10f20(GE_context* ac, T10* C);
/* [detachable] GEC.string_ */
extern T0* T24f55(GE_context* ac, T0* C);
/* [detachable] AP_ENUMERATION_OPTION.parameter */
extern T0* T44f19(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [detachable STRING_8].last */
extern T0* T145f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [detachable STRING_8].is_empty */
extern T1 T145f8(GE_context* ac, T0* C);
/* [detachable] KL_SHELL_COMMAND.make */
extern T0* T65c12(GE_context* ac, T0* a1);
/* [detachable] KL_SHELL_COMMAND.string_ */
extern T0* T65f7(GE_context* ac, T0* C);
/* [detachable] KL_UNIX_FILE_SYSTEM.absolute_pathname */
extern T0* T123f1(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_UNIX_FILE_SYSTEM.pathname */
extern T0* T123f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] KL_STRING_ROUTINES.appended_string */
extern T0* T83f12(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T83f12ot1(T0* a1, T0** a2);
extern T1 T83f12ot2(T0* a1, T0** a2);
/* [detachable] STRING_8.append_string */
extern void T17f56(GE_context* ac, T0* C, T0* a1);
/* [detachable] STRING_8.append */
extern void T17f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_STRING_ROUTINES.concat */
extern T0* T83f15(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T83f15ot1(T0* a1, T0** a2);
extern T1 T83f15ot2(T0* a1, T0** a2);
/* [detachable] UC_UTF8_STRING.prefixed_string */
extern T0* T862f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] UC_UTF8_STRING.make */
extern void T862f73(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_STRING.make */
extern T0* T862c73(GE_context* ac, T6 a1);
/* [detachable] UC_UTF8_STRING.make */
extern void T862f73p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_ROUTINES.substring_byte_count */
extern T6 T861f22(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
extern T1 T861f22ot1(T0* a1, T0** a2);
extern T1 T861f22ot2(T0* a1, T0** a2);
/* [detachable] UC_UTF8_STRING.shifted_byte_index */
extern T6 T862f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] UC_UTF8_ROUTINES.dummy_uc_string */
extern T0* T861f27(GE_context* ac, T0* C);
/* [detachable] UC_STRING.make_empty */
extern T0* T417c9(GE_context* ac);
/* [detachable] UC_STRING.make */
extern void T417f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_STRING.old_set_count */
extern void T417f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_STRING.reset_hash_codes */
extern void T417f14(GE_context* ac, T0* C);
/* [detachable] UC_STRING.set_count */
extern void T417f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_STRING.byte_capacity */
extern T6 T417f8(GE_context* ac, T0* C);
/* [detachable] UC_STRING.capacity */
extern T6 T417f8p1(GE_context* ac, T0* C);
/* [detachable] UC_STRING.make */
extern void T417f10p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_STRING.reset_byte_index_cache */
extern void T417f11(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_ROUTINES.character_byte_count */
extern T6 T861f23(GE_context* ac, T0* C, T2 a1);
/* [detachable] UC_UTF8_ROUTINES.any_ */
extern T0* T861f25(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.append_string */
extern void T862f68(GE_context* ac, T0* C, T0* a1);
/* [detachable] UC_UTF8_STRING.append */
extern void T862f87(GE_context* ac, T0* C, T0* a1);
extern T1 T862f87ot1(T0* a1, T0** a2);
extern T1 T862f87ot2(T0* a1);
/* [detachable] UC_UTF8_STRING.dummy_uc_string */
extern T0* T862f60(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.gobo_append_substring */
extern void T862f70(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] UC_UTF8_STRING.put_substring_at_byte_index */
extern void T862f91(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
extern T1 T862f91ot1(T0* a1, T0** a2);
extern T1 T862f91ot2(T0* a1, T0** a2);
extern T1 T862f91ot3(T0* a1, T0** a2);
/* [detachable] UC_UTF8_STRING.put_character_at_byte_index */
extern void T862f90(GE_context* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* [detachable] UC_UTF8_STRING.cloned_string */
extern T0* T862f42(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.twin */
extern T0* T862f14(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.copy */
extern void T862f80(GE_context* ac, T0* C, T0* a1);
/* [detachable] UC_UTF8_STRING.copy */
extern void T862f80p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] SPECIAL [CHARACTER_8].resized_area */
extern T0* T15f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_STRING.append */
extern void T862f87p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] UC_UTF8_STRING.additional_space */
extern T6 T862f61(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.any_ */
extern T0* T862f41(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.append_character */
extern void T862f69(GE_context* ac, T0* C, T2 a1);
/* [detachable] KL_STRING_ROUTINES.cloned_string */
extern T0* T83f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] STRING_8.twin */
extern T0* T17f11(GE_context* ac, T0* C);
/* [detachable] STRING_8.copy */
extern void T17f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_UNIX_FILE_SYSTEM.string_ */
extern T0* T123f21(GE_context* ac, T0* C);
/* [detachable] KL_UNIX_FILE_SYSTEM.cwd */
extern T0* T123f13(GE_context* ac, T0* C);
/* [detachable] PATH.utf_8_name */
extern T0* T409f6(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_32_string_to_utf_8_string_8 */
extern T0* T462f3(GE_context* ac, T462* C, T0* a1);
/* UTF_CONVERTER.utf_32_string_into_utf_8_string_8 */
extern void T462f19(GE_context* ac, T462* C, T0* a1, T0* a2);
/* [detachable] STRING_8.extend */
extern void T17f78(GE_context* ac, T0* C, T2 a1);
/* [detachable] IMMUTABLE_STRING_32.code */
extern T10 T19f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] STRING_8.grow */
extern void T17f77(GE_context* ac, T0* C, T6 a1);
/* [detachable] PATH.name */
extern T0* T409f4(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_8_string_8_to_escaped_string_32 */
extern T0* T462f5(GE_context* ac, T462* C, T0* a1);
/* UTF_CONVERTER.utf_8_string_8_into_escaped_string_32 */
extern void T462f21(GE_context* ac, T462* C, T0* a1, T0* a2);
/* [detachable] IMMUTABLE_STRING_32.make_from_string */
extern T0* T19c12(GE_context* ac, T0* a1);
/* [detachable] STRING_32.area_lower */
extern T6 T18f8(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_16le_string_8_to_escaped_string_32 */
extern T0* T462f4(GE_context* ac, T462* C, T0* a1);
/* UTF_CONVERTER.utf_16le_string_8_into_escaped_string_32 */
extern void T462f20(GE_context* ac, T462* C, T0* a1, T0* a2);
/* [detachable] EXECUTION_ENVIRONMENT.current_working_path */
extern T0* T121f3(GE_context* ac, T0* C);
/* [detachable] PATH.make_from_pointer */
extern T0* T409c17(GE_context* ac, T14 a1);
/* [detachable] PATH.reset_internal_data */
extern void T409f20(GE_context* ac, T0* C);
/* [detachable] PATH.normalize */
extern void T409f19(GE_context* ac, T0* C);
/* [detachable] STRING_8.remove_tail */
extern void T17f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] PATH.directory_separator */
extern T2 T409f13(GE_context* ac, T0* C);
/* [detachable] STRING_8.remove_head */
extern void T17f68(GE_context* ac, T0* C, T6 a1);
/* [detachable] STRING_8.keep_tail */
extern void T17f73(GE_context* ac, T0* C, T6 a1);
/* [detachable] PATH.root_end_position */
extern T6 T409f12(GE_context* ac, T0* C);
/* [detachable] PATH.next_directory_separator */
extern T6 T409f15(GE_context* ac, T0* C, T6 a1);
/* CHARACTER_8.as_lower */
extern T2 T2f25(GE_context* ac, T2* C);
/* CHARACTER_8.is_upper */
extern T1 T2f12(GE_context* ac, T2* C);
/* [detachable] STRING_8.keep_head */
extern void T17f61(GE_context* ac, T0* C, T6 a1);
/* [detachable] PATH.is_character */
extern T1 T409f8(GE_context* ac, T0* C, T0* a1, T6 a2, T2 a3);
/* detachable C_STRING.substring */
extern T0* T29f3(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable C_STRING.read_substring_into */
extern void T29f12(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* NATURAL_8.to_natural_32 */
extern T10 T8f5(GE_context* ac, T8* C);
/* [detachable] PATH.unit_size */
extern T6 T409f5(GE_context* ac, T0* C);
/* [detachable] PATH.pointer_length_in_bytes */
extern T6 T409f7(GE_context* ac, T0* C, T14 a1);
/* [detachable] PATH.c_pointer_length_in_bytes */
extern T11 T409f14(GE_context* ac, T0* C, T14 a1);
/* [detachable] PATH.make_from_string */
extern T0* T409c16(GE_context* ac, T0* a1);
/* [detachable] PATH.internal_append_into */
extern void T409f18(GE_context* ac, T0* C, T0* a1, T0* a2, T2 a3);
/* UTF_CONVERTER.escaped_utf_32_string_into_utf_8_string_8 */
extern void T462f16(GE_context* ac, T462* C, T0* a1, T0* a2);
/* UTF_CONVERTER.escaped_utf_32_string_into_utf_16le_string_8 */
extern void T462f15(GE_context* ac, T462* C, T0* a1, T0* a2);
/* [detachable] EXECUTION_ENVIRONMENT.eif_dir_current */
extern T6 T121f5(GE_context* ac, T0* C, T14 a1, T6 a2);
/* [detachable] KL_UNIX_FILE_SYSTEM.execution_environment */
extern T0* T123f23(GE_context* ac, T0* C);
/* [detachable] EXECUTION_ENVIRONMENT.default_create */
extern T0* T121c9(GE_context* ac);
/* [detachable] KL_UNIX_FILE_SYSTEM.is_absolute_pathname */
extern T1 T123f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.absolute_pathname */
extern T0* T122f1(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.current_drive */
extern T0* T122f15(GE_context* ac, T0* C);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.is_directory_separator */
extern T1 T122f18(GE_context* ac, T0* C, T2 a1);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.secondary_directory_separator */
extern T2 T122f26(GE_context* ac, T0* C);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.string_ */
extern T0* T122f14(GE_context* ac, T0* C);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.pathname */
extern T0* T122f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.cwd */
extern T0* T122f13(GE_context* ac, T0* C);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.execution_environment */
extern T0* T122f25(GE_context* ac, T0* C);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.is_relative_pathname */
extern T1 T122f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.is_absolute_pathname */
extern T1 T122f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] GEC.file_system */
extern T0* T24f52(GE_context* ac, T0* C);
/* [detachable] GEC.unix_file_system */
extern T0* T24f58(GE_context* ac, T0* C);
/* [detachable] KL_UNIX_FILE_SYSTEM.make */
extern T0* T123c31(GE_context* ac);
/* [detachable] KL_OPERATING_SYSTEM.is_unix */
extern T1 T75f2(GE_context* ac, T0* C);
/* [detachable] KL_OPERATING_SYSTEM.current_working_directory */
extern T0* T75f4(GE_context* ac, T0* C);
/* [detachable] KL_OPERATING_SYSTEM.execution_environment */
extern T0* T75f5(GE_context* ac, T0* C);
/* [detachable] STRING_8.is_equal */
extern T1 T17f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_OPERATING_SYSTEM.variable_value */
extern T0* T75f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] STRING_32.as_string_8 */
extern T0* T18f7(GE_context* ac, T0* C);
/* [detachable] EXECUTION_ENVIRONMENT.item */
extern T0* T121f2(GE_context* ac, T0* C, T0* a1);
/* [detachable] EXECUTION_ENVIRONMENT.eif_getenv */
extern T14 T121f4(GE_context* ac, T0* C, T14 a1);
/* [detachable] GEC.windows_file_system */
extern T0* T24f57(GE_context* ac, T0* C);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.make */
extern T0* T122c34(GE_context* ac);
/* [detachable] GEC.c_compile_using_script */
extern T1 T24f51(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.plus */
extern T0* T862f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] STRING_8.plus */
extern T0* T17f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] STRING_8.append_string_general */
extern void T17f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] STRING_8.append */
extern void T17f48p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] STRING_8.append_code */
extern void T17f52(GE_context* ac, T0* C, T10 a1);
/* [detachable] STRING_8.new_string */
extern T0* T17f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_OPERATING_SYSTEM.is_windows */
extern T1 T75f1(GE_context* ac, T0* C);
/* [detachable] GEC.operating_system */
extern T0* T24f50(GE_context* ac, T0* C);
/* [detachable] GEC.no_c_compile */
extern T1 T24f49(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SYSTEM.dynamic_feature_count */
extern T6 T60f72(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_PRIMARY_TYPE].item */
extern T0* T74f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_SYSTEM.alive_dynamic_type_count */
extern T6 T60f74(GE_context* ac, T0* C);
/* [detachable] KL_STDOUT_FILE.put_new_line */
extern void T136f8(GE_context* ac, T0* C);
/* [detachable] KL_STDOUT_FILE.put_integer */
extern void T136f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_STDOUT_FILE.put_integer_64 */
extern void T136f11(GE_context* ac, T0* C, T7 a1);
/* [detachable] KL_STDOUT_FILE.put_character */
extern void T136f10(GE_context* ac, T0* C, T2 a1);
/* [detachable] CONSOLE.put_character */
extern void T884f22(GE_context* ac, T0* C, T2 a1);
/* [detachable] CONSOLE.console_pc */
extern void T884f27(GE_context* ac, T0* C, T14 a1, T2 a2);
/* [detachable] KL_STDOUT_FILE.console */
extern T0* T136f2(GE_context* ac, T0* C);
/* [detachable] KL_STDOUT_FILE.io */
extern T0* T136f4(GE_context* ac, T0* C);
/* INTEGER_32.to_integer_64 */
extern T7 T6f22(GE_context* ac, T6* C);
/* [detachable] KL_STDOUT_FILE.put_string */
extern void T136f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_STDOUT_FILE.string_ */
extern T0* T136f1(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.generate */
extern void T64f524(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].wipe_out */
extern void T211f52(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].slots_wipe_out */
extern void T211f69(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].clashes_wipe_out */
extern void T211f68(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].key_storage_wipe_out */
extern void T211f67(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] STRING_8].keep_head */
extern void T324f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] STRING_8].set_count */
extern void T324f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item_storage_wipe_out */
extern void T211f66(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].unset_found_item */
extern void T211f58(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].move_all_cursors_after */
extern void T211f65(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].set_next_cursor */
extern void T295f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].set_after */
extern void T295f17(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.generate_compilation_script */
extern void T64f528(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.generate_compilation_makefile */
extern void T64f563(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.report_cannot_write_error */
extern void T64f530(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.error_handler */
extern T0* T64f130(GE_context* ac, T0* C);
/* [detachable] UT_CANNOT_WRITE_TO_FILE_ERROR.make */
extern T0* T296c8(GE_context* ac, T0* a1);
/* [detachable] ET_C_GENERATOR.set_fatal_error */
extern void T64f529(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.close */
extern void T292f34(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.old_close */
extern void T292f39(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.default_pointer */
extern T14 T292f18(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.file_close */
extern void T292f47(GE_context* ac, T0* C, T14 a1);
/* [detachable] DS_STRING_HASH_TABLE.expanded_string */
extern T0* T294f27(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [detachable] DS_STRING_HASH_TABLE.value */
extern T0* T294f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_STRING_HASH_TABLE.item_storage_item */
extern T0* T294f39(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_STRING_HASH_TABLE.position_of_key */
extern T6 T294f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_STRING_HASH_TABLE.clashes_item */
extern T6 T294f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_STRING_HASH_TABLE.key_storage_item */
extern T0* T294f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_STRING_HASH_TABLE.hash_position */
extern T6 T294f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] UC_UTF8_STRING.hash_code */
extern T6 T862f57(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.hash_code */
extern T6 T862f57p1(GE_context* ac, T0* C);
/* [detachable] STRING_8.hash_code */
extern T6 T17f25(GE_context* ac, T0* C);
/* [detachable] DS_STRING_HASH_TABLE.slots_item */
extern T6 T294f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_STRING_ROUTINES.append_substring_to_string */
extern void T83f20(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
extern T1 T83f20ot1(T0* a1, T0** a2);
/* [detachable] KL_STRING_ROUTINES.appended_substring */
extern T0* T83f11(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
extern T1 T83f11ot1(T0* a1, T0** a2);
extern T1 T83f11ot2(T0* a1, T0** a2);
/* [detachable] UC_UTF8_STRING.new_empty_string */
extern T0* T862f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_STRING_HASH_TABLE.string_ */
extern T0* T294f22(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.is_open_write */
extern T1 T292f23(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.old_is_open_write */
extern T1 T292f19(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.open_write */
extern void T292f29(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.is_closed */
extern T1 T292f17(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.old_is_closed */
extern T1 T292f22(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.old_open_write */
extern void T292f41(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.open_write */
extern void T292f41p1(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.file_open */
extern T14 T292f21(GE_context* ac, T0* C, T14 a1, T6 a2);
/* [detachable] KL_TEXT_OUTPUT_FILE.internal_name_pointer */
extern T0* T292f20(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.string_name */
extern T0* T292f14(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.make */
extern T0* T292c28(GE_context* ac, T0* a1);
/* [detachable] KL_TEXT_OUTPUT_FILE.old_make */
extern void T292f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_TEXT_OUTPUT_FILE.make_with_name */
extern void T292f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_TEXT_OUTPUT_FILE.set_name */
extern void T292f52(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_TEXT_OUTPUT_FILE.buffered_file_info */
extern T0* T292f25(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.string_ */
extern T0* T292f12(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.operating_system */
extern T0* T64f129(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.generate_compilation_shell_script */
extern void T64f562(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] KL_TEXT_OUTPUT_FILE.change_mode */
extern void T292f38(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_TEXT_OUTPUT_FILE.old_change_mode */
extern void T292f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_TEXT_OUTPUT_FILE.file_chmod */
extern void T292f51(GE_context* ac, T0* C, T14 a1, T6 a2);
/* [detachable] KL_TEXT_OUTPUT_FILE.old_exists */
extern T1 T292f16(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.file_exists */
extern T1 T292f26(GE_context* ac, T0* C, T14 a1);
/* [detachable] KL_UNIX_FILE_SYSTEM.file_exists */
extern T1 T123f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_TEXT_INPUT_FILE.exists */
extern T1 T31f32(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.is_plain */
extern T1 T31f34(GE_context* ac, T0* C);
/* [detachable] FILE_INFO.is_plain */
extern T1 T131f13(GE_context* ac, T0* C);
/* [detachable] FILE_INFO.file_info */
extern T6 T131f14(GE_context* ac, T0* C, T14 a1, T6 a2);
/* [detachable] KL_TEXT_INPUT_FILE.buffered_file_info */
extern T0* T31f29(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.set_buffer */
extern void T31f73(GE_context* ac, T0* C);
/* [detachable] FILE_INFO.fast_update */
extern void T131f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] FILE_INFO.eif_file_stat */
extern T6 T131f12(GE_context* ac, T0* C, T14 a1, T14 a2, T1 a3);
/* [detachable] KL_TEXT_INPUT_FILE.internal_name_pointer */
extern T0* T31f23(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.old_exists */
extern T1 T31f15(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.file_exists */
extern T1 T31f30(GE_context* ac, T0* C, T14 a1);
/* [detachable] KL_TEXT_INPUT_FILE.old_is_closed */
extern T1 T31f27(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.string_name */
extern T0* T31f13(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.reset */
extern void T31f74(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_UNIX_FILE_SYSTEM.tmp_file */
extern T0* T123f22(GE_context* ac, T0* C);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.file_exists */
extern T1 T122f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.tmp_file */
extern T0* T122f24(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.remove_tail */
extern void T862f71(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_STRING.keep_head */
extern void T862f77(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_STRING.wipe_out */
extern void T862f92(GE_context* ac, T0* C);
/* [detachable] KL_UNIX_FILE_SYSTEM.has_extension */
extern T1 T123f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.has_extension */
extern T1 T122f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.file_system */
extern T0* T64f116(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.unix_file_system */
extern T0* T64f454(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.windows_file_system */
extern T0* T64f453(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].item */
extern T0* T295f5(GE_context* ac, T0* C);
/* [detachable] DS_STRING_HASH_TABLE.cursor_item */
extern T0* T294f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_item */
extern T0* T211f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item_storage_item */
extern T0* T211f31(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].forth */
extern void T295f16(GE_context* ac, T0* C);
/* [detachable] DS_STRING_HASH_TABLE.cursor_forth */
extern void T294f71(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_STRING_HASH_TABLE.add_traversing_cursor */
extern void T294f73(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].set_position */
extern void T295f19(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_STRING_HASH_TABLE.remove_traversing_cursor */
extern void T294f72(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_forth */
extern void T211f71(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].add_traversing_cursor */
extern void T211f78(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].remove_traversing_cursor */
extern void T211f77(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].clashes_item */
extern T6 T211f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].after */
extern T1 T295f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].start */
extern void T295f15(GE_context* ac, T0* C);
/* [detachable] DS_STRING_HASH_TABLE.cursor_start */
extern void T294f70(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_STRING_HASH_TABLE.cursor_off */
extern T1 T294f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].off */
extern T1 T295f11(GE_context* ac, T0* C);
/* [detachable] DS_STRING_HASH_TABLE.is_empty */
extern T1 T294f43(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_start */
extern void T211f70(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_off */
extern T1 T211f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].is_empty */
extern T1 T211f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].back */
extern void T295f14(GE_context* ac, T0* C);
/* [detachable] DS_STRING_HASH_TABLE.cursor_back */
extern void T294f69(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].set_before */
extern void T295f20(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_back */
extern void T211f85(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].key */
extern T0* T295f9(GE_context* ac, T0* C);
/* [detachable] DS_STRING_HASH_TABLE.cursor_key */
extern T0* T294f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_key */
extern T0* T211f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].key_storage_item */
extern T0* T211f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].is_last */
extern T1 T295f7(GE_context* ac, T0* C);
/* [detachable] DS_STRING_HASH_TABLE.cursor_is_last */
extern T1 T294f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_is_last */
extern T1 T211f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].before */
extern T1 T295f6(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].finish */
extern void T295f13(GE_context* ac, T0* C);
/* [detachable] DS_STRING_HASH_TABLE.cursor_finish */
extern void T294f68(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_finish */
extern void T211f84(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].new_cursor */
extern T0* T211f22(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].make */
extern T0* T295c12(GE_context* ac, T0* a1);
/* [detachable] DS_STRING_HASH_TABLE.item */
extern T0* T294f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_STRING_HASH_TABLE.search_position */
extern void T294f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.add_external_c_files */
extern void T64f561(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] KL_DIRECTORY.close */
extern void T326f34(GE_context* ac, T0* C);
/* [detachable] KL_DIRECTORY.old_close */
extern void T326f35(GE_context* ac, T0* C);
/* [detachable] KL_DIRECTORY.default_pointer */
extern T14 T326f17(GE_context* ac, T0* C);
/* [detachable] KL_DIRECTORY.dir_close */
extern void T326f39(GE_context* ac, T0* C, T14 a1);
/* [detachable] KL_STRING_ROUTINES.replaced_all_substrings */
extern T0* T83f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] KL_STRING_ROUTINES.substring_index */
extern T6 T83f14(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] KL_STRING_ROUTINES.platform */
extern T0* T83f16(GE_context* ac, T0* C);
/* [detachable] STRING_8.substring_index */
extern T6 T17f29(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] STRING_8_SEARCHER.substring_index */
extern T6 T738f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [detachable] STRING_8_SEARCHER.substring_index_with_deltas */
extern T6 T738f2(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [detachable] STRING_8_SEARCHER.internal_initialize_deltas */
extern void T738f8(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* [detachable] STRING_8.string_searcher */
extern T0* T17f39(GE_context* ac, T0* C);
/* [detachable] STRING_8_SEARCHER.make */
extern T0* T738c6(GE_context* ac);
/* [detachable] ET_C_GENERATOR.multithreaded_mode */
extern T1 T64f264(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].force_last */
extern void T211f51(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].key_storage_put */
extern void T211f64(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] STRING_8].force */
extern void T366f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].slots_put */
extern void T211f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].clashes_put */
extern void T211f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].slots_item */
extern T6 T211f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].hash_position */
extern T6 T211f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_AGENT_HASH_FUNCTION [[attached] STRING_8].hash_code */
extern T6 T210f2(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].resize */
extern void T211f61(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].clashes_resize */
extern void T211f76(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].aliased_resized_area_with_default */
extern T0* T368f1(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] INTEGER_32].aliased_resized_area_with_default */
extern T0* T125f4(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] SPECIAL [[attached] INTEGER_32].aliased_resized_area */
extern T0* T125f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].special_integer_ */
extern T0* T211f41(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].default_create */
extern T0* T368c6(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].key_storage_resize */
extern void T211f75(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] STRING_8].aliased_resized_area */
extern T0* T366f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] STRING_8].aliased_resized_area */
extern T0* T324f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item_storage_resize */
extern void T211f74(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].slots_resize */
extern void T211f73(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].new_modulus */
extern T6 T211f36(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].new_capacity */
extern T6 T211f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item_storage_put */
extern void T211f60(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].search_position */
extern void T211f59(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_UNIX_FILE_SYSTEM.extension */
extern T0* T123f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.extension */
extern T0* T122f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] UC_UTF8_STRING.ends_with */
extern T1 T862f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] STRING_8.area_upper */
extern T6 T17f21(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.area_upper */
extern T6 T862f48(GE_context* ac, T0* C);
/* [detachable] STRING_8.ends_with */
extern T1 T17f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_DIRECTORY.read_entry */
extern void T326f33(GE_context* ac, T0* C);
/* [detachable] KL_DIRECTORY.last_entry_8 */
extern T0* T326f15(GE_context* ac, T0* C);
/* [detachable] FILE_INFO.pointer_to_file_name_8 */
extern T0* T131f15(GE_context* ac, T0* C, T14 a1);
/* detachable C_STRING.string */
extern T0* T29f5(GE_context* ac, T0* C);
/* detachable C_STRING.c_strlen */
extern T6 T29f6(GE_context* ac, T0* C, T14 a1);
/* detachable C_STRING.make_shared_from_pointer */
extern T0* T29c14(GE_context* ac, T14 a1);
/* [detachable] FILE_INFO.utf_16_to_multi_byte */
extern T6 T131f18(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* [detachable] KL_DIRECTORY.file_info */
extern T0* T326f24(GE_context* ac, T0* C);
/* [detachable] KL_DIRECTORY.readentry */
extern void T326f38(GE_context* ac, T0* C);
/* [detachable] KL_DIRECTORY.eif_dir_next */
extern T14 T326f22(GE_context* ac, T0* C, T14 a1);
/* [detachable] ET_C_GENERATOR.report_cannot_read_error */
extern void T64f629(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_DIRECTORY.is_open_read */
extern T1 T326f26(GE_context* ac, T0* C);
/* [detachable] KL_DIRECTORY.is_closed */
extern T1 T326f16(GE_context* ac, T0* C);
/* [detachable] KL_DIRECTORY.open_read */
extern void T326f32(GE_context* ac, T0* C);
/* [detachable] KL_DIRECTORY.old_open_read */
extern void T326f37(GE_context* ac, T0* C);
/* [detachable] KL_DIRECTORY.dir_open */
extern T14 T326f19(GE_context* ac, T0* C, T14 a1);
/* [detachable] KL_DIRECTORY.internal_name_pointer */
extern T0* T326f18(GE_context* ac, T0* C);
/* [detachable] KL_DIRECTORY.old_is_readable */
extern T1 T326f13(GE_context* ac, T0* C);
/* [detachable] KL_DIRECTORY.eif_dir_is_readable */
extern T1 T326f28(GE_context* ac, T0* C, T14 a1);
/* [detachable] KL_DIRECTORY.old_exists */
extern T1 T326f12(GE_context* ac, T0* C);
/* [detachable] KL_DIRECTORY.eif_dir_exists */
extern T1 T326f27(GE_context* ac, T0* C, T14 a1);
/* [detachable] KL_DIRECTORY.make */
extern void T326f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_DIRECTORY.make */
extern T0* T326c31(GE_context* ac, T0* a1);
/* [detachable] KL_DIRECTORY.old_make */
extern void T326f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_DIRECTORY.make_with_name */
extern void T326f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_DIRECTORY.set_name */
extern void T326f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_DIRECTORY.string_ */
extern T0* T326f23(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.captured_substring */
extern T0* T82f79(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.captured_end_position */
extern T6 T82f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.captured_start_position */
extern T6 T82f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.recognizes */
extern T1 T82f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.has_matched */
extern T1 T82f231(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].set_key_equality_tester */
extern void T211f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.string_equality_tester */
extern T0* T64f283(GE_context* ac, T0* C);
/* [detachable] KL_STRING_EQUALITY_TESTER.default_create */
extern T0* T148c2(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_map */
extern void T211f48(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_map */
extern T0* T211c48(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_with_equality_testers */
extern void T211f57(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_sparse_container */
extern void T211f72(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].set_internal_cursor */
extern void T211f83(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_slots */
extern void T211f82(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_clashes */
extern void T211f81(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_key_storage */
extern void T211f80(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] STRING_8].make */
extern T0* T366f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] STRING_8].default_create */
extern T0* T366c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_item_storage */
extern void T211f79(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_STRING_HASH_TABLE.found_item */
extern T0* T294f21(GE_context* ac, T0* C);
/* [detachable] DS_STRING_HASH_TABLE.found */
extern T1 T294f30(GE_context* ac, T0* C);
/* [detachable] DS_STRING_HASH_TABLE.search */
extern void T294f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_STRING_HASH_TABLE.force */
extern void T294f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_STRING_HASH_TABLE.key_storage_put */
extern void T294f57(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_STRING_HASH_TABLE.slots_put */
extern void T294f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_STRING_HASH_TABLE.clashes_put */
extern void T294f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_STRING_HASH_TABLE.resize */
extern void T294f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_STRING_HASH_TABLE.clashes_resize */
extern void T294f62(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_STRING_HASH_TABLE.special_integer_ */
extern T0* T294f38(GE_context* ac, T0* C);
/* [detachable] DS_STRING_HASH_TABLE.key_storage_resize */
extern void T294f61(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_STRING_HASH_TABLE.item_storage_resize */
extern void T294f60(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_STRING_HASH_TABLE.slots_resize */
extern void T294f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_STRING_HASH_TABLE.new_modulus */
extern T6 T294f35(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_STRING_HASH_TABLE.new_capacity */
extern T6 T294f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_STRING_HASH_TABLE.item_storage_put */
extern void T294f53(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_STRING_HASH_TABLE.unset_found_item */
extern void T294f52(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.starts_with */
extern T1 T862f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] STRING_8.starts_with */
extern T1 T17f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_EXECUTION_ENVIRONMENT.interpreted_string */
extern T0* T86f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_EXECUTION_ENVIRONMENT.expanded_string */
extern T0* T86f5(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [detachable] KL_EXECUTION_ENVIRONMENT.variable_value */
extern T0* T86f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_EXECUTION_ENVIRONMENT.environment_impl */
extern T0* T86f1(GE_context* ac, T0* C);
/* [detachable] KL_EXECUTION_ENVIRONMENT.string_ */
extern T0* T86f2(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.replace_all */
extern T0* T82f227(GE_context* ac, T0* C, T0* a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.append_replace_all_to_string */
extern void T82f306(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.match_unbounded_substring */
extern void T82f320(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.match_substring */
extern void T82f318(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.match_it */
extern void T82f333(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.match_start */
extern T1 T82f150(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.match_internal */
extern T6 T82f232(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.match_repeated_type */
extern T6 T82f296(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.match_not_repeated_characters */
extern T6 T82f295(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.infinity */
extern T6 T82f59(GE_context* ac, T0* C);
/* [detachable] KL_PLATFORM.maximum_integer */
extern T6 T460f1(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.platform */
extern T0* T82f194(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.match_repeated_characters */
extern T6 T82f294(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* [detachable] RX_BYTE_CODE.character_item */
extern T6 T411f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.match_repeated_classes */
extern T6 T82f293(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_BYTE_CODE.character_set_has */
extern T1 T411f10(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.match_repeated_refs */
extern T6 T82f292(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.match_ref */
extern T6 T82f298(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.space_set */
extern T0* T82f151(GE_context* ac, T0* C);
/* [detachable] RX_CHARACTER_SET.make */
extern T0* T412c5(GE_context* ac, T0* a1);
/* [detachable] RX_CHARACTER_SET.add_string */
extern void T412f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] RX_CHARACTER_SET.add_character */
extern void T412f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_CHARACTER_SET.make_empty */
extern void T412f4(GE_context* ac, T0* C);
/* [detachable] RX_CHARACTER_SET.make_empty */
extern T0* T412c4(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] BOOLEAN].make_filled */
extern T0* T532f3(GE_context* ac, T0* C, T1 a1, T6 a2);
/* [detachable] RX_CHARACTER_SET.special_boolean_ */
extern T0* T412f3(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] BOOLEAN].default_create */
extern T0* T532c5(GE_context* ac);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.digit_set */
extern T0* T82f167(GE_context* ac, T0* C);
/* [detachable] RX_CHARACTER_SET.has */
extern T1 T412f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_ims_options */
extern void T82f331(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.is_option_dotall */
extern T1 T82f86(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.is_option_multiline */
extern T1 T82f85(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.is_option_caseless */
extern T1 T82f84(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_match_count */
extern void T82f340(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_next_start */
extern void T82f339(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.match_recursive */
extern T6 T82f291(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* [detachable] RX_BYTE_CODE.integer_item */
extern T6 T411f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.next_matching_alternate */
extern T6 T82f289(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.match_additional_bracket */
extern T6 T82f270(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] RX_BYTE_CODE.opcode_item */
extern T6 T411f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.special_integer_ */
extern T0* T82f54(GE_context* ac, T0* C);
/* [detachable] RX_CASE_MAPPING.flip_case */
extern T6 T413f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_CASE_MAPPING.to_lower */
extern T6 T413f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.append_replacement_to_string */
extern void T82f319(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] UC_UTF8_STRING.append_code */
extern void T862f75(GE_context* ac, T0* C, T10 a1);
/* [detachable] UC_UTF8_STRING.append_item_code */
extern void T862f95(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.append_captured_substring_to_string */
extern void T82f334(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.string_ */
extern T0* T82f70(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.execution_environment */
extern T0* T64f128(GE_context* ac, T0* C);
/* [detachable] KL_EXECUTION_ENVIRONMENT.default_create */
extern T0* T86c6(GE_context* ac);
/* [detachable] KL_STRING_ROUTINES.new_empty_string */
extern T0* T83f2(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T83f2ot1(T0* a1, T0** a2);
/* [detachable] UC_UTF8_STRING.old_wipe_out */
extern void T862f76(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.wipe_out */
extern void T862f76p1(GE_context* ac, T0* C);
/* [detachable] STRING_8.wipe_out */
extern void T17f59(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.string_ */
extern T0* T64f127(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.match */
extern void T82f305(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].item */
extern T0* T142f17(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.current_system */
extern T0* T64f278(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_case_insensitive */
extern void T82f304(GE_context* ac, T0* C, T1 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_caseless */
extern void T82f317(GE_context* ac, T0* C, T1 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T82f303(GE_context* ac, T0* C, T0* a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T82f303p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_startline */
extern void T82f316(GE_context* ac, T0* C, T1 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.has_startline */
extern T1 T82f230(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.first_significant_code */
extern T6 T82f189(GE_context* ac, T0* C, T6 a1, T6 a2, T1 a3);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.find_firstchar */
extern T6 T82f229(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_anchored */
extern void T82f315(GE_context* ac, T0* C, T1 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.can_anchored */
extern T1 T82f228(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.ims_options */
extern T6 T82f148(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_option_dotall */
extern T6 T82f132(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_option_multiline */
extern T6 T82f130(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_option_caseless */
extern T6 T82f128(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.compile_regexp */
extern void T82f314(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3, T6 a4);
/* [detachable] RX_BYTE_CODE.set_count */
extern void T411f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.find_fixed_code_length */
extern T6 T82f64(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_BYTE_CODE.put_integer */
extern void T411f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.compile_branch */
extern void T82f332(GE_context* ac, T0* C, T1 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.meta_set */
extern T0* T82f147(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.maxlit */
extern T6 T82f146(GE_context* ac, T0* C);
/* [detachable] RX_BYTE_CODE.append_character */
extern void T411f19(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_BYTE_CODE.put_character */
extern void T411f25(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] RX_BYTE_CODE.resize_byte_code */
extern void T411f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_BYTE_CODE.special_integer_ */
extern T0* T411f9(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.scan_escape */
extern T6 T82f141(GE_context* ac, T0* C, T6 a1, T1 a2);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.scan_hex_number */
extern T6 T82f222(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.xdigit_set */
extern T0* T82f244(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.scan_octal_number */
extern T6 T82f221(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.escape_character */
extern T6 T82f217(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.to_option_ims */
extern T6 T82f135(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_ichanged */
extern void T82f330(GE_context* ac, T0* C, T1 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.unset_option_dotall */
extern T6 T82f133(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.unset_option_multiline */
extern T6 T82f131(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.unset_option_caseless */
extern T6 T82f129(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.scan_decimal_number */
extern T6 T82f110(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.compile_repeats */
extern void T82f337(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5);
/* [detachable] RX_BYTE_CODE.append_subcopy */
extern void T411f23(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] RX_BYTE_CODE.put_opcode */
extern void T411f22(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] RX_BYTE_CODE.move_right */
extern void T411f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.compile_single_repeat */
extern void T82f338(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.compile_character_class */
extern void T82f336(GE_context* ac, T0* C);
/* [detachable] RX_BYTE_CODE.append_character_set */
extern void T411f20(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [detachable] RX_BYTE_CODE.resize_character_sets */
extern void T411f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] BOOLEAN].aliased_resized_area_with_default */
extern T0* T532f4(GE_context* ac, T0* C, T0* a1, T1 a2, T6 a3);
/* [detachable] SPECIAL [[attached] BOOLEAN].aliased_resized_area_with_default */
extern T0* T126f5(GE_context* ac, T0* C, T1 a1, T6 a2);
/* [detachable] SPECIAL [[attached] BOOLEAN].aliased_resized_area */
extern T0* T126f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_BYTE_CODE.special_boolean_ */
extern T0* T411f12(GE_context* ac, T0* C);
/* [detachable] RX_CHARACTER_SET.add_set */
extern void T412f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] RX_CHARACTER_SET.add_negated_set */
extern void T412f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ARRAY [[attached] RX_CHARACTER_SET].item */
extern T0* T415f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.class_sets */
extern T0* T82f159(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.default_word_set */
extern T0* T82f76(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.punct_set */
extern T0* T82f243(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.print_set */
extern T0* T82f242(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.graph_set */
extern T0* T82f241(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.cntrl_set */
extern T0* T82f240(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.ascii_set */
extern T0* T82f239(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.alnum_set */
extern T0* T82f238(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.upper_set */
extern T0* T82f237(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.lower_set */
extern T0* T82f236(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.alpha_set */
extern T0* T82f234(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.check_posix_name */
extern T6 T82f157(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ARRAY [[attached] STRING_8].item */
extern T0* T323f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] ARRAY [[attached] STRING_8].count */
extern T6 T323f6(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.class_names */
extern T0* T82f235(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.check_posix_syntax */
extern T6 T82f155(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_CHARACTER_SET.wipe_out */
extern void T412f6(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.actual_set */
extern T0* T82f152(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.compile_counted_repeats */
extern T1 T82f88(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.scan_comment */
extern void T82f335(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.is_option_undef */
extern T1 T82f61(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_BYTE_CODE.append_integer */
extern void T411f16(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_BYTE_CODE.append_opcode */
extern void T411f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_error */
extern void T82f313(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_default_internal_options */
extern void T82f312(GE_context* ac, T0* C);
/* [detachable] RX_BYTE_CODE.wipe_out */
extern void T411f14(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T82f311(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T82f311p1(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.make */
extern T0* T82c302(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].make_filled */
extern T0* T368f2(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.make */
extern void T82f302p1(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_default_options */
extern void T82f310(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_strict */
extern void T82f329(GE_context* ac, T0* C, T1 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_greedy */
extern void T82f328(GE_context* ac, T0* C, T1 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_eol */
extern void T82f327(GE_context* ac, T0* C, T1 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_bol */
extern void T82f326(GE_context* ac, T0* C, T1 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_dollar_endonly */
extern void T82f325(GE_context* ac, T0* C, T1 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_empty_allowed */
extern void T82f324(GE_context* ac, T0* C, T1 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_extended */
extern void T82f323(GE_context* ac, T0* C, T1 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_dotall */
extern void T82f322(GE_context* ac, T0* C, T1 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_multiline */
extern void T82f321(GE_context* ac, T0* C, T1 a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_word_set */
extern void T82f309(GE_context* ac, T0* C, T0* a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.set_character_case_mapping */
extern void T82f308(GE_context* ac, T0* C, T0* a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.default_character_case_mapping */
extern T0* T82f75(GE_context* ac, T0* C);
/* [detachable] RX_CASE_MAPPING.make */
extern T0* T413c6(GE_context* ac, T0* a1, T0* a2);
/* [detachable] RX_CASE_MAPPING.add */
extern void T413f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] RX_CASE_MAPPING.make_default */
extern void T413f7(GE_context* ac, T0* C);
/* [detachable] RX_CASE_MAPPING.clear */
extern void T413f9(GE_context* ac, T0* C);
/* [detachable] RX_CASE_MAPPING.special_integer_ */
extern T0* T413f5(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T82f307(GE_context* ac, T0* C);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T82f307p1(GE_context* ac, T0* C);
/* [detachable] KL_STRING_ROUTINES.wipe_out */
extern void T83f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.empty_pattern_buffer */
extern T0* T82f74(GE_context* ac, T0* C);
/* [detachable] RX_BYTE_CODE.make */
extern T0* T411c13(GE_context* ac, T6 a1);
/* [detachable] ET_C_GENERATOR.c_config */
extern T0* T64f126(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.parse_file */
extern void T452f180(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_CONFIG_PARSER.parse */
extern void T452f184(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yy_pop_last_value */
extern void T452f197(GE_context* ac, T0* C, T6 a1);
/* [detachable] UT_CONFIG_PARSER.yy_push_error_value */
extern void T452f196(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ANY].force */
extern void T509f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ANY].fill_with */
extern void T510f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ANY].extend */
extern void T510f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ANY].aliased_resized_area */
extern T0* T509f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ANY].aliased_resized_area */
extern T0* T510f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] UT_CONFIG_PARSER.yy_do_action */
extern void T452f195(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] BOOLEAN].force */
extern void T532f6(GE_context* ac, T0* C, T0* a1, T1 a2, T6 a3);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] BOOLEAN].aliased_resized_area */
extern T0* T532f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] UT_CONFIG_PARSER.is_defined */
extern T1 T452f136(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].has */
extern T1 T211f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].force */
extern void T211f86(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] UT_CONFIG_PARSER.process_include */
extern void T452f208(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_TOO_MANY_INCLUDES_ERROR.make */
extern T0* T1296c8(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_STACK [[attached] YY_BUFFER].put */
extern void T1294f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] YY_BUFFER].force */
extern void T1642f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] YY_BUFFER].fill_with */
extern void T1641f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] YY_BUFFER].extend */
extern void T1641f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_STACK [[attached] INTEGER_32].put */
extern void T902f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] UT_CONFIG_PARSER.execution_environment */
extern T0* T452f162(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [[attached] YY_BUFFER].is_full */
extern T1 T1294f5(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.undefine_value */
extern void T452f207(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].remove */
extern void T211f87(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].remove_position */
extern void T211f88(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].key_storage_keep_head */
extern void T211f92(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item_storage_keep_head */
extern void T211f91(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].move_cursors_forth */
extern void T211f90(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].internal_set_key_equality_tester */
extern void T211f89(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_CONFIG_PARSER.ignored */
extern T1 T452f133(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yy_push_last_value */
extern void T452f194(GE_context* ac, T0* C, T6 a1);
/* [detachable] UT_CONFIG_PARSER.accept */
extern void T452f193(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yy_do_error_action */
extern void T452f191(GE_context* ac, T0* C, T6 a1);
/* [detachable] UT_CONFIG_PARSER.report_error */
extern void T452f206(GE_context* ac, T0* C, T0* a1);
extern T1 T452f206ot1(T0* a1, T0** a2);
/* [detachable] UT_SYNTAX_ERROR.make */
extern T0* T1295c8(GE_context* ac, T0* a1, T6 a2);
/* [detachable] UT_CONFIG_PARSER.report_eof_expected_error */
extern void T452f205(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.read_token */
extern void T452f190(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yy_execute_action */
extern void T452f204(GE_context* ac, T0* C, T6 a1);
/* [detachable] UT_CONFIG_PARSER.yy_set_beginning_of_line */
extern void T452f213(GE_context* ac, T0* C);
/* [detachable] YY_FILE_BUFFER.set_beginning_of_line */
extern void T896f24(GE_context* ac, T0* C, T1 a1);
/* [detachable] YY_BUFFER.set_beginning_of_line */
extern void T898f16(GE_context* ac, T0* C, T1 a1);
/* [detachable] UT_CONFIG_PARSER.text_item */
extern T2 T452f161(GE_context* ac, T0* C, T6 a1);
/* [detachable] UT_CONFIG_PARSER.text_substring */
extern T0* T452f155(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] KL_CHARACTER_BUFFER.substring */
extern T0* T1373f4(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] UT_CONFIG_PARSER.text_count */
extern T6 T452f154(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.string_ */
extern T0* T452f150(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.text */
extern T0* T452f149(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.set_start_condition */
extern void T452f211(GE_context* ac, T0* C, T6 a1);
/* [detachable] UT_CONFIG_PARSER.yy_execute_eof_action */
extern void T452f203(GE_context* ac, T0* C, T6 a1);
/* [detachable] UT_CONFIG_PARSER.terminate */
extern void T452f212(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.wrap */
extern T1 T452f128(GE_context* ac, T0* C);
extern T1 T452f128ot1(T0* a1, T0** a2);
/* [detachable] DS_ARRAYED_STACK [[attached] YY_BUFFER].remove */
extern void T1294f10(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] YY_BUFFER].keep_head */
extern void T1641f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] YY_BUFFER].set_count */
extern void T1641f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [[attached] INTEGER_32].remove */
extern void T902f11(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] INTEGER_32].keep_head */
extern void T125f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] INTEGER_32].set_count */
extern void T125f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [[attached] INTEGER_32].item */
extern T6 T902f5(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [[attached] YY_BUFFER].item */
extern T0* T1294f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [[attached] YY_BUFFER].is_empty */
extern T1 T1294f6(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yy_refill_input_buffer */
extern void T452f202(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yy_set_content */
extern void T452f200(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_CHARACTER_BUFFER.count */
extern T6 T1373f3(GE_context* ac, T0* C);
/* [detachable] YY_FILE_BUFFER.fill */
extern void T896f21(GE_context* ac, T0* C);
/* [detachable] KL_CHARACTER_BUFFER.fill_from_stream */
extern T6 T1373f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] KL_CHARACTER_BUFFER.put */
extern void T1373f11(GE_context* ac, T0* C, T2 a1, T6 a2);
/* [detachable] YY_FILE_BUFFER.compact_left */
extern void T896f26(GE_context* ac, T0* C);
/* [detachable] KL_CHARACTER_BUFFER.move_left */
extern void T1373f13(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] STRING_8.subcopy */
extern void T17f79(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [detachable] YY_FILE_BUFFER.resize */
extern void T896f28(GE_context* ac, T0* C);
/* [detachable] KL_CHARACTER_BUFFER.resize */
extern void T1373f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] YY_FILE_BUFFER.default_capacity */
extern T6 T896f16(GE_context* ac, T0* C);
/* [detachable] YY_BUFFER.fill */
extern void T898f14(GE_context* ac, T0* C);
/* [detachable] YY_FILE_BUFFER.set_index */
extern void T896f20(GE_context* ac, T0* C, T6 a1);
/* [detachable] YY_BUFFER.set_index */
extern void T898f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] UT_CONFIG_PARSER.yy_null_trans_state */
extern T6 T452f127(GE_context* ac, T0* C, T6 a1);
/* [detachable] UT_CONFIG_PARSER.yy_previous_state */
extern T6 T452f126(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.fatal_error */
extern void T452f201(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_MESSAGE.make */
extern T0* T81c8(GE_context* ac, T0* a1);
/* [detachable] KL_CHARACTER_BUFFER.item */
extern T2 T1373f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].force */
extern void T368f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].aliased_resized_area */
extern T0* T368f4(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] UT_CONFIG_PARSER.special_integer_ */
extern T0* T452f104(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yy_init_value_stacks */
extern void T452f189(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yy_clear_all */
extern void T452f198(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.clear_all */
extern void T452f209(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.clear_stacks */
extern void T452f214(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yy_clear_value_stacks */
extern void T452f215(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] BOOLEAN].keep_head */
extern void T126f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] BOOLEAN].set_count */
extern void T126f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ANY].keep_head */
extern void T510f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ANY].set_count */
extern void T510f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] UT_CONFIG_PARSER.abort */
extern void T452f192(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.set_input_buffer */
extern void T452f183(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_CONFIG_PARSER.yy_load_input_buffer */
extern void T452f188(GE_context* ac, T0* C);
/* [detachable] YY_FILE_BUFFER.set_position */
extern void T896f23(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] YY_BUFFER.set_position */
extern void T898f15(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] UT_CONFIG_PARSER.new_file_buffer */
extern T0* T452f103(GE_context* ac, T0* C, T0* a1);
/* [detachable] YY_FILE_BUFFER.make */
extern T0* T896c22(GE_context* ac, T0* a1);
/* [detachable] YY_FILE_BUFFER.make_with_size */
extern void T896f17(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] YY_FILE_BUFFER.make_with_size */
extern T0* T896c17(GE_context* ac, T0* a1, T6 a2);
/* [detachable] YY_FILE_BUFFER.set_file */
extern void T896f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] YY_FILE_BUFFER.set_file_with_size */
extern void T896f25(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] YY_FILE_BUFFER.flush */
extern void T896f27(GE_context* ac, T0* C);
/* [detachable] YY_FILE_BUFFER.new_default_buffer */
extern T0* T896f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_CHARACTER_BUFFER.make */
extern T0* T1373c9(GE_context* ac, T6 a1);
/* [detachable] ET_C_GENERATOR.console_application_mode */
extern T1 T64f457(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.define_value */
extern void T452f179(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] UT_CONFIG_PARSER.make */
extern T0* T452c178(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_STACK [[attached] INTEGER_32].make */
extern T0* T902c8(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].make */
extern T0* T368f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [[attached] YY_BUFFER].make */
extern T0* T1294c8(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] YY_BUFFER].make */
extern T0* T1642f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] YY_BUFFER].make_empty */
extern T0* T1641c4(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] YY_BUFFER].default_create */
extern T0* T1642c2(GE_context* ac);
/* [detachable] UT_CONFIG_PARSER.string_equality_tester */
extern T0* T452f97(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.make_parser_skeleton */
extern void T452f182(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yy_build_parser_tables */
extern void T452f187(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yycheck_template */
extern T0* T452f82(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yyfixed_array */
extern T0* T452f173(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].to_special */
extern T0* T368f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_CONFIG_PARSER.yytable_template */
extern T0* T452f81(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yypgoto_template */
extern T0* T452f135(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yypact_template */
extern T0* T452f134(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yydefgoto_template */
extern T0* T452f132(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yydefact_template */
extern T0* T452f129(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yytypes2_template */
extern T0* T452f123(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yytypes1_template */
extern T0* T452f121(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yyr1_template */
extern T0* T452f116(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yytranslate_template */
extern T0* T452f115(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yytranslate_template_2 */
extern void T452f217(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_CONFIG_PARSER.yyarray_subcopy */
extern void T452f224(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* [detachable] KL_ARRAY_ROUTINES [[attached] INTEGER_32].subcopy */
extern void T865f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* [detachable] ARRAY [[attached] INTEGER_32].subcopy */
extern void T283f17(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [detachable] SPECIAL [[attached] INTEGER_32].copy_data */
extern void T125f17(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [detachable] SPECIAL [[attached] INTEGER_32].force */
extern void T125f11(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] SPECIAL [[attached] INTEGER_32].move_data */
extern void T125f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] INTEGER_32].overlapping_move */
extern void T125f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] INTEGER_32].non_overlapping_move */
extern void T125f18(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] UT_CONFIG_PARSER.integer_array_ */
extern T0* T452f177(GE_context* ac, T0* C);
/* [detachable] KL_ARRAY_ROUTINES [[attached] INTEGER_32].default_create */
extern T0* T865c2(GE_context* ac);
/* [detachable] UT_CONFIG_PARSER.yytranslate_template_1 */
extern void T452f216(GE_context* ac, T0* C, T0* a1);
/* [detachable] ARRAY [[attached] INTEGER_32].make_filled */
extern T0* T283c10(GE_context* ac, T6 a1, T6 a2, T6 a3);
/* [detachable] ARRAY [[attached] INTEGER_32].make_filled_area */
extern void T283f12(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] UT_CONFIG_PARSER.yy_create_value_stacks */
extern void T452f186(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] BOOLEAN].make */
extern T0* T532f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ANY].make */
extern T0* T509f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ANY].make_empty */
extern T0* T510c4(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ANY].default_create */
extern T0* T509c3(GE_context* ac);
/* [detachable] UT_CONFIG_PARSER.make_scanner */
extern void T452f181(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.make_with_buffer */
extern void T452f185(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_CONFIG_PARSER.yy_initialize */
extern void T452f199(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yy_initialize */
extern void T452f199p1(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yy_build_tables */
extern void T452f210(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yy_accept_template */
extern T0* T452f169(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yy_fixed_array */
extern T0* T452f175(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_CONFIG_PARSER.yy_meta_template */
extern T0* T452f168(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yy_ec_template */
extern T0* T452f167(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yy_ec_template_2 */
extern void T452f223(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_CONFIG_PARSER.yy_array_subcopy */
extern void T452f225(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* [detachable] UT_CONFIG_PARSER.yy_ec_template_1 */
extern void T452f222(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_CONFIG_PARSER.yy_def_template */
extern T0* T452f166(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yy_base_template */
extern T0* T452f165(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yy_chk_template */
extern T0* T452f164(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yy_chk_template_2 */
extern void T452f221(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_CONFIG_PARSER.yy_chk_template_1 */
extern void T452f220(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_CONFIG_PARSER.yy_nxt_template */
extern T0* T452f163(GE_context* ac, T0* C);
/* [detachable] UT_CONFIG_PARSER.yy_nxt_template_2 */
extern void T452f219(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_CONFIG_PARSER.yy_nxt_template_1 */
extern void T452f218(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_CONFIG_PARSER.empty_buffer */
extern T0* T452f83(GE_context* ac, T0* C);
/* [detachable] YY_BUFFER.make */
extern T0* T898c12(GE_context* ac, T0* a1);
/* [detachable] YY_BUFFER.make_from_buffer */
extern void T898f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_CHARACTER_BUFFER.fill_from_string */
extern void T1373f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] YY_BUFFER.new_default_buffer */
extern T0* T898f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_STRING_HASH_TABLE.put_new */
extern void T294f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_STRING_HASH_TABLE.set_key_equality_tester */
extern void T294f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_STRING_HASH_TABLE.make_map */
extern T0* T294c45(GE_context* ac, T6 a1);
/* [detachable] DS_STRING_HASH_TABLE.make_with_equality_testers */
extern void T294f51(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_STRING_HASH_TABLE.make_sparse_container */
extern void T294f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_STRING_HASH_TABLE.set_internal_cursor */
extern void T294f67(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_STRING_HASH_TABLE.new_cursor */
extern T0* T294f37(GE_context* ac, T0* C);
/* [detachable] DS_STRING_HASH_TABLE.make_slots */
extern void T294f66(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_STRING_HASH_TABLE.make_clashes */
extern void T294f65(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_STRING_HASH_TABLE.make_key_storage */
extern void T294f64(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_STRING_HASH_TABLE.make_item_storage */
extern void T294f63(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_STRING_ROUTINES.right_adjust */
extern void T83f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_STRING_ROUTINES.left_adjust */
extern void T83f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] UC_UTF8_STRING.remove_head */
extern void T862f78(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_STRING.keep_tail */
extern void T862f97(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_TEXT_INPUT_FILE.read_line */
extern void T31f63(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.unread_character */
extern void T31f68(GE_context* ac, T0* C, T2 a1);
/* detachable KL_LINKABLE [[attached] CHARACTER_8].put_right */
extern void T128f4(GE_context* ac, T0* C, T0* a1);
/* detachable KL_LINKABLE [[attached] CHARACTER_8].make */
extern T0* T128c3(GE_context* ac, T2 a1);
/* [detachable] KL_TEXT_INPUT_FILE.string_ */
extern T0* T31f11(GE_context* ac, T0* C);
/* [detachable] KL_UNIX_FILE_SYSTEM.nested_pathname */
extern T0* T123f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.nested_pathname */
extern T0* T122f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.generate_c_code */
extern void T64f527(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.dummy_feature */
extern T0* T64f282(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_FEATURE.make */
extern T0* T231c30(GE_context* ac, T0* a1, T0* a2, T0* a3);
extern T1 T231f30ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_SYSTEM.set_ise_runtime_set_reference_field_feature */
extern void T60f106(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SYSTEM.use_all_attributes */
extern void T60f107(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_set_reference_field_dynamic_types */
extern void T225f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_set_reference_field_dynamic_types */
extern void T69f125(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_giaaa_error */
extern void T50f190(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_internal_error */
extern void T50f199(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.set_has_internal_error */
extern void T50f202(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_INTERNAL_ERROR.make_giaaa */
extern T0* T741c13(GE_context* ac);
/* [detachable] ET_ERROR_HANDLER.report_giaaa_error */
extern void T34f190(GE_context* ac, T0* C);
/* [detachable] ET_ERROR_HANDLER.report_internal_error */
extern void T34f199(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.set_has_internal_error */
extern void T34f202(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.error_handler */
extern T0* T69f89(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_fatal_error */
extern void T69f113(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_formal_argument_dynamic_types */
extern void T69f128(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_DYNAMIC_FEATURE_LIST.item */
extern T0* T219f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_SYSTEM.set_ise_runtime_reference_field_feature */
extern void T60f105(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_reference_field_dynamic_types */
extern void T225f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_reference_field_dynamic_types */
extern void T69f124(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_result_dynamic_types */
extern void T69f123(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_SYSTEM.set_ise_runtime_new_type_instance_of_feature */
extern void T60f104(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SYSTEM.propagate_type_of_type_result_type */
extern void T60f92(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T225f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T69f122(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_SYSTEM.create_meta_type */
extern void T60f102(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SYSTEM.meta_type */
extern T0* T60f73(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SYSTEM.dynamic_primary_type */
extern T0* T60f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_SYSTEM.initialize_dynamic_types */
extern void T60f91(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_DYNAMIC_SYSTEM.propagate_alive_conforming_descendants */
extern void T60f101(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_alive_conforming_descendants */
extern void T225f21(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].forth */
extern void T371f40(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_forth */
extern void T371f44(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T371f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].set_next_cursor */
extern void T885f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].set_position */
extern void T885f11(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T371f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].set_after */
extern void T885f9(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].clashes_item */
extern T6 T371f35(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T371f22(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_item */
extern T0* T371f21(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T371f26(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].after */
extern T1 T371f34(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_after */
extern T1 T371f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].after */
extern T1 T885f7(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].start */
extern void T371f39(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_start */
extern void T371f43(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_off */
extern T1 T371f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].off */
extern T1 T885f5(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].is_empty */
extern T1 T371f32(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_alive_conforming_descendants */
extern void T69f107(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SYSTEM.propagate_attribute_type_sets */
extern void T60f100(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SYSTEM.initialize_predicate_type */
extern void T60f99(GE_context* ac, T0* C, T0* a1);
extern T1 T60f99ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.set_set_rout_disp_final_feature */
extern void T434f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.set_set_rout_disp_final_feature */
extern void T433f66(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_PRECURSOR.set_regular */
extern void T297f37(GE_context* ac, T0* C, T1 a1);
/* detachable ET_DYNAMIC_FEATURE.set_regular */
extern void T231f31(GE_context* ac, T0* C, T1 a1);
/* detachable ET_DYNAMIC_PRECURSOR_LIST.item */
extern T0* T298f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLASS.is_predicate_class */
extern T1 T72f64(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.class_codes */
extern T0* T72f109(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_CODES.default_create */
extern T0* T403c35(GE_context* ac);
/* [detachable] ET_DYNAMIC_SYSTEM.initialize_function_type */
extern void T60f98(GE_context* ac, T0* C, T0* a1);
extern T1 T60f98ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.is_function_class */
extern T1 T72f63(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SYSTEM.initialize_procedure_type */
extern void T60f97(GE_context* ac, T0* C, T0* a1);
extern T1 T60f97ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.is_procedure_class */
extern T1 T72f62(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SYSTEM.initialize_typed_pointer_type */
extern void T60f96(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.is_typed_pointer_class */
extern T1 T72f61(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SYSTEM.initialize_array_type */
extern void T60f95(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.is_array_class */
extern T1 T72f60(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SYSTEM.initialize_special_type */
extern void T60f94(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.is_special_class */
extern T1 T72f59(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.has_interface_error */
extern T1 T72f80(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.interface_checked */
extern T1 T72f77(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SYSTEM.set_fatal_error */
extern void T60f90(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.has_implementation_error */
extern T1 T72f105(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.implementation_checked */
extern T1 T72f94(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].force_last */
extern void T221f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].key_storage_put */
extern void T221f43(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].slots_put */
extern void T221f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].clashes_put */
extern void T221f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].slots_item */
extern T6 T221f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].hash_position */
extern T6 T221f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].resize */
extern void T221f40(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].clashes_resize */
extern void T221f48(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].special_integer_ */
extern T0* T221f30(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].key_storage_resize */
extern void T221f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].item_storage_resize */
extern void T221f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRIMARY_TYPE].aliased_resized_area */
extern T0* T405f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_PRIMARY_TYPE].aliased_resized_area */
extern T0* T404f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].key_storage_item */
extern T0* T221f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].clashes_item */
extern T6 T221f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].slots_resize */
extern void T221f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].new_modulus */
extern T6 T221f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].new_capacity */
extern T6 T221f31(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].item_storage_put */
extern void T221f39(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRIMARY_TYPE].force */
extern void T405f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_PRIMARY_TYPE].fill_with */
extern void T404f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_PRIMARY_TYPE].extend */
extern void T404f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].search_position */
extern void T221f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].unset_found_item */
extern void T221f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].found_item */
extern T0* T221f28(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].item_storage_item */
extern T0* T221f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].found */
extern T1 T221f24(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].search */
extern void T221f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SYSTEM.type_name_buffer */
extern T0* T60f62(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SYSTEM.new_dynamic_primary_type */
extern T0* T60f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SYSTEM.register_dynamic_type */
extern void T60f93(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SYSTEM.propagate_conforming_ancestors */
extern void T60f103(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BASE_TYPE_LIST.has_class */
extern T1 T401f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BASE_TYPE_LIST.item */
extern T0* T401f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.null_system_processor */
extern T0* T71f23(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_PROCESSOR.make_null */
extern void T61f59(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_PROCESSOR.make_null */
extern T0* T61c59(GE_context* ac);
/* [detachable] ET_SYSTEM_PROCESSOR.set_qualified_anchored_types_cycle_detection_enabled_only */
extern void T61f74(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_PROCESSOR.set_unknown_builtin_reported_only */
extern void T61f73(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_PROCESSOR.set_preparse_shallow_mode_only */
extern void T61f72(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_PROCESSOR.set_default_keyword_usage_only */
extern void T61f71(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_PROCESSOR.set_use_detachable_keyword_only */
extern void T61f79(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_PROCESSOR.set_use_attached_keyword_only */
extern void T61f78(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_PROCESSOR.set_use_reference_keyword_only */
extern void T61f77(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_PROCESSOR.set_use_note_keyword_only */
extern void T61f76(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_PROCESSOR.set_use_attribute_keyword_only */
extern void T61f75(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.make */
extern T0* T450c3(GE_context* ac, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.null_error_handler */
extern T0* T71f126(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.make_null */
extern T0* T50c177(GE_context* ac);
/* [detachable] ET_NULL_ERROR_HANDLER.make_null */
extern void T50f177p1(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.null_output_stream */
extern T0* T50f23(GE_context* ac, T0* C);
/* [detachable] KL_NULL_TEXT_OUTPUT_STREAM.make */
extern T0* T156c3(GE_context* ac, T0* a1);
/* [detachable] MUTEX.make */
extern T0* T132c10(GE_context* ac);
/* [detachable] MUTEX.eif_thr_mutex_create */
extern T14 T132f6(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.null_ast_processor */
extern T0* T71f125(GE_context* ac, T0* C);
/* [detachable] ET_AST_NULL_PROCESSOR.make */
extern T0* T447c1(GE_context* ac);
/* [detachable] ET_TOKEN_CONSTANTS.default_ast_factory */
extern T0* T71f124(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.make */
extern T0* T448c362(GE_context* ac);
/* [detachable] ET_SYSTEM_PROCESSOR.tokens */
extern T0* T61f45(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.default_create */
extern T0* T71c1525(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].make_default */
extern T0* T258c23(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].make */
extern void T258f16(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].make */
extern T0* T258c16(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].set_internal_cursor */
extern void T258f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].new_cursor */
extern T0* T258f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] INTEGER_32].make */
extern T0* T612c5(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].default_capacity */
extern T6 T258f10(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].force_last */
extern void T265f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].slots_put */
extern void T265f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].clashes_put */
extern void T265f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].slots_item */
extern T6 T265f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].hash_position */
extern T6 T265f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T265f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].clashes_resize */
extern void T265f65(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].special_integer_ */
extern T0* T265f33(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].key_storage_resize */
extern void T265f64(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].item_storage_resize */
extern void T265f63(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].key_storage_item */
extern T0* T265f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].item_storage_item */
extern T0* T265f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].clashes_item */
extern T6 T265f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].slots_resize */
extern void T265f62(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].new_modulus */
extern T6 T265f35(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T265f19(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].item_storage_put */
extern void T265f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].search_position */
extern void T265f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].key_equality_tester */
extern T0* T265f24(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].unset_found_item */
extern void T265f47(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_none */
extern T1 T72f178(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.set_index */
extern void T72f260(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_PRIMARY_TYPE].force_last */
extern void T74f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T74f17(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T74f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_PRIMARY_TYPE].extendible */
extern T1 T74f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.make */
extern T0* T218c54(GE_context* ac, T0* a1, T0* a2);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T265c37(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T265f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T265f18(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T327c9(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].make_slots */
extern void T265f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].make_clashes */
extern void T265f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].make_key_storage */
extern void T265f44(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].make_item_storage */
extern void T265f43(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T405f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_PRIMARY_TYPE].make_empty */
extern T0* T404c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRIMARY_TYPE].default_create */
extern T0* T405c3(GE_context* ac);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.empty_features */
extern T0* T218f37(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FEATURE_LIST.make */
extern T0* T219c14(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_FEATURE].make */
extern T0* T588f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_FEATURE].make_empty */
extern T0* T587c5(GE_context* ac, T6 a1);
/* [detachable] ET_DYNAMIC_FEATURE_LIST.fixed_array */
extern T0* T219f5(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_FEATURE].default_create */
extern T0* T588c3(GE_context* ac);
/* [detachable] ET_CLASS.hash_code */
extern T6 T72f183(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SYSTEM.new_predicate_type */
extern T0* T60f68(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.make */
extern T0* T434c57(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.make_type */
extern void T434f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.empty_features */
extern T0* T434f50(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SYSTEM.empty_dynamic_type_sets */
extern T0* T60f69(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TYPE_SET_LIST.make */
extern T0* T254c14(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET].make */
extern T0* T607f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET].make_empty */
extern T0* T606c5(GE_context* ac, T6 a1);
/* [detachable] ET_DYNAMIC_TYPE_SET_LIST.fixed_array */
extern T0* T254f5(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET].default_create */
extern T0* T607c3(GE_context* ac);
/* [detachable] ET_DYNAMIC_SYSTEM.new_function_type */
extern T0* T60f67(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SYSTEM.new_procedure_type */
extern T0* T60f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.make */
extern T0* T433c57(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.make_type */
extern void T433f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.empty_features */
extern T0* T433f50(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SYSTEM.new_type_type */
extern T0* T60f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.is_type_class */
extern T1 T72f186(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SYSTEM.new_tuple_type */
extern T0* T60f64(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.make */
extern T0* T293c55(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_TYPE_SET_LIST.item */
extern T0* T254f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.make_type */
extern void T293f65(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.empty_features */
extern T0* T293f35(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SYSTEM.new_special_type */
extern T0* T60f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.make */
extern T0* T310c55(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.make_type */
extern void T310f65(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.empty_features */
extern T0* T310f35(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_tuple_class */
extern T1 T72f84(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_generic */
extern T1 T72f182(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.implicit_detachable_type_mark */
extern T0* T71f21(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.set_detachable_mark */
extern void T341f27(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_IMPLICIT_TYPE_MARK.make */
extern T0* T341c26(GE_context* ac);
/* [detachable] ET_DYNAMIC_SYSTEM.tokens */
extern T0* T60f71(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_COMMA_ARGUMENT.set_index */
extern void T1693f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FORMAL_ARGUMENT.set_index */
extern void T251f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FORMAL_COMMA_ARGUMENT.name */
extern T0* T1693f8(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.identifier */
extern T0* T179f69(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_ARGUMENT.name */
extern T0* T251f8(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TYPE_SET_LIST.put_last */
extern void T254f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET].force */
extern void T607f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET].fill_with */
extern void T606f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET].extend */
extern void T606f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_COMMA_ARGUMENT.type */
extern T0* T1693f7(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_ARGUMENT.type */
extern T0* T251f7(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_PRECURSOR.argument_type_set */
extern T0* T297f23(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DYNAMIC_FEATURE.argument_type_set */
extern T0* T231f24(GE_context* ac, T0* C, T6 a1);
/* detachable ET_FORMAL_ARGUMENT_LIST.formal_argument */
extern T0* T248f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FORMAL_ARGUMENT.formal_argument */
extern T0* T251f6(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_COMMA_ARGUMENT.formal_argument */
extern T0* T1693f6(GE_context* ac, T0* C);
/* detachable ET_FORMAL_ARGUMENT_LIST.item */
extern T0* T248f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_TYPE_SET_LIST.make_with_capacity */
extern T0* T254c9(GE_context* ac, T6 a1);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T225f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T69f80(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET.make */
extern T0* T459c15(GE_context* ac, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET.put_type */
extern void T459f20(GE_context* ac, T0* C, T0* a1);
extern T1 T459f20ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.force_last */
extern void T259f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.fixed_array */
extern T0* T259f5(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.hash_position */
extern T6 T259f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.modulus */
extern T6 T259f15(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.resize */
extern void T259f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.special_integer_ */
extern T0* T259f7(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.new_modulus */
extern T6 T259f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.new_capacity */
extern T6 T259f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.capacity */
extern T6 T259f10(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.put_last */
extern void T259f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.append_last */
extern void T259f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.make_with_capacity */
extern T0* T259c17(GE_context* ac, T6 a1);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.alive_conforming_descendants */
extern T0* T225f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].found_item */
extern T0* T371f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].found */
extern T1 T371f27(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].search */
extern void T371f41(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].search_position */
extern void T371f45(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].hash_position */
extern T6 T371f25(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T371f24(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].slots_item */
extern T6 T371f20(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_map_default */
extern T0* T371c38(GE_context* ac);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_map */
extern void T371f42(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T371f46(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_sparse_container */
extern void T371f49(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T371f55(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].new_cursor */
extern T0* T371f30(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make */
extern T0* T885c8(GE_context* ac, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].unset_found_item */
extern void T371f54(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_slots */
extern void T371f53(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].new_modulus */
extern T6 T371f28(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_clashes */
extern void T371f52(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_key_storage */
extern void T371f51(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE].make */
extern T0* T680f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TYPE].make_empty */
extern T0* T679c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE].default_create */
extern T0* T680c3(GE_context* ac);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_item_storage */
extern void T371f50(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].default_capacity */
extern T6 T371f29(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.alive_conforming_descendants */
extern T0* T69f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.object_id_dynamic_type_set */
extern T0* T225f10(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.mark_type_alive */
extern void T225f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.current_system */
extern T0* T225f8(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_type_alive */
extern void T69f102(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_system */
extern T0* T69f81(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SYSTEM.dynamic_type */
extern T0* T60f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.make */
extern T0* T314c24(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.implicit_attached_type_mark */
extern T0* T71f22(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.set_attached_mark */
extern void T341f28(GE_context* ac, T0* C, T1 a1);
/* detachable ET_DYNAMIC_FEATURE.tokens */
extern T0* T231f22(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_FEATURE.empty_dynamic_type_sets */
extern T0* T231f17(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.make */
extern T0* T456c78(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_TOKEN_CONSTANTS.empty_clients */
extern T0* T71f162(GE_context* ac, T0* C);
/* [detachable] ET_CLIENT_LIST.make */
extern T0* T390c15(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_ITEM].make */
extern T0* T729f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_CLIENT_ITEM].make_empty */
extern T0* T728c5(GE_context* ac, T6 a1);
/* [detachable] ET_CLIENT_LIST.fixed_array */
extern T0* T390f3(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_ITEM].default_create */
extern T0* T729c3(GE_context* ac);
/* [detachable] ET_TOKEN_CONSTANTS.end_keyword */
extern T0* T71f88(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_end */
extern T0* T402c46(GE_context* ac);
/* [detachable] ET_KEYWORD.make_token */
extern void T402f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_KEYWORD.make_leaf */
extern void T402f44(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.tokens */
extern T0* T402f4(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.tokens */
extern T0* T456f31(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.make */
extern T0* T179c108(GE_context* ac, T0* a1);
/* [detachable] ET_IDENTIFIER.make_with_hash_code */
extern void T179f118(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_IDENTIFIER.make_with_hash_code */
extern T0* T179c118(GE_context* ac, T0* a1, T6 a2);
/* [detachable] ET_IDENTIFIER.make_leaf */
extern void T179f119(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.new_hash_code */
extern T6 T179f10(GE_context* ac, T0* C, T0* a1);
/* CHARACTER_8.upper */
extern T2 T2f6(GE_context* ac, T2* C);
/* CHARACTER_8.is_lower */
extern T1 T2f13(GE_context* ac, T2* C);
/* [detachable] ET_C_GENERATOR.close_cpp_file */
extern void T64f560(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.close_c_file */
extern void T64f559(GE_context* ac, T0* C);
/* [detachable] KL_UNIX_FILE_SYSTEM.delete_file */
extern void T123f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_TEXT_INPUT_FILE.delete */
extern void T31f76(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.old_delete */
extern void T31f79(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.file_unlink */
extern void T31f81(GE_context* ac, T0* C, T14 a1);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.delete_file */
extern void T122f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.include_file */
extern void T64f558(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] KL_UNIX_FILE_SYSTEM.rename_file */
extern void T123f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] KL_TEXT_INPUT_FILE.change_name */
extern void T31f75(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_TEXT_INPUT_FILE.old_change_name */
extern void T31f78(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_TEXT_INPUT_FILE.rename_file */
extern void T31f80(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_TEXT_INPUT_FILE.set_name */
extern void T31f72(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_TEXT_INPUT_FILE.file_rename */
extern void T31f82(GE_context* ac, T0* C, T14 a1, T14 a2);
/* [detachable] KL_TEXT_INPUT_FILE.same_physical_file */
extern T1 T31f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_UNIX_FILE_SYSTEM.canonical_pathname */
extern T0* T123f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_UNIX_FILE_SYSTEM.pathname_to_string */
extern T0* T123f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_PATHNAME.item */
extern T0* T466f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ARRAY [detachable STRING_8].item */
extern T0* T1302f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_PATHNAME.is_parent */
extern T1 T466f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_PATHNAME.is_current */
extern T1 T466f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_UNIX_FILE_SYSTEM.root_directory */
extern T0* T123f15(GE_context* ac, T0* C);
/* [detachable] KL_PATHNAME.set_canonical */
extern void T466f21(GE_context* ac, T0* C);
/* [detachable] KL_PATHNAME.append_current */
extern void T466f23(GE_context* ac, T0* C);
/* [detachable] KL_PATHNAME.append_name */
extern void T466f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] ARRAY [detachable STRING_8].force */
extern void T1302f11(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable STRING_8].move_data */
extern void T479f10(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable STRING_8].overlapping_move */
extern void T479f12(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable STRING_8].force */
extern void T479f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable STRING_8].non_overlapping_move */
extern void T479f11(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] ARRAY [detachable STRING_8].capacity */
extern T6 T1302f7(GE_context* ac, T0* C);
/* [detachable] ARRAY [detachable STRING_8].set_area */
extern void T1302f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] SPECIAL [detachable STRING_8].aliased_resized_area */
extern T0* T479f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable STRING_8].fill_with */
extern void T479f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable STRING_8].extend */
extern void T479f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ARRAY [detachable STRING_8].make_empty_area */
extern void T1302f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable STRING_8].make_empty */
extern void T479f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable STRING_8].make_empty */
extern T0* T479c5(GE_context* ac, T6 a1);
/* [detachable] ARRAY [detachable STRING_8].additional_space */
extern T6 T1302f6(GE_context* ac, T0* C);
/* [detachable] ARRAY [detachable STRING_8].empty_area */
extern T1 T1302f5(GE_context* ac, T0* C);
/* [detachable] ARRAY [detachable STRING_8].put */
extern void T1302f10(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_UNIX_FILE_SYSTEM.string_to_pathname */
extern T0* T123f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_PATHNAME.append_parent */
extern void T466f24(GE_context* ac, T0* C);
/* [detachable] KL_PATHNAME.set_relative */
extern void T466f22(GE_context* ac, T0* C, T1 a1);
/* [detachable] KL_PATHNAME.make */
extern T0* T466c20(GE_context* ac);
/* [detachable] ARRAY [detachable STRING_8].make_filled */
extern T0* T1302c9(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [detachable] ARRAY [detachable STRING_8].make_filled_area */
extern void T1302f12(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable STRING_8].make_filled */
extern T0* T479c8(GE_context* ac, T0* a1, T6 a2);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.canonical_pathname */
extern T0* T122f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.pathname_to_string */
extern T0* T122f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.root_directory */
extern T0* T122f17(GE_context* ac, T0* C);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.string_to_pathname */
extern T0* T122f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_PATHNAME.set_drive */
extern void T466f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_PATHNAME.set_sharename */
extern void T466f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_PATHNAME.set_hostname */
extern void T466f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_TEXT_INPUT_FILE.file_system */
extern T0* T31f43(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.unix_file_system */
extern T0* T31f53(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.windows_file_system */
extern T0* T31f52(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.operating_system */
extern T0* T31f51(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.time_stamp */
extern T6 T31f42(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.date */
extern T6 T31f50(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.eif_file_date */
extern T6 T31f56(GE_context* ac, T0* C, T14 a1);
/* [detachable] KL_TEXT_INPUT_FILE.count */
extern T6 T31f41(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.old_count */
extern T6 T31f49(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.file_size */
extern T6 T31f55(GE_context* ac, T0* C, T14 a1);
/* [detachable] FILE_INFO.size */
extern T6 T131f17(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.old_is_open_write */
extern T1 T31f54(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.inode */
extern T6 T31f40(GE_context* ac, T0* C);
/* [detachable] FILE_INFO.inode */
extern T6 T131f16(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.tmp_file1 */
extern T0* T31f39(GE_context* ac, T0* C);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.rename_file */
extern void T122f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T286f34(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].slots_wipe_out */
extern void T286f43(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].clashes_wipe_out */
extern void T286f42(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].key_storage_wipe_out */
extern void T286f41(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_PRIMARY_TYPE].keep_head */
extern void T404f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_PRIMARY_TYPE].set_count */
extern void T404f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].item_storage_wipe_out */
extern void T286f40(GE_context* ac, T0* C);
/* [detachable] SPECIAL [detachable ET_DYNAMIC_FEATURE].keep_head */
extern void T656f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_DYNAMIC_FEATURE].set_count */
extern void T656f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].unset_found_item */
extern void T286f39(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T286f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T658f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T658f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].wipe_out */
extern void T285f40(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].slots_wipe_out */
extern void T285f49(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].clashes_wipe_out */
extern void T285f48(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].key_storage_wipe_out */
extern void T285f47(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_INLINE_CONSTANT].keep_head */
extern void T653f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_INLINE_CONSTANT].set_count */
extern void T653f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].item_storage_wipe_out */
extern void T285f46(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].unset_found_item */
extern void T285f45(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].move_all_cursors_after */
extern void T285f44(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].set_next_cursor */
extern void T652f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].set_after */
extern void T652f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].wipe_out */
extern void T284f40(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].slots_wipe_out */
extern void T284f50(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].clashes_wipe_out */
extern void T284f49(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].key_storage_wipe_out */
extern void T284f48(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_FEATURE].keep_head */
extern void T646f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_FEATURE].set_count */
extern void T646f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].item_storage_wipe_out */
extern void T284f47(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_CONSTANT].keep_head */
extern void T649f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_CONSTANT].set_count */
extern void T649f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].unset_found_item */
extern void T284f46(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].move_all_cursors_after */
extern void T284f45(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE].set_next_cursor */
extern void T648f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE].set_after */
extern void T648f9(GE_context* ac, T0* C);
/* [detachable] ARRAY [[attached] INTEGER_32].fill_with */
extern void T283f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].wipe_out */
extern void T282f35(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].slots_wipe_out */
extern void T282f43(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].clashes_wipe_out */
extern void T282f42(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].key_storage_wipe_out */
extern void T282f41(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].item_storage_wipe_out */
extern void T282f40(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].unset_found_item */
extern void T282f39(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].move_all_cursors_after */
extern void T282f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FEATURE].set_next_cursor */
extern void T645f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FEATURE].set_after */
extern void T645f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].wipe_out */
extern void T288f46(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].slots_wipe_out */
extern void T288f58(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].clashes_wipe_out */
extern void T288f57(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].key_storage_wipe_out */
extern void T288f56(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].item_storage_wipe_out */
extern void T288f55(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].unset_found_item */
extern void T288f54(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].move_all_cursors_after */
extern void T288f53(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8].set_next_cursor */
extern void T661f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8].set_after */
extern void T661f9(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [[attached] STRING_8].wipe_out */
extern void T68f45(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [[attached] STRING_8].slots_wipe_out */
extern void T68f64(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [[attached] STRING_8].clashes_wipe_out */
extern void T68f63(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [[attached] STRING_8].key_storage_wipe_out */
extern void T68f62(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [[attached] STRING_8].item_storage_wipe_out */
extern void T68f61(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [[attached] STRING_8].unset_found_item */
extern void T68f48(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [[attached] STRING_8].move_all_cursors_after */
extern void T68f60(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] STRING_8].set_next_cursor */
extern void T365f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] STRING_8].set_after */
extern void T365f10(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].forth */
extern void T288f45(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].cursor_forth */
extern void T288f52(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].add_traversing_cursor */
extern void T288f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8].set_position */
extern void T661f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].remove_traversing_cursor */
extern void T288f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].clashes_item */
extern T6 T288f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].key_for_iteration */
extern T0* T288f30(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].cursor_key */
extern T0* T288f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].key_storage_item */
extern T0* T288f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].item_for_iteration */
extern T1 T288f21(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].cursor_item */
extern T1 T288f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].item_storage_item */
extern T1 T288f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].after */
extern T1 T288f35(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].cursor_after */
extern T1 T288f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8].after */
extern T1 T661f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].start */
extern void T288f44(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].cursor_start */
extern void T288f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].cursor_off */
extern T1 T288f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8].off */
extern T1 T661f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].is_empty */
extern T1 T288f31(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [[attached] STRING_8].forth */
extern void T68f46(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [[attached] STRING_8].cursor_forth */
extern void T68f65(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [[attached] STRING_8].add_traversing_cursor */
extern void T68f71(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] STRING_8].set_position */
extern void T365f12(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [[attached] STRING_8].remove_traversing_cursor */
extern void T68f70(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [[attached] STRING_8].clashes_item */
extern T6 T68f20(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.include_runtime_file */
extern void T64f557(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable DS_HASH_SET [[attached] STRING_8].item_for_iteration */
extern T0* T68f30(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [[attached] STRING_8].cursor_item */
extern T0* T68f36(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [[attached] STRING_8].item_storage_item */
extern T0* T68f18(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [[attached] STRING_8].after */
extern T1 T68f22(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [[attached] STRING_8].cursor_after */
extern T1 T68f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] STRING_8].after */
extern T1 T365f8(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [[attached] STRING_8].start */
extern void T68f42(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [[attached] STRING_8].cursor_start */
extern void T68f58(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [[attached] STRING_8].cursor_off */
extern T1 T68f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] STRING_8].off */
extern T1 T365f5(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [[attached] STRING_8].is_empty */
extern T1 T68f33(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_end_extern_c */
extern void T64f556(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_main_function */
extern void T64f555(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.dedent */
extern void T64f605(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TYPE_SET_LIST.remove_last */
extern void T254f11(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET].keep_head */
extern void T607f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET].keep_head */
extern void T606f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET].set_count */
extern void T606f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.print_creation_expression */
extern void T64f628(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].wipe_out */
extern void T262f13(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_EXPRESSION].keep_head */
extern void T614f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_EXPRESSION].set_count */
extern void T614f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].move_all_cursors_after */
extern void T262f19(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_EXPRESSION].set_next_cursor */
extern void T616f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_EXPRESSION].set_after */
extern void T616f6(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_attachment_expression */
extern void T64f663(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_C_GENERATOR.print_boxed_attribute_item_access */
extern void T64f633(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_non_void_expression */
extern void T64f641(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [detachable] ET_C_GENERATOR.print_expression */
extern void T64f640(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_boxed_attribute_item_name */
extern void T64f623(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_boxed_expression */
extern void T64f685(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_boxed_type_cast */
extern void T64f678(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_boxed_type_name */
extern void T64f622(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].wipe_out */
extern void T258f17(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].move_all_cursors_after */
extern void T258f25(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] INTEGER_32].set_next_cursor */
extern void T612f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] INTEGER_32].set_after */
extern void T612f6(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].force_last_new */
extern void T211f56(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].found_item */
extern T0* T211f21(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].found */
extern T1 T211f39(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].search */
extern void T211f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].item */
extern T6 T258f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].sort */
extern void T258f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_QUICK_SORTER [[attached] INTEGER_32].sort */
extern void T334f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_QUICK_SORTER [[attached] INTEGER_32].sort_with_comparator */
extern void T334f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_QUICK_SORTER [[attached] INTEGER_32].subsort_with_comparator */
extern void T334f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [detachable] ARRAY [[attached] INTEGER_32].force */
extern void T283f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ARRAY [[attached] INTEGER_32].capacity */
extern T6 T283f7(GE_context* ac, T0* C);
/* [detachable] ARRAY [[attached] INTEGER_32].set_area */
extern void T283f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ARRAY [[attached] INTEGER_32].make_empty_area */
extern void T283f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] ARRAY [[attached] INTEGER_32].additional_space */
extern T6 T283f6(GE_context* ac, T0* C);
/* [detachable] ARRAY [[attached] INTEGER_32].empty_area */
extern T1 T283f5(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].swap */
extern void T258f26(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].replace */
extern void T258f22(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32].less_than */
extern T1 T453f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32].detachable_less_than */
extern T1 T453f2(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32].attached_less_than */
extern T1 T453f3(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ARRAY [[attached] INTEGER_32].put */
extern void T283f13(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_C_GENERATOR.dynamic_type_id_sorter */
extern T0* T64f232(GE_context* ac, T0* C);
/* [detachable] DS_QUICK_SORTER [[attached] INTEGER_32].make */
extern T0* T334c2(GE_context* ac, T0* a1);
/* [detachable] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32].make */
extern T0* T453c4(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].is_empty */
extern T1 T258f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].put_last */
extern void T258f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].resize */
extern void T258f20(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.argument_type_set_in_feature */
extern T0* T64f257(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].item */
extern T0* T262f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.print_creation_procedure_name */
extern void T64f677(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_C_GENERATOR.print_type_name */
extern void T64f624(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.new_temp_variable */
extern T0* T64f137(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].force_last */
extern void T258f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].new_capacity */
extern T6 T258f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].extendible */
extern T1 T258f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].force_last */
extern void T257f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE].force */
extern void T610f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].fill_with */
extern void T609f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].extend */
extern void T609f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T257f16(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE].aliased_resized_area */
extern T0* T610f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].aliased_resized_area */
extern T0* T609f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T257f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].extendible */
extern T1 T257f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].force_last */
extern void T256f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER].force */
extern void T581f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_IDENTIFIER].fill_with */
extern void T582f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_IDENTIFIER].extend */
extern void T582f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].resize */
extern void T256f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER].aliased_resized_area */
extern T0* T581f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_IDENTIFIER].aliased_resized_area */
extern T0* T582f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].new_capacity */
extern T6 T256f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].extendible */
extern T1 T256f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_IDENTIFIER.set_temporary */
extern void T179f115(GE_context* ac, T0* C, T1 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].item */
extern T0* T256f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].replace */
extern void T257f11(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_C_GENERATOR.same_declaration_types */
extern T1 T64f458(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].item */
extern T0* T257f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.print_writable */
extern void T64f676(GE_context* ac, T0* C, T0* a1);
extern T1 T64f676ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_attribute_access */
extern void T64f603(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* [detachable] ET_C_GENERATOR.print_attribute_name */
extern void T64f625(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_C_GENERATOR.print_type_cast */
extern void T64f599(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.current_keyword */
extern T0* T71f24(GE_context* ac, T0* C);
/* [detachable] ET_CURRENT.make */
extern T0* T272c31(GE_context* ac);
/* [detachable] ET_CURRENT.make_token */
extern void T272f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CURRENT.make_leaf */
extern void T272f34(GE_context* ac, T0* C);
/* [detachable] ET_CURRENT.tokens */
extern T0* T272f6(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.tokens */
extern T0* T64f269(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].remove */
extern void T289f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].remove_position */
extern void T289f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].key_storage_put */
extern void T289f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].item_storage_put */
extern void T289f42(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].key_storage_keep_head */
extern void T289f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].item_storage_keep_head */
extern void T289f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_IDENTIFIER].keep_head */
extern void T582f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_IDENTIFIER].set_count */
extern void T582f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].clashes_put */
extern void T289f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].slots_put */
extern void T289f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].clashes_item */
extern T6 T289f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].move_cursors_forth */
extern void T289f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER].set_position */
extern void T664f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER].set_next_cursor */
extern void T664f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER].set_after */
extern void T664f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].internal_set_key_equality_tester */
extern void T289f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].key_equality_tester */
extern T0* T289f17(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].slots_item */
extern T6 T289f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].hash_position */
extern T6 T289f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].key_storage_item */
extern T0* T289f20(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].item_storage_item */
extern T0* T289f29(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].search_position */
extern void T289f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER_TESTER.test */
extern T1 T290f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_IDENTIFIER.same_identifier */
extern T1 T179f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_STRING_ROUTINES.same_case_insensitive */
extern T1 T83f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* CHARACTER_8.lower */
extern T2 T2f5(GE_context* ac, T2* C);
/* [detachable] UC_UNICODE_ROUTINES.lower_code */
extern T6 T461f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UNICODE_ROUTINES.lower_codes */
extern T0* T461f2(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.empty_lower_code_plane */
extern T0* T461f5(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]].make_filled */
extern T0* T1299c4(GE_context* ac, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]].fill_with */
extern void T1299f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]].extend */
extern void T1299f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]].make_empty */
extern void T1299f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UNICODE_ROUTINES.empty_lower_code_segment */
extern T0* T461f12(GE_context* ac, T0* C);
/* [detachable] KL_INTEGER_ROUTINES.to_integer */
extern T6 T864f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UNICODE_ROUTINES.integer_ */
extern T0* T461f23(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.lower_code_plane_1 */
extern T0* T461f4(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.lower_code_plane_1_segment_4 */
extern T0* T461f22(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]].make_filled */
extern T0* T1300c4(GE_context* ac, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]].fill_with */
extern void T1300f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]].extend */
extern void T1300f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]].make_empty */
extern void T1300f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UNICODE_ROUTINES.lower_code_plane_0 */
extern T0* T461f3(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.lower_code_plane_0_segment_255 */
extern T0* T461f21(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.lower_code_plane_0_segment_167 */
extern T0* T461f20(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.lower_code_plane_0_segment_166 */
extern T0* T461f19(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.lower_code_plane_0_segment_44 */
extern T0* T461f18(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.lower_code_plane_0_segment_36 */
extern T0* T461f17(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.lower_code_plane_0_segment_33 */
extern T0* T461f16(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.lower_code_plane_0_segment_31 */
extern T0* T461f15(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.lower_code_plane_0_segment_30 */
extern T0* T461f14(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.lower_code_plane_0_segment_16 */
extern T0* T461f13(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.lower_code_plane_0_segment_5 */
extern T0* T461f11(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.lower_code_plane_0_segment_4 */
extern T0* T461f10(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.lower_code_plane_0_segment_3 */
extern T0* T461f9(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.lower_code_plane_0_segment_2 */
extern T0* T461f8(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.lower_code_plane_0_segment_1 */
extern T0* T461f7(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.lower_code_plane_0_segment_0 */
extern T0* T461f6(GE_context* ac, T0* C);
/* [detachable] KL_STRING_ROUTINES.unicode */
extern T0* T83f13(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.default_create */
extern T0* T461c52(GE_context* ac);
/* [detachable] ET_IDENTIFIER.string_ */
extern T0* T179f45(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].unset_found_item */
extern void T289f40(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_local_variable */
extern void T64f692(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_local_name */
extern void T64f697(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].has */
extern T1 T289f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].force_last */
extern void T289f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].resize */
extern void T289f43(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].clashes_resize */
extern void T289f50(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].special_integer_ */
extern T0* T289f28(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].key_storage_resize */
extern void T289f49(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].item_storage_resize */
extern void T289f48(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].slots_resize */
extern void T289f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].new_modulus */
extern T6 T289f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].new_capacity */
extern T6 T289f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.print_across_cursor */
extern void T64f691(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_across_cursor_name */
extern void T64f696(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_temporary_variable */
extern void T64f690(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER.is_temporary */
extern T1 T179f26(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_formal_argument */
extern void T64f689(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_argument_name */
extern void T64f648(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].force */
extern void T261f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION].force */
extern void T615f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_EXPRESSION].fill_with */
extern void T614f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_EXPRESSION].extend */
extern void T614f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].resize */
extern void T261f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION].aliased_resized_area */
extern T0* T615f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_EXPRESSION].aliased_resized_area */
extern T0* T614f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].new_capacity */
extern T6 T261f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].extendible */
extern T1 T261f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.fill_call_operands */
extern void T64f675(GE_context* ac, T0* C, T6 a1);
extern T1 T64f675ot1(T0* a1, T0** a2);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].prune */
extern void T261f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.mark_temp_variable_free */
extern void T64f604(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.is_temp_variable_frozen */
extern T1 T64f280(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].i_th */
extern T0* T261f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].put_last */
extern void T262f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].resize */
extern void T262f16(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.print_operand */
extern void T64f674(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CREATE_EXPRESSION.arguments */
extern T0* T319f6(GE_context* ac, T0* C);
/* [detachable] ET_CREATE_EXPRESSION.name */
extern T0* T319f13(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.dynamic_type_set */
extern T0* T64f245(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.item */
extern T0* T264f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.valid_index */
extern T1 T264f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_TYPE_SET_LIST.valid_index */
extern T1 T254f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_TYPE_SET_LIST.force_last */
extern void T254f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_TYPE_SET_LIST.resize */
extern void T254f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T607f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T606f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_TYPE_SET_LIST.new_capacity */
extern T6 T254f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_TYPE_SET_LIST.capacity */
extern T6 T254f6(GE_context* ac, T0* C);
/* [detachable] ET_CREATE_EXPRESSION.make */
extern T0* T319c27(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.create_keyword */
extern T0* T71f214(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_create */
extern T0* T402c49(GE_context* ac);
/* [detachable] ET_CREATE_EXPRESSION.tokens */
extern T0* T319f7(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL.make */
extern T0* T320c5(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_show_console_call */
extern void T64f627(GE_context* ac, T0* C);
/* [detachable] ARRAY [[attached] INTEGER_32].item */
extern T6 T283f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.print_routine_name */
extern void T64f620(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T64f620ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_escaped_string */
extern void T64f621(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_INTEGER_FORMATTER.put_octal_integer */
extern void T348f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_C_GENERATOR.integer_formatter_ */
extern T0* T64f262(GE_context* ac, T0* C);
/* [detachable] UT_INTEGER_FORMATTER.default_create */
extern T0* T348c1(GE_context* ac);
/* [detachable] ET_C_GENERATOR.print_temp_name */
extern void T64f598(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.temp_variable */
extern T0* T64f147(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_type_declaration */
extern void T64f594(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_eif_any_type_name */
extern void T64f566(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_indentation */
extern void T64f596(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.indent */
extern void T64f595(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_types_array */
extern void T64f554(GE_context* ac, T0* C);
extern T1 T64f554ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_SYSTEM.is_new_instance_type */
extern T1 T60f59(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [[attached] STRING_8].has */
extern T1 T68f25(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [[attached] STRING_8].search_position */
extern void T68f47(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [[attached] STRING_8].hash_position */
extern T6 T68f32(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [[attached] STRING_8].key_storage_item */
extern T0* T68f28(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [[attached] STRING_8].key_equality_tester */
extern T0* T68f26(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [[attached] STRING_8].slots_item */
extern T6 T68f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] STRING_8.replace_substring_all */
extern void T17f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] SPECIAL [CHARACTER_8].resized_area_with_default */
extern T0* T15f8(GE_context* ac, T0* C, T2 a1, T6 a2);
/* detachable ARRAYED_LIST [[attached] INTEGER_32].area */
extern T0* T739f3(GE_context* ac, T0* C);
/* [detachable] STRING_8_SEARCHER.substring_index_list_with_deltas */
extern T0* T738f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* detachable ARRAYED_LIST [[attached] INTEGER_32].extend */
extern void T739f9(GE_context* ac, T0* C, T6 a1);
/* detachable ARRAYED_LIST [[attached] INTEGER_32].additional_space */
extern T6 T739f5(GE_context* ac, T0* C);
/* detachable ARRAYED_LIST [[attached] INTEGER_32].capacity */
extern T6 T739f6(GE_context* ac, T0* C);
/* detachable ARRAYED_LIST [[attached] INTEGER_32].count */
extern T6 T739f4(GE_context* ac, T0* C);
/* detachable ARRAYED_LIST [[attached] INTEGER_32].make */
extern T0* T739c8(GE_context* ac, T6 a1);
/* [detachable] STRING_8_SEARCHER.initialize_deltas */
extern void T738f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.is_deferred */
extern T1 T72f187(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.has_deferred_mark */
extern T1 T72f79(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_deferred */
extern T1 T402f31(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_attribute_special_item_name */
extern void T64f626(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.item_feature_name */
extern T0* T71f26(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T74f12(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T74f16(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T406f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T406f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_PRIMARY_TYPE].sort */
extern void T74f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_QUICK_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE].sort */
extern void T313f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_QUICK_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE].sort_with_comparator */
extern void T313f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_QUICK_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE].subsort_with_comparator */
extern void T313f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_PRIMARY_TYPE].swap */
extern void T74f22(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_PRIMARY_TYPE].replace */
extern void T74f21(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID.less_than */
extern T1 T315f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_PRIMARY_TYPE].is_empty */
extern T1 T74f10(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_PRIMARY_TYPE].append_last */
extern void T74f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_PRIMARY_TYPE].extend_last */
extern void T74f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE].forth */
extern void T327f14(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].cursor_forth */
extern void T265f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].add_traversing_cursor */
extern void T265f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T327f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE].set_position */
extern void T327f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].remove_traversing_cursor */
extern void T265f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T327f10(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE].item */
extern T0* T327f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].cursor_item */
extern T0* T265f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE].after */
extern T1 T327f8(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE].start */
extern void T327f13(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].cursor_start */
extern void T265f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].cursor_off */
extern T1 T265f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE].off */
extern T1 T327f6(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].is_empty */
extern T1 T265f21(GE_context* ac, T0* C);
/* [detachable] DS_QUICK_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T313c2(GE_context* ac, T0* a1);
/* [detachable] ET_C_GENERATOR.dynamic_primary_type_comparator */
extern T0* T64f155(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID.make */
extern T0* T315c2(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T74c11(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T74f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T74f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T406c5(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].found_item */
extern T0* T286f28(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].item_storage_item */
extern T0* T286f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].found */
extern T1 T286f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].search */
extern void T286f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].search_position */
extern void T286f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].hash_position */
extern T6 T286f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].key_storage_item */
extern T0* T286f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].clashes_item */
extern T6 T286f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].slots_item */
extern T6 T286f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.print_dynamic_type_id_set_constants */
extern void T64f553(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].forth */
extern void T211f54(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.occurrences */
extern T6 T862f27(GE_context* ac, T0* C, T2 a1);
/* [detachable] UC_UTF8_STRING.code_occurrences */
extern T6 T862f50(GE_context* ac, T0* C, T6 a1);
/* [detachable] STRING_8.occurrences */
extern T6 T17f34(GE_context* ac, T0* C, T2 a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].key_for_iteration */
extern T0* T211f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item_for_iteration */
extern T0* T211f37(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].after */
extern T1 T211f35(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_after */
extern T1 T211f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].start */
extern void T211f53(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_init_const_function */
extern void T64f552(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].forth */
extern void T285f42(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].cursor_forth */
extern void T285f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].add_traversing_cursor */
extern void T285f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].set_position */
extern void T652f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].remove_traversing_cursor */
extern void T285f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].clashes_item */
extern T6 T285f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].item_for_iteration */
extern T0* T285f20(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].cursor_item */
extern T0* T285f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].item_storage_item */
extern T0* T285f36(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ONCE_MANIFEST_STRING.constant */
extern T0* T1479f11(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_inline_constant_name */
extern void T64f618(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].key_for_iteration */
extern T0* T285f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].cursor_key */
extern T0* T285f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].key_storage_item */
extern T0* T285f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].after */
extern T1 T285f21(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].cursor_after */
extern T1 T285f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].after */
extern T1 T652f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].start */
extern void T285f41(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].cursor_start */
extern void T285f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].cursor_off */
extern T1 T285f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].off */
extern T1 T652f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].is_empty */
extern T1 T285f23(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].forth */
extern void T284f42(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].cursor_forth */
extern void T284f52(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].add_traversing_cursor */
extern void T284f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE].set_position */
extern void T648f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].remove_traversing_cursor */
extern void T284f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].clashes_item */
extern T6 T284f30(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].item_for_iteration */
extern T0* T284f23(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].cursor_item */
extern T0* T284f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].item_storage_item */
extern T0* T284f20(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.print_once_value_name */
extern void T64f617(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_once_status_name */
extern void T64f619(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].has */
extern T1 T282f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].search_position */
extern void T282f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].hash_position */
extern T6 T282f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].key_storage_item */
extern T0* T282f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].clashes_item */
extern T6 T282f30(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].slots_item */
extern T6 T282f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].key_for_iteration */
extern T0* T284f22(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].cursor_key */
extern T0* T284f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].key_storage_item */
extern T0* T284f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].after */
extern T1 T284f24(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].cursor_after */
extern T1 T284f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE].after */
extern T1 T648f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].start */
extern void T284f41(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].cursor_start */
extern void T284f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].cursor_off */
extern T1 T284f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE].off */
extern T1 T648f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].is_empty */
extern T1 T284f28(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_constants_declaration */
extern void T64f551(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_deep_twin_functions */
extern void T64f550(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T266f42(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].slots_wipe_out */
extern void T266f53(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].clashes_wipe_out */
extern void T266f52(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].key_storage_wipe_out */
extern void T266f51(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].item_storage_wipe_out */
extern void T266f50(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].keep_head */
extern void T619f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].set_count */
extern void T619f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].unset_found_item */
extern void T266f49(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T266f48(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T621f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T621f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].forth */
extern void T266f41(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].cursor_forth */
extern void T266f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].add_traversing_cursor */
extern void T266f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].set_position */
extern void T621f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].remove_traversing_cursor */
extern void T266f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].clashes_item */
extern T6 T266f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.print_deep_twin_polymorphic_call_function */
extern void T64f616(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_default_entity_value */
extern void T64f653(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_default_name */
extern void T64f600(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].wipe_out */
extern void T263f35(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].slots_wipe_out */
extern void T263f49(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].clashes_wipe_out */
extern void T263f48(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].key_storage_wipe_out */
extern void T263f47(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].item_storage_wipe_out */
extern void T263f46(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].unset_found_item */
extern void T263f39(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].move_all_cursors_after */
extern void T263f45(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].set_next_cursor */
extern void T618f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].set_after */
extern void T618f7(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_deep_twin_binary_search_polymorphic_call */
extern void T64f673(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T0* a4, T0* a5);
/* [detachable] ET_C_GENERATOR.print_adapted_deep_twin_call */
extern void T64f672(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature [detachable] ET_C_GENERATOR.print_adapted_deep_twin_call */
extern T0* T64f672ac1(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] PROCEDURE [[attached] TUPLE].set_rout_disp_final */
extern void T343f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] ET_C_GENERATOR.print_deep_twin_call */
extern void T64f688(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_target_expression */
extern void T64f667(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_adapted_expression */
extern void T64f680(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].item */
extern T0* T263f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].item_storage_item */
extern T0* T263f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].search_position */
extern void T263f37(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].hash_position */
extern T6 T263f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].key_storage_item */
extern T6 T263f20(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].clashes_item */
extern T6 T263f29(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].slots_item */
extern T6 T263f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.print_attribute_type_id_access */
extern void T64f649(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_attribute_type_id_name */
extern void T64f635(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].force_last */
extern void T263f36(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].key_storage_put */
extern void T263f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].slots_put */
extern void T263f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].clashes_put */
extern void T263f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].resize */
extern void T263f40(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].clashes_resize */
extern void T263f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].special_integer_ */
extern T0* T263f31(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].key_storage_resize */
extern void T263f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].item_storage_resize */
extern void T263f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].slots_resize */
extern void T263f51(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].new_modulus */
extern T6 T263f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].new_capacity */
extern T6 T263f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].item_storage_put */
extern void T263f43(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_C_GENERATOR.print_current_name */
extern void T64f647(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].item_for_iteration */
extern T0* T266f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].cursor_item */
extern T0* T266f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].item_storage_item */
extern T0* T266f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].after */
extern T1 T266f28(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].cursor_after */
extern T1 T266f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].after */
extern T1 T621f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].start */
extern void T266f40(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].cursor_start */
extern void T266f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].cursor_off */
extern T1 T266f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].off */
extern T1 T621f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].is_empty */
extern T1 T266f22(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_deep_twin_function */
extern void T64f615(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_C_GENERATOR.print_deep_twin_function */
extern T0* T64f615ac1(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #2 in feature [detachable] ET_C_GENERATOR.print_deep_twin_function */
extern T0* T64f615ac2(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #3 in feature [detachable] ET_C_GENERATOR.print_deep_twin_function */
extern T0* T64f615ac3(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #4 in feature [detachable] ET_C_GENERATOR.print_deep_twin_function */
extern T0* T64f615ac4(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #5 in feature [detachable] ET_C_GENERATOR.print_deep_twin_function */
extern T0* T64f615ac5(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #6 in feature [detachable] ET_C_GENERATOR.print_deep_twin_function */
extern T0* T64f615ac6(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #7 in feature [detachable] ET_C_GENERATOR.print_deep_twin_function */
extern T0* T64f615ac7(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #8 in feature [detachable] ET_C_GENERATOR.print_deep_twin_function */
extern T0* T64f615ac8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #9 in feature [detachable] ET_C_GENERATOR.print_deep_twin_function */
extern T0* T64f615ac9(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #10 in feature [detachable] ET_C_GENERATOR.print_deep_twin_function */
extern T0* T64f615ac10(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #11 in feature [detachable] ET_C_GENERATOR.print_deep_twin_function */
extern T0* T64f615ac11(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #12 in feature [detachable] ET_C_GENERATOR.print_deep_twin_function */
extern T0* T64f615ac12(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T64f615ot1(T0* a1, T0** a2);
extern T1 T64f615ot2(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_attribute_tuple_item_access */
extern void T64f614(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T1 a4);
/* [detachable] ET_C_GENERATOR.print_attribute_tuple_item_name */
extern void T64f638(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] ET_C_GENERATOR.print_attribute_special_indexed_item_access */
extern void T64f670(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* [detachable] ET_C_GENERATOR.reset_temp_variables */
extern void T64f606(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T257f12(GE_context* ac, T0* C);
/* [detachable] SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].keep_head */
extern void T609f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].set_count */
extern void T609f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T257f15(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T611f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T611f6(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_set_deep_twined_attribute */
extern void T64f671(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_C_GENERATOR.print_deep_twined_attribute */
extern void T64f687(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.put_types */
extern void T260f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.put_type */
extern void T260f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].force_last_new */
extern void T266f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].key_storage_put */
extern void T266f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].item_storage_put */
extern void T266f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].force */
extern void T620f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].fill_with */
extern void T619f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].extend */
extern void T619f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].slots_put */
extern void T266f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].clashes_put */
extern void T266f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].slots_item */
extern T6 T266f38(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].hash_position */
extern T6 T266f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T266f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].clashes_resize */
extern void T266f66(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].special_integer_ */
extern T0* T266f37(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].key_storage_resize */
extern void T266f65(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].item_storage_resize */
extern void T266f64(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T620f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T619f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].key_storage_item */
extern T0* T266f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].slots_resize */
extern void T266f63(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].new_modulus */
extern T6 T266f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T266f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.force_last */
extern void T264f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.fixed_array */
extern T0* T264f5(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].default_create */
extern T0* T620c3(GE_context* ac);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.resize */
extern void T264f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.new_capacity */
extern T6 T264f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.capacity */
extern T6 T264f6(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.make */
extern T0* T260c18(GE_context* ac, T0* a1);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.reset */
extern void T260f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.wipe_out */
extern void T259f20(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRIMARY_TYPE].keep_head */
extern void T405f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].found_item */
extern T0* T266f27(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].found */
extern T1 T266f31(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].search */
extern void T266f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].search_position */
extern void T266f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.result_type_set_in_feature */
extern T0* T64f238(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_attribute_special_count_access */
extern void T64f602(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_attribute_special_count_name */
extern void T64f643(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_FEATURE_LIST.first */
extern T0* T219f4(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_attribute_special_item_access */
extern void T64f613(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_TOKEN_CONSTANTS.result_keyword */
extern T0* T71f25(GE_context* ac, T0* C);
/* [detachable] ET_RESULT.make */
extern T0* T300c30(GE_context* ac);
/* [detachable] ET_RESULT.make_token */
extern void T300f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_RESULT.make_leaf */
extern void T300f33(GE_context* ac, T0* C);
/* [detachable] ET_RESULT.tokens */
extern T0* T300f6(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_attribute_special_capacity_access */
extern void T64f601(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_attribute_special_capacity_name */
extern void T64f642(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_result_name */
extern void T64f597(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].wipe_out */
extern void T281f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].slots_wipe_out */
extern void T281f51(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].clashes_wipe_out */
extern void T281f50(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].key_storage_wipe_out */
extern void T281f49(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].item_storage_wipe_out */
extern void T281f48(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE].keep_head */
extern void T642f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE].set_count */
extern void T642f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].unset_found_item */
extern void T281f43(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].move_all_cursors_after */
extern void T281f47(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE].set_next_cursor */
extern void T641f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE].set_after */
extern void T641f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].forth */
extern void T281f37(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].cursor_forth */
extern void T281f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].add_traversing_cursor */
extern void T281f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE].set_position */
extern void T641f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].remove_traversing_cursor */
extern void T281f52(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].clashes_item */
extern T6 T281f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.print_manifest_tuple_function */
extern void T64f549(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].item_for_iteration */
extern T0* T281f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].cursor_item */
extern T0* T281f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].item_storage_item */
extern T0* T281f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T281f34(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].cursor_after */
extern T1 T281f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T641f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].start */
extern void T281f36(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].cursor_start */
extern void T281f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].cursor_off */
extern T1 T281f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE].off */
extern T1 T641f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].is_empty */
extern T1 T281f21(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_big_manifest_array_function */
extern void T64f548(GE_context* ac, T0* C, T0* a1);
extern T1 T64f548ot1(T0* a1, T0** a2);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T265f40(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].slots_wipe_out */
extern void T265f55(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].clashes_wipe_out */
extern void T265f54(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].key_storage_wipe_out */
extern void T265f53(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].item_storage_wipe_out */
extern void T265f52(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T265f51(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].forth */
extern void T265f39(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_manifest_array_function */
extern void T64f547(GE_context* ac, T0* C, T0* a1);
extern T1 T64f547ot1(T0* a1, T0** a2);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].item_for_iteration */
extern T0* T265f17(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].after */
extern T1 T265f30(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].cursor_after */
extern T1 T265f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].start */
extern void T265f38(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_polymorphic_tuple_label_call_functions */
extern void T64f546(GE_context* ac, T0* C);
extern T1 T64f546ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_polymorphic_call_function */
extern void T64f607(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T64f607ot1(T0* a1, T0** a2);
extern T1 T64f607ot2(T0* a1, T0** a2);
/* [detachable] ET_MANIFEST_TUPLE.wipe_out */
extern void T280f31(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION_ITEM].keep_head */
extern void T637f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_EXPRESSION_ITEM].keep_head */
extern void T635f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_EXPRESSION_ITEM].set_count */
extern void T635f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_MANIFEST_TUPLE.fixed_array */
extern T0* T280f6(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION_ITEM].default_create */
extern T0* T637c3(GE_context* ac);
/* [detachable] ET_C_GENERATOR.print_binary_search_polymorphic_calls */
extern void T64f654(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T6 a5, T0* a6, T0* a7);
/* [detachable] ET_C_GENERATOR.print_named_procedure_call */
extern void T64f652(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_procedure_call */
extern void T64f683(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_non_inlined_procedure_call */
extern void T64f695(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].first */
extern T0* T262f10(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_builtin_procedure_call */
extern void T64f694(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_procedure_call */
extern void T64f714(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_set_object_comparison_call */
extern void T64f785(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_adapted_attribute_access */
extern void T64f698(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* [detachable] ET_C_GENERATOR.print_boxed_attribute_access */
extern void T64f715(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* [detachable] ET_C_GENERATOR.print_builtin_special_procedure_call */
extern void T64f713(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_special_put_call */
extern void T64f784(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_ref_procedure_call */
extern void T64f712(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_ref_set_item_call */
extern void T64f783(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_unboxed_expression */
extern void T64f666(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_procedure_procedure_call */
extern void T64f711(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_procedure_fast_call_call */
extern void T64f782(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_procedure_call_call */
extern void T64f781(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_routine_call_call */
extern void T64f990(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T64f990ot1(T0* a1, T0** a2);
extern T1 T64f990ot2(T0* a1, T0** a2);
extern T1 T64f990ot3(T0* a1, T0** a2);
extern T1 T64f990ot4(T0* a1, T0** a2);
extern T1 T64f990ot5(T0* a1, T0** a2);
extern T1 T64f990ot6(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.mark_call_operands_unfrozen */
extern void T64f994(GE_context* ac, T0* C);
extern T1 T64f994ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.mark_temp_variable_unfrozen */
extern void T64f996(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_QUALIFIED_QUERY_CALL.make */
extern T0* T301c12(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.set_target */
extern void T277f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.new_agent_tuple_item_expression */
extern T0* T64f452(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].replace */
extern void T279f11(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.make */
extern T0* T277c25(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.make_qualified_call */
extern void T277f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_IDENTIFIER.set_tuple_label */
extern void T179f117(GE_context* ac, T0* C, T1 a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].item */
extern T0* T279f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].put_last */
extern void T279f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].force */
extern void T639f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].fill_with */
extern void T638f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].extend */
extern void T638f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].resize */
extern void T279f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T639f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T638f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.make_empty */
extern T0* T260c13(GE_context* ac, T0* a1);
/* [detachable] ET_C_GENERATOR.mark_call_operands_frozen */
extern void T64f993(GE_context* ac, T0* C);
extern T1 T64f993ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.mark_temp_variable_frozen */
extern void T64f995(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.reset_with_types */
extern void T260f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.result_type_set */
extern T0* T433f40(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_typed_default_entity_value */
extern void T64f992(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_SYSTEM_PROCESSOR.is_ise */
extern T1 T61f42(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.is_ise */
extern T1 T364f44(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_PRECURSOR.is_procedure */
extern T1 T297f24(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_FEATURE.is_procedure */
extern T1 T231f19(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_builtin_pointer_ref_procedure_call */
extern void T64f710(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_pointer_ref_set_item_call */
extern void T64f780(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_memory_procedure_call */
extern void T64f709(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_memory_free_call */
extern void T64f779(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_procedure_c_call */
extern void T64f989(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T1 a5);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_procedure_call */
extern void T64f708(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_unmark_object_call */
extern void T64f778(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_unlock_marking_call */
extern void T64f777(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_reference_field_at_call */
extern void T64f776(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_reference_field_call */
extern void T64f775(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_real_64_field_at_call */
extern void T64f774(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_real_64_field_call */
extern void T64f773(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_real_32_field_at_call */
extern void T64f772(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_real_32_field_call */
extern void T64f771(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_pointer_field_at_call */
extern void T64f770(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_pointer_field_call */
extern void T64f769(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_64_field_at_call */
extern void T64f768(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_64_field_call */
extern void T64f767(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_32_field_at_call */
extern void T64f766(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_32_field_call */
extern void T64f765(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_16_field_at_call */
extern void T64f764(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_16_field_call */
extern void T64f763(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_8_field_at_call */
extern void T64f762(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_8_field_call */
extern void T64f761(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_64_field_at_call */
extern void T64f760(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_64_field_call */
extern void T64f759(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_32_field_at_call */
extern void T64f758(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_32_field_call */
extern void T64f757(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_16_field_at_call */
extern void T64f756(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_16_field_call */
extern void T64f755(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_8_field_at_call */
extern void T64f754(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_8_field_call */
extern void T64f753(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_character_32_field_at_call */
extern void T64f752(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_character_32_field_call */
extern void T64f751(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_character_8_field_at_call */
extern void T64f750(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_character_8_field_call */
extern void T64f749(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_boolean_field_at_call */
extern void T64f748(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_boolean_field_call */
extern void T64f747(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_mark_object_call */
extern void T64f746(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_lock_marking_call */
extern void T64f745(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_exception_manager_procedure_call */
extern void T64f707(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_exception_manager_developer_raise_call */
extern void T64f744(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_ref_procedure_call */
extern void T64f706(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_ref_set_item_call */
extern void T64f743(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_identified_routines_procedure_call */
extern void T64f705(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_identified_routines_eif_object_id_free_call */
extern void T64f742(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_com_failure_procedure_call */
extern void T64f704(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_com_failure_cwin_local_free_call */
extern void T64f741(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_character_n_ref_procedure_call */
extern void T64f703(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_character_n_ref_set_item_call */
extern void T64f740(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_boolean_ref_procedure_call */
extern void T64f702(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_boolean_ref_set_item_call */
extern void T64f739(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_any_procedure_call */
extern void T64f701(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_any_standard_copy_call */
extern void T64f738(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T64f738ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_info_message_call */
extern void T64f988(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_any_copy_call */
extern void T64f737(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* detachable ET_DYNAMIC_PRECURSOR.is_builtin */
extern T1 T297f21(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_FEATURE.is_builtin */
extern T1 T231f16(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_tuple_label_setter_call */
extern void T64f682(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T64f682ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_adapted_named_query_call */
extern void T64f651(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature [detachable] ET_C_GENERATOR.print_adapted_named_query_call */
extern T0* T64f651ac1(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T64f651ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_adapted_query_call */
extern void T64f681(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature [detachable] ET_C_GENERATOR.print_adapted_query_call */
extern T0* T64f681ac1(GE_context* ac, T0* a1, T0* a2, T0* a3, T1 a4);
/* [detachable] ET_C_GENERATOR.print_query_call */
extern void T64f693(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T64f693ot1(T0* a1, T0** a2);
extern T1 T64f693ot2(T0* a1, T0** a2);
extern T1 T64f693ot3(T0* a1, T0** a2);
extern T1 T64f693ot4(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_non_inlined_query_call */
extern void T64f700(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_query_call */
extern void T64f699(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_type_query_call */
extern void T64f736(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_type_runtime_name_call */
extern void T64f987(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_type_type_id_call */
extern void T64f986(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_type_is_expanded_call */
extern void T64f985(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_type_is_deferred_call */
extern void T64f984(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_type_is_attached_call */
extern void T64f983(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_type_has_default_call */
extern void T64f982(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_type_generic_parameter_count_call */
extern void T64f981(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_type_default_call */
extern void T64f980(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_query_call */
extern void T64f735(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_object_comparison_call */
extern void T64f979(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_count_call */
extern void T64f978(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T64f978ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_builtin_special_query_call */
extern void T64f734(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_special_item_call */
extern void T64f977(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_special_element_size_call */
extern void T64f976(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T64f976ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_builtin_special_count_call */
extern void T64f975(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_special_capacity_call */
extern void T64f974(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_special_base_address_call */
extern void T64f973(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_ref_query_call */
extern void T64f733(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_ref_positive_infinity_call */
extern void T64f972(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_ref_negative_infinity_call */
extern void T64f971(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_ref_nan_call */
extern void T64f970(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_ref_item_call */
extern void T64f969(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_query_call */
extern void T64f732(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_truncated_to_real_call */
extern void T64f968(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_truncated_to_integer_64_call */
extern void T64f967(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_truncated_to_integer_call */
extern void T64f966(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_to_double_call */
extern void T64f965(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_quotient_call */
extern void T64f964(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_product_call */
extern void T64f963(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_power_call */
extern void T64f962(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_plus_call */
extern void T64f961(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_opposite_call */
extern void T64f960(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_minus_call */
extern void T64f959(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_is_positive_infinity_call */
extern void T64f958(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_is_negative_infinity_call */
extern void T64f957(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_is_nan_call */
extern void T64f956(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_is_less_call */
extern void T64f955(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_query_c_call */
extern void T64f991(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T1 a5);
/* [detachable] ET_C_GENERATOR.print_declaration_type_cast */
extern void T64f661(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.total_order_on_reals_mode */
extern T1 T64f275(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_ieee_minimum_number_call */
extern void T64f954(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_ieee_maximum_number_call */
extern void T64f953(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_ieee_is_less_equal_call */
extern void T64f952(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_ieee_is_less_call */
extern void T64f951(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_ieee_is_greater_equal_call */
extern void T64f950(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_ieee_is_greater_call */
extern void T64f949(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_ieee_is_equal_call */
extern void T64f948(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_identity_call */
extern void T64f947(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_floor_real_64_call */
extern void T64f946(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_floor_real_32_call */
extern void T64f945(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_ceiling_real_64_call */
extern void T64f944(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_ceiling_real_32_call */
extern void T64f943(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_pointer_ref_query_call */
extern void T64f731(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_pointer_ref_item_call */
extern void T64f942(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_pointer_query_call */
extern void T64f730(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_pointer_to_integer_32_call */
extern void T64f941(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_pointer_plus_call */
extern void T64f940(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_pointer_is_default_pointer_call */
extern void T64f939(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.current_universe_impl */
extern T0* T64f279(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.universe */
extern T0* T72f82(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_builtin_pointer_hash_code_call */
extern void T64f938(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_platform_query_call */
extern void T64f729(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_platform_wide_character_bytes_call */
extern void T64f937(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_platform_real_bytes_call */
extern void T64f936(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_platform_pointer_bytes_call */
extern void T64f935(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_platform_is_windows_call */
extern void T64f934(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_platform_is_vxworks_call */
extern void T64f933(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_platform_is_vms_call */
extern void T64f932(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_platform_is_unix_call */
extern void T64f931(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_platform_is_thread_capable_call */
extern void T64f930(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_platform_is_scoop_capable_call */
extern void T64f929(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_platform_is_mac_call */
extern void T64f928(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_platform_is_dotnet_call */
extern void T64f927(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_platform_is_64_bits_call */
extern void T64f926(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_platform_integer_bytes_call */
extern void T64f925(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_platform_double_bytes_call */
extern void T64f924(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_platform_character_bytes_call */
extern void T64f923(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_platform_boolean_bytes_call */
extern void T64f922(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_memory_query_call */
extern void T64f728(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_memory_find_referers_call */
extern void T64f921(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_query_call */
extern void T64f727(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_type_id_from_name_call */
extern void T64f920(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_type_conforms_to_call */
extern void T64f919(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_storable_version_of_type_call */
extern void T64f918(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_at_offset_call */
extern void T64f917(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_at_call */
extern void T64f916(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_call */
extern void T64f915(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_real_64_field_at_call */
extern void T64f914(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_real_64_field_call */
extern void T64f913(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_real_32_field_at_call */
extern void T64f912(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_real_32_field_call */
extern void T64f911(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_raw_reference_field_at_offset_call */
extern void T64f910(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_raw_reference_field_at_call */
extern void T64f909(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_pointer_field_at_call */
extern void T64f908(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_pointer_field_call */
extern void T64f907(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_persistent_field_count_of_type_call */
extern void T64f906(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_once_objects_call */
extern void T64f905(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_object_size_call */
extern void T64f904(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_new_type_instance_of_call */
extern void T64f903(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_new_tuple_instance_of_call */
extern void T64f902(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_new_special_of_reference_instance_of_call */
extern void T64f901(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_new_instance_of_call */
extern void T64f900(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_natural_64_field_at_call */
extern void T64f899(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_natural_64_field_call */
extern void T64f898(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_natural_32_field_at_call */
extern void T64f897(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_natural_32_field_call */
extern void T64f896(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_natural_16_field_at_call */
extern void T64f895(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_natural_16_field_call */
extern void T64f894(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_natural_8_field_at_call */
extern void T64f893(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_natural_8_field_call */
extern void T64f892(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_is_tuple_type_call */
extern void T64f891(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_is_tuple_call */
extern void T64f890(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_type_call */
extern void T64f889(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_or_basic_type_call */
extern void T64f888(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_call */
extern void T64f887(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_expanded_call */
extern void T64f886(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_is_special_copy_semantics_item_call */
extern void T64f885(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_is_special_call */
extern void T64f884(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_is_object_marked_call */
extern void T64f883(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_is_field_transient_of_type_call */
extern void T64f882(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_is_field_expanded_of_type_call */
extern void T64f881(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_is_expanded_call */
extern void T64f880(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_is_copy_semantics_field_call */
extern void T64f879(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_is_attached_type_call */
extern void T64f878(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_integer_64_field_at_call */
extern void T64f877(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_integer_64_field_call */
extern void T64f876(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_integer_32_field_at_call */
extern void T64f875(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_integer_32_field_call */
extern void T64f874(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_integer_16_field_at_call */
extern void T64f873(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_integer_16_field_call */
extern void T64f872(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_integer_8_field_at_call */
extern void T64f871(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_integer_8_field_call */
extern void T64f870(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_generic_parameter_count_call */
extern void T64f869(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_generator_of_type_call */
extern void T64f868(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_generating_type_of_type_call */
extern void T64f867(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_field_type_of_type_call */
extern void T64f866(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_field_static_type_of_type_call */
extern void T64f865(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_field_offset_of_type_call */
extern void T64f864(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_field_name_of_type_call */
extern void T64f863(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_field_count_of_type_call */
extern void T64f862(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_eif_gen_param_id_call */
extern void T64f861(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_dynamic_type_at_offset_call */
extern void T64f860(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_dynamic_type_call */
extern void T64f859(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_detachable_type_call */
extern void T64f858(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_compiler_version_call */
extern void T64f857(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_check_assert_call */
extern void T64f856(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_character_32_field_at_call */
extern void T64f855(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_character_32_field_call */
extern void T64f854(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_character_8_field_at_call */
extern void T64f853(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_character_8_field_call */
extern void T64f852(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_boolean_field_at_call */
extern void T64f851(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_boolean_field_call */
extern void T64f850(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_attached_type_call */
extern void T64f849(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_ref_query_call */
extern void T64f726(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_ref_item_call */
extern void T64f848(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_query_call */
extern void T64f725(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_to_real_64_call */
extern void T64f847(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_to_real_32_call */
extern void T64f846(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_to_real_call */
extern void T64f845(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_to_double_call */
extern void T64f844(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_to_character_32_call */
extern void T64f843(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_to_character_8_call */
extern void T64f842(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_quotient_call */
extern void T64f841(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_product_call */
extern void T64f840(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_power_call */
extern void T64f839(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_plus_call */
extern void T64f838(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_opposite_call */
extern void T64f837(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_minus_call */
extern void T64f836(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_is_less_call */
extern void T64f835(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_integer_remainder_call */
extern void T64f834(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_integer_quotient_call */
extern void T64f833(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_identity_call */
extern void T64f832(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_bit_xor_call */
extern void T64f831(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_bit_shift_right_call */
extern void T64f830(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_bit_shift_left_call */
extern void T64f829(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_bit_or_call */
extern void T64f828(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_bit_not_call */
extern void T64f827(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_bit_and_call */
extern void T64f826(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_as_natural_64_call */
extern void T64f825(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_as_natural_32_call */
extern void T64f824(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_as_natural_16_call */
extern void T64f823(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_as_natural_8_call */
extern void T64f822(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_as_integer_64_call */
extern void T64f821(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_as_integer_32_call */
extern void T64f820(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_as_integer_16_call */
extern void T64f819(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_integer_n_as_integer_8_call */
extern void T64f818(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_identified_routines_query_call */
extern void T64f724(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_identified_routines_eif_object_id_call */
extern void T64f817(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_identified_routines_eif_id_object_call */
extern void T64f816(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_function_query_call */
extern void T64f723(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_function_item_call */
extern void T64f815(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_function_fast_item_call */
extern void T64f814(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_com_failure_query_call */
extern void T64f722(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_com_failure_cwin_error_text_call */
extern void T64f813(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_com_failure_character_size_call */
extern void T64f812(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_facility_call */
extern void T64f811(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_code_call */
extern void T64f810(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_call */
extern void T64f809(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_com_failure_c_strlen_call */
extern void T64f808(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_character_n_ref_query_call */
extern void T64f721(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_character_n_ref_item_call */
extern void T64f807(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_character_n_query_call */
extern void T64f720(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_character_n_to_character_32_call */
extern void T64f806(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_character_n_to_character_8_call */
extern void T64f805(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_character_n_natural_32_code_call */
extern void T64f804(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_character_n_code_call */
extern void T64f803(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_boolean_ref_query_call */
extern void T64f719(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_boolean_ref_item_call */
extern void T64f802(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_boolean_query_call */
extern void T64f718(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_boolean_xor_call */
extern void T64f801(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_boolean_or_else_call */
extern void T64f800(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_boolean_or_call */
extern void T64f799(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_boolean_not_call */
extern void T64f798(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_boolean_implies_call */
extern void T64f797(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_boolean_and_then_call */
extern void T64f796(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_boolean_and_call */
extern void T64f795(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_arguments_32_query_call */
extern void T64f717(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_arguments_32_i_th_argument_string_call */
extern void T64f794(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_arguments_32_i_th_argument_pointer_call */
extern void T64f793(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_arguments_32_argument_count_call */
extern void T64f792(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_any_query_call */
extern void T64f716(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_any_standard_is_equal_call */
extern void T64f791(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T64f791ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_builtin_any_same_type_call */
extern void T64f790(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_any_is_equal_call */
extern void T64f789(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_any_generator_call */
extern void T64f788(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_any_generating_type_call */
extern void T64f787(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_builtin_any_deep_twin_call */
extern void T64f786(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].force_last */
extern void T284f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].key_storage_put */
extern void T284f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE].force */
extern void T647f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_FEATURE].fill_with */
extern void T646f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_FEATURE].extend */
extern void T646f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].slots_put */
extern void T284f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].clashes_put */
extern void T284f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].slots_item */
extern T6 T284f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].hash_position */
extern T6 T284f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].resize */
extern void T284f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].clashes_resize */
extern void T284f65(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].special_integer_ */
extern T0* T284f37(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].key_storage_resize */
extern void T284f64(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE].aliased_resized_area */
extern T0* T647f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_FEATURE].aliased_resized_area */
extern T0* T646f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].item_storage_resize */
extern void T284f63(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CONSTANT].aliased_resized_area */
extern T0* T651f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_CONSTANT].aliased_resized_area */
extern T0* T649f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].slots_resize */
extern void T284f62(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].new_modulus */
extern T6 T284f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].new_capacity */
extern T6 T284f35(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].item_storage_put */
extern void T284f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CONSTANT].force */
extern void T651f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CONSTANT].fill_with */
extern void T649f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CONSTANT].extend */
extern void T649f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].search_position */
extern void T284f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.set_polymorphic_call_argument_type_sets */
extern void T64f650(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T64f650ot1(T0* a1, T0** a2);
extern T1 T64f650ot2(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.set_static_type */
extern void T260f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.put_last */
extern void T264f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_call_agent */
extern T1 T305f6(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_call_agent */
extern T1 T301f8(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_tuple_label */
extern T1 T305f8(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.dynamic_type_set_in_feature */
extern T0* T64f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_DYNAMIC_PRECURSOR.dynamic_type_set */
extern T0* T297f26(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_FEATURE.dynamic_type_set */
extern T0* T231f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MANIFEST_TUPLE.expression */
extern T0* T280f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_MANIFEST_TUPLE.item */
extern T0* T280f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.print_call_name */
extern void T64f646(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T64f646ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_call_name_comment */
extern void T64f645(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T64f645ot1(T0* a1, T0** a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].force_last_new */
extern void T263f34(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].has */
extern T1 T263f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].replace */
extern void T262f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_MANIFEST_TUPLE.put_first */
extern void T280f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION_ITEM].force */
extern void T637f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_EXPRESSION_ITEM].fill_with */
extern void T635f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_EXPRESSION_ITEM].extend */
extern void T635f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MANIFEST_TUPLE.resize */
extern void T280f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T637f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T635f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_MANIFEST_TUPLE.capacity */
extern T6 T280f7(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.fill_call_formal_arguments */
extern void T64f644(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.static_feature */
extern T0* T305f7(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.seeded_procedure */
extern T0* T72f179(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_PROCEDURE_LIST.seeded_feature */
extern T0* T253f4(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DYNAMIC_QUALIFIED_QUERY_CALL.static_feature */
extern T0* T301f9(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.seeded_query */
extern T0* T72f181(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_QUERY_LIST.seeded_feature */
extern T0* T252f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.formal_argument */
extern T0* T64f231(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].put_last */
extern void T256f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER.set_argument */
extern void T179f116(GE_context* ac, T0* C, T1 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].force_last */
extern void T262f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].new_capacity */
extern T6 T262f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].extendible */
extern T1 T262f8(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_next */
extern void T301f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.same_declared_signature */
extern T1 T64f145(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T64f145ot1(T0* a1);
extern T1 T64f145ot2(T0* a1);
extern T1 T64f145ot3(T0* a1);
/* detachable ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_tuple_label */
extern T1 T301f7(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_feature */
extern void T64f545(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].wipe_out */
extern void T269f11(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_EQUALITY_EXPRESSION].keep_head */
extern void T629f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_EQUALITY_EXPRESSION].set_count */
extern void T629f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].move_all_cursors_after */
extern void T269f14(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_EQUALITY_EXPRESSION].set_next_cursor */
extern void T631f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_EQUALITY_EXPRESSION].set_after */
extern void T631f6(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_equality_function */
extern void T64f612(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_BRACKET_SYMBOL.is_not_equal */
extern T1 T602f43(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.tokens */
extern T0* T602f8(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_not_equal */
extern T1 T342f36(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.tokens */
extern T0* T342f3(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_equality_expression */
extern void T64f669(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].force_last */
extern void T269f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION].force */
extern void T630f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_EQUALITY_EXPRESSION].fill_with */
extern void T629f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_EQUALITY_EXPRESSION].extend */
extern void T629f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].resize */
extern void T269f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T630f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T629f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].new_capacity */
extern T6 T269f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].extendible */
extern T1 T269f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.print_target_operand */
extern void T64f686(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_equality_function_name */
extern void T64f668(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_C_GENERATOR.print_static_routine_name */
extern void T64f684(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T64f684ot1(T0* a1, T0** a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].item */
extern T0* T269f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].wipe_out */
extern void T268f11(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION].keep_head */
extern void T626f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION].set_count */
extern void T626f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].move_all_cursors_after */
extern void T268f14(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_EQUALITY_EXPRESSION].set_next_cursor */
extern void T628f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_EQUALITY_EXPRESSION].set_after */
extern void T628f6(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_object_equality_function */
extern void T64f611(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_BRACKET_SYMBOL.is_not_tilde */
extern T1 T602f42(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_not_tilde */
extern T1 T342f35(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_object_equality_expression */
extern void T64f665(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].force_last */
extern void T268f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION].force */
extern void T627f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION].fill_with */
extern void T626f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION].extend */
extern void T626f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].resize */
extern void T268f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T627f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T626f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].new_capacity */
extern T6 T268f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].extendible */
extern T1 T268f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.print_object_equality_function_name */
extern void T64f664(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].item */
extern T0* T268f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].wipe_out */
extern void T267f11(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_OBJECT_TEST].keep_head */
extern void T623f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_OBJECT_TEST].set_count */
extern void T623f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].move_all_cursors_after */
extern void T267f13(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_TEST].set_next_cursor */
extern void T625f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_TEST].set_after */
extern void T625f6(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_object_test_function */
extern void T64f610(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.is_empty */
extern T1 T259f9(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_object_test_function_name */
extern void T64f662(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].item */
extern T0* T267f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_AGENT].wipe_out */
extern void T270f11(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_AGENT].keep_head */
extern void T632f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_AGENT].set_count */
extern void T632f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_AGENT].move_all_cursors_after */
extern void T270f13(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_AGENT].set_next_cursor */
extern void T634f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_AGENT].set_after */
extern void T634f6(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_agent_declaration */
extern void T64f609(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T64f609ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_agent_closed_operand_access */
extern void T64f660(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_agent_creation_name */
extern void T64f659(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_C_GENERATOR.print_agent_body_declaration */
extern void T64f658(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_ARGUMENT_LIST.put_first */
extern void T273f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T273f9(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_ARGUMENT_LIST.resize */
extern void T273f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ACTUAL_ARGUMENT_LIST.capacity */
extern T6 T273f8(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_ARGUMENT_LIST.wipe_out */
extern void T273f14(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_agent_open_operand_access */
extern void T64f657(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_agent_function_name */
extern void T64f656(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_TUPLE_TYPE.make */
extern T0* T247c116(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_TOKEN_CONSTANTS.tuple_keyword */
extern T0* T71f89(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.tokens */
extern T0* T247f23(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.put_first */
extern void T235f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM].force */
extern void T604f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T601f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM].extend */
extern void T601f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.fixed_array */
extern T0* T235f11(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T604c3(GE_context* ac);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T235c26(GE_context* ac, T6 a1);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T235f26p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T604f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T601c5(GE_context* ac, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.right_bracket_symbol */
extern T0* T71f207(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.make_right_bracket */
extern T0* T342c78(GE_context* ac);
/* [detachable] ET_SYMBOL.make_leaf */
extern void T342f81(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.left_bracket_symbol */
extern T0* T71f206(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.make */
extern T0* T602c108(GE_context* ac);
/* [detachable] ET_BRACKET_SYMBOL.make_leaf */
extern void T602f109(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T235f9(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.set_agent_closed_operand */
extern void T179f112(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_IDENTIFIER.set_agent_open_operand */
extern void T179f109(GE_context* ac, T0* C, T1 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_AGENT].item */
extern T0* T270f7(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DYNAMIC_PRECURSOR.is_semistrict */
extern T1 T297f18(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_FEATURE.is_semistrict */
extern T1 T231f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].remove_last */
extern void T287f13(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_FEATURE].keep_head */
extern void T587f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_FEATURE].set_count */
extern void T587f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].move_last_cursors_after */
extern void T287f16(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T660f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_FEATURE].set_after */
extern void T660f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].last */
extern T0* T287f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].is_empty */
extern T1 T287f10(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].force_last */
extern void T287f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_FEATURE].force */
extern void T588f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_FEATURE].fill_with */
extern void T587f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_FEATURE].extend */
extern void T587f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].resize */
extern void T287f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T588f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T587f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T287f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].extendible */
extern T1 T287f8(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DYNAMIC_PRECURSOR.set_generated */
extern void T297f38(GE_context* ac, T0* C, T1 a1);
/* detachable ET_DYNAMIC_FEATURE.set_generated */
extern void T231f32(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_C_GENERATOR.print_object_allocation_functions */
extern void T64f544(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_object_allocation_function */
extern void T64f608(GE_context* ac, T0* C, T0* a1);
extern T1 T64f608ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_dispose_registration */
extern void T64f655(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T64f655ot1(T0* a1, T0** a2);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].force_last_new */
extern void T286f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].key_storage_put */
extern void T286f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].item_storage_put */
extern void T286f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].force */
extern void T659f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_DYNAMIC_FEATURE].fill_with */
extern void T656f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_DYNAMIC_FEATURE].extend */
extern void T656f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].slots_put */
extern void T286f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].clashes_put */
extern void T286f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T286f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].clashes_resize */
extern void T286f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].special_integer_ */
extern T0* T286f31(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].key_storage_resize */
extern void T286f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].item_storage_resize */
extern void T286f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T659f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T656f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].slots_resize */
extern void T286f51(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].new_modulus */
extern T6 T286f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T286f32(GE_context* ac, T0* C, T6 a1);
/* detachable ET_COMPOUND.is_empty */
extern T1 T329f4(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_polymorphic_procedure_call_functions */
extern void T64f543(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_next */
extern void T305f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_polymorphic_query_call_functions */
extern void T64f542(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_new_immutable_string_32_function */
extern void T64f541(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_new_string_32_function */
extern void T64f540(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_new_string_8_function */
extern void T64f539(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_default_declarations */
extern void T64f538(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_default_declaration */
extern void T64f593(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_default_object_value */
extern void T64f639(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T64f639ot1(T0* a1, T0** a2);
extern T1 T64f639ot2(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_default_attribute_value */
extern void T64f679(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.flush_to_c_file */
extern void T64f537(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.open_append */
extern void T292f35(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.old_open_append */
extern void T292f44(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.open_append */
extern void T292f44p1(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_types */
extern void T64f536(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_boxed_type_struct */
extern void T64f592(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_attribute_flags_name */
extern void T64f636(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_boxed_struct_name */
extern void T64f634(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_type_struct */
extern void T64f591(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T64f591ot1(T0* a1, T0** a2);
extern T1 T64f591ot2(T0* a1, T0** a2);
extern T1 T64f591ot3(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print */
extern void T64f637(GE_context* ac, T0* C, T0* a1);
/* [detachable] STD_FILES.put_string */
extern void T351f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] STD_FILES.standard_default */
extern T0* T351f2(GE_context* ac, T0* C);
/* [detachable] STRING_8.out */
extern T0* T17f16(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.io */
extern T0* T64f268(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_struct_name */
extern void T64f630(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE].has_cycle */
extern T1 T299f8(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE].sort */
extern void T299f15(GE_context* ac, T0* C);
/* [detachable] ARRAY [[attached] BOOLEAN].item */
extern T1 T669f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ARRAY [[attached] BOOLEAN].put */
extern void T669f6(GE_context* ac, T0* C, T1 a1, T6 a2);
/* [detachable] ARRAY [[attached] BOOLEAN].make_filled */
extern T0* T669c5(GE_context* ac, T1 a1, T6 a2, T6 a3);
/* [detachable] ARRAY [[attached] BOOLEAN].make_filled_area */
extern void T669f7(GE_context* ac, T0* C, T1 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_PRIMARY_TYPE].put_last */
extern void T74f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].replace */
extern void T668f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].item */
extern T0* T668f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].cloned_object */
extern T0* T668f8(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].twin */
extern T0* T668f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].copy */
extern void T668f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].resized_area */
extern T0* T1349f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].copy_data */
extern void T1349f10(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [detachable] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].force */
extern void T1349f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].extend */
extern void T1349f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].move_data */
extern void T1349f13(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].overlapping_move */
extern void T1349f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].fill_with */
extern void T1349f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].non_overlapping_move */
extern void T1349f15(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].make_empty */
extern T0* T1349c6(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].new_cursor */
extern T0* T668f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [[attached] INTEGER_32]].make */
extern T0* T1351c5(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].set_internal_cursor */
extern void T668f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].valid_cursor */
extern T1 T668f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].move_all_cursors_after */
extern void T668f17(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [[attached] INTEGER_32]].set_next_cursor */
extern void T1351f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [[attached] INTEGER_32]].set_after */
extern void T1351f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].cloned_object */
extern T0* T258f12(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].twin */
extern T0* T258f13(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].copy */
extern void T258f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] SPECIAL [[attached] INTEGER_32].resized_area */
extern T0* T125f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].valid_cursor */
extern T1 T258f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE].reset */
extern void T299f20(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_boxed_type_definition */
extern void T64f590(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_type_type_definition */
extern void T64f589(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_boxed_function */
extern void T64f588(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_boxed_attribute_type_id_access */
extern void T64f632(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_C_GENERATOR.print_boxed_type_declaration */
extern void T64f631(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE].force_relation */
extern void T299f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE].put_indexed_relation */
extern void T299f19(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_LINKABLE [[attached] INTEGER_32].put_right */
extern void T485f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] INTEGER_32].make */
extern T0* T485c3(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE].count */
extern T6 T299f10(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE].index_of */
extern T6 T299f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].found_item */
extern T6 T667f20(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].item_storage_item */
extern T6 T667f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].found */
extern T1 T667f30(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].search */
extern void T667f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].search_position */
extern void T667f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].hash_position */
extern T6 T667f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].key_storage_item */
extern T0* T667f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].clashes_item */
extern T6 T667f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].slots_item */
extern T6 T667f29(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.print_type_definition */
extern void T64f587(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_pointer_type_definition */
extern void T64f586(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_real_64_type_definition */
extern void T64f585(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_real_32_type_definition */
extern void T64f584(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_natural_64_type_definition */
extern void T64f583(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_natural_32_type_definition */
extern void T64f582(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_natural_16_type_definition */
extern void T64f581(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_natural_8_type_definition */
extern void T64f580(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_integer_64_type_definition */
extern void T64f579(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_integer_32_type_definition */
extern void T64f578(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_integer_16_type_definition */
extern void T64f577(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_integer_8_type_definition */
extern void T64f576(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_character_32_type_definition */
extern void T64f575(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_character_8_type_definition */
extern void T64f574(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_boolean_type_definition */
extern void T64f573(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE].force */
extern void T299f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE].put */
extern void T299f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].put_last */
extern void T668f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]].force */
extern void T1350f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].put_new */
extern void T667f36(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].key_storage_put */
extern void T667f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].item_storage_put */
extern void T667f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].slots_put */
extern void T667f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].clashes_put */
extern void T667f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].unset_found_item */
extern void T667f40(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].resize */
extern void T668f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]].aliased_resized_area */
extern T0* T1350f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].aliased_resized_area */
extern T0* T1349f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T667f35(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].clashes_resize */
extern void T667f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].special_integer_ */
extern T0* T667f26(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].key_storage_resize */
extern void T667f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].item_storage_resize */
extern void T667f44(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].slots_resize */
extern void T667f41(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].new_modulus */
extern T6 T667f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE].capacity */
extern T6 T299f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE].has */
extern T1 T299f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].has */
extern T1 T667f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE].make_default */
extern T0* T299c12(GE_context* ac);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE].make */
extern void T299f16(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T299c16(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].make */
extern T0* T668c11(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]].make */
extern T0* T1350f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]].default_create */
extern T0* T1350c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_map */
extern T0* T667c34(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_with_equality_testers */
extern void T667f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_sparse_container */
extern void T667f49(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T667f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T667f31(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T1348c4(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_slots */
extern void T667f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_clashes */
extern void T667f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_key_storage */
extern void T667f51(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_item_storage */
extern void T667f50(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.print_aliased_double_type_definition */
extern void T64f572(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_IDENTIFIER.upper_name */
extern T0* T179f22(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.as_upper */
extern T0* T862f31(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.to_upper */
extern void T862f85(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.upper_code */
extern T6 T461f29(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UNICODE_ROUTINES.upper_codes */
extern T0* T461f30(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.empty_upper_code_plane */
extern T0* T461f33(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.empty_upper_code_segment */
extern T0* T461f40(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.upper_code_plane_1 */
extern T0* T461f32(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.upper_code_plane_1_segment_4 */
extern T0* T461f51(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.upper_code_plane_0 */
extern T0* T461f31(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.upper_code_plane_0_segment_255 */
extern T0* T461f50(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.upper_code_plane_0_segment_167 */
extern T0* T461f49(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.upper_code_plane_0_segment_166 */
extern T0* T461f48(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.upper_code_plane_0_segment_45 */
extern T0* T461f47(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.upper_code_plane_0_segment_44 */
extern T0* T461f46(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.upper_code_plane_0_segment_36 */
extern T0* T461f45(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.upper_code_plane_0_segment_33 */
extern T0* T461f44(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.upper_code_plane_0_segment_31 */
extern T0* T461f43(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.upper_code_plane_0_segment_30 */
extern T0* T461f42(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.upper_code_plane_0_segment_29 */
extern T0* T461f41(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.upper_code_plane_0_segment_5 */
extern T0* T461f39(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.upper_code_plane_0_segment_4 */
extern T0* T461f38(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.upper_code_plane_0_segment_3 */
extern T0* T461f37(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.upper_code_plane_0_segment_2 */
extern T0* T461f36(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.upper_code_plane_0_segment_1 */
extern T0* T461f35(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.upper_code_plane_0_segment_0 */
extern T0* T461f34(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.unicode */
extern T0* T862f58(GE_context* ac, T0* C);
/* [detachable] STRING_8.as_upper */
extern T0* T17f32(GE_context* ac, T0* C);
/* [detachable] STRING_8.to_upper */
extern void T17f72(GE_context* ac, T0* C);
/* [detachable] STRING_8.to_upper_area */
extern void T17f75(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_TOKEN_CONSTANTS.double_class_name */
extern T0* T71f32(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_aliased_real_type_definition */
extern void T64f571(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.real_class_name */
extern T0* T71f31(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_aliased_natural_type_definition */
extern void T64f570(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.natural_class_name */
extern T0* T71f30(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_aliased_integer_type_definition */
extern void T64f569(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.integer_class_name */
extern T0* T71f29(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_aliased_wide_character_type_definition */
extern void T64f568(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.wide_character_class_name */
extern T0* T71f28(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_aliased_character_type_definition */
extern void T64f567(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.character_class_name */
extern T0* T71f27(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_start_extern_c */
extern void T64f535(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.include_runtime_header_file */
extern void T64f534(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* [detachable] ET_C_GENERATOR.include_runtime_c_file */
extern void T64f565(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable DS_HASH_SET [[attached] STRING_8].force_last */
extern void T68f44(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [[attached] STRING_8].slots_put */
extern void T68f52(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_HASH_SET [[attached] STRING_8].clashes_put */
extern void T68f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_HASH_SET [[attached] STRING_8].resize */
extern void T68f50(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [[attached] STRING_8].clashes_resize */
extern void T68f69(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [[attached] STRING_8].special_integer_ */
extern T0* T68f35(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [[attached] STRING_8].key_storage_resize */
extern void T68f68(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [[attached] STRING_8].item_storage_resize */
extern void T68f67(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [[attached] STRING_8].slots_resize */
extern void T68f66(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [[attached] STRING_8].new_modulus */
extern T6 T68f23(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [[attached] STRING_8].new_capacity */
extern T6 T68f31(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [[attached] STRING_8].item_storage_put */
extern void T68f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].force_last */
extern void T288f48(GE_context* ac, T0* C, T1 a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].key_storage_put */
extern void T288f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].slots_put */
extern void T288f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].clashes_put */
extern void T288f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].slots_item */
extern T6 T288f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].hash_position */
extern T6 T288f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].resize */
extern void T288f60(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].clashes_resize */
extern void T288f70(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].special_integer_ */
extern T0* T288f40(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].key_storage_resize */
extern void T288f69(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].item_storage_resize */
extern void T288f68(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].slots_resize */
extern void T288f67(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].new_modulus */
extern T6 T288f37(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].new_capacity */
extern T6 T288f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].item_storage_put */
extern void T288f59(GE_context* ac, T0* C, T1 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].search_position */
extern void T288f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].replace */
extern void T288f47(GE_context* ac, T0* C, T1 a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].item */
extern T1 T288f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].has */
extern T1 T288f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.exception_trace_mode */
extern T1 T64f191(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.trace_mode */
extern T1 T64f115(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.generate_ids */
extern void T64f533(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_PRECURSOR.set_id */
extern void T297f34(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DYNAMIC_FEATURE.set_id */
extern void T231f36(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.sort_types */
extern void T64f564(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_PRIMARY_TYPE].put_relation */
extern void T299f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].new_iterator */
extern T0* T265f34(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.open_cpp_file */
extern void T64f532(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.open_c_file */
extern void T64f531(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.set_split_threshold */
extern void T64f523(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.set_split_mode */
extern void T64f522(GE_context* ac, T0* C, T1 a1);
/* [detachable] GEC.no_split */
extern T1 T24f47(GE_context* ac, T0* C);
/* [detachable] AP_BOOLEAN_OPTION.parameter */
extern T1 T45f12(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] BOOLEAN].last */
extern T1 T152f7(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] BOOLEAN].is_empty */
extern T1 T152f6(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.set_finalize_mode */
extern void T64f521(GE_context* ac, T0* C, T1 a1);
/* [detachable] GEC.is_finalize */
extern T1 T24f44(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.set_use_boehm_gc */
extern void T64f520(GE_context* ac, T0* C, T1 a1);
/* [detachable] GEC.use_boehm_gc */
extern T1 T24f46(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.make */
extern T0* T64c519(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.make_external_regexps */
extern void T64f526(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.make_rescue_data */
extern void T64f525(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].set_equality_tester */
extern void T289f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.identifier_tester */
extern T0* T64f112(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER_TESTER.default_create */
extern T0* T290c2(GE_context* ac);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].make */
extern T0* T289c31(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].set_internal_cursor */
extern void T289f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].new_cursor */
extern T0* T289f30(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER].make */
extern T0* T664c6(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].make_slots */
extern void T289f39(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].make_clashes */
extern void T289f38(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].make_key_storage */
extern void T289f37(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].make_item_storage */
extern void T289f36(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER].make */
extern T0* T581f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_IDENTIFIER].make_empty */
extern T0* T582c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER].default_create */
extern T0* T581c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].set_key_equality_tester */
extern void T288f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make */
extern T0* T288c42(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make_with_equality_testers */
extern void T288f50(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make_sparse_container */
extern void T288f64(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].set_internal_cursor */
extern void T288f75(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].new_cursor */
extern T0* T288f39(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8].make */
extern T0* T661c8(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make_slots */
extern void T288f74(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make_clashes */
extern void T288f73(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make_key_storage */
extern void T288f72(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make_item_storage */
extern void T288f71(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [[attached] STRING_8].default_create */
extern T0* T149c2(GE_context* ac);
/* detachable DS_HASH_SET [[attached] STRING_8].set_equality_tester */
extern void T68f41(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [[attached] STRING_8].make */
extern void T68f40(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [[attached] STRING_8].make */
extern T0* T68c40(GE_context* ac, T6 a1);
/* detachable DS_HASH_SET [[attached] STRING_8].set_internal_cursor */
extern void T68f57(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [[attached] STRING_8].new_cursor */
extern T0* T68f24(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] STRING_8].make */
extern T0* T365c9(GE_context* ac, T0* a1);
/* detachable DS_HASH_SET [[attached] STRING_8].make_slots */
extern void T68f56(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [[attached] STRING_8].make_clashes */
extern void T68f55(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [[attached] STRING_8].make_key_storage */
extern void T68f54(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [[attached] STRING_8].make_item_storage */
extern void T68f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].make */
extern T0* T287c11(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].set_internal_cursor */
extern void T287f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T287f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_FEATURE].make */
extern T0* T660c5(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_map */
extern T0* T286c33(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_with_equality_testers */
extern void T286f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_sparse_container */
extern void T286f50(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T286f59(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T286f30(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T658c6(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_slots */
extern void T286f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_clashes */
extern void T286f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_key_storage */
extern void T286f56(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_item_storage */
extern void T286f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].make */
extern T0* T659f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_DYNAMIC_FEATURE].make_empty */
extern T0* T656c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].default_create */
extern T0* T659c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].make_map */
extern T0* T285c39(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].make_with_equality_testers */
extern void T285f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].make_sparse_container */
extern void T285f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].set_internal_cursor */
extern void T285f59(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].new_cursor */
extern T0* T285f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].make */
extern T0* T652c8(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].make_slots */
extern void T285f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].new_modulus */
extern T6 T285f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].make_clashes */
extern void T285f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].make_key_storage */
extern void T285f56(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT].make */
extern T0* T655f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_INLINE_CONSTANT].make_empty */
extern T0* T653c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT].default_create */
extern T0* T655c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].make_item_storage */
extern void T285f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_map */
extern T0* T284c39(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_with_equality_testers */
extern void T284f44(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_sparse_container */
extern void T284f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].set_internal_cursor */
extern void T284f70(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].new_cursor */
extern T0* T284f36(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE].make */
extern T0* T648c8(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_slots */
extern void T284f69(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_clashes */
extern void T284f68(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_key_storage */
extern void T284f67(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE].make */
extern T0* T647f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_FEATURE].make_empty */
extern T0* T646c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE].default_create */
extern T0* T647c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_item_storage */
extern void T284f66(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CONSTANT].make */
extern T0* T651f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_CONSTANT].make_empty */
extern T0* T649c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CONSTANT].default_create */
extern T0* T651c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_map */
extern T0* T282c34(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_with_equality_testers */
extern void T282f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_sparse_container */
extern void T282f44(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].set_internal_cursor */
extern void T282f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].new_cursor */
extern T0* T282f25(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FEATURE].make */
extern T0* T645c6(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_slots */
extern void T282f48(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].new_modulus */
extern T6 T282f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_clashes */
extern void T282f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_key_storage */
extern void T282f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_item_storage */
extern void T282f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T281c35(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].set_internal_cursor */
extern void T281f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].new_cursor */
extern T0* T281f33(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T641c8(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].make_slots */
extern void T281f42(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].new_modulus */
extern T6 T281f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].make_clashes */
extern void T281f41(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].make_key_storage */
extern void T281f40(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].make_item_storage */
extern void T281f39(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T643f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE].make_empty */
extern T0* T642c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE].default_create */
extern T0* T643c3(GE_context* ac);
/* [detachable] ET_MANIFEST_TUPLE.make_with_capacity */
extern T0* T280c27(GE_context* ac, T6 a1);
/* [detachable] ET_MANIFEST_TUPLE.make_with_capacity */
extern void T280f27p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION_ITEM].make */
extern T0* T637f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_EXPRESSION_ITEM].make_empty */
extern T0* T635c5(GE_context* ac, T6 a1);
/* [detachable] ET_MANIFEST_TUPLE.tokens */
extern T0* T280f8(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T279c8(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].set_internal_cursor */
extern void T279f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].new_cursor */
extern T0* T279f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T640c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T639f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].make_empty */
extern T0* T638c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].default_create */
extern T0* T639c3(GE_context* ac);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.make */
extern T0* T278c27(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_QUALIFIED_CALL_INSTRUCTION.make */
extern T0* T274c9(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_QUALIFIED_CALL_INSTRUCTION.make_qualified_call */
extern void T274f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T273f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T273c13(GE_context* ac, T6 a1);
/* [detachable] ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T273f13p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.right_parenthesis_symbol */
extern T0* T71f211(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.make_right_parenthesis */
extern T0* T342c80(GE_context* ac);
/* [detachable] ET_TOKEN_CONSTANTS.left_parenthesis_symbol */
extern T0* T71f210(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.make_left_parenthesis */
extern T0* T342c79(GE_context* ac);
/* [detachable] ET_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T273f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_AGENT].make */
extern T0* T270c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_AGENT].set_internal_cursor */
extern void T270f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_AGENT].new_cursor */
extern T0* T270f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_AGENT].make */
extern T0* T634c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_AGENT].make */
extern T0* T633f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_AGENT].make_empty */
extern T0* T632c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_AGENT].default_create */
extern T0* T633c3(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].make */
extern T0* T269c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].set_internal_cursor */
extern void T269f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].new_cursor */
extern T0* T269f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_EQUALITY_EXPRESSION].make */
extern T0* T631c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION].make */
extern T0* T630f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_EQUALITY_EXPRESSION].make_empty */
extern T0* T629c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION].default_create */
extern T0* T630c3(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T268c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].set_internal_cursor */
extern void T268f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].new_cursor */
extern T0* T268f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T628c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T627f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION].make_empty */
extern T0* T626c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION].default_create */
extern T0* T627c3(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].make */
extern T0* T267c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].set_internal_cursor */
extern void T267f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].new_cursor */
extern T0* T267f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_TEST].make */
extern T0* T625c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST].make */
extern T0* T624f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_OBJECT_TEST].make_empty */
extern T0* T623c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST].default_create */
extern T0* T624c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_map */
extern T0* T266c39(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_with_equality_testers */
extern void T266f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_sparse_container */
extern void T266f60(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T266f71(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T266f36(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T621c8(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_slots */
extern void T266f70(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_clashes */
extern void T266f69(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_key_storage */
extern void T266f68(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_PRIMARY_TYPE].make_item_storage */
extern void T266f67(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T620f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].make_empty */
extern T0* T619c5(GE_context* ac, T6 a1);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.make_with_capacity */
extern T0* T264c8(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].make_map */
extern T0* T263c33(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].make_with_equality_testers */
extern void T263f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].make_sparse_container */
extern void T263f50(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].set_internal_cursor */
extern void T263f59(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].new_cursor */
extern T0* T263f30(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].make */
extern T0* T618c6(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].make_slots */
extern void T263f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].make_clashes */
extern void T263f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].make_key_storage */
extern void T263f56(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] INTEGER_32].make_item_storage */
extern void T263f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].make */
extern T0* T262c12(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].set_internal_cursor */
extern void T262f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].new_cursor */
extern T0* T262f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_EXPRESSION].make */
extern T0* T616c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION].make */
extern T0* T615f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_EXPRESSION].make_empty */
extern T0* T614c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION].default_create */
extern T0* T615c3(GE_context* ac);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].make */
extern T0* T261c8(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T257c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T257f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T257f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T611c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T610f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].make_empty */
extern T0* T609c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE].default_create */
extern T0* T610c3(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].make */
extern T0* T256c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].set_internal_cursor */
extern void T256f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].new_cursor */
extern T0* T256f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_IDENTIFIER].make */
extern T0* T608c3(GE_context* ac, T0* a1);
/* [detachable] KL_STRING_OUTPUT_STREAM.make */
extern T0* T255c4(GE_context* ac, T0* a1);
/* [detachable] ET_C_GENERATOR.null_output_stream */
extern T0* T64f281(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.lower_name */
extern T0* T72f160(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.unknown_class */
extern T0* T71f1(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.set_implementation_error */
extern void T72f257(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.set_interface_error */
extern void T72f256(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.set_flattening_error */
extern void T72f255(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.set_ancestors_error */
extern void T72f254(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.set_syntax_error */
extern void T72f253(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.set_group */
extern void T72f252(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.unknown_group */
extern T0* T71f2(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.make */
extern T0* T399c31(GE_context* ac);
/* [detachable] ET_CLASS.make_unknown */
extern T0* T72c251(GE_context* ac);
/* [detachable] ET_CLASS.make */
extern void T72f258(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.make */
extern T0* T72c258(GE_context* ac, T0* a1);
/* [detachable] ET_CLASS_CODES.class_code */
extern T8 T403f1(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].found_item */
extern T8 T737f28(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].item_storage_item */
extern T8 T737f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].found */
extern T1 T737f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].search */
extern void T737f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].search_position */
extern void T737f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].hash_position */
extern T6 T737f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_NAME_TESTER.test */
extern T1 T547f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_IDENTIFIER.same_class_name */
extern T1 T179f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].key_storage_item */
extern T0* T737f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].clashes_item */
extern T6 T737f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].slots_item */
extern T6 T737f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLASS_CODES.codes_by_name */
extern T0* T403f2(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.iteration_cursor_class_name */
extern T0* T71f122(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.iterable_class_name */
extern T0* T71f121(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.disposable_class_name */
extern T0* T71f120(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.system_object_class_name */
extern T0* T71f119(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.any_class_name */
extern T0* T71f118(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.array_class_name */
extern T0* T71f117(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.typed_pointer_class_name */
extern T0* T71f116(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.type_class_name */
extern T0* T71f115(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.special_class_name */
extern T0* T71f114(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.routine_class_name */
extern T0* T71f113(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.procedure_class_name */
extern T0* T71f112(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.predicate_class_name */
extern T0* T71f111(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.function_class_name */
extern T0* T71f110(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.tuple_class_name */
extern T0* T71f109(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.pointer_class_name */
extern T0* T71f108(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.real_64_class_name */
extern T0* T71f107(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.real_32_class_name */
extern T0* T71f106(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.natural_64_class_name */
extern T0* T71f105(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.natural_32_class_name */
extern T0* T71f104(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.natural_16_class_name */
extern T0* T71f103(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.natural_8_class_name */
extern T0* T71f102(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_64_class_name */
extern T0* T71f101(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_32_class_name */
extern T0* T71f100(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_16_class_name */
extern T0* T71f99(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_8_class_name */
extern T0* T71f98(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.character_32_class_name */
extern T0* T71f97(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.character_8_class_name */
extern T0* T71f96(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].force_last */
extern void T737f37(GE_context* ac, T0* C, T8 a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].key_storage_put */
extern void T737f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME].force */
extern void T594f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CLASS_NAME].fill_with */
extern void T595f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CLASS_NAME].extend */
extern void T595f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].slots_put */
extern void T737f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].clashes_put */
extern void T737f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].resize */
extern void T737f42(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].clashes_resize */
extern void T737f50(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].special_integer_ */
extern T0* T737f31(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].key_storage_resize */
extern void T737f49(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME].aliased_resized_area */
extern T0* T594f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_CLASS_NAME].aliased_resized_area */
extern T0* T595f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].item_storage_resize */
extern void T737f48(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] NATURAL_8].aliased_resized_area */
extern T0* T1371f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] NATURAL_8].aliased_resized_area */
extern T0* T469f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].slots_resize */
extern void T737f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].new_modulus */
extern T6 T737f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].new_capacity */
extern T6 T737f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].item_storage_put */
extern void T737f41(GE_context* ac, T0* C, T8 a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] NATURAL_8].force */
extern void T1371f4(GE_context* ac, T0* C, T0* a1, T8 a2, T6 a3);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].unset_found_item */
extern void T737f40(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.boolean_class_name */
extern T0* T71f95(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_CODES.tokens */
extern T0* T403f6(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].set_key_equality_tester */
extern void T737f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_CODES.class_name_tester */
extern T0* T403f4(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_NAME_TESTER.default_create */
extern T0* T547c2(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_map */
extern T0* T737c34(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_with_equality_testers */
extern void T737f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_sparse_container */
extern void T737f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].set_internal_cursor */
extern void T737f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].new_cursor */
extern T0* T737f30(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make */
extern T0* T1372c4(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_slots */
extern void T737f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_clashes */
extern void T737f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_key_storage */
extern void T737f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME].make */
extern T0* T594f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_CLASS_NAME].make_empty */
extern T0* T595c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME].default_create */
extern T0* T594c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_item_storage */
extern void T737f51(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] NATURAL_8].make */
extern T0* T1371f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] NATURAL_8].default_create */
extern T0* T1371c3(GE_context* ac);
/* [detachable] ET_TOKEN_CONSTANTS.class_keyword */
extern T0* T71f87(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_class */
extern T0* T402c45(GE_context* ac);
/* [detachable] ET_TOKEN_CONSTANTS.empty_procedures */
extern T0* T71f86(GE_context* ac, T0* C);
/* [detachable] ET_PROCEDURE_LIST.make_with_capacity */
extern T0* T253c8(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PROCEDURE].make */
extern T0* T877f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_PROCEDURE].make_empty */
extern T0* T876c5(GE_context* ac, T6 a1);
/* [detachable] ET_PROCEDURE_LIST.fixed_array */
extern T0* T253f6(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PROCEDURE].default_create */
extern T0* T877c3(GE_context* ac);
/* [detachable] ET_TOKEN_CONSTANTS.empty_queries */
extern T0* T71f85(GE_context* ac, T0* C);
/* [detachable] ET_QUERY_LIST.make_with_capacity */
extern T0* T252c8(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_QUERY].make */
extern T0* T875f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_QUERY].make_empty */
extern T0* T873c5(GE_context* ac, T6 a1);
/* [detachable] ET_QUERY_LIST.fixed_array */
extern T0* T252f7(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_QUERY].default_create */
extern T0* T875c3(GE_context* ac);
/* [detachable] ET_TOKEN_CONSTANTS.empty_ancestors */
extern T0* T71f84(GE_context* ac, T0* C);
/* [detachable] ET_BASE_TYPE_LIST.make_with_capacity */
extern T0* T401c7(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE].make */
extern T0* T888f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_BASE_TYPE].make_empty */
extern T0* T887c5(GE_context* ac, T6 a1);
/* [detachable] ET_BASE_TYPE_LIST.fixed_array */
extern T0* T401f6(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE].default_create */
extern T0* T888c3(GE_context* ac);
/* [detachable] ET_TOKEN_CONSTANTS.unknown_class_name */
extern T0* T71f83(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.tokens */
extern T0* T72f177(GE_context* ac, T0* C);
/* [detachable] GEC.tokens */
extern T0* T24f45(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_PROCESSOR.record_end_time */
extern void T61f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_SYSTEM_PROCESSOR.print_time */
extern void T61f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] KL_STDOUT_FILE.put_line */
extern void T136f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DT_DATE_TIME_DURATION.out */
extern T0* T451f9(GE_context* ac, T0* C);
/* [detachable] DT_DATE_TIME_DURATION.append_to_string */
extern void T451f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] DT_DATE_TIME_DURATION.append_time_to_string */
extern void T451f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_INTEGER_ROUTINES.append_decimal_integer */
extern void T864f6(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] DT_DATE_TIME_DURATION.integer_ */
extern T0* T451f14(GE_context* ac, T0* C);
/* [detachable] DT_DATE_TIME_DURATION.append_date_to_string */
extern void T451f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] DT_DATE_TIME_DURATION.set_canonical */
extern void T451f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] DT_DATE_TIME_DURATION.make_canonical_from_dates */
extern void T451f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DT_DATE_TIME_DURATION.make_precise */
extern void T451f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* [detachable] DT_DATE_TIME_DURATION.make_precise */
extern T0* T451c16(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* [detachable] DT_DATE_TIME_DURATION.make_precise_time_duration */
extern void T451f20(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* [detachable] DT_DATE_TIME_DURATION.make_date_duration */
extern void T451f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* detachable DT_DATE_TIME.days_in_current_month */
extern T6 T66f43(GE_context* ac, T0* C);
/* detachable DT_DATE_TIME.days_in_month */
extern T6 T66f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DT_DATE_TIME.leap_year */
extern T1 T66f38(GE_context* ac, T0* C, T6 a1);
/* detachable DT_DATE_TIME.days_in_previous_month */
extern T6 T66f42(GE_context* ac, T0* C);
/* detachable DT_DATE_TIME.is_less */
extern T1 T66f41(GE_context* ac, T0* C, T0* a1);
/* detachable DT_DATE_TIME.millisecond_count */
extern T6 T66f40(GE_context* ac, T0* C);
/* detachable DT_DATE_TIME.day */
extern T6 T66f10(GE_context* ac, T0* C);
/* detachable DT_DATE_TIME.month */
extern T6 T66f9(GE_context* ac, T0* C);
/* detachable DT_DATE_TIME.year */
extern T6 T66f8(GE_context* ac, T0* C);
/* detachable DT_DATE_TIME.add_duration */
extern void T66f62(GE_context* ac, T0* C, T0* a1);
/* detachable DT_DATE_TIME.add_milliseconds */
extern void T66f66(GE_context* ac, T0* C, T6 a1);
/* detachable DT_DATE_TIME.set_normalized_time_storage */
extern void T66f69(GE_context* ac, T0* C, T7 a1);
/* detachable DT_DATE_TIME.add_days */
extern void T66f70(GE_context* ac, T0* C, T6 a1);
/* detachable DT_DATE_TIME.set_from_epoch_days */
extern void T66f68(GE_context* ac, T0* C, T6 a1);
/* detachable DT_DATE_TIME.set_year_month_day */
extern void T66f57(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* detachable DT_DATE_TIME.epoch_to_y2k_days */
extern T6 T66f46(GE_context* ac, T0* C);
/* detachable DT_DATE_TIME.epoch_days */
extern T6 T66f11(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* detachable DT_DATE_TIME.epoch_days_at_month */
extern T6 T66f24(GE_context* ac, T0* C);
/* detachable DT_DATE_TIME.days_at_month */
extern T6 T66f23(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DT_DATE_TIME.epoch_leap_years */
extern T6 T66f22(GE_context* ac, T0* C);
/* [detachable] KL_INTEGER_ROUTINES.div */
extern T6 T864f3(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DT_DATE_TIME.integer_ */
extern T0* T66f21(GE_context* ac, T0* C);
/* detachable DT_DATE_TIME.set_day */
extern void T66f67(GE_context* ac, T0* C, T6 a1);
/* INTEGER_64.to_integer */
extern T6 T7f11(GE_context* ac, T7* C);
/* [detachable] DT_DATE_TIME_DURATION.millisecond_count */
extern T6 T451f15(GE_context* ac, T0* C);
/* detachable DT_DATE_TIME.add_years_months_days */
extern void T66f65(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* detachable DT_DATE_TIME.set_time */
extern void T66f61(GE_context* ac, T0* C, T0* a1);
/* detachable DT_DATE_TIME.set_date */
extern void T66f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] DT_DATE_TIME_DURATION.tmp_date_time */
extern T0* T451f8(GE_context* ac, T0* C);
/* detachable DT_DATE_TIME.make */
extern T0* T66c59(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* detachable DT_DATE_TIME.make_time */
extern void T66f64(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* detachable DT_DATE_TIME.make_date */
extern void T66f63(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* detachable DT_DATE_TIME.minus */
extern T0* T66f12(GE_context* ac, T0* C, T0* a1);
/* detachable DT_DATE_TIME.duration */
extern T0* T66f16(GE_context* ac, T0* C, T0* a1);
/* detachable DT_DATE_TIME.millisecond */
extern T6 T66f7(GE_context* ac, T0* C);
/* detachable DT_DATE_TIME.second */
extern T6 T66f6(GE_context* ac, T0* C);
/* detachable DT_DATE_TIME.minute */
extern T6 T66f5(GE_context* ac, T0* C);
/* detachable DT_DATE_TIME.hour */
extern T6 T66f4(GE_context* ac, T0* C);
/* detachable DT_DATE_TIME.day_count */
extern T6 T66f3(GE_context* ac, T0* C);
/* [detachable] DT_SYSTEM_CLOCK.date_time_now */
extern T0* T436f10(GE_context* ac, T0* C);
/* [detachable] DT_SYSTEM_CLOCK.set_date_time_to_now */
extern void T436f12(GE_context* ac, T0* C, T0* a1);
/* detachable DT_DATE_TIME.set_precise_hour_minute_second */
extern void T66f58(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* [detachable] DT_SYSTEM_CLOCK.set_local_time */
extern void T436f13(GE_context* ac, T0* C);
/* detachable C_DATE.second_now */
extern T6 T895f6(GE_context* ac, T0* C);
/* detachable C_DATE.get_tm_sec */
extern T6 T895f13(GE_context* ac, T0* C, T14 a1);
/* detachable C_DATE.minute_now */
extern T6 T895f5(GE_context* ac, T0* C);
/* detachable C_DATE.get_tm_min */
extern T6 T895f12(GE_context* ac, T0* C, T14 a1);
/* detachable C_DATE.hour_now */
extern T6 T895f4(GE_context* ac, T0* C);
/* detachable C_DATE.get_tm_hour */
extern T6 T895f11(GE_context* ac, T0* C, T14 a1);
/* detachable C_DATE.day_now */
extern T6 T895f15(GE_context* ac, T0* C);
/* detachable C_DATE.get_tm_mday */
extern T6 T895f10(GE_context* ac, T0* C, T14 a1);
/* detachable C_DATE.month_now */
extern T6 T895f8(GE_context* ac, T0* C);
/* detachable C_DATE.get_tm_mon */
extern T6 T895f9(GE_context* ac, T0* C, T14 a1);
/* detachable C_DATE.year_now */
extern T6 T895f7(GE_context* ac, T0* C);
/* detachable C_DATE.get_tm_year */
extern T6 T895f14(GE_context* ac, T0* C, T14 a1);
/* detachable C_DATE.update */
extern void T895f23(GE_context* ac, T0* C);
/* POINTER.memory_free */
extern void T14f11(GE_context* ac, T14* C);
/* POINTER.default_pointer */
extern T14 T14f8(GE_context* ac, T14* C);
/* POINTER.c_free */
extern void T14f13(GE_context* ac, T14* C, T14 a1);
/* detachable C_DATE.get_millitm */
extern T6 T895f21(GE_context* ac, T0* C, T14 a1);
/* detachable C_DATE.tm_structure_size */
extern T6 T895f20(GE_context* ac, T0* C);
/* detachable C_DATE.localtime */
extern T14 T895f19(GE_context* ac, T0* C, T14 a1);
/* detachable C_DATE.gmtime */
extern T14 T895f18(GE_context* ac, T0* C, T14 a1);
/* detachable C_DATE.get_time */
extern void T895f25(GE_context* ac, T0* C, T14 a1, T14 a2);
/* detachable C_DATE.ftime */
extern void T895f24(GE_context* ac, T0* C, T14 a1);
/* detachable C_DATE.time_t_structure_size */
extern T6 T895f17(GE_context* ac, T0* C);
/* detachable C_DATE.timeb_structure_size */
extern T6 T895f16(GE_context* ac, T0* C);
/* detachable C_DATE.default_create */
extern T0* T895c22(GE_context* ac);
/* detachable DT_DATE_TIME.make_from_storage */
extern T0* T66c56(GE_context* ac, T6 a1, T6 a2);
/* [detachable] DT_SHARED_SYSTEM_CLOCK.system_clock */
extern T0* T435f1(GE_context* ac, T0* C);
/* [detachable] DT_SYSTEM_CLOCK.make */
extern T0* T436c11(GE_context* ac);
/* [detachable] DT_SHARED_SYSTEM_CLOCK.default_create */
extern T0* T435c2(GE_context* ac);
/* [detachable] ET_SYSTEM_PROCESSOR.stop_requested */
extern T1 T61f39(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.record_end_time */
extern void T364f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.print_time */
extern void T364f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.stop_requested */
extern T1 T364f40(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SYSTEM.compile */
extern void T60f82(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SYSTEM.compile_system */
extern void T60f85(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SYSTEM.build_dynamic_type_sets */
extern void T60f89(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T225f19(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T69f105(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_validity */
extern void T69f109(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_call_validity */
extern void T69f114(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_target_validity */
extern void T69f116(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T69f116ot1(T0* a1, T0** a2);
/* detachable ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.seeded_dynamic_feature */
extern T0* T305f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_DYNAMIC_QUALIFIED_QUERY_CALL.seeded_dynamic_feature */
extern T0* T301f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_catcall_error */
extern void T69f120(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_NULL_ERROR_HANDLER.report_catcall_error */
extern void T50f197(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_info_message */
extern void T50f183(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.set_has_eiffel_error */
extern void T50f201(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ERROR_HANDLER.report_catcall_error */
extern void T34f197(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_info_message */
extern void T34f183(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.set_has_eiffel_error */
extern void T34f201(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.append_catcall_error_message */
extern void T69f121(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* detachable ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.position */
extern T0* T305f9(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_QUALIFIED_QUERY_CALL.position */
extern T0* T301f10(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.string_ */
extern T0* T69f65(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.shared_error_message */
extern T0* T69f64(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_feature_dynamic_type_sets */
extern void T69f108(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_TYPE_SET_LIST.wipe_out */
extern void T254f13(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].wipe_out */
extern void T370f34(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T370f41(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T370f40(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T370f39(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TYPE].keep_head */
extern void T679f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TYPE].set_count */
extern void T679f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T370f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].unset_found_item */
extern void T370f37(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T370f36(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].set_next_cursor */
extern void T678f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].set_after */
extern void T678f7(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_PRECURSOR.set_built */
extern void T297f36(GE_context* ac, T0* C, T1 a1);
/* detachable ET_DYNAMIC_FEATURE.set_built */
extern void T231f37(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_validity */
extern void T69f112(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ATTACHMENT_SCOPE.wipe_out */
extern void T386f11(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].wipe_out */
extern void T719f39(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].slots_wipe_out */
extern void T719f55(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].clashes_wipe_out */
extern void T719f54(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].key_storage_wipe_out */
extern void T719f53(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].item_storage_wipe_out */
extern void T719f52(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].unset_found_item */
extern void T719f49(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].move_all_cursors_after */
extern void T719f51(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] INTEGER_32].set_next_cursor */
extern void T1367f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] INTEGER_32].set_after */
extern void T1367f10(GE_context* ac, T0* C);
/* [detachable] ET_ACROSS_CURSOR_SCOPE.wipe_out */
extern void T385f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].wipe_out */
extern void T718f11(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_ACROSS_COMPONENT].keep_head */
extern void T716f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ACROSS_COMPONENT].set_count */
extern void T716f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].move_all_cursors_after */
extern void T718f13(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ACROSS_COMPONENT].set_next_cursor */
extern void T1366f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ACROSS_COMPONENT].set_after */
extern void T1366f6(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].wipe_out */
extern void T384f44(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].slots_wipe_out */
extern void T384f53(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].clashes_wipe_out */
extern void T384f52(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].key_storage_wipe_out */
extern void T384f51(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].item_storage_wipe_out */
extern void T384f50(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT].keep_head */
extern void T703f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT].set_count */
extern void T703f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].unset_found_item */
extern void T384f49(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].move_all_cursors_after */
extern void T384f48(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].set_next_cursor */
extern void T713f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].set_after */
extern void T713f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].forth */
extern void T384f43(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].cursor_forth */
extern void T384f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].add_traversing_cursor */
extern void T384f56(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].set_position */
extern void T713f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].remove_traversing_cursor */
extern void T384f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].clashes_item */
extern T6 T384f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].item_for_iteration */
extern T0* T384f23(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].cursor_item */
extern T0* T384f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].item_storage_item */
extern T0* T384f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].after */
extern T1 T384f24(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].cursor_after */
extern T1 T384f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].after */
extern T1 T713f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].start */
extern void T384f42(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].cursor_start */
extern void T384f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].cursor_off */
extern T1 T384f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].off */
extern T1 T713f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].is_empty */
extern T1 T384f27(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST_SCOPE.wipe_out */
extern void T382f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].wipe_out */
extern void T712f11(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_NAMED_OBJECT_TEST].keep_head */
extern void T710f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_NAMED_OBJECT_TEST].set_count */
extern void T710f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T712f14(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T1365f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_NAMED_OBJECT_TEST].set_after */
extern void T1365f6(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].wipe_out */
extern void T381f42(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].slots_wipe_out */
extern void T381f51(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].clashes_wipe_out */
extern void T381f50(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].key_storage_wipe_out */
extern void T381f49(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].item_storage_wipe_out */
extern void T381f48(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].unset_found_item */
extern void T381f47(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T381f46(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T706f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].set_after */
extern void T706f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].forth */
extern void T381f41(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].cursor_forth */
extern void T381f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].add_traversing_cursor */
extern void T381f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].set_position */
extern void T706f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].remove_traversing_cursor */
extern void T381f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].clashes_item */
extern T6 T381f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_context */
extern void T69f110(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.reset */
extern void T236f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.wipe_out */
extern void T236f55(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE].keep_head */
extern void T605f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_TYPE].keep_head */
extern void T250f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_TYPE].set_count */
extern void T250f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.fixed_array */
extern T0* T236f4(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE].default_create */
extern T0* T605c3(GE_context* ac);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tokens */
extern T0* T69f71(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].force_last */
extern void T380f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT].force */
extern void T704f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT].fill_with */
extern void T703f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT].extend */
extern void T703f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].resize */
extern void T380f16(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T704f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T703f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].new_capacity */
extern T6 T380f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].extendible */
extern T1 T380f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].item_for_iteration */
extern T0* T381f23(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].cursor_item */
extern T0* T381f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].item_storage_item */
extern T0* T381f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].after */
extern T1 T381f24(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].cursor_after */
extern T1 T381f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].after */
extern T1 T706f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].start */
extern void T381f40(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].cursor_start */
extern void T381f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].cursor_off */
extern T1 T381f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].off */
extern T1 T706f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].is_empty */
extern T1 T381f27(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_preconditions_attachment_scope */
extern void T69f115(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_attachment_scope */
extern void T69f119(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].force_last */
extern void T388f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE].force */
extern void T722f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ATTACHMENT_SCOPE].fill_with */
extern void T721f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ATTACHMENT_SCOPE].extend */
extern void T721f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].resize */
extern void T388f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T722f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T721f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].new_capacity */
extern T6 T388f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].extendible */
extern T1 T388f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].forth */
extern void T395f41(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].cursor_forth */
extern void T395f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].add_traversing_cursor */
extern void T395f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].set_next_cursor */
extern void T733f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].set_position */
extern void T733f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].remove_traversing_cursor */
extern void T395f57(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].set_after */
extern void T733f8(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].clashes_item */
extern T6 T395f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ATTACHMENT_SCOPE.merge_scope */
extern void T386f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].forth */
extern void T719f43(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].cursor_forth */
extern void T719f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].add_traversing_cursor */
extern void T719f69(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] INTEGER_32].set_position */
extern void T1367f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].remove_traversing_cursor */
extern void T719f68(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].clashes_item */
extern T6 T719f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].remove */
extern void T719f42(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].remove_position */
extern void T719f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].key_storage_put */
extern void T719f75(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].item_storage_put */
extern void T719f74(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].key_storage_keep_head */
extern void T719f73(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].item_storage_keep_head */
extern void T719f72(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].clashes_put */
extern void T719f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].slots_put */
extern void T719f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].move_cursors_forth */
extern void T719f71(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].internal_set_key_equality_tester */
extern void T719f70(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].key_equality_tester */
extern T0* T719f23(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].slots_item */
extern T6 T719f20(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].hash_position */
extern T6 T719f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].key_storage_item */
extern T6 T719f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].item_storage_item */
extern T6 T719f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].search_position */
extern void T719f44(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].has */
extern T1 T719f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].item_for_iteration */
extern T6 T719f36(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].cursor_item */
extern T6 T719f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].after */
extern T1 T719f28(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].cursor_after */
extern T1 T719f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] INTEGER_32].after */
extern T1 T1367f8(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].start */
extern void T719f41(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].cursor_start */
extern void T719f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].cursor_off */
extern T1 T719f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] INTEGER_32].off */
extern T1 T1367f6(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].is_empty */
extern T1 T719f32(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].is_last */
extern T1 T395f25(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].cursor_is_last */
extern T1 T395f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].is_empty */
extern T1 T395f26(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].item_for_iteration */
extern T0* T395f24(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].cursor_item */
extern T0* T395f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].item_storage_item */
extern T0* T395f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].start */
extern void T395f40(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].cursor_start */
extern void T395f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].cursor_off */
extern T1 T395f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].off */
extern T1 T733f5(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_SCOPE.copy_scope */
extern void T386f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].append_last */
extern void T719f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].extend_last */
extern void T719f57(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] INTEGER_32].forth */
extern void T1367f14(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].put_last */
extern void T719f67(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].compress */
extern void T719f76(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].move_all_cursors */
extern void T719f77(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET_CURSOR [[attached] INTEGER_32].item */
extern T6 T1367f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] INTEGER_32].start */
extern void T1367f13(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].new_cursor */
extern T0* T719f37(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] INTEGER_32].make */
extern T0* T1367c9(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].resize */
extern void T719f56(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].clashes_resize */
extern void T719f66(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].special_integer_ */
extern T0* T719f35(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].key_storage_resize */
extern void T719f65(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].item_storage_resize */
extern void T719f64(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].slots_resize */
extern void T719f61(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].new_modulus */
extern T6 T719f30(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].new_capacity */
extern T6 T719f19(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].extendible */
extern T1 T719f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_attachment_scope */
extern T0* T69f95(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].remove_last */
extern void T388f13(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_ATTACHMENT_SCOPE].keep_head */
extern void T721f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ATTACHMENT_SCOPE].set_count */
extern void T721f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].move_last_cursors_after */
extern void T388f16(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ATTACHMENT_SCOPE].set_next_cursor */
extern void T723f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ATTACHMENT_SCOPE].set_after */
extern void T723f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].last */
extern T0* T388f6(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_SCOPE.make */
extern T0* T386c10(GE_context* ac);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].make */
extern T0* T719c38(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].set_internal_cursor */
extern void T719f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].make_slots */
extern void T719f48(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].make_clashes */
extern void T719f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].make_key_storage */
extern void T719f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].make_item_storage */
extern void T719f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].is_empty */
extern T1 T388f10(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_assertions_attachment_scope */
extern void T69f118(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.build_scope */
extern void T387f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_PRECONDITIONS.assertion */
extern T0* T394f7(GE_context* ac, T0* C, T6 a1);
/* detachable ET_PRECONDITIONS.item */
extern T0* T394f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].first */
extern T0* T395f20(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].force_last */
extern void T395f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].key_storage_put */
extern void T395f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].slots_put */
extern void T395f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].clashes_put */
extern void T395f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].slots_item */
extern T6 T395f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].hash_position */
extern T6 T395f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].resize */
extern void T395f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].clashes_resize */
extern void T395f56(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].special_integer_ */
extern T0* T395f36(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].key_storage_resize */
extern void T395f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].item_storage_resize */
extern void T395f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS].aliased_resized_area */
extern T0* T736f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ASSERTIONS].aliased_resized_area */
extern T0* T734f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].key_storage_item */
extern T0* T395f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].slots_resize */
extern void T395f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].new_modulus */
extern T6 T395f29(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].new_capacity */
extern T6 T395f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].item_storage_put */
extern void T395f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS].force */
extern void T736f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ASSERTIONS].fill_with */
extern void T734f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ASSERTIONS].extend */
extern void T734f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].search_position */
extern void T395f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].unset_found_item */
extern void T395f43(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.add_precursors_with_preconditions_recursive */
extern void T69f117(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_FEATURE_LIST.item */
extern T0* T397f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_map */
extern T0* T395c38(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_with_equality_testers */
extern void T395f42(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_sparse_container */
extern void T395f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].set_internal_cursor */
extern void T395f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].new_cursor */
extern T0* T395f35(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make */
extern T0* T733c7(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_slots */
extern void T395f62(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_clashes */
extern void T395f61(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_key_storage */
extern void T395f60(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_item_storage */
extern void T395f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS].make */
extern T0* T736f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ASSERTIONS].make_empty */
extern T0* T734c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS].default_create */
extern T0* T736c3(GE_context* ac);
/* [detachable] ET_FEATURE_CHECKER.check_preconditions_validity */
extern void T369f74(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_PRECONDITIONS.set_validity_error */
extern void T394f21(GE_context* ac, T0* C);
/* detachable ET_PRECONDITIONS.set_validity_checked */
extern void T394f20(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.free_context */
extern void T369f75(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.tokens */
extern T0* T369f52(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST_SCOPE.keep_object_tests */
extern void T382f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].keep_first */
extern void T712f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_CHECKER.current_system */
extern T0* T369f54(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.current_system */
extern T0* T72f83(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.build_scope */
extern void T383f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vwbe0a_error */
extern void T50f203(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_validity_error */
extern void T50f200(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_info */
extern void T50f181(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_VALIDITY_ERROR.make_vwbe0a */
extern T0* T742c822(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.set_compilers */
extern void T742f823(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_VALIDITY_ERROR.filename */
extern T0* T742f21(GE_context* ac, T0* C);
/* [detachable] ET_VALIDITY_ERROR.default_message_template */
extern T0* T742f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_VALIDITY_ERROR.null_position */
extern T0* T742f12(GE_context* ac, T0* C);
/* [detachable] ET_COMPRESSED_POSITION.make_default */
extern T0* T188c12(GE_context* ac);
/* [detachable] ET_VALIDITY_ERROR.template_code */
extern T0* T742f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T50f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vwbe0a_error */
extern void T34f203(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_validity_error */
extern void T34f200(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_info */
extern void T34f181(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T34f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.same_named_type */
extern T1 T236f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.check_expression_validity */
extern void T369f77(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.report_expression_supplier */
extern void T369f78(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_SUPPLIER_BUILDER.report_expression_supplier */
extern void T1286f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_SUPPLIER_BUILDER.add_supplier */
extern void T1286f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].force_last */
extern void T913f67(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].slots_put */
extern void T913f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].clashes_put */
extern void T913f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].slots_item */
extern T6 T913f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].hash_position */
extern T6 T913f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.hash_code */
extern T6 T552f37(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].resize */
extern void T913f68(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].clashes_resize */
extern void T913f72(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].special_integer_ */
extern T0* T913f35(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].key_storage_resize */
extern void T913f71(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].item_storage_resize */
extern void T913f70(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1578f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1576f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].key_storage_item */
extern T0* T913f30(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].item_storage_item */
extern T0* T913f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].clashes_item */
extern T6 T913f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].slots_resize */
extern void T913f69(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].new_modulus */
extern T6 T913f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].new_capacity */
extern T6 T913f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].item_storage_put */
extern void T913f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS].force */
extern void T1578f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_NAMED_CLASS].fill_with */
extern void T1576f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_NAMED_CLASS].extend */
extern void T1576f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].search_position */
extern void T913f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].key_equality_tester */
extern T0* T913f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].unset_found_item */
extern void T913f46(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.actual_class */
extern T0* T552f23(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.actual_class */
extern T0* T72f78(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST_SCOPE.count */
extern T6 T382f3(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.new_context */
extern T0* T369f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].remove_last */
extern void T380f14(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].move_last_cursors_after */
extern void T380f17(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT].set_next_cursor */
extern void T705f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT].set_after */
extern void T705f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].last */
extern T0* T380f6(GE_context* ac, T0* C);
/* [detachable] ET_NESTED_TYPE_CONTEXT.make_with_capacity */
extern T0* T236c51(GE_context* ac, T0* a1, T6 a2);
/* [detachable] ET_NESTED_TYPE_CONTEXT.make_ast_list_with_capacity */
extern void T236f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE].make */
extern T0* T605f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_TYPE].make_empty */
extern T0* T250c5(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].is_empty */
extern T1 T380f10(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.current_universe_impl */
extern T0* T369f49(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.error_handler */
extern T0* T369f60(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.set_fatal_error */
extern void T369f76(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_feature_validity */
extern void T69f111(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_DYNAMIC_FEATURE.is_precursor */
extern T1 T231f23(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_PRECURSOR.set_dynamic_type_sets */
extern void T297f35(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_FEATURE.set_dynamic_type_sets */
extern void T231f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T225f15(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T69f101(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T225f14(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T69f100(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_assertion */
extern void T225f18(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_assertion */
extern void T69f104(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_debug */
extern void T225f17(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_debug */
extern void T69f103(GE_context* ac, T0* C, T1 a1);
/* detachable ET_DYNAMIC_PRECURSOR.set_creation */
extern void T297f39(GE_context* ac, T0* C, T1 a1);
/* detachable ET_DYNAMIC_FEATURE.set_creation */
extern void T231f33(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_CLASS.is_creation_directly_exported_to */
extern T1 T72f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CREATOR_LIST.is_directly_exported_to */
extern T1 T1067f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CREATOR.is_directly_exported_to */
extern T1 T1064f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CREATOR.has_feature_name */
extern T1 T1064f14(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CLIENTS.has_class */
extern T1 T1025f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLIENT.base_class */
extern T0* T391f3(GE_context* ac, T0* C);
/* [detachable] ET_CLIENT_LIST.has_class */
extern T1 T390f6(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CREATOR.is_empty */
extern T1 T1064f11(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvsrc5a_error */
extern void T50f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_system_error */
extern void T50f198(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_ERROR.make_gvsrc5a */
extern T0* T740c32(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T50f16(GE_context* ac, T0* C);
/* [detachable] ET_ERROR_HANDLER.report_gvsrc5a_error */
extern void T34f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_system_error */
extern void T34f198(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T34f16(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vsrc1a_error */
extern void T50f188(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_ERROR.make_vsrc1a */
extern T0* T740c31(GE_context* ac, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T50f15(GE_context* ac, T0* C);
/* [detachable] ET_ERROR_HANDLER.report_vsrc1a_error */
extern void T34f188(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T34f15(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.has_syntax_error */
extern T1 T72f101(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_parsed */
extern T1 T72f100(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvsrc4a_error */
extern void T50f187(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_ERROR.make_gvsrc4a */
extern T0* T740c30(GE_context* ac, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T50f14(GE_context* ac, T0* C);
/* [detachable] ET_ERROR_HANDLER.report_gvsrc4a_error */
extern void T34f187(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T34f14(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_preparsed */
extern T1 T72f86(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvsrc6a_error */
extern void T50f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_SYSTEM_ERROR.make_gvsrc6a */
extern T0* T740c29(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T50f13(GE_context* ac, T0* C);
/* [detachable] ET_ERROR_HANDLER.report_gvsrc6a_error */
extern void T34f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T34f13(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.default_create_feature_name */
extern T0* T71f3(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvsrc3a_error */
extern void T50f185(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_ERROR.make_gvsrc3a */
extern T0* T740c28(GE_context* ac);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T50f12(GE_context* ac, T0* C);
/* [detachable] ET_ERROR_HANDLER.report_gvsrc3a_error */
extern void T34f185(GE_context* ac, T0* C);
/* [detachable] ET_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T34f12(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SYSTEM.error_handler */
extern T0* T60f57(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SYSTEM.compile_kernel */
extern void T60f87(GE_context* ac, T0* C, T0* a1);
extern T1 T60f87ot1(T0* a1, T0** a2);
/* [detachable] ET_TOKEN_CONSTANTS.set_exception_data_feature_name */
extern T0* T71f19(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.once_raise_feature_name */
extern T0* T71f18(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.last_exception_feature_name */
extern T0* T71f17(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.init_exception_manager_feature_name */
extern T0* T71f16(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvkfe6a_error */
extern void T50f196(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_gvkfe6a */
extern T0* T742c821(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ARRAY [[attached] ET_TYPE].item */
extern T0* T249f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T50f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvkfe6a_error */
extern void T34f196(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T34f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvkfe4a_error */
extern void T50f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_gvkfe4a */
extern T0* T742c820(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T50f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvkfe4a_error */
extern void T34f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T34f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.set_rout_disp_final_feature_name */
extern T0* T71f15(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.rout_disp_feature_name */
extern T0* T71f14(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.closed_operands_feature_name */
extern T0* T71f13(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.to_pointer_feature_name */
extern T0* T71f10(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.pointer_item_feature_name */
extern T0* T71f9(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_PROCESSOR.older_ise_version */
extern T1 T61f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_VERSION.is_less */
extern T1 T43f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_VERSION.build */
extern T6 T43f9(GE_context* ac, T0* C);
/* [detachable] UT_VERSION.has_build */
extern T1 T43f8(GE_context* ac, T0* C);
/* [detachable] UT_VERSION.revision */
extern T6 T43f7(GE_context* ac, T0* C);
/* [detachable] UT_VERSION.has_revision */
extern T1 T43f6(GE_context* ac, T0* C);
/* [detachable] UT_VERSION.minor */
extern T6 T43f5(GE_context* ac, T0* C);
/* [detachable] UT_VERSION.has_minor */
extern T1 T43f13(GE_context* ac, T0* C);
/* [detachable] UT_VERSION.major */
extern T6 T43f12(GE_context* ac, T0* C);
/* [detachable] UT_VERSION.has_major */
extern T1 T43f11(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.older_ise_version */
extern T1 T364f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SYSTEM.ise_6_0_6_7057 */
extern T0* T60f75(GE_context* ac, T0* C);
/* [detachable] UT_VERSION.make */
extern T0* T43c19(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4);
/* [detachable] ET_TOKEN_CONSTANTS.upper_feature_name */
extern T0* T71f8(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.lower_feature_name */
extern T0* T71f7(GE_context* ac, T0* C);
/* [detachable] ET_NESTED_TYPE_CONTEXT.put_last */
extern void T236f52(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE].force */
extern void T605f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_TYPE].fill_with */
extern void T250f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_TYPE].extend */
extern void T250f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.formal_parameter_type */
extern T0* T72f89(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].replace */
extern void T851f11(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.make */
extern T0* T245c75(GE_context* ac, T0* a1, T0* a2, T6 a3, T0* a4);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].item */
extern T0* T851f7(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].put_last */
extern void T851f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].force */
extern void T1546f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].fill_with */
extern void T1545f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].extend */
extern void T1545f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].resize */
extern void T851f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1546f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1545f4(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T851c8(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].set_internal_cursor */
extern void T851f12(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].new_cursor */
extern T0* T851f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1547c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1546f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].make_empty */
extern T0* T1545c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].default_create */
extern T0* T1546c3(GE_context* ac);
/* detachable ET_FORMAL_PARAMETER_LIST.formal_parameter */
extern T0* T585f7(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.formal_parameter */
extern T0* T1427f10(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER.formal_parameter */
extern T0* T852f8(GE_context* ac, T0* C);
/* detachable ET_FORMAL_PARAMETER_LIST.item */
extern T0* T585f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_SYSTEM.attached_type */
extern T0* T60f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.attached_like_current */
extern T0* T71f20(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_CURRENT.make */
extern T0* T432c77(GE_context* ac, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.like_keyword */
extern T0* T71f267(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_like */
extern T0* T402c51(GE_context* ac);
/* [detachable] ET_LIKE_CURRENT.tokens */
extern T0* T432f11(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.attached_keyword */
extern T0* T71f60(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_attached */
extern T0* T402c42(GE_context* ac);
/* [detachable] ET_TOKEN_CONSTANTS.area_feature_name */
extern T0* T71f6(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.make_generic */
extern T0* T70c123(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_TOKEN_CONSTANTS.capacity_feature_name */
extern T0* T71f5(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvkfe3a_error */
extern void T50f194(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvkfe3a */
extern T0* T742c819(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T50f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvkfe3a_error */
extern void T34f194(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T34f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvkfe1a_error */
extern void T50f193(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_gvkfe1a */
extern T0* T742c818(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T50f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvkfe1a_error */
extern void T34f193(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T34f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvkfe2a_error */
extern void T50f192(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_gvkfe2a */
extern T0* T742c817(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T50f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvkfe2a_error */
extern void T34f192(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T34f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.count_feature_name */
extern T0* T71f4(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvknl1a_error */
extern void T50f191(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_ERROR.make_gvknl1a */
extern T0* T740c33(GE_context* ac, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T50f17(GE_context* ac, T0* C);
/* [detachable] ET_ERROR_HANDLER.report_gvknl1a_error */
extern void T34f191(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T34f17(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_PROCESSOR.compile_degree_6 */
extern void T61f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.report_degree_6_metrics */
extern void T61f70(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.class_count_recursive */
extern T6 T55f132(GE_context* ac, T0* C);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM.class_count_recursive */
extern T0* T55f132ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature [detachable] ET_ECF_SYSTEM.class_count_recursive */
extern T0* T55f132ac2(GE_context* ac, T0* a1, T0* a2);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]].set_rout_disp_final */
extern void T223f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] KL_AGENT_ROUTINES [[attached] ET_CLASS].call */
extern void T791f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] UT_COUNTER.increment */
extern void T790f3(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.classes_do_recursive */
extern void T55f166(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM.classes_do_recursive */
extern T0* T55f166ac1(GE_context* ac, T0* a1);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_UNIVERSE]].set_rout_disp_final */
extern void T795f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] ET_ECF_SYSTEM.universes_do_recursive */
extern void T55f170(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].do_all */
extern void T812f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].item_storage_item */
extern T0* T812f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].clashes_item */
extern T6 T812f17(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_SYSTEM.add_universe_recursive */
extern void T55f184(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T55f184ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature [detachable] ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T55f184ac2(GE_context* ac, T0* a1);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T802f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T206f168(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T206f168ac1(GE_context* ac, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLIES.do_all */
extern void T577f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].item */
extern T0* T1345f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T578f168(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T578f168ac1(GE_context* ac, T0* a1);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_LIBRARY]].set_rout_disp_final */
extern void T811f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] ET_ECF_LIBRARY.add_universe_recursive */
extern void T182f193(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T182f193ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature [detachable] ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T182f193ac2(GE_context* ac, T0* a1);
/* [detachable] ET_LIBRARY.add_universe_recursive */
extern void T809f168(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_LIBRARY.add_universe_recursive */
extern T0* T809f168ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature [detachable] ET_LIBRARY.add_universe_recursive */
extern T0* T809f168ac2(GE_context* ac, T0* a1);
/* [detachable] ET_ADAPTED_DOTNET_ASSEMBLIES.do_all */
extern void T205f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T576f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ADAPTED_LIBRARIES.do_all */
extern void T183f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].item */
extern T0* T560f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].force_last */
extern void T812f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].slots_put */
extern void T812f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].clashes_put */
extern void T812f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].slots_item */
extern T6 T812f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].hash_position */
extern T6 T812f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].resize */
extern void T812f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].clashes_resize */
extern void T812f61(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].special_integer_ */
extern T0* T812f33(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].key_storage_resize */
extern void T812f60(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].item_storage_resize */
extern void T812f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE].aliased_resized_area */
extern T0* T1535f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_UNIVERSE].aliased_resized_area */
extern T0* T1533f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].key_storage_item */
extern T0* T812f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].slots_resize */
extern void T812f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].new_modulus */
extern T6 T812f29(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].new_capacity */
extern T6 T812f19(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].item_storage_put */
extern void T812f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE].force */
extern void T1535f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_UNIVERSE].fill_with */
extern void T1533f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_UNIVERSE].extend */
extern void T1533f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].search_position */
extern void T812f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].key_equality_tester */
extern T0* T812f25(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].unset_found_item */
extern void T812f47(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].has */
extern T1 T812f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].make */
extern T0* T812c36(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].set_internal_cursor */
extern void T812f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].new_cursor */
extern T0* T812f35(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE].make */
extern T0* T1532c8(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].make_slots */
extern void T812f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].make_clashes */
extern void T812f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].make_key_storage */
extern void T812f44(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].make_item_storage */
extern void T812f43(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE].make */
extern T0* T1535f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_UNIVERSE].make_empty */
extern T0* T1533c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE].default_create */
extern T0* T1535c3(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM.initial_universes_capacity */
extern T6 T55f136(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.class_actions */
extern T0* T55f141(GE_context* ac, T0* C);
/* [detachable] KL_AGENT_ROUTINES [[attached] ET_CLASS].default_create */
extern T0* T791c1(GE_context* ac);
/* [detachable] UT_COUNTER.make */
extern T0* T790c2(GE_context* ac, T6 a1);
/* [detachable] ET_ECF_SYSTEM.preparse_recursive */
extern void T55f168(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.build_scm_write_mappings */
extern void T55f173(GE_context* ac, T0* C);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM.build_scm_write_mappings */
extern T0* T55f173ac1(GE_context* ac, T0* a1);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]].set_rout_disp_final */
extern void T815f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] ET_ECF_SYSTEM.build_scm_write_mapping */
extern void T55f187(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.set_scm_write_mapping */
extern void T759f90(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern void T55f186(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern T0* T55f186ac1(GE_context* ac, T0* a1);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_INTERNAL_UNIVERSE]].set_rout_disp_final */
extern void T805f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] ET_ECF_SYSTEM.internal_universes_do_recursive */
extern void T55f174(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].do_all */
extern void T817f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].item_storage_item */
extern T0* T817f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].clashes_item */
extern T6 T817f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_SYSTEM.add_internal_universe_recursive */
extern void T55f188(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM.add_internal_universe_recursive */
extern T0* T55f188ac1(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_LIBRARY.add_internal_universe_recursive */
extern void T182f194(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_LIBRARY.add_internal_universe_recursive */
extern T0* T182f194ac1(GE_context* ac, T0* a1);
/* [detachable] ET_LIBRARY.add_internal_universe_recursive */
extern void T809f169(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_LIBRARY.add_internal_universe_recursive */
extern T0* T809f169ac1(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].force_last */
extern void T817f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].slots_put */
extern void T817f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].clashes_put */
extern void T817f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].slots_item */
extern T6 T817f29(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].hash_position */
extern T6 T817f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].resize */
extern void T817f41(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].clashes_resize */
extern void T817f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].special_integer_ */
extern T0* T817f27(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].key_storage_resize */
extern void T817f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].item_storage_resize */
extern void T817f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1538f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1539f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].key_storage_item */
extern T0* T817f20(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].slots_resize */
extern void T817f44(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].new_modulus */
extern T6 T817f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].new_capacity */
extern T6 T817f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].item_storage_put */
extern void T817f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE].force */
extern void T1538f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_INTERNAL_UNIVERSE].fill_with */
extern void T1539f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_INTERNAL_UNIVERSE].extend */
extern void T1539f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].search_position */
extern void T817f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].key_equality_tester */
extern T0* T817f19(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].unset_found_item */
extern void T817f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].has */
extern T1 T817f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].make */
extern T0* T817c30(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].set_internal_cursor */
extern void T817f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].new_cursor */
extern T0* T817f21(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_INTERNAL_UNIVERSE].make */
extern T0* T1536c4(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].make_slots */
extern void T817f37(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].make_clashes */
extern void T817f36(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].make_key_storage */
extern void T817f35(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].make_item_storage */
extern void T817f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE].make */
extern T0* T1538f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_INTERNAL_UNIVERSE].make_empty */
extern T0* T1539c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE].default_create */
extern T0* T1538c3(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM.build_scm_read_mappings */
extern void T55f172(GE_context* ac, T0* C);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM.build_scm_read_mappings */
extern T0* T55f172ac1(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_SYSTEM.build_scm_read_mapping */
extern void T55f185(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.set_scm_read_mapping */
extern void T759f89(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.check_master_class_validity */
extern void T364f110(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_SYSTEM_MULTIPROCESSOR.check_master_class_validity */
extern T0* T364f110ac1(GE_context* ac, T0* a1);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]].set_rout_disp_final */
extern void T820f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] ET_MASTER_CLASS.process */
extern void T552f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_NULL_PROCESSOR.process_master_class */
extern void T447f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS_CHECKER.process_master_class */
extern void T438f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS_CHECKER.check_master_class_validity */
extern void T438f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS_CHECKER.check_overriding_classes_validity */
extern void T438f12(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vscn0d_error */
extern void T50f388(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_universe_error */
extern void T50f393(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIVERSE_ERROR.make_vscn0d */
extern T0* T1924c21(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_MASTER_CLASS.upper_name */
extern T0* T552f49(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vscn_error */
extern T1 T50f108(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vscn0d_error */
extern void T34f388(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_universe_error */
extern void T34f393(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.reportable_vscn_error */
extern T1 T34f108(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].item */
extern T0* T1336f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_MASTER_CLASS_CHECKER.current_universe */
extern T0* T438f6(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS_CHECKER.error_handler */
extern T0* T438f5(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS_CHECKER.set_fatal_error */
extern void T438f13(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].is_empty */
extern T1 T1336f12(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS_CHECKER.check_intrinsic_classes_validity */
extern void T438f11(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS_CHECKER.check_overridden_class_validity */
extern void T438f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vscn0c_error */
extern void T50f390(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_UNIVERSE_ERROR.make_vscn0c */
extern T0* T1924c23(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vscn0c_error */
extern void T34f390(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_CLASS.is_in_dotnet_assembly */
extern T1 T72f95(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vscn0b_error */
extern void T50f389(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_UNIVERSE_ERROR.make_vscn0b */
extern T0* T1924c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vscn0b_error */
extern void T34f389(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_MASTER_CLASS.actual_intrinsic_class */
extern T0* T552f27(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.actual_intrinsic_class */
extern T0* T72f190(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vscn0a_error */
extern void T50f387(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_UNIVERSE_ERROR.make_vscn0a */
extern T0* T1924c20(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vscn0a_error */
extern void T34f387(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].item */
extern T0* T445f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_MASTER_CLASS_CHECKER.reset_fatal_error */
extern void T438f10(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern void T55f248(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T55f248ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature [detachable] ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T55f248ac2(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ECF_SYSTEM.universes_do_recursive_until */
extern void T55f171(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].forth */
extern void T812f40(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].cursor_forth */
extern void T812f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].add_traversing_cursor */
extern void T812f57(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE].set_next_cursor */
extern void T1532f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE].set_position */
extern void T1532f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].remove_traversing_cursor */
extern void T812f56(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE].set_after */
extern void T1532f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].item_for_iteration */
extern T0* T812f34(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].cursor_item */
extern T0* T812f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].go_after */
extern void T812f39(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].cursor_go_after */
extern void T812f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].cursor_off */
extern T1 T812f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE].off */
extern T1 T1532f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].after */
extern T1 T812f27(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].cursor_after */
extern T1 T812f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE].after */
extern T1 T1532f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].start */
extern void T812f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].cursor_start */
extern void T812f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_UNIVERSE].is_empty */
extern T1 T812f31(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_PROCESSOR.check_master_class_validity */
extern void T61f106(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_SYSTEM_PROCESSOR.check_master_class_validity */
extern T0* T61f106ac1(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_SYSTEM.preparse_recursive */
extern void T55f168p1(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM.preparse_recursive */
extern T0* T55f168p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature [detachable] ET_ECF_SYSTEM.preparse_recursive */
extern T0* T55f168p1ac2(GE_context* ac);
/* Creation of agent #3 in feature [detachable] ET_ECF_SYSTEM.preparse_recursive */
extern T0* T55f168p1ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature [detachable] ET_ECF_SYSTEM.preparse_recursive */
extern T0* T55f168p1ac4(GE_context* ac, T0* a1);
/* Creation of agent #5 in feature [detachable] ET_ECF_SYSTEM.preparse_recursive */
extern T0* T55f168p1ac5(GE_context* ac, T0* a1);
/* Creation of agent #6 in feature [detachable] ET_ECF_SYSTEM.preparse_recursive */
extern T0* T55f168p1ac6(GE_context* ac, T0* a1);
/* Creation of agent #7 in feature [detachable] ET_ECF_SYSTEM.preparse_recursive */
extern T0* T55f168p1ac7(GE_context* ac);
/* Creation of agent #8 in feature [detachable] ET_ECF_SYSTEM.preparse_recursive */
extern T0* T55f168p1ac8(GE_context* ac);
/* [detachable] ET_ECF_LIBRARY.import_classes */
extern void T182f192(GE_context* ac, T0* C);
/* Creation of agent #1 in feature [detachable] ET_ECF_LIBRARY.import_classes */
extern T0* T182f192ac1(GE_context* ac);
/* Creation of agent #2 in feature [detachable] ET_ECF_LIBRARY.import_classes */
extern T0* T182f192ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature [detachable] ET_ECF_LIBRARY.import_classes */
extern T0* T182f192ac3(GE_context* ac, T0* a1);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T822f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.export_classes */
extern void T208f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].forth */
extern void T591f12(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].cursor_forth */
extern void T220f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].add_traversing_cursor */
extern void T220f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].set_next_cursor */
extern void T591f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].set_position */
extern void T591f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].remove_traversing_cursor */
extern void T220f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].set_after */
extern void T591f14(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].clashes_item */
extern T6 T220f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_MASTER_CLASS.add_last_imported_class */
extern void T552f85(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.update_intrinsic_class */
extern void T552f55(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.set_intrinsic_class */
extern void T552f56(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T552f56ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature [detachable] ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T552f56ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature [detachable] ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T552f56ac3(GE_context* ac, T0* a1);
extern T1 T552f56ot1(T0* a1, T0** a2);
/* [detachable] ET_MASTER_CLASS.set_marked */
extern void T552f51(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_CLASS.set_marked */
extern void T72f282(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_MASTER_CLASS.is_marked */
extern T1 T552f22(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].do_all */
extern void T1336f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.unmark_overridden */
extern void T552f57(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.remove_overriding_class */
extern void T552f64(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].remove_first */
extern void T1336f19(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].remove */
extern void T1336f17(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_MASTER_CLASS].keep_head */
extern void T593f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_MASTER_CLASS].set_count */
extern void T593f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].move_left */
extern void T1336f26(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].move_cursors_left */
extern void T1336f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS].set_position */
extern void T1657f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].remove_last */
extern void T1336f24(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].move_last_cursors_after */
extern void T1336f31(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS].set_next_cursor */
extern void T1657f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS].set_after */
extern void T1657f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].first */
extern T0* T1336f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].delete */
extern void T1336f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].move_all_cursors_after */
extern void T1336f27(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_unknown */
extern T1 T72f85(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.mark_overridden */
extern void T552f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.add_last_overriding_class */
extern void T552f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.is_override */
extern T1 T552f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.is_override */
extern T1 T72f168(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.is_in_override_group */
extern T1 T72f170(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].force_last */
extern void T1336f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS].force */
extern void T592f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_MASTER_CLASS].fill_with */
extern void T593f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_MASTER_CLASS].extend */
extern void T593f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].resize */
extern void T1336f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS].aliased_resized_area */
extern T0* T592f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_MASTER_CLASS].aliased_resized_area */
extern T0* T593f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].new_capacity */
extern T6 T1336f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].extendible */
extern T1 T1336f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].make */
extern T0* T1336c14(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].set_internal_cursor */
extern void T1336f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].new_cursor */
extern T0* T1336f8(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS].make */
extern T0* T1657c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS].make */
extern T0* T592f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_MASTER_CLASS].make_empty */
extern T0* T593c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS].default_create */
extern T0* T592c3(GE_context* ac);
/* [detachable] ET_TOKEN_CONSTANTS.empty_master_classes */
extern T0* T71f278(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.tokens */
extern T0* T552f21(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.has_imported_class */
extern T1 T552f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].has */
extern T1 T1336f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item */
extern T0* T211f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].key */
extern T0* T591f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].cursor_key */
extern T0* T220f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].key_storage_item */
extern T0* T220f31(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_MASTER_CLASS.is_mapped */
extern T1 T552f48(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].item */
extern T0* T591f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].cursor_item */
extern T0* T220f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].item_storage_item */
extern T0* T220f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].after */
extern T1 T591f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].start */
extern void T591f11(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].cursor_start */
extern void T220f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].cursor_off */
extern T1 T220f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].off */
extern T1 T591f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].is_empty */
extern T1 T220f35(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].new_cursor */
extern T0* T220f28(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make */
extern T0* T591c10(GE_context* ac, T0* a1);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_LIBRARY]].set_rout_disp_final */
extern void T186f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] ET_ECF_ADAPTED_LIBRARY.export_classes */
extern void T202f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.remove_unknown_imported_classes */
extern void T552f60(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.remove_imported_class */
extern void T552f75(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.is_declared_locally */
extern T1 T552f25(GE_context* ac, T0* C);
/* [detachable] ET_ADAPTED_DOTNET_ASSEMBLIES.do_adapted */
extern void T205f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].do_all */
extern void T576f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ADAPTED_LIBRARIES.do_adapted */
extern void T183f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].do_all */
extern void T560f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.import_classes */
extern void T809f167(GE_context* ac, T0* C);
/* Creation of agent #1 in feature [detachable] ET_LIBRARY.import_classes */
extern T0* T809f167ac1(GE_context* ac);
/* Creation of agent #2 in feature [detachable] ET_LIBRARY.import_classes */
extern T0* T809f167ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature [detachable] ET_LIBRARY.import_classes */
extern T0* T809f167ac3(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.import_classes */
extern void T206f167(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.import_kernel_class */
extern void T206f179(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.master_class */
extern T0* T206f89(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].force_last_new */
extern void T220f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].key_storage_put */
extern void T220f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].item_storage_put */
extern void T220f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].slots_put */
extern void T220f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].clashes_put */
extern void T220f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].slots_item */
extern T6 T220f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].hash_position */
extern T6 T220f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].resize */
extern void T220f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].clashes_resize */
extern void T220f60(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].special_integer_ */
extern T0* T220f32(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].key_storage_resize */
extern void T220f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].item_storage_resize */
extern void T220f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].slots_resize */
extern void T220f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].new_modulus */
extern T6 T220f29(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].new_capacity */
extern T6 T220f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].unset_found_item */
extern void T220f46(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.make */
extern T0* T552c50(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.empty_classes */
extern T0* T71f277(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].make */
extern T0* T445c15(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].set_internal_cursor */
extern void T445f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].new_cursor */
extern T0* T445f12(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].make */
extern T0* T1293c9(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLASS].make */
extern T0* T1292f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_CLASS].make_empty */
extern T0* T1291c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLASS].default_create */
extern T0* T1292c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].found_item */
extern T0* T220f21(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].found */
extern T1 T220f33(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].search */
extern void T220f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].search_position */
extern void T220f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.tokens */
extern T0* T206f94(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T206f178(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.native_array_class_name */
extern T0* T71f1520(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.import_classes */
extern void T578f167(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.import_kernel_class */
extern void T578f179(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.master_class */
extern T0* T578f89(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.tokens */
extern T0* T578f93(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T578f178(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.preparse */
extern void T182f191(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.preparse */
extern void T182f191p1(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_LIBRARY.preparse */
extern T0* T182f191p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature [detachable] ET_ECF_LIBRARY.preparse */
extern T0* T182f191p1ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature [detachable] ET_ECF_LIBRARY.preparse */
extern T0* T182f191p1ac3(GE_context* ac);
/* Creation of agent #4 in feature [detachable] ET_ECF_LIBRARY.preparse */
extern T0* T182f191p1ac4(GE_context* ac, T0* a1);
/* [detachable] ET_MASTER_CLASS.remove_unknown_local_classes */
extern void T552f59(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.remove_local_ignored_class */
extern void T552f74(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].remove_first */
extern void T445f26(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].first */
extern T0* T445f11(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].is_empty */
extern T1 T445f10(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].delete */
extern void T445f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] SPECIAL [[attached] ET_CLASS].keep_head */
extern void T1291f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_CLASS].set_count */
extern void T1291f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].move_all_cursors_after */
extern void T445f21(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].set_next_cursor */
extern void T1293f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].set_after */
extern void T1293f10(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.remove_local_non_override_class */
extern void T552f73(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.remove_local_override_class */
extern void T552f72(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].remove */
extern void T445f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].move_left */
extern void T445f32(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].move_cursors_left */
extern void T445f31(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].set_position */
extern void T1293f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].remove_last */
extern void T445f30(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].move_last_cursors_after */
extern void T445f34(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.reset_local_modified_classes */
extern void T552f58(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T552f58ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature [detachable] ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T552f58ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature [detachable] ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T552f58ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature [detachable] ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T552f58ac4(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #5 in feature [detachable] ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T552f58ac5(GE_context* ac);
/* [detachable] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]].set_rout_disp_final */
extern void T827f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] ET_MASTER_CLASS.reset_local_modified_class */
extern void T552f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.reset_parsed */
extern void T72f289(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.reset_after_preparsed */
extern void T72f273(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.reset_ancestors_built */
extern void T72f297(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.reset_features_flattened */
extern void T72f296(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.reset_interface_checked */
extern void T72f295(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.reset_implementation_checked */
extern void T72f294(GE_context* ac, T0* C);
/* [detachable] KL_UNIX_FILE_SYSTEM.file_time_stamp */
extern T6 T123f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.file_time_stamp */
extern T6 T122f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.file_system */
extern T0* T552f24(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.unix_file_system */
extern T0* T552f32(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.windows_file_system */
extern T0* T552f31(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.operating_system */
extern T0* T552f30(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.reset */
extern void T72f288(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.reset_preparsed */
extern void T72f275(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_in_cluster */
extern T1 T72f158(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.reset_after_parsed_and_errors */
extern void T72f283(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.reset_after_parsed */
extern void T72f284(GE_context* ac, T0* C);
/* detachable ET_CONVERT_FEATURE_LIST.reset */
extern void T1056f10(GE_context* ac, T0* C);
/* detachable ET_CONVERT_PROCEDURE.reset */
extern void T1435f10(GE_context* ac, T0* C);
/* [detachable] ET_BRACED_TYPE_LIST.reset */
extern void T1335f12(GE_context* ac, T0* C);
/* detachable ET_CONVERT_FUNCTION.reset */
extern void T1434f9(GE_context* ac, T0* C);
/* detachable ET_CONVERT_PROCEDURE.convert_feature */
extern T0* T1435f6(GE_context* ac, T0* C);
/* detachable ET_CONVERT_FUNCTION.convert_feature */
extern T0* T1434f5(GE_context* ac, T0* C);
/* detachable ET_CREATOR_LIST.reset */
extern void T1067f11(GE_context* ac, T0* C);
/* detachable ET_CREATOR.reset */
extern void T1064f19(GE_context* ac, T0* C);
/* detachable ET_INVARIANTS.reset */
extern void T1155f34(GE_context* ac, T0* C);
/* detachable ET_INVARIANTS.reset_validity_checked */
extern void T1155f31(GE_context* ac, T0* C);
/* detachable ET_INVARIANTS.reset */
extern void T1155f34p1(GE_context* ac, T0* C);
/* detachable ET_PARENT_CLAUSE_LIST.reset */
extern void T1193f8(GE_context* ac, T0* C);
/* [detachable] ET_PARENT_LIST.reset */
extern void T550f14(GE_context* ac, T0* C);
/* [detachable] ET_PARENT.reset */
extern void T549f12(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_FEATURE_NAME_LIST.reset */
extern void T556f10(GE_context* ac, T0* C);
/* detachable ET_EXPORT_LIST.reset */
extern void T555f9(GE_context* ac, T0* C);
/* detachable ET_FEATURE_EXPORT.reset */
extern void T1105f13(GE_context* ac, T0* C);
/* detachable ET_ALL_EXPORT.reset */
extern void T1432f8(GE_context* ac, T0* C);
/* detachable ET_RENAME_LIST.reset */
extern void T554f10(GE_context* ac, T0* C);
/* [detachable] ET_RENAME.reset */
extern void T1282f7(GE_context* ac, T0* C);
/* [detachable] ET_RENAME.rename_pair */
extern T0* T1282f5(GE_context* ac, T0* C);
/* [detachable] ET_PARENT.parent */
extern T0* T549f10(GE_context* ac, T0* C);
/* [detachable] ET_PROCEDURE_LIST.reset */
extern void T253f11(GE_context* ac, T0* C);
/* [detachable] ET_QUERY_LIST.reset */
extern void T252f11(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.local_ignored_classes_do_if */
extern void T552f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].do_if */
extern void T445f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_MASTER_CLASS.local_ignored_classes_do_all */
extern void T552f70(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].do_all */
extern void T445f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.local_non_override_classes_do_all */
extern void T552f69(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.local_override_classes_do_all */
extern void T552f68(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.process */
extern void T759f91(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_NULL_PROCESSOR.process_cluster */
extern void T447f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.process_cluster */
extern void T437f177(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.preparse_cluster */
extern void T437f178(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T437f178ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature [detachable] ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T437f178ac2(GE_context* ac, T0* a1);
/* [detachable] ET_CLASS.is_in_group */
extern T1 T72f250(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.preparse_clusters */
extern void T437f182(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].remove */
extern void T1503f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_CLUSTER].keep_head */
extern void T1782f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_CLUSTER].set_count */
extern void T1782f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].move_left */
extern void T1503f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].move_cursors_left */
extern void T1503f17(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER].set_position */
extern void T1784f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].remove_last */
extern void T1503f16(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].move_last_cursors_after */
extern void T1503f19(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER].set_next_cursor */
extern void T1784f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER].set_after */
extern void T1784f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].item */
extern T0* T1503f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PREPARSER.build_dependant_constraint */
extern void T437f181(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.set_dependant_constraint */
extern void T759f97(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTERS.set_dependant_constraint */
extern void T744f14(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CLUSTER_DEPENDENCE_CONSTRAINT.make */
extern T0* T1684c17(GE_context* ac, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].set_key_equality_tester */
extern void T1965f35(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_equality_tester */
extern T0* T1684f11(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_map */
extern T0* T1965c34(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_with_equality_testers */
extern void T1965f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_sparse_container */
extern void T1965f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].set_internal_cursor */
extern void T1965f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].new_cursor */
extern T0* T1965f30(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].make */
extern T0* T1966c9(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].unset_found_item */
extern void T1965f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_slots */
extern void T1965f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].new_modulus */
extern T6 T1965f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_clashes */
extern void T1965f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_key_storage */
extern void T1965f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_item_storage */
extern void T1965f51(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_WILDCARD].make */
extern T0* T2007f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] LX_WILDCARD].make_empty */
extern T0* T2004c4(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_WILDCARD].default_create */
extern T0* T2007c2(GE_context* ac);
/* detachable ET_CLUSTER_DEPENDENCE_CONSTRAINT.make_with_pathnames */
extern T0* T1684c16(GE_context* ac, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].put_last */
extern void T1965f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].key_storage_put */
extern void T1965f44(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].slots_put */
extern void T1965f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].clashes_put */
extern void T1965f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].slots_item */
extern T6 T1965f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].compress */
extern void T1965f41(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].hash_position */
extern T6 T1965f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].slots_wipe_out */
extern void T1965f50(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].clashes_wipe_out */
extern void T1965f49(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].key_storage_keep_head */
extern void T1965f48(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].item_storage_keep_head */
extern void T1965f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] LX_WILDCARD].keep_head */
extern void T2004f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] LX_WILDCARD].set_count */
extern void T2004f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].move_all_cursors */
extern void T1965f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].set_position */
extern void T1966f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].key_storage_item */
extern T0* T1965f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].item_storage_item */
extern T0* T1965f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].clashes_item */
extern T6 T1965f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].item_storage_put */
extern void T1965f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_WILDCARD].force */
extern void T2007f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] LX_WILDCARD].fill_with */
extern void T2004f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] LX_WILDCARD].extend */
extern void T2004f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].search_position */
extern void T1965f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_DFA_WILDCARD.compile */
extern void T1993f17(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [detachable] LX_DFA_WILDCARD.compile */
extern T0* T1993c17(GE_context* ac, T0* a1, T1 a2);
/* [detachable] LX_FULL_DFA.make */
extern T0* T2021c37(GE_context* ac, T0* a1);
/* [detachable] LX_FULL_DFA.build */
extern void T2021f40(GE_context* ac, T0* C);
/* [detachable] LX_FULL_DFA.build_accept_table */
extern void T2021f46(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_RULE].first */
extern T0* T2033f6(GE_context* ac, T0* C);
/* [detachable] LX_FULL_DFA.build_nxt_table */
extern void T2021f45(GE_context* ac, T0* C);
/* [detachable] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE].target */
extern T0* T2064f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ARRAY [detachable LX_DFA_STATE].item */
extern T0* T2100f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_DFA_STATE.is_accepting */
extern T1 T2056f10(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_RULE].is_empty */
extern T1 T2033f11(GE_context* ac, T0* C);
/* [detachable] LX_FULL_DFA.build_transitions */
extern void T2021f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE].set_target */
extern void T2064f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ARRAY [detachable LX_DFA_STATE].put */
extern void T2100f7(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable LX_SYMBOL_PARTITIONS.previous_symbol */
extern T6 T2059f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]].item */
extern T0* T2082f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_FULL_DFA.new_state */
extern T0* T2021f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_DFA_STATE.set_id */
extern void T2056f17(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_DFA_STATE].put_last */
extern void T2058f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE].force */
extern void T2097f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] LX_DFA_STATE].fill_with */
extern void T2096f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] LX_DFA_STATE].extend */
extern void T2096f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_DFA_STATE.is_equal */
extern T1 T2056f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].is_equal */
extern T1 T2057f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].any_ */
extern T0* T2057f17(GE_context* ac, T0* C);
/* [detachable] LX_DFA_STATE.any_ */
extern T0* T2056f14(GE_context* ac, T0* C);
/* [detachable] LX_DFA_STATE.new_state */
extern T0* T2056f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_DFA_STATE.make */
extern T0* T2056c16(GE_context* ac, T0* a1, T6 a2, T6 a3);
extern T1 T2056f16ot1(T0* a1, T0** a2);
/* detachable LX_RULE.set_useful */
extern void T2044f22(GE_context* ac, T0* C, T1 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_RULE].sort */
extern void T2033f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BUBBLE_SORTER [[attached] LX_RULE].sort */
extern void T2089f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BUBBLE_SORTER [[attached] LX_RULE].sort_with_comparator */
extern void T2089f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_BUBBLE_SORTER [[attached] LX_RULE].subsort_with_comparator */
extern void T2089f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_RULE].replace */
extern void T2033f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE].less_than */
extern T1 T2109f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE].detachable_less_than */
extern T1 T2109f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE].attached_less_than */
extern T1 T2109f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable LX_RULE.is_less */
extern T1 T2044f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_RULE].item */
extern T0* T2033f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_DFA_STATE.rule_sorter */
extern T0* T2056f7(GE_context* ac, T0* C);
/* [detachable] DS_BUBBLE_SORTER [[attached] LX_RULE].make */
extern T0* T2089c2(GE_context* ac, T0* a1);
/* [detachable] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE].make */
extern T0* T2109c4(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].sort */
extern void T2057f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE].sort */
extern void T2087f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE].sort_with_comparator */
extern void T2087f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE].subsort_with_comparator */
extern void T2087f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].replace */
extern void T2057f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE].less_than */
extern T1 T2112f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE].detachable_less_than */
extern T1 T2112f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE].attached_less_than */
extern T1 T2112f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] LX_NFA_STATE.is_less */
extern T1 T2067f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_DFA_STATE.bubble_sorter */
extern T0* T2056f8(GE_context* ac, T0* C);
/* [detachable] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE].make */
extern T0* T2087c2(GE_context* ac, T0* a1);
/* [detachable] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE].make */
extern T0* T2112c4(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].last */
extern T0* T2057f9(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].is_empty */
extern T1 T2057f8(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_RULE].force_last */
extern void T2033f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_RULE].force */
extern void T2069f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] LX_RULE].fill_with */
extern void T2055f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] LX_RULE].extend */
extern void T2055f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_RULE].resize */
extern void T2033f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_RULE].aliased_resized_area */
extern T0* T2069f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] LX_RULE].aliased_resized_area */
extern T0* T2055f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_RULE].new_capacity */
extern T6 T2033f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_RULE].extendible */
extern T1 T2033f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_NFA_STATE.is_accepting_head */
extern T1 T2067f6(GE_context* ac, T0* C);
/* [detachable] LX_NFA_STATE.has_transition */
extern T1 T2067f8(GE_context* ac, T0* C);
/* [detachable] LX_NFA_STATE.is_accepting */
extern T1 T2067f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].has */
extern T1 T2057f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].force_last */
extern void T2057f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE].force */
extern void T2093f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] LX_NFA_STATE].fill_with */
extern void T2091f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] LX_NFA_STATE].extend */
extern void T2091f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].resize */
extern void T2057f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE].aliased_resized_area */
extern T0* T2093f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] LX_NFA_STATE].aliased_resized_area */
extern T0* T2091f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].new_capacity */
extern T6 T2057f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].extendible */
extern T1 T2057f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_RULE].make */
extern T0* T2033c12(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_RULE].set_internal_cursor */
extern void T2033f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_RULE].new_cursor */
extern T0* T2033f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_RULE].make */
extern T0* T2070c4(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_RULE].make */
extern T0* T2069f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] LX_RULE].make_empty */
extern void T2055f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] LX_RULE].make_empty */
extern T0* T2055c7(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_RULE].default_create */
extern T0* T2069c3(GE_context* ac);
/* [detachable] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE].make */
extern T0* T2064c7(GE_context* ac, T6 a1, T6 a2);
/* [detachable] KL_ARRAY_ROUTINES [detachable LX_DFA_STATE].default_create */
extern T0* T2102c1(GE_context* ac);
/* [detachable] ARRAY [detachable LX_DFA_STATE].make_filled */
extern T0* T2100c5(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [detachable] ARRAY [detachable LX_DFA_STATE].make_filled_area */
extern void T2100f6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable LX_DFA_STATE].make_filled */
extern T0* T2101c4(GE_context* ac, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable LX_DFA_STATE].fill_with */
extern void T2101f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable LX_DFA_STATE].extend */
extern void T2101f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] SPECIAL [detachable LX_DFA_STATE].make_empty */
extern void T2101f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_DFA_STATE.maximum_symbol */
extern T6 T2056f13(GE_context* ac, T0* C);
/* [detachable] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE].upper */
extern T6 T2064f5(GE_context* ac, T0* C);
/* [detachable] LX_DFA_STATE.minimum_symbol */
extern T6 T2056f12(GE_context* ac, T0* C);
/* [detachable] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE].lower */
extern T6 T2064f4(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].put_last */
extern void T2057f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].item */
extern T0* T2057f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].make */
extern T0* T2057c19(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].set_internal_cursor */
extern void T2057f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].new_cursor */
extern T0* T2057f10(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].make */
extern T0* T2094c9(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE].make */
extern T0* T2093f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] LX_NFA_STATE].make_empty */
extern T0* T2091c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE].default_create */
extern T0* T2093c3(GE_context* ac);
/* detachable LX_SYMBOL_PARTITIONS.is_representative */
extern T1 T2059f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_DFA_STATE.partition */
extern void T2056f18(GE_context* ac, T0* C, T0* a1);
/* detachable LX_SYMBOL_PARTITIONS.initialize */
extern void T2059f10(GE_context* ac, T0* C);
/* [detachable] ARRAY [[attached] BOOLEAN].clear_all */
extern void T669f8(GE_context* ac, T0* C);
/* detachable LX_SYMBOL_PARTITIONS.initialize */
extern void T2059f10p1(GE_context* ac, T0* C);
/* [detachable] DS_BILINKABLE [[attached] INTEGER_32].put_left */
extern void T2083f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKABLE [[attached] INTEGER_32].attach_right */
extern void T2083f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKABLE [[attached] INTEGER_32].put */
extern void T2083f5(GE_context* ac, T0* C, T6 a1);
/* detachable LX_SYMBOL_PARTITIONS.lower */
extern T6 T2059f7(GE_context* ac, T0* C);
/* detachable LX_SYMBOL_PARTITIONS.upper */
extern T6 T2059f6(GE_context* ac, T0* C);
/* [detachable] LX_FULL_DFA.resize */
extern void T2021f49(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_DFA_STATE].resize */
extern void T2058f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE].aliased_resized_area */
extern T0* T2097f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] LX_DFA_STATE].aliased_resized_area */
extern T0* T2096f4(GE_context* ac, T0* C, T6 a1);
/* detachable LX_SYMBOL_PARTITIONS.capacity */
extern T6 T2059f5(GE_context* ac, T0* C);
/* [detachable] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]].count */
extern T6 T2082f5(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_DFA_STATE].item */
extern T0* T2058f7(GE_context* ac, T0* C, T6 a1);
/* detachable LX_SYMBOL_PARTITIONS.make */
extern T0* T2059c9(GE_context* ac, T6 a1, T6 a2);
/* detachable LX_SYMBOL_PARTITIONS.make */
extern void T2059f9p1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]].put */
extern void T2082f7(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]].make_filled */
extern T0* T2082c6(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [detachable] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]].make_filled_area */
extern void T2082f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]].make_filled */
extern T0* T2084c4(GE_context* ac, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]].fill_with */
extern void T2084f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]].extend */
extern void T2084f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]].make_empty */
extern void T2084f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_BILINKABLE [[attached] INTEGER_32].make */
extern T0* T2083c4(GE_context* ac, T6 a1);
/* [detachable] LX_FULL_DFA.put_eob_state */
extern void T2021f39(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_RULE].force_first */
extern void T2033f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_RULE].put */
extern void T2033f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_RULE].move_cursors_right */
extern void T2033f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_RULE].set_position */
extern void T2070f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_RULE].move_right */
extern void T2033f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_RULE].put_last */
extern void T2033f19(GE_context* ac, T0* C, T0* a1);
/* detachable LX_RULE.make_default */
extern T0* T2044c14(GE_context* ac, T6 a1);
/* detachable LX_RULE.dummy_action */
extern T0* T2044f11(GE_context* ac, T0* C);
/* [detachable] LX_ACTION.make */
extern T0* T2086c2(GE_context* ac, T0* a1);
/* detachable LX_RULE.dummy_pattern */
extern T0* T2044f12(GE_context* ac, T0* C);
/* [detachable] LX_NFA.make_epsilon */
extern T0* T2041c12(GE_context* ac, T1 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].put_first */
extern void T2057f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].put */
extern void T2057f27(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].move_cursors_right */
extern void T2057f31(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].set_position */
extern void T2094f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].move_right */
extern void T2057f30(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] LX_NFA_STATE.set_transition */
extern void T2067f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_EPSILON_TRANSITION [[attached] LX_NFA_STATE].make */
extern T0* T2079c3(GE_context* ac, T0* a1);
/* [detachable] LX_NFA_STATE.make */
extern T0* T2067c10(GE_context* ac, T1 a1);
/* [detachable] LX_FULL_DFA.initialize */
extern void T2021f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_FULL_DFA.initialize_dfa */
extern void T2021f43(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] LX_FULL_DFA.put_start_condition */
extern void T2021f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_NFA.start_state */
extern T0* T2041f4(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].first */
extern T0* T2057f14(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA].item */
extern T0* T2065f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_START_CONDITIONS.item */
extern T0* T2034f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_FULL_DFA.set_nfa_state_ids */
extern void T2021f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_NFA_STATE.set_id */
extern void T2067f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].force */
extern void T2066f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].key_storage_put */
extern void T2066f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].slots_put */
extern void T2066f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].clashes_put */
extern void T2066f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].slots_item */
extern T6 T2066f29(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].clashes_item */
extern T6 T2066f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].hash_position */
extern T6 T2066f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].resize */
extern void T2066f40(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].clashes_resize */
extern void T2066f48(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].special_integer_ */
extern T0* T2066f31(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].key_storage_resize */
extern void T2066f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].item_storage_resize */
extern void T2066f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_NFA].aliased_resized_area */
extern T0* T2040f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] LX_NFA].aliased_resized_area */
extern T0* T2042f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].key_storage_item */
extern T6 T2066f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].slots_resize */
extern void T2066f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].new_modulus */
extern T6 T2066f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].new_capacity */
extern T6 T2066f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].item_storage_put */
extern void T2066f39(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_NFA].force */
extern void T2040f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] LX_NFA].fill_with */
extern void T2042f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] LX_NFA].extend */
extern void T2042f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].search_position */
extern void T2066f36(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [[attached] INTEGER_32].test */
extern T1 T617f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].unset_found_item */
extern void T2066f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].item */
extern T0* T2066f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].item_storage_item */
extern T0* T2066f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].has */
extern T1 T2066f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make */
extern T0* T2066c34(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make_with_equality_testers */
extern void T2066f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make_sparse_container */
extern void T2066f44(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].set_internal_cursor */
extern void T2066f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].new_cursor */
extern T0* T2066f30(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_NFA, [attached] INTEGER_32].make */
extern T0* T2105c4(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make_slots */
extern void T2066f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make_clashes */
extern void T2066f51(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make_key_storage */
extern void T2066f50(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make_item_storage */
extern void T2066f49(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_NFA].make */
extern T0* T2040f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] LX_NFA].make_empty */
extern T0* T2042c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_NFA].default_create */
extern T0* T2040c3(GE_context* ac);
/* detachable KL_EQUALITY_TESTER [[attached] INTEGER_32].default_create */
extern T0* T617c2(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_DFA_STATE].make */
extern T0* T2058c8(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_DFA_STATE].set_internal_cursor */
extern void T2058f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_DFA_STATE].new_cursor */
extern T0* T2058f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_DFA_STATE].make */
extern T0* T2098c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE].make */
extern T0* T2097f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] LX_DFA_STATE].make_empty */
extern T0* T2096c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE].default_create */
extern T0* T2097c3(GE_context* ac);
/* detachable LX_EQUIVALENCE_CLASSES.to_array */
extern T0* T2043f6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable LX_EQUIVALENCE_CLASSES.lower */
extern T6 T2043f5(GE_context* ac, T0* C);
/* detachable LX_EQUIVALENCE_CLASSES.upper */
extern T6 T2043f4(GE_context* ac, T0* C);
/* detachable LX_EQUIVALENCE_CLASSES.built */
extern T1 T2043f3(GE_context* ac, T0* C);
/* [detachable] LX_FULL_DFA.build_eof_rules */
extern void T2021f42(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ARRAY [detachable LX_RULE].put */
extern void T2061f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ARRAY [detachable LX_RULE].make_filled */
extern T0* T2061c4(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [detachable] ARRAY [detachable LX_RULE].make_filled_area */
extern void T2061f6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable LX_RULE].make_filled */
extern T0* T2062c3(GE_context* ac, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable LX_RULE].fill_with */
extern void T2062f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable LX_RULE].extend */
extern void T2062f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] SPECIAL [detachable LX_RULE].make_empty */
extern void T2062f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_FULL_DFA.build_rules */
extern void T2021f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] ARRAY [[attached] LX_RULE].put */
extern void T2054f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ARRAY [[attached] LX_RULE].make_filled */
extern T0* T2054c4(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [detachable] ARRAY [[attached] LX_RULE].make_filled_area */
extern void T2054f6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] LX_RULE].make_filled */
extern T0* T2055c5(GE_context* ac, T0* a1, T6 a2);
/* [detachable] KL_ARRAY_ROUTINES [[attached] LX_RULE].make_empty_with_lower */
extern T0* T2060f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] ARRAY [[attached] LX_RULE].make_from_array */
extern T0* T2054c8(GE_context* ac, T0* a1);
/* [detachable] ARRAY [[attached] LX_RULE].set_area */
extern void T2054f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_ARRAY [[attached] LX_RULE].new_rebase */
extern void T2099f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_ARRAY [[attached] LX_RULE].make_empty */
extern T0* T2099c4(GE_context* ac);
/* [detachable] KL_ARRAY [[attached] LX_RULE].make_empty_area */
extern void T2099f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ARRAY [[attached] LX_RULE].make_empty */
extern T0* T2054c7(GE_context* ac);
/* [detachable] ARRAY [[attached] LX_RULE].make_empty_area */
extern void T2054f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_ARRAY_ROUTINES [[attached] LX_RULE].default_create */
extern T0* T2060c2(GE_context* ac);
/* [detachable] LX_START_CONDITIONS.names */
extern T0* T2034f7(GE_context* ac, T0* C);
/* [detachable] LX_START_CONDITIONS.first */
extern T0* T2034f6(GE_context* ac, T0* C);
/* [detachable] KL_ARRAY_ROUTINES [[attached] STRING_8].make_empty_with_lower */
extern T0* T2071f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] ARRAY [[attached] STRING_8].make_from_array */
extern T0* T323c11(GE_context* ac, T0* a1);
/* [detachable] ARRAY [[attached] STRING_8].set_area */
extern void T323f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_ARRAY [[attached] STRING_8].new_rebase */
extern void T2115f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_ARRAY [[attached] STRING_8].make_empty */
extern T0* T2115c4(GE_context* ac);
/* [detachable] KL_ARRAY [[attached] STRING_8].make_empty_area */
extern void T2115f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ARRAY [[attached] STRING_8].make_empty */
extern T0* T323c10(GE_context* ac);
/* [detachable] ARRAY [[attached] STRING_8].make_empty_area */
extern void T323f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_START_CONDITIONS.string_array_routines */
extern T0* T2034f11(GE_context* ac, T0* C);
/* [detachable] KL_ARRAY_ROUTINES [[attached] STRING_8].default_create */
extern T0* T2071c2(GE_context* ac);
/* [detachable] LX_WILDCARD_PARSER.parse_string */
extern void T2019f222(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_WILDCARD_PARSER.parse */
extern void T2019f226(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yy_pop_last_value */
extern void T2019f239(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_WILDCARD_PARSER.yy_push_error_value */
extern void T2019f238(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yy_do_action */
extern void T2019f237(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_WILDCARD_PARSER.append_character_to_string */
extern T0* T2019f172(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] LX_WILDCARD_PARSER.new_symbol_nfa */
extern T0* T2019f217(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_NFA.make_symbol */
extern T0* T2041c13(GE_context* ac, T6 a1, T1 a2);
/* [detachable] LX_SYMBOL_TRANSITION [[attached] LX_NFA_STATE].make */
extern T0* T2081c4(GE_context* ac, T6 a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].force_new */
extern void T2037f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].key_storage_put */
extern void T2037f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].item_storage_put */
extern void T2037f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].slots_put */
extern void T2037f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].clashes_put */
extern void T2037f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].slots_item */
extern T6 T2037f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].hash_position */
extern T6 T2037f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].clashes_item */
extern T6 T2037f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].resize */
extern void T2037f49(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].clashes_resize */
extern void T2037f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].special_integer_ */
extern T0* T2037f34(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].key_storage_resize */
extern void T2037f56(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].item_storage_resize */
extern void T2037f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].key_storage_item */
extern T0* T2037f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].slots_resize */
extern void T2037f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].new_modulus */
extern T6 T2037f29(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].new_capacity */
extern T6 T2037f30(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].unset_found_item */
extern void T2037f47(GE_context* ac, T0* C);
/* detachable LX_EQUIVALENCE_CLASSES.add */
extern void T2043f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKABLE [[attached] INTEGER_32].forget_right */
extern void T2083f7(GE_context* ac, T0* C);
/* [detachable] DS_BILINKABLE [[attached] INTEGER_32].forget_left */
extern void T2083f8(GE_context* ac, T0* C);
/* [detachable] DS_BILINKABLE [[attached] INTEGER_32].put_right */
extern void T2083f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKABLE [[attached] INTEGER_32].attach_left */
extern void T2083f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_SYMBOL_CLASS.item */
extern T6 T2036f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_SYMBOL_CLASS.put */
extern void T2036f19(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_SYMBOL_CLASS.force_last */
extern void T2036f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_SYMBOL_CLASS.resize */
extern void T2036f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_SYMBOL_CLASS.new_capacity */
extern T6 T2036f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_SYMBOL_CLASS.extendible */
extern T1 T2036f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_SYMBOL_CLASS.last */
extern T6 T2036f12(GE_context* ac, T0* C);
/* [detachable] LX_SYMBOL_CLASS.is_empty */
extern T1 T2036f10(GE_context* ac, T0* C);
/* [detachable] LX_SYMBOL_CLASS.has */
extern T1 T2036f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_SYMBOL_CLASS.arrayed_has */
extern T1 T2036f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_SYMBOL_CLASS.make */
extern T0* T2036c18(GE_context* ac, T6 a1);
/* [detachable] LX_SYMBOL_CLASS.set_internal_cursor */
extern void T2036f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_SYMBOL_CLASS.new_cursor */
extern T0* T2036f16(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].found_item */
extern T0* T2037f24(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].item_storage_item */
extern T0* T2037f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].found */
extern T1 T2037f23(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].search */
extern void T2037f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].search_position */
extern void T2037f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_WILDCARD_PARSER.new_epsilon_nfa */
extern T0* T2019f171(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.append_character_set_to_character_class */
extern T0* T2019f170(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* [detachable] LX_WILDCARD_PARSER.report_negative_range_in_character_class_error */
extern void T2019f272(GE_context* ac, T0* C);
/* [detachable] UT_ERROR_HANDLER.report_error */
extern void T133f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_ERROR_HANDLER.report_error_message */
extern void T133f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_ERROR_HANDLER.message */
extern T0* T133f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.make */
extern T0* T2068c8(GE_context* ac, T0* a1, T6 a2);
/* [detachable] LX_WILDCARD_PARSER.filename */
extern T0* T2019f190(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T2038f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T2039f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_WILDCARD_PARSER.append_character_to_character_class */
extern T0* T2019f169(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] LX_WILDCARD_PARSER.new_character_class */
extern T0* T2019f168(GE_context* ac, T0* C);
/* [detachable] LX_SYMBOL_CLASS.set_negated */
extern void T2036f20(GE_context* ac, T0* C, T1 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS].force */
extern void T2038f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] LX_SYMBOL_CLASS].fill_with */
extern void T2039f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] LX_SYMBOL_CLASS].extend */
extern void T2039f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].force */
extern void T2037f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] LX_WILDCARD_PARSER.new_nfa_from_character_class */
extern T0* T2019f167(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_SYMBOL_CLASS.sort */
extern void T2036f24(GE_context* ac, T0* C);
/* [detachable] LX_SYMBOL_CLASS.arrayed_sort */
extern void T2036f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_SHELL_SORTER [[attached] INTEGER_32].sort */
extern void T2108f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_SHELL_SORTER [[attached] INTEGER_32].sort_with_comparator */
extern void T2108f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_SHELL_SORTER [[attached] INTEGER_32].subsort_with_comparator */
extern void T2108f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [detachable] LX_SYMBOL_CLASS.replace */
extern void T2036f27(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] LX_SYMBOL_CLASS.sorter */
extern T0* T2036f17(GE_context* ac, T0* C);
/* [detachable] DS_SHELL_SORTER [[attached] INTEGER_32].make */
extern T0* T2108c2(GE_context* ac, T0* a1);
/* [detachable] LX_WILDCARD_PARSER.new_symbol_class_nfa */
extern T0* T2019f165(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_NFA.make_symbol_class */
extern T0* T2041c6(GE_context* ac, T0* a1, T1 a2);
/* [detachable] LX_SYMBOL_CLASS_TRANSITION [[attached] LX_NFA_STATE].make */
extern T0* T2077c4(GE_context* ac, T0* a1, T0* a2);
/* [detachable] LX_WILDCARD_PARSER.question_character_class */
extern T0* T2019f164(GE_context* ac, T0* C);
/* [detachable] LX_NFA.build_optional */
extern void T2041f11(GE_context* ac, T0* C);
/* [detachable] LX_NFA_STATE.set_epsilon_transition */
extern void T2067f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_NFA.final_state */
extern T0* T2041f5(GE_context* ac, T0* C);
/* [detachable] LX_NFA.build_positive_closure */
extern void T2041f10(GE_context* ac, T0* C);
/* [detachable] LX_NFA.build_closure */
extern void T2041f9(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.new_nfa_from_character */
extern T0* T2019f163(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_NFA.build_concatenation */
extern void T2041f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].append_last */
extern void T2057f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].extend_last */
extern void T2057f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].forth */
extern void T2094f12(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].cursor_forth */
extern void T2057f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].add_traversing_cursor */
extern void T2057f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].set_next_cursor */
extern void T2094f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].remove_traversing_cursor */
extern void T2057f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].item */
extern T0* T2094f4(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].cursor_item */
extern T0* T2057f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].after */
extern T1 T2094f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].start */
extern void T2094f11(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].cursor_start */
extern void T2057f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].set_after */
extern void T2094f13(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].off */
extern T1 T2094f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].before */
extern T1 T2094f8(GE_context* ac, T0* C);
/* [detachable] LX_NFA.build_union */
extern void T2041f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_WILDCARD_PARSER.report_unrecognized_rule_error */
extern void T2019f252(GE_context* ac, T0* C);
/* [detachable] LX_UNRECOGNIZED_RULE_ERROR.make */
extern T0* T2046c8(GE_context* ac, T0* a1, T6 a2);
/* [detachable] LX_WILDCARD_PARSER.process_rule */
extern void T2019f251(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_START_CONDITIONS.add_nfa_to_all */
extern void T2034f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_START_CONDITION.put_nfa */
extern void T2063f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA].force_last */
extern void T2065f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA].resize */
extern void T2065f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA].new_capacity */
extern T6 T2065f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA].extendible */
extern T1 T2065f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_START_CONDITIONS.add_nfa_to_non_exclusive */
extern void T2034f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_START_CONDITIONS.is_empty */
extern T1 T2034f8(GE_context* ac, T0* C);
/* [detachable] LX_DESCRIPTION.set_variable_trail_context */
extern void T2020f35(GE_context* ac, T0* C, T1 a1);
/* detachable LX_RULE.set_column_count */
extern void T2044f21(GE_context* ac, T0* C, T6 a1);
/* detachable LX_RULE.set_line_count */
extern void T2044f20(GE_context* ac, T0* C, T6 a1);
/* detachable LX_RULE.set_trail_count */
extern void T2044f19(GE_context* ac, T0* C, T6 a1);
/* detachable LX_RULE.set_head_count */
extern void T2044f18(GE_context* ac, T0* C, T6 a1);
/* detachable LX_RULE.set_trail_context */
extern void T2044f17(GE_context* ac, T0* C, T1 a1);
/* detachable LX_RULE.set_line_nb */
extern void T2044f16(GE_context* ac, T0* C, T6 a1);
/* detachable LX_RULE.set_pattern */
extern void T2044f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_NFA.set_accepted_rule */
extern void T2041f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_NFA_STATE.set_accepted_rule */
extern void T2067f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_DESCRIPTION.create_equiv_classes */
extern void T2020f34(GE_context* ac, T0* C);
/* detachable LX_EQUIVALENCE_CLASSES.make */
extern T0* T2043c9(GE_context* ac, T6 a1, T6 a2);
/* detachable LX_EQUIVALENCE_CLASSES.initialize */
extern void T2043f12(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.check_options */
extern void T2019f250(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.report_full_and_variable_trailing_context_error */
extern void T2019f265(GE_context* ac, T0* C);
/* [detachable] LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.make */
extern T0* T2052c8(GE_context* ac);
/* [detachable] LX_WILDCARD_PARSER.report_full_and_reject_error */
extern void T2019f264(GE_context* ac, T0* C);
/* [detachable] LX_FULL_AND_REJECT_ERROR.make */
extern T0* T2051c8(GE_context* ac);
/* [detachable] LX_WILDCARD_PARSER.report_full_and_meta_equiv_classes_error */
extern void T2019f263(GE_context* ac, T0* C);
/* [detachable] LX_FULL_AND_META_ERROR.make */
extern T0* T2050c8(GE_context* ac);
/* [detachable] LX_WILDCARD_PARSER.build_equiv_classes */
extern void T2019f249(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].forth */
extern void T2045f11(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].cursor_forth */
extern void T2037f64(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].add_traversing_cursor */
extern void T2037f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].set_next_cursor */
extern void T2045f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].set_position */
extern void T2045f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].remove_traversing_cursor */
extern void T2037f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].set_after */
extern void T2045f12(GE_context* ac, T0* C);
/* [detachable] LX_SYMBOL_CLASS.convert_to_equivalence */
extern void T2036f26(GE_context* ac, T0* C, T0* a1);
/* detachable LX_EQUIVALENCE_CLASSES.equivalence_class */
extern T6 T2043f8(GE_context* ac, T0* C, T6 a1);
/* detachable LX_EQUIVALENCE_CLASSES.is_representative */
extern T1 T2043f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].item */
extern T0* T2045f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].cursor_item */
extern T0* T2037f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].after */
extern T1 T2045f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].start */
extern void T2045f10(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].cursor_start */
extern void T2037f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].cursor_off */
extern T1 T2037f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].off */
extern T1 T2045f8(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].is_empty */
extern T1 T2037f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].new_cursor */
extern T0* T2037f35(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make */
extern T0* T2045c9(GE_context* ac, T0* a1);
/* detachable LX_EQUIVALENCE_CLASSES.build */
extern void T2043f10(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yy_push_last_value */
extern void T2019f236(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_WILDCARD_PARSER.accept */
extern void T2019f235(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yy_do_error_action */
extern void T2019f233(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_WILDCARD_PARSER.report_error */
extern void T2019f248(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_WILDCARD_PARSER.report_eof_expected_error */
extern void T2019f247(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.read_token */
extern void T2019f232(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yy_execute_action */
extern void T2019f246(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_WILDCARD_PARSER.report_bad_character_error */
extern void T2019f262(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_BAD_CHARACTER_ERROR.make */
extern T0* T2049c8(GE_context* ac, T0* a1, T6 a2, T0* a3);
/* [detachable] LX_WILDCARD_PARSER.report_bad_character_class_error */
extern void T2019f261(GE_context* ac, T0* C);
/* [detachable] LX_BAD_CHARACTER_CLASS_ERROR.make */
extern T0* T2048c8(GE_context* ac, T0* a1, T6 a2);
/* [detachable] LX_WILDCARD_PARSER.start_condition */
extern T6 T2019f185(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.process_escaped_character */
extern void T2019f260(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.text_count */
extern T6 T2019f206(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.report_missing_quote_error */
extern void T2019f259(GE_context* ac, T0* C);
/* [detachable] LX_MISSING_QUOTE_ERROR.make */
extern T0* T2047c8(GE_context* ac, T0* a1, T6 a2);
/* [detachable] LX_WILDCARD_PARSER.process_character */
extern void T2019f258(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_WILDCARD_PARSER.report_character_out_of_range_error */
extern void T2019f268(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_CHARACTER_OUT_OF_RANGE_ERROR.make */
extern T0* T2053c8(GE_context* ac, T0* a1, T6 a2, T0* a3);
/* [detachable] LX_WILDCARD_PARSER.text_item */
extern T2 T2019f182(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_WILDCARD_PARSER.less */
extern void T2019f257(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_WILDCARD_PARSER.yy_set_line_column */
extern void T2019f267(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].item */
extern T0* T2037f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].has */
extern T1 T2037f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_WILDCARD_PARSER.text */
extern T0* T2019f176(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.set_start_condition */
extern void T2019f256(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_WILDCARD_PARSER.yy_execute_eof_action */
extern void T2019f245(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_WILDCARD_PARSER.terminate */
extern void T2019f255(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.wrap */
extern T1 T2019f149(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yy_refill_input_buffer */
extern void T2019f244(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yy_set_content */
extern void T2019f242(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_WILDCARD_PARSER.yy_null_trans_state */
extern T6 T2019f148(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_WILDCARD_PARSER.yy_previous_state */
extern T6 T2019f147(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.fatal_error */
extern void T2019f243(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_STDERR_FILE.put_character */
extern void T135f9(GE_context* ac, T0* C, T2 a1);
/* [detachable] KL_STANDARD_FILES.error */
extern T0* T134f1(GE_context* ac, T0* C);
/* [detachable] KL_STDERR_FILE.make */
extern T0* T135c5(GE_context* ac);
/* [detachable] LX_WILDCARD_PARSER.std */
extern T0* T2019f173(GE_context* ac, T0* C);
/* [detachable] KL_STANDARD_FILES.default_create */
extern T0* T134c4(GE_context* ac);
/* [detachable] LX_WILDCARD_PARSER.special_integer_ */
extern T0* T2019f129(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yy_init_value_stacks */
extern void T2019f231(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yy_clear_all */
extern void T2019f240(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.clear_all */
extern void T2019f253(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.clear_stacks */
extern void T2019f266(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yy_clear_value_stacks */
extern void T2019f269(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] LX_NFA].keep_head */
extern void T2042f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] LX_NFA].set_count */
extern void T2042f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] LX_SYMBOL_CLASS].keep_head */
extern void T2039f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] LX_SYMBOL_CLASS].set_count */
extern void T2039f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_WILDCARD_PARSER.abort */
extern void T2019f234(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.set_input_buffer */
extern void T2019f225(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_WILDCARD_PARSER.yy_load_input_buffer */
extern void T2019f230(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.new_string_buffer */
extern T0* T2019f131(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_WILDCARD_PARSER.make_from_description */
extern T0* T2019c221(GE_context* ac, T0* a1, T0* a2);
/* [detachable] LX_ACTION_FACTORY.make */
extern T0* T2035c1(GE_context* ac);
/* [detachable] LX_START_CONDITIONS.make */
extern void T2034f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_START_CONDITIONS.make */
extern T0* T2034c12(GE_context* ac, T6 a1);
/* [detachable] LX_START_CONDITIONS.set_internal_cursor */
extern void T2034f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_START_CONDITIONS.new_cursor */
extern T0* T2034f10(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_START_CONDITION].make */
extern T0* T2074c4(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_START_CONDITION].make */
extern T0* T2073f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] LX_START_CONDITION].make_empty */
extern T0* T2072c4(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_START_CONDITION].default_create */
extern T0* T2073c2(GE_context* ac);
/* [detachable] LX_WILDCARD_PARSER.make_parser_skeleton */
extern void T2019f224(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yy_build_parser_tables */
extern void T2019f229(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yycheck_template */
extern T0* T2019f160(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yyfixed_array */
extern T0* T2019f211(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_WILDCARD_PARSER.yytable_template */
extern T0* T2019f158(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yypgoto_template */
extern T0* T2019f157(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yypact_template */
extern T0* T2019f156(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yydefgoto_template */
extern T0* T2019f155(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yydefact_template */
extern T0* T2019f154(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yytypes2_template */
extern T0* T2019f153(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yytypes1_template */
extern T0* T2019f144(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yyr1_template */
extern T0* T2019f142(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yytranslate_template */
extern T0* T2019f140(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yytranslate_template_2 */
extern void T2019f271(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_WILDCARD_PARSER.yyarray_subcopy */
extern void T2019f275(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* [detachable] LX_WILDCARD_PARSER.integer_array_ */
extern T0* T2019f220(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yytranslate_template_1 */
extern void T2019f270(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_WILDCARD_PARSER.yy_create_value_stacks */
extern void T2019f228(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS].make */
extern T0* T2038f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] LX_SYMBOL_CLASS].make_empty */
extern T0* T2039c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS].default_create */
extern T0* T2038c3(GE_context* ac);
/* [detachable] LX_WILDCARD_PARSER.make_lex_scanner_from_description */
extern void T2019f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].set_key_equality_tester */
extern void T2037f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_map */
extern T0* T2037c40(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_with_equality_testers */
extern void T2037f46(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_sparse_container */
extern void T2037f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].set_internal_cursor */
extern void T2037f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_slots */
extern void T2037f61(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_clashes */
extern void T2037f60(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_key_storage */
extern void T2037f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_item_storage */
extern void T2037f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_WILDCARD_PARSER.string_equality_tester */
extern T0* T2019f117(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.make_with_buffer */
extern void T2019f227(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_WILDCARD_PARSER.yy_initialize */
extern void T2019f241(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yy_initialize */
extern void T2019f241p1(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yy_build_tables */
extern void T2019f254(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yy_accept_template */
extern T0* T2019f198(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yy_fixed_array */
extern T0* T2019f219(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_WILDCARD_PARSER.yy_meta_template */
extern T0* T2019f197(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yy_ec_template */
extern T0* T2019f196(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yy_ec_template_2 */
extern void T2019f274(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_WILDCARD_PARSER.yy_array_subcopy */
extern void T2019f276(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* [detachable] LX_WILDCARD_PARSER.yy_ec_template_1 */
extern void T2019f273(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_WILDCARD_PARSER.yy_def_template */
extern T0* T2019f195(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yy_base_template */
extern T0* T2019f194(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yy_chk_template */
extern T0* T2019f193(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.yy_nxt_template */
extern T0* T2019f192(GE_context* ac, T0* C);
/* [detachable] LX_WILDCARD_PARSER.empty_buffer */
extern T0* T2019f119(GE_context* ac, T0* C);
/* [detachable] LX_DESCRIPTION.set_case_insensitive */
extern void T2020f33(GE_context* ac, T0* C, T1 a1);
/* [detachable] LX_DESCRIPTION.set_full_table */
extern void T2020f32(GE_context* ac, T0* C, T1 a1);
/* [detachable] LX_DESCRIPTION.set_meta_equiv_classes_used */
extern void T2020f31(GE_context* ac, T0* C, T1 a1);
/* [detachable] LX_DESCRIPTION.set_equiv_classes_used */
extern void T2020f30(GE_context* ac, T0* C, T1 a1);
/* [detachable] LX_DESCRIPTION.make */
extern T0* T2020c29(GE_context* ac);
/* [detachable] LX_START_CONDITIONS.make_with_initial */
extern T0* T2034c14(GE_context* ac, T6 a1);
/* [detachable] LX_START_CONDITIONS.put_first */
extern void T2034f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_START_CONDITIONS.put */
extern void T2034f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] LX_START_CONDITIONS.move_cursors_right */
extern void T2034f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_START_CONDITION].set_position */
extern void T2074f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_START_CONDITIONS.move_right */
extern void T2034f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] LX_START_CONDITION].force */
extern void T2073f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] LX_START_CONDITION].fill_with */
extern void T2072f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] LX_START_CONDITION].extend */
extern void T2072f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_START_CONDITIONS.put_last */
extern void T2034f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_START_CONDITION.make */
extern T0* T2063c6(GE_context* ac, T0* a1, T6 a2, T1 a3);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA].make */
extern T0* T2065c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA].set_internal_cursor */
extern void T2065f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] LX_NFA].new_cursor */
extern T0* T2065f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA].make */
extern T0* T2103c3(GE_context* ac, T0* a1);
/* [detachable] UT_ERROR_HANDLER.make_null */
extern T0* T133c6(GE_context* ac);
/* [detachable] UT_ERROR_HANDLER.null_output_stream */
extern T0* T133f4(GE_context* ac, T0* C);
/* [detachable] LX_DFA_WILDCARD.wipe_out */
extern void T1993f18(GE_context* ac, T0* C);
/* detachable ET_CLUSTER_DEPENDENCE_CONSTRAINT.replace_backslashes */
extern void T1684f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] UC_UTF8_STRING.put */
extern void T862f79(GE_context* ac, T0* C, T2 a1, T6 a2);
/* [detachable] KL_UNIX_FILE_SYSTEM.is_relative_pathname */
extern T1 T123f5(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CLUSTER_DEPENDENCE_CONSTRAINT.file_system */
extern T0* T1684f13(GE_context* ac, T0* C);
/* detachable ET_CLUSTER_DEPENDENCE_CONSTRAINT.unix_file_system */
extern T0* T1684f15(GE_context* ac, T0* C);
/* detachable ET_CLUSTER_DEPENDENCE_CONSTRAINT.windows_file_system */
extern T0* T1684f14(GE_context* ac, T0* C);
/* detachable ET_CLUSTER_DEPENDENCE_CONSTRAINT.execution_environment */
extern T0* T1684f12(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].make */
extern void T142f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].make */
extern T0* T142c21(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].set_internal_cursor */
extern void T142f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].new_cursor */
extern T0* T142f13(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].make */
extern T0* T478c8(GE_context* ac, T0* a1);
/* detachable ET_CLUSTER_DEPENDENCE_CONSTRAINT.operating_system */
extern T0* T1684f10(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].remove */
extern void T142f38(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].move_left */
extern void T142f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].move_cursors_left */
extern void T142f40(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].set_position */
extern void T478f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].remove_last */
extern void T142f39(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].move_last_cursors_after */
extern void T142f42(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].set_next_cursor */
extern void T478f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].set_after */
extern void T478f9(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.as_lower */
extern T0* T862f9(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.to_lower */
extern void T862f84(GE_context* ac, T0* C);
/* [detachable] STRING_8.as_lower */
extern T0* T17f30(GE_context* ac, T0* C);
/* [detachable] STRING_8.to_lower */
extern void T17f71(GE_context* ac, T0* C);
/* [detachable] STRING_8.to_lower_area */
extern void T17f74(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_EIFFEL_PREPARSER.current_system */
extern T0* T437f60(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].make_from_linear */
extern T0* T142c37(GE_context* ac, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] STRING_8].forth */
extern void T481f12(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].cursor_forth */
extern void T147f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].add_traversing_cursor */
extern void T147f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] STRING_8].set_next_cursor */
extern void T481f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].remove_traversing_cursor */
extern void T147f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] STRING_8].set */
extern void T481f9(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] STRING_8].item */
extern T0* T481f7(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] STRING_8].start */
extern void T481f11(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].cursor_start */
extern void T147f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].cursor_off */
extern T1 T147f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] STRING_8].off */
extern T1 T481f6(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].new_cursor */
extern T0* T147f9(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] STRING_8].make */
extern T0* T481c8(GE_context* ac, T0* a1);
/* [detachable] ST_SPLITTER.split */
extern T0* T1877f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] ST_SPLITTER.do_split */
extern T0* T1877f7(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].force_last */
extern void T147f18(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] STRING_8].put_right */
extern void T482f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] STRING_8].make */
extern T0* T482c3(GE_context* ac, T0* a1);
/* [detachable] ST_SPLITTER.string_ */
extern T0* T1877f5(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].make */
extern T0* T147c17(GE_context* ac);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].set_internal_cursor */
extern void T147f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ST_SPLITTER.set_separators */
extern void T1877f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].put */
extern void T719f78(GE_context* ac, T0* C, T6 a1);
/* [detachable] ST_SPLITTER.make */
extern T0* T1877c11(GE_context* ac);
/* [detachable] KL_TEXT_INPUT_FILE.read_string */
extern void T31f77(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_TEXT_INPUT_FILE.old_read_to_string */
extern T6 T31f36(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] KL_TEXT_INPUT_FILE.file_gss */
extern T6 T31f44(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* [detachable] SPECIAL [CHARACTER_8].item_address */
extern T14 T15f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_TEXT_INPUT_FILE.old_end_of_file */
extern T1 T31f25(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.file_feof */
extern T1 T31f31(GE_context* ac, T0* C, T14 a1);
/* [detachable] ET_EIFFEL_PREPARSER.build_provider_constraint */
extern void T437f180(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_EIFFEL_PREPARSER.build_provider_constraint */
extern T0* T437f180ac1(GE_context* ac, T0* a1, T0* a2);
extern T1 T437f180ot1(T0* a1);
/* detachable ET_ECF_CLUSTER.set_provider_constraint */
extern void T759f96(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTERS.set_provider_constraint */
extern void T744f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.universes_do_all */
extern void T182f206(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_all */
extern void T205f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ADAPTED_LIBRARIES.universes_do_all */
extern void T183f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.universes_do_all */
extern void T55f282(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.add_universe_full_name */
extern void T437f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].force_last */
extern void T142f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].resize */
extern void T142f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].new_capacity */
extern T6 T142f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].extendible */
extern T1 T142f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gcaaa_error */
extern void T50f549(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_cluster_error */
extern void T50f355(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLUSTER_ERROR.make_gcaaa */
extern T0* T1866c26(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T50f175(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gcaaa_error */
extern void T34f549(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_cluster_error */
extern void T34f355(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T34f175(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.add_recursive_cluster */
extern void T759f100(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.add_subcluster */
extern void T759f95(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.set_parent */
extern void T759f94(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTERS.put_last */
extern void T744f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].force_last */
extern void T1503f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER].force */
extern void T1783f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_CLUSTER].fill_with */
extern void T1782f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_CLUSTER].extend */
extern void T1782f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].resize */
extern void T1503f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T1783f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T1782f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].new_capacity */
extern T6 T1503f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].extendible */
extern T1 T1503f7(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ECF_CLUSTER.set_subclusters */
extern void T759f98(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTERS.set_parent */
extern void T744f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTERS.make_empty */
extern T0* T744c9(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].make */
extern T0* T1503c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].set_internal_cursor */
extern void T1503f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].new_cursor */
extern T0* T1503f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER].make */
extern T0* T1784c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER].make */
extern T0* T1783f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_CLUSTER].make_empty */
extern T0* T1782c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER].default_create */
extern T0* T1783c3(GE_context* ac);
/* detachable ET_ECF_CLUSTER.new_recursive_cluster */
extern T0* T759f61(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.set_overridden_group */
extern void T759f86(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.set_provider_groups */
extern void T759f82(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.set_visible_classes */
extern void T759f81(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.set_class_options */
extern void T759f78(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.set_options */
extern void T759f77(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.set_class_mappings */
extern void T759f80(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.set_class_renamings */
extern void T759f79(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.set_classname_prefix */
extern void T759f72(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.set_use_obsolete_syntax */
extern void T759f88(GE_context* ac, T0* C, T1 a1);
/* detachable ET_ECF_CLUSTER.set_hidden */
extern void T759f71(GE_context* ac, T0* C, T1 a1);
/* detachable ET_ECF_CLUSTER.set_read_only */
extern void T759f73(GE_context* ac, T0* C, T1 a1);
/* detachable ET_ECF_CLUSTER.set_override */
extern void T759f85(GE_context* ac, T0* C, T1 a1);
/* detachable ET_ECF_CLUSTER.set_implicit */
extern void T759f103(GE_context* ac, T0* C, T1 a1);
/* detachable ET_ECF_CLUSTER.set_recursive */
extern void T759f74(GE_context* ac, T0* C, T1 a1);
/* detachable ET_ECF_CLUSTER.set_file_rules */
extern void T759f102(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.make_relative */
extern T0* T759c101(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] UT_VERSION.is_less_equal */
extern T1 T43f16(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.ecf_1_4_0 */
extern T0* T759f37(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T759f87(GE_context* ac, T0* C, T1 a1);
/* detachable ET_ECF_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T744f10(GE_context* ac, T0* C, T1 a1);
/* detachable ET_ECF_CLUSTER.string_ */
extern T0* T759f54(GE_context* ac, T0* C);
/* [detachable] KL_UNIX_FILE_SYSTEM.directory_exists */
extern T1 T123f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_DIRECTORY.exists */
extern T1 T326f29(GE_context* ac, T0* C);
/* [detachable] KL_UNIX_FILE_SYSTEM.tmp_directory */
extern T0* T123f30(GE_context* ac, T0* C);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.directory_exists */
extern T1 T122f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.tmp_directory */
extern T0* T122f33(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T759f40(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_FILE_RULES.is_included */
extern T1 T747f3(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature detachable ET_ECF_FILE_RULES.is_included */
extern T0* T747f3ac1(GE_context* ac, T0* a1);
/* [detachable] PREDICATE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]].set_rout_disp_final */
extern void T1985f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* detachable ET_ECF_FILE_RULE.is_included */
extern T1 T767f10(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature detachable ET_ECF_FILE_RULE.is_included */
extern T0* T767f10ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature detachable ET_ECF_FILE_RULE.is_included */
extern T0* T767f10ac2(GE_context* ac, T0* a1);
/* [detachable] PREDICATE [[attached] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION]].set_rout_disp_final */
extern void T2027f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.matches */
extern T1 T82f299(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION].there_exists */
extern T1 T1517f7(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION].item */
extern T0* T1517f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].for_all */
extern T1 T1506f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].item */
extern T0* T1506f9(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ECF_CLUSTER.implicit_relative_name */
extern T0* T759f52(GE_context* ac, T0* C, T2 a1);
/* detachable ET_ECF_CLUSTER.unix_file_system */
extern T0* T759f51(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T759f40p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.preparse_file */
extern void T437f179(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gcaab_error */
extern void T50f245(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLUSTER_ERROR.make_gcaab */
extern T0* T1866c23(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T50f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gcaab_error */
extern void T34f245(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T34f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.reset */
extern void T437f185(GE_context* ac, T0* C);
/* [detachable] YY_FILE_BUFFER.set_end_of_file */
extern void T896f19(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.reset */
extern void T437f185p1(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.reset */
extern void T437f185p0(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.reset */
extern void T437f185p2(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_syntax_error */
extern void T50f262(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_SYNTAX_ERROR.make */
extern T0* T1867c18(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_SYNTAX_ERROR.set_compilers */
extern void T1867f19(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ERROR_HANDLER.report_syntax_error */
extern void T34f262(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PREPARSER.current_position */
extern T0* T437f59(GE_context* ac, T0* C);
/* [detachable] ET_FILE_POSITION.make */
extern T0* T1492c12(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_FILE_POSITION.make_compressed_position */
extern void T1492f13(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_FILE_POSITION.set_position */
extern void T1492f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_EIFFEL_PREPARSER.read_token */
extern void T437f184(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.yy_execute_action */
extern void T437f190(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_silu_error */
extern void T50f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_silu_error */
extern void T34f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_sifu_error */
extern void T50f260(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_sifu_error */
extern void T34f260(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_ssnp_error */
extern void T50f247(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_ssnp_error */
extern void T34f247(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_ssnl_error */
extern void T50f258(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_ssnl_error */
extern void T34f258(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_sssc_error */
extern void T50f257(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_sssc_error */
extern void T34f257(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PREPARSER.more */
extern void T437f196(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.is_verbatim_string_closer */
extern T1 T437f109(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_EIFFEL_PREPARSER.text_item */
extern T2 T437f132(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PREPARSER.report_syntax_error */
extern void T437f191(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.set_start_condition */
extern void T437f194(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PREPARSER.text_substring */
extern T0* T437f106(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].force_new */
extern void T1671f41(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].key_storage_put */
extern void T1671f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].item_storage_put */
extern void T1671f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].slots_put */
extern void T1671f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].clashes_put */
extern void T1671f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].slots_item */
extern T6 T1671f29(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].hash_position */
extern T6 T1671f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].clashes_item */
extern T6 T1671f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].resize */
extern void T1671f51(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].clashes_resize */
extern void T1671f61(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].special_integer_ */
extern T0* T1671f35(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].key_storage_resize */
extern void T1671f60(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].item_storage_resize */
extern void T1671f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].key_storage_item */
extern T0* T1671f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].slots_resize */
extern void T1671f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].new_modulus */
extern T6 T1671f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].new_capacity */
extern T6 T1671f31(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].unset_found_item */
extern void T1671f44(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].found_key */
extern T0* T1671f25(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].found */
extern T1 T1671f28(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].search */
extern void T1671f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].search_position */
extern void T1671f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.strings */
extern T0* T437f131(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].set_key_equality_tester */
extern void T1671f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.string_equality_tester */
extern T0* T437f133(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_map */
extern T0* T1671c36(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_with_equality_testers */
extern void T1671f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_sparse_container */
extern void T1671f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].set_internal_cursor */
extern void T1671f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].new_cursor */
extern T0* T1671f33(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] STRING_8].make */
extern T0* T1909c5(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_slots */
extern void T1671f65(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_clashes */
extern void T1671f64(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_key_storage */
extern void T1671f63(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_item_storage */
extern void T1671f62(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PREPARSER.append_text_substring_to_string */
extern void T437f197(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* [detachable] KL_CHARACTER_BUFFER.append_substring_to_string */
extern void T1373f10(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* [detachable] KL_CHARACTER_BUFFER.any_ */
extern T0* T1373f7(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.string_ */
extern T0* T437f130(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.string_buffer */
extern T0* T437f129(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_sceq_error */
extern void T50f252(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_sceq_error */
extern void T34f252(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_scqq_error */
extern void T50f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_scqq_error */
extern void T34f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_scac_error */
extern void T50f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_scac_error */
extern void T34f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_scas_error */
extern void T50f249(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_scas_error */
extern void T34f249(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PREPARSER.set_syntax_error */
extern void T437f193(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.text_count */
extern T6 T437f104(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.use_reference_keyword */
extern T1 T437f103(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.use_note_keyword */
extern T1 T437f102(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.use_detachable_keyword */
extern T1 T437f101(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.use_attribute_keyword */
extern T1 T437f100(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_identifier */
extern T0* T448f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER.set_position */
extern void T179f113(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_EIFFEL_PREPARSER.last_identifier */
extern T0* T437f128(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].replace_found_item */
extern void T1671f42(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].found_item */
extern T6 T1671f26(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].item_storage_item */
extern T6 T1671f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.last_identifier */
extern T0* T439f976(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.strings */
extern T0* T439f959(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.tokens */
extern T0* T439f662(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.string_equality_tester */
extern T0* T439f968(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.append_text_substring_to_string */
extern void T439f2185(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* [detachable] ET_EIFFEL_PARSER.string_ */
extern T0* T439f958(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.string_buffer */
extern T0* T439f957(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.ast_factory */
extern T0* T437f99(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.use_attached_keyword */
extern T1 T437f95(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.yy_set_line_column */
extern void T437f195(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.yy_execute_eof_action */
extern void T437f189(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_sseq_error */
extern void T50f246(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_sseq_error */
extern void T34f246(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PREPARSER.terminate */
extern void T437f192(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.wrap */
extern T1 T437f87(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.yy_refill_input_buffer */
extern void T437f188(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.yy_set_content */
extern void T437f140(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_null_trans_state */
extern T6 T437f86(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_previous_state */
extern T6 T437f85(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.fatal_error */
extern void T437f187(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.special_integer_ */
extern T0* T437f61(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.yy_load_input_buffer */
extern void T437f138(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.tmp_file */
extern T0* T437f56(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.is_closed */
extern T1 T31f17(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.shared_file */
extern T0* T437f126(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.preparse_class */
extern void T437f183(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] ET_MASTER_CLASS.add_last_local_class */
extern void T552f81(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.add_last_local_non_override_class */
extern void T552f84(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].force_last */
extern void T445f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLASS].force */
extern void T1292f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CLASS].fill_with */
extern void T1291f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CLASS].extend */
extern void T1291f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].resize */
extern void T445f20(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLASS].aliased_resized_area */
extern T0* T1292f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_CLASS].aliased_resized_area */
extern T0* T1291f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].new_capacity */
extern T6 T445f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].extendible */
extern T1 T445f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_MASTER_CLASS.add_last_local_override_class */
extern void T552f83(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.add_last_local_ignored_class */
extern void T552f82(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.set_time_stamp */
extern void T72f315(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLASS.set_filename */
extern void T72f274(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.register_class */
extern void T55f246(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.set_id */
extern void T72f261(GE_context* ac, T0* C, T6 a1);
/* detachable ET_SYSTEM.register_class */
extern void T35f193(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_UNIX_FILE_SYSTEM.basename */
extern T0* T123f2(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_UNIX_FILE_SYSTEM.is_root_directory */
extern T1 T123f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.basename */
extern T0* T122f2(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.is_root_directory */
extern T1 T122f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.tokens */
extern T0* T437f57(GE_context* ac, T0* C);
/* [detachable] KL_UNIX_FILE_SYSTEM.same_pathnames */
extern T1 T123f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] KL_PATHNAME.same_pathname */
extern T1 T466f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_PATHNAME.is_subpathname */
extern T1 T466f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_PATHNAME.string_ */
extern T0* T466f18(GE_context* ac, T0* C);
/* [detachable] KL_PATHNAME.string_equality_tester */
extern T0* T466f19(GE_context* ac, T0* C);
/* [detachable] UC_STRING_EQUALITY_TESTER.default_create */
extern T0* T856c3(GE_context* ac);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.same_pathnames */
extern T1 T122f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] KL_PATHNAME.same_case_insensitive */
extern T1 T466f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_PATHNAME.is_case_insensitive_subpathname */
extern T1 T466f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_PATHNAME.case_insensitive_string_equality_tester */
extern T0* T466f17(GE_context* ac, T0* C);
/* [detachable] KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.default_create */
extern T0* T170c3(GE_context* ac);
/* [detachable] ET_MASTER_CLASS.local_classes_do_if */
extern void T552f86(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_MASTER_CLASS.local_non_override_classes_do_if */
extern void T552f88(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_MASTER_CLASS.local_override_classes_do_if */
extern void T552f87(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PREPARSER.current_universe */
extern T0* T437f55(GE_context* ac, T0* C);
/* detachable DS_CELL [detachable ET_CLASS].put */
extern void T1976f3(GE_context* ac, T0* C, T0* a1);
/* detachable DS_CELL [detachable ET_CLASS].make */
extern T0* T1976c2(GE_context* ac, T0* a1);
/* detachable ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T759f39(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T759f39p1(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.has_eiffel_extension */
extern T1 T759f53(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.operating_system */
extern T0* T759f59(GE_context* ac, T0* C);
/* [detachable] KL_DIRECTORY.reset */
extern void T326f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.tmp_directory */
extern T0* T437f54(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.shared_directory */
extern T0* T437f124(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.file_system */
extern T0* T437f53(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.unix_file_system */
extern T0* T437f123(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.windows_file_system */
extern T0* T437f122(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.operating_system */
extern T0* T437f121(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.full_pathname */
extern T0* T759f38(GE_context* ac, T0* C);
/* [detachable] KL_UNIX_FILE_SYSTEM.dirname */
extern T0* T123f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.dirname */
extern T0* T122f6(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_SETTINGS.value */
extern T0* T54f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_UNIX_FILE_SYSTEM.pathname_from_file_system */
extern T0* T123f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] KL_UNIX_FILE_SYSTEM.any_ */
extern T0* T123f17(GE_context* ac, T0* C);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.pathname_from_file_system */
extern T0* T122f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] KL_WINDOWS_FILE_SYSTEM.any_ */
extern T0* T122f19(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.windows_file_system */
extern T0* T759f50(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.file_system */
extern T0* T759f49(GE_context* ac, T0* C);
/* detachable ET_ECF_VARIABLES.interpreted_string */
extern T0* T59f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_VARIABLES.expanded_string */
extern T0* T59f9(GE_context* ac, T0* C, T0* a1, T1 a2);
/* detachable ET_ECF_VARIABLES.value */
extern T0* T59f8(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_VARIABLES.string_ */
extern T0* T59f5(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.has */
extern T1 T862f66(GE_context* ac, T0* C, T2 a1);
/* [detachable] UC_UTF8_STRING.index_of */
extern T6 T862f21(GE_context* ac, T0* C, T2 a1, T6 a2);
/* [detachable] UC_UTF8_STRING.index_of_item_code */
extern T6 T862f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_EIFFEL_PREPARSER.execution_environment */
extern T0* T437f52(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.error_handler */
extern T0* T437f98(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.set_preparsed */
extern void T759f99(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_CLUSTERS.do_all */
extern void T546f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLUSTER].item */
extern T0* T1331f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_preparsing_status */
extern void T50f514(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_preparsing_status */
extern void T34f514(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.preparse */
extern void T809f166(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.preparse */
extern void T809f166p1(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_LIBRARY.preparse */
extern T0* T809f166p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature [detachable] ET_LIBRARY.preparse */
extern T0* T809f166p1ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature [detachable] ET_LIBRARY.preparse */
extern T0* T809f166p1ac3(GE_context* ac);
/* Creation of agent #4 in feature [detachable] ET_LIBRARY.preparse */
extern T0* T809f166p1ac4(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.preparse */
extern void T206f166(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.preparse */
extern void T578f166(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLIES.put_last */
extern void T577f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].force_last */
extern void T1345f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY].force */
extern void T1529f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DOTNET_ASSEMBLY].fill_with */
extern void T1530f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DOTNET_ASSEMBLY].extend */
extern void T1530f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].resize */
extern void T1345f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1529f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1530f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1345f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].extendible */
extern T1 T1345f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T801f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.is_consumable */
extern T1 T206f91(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.is_consumable */
extern T1 T578f91(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].force_last */
extern void T799f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].slots_put */
extern void T799f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].clashes_put */
extern void T799f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].slots_item */
extern T6 T799f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].hash_position */
extern T6 T799f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].resize */
extern void T799f41(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].clashes_resize */
extern void T799f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].special_integer_ */
extern T0* T799f26(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].key_storage_resize */
extern void T799f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].item_storage_resize */
extern void T799f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].key_storage_item */
extern T0* T799f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].item_storage_item */
extern T0* T799f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].clashes_item */
extern T6 T799f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].slots_resize */
extern void T799f44(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].new_modulus */
extern T6 T799f20(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T799f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].item_storage_put */
extern void T799f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].search_position */
extern void T799f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].key_equality_tester */
extern T0* T799f24(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].unset_found_item */
extern void T799f37(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern void T55f177(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac1(GE_context* ac);
/* Creation of agent #2 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac3(GE_context* ac);
/* Creation of agent #4 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac4(GE_context* ac);
/* Creation of agent #5 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac5(GE_context* ac);
/* Creation of agent #6 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac6(GE_context* ac);
/* Creation of agent #7 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac7(GE_context* ac);
/* Creation of agent #8 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac8(GE_context* ac);
/* Creation of agent #9 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac9(GE_context* ac);
/* Creation of agent #10 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac10(GE_context* ac);
/* Creation of agent #11 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac11(GE_context* ac);
/* Creation of agent #12 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac12(GE_context* ac);
/* Creation of agent #13 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac13(GE_context* ac);
/* Creation of agent #14 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac14(GE_context* ac);
/* Creation of agent #15 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac15(GE_context* ac);
/* Creation of agent #16 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac16(GE_context* ac);
/* Creation of agent #17 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac17(GE_context* ac);
/* Creation of agent #18 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac18(GE_context* ac);
/* Creation of agent #19 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac19(GE_context* ac);
/* Creation of agent #20 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac20(GE_context* ac);
/* Creation of agent #21 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac21(GE_context* ac);
/* Creation of agent #22 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac22(GE_context* ac);
/* Creation of agent #23 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac23(GE_context* ac, T0* a1);
/* Creation of agent #24 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac24(GE_context* ac);
/* Creation of agent #25 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac25(GE_context* ac, T0* a1);
/* Creation of agent #26 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac26(GE_context* ac);
/* Creation of agent #27 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac27(GE_context* ac, T0* a1);
/* Creation of agent #28 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac28(GE_context* ac);
/* Creation of agent #29 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac29(GE_context* ac, T0* a1);
/* Creation of agent #30 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac30(GE_context* ac);
/* Creation of agent #31 in feature [detachable] ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T55f177ac31(GE_context* ac, T1 a1);
/* [detachable] ET_MASTER_CLASS.set_modified */
extern void T552f62(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_IMPLEMENTATION_STATUS_CHECKER.process_class */
extern void T826f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IMPLEMENTATION_STATUS_CHECKER.internal_process_class */
extern void T826f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IMPLEMENTATION_STATUS_CHECKER.check_providers_validity */
extern void T826f10(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].forth */
extern void T1544f12(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].cursor_forth */
extern void T913f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].add_traversing_cursor */
extern void T913f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].set_next_cursor */
extern void T1544f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].set_position */
extern void T1544f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].remove_traversing_cursor */
extern void T913f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].set_after */
extern void T1544f13(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].go_after */
extern void T1544f11(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].cursor_go_after */
extern void T913f73(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].cursor_off */
extern T1 T913f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].off */
extern T1 T1544f6(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.has_interface_error */
extern T1 T552f41(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.interface_checked */
extern T1 T552f40(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].item */
extern T0* T1544f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].cursor_item */
extern T0* T913f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].after */
extern T1 T1544f8(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].start */
extern void T1544f10(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].cursor_start */
extern void T913f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].is_empty */
extern T1 T913f25(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].new_cursor */
extern T0* T913f19(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].make */
extern T0* T1544c9(GE_context* ac, T0* a1);
/* [detachable] ET_IMPLEMENTATION_STATUS_CHECKER.check_suppliers_validity */
extern void T826f9(GE_context* ac, T0* C);
/* [detachable] ET_PARENT_LIST.parent */
extern T0* T550f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_PARENT_LIST.item */
extern T0* T550f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLASS.parents */
extern T0* T72f103(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLASS.implicit_parent_clause */
extern T0* T72f131(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_system_object_class */
extern T1 T72f91(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_dotnet */
extern T1 T72f92(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_any_class */
extern T1 T72f104(GE_context* ac, T0* C);
/* detachable ET_PARENT_CLAUSE_LIST.item */
extern T0* T1193f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLASS.parents_count */
extern T6 T72f102(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.has_explicit_conforming_parent */
extern T1 T72f130(GE_context* ac, T0* C);
/* detachable ET_PARENT_CLAUSE_LIST.has_conforming_parent */
extern T1 T1193f5(GE_context* ac, T0* C);
/* [detachable] ET_PARENT_LIST.has_conforming_parent */
extern T1 T550f10(GE_context* ac, T0* C);
/* [detachable] ET_IMPLEMENTATION_STATUS_CHECKER.set_fatal_error */
extern void T826f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IMPLEMENTATION_STATUS_CHECKER.error_handler */
extern T0* T826f4(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.unset_implementation_error */
extern void T72f293(GE_context* ac, T0* C);
/* [detachable] ET_INTERFACE_STATUS_CHECKER.process_class */
extern void T825f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INTERFACE_STATUS_CHECKER.internal_process_class */
extern void T825f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INTERFACE_STATUS_CHECKER.check_parents_validity */
extern void T825f13(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER3.check_type_validity */
extern void T1543f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INTERFACE_STATUS_CHECKER.check_formal_parameters_validity */
extern void T825f12(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER.constraint */
extern T0* T852f26(GE_context* ac, T0* C);
/* [detachable] ET_INTERFACE_STATUS_CHECKER.check_qualified_anchored_signatures_validity */
extern void T825f11(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_signatures_validity */
extern void T1542f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_feature_signatures_validity */
extern void T1542f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PROCEDURE_LIST.item */
extern T0* T253f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_QUERY_LIST.item */
extern T0* T252f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_INTERFACE_STATUS_CHECKER.set_fatal_error */
extern void T825f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INTERFACE_STATUS_CHECKER.error_handler */
extern T0* T825f6(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.unset_interface_error */
extern void T72f292(GE_context* ac, T0* C);
/* [detachable] ET_FLATTENING_STATUS_CHECKER.process_class */
extern void T824f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FLATTENING_STATUS_CHECKER.internal_process_class */
extern void T824f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FLATTENING_STATUS_CHECKER.check_signatures_validity */
extern void T824f12(GE_context* ac, T0* C);
/* [detachable] ET_FLATTENING_STATUS_CHECKER.check_feature_signatures_validity */
extern void T824f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER2.check_type_validity */
extern void T1541f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FLATTENING_STATUS_CHECKER.check_parents_validity */
extern void T824f11(GE_context* ac, T0* C);
/* [detachable] ET_FLATTENING_STATUS_CHECKER.check_formal_parameters_validity */
extern void T824f10(GE_context* ac, T0* C);
/* [detachable] ET_FLATTENING_STATUS_CHECKER.set_fatal_error */
extern void T824f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FLATTENING_STATUS_CHECKER.error_handler */
extern T0* T824f5(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.unset_flattening_error */
extern void T72f291(GE_context* ac, T0* C);
/* [detachable] ET_ANCESTORS_STATUS_CHECKER.process_class */
extern void T823f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCESTORS_STATUS_CHECKER.internal_process_class */
extern void T823f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCESTORS_STATUS_CHECKER.check_parents_validity */
extern void T823f11(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER1.check_type_validity */
extern void T1540f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCESTORS_STATUS_CHECKER.check_formal_parameters_validity */
extern void T823f10(GE_context* ac, T0* C);
/* [detachable] ET_ANCESTORS_STATUS_CHECKER.set_fatal_error */
extern void T823f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCESTORS_STATUS_CHECKER.error_handler */
extern T0* T823f5(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.unset_ancestors_error */
extern void T72f290(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.not_implementation_checked */
extern T1 T72f171(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.reset_after_interface_checked */
extern void T72f287(GE_context* ac, T0* C);
/* [detachable] ET_PROCEDURE_LIST.reset_after_interface_checked */
extern void T253f13(GE_context* ac, T0* C);
/* [detachable] ET_QUERY_LIST.reset_after_interface_checked */
extern void T252f13(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.reset_after_features_flattened */
extern void T72f286(GE_context* ac, T0* C);
/* detachable ET_FORMAL_PARAMETER_LIST.reset_constraint_creation_procedures */
extern void T585f36(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.reset_constraint_creation_procedures */
extern void T1427f85(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINT_CREATOR.reset */
extern void T1041f14(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER.reset_constraint_creation_procedures */
extern void T852f82(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER.creation_procedures */
extern T0* T852f27(GE_context* ac, T0* C);
/* detachable ET_FORMAL_PARAMETER_LIST.reset_constraint_renames */
extern void T585f35(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.reset_constraint_renames */
extern void T1427f84(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER.reset_constraint_renames */
extern void T852f81(GE_context* ac, T0* C);
/* [detachable] ET_PROCEDURE_LIST.reset_after_features_flattened */
extern void T253f12(GE_context* ac, T0* C);
/* [detachable] ET_QUERY_LIST.reset_after_features_flattened */
extern void T252f12(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.features_flattened */
extern T1 T72f107(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.has_flattening_error */
extern T1 T72f108(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.reset_after_ancestors_built */
extern void T72f285(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_type */
extern void T1265f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern T0* T1265c6(GE_context* ac, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern void T1265f6p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.tokens */
extern T0* T1265f4(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.ancestors_built */
extern T1 T72f99(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.has_ancestors_error */
extern T1 T72f106(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.local_classes_do_unless_actual */
extern void T552f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.local_non_override_classes_do_unless_actual */
extern void T552f77(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.local_override_classes_do_unless_actual */
extern void T552f76(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IMPLEMENTATION_STATUS_CHECKER.make */
extern T0* T826c5(GE_context* ac, T0* a1);
/* [detachable] ET_IMPLEMENTATION_STATUS_CHECKER.tokens */
extern T0* T826f3(GE_context* ac, T0* C);
/* [detachable] ET_INTERFACE_STATUS_CHECKER.make */
extern T0* T825c7(GE_context* ac, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER3.make */
extern T0* T1543c2(GE_context* ac);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.make */
extern T0* T1542c5(GE_context* ac, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.tokens */
extern T0* T1542f4(GE_context* ac, T0* C);
/* [detachable] ET_INTERFACE_STATUS_CHECKER.make */
extern void T825f7p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INTERFACE_STATUS_CHECKER.tokens */
extern T0* T825f5(GE_context* ac, T0* C);
/* [detachable] ET_FLATTENING_STATUS_CHECKER.make */
extern T0* T824c6(GE_context* ac, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER2.make */
extern T0* T1541c2(GE_context* ac);
/* [detachable] ET_FLATTENING_STATUS_CHECKER.make */
extern void T824f6p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FLATTENING_STATUS_CHECKER.tokens */
extern T0* T824f4(GE_context* ac, T0* C);
/* [detachable] ET_ANCESTORS_STATUS_CHECKER.make */
extern T0* T823c6(GE_context* ac, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER1.make */
extern T0* T1540c2(GE_context* ac);
/* [detachable] ET_ANCESTORS_STATUS_CHECKER.make */
extern void T823f6p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCESTORS_STATUS_CHECKER.tokens */
extern T0* T823f4(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.classes_do_if_recursive */
extern void T55f191(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM.classes_do_if_recursive */
extern T0* T55f191ac1(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ECF_SYSTEM.master_classes_do_recursive */
extern void T55f190(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM.master_classes_do_recursive */
extern T0* T55f190ac1(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_SYSTEM.classes_modified_recursive */
extern T1 T55f139(GE_context* ac, T0* C);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T55f139ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature [detachable] ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T55f139ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature [detachable] ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T55f139ac3(GE_context* ac);
/* Creation of agent #4 in feature [detachable] ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T55f139ac4(GE_context* ac, T0* a1);
/* [detachable] PREDICATE [[attached] TUPLE].set_rout_disp_final */
extern void T1380f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] PREDICATE [[attached] TUPLE [[attached] ET_MASTER_CLASS]].set_rout_disp_final */
extern void T1379f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] KL_AGENT_ROUTINES [[attached] ANY].call */
extern void T1376f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] UT_TRISTATE.set_true */
extern void T1375f4(GE_context* ac, T0* C);
/* [detachable] UT_TRISTATE.is_true */
extern T1 T1375f2(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern void T55f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T55f249ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature [detachable] ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T55f249ac2(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_SYSTEM.any_actions */
extern T0* T55f134(GE_context* ac, T0* C);
/* [detachable] KL_AGENT_ROUTINES [[attached] ANY].default_create */
extern T0* T1376c1(GE_context* ac);
/* [detachable] UT_TRISTATE.make_false */
extern T0* T1375c3(GE_context* ac);
/* [detachable] UT_TRISTATE.set_false */
extern void T1375f5(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.import_classes */
extern void T55f176(GE_context* ac, T0* C);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM.import_classes */
extern T0* T55f176ac1(GE_context* ac);
/* Creation of agent #2 in feature [detachable] ET_ECF_SYSTEM.import_classes */
extern T0* T55f176ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature [detachable] ET_ECF_SYSTEM.import_classes */
extern T0* T55f176ac3(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_SYSTEM.preparse */
extern void T55f175(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM.preparse */
extern T0* T55f175ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature [detachable] ET_ECF_SYSTEM.preparse */
extern T0* T55f175ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature [detachable] ET_ECF_SYSTEM.preparse */
extern T0* T55f175ac3(GE_context* ac);
/* Creation of agent #4 in feature [detachable] ET_ECF_SYSTEM.preparse */
extern T0* T55f175ac4(GE_context* ac, T0* a1);
/* [detachable] ET_ADAPTED_LIBRARIES.do_recursive */
extern void T183f8(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ADAPTED_LIBRARIES.do_recursive */
extern T0* T183f8ac1(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_LIBRARY.add_library_recursive */
extern void T182f195(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_LIBRARY.add_library_recursive */
extern T0* T182f195ac1(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].force_last */
extern void T866f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].slots_put */
extern void T866f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].clashes_put */
extern void T866f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].slots_item */
extern T6 T866f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].hash_position */
extern T6 T866f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].resize */
extern void T866f41(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].clashes_resize */
extern void T866f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].special_integer_ */
extern T0* T866f27(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].key_storage_resize */
extern void T866f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].item_storage_resize */
extern void T866f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY].aliased_resized_area */
extern T0* T1554f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_LIBRARY].aliased_resized_area */
extern T0* T1555f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].key_storage_item */
extern T0* T866f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].item_storage_item */
extern T0* T866f17(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].clashes_item */
extern T6 T866f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].slots_resize */
extern void T866f44(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].new_modulus */
extern T6 T866f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].new_capacity */
extern T6 T866f19(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].item_storage_put */
extern void T866f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY].force */
extern void T1554f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_LIBRARY].fill_with */
extern void T1555f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_LIBRARY].extend */
extern void T1555f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].search_position */
extern void T866f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].key_equality_tester */
extern T0* T866f25(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].unset_found_item */
extern void T866f36(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].has */
extern T1 T866f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.add_library_recursive */
extern void T809f170(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_LIBRARY.add_library_recursive */
extern T0* T809f170ac1(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].do_all */
extern void T866f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].make */
extern T0* T866c30(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].set_internal_cursor */
extern void T866f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].new_cursor */
extern T0* T866f24(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_LIBRARY].make */
extern T0* T1553c4(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].make_slots */
extern void T866f35(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].make_clashes */
extern void T866f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].make_key_storage */
extern void T866f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_LIBRARY].make_item_storage */
extern void T866f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY].make */
extern T0* T1554f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_LIBRARY].make_empty */
extern T0* T1555c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY].default_create */
extern T0* T1554c3(GE_context* ac);
/* [detachable] ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern void T205f7(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern T0* T205f7ac1(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T206f169(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T206f169ac1(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].has */
extern T1 T799f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T578f169(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T578f169ac1(GE_context* ac, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assemblies */
extern void T450f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.consume */
extern void T206f165(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assembly */
extern void T450f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gaaaa_error */
extern void T50f329(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_assembly_error */
extern void T50f356(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY_ERROR.make_gaaaa */
extern T0* T1868c14(GE_context* ac, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T50f71(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gaaaa_error */
extern void T34f329(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_assembly_error */
extern void T34f356(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T34f71(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.error_handler */
extern T0* T450f2(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.consume */
extern void T578f165(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T577f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DOTNET_ASSEMBLIES.count */
extern T6 T577f3(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].do_all */
extern void T799f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLIES.make_empty */
extern T0* T577c5(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].make */
extern T0* T1345c12(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1345f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1345f11(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_DOTNET_ASSEMBLY].make */
extern T0* T1658c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY].make */
extern T0* T1529f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_DOTNET_ASSEMBLY].make_empty */
extern T0* T1530c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY].default_create */
extern T0* T1529c3(GE_context* ac);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].make */
extern T0* T799c30(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T799f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T799f17(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_ASSEMBLY].make */
extern T0* T1528c4(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].make_slots */
extern void T799f36(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].make_clashes */
extern void T799f35(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].make_key_storage */
extern void T799f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].make_item_storage */
extern void T799f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T205f3(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.compile_degree_6 */
extern void T364f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.report_degree_6_metrics */
extern void T364f72(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SYSTEM.activate_dynamic_type_set_builder */
extern void T60f86(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SYSTEM.compile_all */
extern void T60f84(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_DYNAMIC_SYSTEM.compile_all */
extern T0* T60f84ac1(GE_context* ac, T0* a1);
/* [detachable] ET_DYNAMIC_SYSTEM.compile_all_features */
extern void T60f88(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.classes_do_recursive_until */
extern void T55f167(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T55f167ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature [detachable] ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T55f167ac2(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_SYSTEM_PROCESSOR.compile_all */
extern void T61f56(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_SYSTEM_PROCESSOR.compile_all */
extern T0* T61f56ac1(GE_context* ac, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.compile_classes */
extern void T61f67(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.compile_degree_3 */
extern void T61f83(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.report_degree_3_metrics */
extern void T61f95(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.report_degree_metrics */
extern void T61f103(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_SYSTEM_PROCESSOR.report_processor_metrics */
extern void T61f104(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_SYSTEM_PROCESSOR.report_processed_class_count_stack */
extern void T61f105(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_PROCESSOR.total_processed_class_count */
extern T6 T61f40(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_PROCESSOR.set_implementation_internal_error */
extern void T61f94(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.check_implementation_validity */
extern void T61f93(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.reset_processed_class_count */
extern void T61f102(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_PROCESSOR.reset_total_processed_class_count */
extern void T61f101(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_PROCESSOR.compile_degree_4 */
extern void T61f82(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.report_degree_4_metrics */
extern void T61f92(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.set_interface_internal_error */
extern void T61f91(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.check_interface_validity */
extern void T61f90(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.set_flattening_internal_error */
extern void T61f89(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.flatten_features */
extern void T61f88(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.set_ancestors_internal_error */
extern void T61f87(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.build_ancestors */
extern void T61f86(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.compile_degree_5 */
extern void T61f81(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [detachable] ET_SYSTEM_PROCESSOR.check_provider_validity */
extern void T61f85(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.compile_degree_5_2 */
extern void T61f84(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [detachable] ET_SYSTEM_PROCESSOR.report_degree_5_2_metrics */
extern void T61f100(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.set_syntax_internal_error */
extern void T61f99(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.parse_classes */
extern void T61f98(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.remove_unmarked_classes */
extern void T61f97(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].keep_first */
extern void T445f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].replace */
extern void T445f17(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_CLASS.is_marked */
extern T1 T72f174(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_PROCESSOR.parse_marked_classes */
extern void T61f96(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.nested_benchmark_start_time */
extern T0* T61f43(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.compile_all */
extern void T364f58(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_SYSTEM_MULTIPROCESSOR.compile_all */
extern T0* T364f58ac1(GE_context* ac, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.compile_classes */
extern void T364f69(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.compile_degree_3 */
extern void T364f83(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.report_degree_3_metrics */
extern void T364f98(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.report_degree_metrics */
extern void T364f106(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.report_processor_metrics_recursive */
extern void T364f107(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.report_processor_metrics */
extern void T364f108(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.report_processed_class_count_stack */
extern void T364f109(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.total_processed_class_count */
extern T6 T364f42(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_SYSTEM_PROCESSOR].item */
extern T0* T672f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.total_processed_class_count_recursive */
extern T6 T364f41(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_implementation_internal_error */
extern void T364f97(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.check_implementation_validity */
extern void T364f96(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_SYSTEM_MULTIPROCESSOR.check_implementation_validity */
extern T0* T364f96ac1(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.check_implementation_validity */
extern void T364f96p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.reset_processed_class_count */
extern void T364f105(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.reset_total_processed_class_count */
extern void T364f104(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.tokens */
extern T0* T364f47(GE_context* ac, T0* C);
/* [detachable] WORKER_THREAD.launch */
extern void T673f10(GE_context* ac, T0* C);
/* [detachable] WORKER_THREAD.launch_with_attributes */
extern void T673f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] WORKER_THREAD.last_created_thread */
extern T14 T673f6(GE_context* ac, T0* C);
/* [detachable] WORKER_THREAD.thr_set_terminated */
extern void T673f14(GE_context* ac, T0* C, T1 a1);
/* [detachable] WORKER_THREAD.thr_set_terminated */
extern void T673a14(T0* C, T1 a1);
/* [detachable] WORKER_THREAD.thr_main */
extern void T673f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] WORKER_THREAD.thr_main */
extern void T673a13(T0* C, T6 a1);
/* [detachable] WORKER_THREAD.execute_procedure */
extern void T673f16(GE_context* ac, T0* C);
/* [detachable] WORKER_THREAD.default_pointer */
extern T14 T673f8(GE_context* ac, T0* C);
/* [detachable] WORKER_THREAD.create_thread_with_attr */
extern void T673f15(GE_context* ac, T0* C, T0* a1, T14 a2, T14 a3, T14 a4);
/* [detachable] THREAD_ATTRIBUTES.item */
extern T14 T1356f4(GE_context* ac, T0* C);
/* [detachable] WORKER_THREAD.is_launchable */
extern T1 T673f5(GE_context* ac, T0* C);
/* [detachable] MUTEX.is_set */
extern T1 T132f5(GE_context* ac, T0* C);
/* [detachable] CELL [[attached] BOOLEAN].put */
extern void T1357f2(GE_context* ac, T0* C, T1 a1);
/* [detachable] CELL [[attached] BOOLEAN].put */
extern T0* T1357c2(GE_context* ac, T1 a1);
/* [detachable] WORKER_THREAD.is_last_launch_successful_cell */
extern T0* T673f7(GE_context* ac, T0* C);
/* [detachable] THREAD_ATTRIBUTES.make */
extern T0* T1356c7(GE_context* ac);
/* [detachable] THREAD_ATTRIBUTES.set_priority */
extern void T1356f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] THREAD_ATTRIBUTES.c_set_priority */
extern void T1356f10(GE_context* ac, T0* C, T14 a1, T6 a2);
/* [detachable] THREAD_ATTRIBUTES.default_priority */
extern T6 T1356f5(GE_context* ac, T0* C);
/* [detachable] THREAD_ATTRIBUTES.mem_make */
extern void T1356f8(GE_context* ac, T0* C);
/* [detachable] THREAD_ATTRIBUTES.structure_size */
extern T6 T1356f6(GE_context* ac, T0* C);
/* [detachable] WORKER_THREAD.make */
extern T0* T673c9(GE_context* ac, T0* a1);
/* [detachable] WORKER_THREAD.thread_make */
extern void T673f11(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.compile_degree_4 */
extern void T364f82(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.report_degree_4_metrics */
extern void T364f95(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_interface_internal_error */
extern void T364f94(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.check_interface_validity */
extern void T364f93(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_flattening_internal_error */
extern void T364f92(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.flatten_features */
extern void T364f91(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_ancestors_internal_error */
extern void T364f90(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.build_ancestors */
extern void T364f89(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.compile_degree_5 */
extern void T364f81(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.check_provider_validity */
extern void T364f88(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.compile_degree_5_2 */
extern void T364f87(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.report_degree_5_2_metrics */
extern void T364f103(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_syntax_internal_error */
extern void T364f102(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.parse_classes */
extern void T364f101(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_SYSTEM_MULTIPROCESSOR.parse_classes */
extern T0* T364f101ac1(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.parse_classes */
extern void T364f101p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.remove_unmarked_classes */
extern void T364f100(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.parse_marked_classes */
extern void T364f99(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_SYSTEM_MULTIPROCESSOR.parse_marked_classes */
extern T0* T364f99ac1(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.parse_marked_classes */
extern void T364f99p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.nested_benchmark_start_time */
extern T0* T364f45(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SYSTEM.set_dynamic_type_set_builder */
extern void T60f81(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern T0* T69c99(GE_context* ac, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_map */
extern T0* T370c33(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T370f35(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_sparse_container */
extern void T370f42(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T370f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].new_cursor */
extern T0* T370f25(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make */
extern T0* T678c6(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_slots */
extern void T370f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].new_modulus */
extern T6 T370f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_clashes */
extern void T370f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_key_storage */
extern void T370f44(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_item_storage */
extern void T370f43(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_feature */
extern T0* T69f92(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_feature */
extern T0* T69f69(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.make */
extern T0* T458c77(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DEFERRED_PROCEDURE.make */
extern void T458f77p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_TOKEN_CONSTANTS.deferred_keyword */
extern T0* T71f275(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_deferred */
extern T0* T402c52(GE_context* ac);
/* [detachable] ET_DEFERRED_PROCEDURE.tokens */
extern T0* T458f28(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_type */
extern T0* T69f79(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.make */
extern T0* T369c73(GE_context* ac, T0* a1);
/* [detachable] ET_ADAPTED_BASE_CLASS_CHECKER.make */
extern T0* T393c9(GE_context* ac, T0* a1);
/* [detachable] ET_ADAPTED_BASE_CLASS_CHECKER.tokens */
extern T0* T393f7(GE_context* ac, T0* C);
/* [detachable] ET_ADAPTED_BASE_CLASS_CHECKER.make */
extern void T393f9p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].make */
extern T0* T392c11(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].set_internal_cursor */
extern void T392f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].new_cursor */
extern T0* T392f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].make */
extern T0* T732c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].make */
extern T0* T730f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].make_empty */
extern T0* T731c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].default_create */
extern T0* T730c3(GE_context* ac);
/* [detachable] ET_CLIENT.make */
extern T0* T391c6(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_CLIENT_LIST.make_with_capacity */
extern T0* T390c13(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].make */
extern T0* T389c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].set_internal_cursor */
extern void T389f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].new_cursor */
extern T0* T389f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_INDEXING_TERM].make */
extern T0* T727c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM].make */
extern T0* T724f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_INDEXING_TERM].make_empty */
extern T0* T726c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM].default_create */
extern T0* T724c3(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].make */
extern T0* T388c11(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].set_internal_cursor */
extern void T388f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].new_cursor */
extern T0* T388f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ATTACHMENT_SCOPE].make */
extern T0* T723c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE].make */
extern T0* T722f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ATTACHMENT_SCOPE].make_empty */
extern T0* T721c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE].default_create */
extern T0* T722c3(GE_context* ac);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.make */
extern T0* T387c3(GE_context* ac);
/* [detachable] ET_ACROSS_CURSOR_SCOPE.make */
extern T0* T385c6(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].make */
extern T0* T718c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].set_internal_cursor */
extern void T718f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].new_cursor */
extern T0* T718f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ACROSS_COMPONENT].make */
extern T0* T1366c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT].make */
extern T0* T717f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ACROSS_COMPONENT].make_empty */
extern T0* T716c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT].default_create */
extern T0* T717c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_map */
extern T0* T384c41(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_with_equality_testers */
extern void T384f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_sparse_container */
extern void T384f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].set_internal_cursor */
extern void T384f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].new_cursor */
extern T0* T384f26(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make */
extern T0* T713c8(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_slots */
extern void T384f60(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].new_modulus */
extern T6 T384f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_clashes */
extern void T384f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_key_storage */
extern void T384f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_item_storage */
extern void T384f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT].make */
extern T0* T704f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT].make_empty */
extern T0* T703c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT].default_create */
extern T0* T704c3(GE_context* ac);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.make */
extern T0* T383c8(GE_context* ac, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.tokens */
extern T0* T383f6(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST_SCOPE.make */
extern T0* T382c6(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].make */
extern T0* T712c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T712f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T712f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_NAMED_OBJECT_TEST].make */
extern T0* T1365c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST].make */
extern T0* T711f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_NAMED_OBJECT_TEST].make_empty */
extern T0* T710c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST].default_create */
extern T0* T711c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_map */
extern T0* T381c39(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_with_equality_testers */
extern void T381f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_sparse_container */
extern void T381f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T381f59(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T381f26(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make */
extern T0* T706c8(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_slots */
extern void T381f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].new_modulus */
extern T6 T381f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_clashes */
extern void T381f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_key_storage */
extern void T381f56(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_item_storage */
extern void T381f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].make */
extern T0* T380c12(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].set_internal_cursor */
extern void T380f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].new_cursor */
extern T0* T380f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT].make */
extern T0* T705c5(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].make */
extern T0* T379c11(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].set_internal_cursor */
extern void T379f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].new_cursor */
extern T0* T379f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].make */
extern T0* T702c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].make */
extern T0* T699f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].make_empty */
extern T0* T701c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].default_create */
extern T0* T699c3(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].make */
extern T0* T378c11(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].set_internal_cursor */
extern void T378f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].new_cursor */
extern T0* T378f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].make */
extern T0* T698c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].make */
extern T0* T695f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].make_empty */
extern T0* T697c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].default_create */
extern T0* T695c3(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].make */
extern T0* T377c11(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].set_internal_cursor */
extern void T377f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].new_cursor */
extern T0* T377f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].make */
extern T0* T694c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].make */
extern T0* T691f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].make_empty */
extern T0* T693c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].default_create */
extern T0* T691c3(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].make */
extern T0* T376c11(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].set_internal_cursor */
extern void T376f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].new_cursor */
extern T0* T376f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].make */
extern T0* T690c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].make */
extern T0* T687f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].make_empty */
extern T0* T689c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].default_create */
extern T0* T687c3(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].make */
extern T0* T375c12(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].set_internal_cursor */
extern void T375f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].new_cursor */
extern T0* T375f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_INLINE_AGENT].make */
extern T0* T686c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_AGENT].make */
extern T0* T683f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_INLINE_AGENT].make_empty */
extern T0* T685c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_AGENT].default_create */
extern T0* T683c3(GE_context* ac);
/* [detachable] ET_FEATURE_CHECKER.dummy_feature */
extern T0* T369f48(GE_context* ac, T0* C);
/* [detachable] ET_TYPE_CHECKER.make */
extern T0* T373c22(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS].make */
extern T0* T682c12(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS].set_internal_cursor */
extern void T682f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS].new_cursor */
extern T0* T682f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_CLASS].make */
extern T0* T1362c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_CLASS].make */
extern T0* T1359f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ADAPTED_CLASS].make_empty */
extern T0* T1361c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_CLASS].default_create */
extern T0* T1359c3(GE_context* ac);
/* [detachable] ET_TYPE_CHECKER.dummy_feature */
extern T0* T373f16(GE_context* ac, T0* C);
/* [detachable] ET_TYPE_CHECKER.tokens */
extern T0* T373f19(GE_context* ac, T0* C);
/* [detachable] ET_TYPE_CHECKER.make */
extern void T373f22p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.make */
extern void T369f73p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make_feature_checker */
extern void T69f106(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_context */
extern T0* T69f68(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern void T69f106p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SYSTEM.set_new_instance_types */
extern void T60f80(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SYSTEM.set_catcall_warning_mode */
extern void T60f79(GE_context* ac, T0* C, T1 a1);
/* [detachable] GEC.catcall_warning_mode */
extern T1 T24f43(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SYSTEM.set_catcall_error_mode */
extern void T60f78(GE_context* ac, T0* C, T1 a1);
/* [detachable] GEC.catcall_error_mode */
extern T1 T24f42(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SYSTEM.set_full_class_checking */
extern void T60f77(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_DYNAMIC_SYSTEM.make */
extern T0* T60c76(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #1 in feature [detachable] ET_DYNAMIC_SYSTEM.make */
extern T0* T60f76ac1(GE_context* ac, T6 a1);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.make */
extern T0* T225c13(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].make */
extern T0* T221c33(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].make_with_equality_testers */
extern void T221f36(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].make_sparse_container */
extern void T221f44(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].set_internal_cursor */
extern void T221f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].new_cursor */
extern T0* T221f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].make */
extern T0* T597c4(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].make_slots */
extern void T221f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].make_clashes */
extern void T221f51(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].make_key_storage */
extern void T221f50(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] STRING_8].make_item_storage */
extern void T221f49(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_SYSTEM.make_basic_types */
extern void T60f83(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_PROCESSOR.compile */
extern void T61f55(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_SYSTEM_PROCESSOR.compile */
extern T0* T61f55ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature [detachable] ET_SYSTEM_PROCESSOR.compile */
extern T0* T61f55ac2(GE_context* ac, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.compile_marked_classes */
extern void T61f68(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.compile */
extern void T364f57(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_SYSTEM_MULTIPROCESSOR.compile */
extern T0* T364f57ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature [detachable] ET_SYSTEM_MULTIPROCESSOR.compile */
extern T0* T364f57ac2(GE_context* ac, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.compile_marked_classes */
extern void T364f70(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.benchmark_start_time */
extern T0* T61f41(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.benchmark_start_time */
extern T0* T364f43(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_PROCESSOR.set_flat_dbc_mode */
extern void T61f54(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_PROCESSOR.set_flat_dbc_mode_only */
extern void T61f66(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_flat_dbc_mode */
extern void T364f56(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_flat_dbc_mode_only */
extern void T364f68(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_PROCESSOR.set_flat_mode */
extern void T61f53(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_PROCESSOR.set_flat_mode_only */
extern void T61f65(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_flat_mode */
extern void T364f55(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_flat_mode_only */
extern void T364f67(GE_context* ac, T0* C, T1 a1);
/* [detachable] GEC.is_gelint */
extern T1 T24f41(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_PROCESSOR.set_metrics_shown */
extern void T61f52(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_PROCESSOR.set_metrics_shown_only */
extern void T61f64(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_metrics_shown */
extern void T364f54(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_metrics_shown_only */
extern void T364f66(GE_context* ac, T0* C, T1 a1);
/* [detachable] GEC.is_metrics */
extern T1 T24f40(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_PROCESSOR.set_nested_benchmark_shown */
extern void T61f51(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_PROCESSOR.set_nested_benchmark_shown_only */
extern void T61f63(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_nested_benchmark_shown */
extern void T364f53(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_nested_benchmark_shown_only */
extern void T364f65(GE_context* ac, T0* C, T1 a1);
/* [detachable] GEC.is_nested_benchmark */
extern T1 T24f39(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_PROCESSOR.set_benchmark_shown */
extern void T61f50(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_PROCESSOR.set_benchmark_shown_only */
extern void T61f62(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_benchmark_shown */
extern void T364f52(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_benchmark_shown_only */
extern void T364f64(GE_context* ac, T0* C, T1 a1);
/* [detachable] GEC.is_silent */
extern T1 T24f37(GE_context* ac, T0* C);
/* [detachable] GEC.is_no_benchmark */
extern T1 T24f38(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_PROCESSOR.set_ise_version */
extern void T61f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.set_ise_version_only */
extern void T61f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.set_ecma_version_only */
extern void T61f80(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_ise_version */
extern void T364f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_ise_version_only */
extern void T364f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_default_keyword_usage_only */
extern void T364f80(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_ecma_version_only */
extern void T364f79(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_use_detachable_keyword_only */
extern void T364f78(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_use_attached_keyword_only */
extern void T364f77(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_use_reference_keyword_only */
extern void T364f76(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_use_note_keyword_only */
extern void T364f75(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_use_attribute_keyword_only */
extern void T364f74(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_PROCESSOR.set_error_handler */
extern void T61f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.set_error_handler_only */
extern void T61f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_error_handler */
extern void T364f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_error_handler_only */
extern void T364f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] GEC.thread_count */
extern T6 T24f36(GE_context* ac, T0* C);
/* [detachable] AP_INTEGER_OPTION.parameter */
extern T6 T46f14(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] INTEGER_32].last */
extern T6 T155f7(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] INTEGER_32].is_empty */
extern T1 T155f6(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.set_verbose */
extern void T50f179(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ERROR_HANDLER.set_verbose */
extern void T34f179(GE_context* ac, T0* C, T1 a1);
/* [detachable] GEC.is_verbose */
extern T1 T24f35(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.set_ise */
extern void T50f178(GE_context* ac, T0* C);
/* [detachable] ET_ERROR_HANDLER.set_ise */
extern void T34f178(GE_context* ac, T0* C);
/* [detachable] GEC.parse_ecf_file */
extern void T24f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] UC_UTF8_STRING.to_boolean */
extern T1 T862f62(GE_context* ac, T0* C);
/* [detachable] STRING_8.to_boolean */
extern T1 T17f43(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.is_boolean */
extern T1 T862f32(GE_context* ac, T0* C);
/* [detachable] STRING_8.is_boolean */
extern T1 T17f42(GE_context* ac, T0* C);
/* [detachable] ET_ECF_ERROR_HANDLER.has_error */
extern T1 T53f5(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.parse_file */
extern void T52f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM_PARSER.parse_file */
extern T0* T52f210ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature [detachable] ET_ECF_SYSTEM_PARSER.parse_file */
extern T0* T52f210ac2(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8]].set_rout_disp_final */
extern void T166f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] ET_ECF_SYSTEM_PARSER.build_system */
extern void T52f213(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM_PARSER.build_system */
extern T0* T52f213ac1(GE_context* ac);
/* [detachable] ET_ECF_ADAPTED_LIBRARY.propagate_read_only */
extern void T202f35(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_read_only */
extern void T809f179(GE_context* ac, T0* C, T1 a1);
/* [detachable] DS_CELL [detachable ET_ECF_SYSTEM].put */
extern void T158f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].wipe_out */
extern void T171f36(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].slots_wipe_out */
extern void T171f45(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].clashes_wipe_out */
extern void T171f44(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].key_storage_wipe_out */
extern void T171f43(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].item_storage_wipe_out */
extern void T171f42(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY].keep_head */
extern void T493f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY].set_count */
extern void T493f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].unset_found_item */
extern void T171f41(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].move_all_cursors_after */
extern void T171f40(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].set_next_cursor */
extern void T496f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].set_after */
extern void T496f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].wipe_out */
extern void T169f44(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].slots_wipe_out */
extern void T169f55(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].clashes_wipe_out */
extern void T169f54(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].key_storage_wipe_out */
extern void T169f53(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].item_storage_wipe_out */
extern void T169f52(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_ECF_LIBRARY].keep_head */
extern void T489f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_LIBRARY].set_count */
extern void T489f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].unset_found_item */
extern void T169f51(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].move_all_cursors_after */
extern void T169f50(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8].set_next_cursor */
extern void T488f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8].set_after */
extern void T488f9(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.parse_dotnet_assemblies */
extern void T52f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].force_last_new */
extern void T171f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].key_storage_put */
extern void T171f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].item_storage_put */
extern void T171f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY].force */
extern void T497f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY].fill_with */
extern void T493f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY].extend */
extern void T493f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].slots_put */
extern void T171f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].clashes_put */
extern void T171f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].slots_item */
extern T6 T171f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].hash_position */
extern T6 T171f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].resize */
extern void T171f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].clashes_resize */
extern void T171f56(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].special_integer_ */
extern T0* T171f32(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].key_storage_resize */
extern void T171f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].item_storage_resize */
extern void T171f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T497f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T493f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].key_storage_item */
extern T0* T171f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].clashes_item */
extern T6 T171f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].slots_resize */
extern void T171f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].new_modulus */
extern T6 T171f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].new_capacity */
extern T6 T171f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_AST_FACTORY.new_dotnet_assembly */
extern T0* T157f2(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.make */
extern T0* T206c103(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.make_from_system */
extern void T206f104(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_default_class_mapping */
extern void T206f109(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T206f163(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_class_mapping */
extern void T206f164(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_MASTER_CLASS.set_mapped_class */
extern void T552f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.wide_character_ref_class_name */
extern T0* T71f191(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.character_32_ref_class_name */
extern T0* T71f173(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_wide_character_class_mapping */
extern void T206f162(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_string_class_mapping */
extern void T206f161(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.string_class_name */
extern T0* T71f183(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.string_8_class_name */
extern T0* T71f172(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_real_ref_class_mapping */
extern void T206f160(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.real_ref_class_name */
extern T0* T71f190(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.real_32_ref_class_name */
extern T0* T71f171(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_real_class_mapping */
extern void T206f159(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_natural_ref_class_mapping */
extern void T206f158(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.natural_ref_class_name */
extern T0* T71f189(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.natural_32_ref_class_name */
extern T0* T71f170(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_natural_class_mapping */
extern void T206f157(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_integer_ref_class_mapping */
extern void T206f156(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.integer_ref_class_name */
extern T0* T71f188(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_32_ref_class_name */
extern T0* T71f169(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_integer_class_mapping */
extern void T206f155(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_double_ref_class_mapping */
extern void T206f154(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.double_ref_class_name */
extern T0* T71f187(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.real_64_ref_class_name */
extern T0* T71f168(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_double_class_mapping */
extern void T206f153(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_character_ref_class_mapping */
extern void T206f152(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.character_ref_class_name */
extern T0* T71f186(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.character_8_ref_class_name */
extern T0* T71f167(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_character_class_mapping */
extern void T206f151(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_kernel_types */
extern void T206f108(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T206f150(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.make */
extern T0* T70c125(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T206f149(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.identity_type */
extern T0* T71f177(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_type_type */
extern void T206f148(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.detachable_like_current */
extern T0* T71f185(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.detachable_keyword */
extern T0* T71f174(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_detachable */
extern T0* T402c47(GE_context* ac);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_system_string_type */
extern void T206f147(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.system_string_class_name */
extern T0* T71f184(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_system_object_type */
extern void T206f146(GE_context* ac, T0* C);
/* [detachable] ET_PARENT_LIST.put_first */
extern void T550f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_ITEM].force */
extern void T1334f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_PARENT_ITEM].fill_with */
extern void T1333f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_PARENT_ITEM].extend */
extern void T1333f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_LIST.fixed_array */
extern T0* T550f5(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_ITEM].default_create */
extern T0* T1334c2(GE_context* ac);
/* [detachable] ET_PARENT_LIST.make_with_capacity */
extern T0* T550c11(GE_context* ac, T6 a1);
/* [detachable] ET_PARENT_LIST.make_with_capacity */
extern void T550f11p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_ITEM].make */
extern T0* T1334f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_PARENT_ITEM].make_empty */
extern T0* T1333c4(GE_context* ac, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.inherit_keyword */
extern T0* T71f276(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_inherit */
extern T0* T402c53(GE_context* ac);
/* [detachable] ET_PARENT_LIST.tokens */
extern T0* T550f9(GE_context* ac, T0* C);
/* [detachable] ET_PARENT.make */
extern T0* T549c11(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_PARENT.tokens */
extern T0* T549f9(GE_context* ac, T0* C);
/* [detachable] ET_PARENT.has_feature_adaptation */
extern T1 T549f8(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_string_type */
extern void T206f145(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_string_32_type */
extern void T206f144(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_CONVERT_FEATURE.make */
extern T0* T551c6(GE_context* ac, T0* a1);
/* [detachable] ET_BRACED_TYPE_LIST.make */
extern T0* T1335c8(GE_context* ac);
/* [detachable] ET_BRACED_TYPE_LIST.make */
extern void T1335f8p1(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE_ITEM].make */
extern T0* T1656f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_TYPE_ITEM].make_empty */
extern T0* T1655c4(GE_context* ac, T6 a1);
/* [detachable] ET_BRACED_TYPE_LIST.fixed_array */
extern T0* T1335f6(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE_ITEM].default_create */
extern T0* T1656c2(GE_context* ac);
/* [detachable] ET_TOKEN_CONSTANTS.right_brace_symbol */
extern T0* T71f702(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.make_right_brace */
extern T0* T342c95(GE_context* ac);
/* [detachable] ET_TOKEN_CONSTANTS.left_brace_symbol */
extern T0* T71f701(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.make_left_brace */
extern T0* T342c94(GE_context* ac);
/* [detachable] ET_BRACED_TYPE_LIST.tokens */
extern T0* T1335f5(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.string_32_class_name */
extern T0* T71f182(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_string_8_type */
extern void T206f143(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_special_type */
extern void T206f142(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_routine_type */
extern void T206f141(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_real_64_type */
extern void T206f140(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_real_32_type */
extern void T206f139(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_real_type */
extern void T206f138(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_procedure_type */
extern void T206f137(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_predicate_type */
extern void T206f136(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_pointer_type */
extern void T206f135(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T206f134(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T206f133(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T206f132(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T206f131(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_natural_type */
extern void T206f130(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_iterable_type */
extern void T206f129(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T206f128(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.ise_exception_manager_class_name */
extern T0* T71f181(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T206f127(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T206f126(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T206f125(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T206f124(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_integer_type */
extern void T206f123(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T206f122(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.immutable_string_32_class_name */
extern T0* T71f180(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_function_type */
extern void T206f121(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T206f120(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.exception_manager_class_name */
extern T0* T71f179(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_exception_type */
extern void T206f119(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.exception_class_name */
extern T0* T71f178(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_double_type */
extern void T206f118(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_character_32_type */
extern void T206f117(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_character_8_type */
extern void T206f116(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_character_type */
extern void T206f115(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_boolean_type */
extern void T206f114(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_array_type */
extern void T206f113(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_tuple_type */
extern void T206f112(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T559c17(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_none_type */
extern void T206f111(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.add_first_imported_class */
extern void T552f52(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].force_first */
extern void T1336f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].put */
extern void T1336f23(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].move_cursors_right */
extern void T1336f30(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].move_right */
extern void T1336f29(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].put_last */
extern void T1336f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.none_class_name */
extern T0* T71f176(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_any_type */
extern void T206f110(GE_context* ac, T0* C);
/* [detachable] ET_CLIENT_LIST.put_first */
extern void T390f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_ITEM].force */
extern void T729f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CLIENT_ITEM].fill_with */
extern void T728f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CLIENT_ITEM].extend */
extern void T728f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.detachable_separate_type_mark */
extern T0* T71f175(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.make */
extern T0* T553c23(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.separate_keyword */
extern T0* T71f243(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_separate */
extern T0* T402c50(GE_context* ac);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.make_adapted */
extern void T206f107(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T206f88(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T206f106(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.unknown_convert_feature */
extern T0* T71f166(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.unknown_generic_class_type */
extern T0* T71f165(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.make */
extern T0* T235c31(GE_context* ac);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.make */
extern void T235f31p1(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.empty_actual_parameters */
extern T0* T71f164(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.unknown_tuple_type */
extern T0* T71f163(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.unknown_parents */
extern T0* T71f161(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.unknown_parent */
extern T0* T71f160(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.unknown_class_type */
extern T0* T71f159(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.initialize */
extern void T206f105(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].set_key_equality_tester */
extern void T220f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T206f87(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_map */
extern T0* T220c38(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_with_equality_testers */
extern void T220f40(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_sparse_container */
extern void T220f41(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].set_internal_cursor */
extern void T220f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_slots */
extern void T220f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_clashes */
extern void T220f44(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_key_storage */
extern void T220f43(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_item_storage */
extern void T220f42(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_dotnet_assembly */
extern void T208f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].found_item */
extern T0* T171f24(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].item_storage_item */
extern T0* T171f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].found */
extern T1 T171f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].search */
extern void T171f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].search_position */
extern void T171f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.operating_system */
extern T0* T52f26(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.full_filename */
extern T0* T52f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_SYSTEM_PARSER.windows_file_system */
extern T0* T52f19(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.file_system */
extern T0* T52f18(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.unix_file_system */
extern T0* T52f32(GE_context* ac, T0* C);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.pathname */
extern T0* T208f22(GE_context* ac, T0* C);
/* [detachable] ET_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T205f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_TARGET.fill_options */
extern void T56f55(GE_context* ac, T0* C, T0* a1);
extern T1 T56f55ot1(T0* a1, T0** a2);
/* [detachable] ET_ECF_SYSTEM.set_trace_mode */
extern void T55f254(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ECF_SYSTEM.set_obsolete_routine_type_mode */
extern void T55f253(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ECF_LIBRARY.set_obsolete_routine_type_mode */
extern void T182f190(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ECF_SYSTEM.set_implicit_attachment_type_mark */
extern void T55f252(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.set_implicit_attachment_type_mark */
extern void T182f189(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.tokens */
extern T0* T56f29(GE_context* ac, T0* C);
/* [detachable] ET_ECF_OPTIONS.value */
extern T0* T427f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.fill_capabilities */
extern void T56f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_target_type_attachment_mode */
extern void T55f260(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ECF_SYSTEM.set_attachment_type_conformance_mode */
extern void T55f259(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ECF_SYSTEM.set_multithreaded_mode */
extern void T55f258(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ECF_TARGET.string_ */
extern T0* T56f30(GE_context* ac, T0* C);
/* detachable ET_ECF_CAPABILITIES.support_value */
extern T0* T58f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CAPABILITIES.use_value */
extern T0* T58f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].found_item */
extern T0* T216f32(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].item_storage_item */
extern T0* T216f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].found */
extern T1 T216f31(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].search */
extern void T216f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].search_position */
extern void T216f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].hash_position */
extern T6 T216f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].key_storage_item */
extern T0* T216f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].clashes_item */
extern T6 T216f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].slots_item */
extern T6 T216f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_TARGET.fill_settings */
extern void T56f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_total_order_on_reals_mode */
extern void T55f257(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ECF_SYSTEM.set_exception_trace_mode */
extern void T55f256(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ECF_SYSTEM.set_console_application_mode */
extern void T55f255(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ECF_TARGET.fill_root */
extern void T56f59(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_ROOT_CLASS.fill_root */
extern void T773f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_root_creation */
extern void T55f271(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_root_type */
extern void T55f270(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ROOT_ALL_CLASSES.fill_root */
extern void T774f2(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.unset_root_type */
extern void T55f272(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].forth */
extern void T169f43(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].cursor_forth */
extern void T169f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].add_traversing_cursor */
extern void T169f64(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8].set_position */
extern void T488f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].remove_traversing_cursor */
extern void T169f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].clashes_item */
extern T6 T169f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].item_for_iteration */
extern T0* T169f31(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].cursor_item */
extern T0* T169f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].item_storage_item */
extern T0* T169f35(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].after */
extern T1 T169f28(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].cursor_after */
extern T1 T169f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8].after */
extern T1 T488f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].start */
extern void T169f42(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].cursor_start */
extern void T169f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].cursor_off */
extern T1 T169f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8].off */
extern T1 T488f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].is_empty */
extern T1 T169f23(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.parse_libraries */
extern void T52f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM_PARSER.parse_libraries */
extern T0* T52f216ac1(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_SYSTEM_PARSER.build_library */
extern void T52f219(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] DS_CELL [detachable ET_ECF_LIBRARY].put */
extern void T201f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_library */
extern T0* T52f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].force_last_new */
extern void T169f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].key_storage_put */
extern void T169f61(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].item_storage_put */
extern void T169f60(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY].force */
extern void T492f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_LIBRARY].fill_with */
extern void T489f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_LIBRARY].extend */
extern void T489f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].slots_put */
extern void T169f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].clashes_put */
extern void T169f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].slots_item */
extern T6 T169f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].hash_position */
extern T6 T169f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].resize */
extern void T169f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].clashes_resize */
extern void T169f68(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].special_integer_ */
extern T0* T169f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].key_storage_resize */
extern void T169f67(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].item_storage_resize */
extern void T169f66(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T492f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T489f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].key_storage_item */
extern T0* T169f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].slots_resize */
extern void T169f65(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].new_modulus */
extern T6 T169f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].new_capacity */
extern T6 T169f36(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.fill_system_config */
extern void T52f220(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T52f220ot1(T0* a1, T0** a2);
extern T1 T52f220ot2(T0* a1, T0** a2);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eltm_error */
extern void T53f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR_HANDLER.report_error */
extern void T53f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ERROR_HANDLER.report_error_message */
extern void T53f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ERROR_HANDLER.report_error_message */
extern void T53f32p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ERROR_HANDLER.message */
extern T0* T53f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ERROR.default_message */
extern T0* T209f9(GE_context* ac, T0* C);
/* [detachable] ET_ECF_ERROR.message */
extern T0* T209f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ERROR.arguments */
extern T0* T209f6(GE_context* ac, T0* C);
/* [detachable] KL_ARGUMENTS.make */
extern T0* T32c5(GE_context* ac);
/* [detachable] KL_ARGUMENTS.argument */
extern T0* T32f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] IMMUTABLE_STRING_32.as_string_8 */
extern T0* T19f9(GE_context* ac, T0* C);
/* [detachable] ARGUMENTS_32.argument */
extern T0* T421f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] ARRAY [[attached] IMMUTABLE_STRING_32].item */
extern T0* T890f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] ARGUMENTS_32.internal_argument_array */
extern T0* T421f3(GE_context* ac, T0* C);
/* [detachable] ARRAY [[attached] IMMUTABLE_STRING_32].put */
extern void T890f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ARRAY [[attached] IMMUTABLE_STRING_32].compare_objects */
extern void T890f7(GE_context* ac, T0* C);
/* [detachable] ARRAY [[attached] IMMUTABLE_STRING_32].make_filled */
extern T0* T890c6(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [detachable] ARRAY [[attached] IMMUTABLE_STRING_32].make_filled_area */
extern void T890f9(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] IMMUTABLE_STRING_32].make_filled */
extern T0* T891c6(GE_context* ac, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] IMMUTABLE_STRING_32].fill_with */
extern void T891f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] IMMUTABLE_STRING_32].extend */
extern void T891f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] SPECIAL [[attached] IMMUTABLE_STRING_32].make_empty */
extern void T891f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] IMMUTABLE_STRING_32].make_empty */
extern T0* T891c4(GE_context* ac, T6 a1);
/* [detachable] IMMUTABLE_STRING_32.make_empty */
extern T0* T19c16(GE_context* ac);
/* [detachable] IMMUTABLE_STRING_32.make */
extern void T19f17(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_ARGUMENTS.internal_arguments */
extern T0* T32f4(GE_context* ac, T0* C);
/* [detachable] ARGUMENTS_32.default_create */
extern T0* T421c5(GE_context* ac);
/* [detachable] ARRAY [[attached] STRING_8].valid_index */
extern T1 T323f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_STRING.to_integer */
extern T6 T862f29(GE_context* ac, T0* C);
/* [detachable] STRING_TO_INTEGER_CONVERTOR.parsed_integer */
extern T6 T419f13(GE_context* ac, T0* C);
/* [detachable] STRING_TO_INTEGER_CONVERTOR.parse_string_with_type */
extern void T419f17(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] STRING_TO_INTEGER_CONVERTOR.parse_character */
extern void T419f23(GE_context* ac, T0* C, T2 a1);
/* [detachable] STRING_TO_INTEGER_CONVERTOR.overflowed */
extern T1 T419f15(GE_context* ac, T0* C);
/* [detachable] STRING_TO_INTEGER_CONVERTOR.overflow_checker */
extern T0* T419f14(GE_context* ac, T0* C);
/* CHARACTER_8.is_digit */
extern T1 T2f26(GE_context* ac, T2* C);
/* [detachable] STRING_TO_INTEGER_CONVERTOR.reset */
extern void T419f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_STRING.ctoi_convertor */
extern T0* T862f52(GE_context* ac, T0* C);
/* [detachable] STRING_TO_INTEGER_CONVERTOR.set_trailing_separators_acceptable */
extern void T419f21(GE_context* ac, T0* C, T1 a1);
/* [detachable] STRING_TO_INTEGER_CONVERTOR.set_leading_separators_acceptable */
extern void T419f20(GE_context* ac, T0* C, T1 a1);
/* [detachable] STRING_TO_INTEGER_CONVERTOR.set_trailing_separators */
extern void T419f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] STRING_TO_INTEGER_CONVERTOR.set_leading_separators */
extern void T419f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] STRING_TO_INTEGER_CONVERTOR.make */
extern T0* T419c16(GE_context* ac);
/* [detachable] STRING_8.to_integer */
extern T6 T17f22(GE_context* ac, T0* C);
/* [detachable] STRING_8.ctoi_convertor */
extern T0* T17f23(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.is_integer */
extern T1 T862f28(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.is_valid_integer_or_natural */
extern T1 T862f51(GE_context* ac, T0* C, T6 a1);
/* [detachable] STRING_TO_INTEGER_CONVERTOR.is_integral_integer */
extern T1 T419f12(GE_context* ac, T0* C);
/* [detachable] STRING_8.is_integer */
extern T1 T17f26(GE_context* ac, T0* C);
/* [detachable] STRING_8.is_valid_integer_or_natural */
extern T1 T17f38(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_ERROR.string_ */
extern T0* T209f8(GE_context* ac, T0* C);
/* [detachable] ET_ECF_ERROR.make_eltm */
extern T0* T209c105(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR.filename */
extern T0* T209f14(GE_context* ac, T0* C);
/* [detachable] ET_ECF_ERROR.default_message_template */
extern T0* T209f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ERROR.add_dependent_universes */
extern void T209f116(GE_context* ac, T0* C, T0* a1);
extern T1 T209f116ot1(T0* a1, T0** a2);
/* [detachable] ET_ECF_TARGET.parent_path */
extern T0* T56f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].put_last */
extern void T872f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT].force */
extern void T1561f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_TARGET_PARENT].fill_with */
extern void T1560f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_TARGET_PARENT].extend */
extern void T1560f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].make */
extern void T872f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].make */
extern T0* T872c13(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].set_internal_cursor */
extern void T872f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].new_cursor */
extern T0* T872f9(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET_PARENT].make */
extern T0* T1562c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT].make */
extern T0* T1561f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_TARGET_PARENT].make_empty */
extern T0* T1560c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT].default_create */
extern T0* T1561c3(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].item */
extern T0* T870f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_ERROR.add_parent_path */
extern void T209f117(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].item */
extern T0* T872f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].force_last */
extern void T872f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].resize */
extern void T872f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT].aliased_resized_area */
extern T0* T1561f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_TARGET_PARENT].aliased_resized_area */
extern T0* T1560f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].new_capacity */
extern T6 T872f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].extendible */
extern T1 T872f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].make_default */
extern T0* T872c11(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].default_capacity */
extern T6 T872f8(GE_context* ac, T0* C);
/* detachable ET_ECF_TARGETS.target_by_name */
extern T0* T198f2(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_TARGETS.string_ */
extern T0* T198f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].item */
extern T0* T869f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_ERROR_HANDLER.report_etam_error */
extern void T53f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_ERROR.make_etam */
extern T0* T209c104(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_ECF_TARGETS.is_empty */
extern T1 T198f5(GE_context* ac, T0* C);
/* detachable ET_ECF_TARGETS.count */
extern T6 T198f3(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].forth */
extern void T430f12(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].cursor_forth */
extern void T854f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].add_traversing_cursor */
extern void T854f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].set_next_cursor */
extern void T430f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].remove_traversing_cursor */
extern void T854f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].set */
extern void T430f15(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eatb_error */
extern void T53f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_ERROR.make_eatb */
extern T0* T209c103(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_SYSTEM_PARSER.attribute_value */
extern T0* T52f51(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable XM_POSITION_TABLE.item */
extern T0* T164f2(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].forth */
extern void T858f11(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].cursor_forth */
extern void T859f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].add_traversing_cursor */
extern void T859f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].set_next_cursor */
extern void T858f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].remove_traversing_cursor */
extern void T859f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].set */
extern void T858f12(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].go_after */
extern void T858f10(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].cursor_go_after */
extern void T859f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].set_after */
extern void T858f13(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].cursor_off */
extern T1 T859f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].off */
extern T1 T858f7(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].item */
extern T0* T858f6(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].start */
extern void T858f9(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].cursor_start */
extern void T859f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].new_cursor */
extern T0* T859f5(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].make */
extern T0* T858c8(GE_context* ac, T0* a1);
/* detachable XM_POSITION_TABLE.has */
extern T1 T164f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.is_false */
extern T1 T52f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.is_true */
extern T1 T52f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_targets */
extern T0* T52f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* detachable ET_ECF_TARGETS.put_last */
extern void T198f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].force_last */
extern void T869f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET].force */
extern void T571f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_TARGET].fill_with */
extern void T569f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_TARGET].extend */
extern void T569f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].resize */
extern void T869f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET].aliased_resized_area */
extern T0* T571f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_TARGET].aliased_resized_area */
extern T0* T569f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].new_capacity */
extern T6 T869f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].extendible */
extern T1 T869f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_AST_FACTORY.new_targets */
extern T0* T157f6(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_TARGETS.make */
extern T0* T198c8(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].put_last */
extern void T869f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].make */
extern T0* T869c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].set_internal_cursor */
extern void T869f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].new_cursor */
extern T0* T869f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET].make */
extern T0* T1556c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET].make */
extern T0* T571f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_TARGET].make_empty */
extern T0* T569c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET].default_create */
extern T0* T571c3(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_target */
extern T0* T52f73(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
extern T1 T52f73ot1(T0* a1, T0** a2);
extern T1 T52f73ot2(T0* a1, T0** a2);
/* [detachable] ET_ECF_TARGET.set_notes */
extern void T56f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.set_post_compile_actions */
extern void T56f52(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.set_pre_compile_actions */
extern void T56f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.set_external_resources */
extern void T56f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.set_external_objects */
extern void T56f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.set_external_makes */
extern void T56f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.set_external_linker_flags */
extern void T56f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.set_external_libraries */
extern void T56f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.set_external_includes */
extern void T56f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.set_external_cflags */
extern void T56f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.set_class_mappings */
extern void T56f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.set_file_rules */
extern void T56f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.set_dotnet_assemblies */
extern void T56f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.set_libraries */
extern void T56f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.set_clusters */
extern void T56f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.adapt_target_options */
extern void T52f238(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.adapt_options */
extern void T52f240(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_OPTIONS.set_primary_value */
extern void T427f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_OPTIONS.primary_value */
extern T0* T427f11(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_SETTINGS.primary_value */
extern T0* T54f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.adapt_capabilities */
extern void T52f237(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_SYSTEM_PARSER.ecf_1_5_0 */
extern T0* T52f69(GE_context* ac, T0* C);
/* detachable ET_ECF_CAPABILITIES.set_primary_use_value */
extern void T58f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ECF_CAPABILITIES.set_primary_use_value_id */
extern void T58f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].force_last */
extern void T216f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].key_storage_put */
extern void T216f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].slots_put */
extern void T216f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].clashes_put */
extern void T216f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].resize */
extern void T216f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].clashes_resize */
extern void T216f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].special_integer_ */
extern T0* T216f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].key_storage_resize */
extern void T216f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].item_storage_resize */
extern void T216f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].slots_resize */
extern void T216f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].new_modulus */
extern T6 T216f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].new_capacity */
extern T6 T216f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].item_storage_put */
extern void T216f46(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].unset_found_item */
extern void T216f44(GE_context* ac, T0* C);
/* detachable ET_ECF_CAPABILITIES.set_primary_support_value */
extern void T58f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_SYSTEM_PARSER.ecf_1_11_0 */
extern T0* T52f59(GE_context* ac, T0* C);
/* detachable ET_ECF_CAPABILITIES.primary_use_value */
extern T0* T58f6(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CAPABILITIES.primary_use_value_id */
extern T0* T58f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CAPABILITIES.primary_support_value */
extern T0* T58f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.set_abstract */
extern void T56f38(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ECF_TARGET.set_version */
extern void T56f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_version */
extern T0* T52f116(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ECF_VERSION.set_copyright */
extern void T758f14(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_VERSION.set_company */
extern void T758f13(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_VERSION.set_product */
extern void T758f12(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_VERSION.make_major */
extern T0* T758c11(GE_context* ac, T6 a1);
/* detachable ET_ECF_VERSION.make_major_minor */
extern T0* T758c10(GE_context* ac, T6 a1, T6 a2);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eats_error */
extern void T53f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_ERROR.make_eats */
extern T0* T209c107(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_ECF_VERSION.make_major_minor_release */
extern T0* T758c9(GE_context* ac, T6 a1, T6 a2, T6 a3);
/* detachable ET_ECF_VERSION.make */
extern T0* T758c8(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eati_error */
extern void T53f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_ERROR.make_eati */
extern T0* T209c106(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_SYSTEM_PARSER.add_variable */
extern void T52f236(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_ECF_VARIABLES.set_primary_value */
extern void T59f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ECF_VARIABLES.primary_value */
extern T0* T59f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.add_setting */
extern void T52f235(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_TARGET.set_root */
extern void T56f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_root */
extern T0* T52f112(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ECF_ROOT_CLASS.set_cluster_name */
extern void T773f6(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_ROOT_CLASS.set_creation_procedure_name */
extern void T773f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_AST_FACTORY.new_root_class */
extern T0* T157f24(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_ROOT_CLASS.make */
extern T0* T773c4(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_AST_FACTORY.new_root_all_classes */
extern T0* T157f23(GE_context* ac, T0* C);
/* [detachable] ET_ECF_ROOT_ALL_CLASSES.make */
extern T0* T774c1(GE_context* ac);
/* [detachable] ET_ECF_TARGET.set_precompiled_library */
extern void T56f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_adapted_precompiled_library */
extern T0* T52f110(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM_PARSER.new_adapted_precompiled_library */
extern T0* T52f110ac1(GE_context* ac, T0* a1);
extern T1 T52f110ot1(T0* a1, T0** a2);
extern T1 T52f110ot2(T0* a1, T0** a2);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_OPTIONS]].set_rout_disp_final */
extern void T772f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* detachable ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_conditions */
extern void T756f29(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_visible_classes */
extern void T756f28(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_class_renamings */
extern void T756f27(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_class_options */
extern void T756f26(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].do_all */
extern void T769f35(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].item_storage_item */
extern T0* T769f33(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].clashes_item */
extern T6 T769f28(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_use_application_options */
extern void T756f24(GE_context* ac, T0* C, T1 a1);
/* detachable ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_read_only */
extern void T756f23(GE_context* ac, T0* C, T1 a1);
/* detachable ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_classname_prefix */
extern void T756f22(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_eifgens_location */
extern void T756f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_visible_classes */
extern T0* T52f139(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].force_last */
extern void T770f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS].force */
extern void T1523f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS].fill_with */
extern void T1524f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS].extend */
extern void T1524f7(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].resize */
extern void T770f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS].aliased_resized_area */
extern T0* T1523f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS].aliased_resized_area */
extern T0* T1524f3(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].new_capacity */
extern T6 T770f7(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].extendible */
extern T1 T770f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_AST_FACTORY.new_visible_classes */
extern T0* T157f41(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].make */
extern T0* T770c9(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].set_internal_cursor */
extern void T770f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].new_cursor */
extern T0* T770f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_VISIBLE_CLASS].make */
extern T0* T1525c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS].make */
extern T0* T1523f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS].make_empty */
extern T0* T1524c4(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS].default_create */
extern T0* T1523c3(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_visible_class */
extern T0* T52f171(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ECF_VISIBLE_CLASS.set_new_feature_name */
extern void T777f8(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_VISIBLE_CLASS.set_new_class_name */
extern void T777f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_VISIBLE_CLASS.set_feature_name */
extern void T777f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_AST_FACTORY.new_visible_class */
extern T0* T157f44(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_VISIBLE_CLASS.make */
extern T0* T777c5(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_renamings */
extern T0* T52f137(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_SYSTEM_PARSER.add_renaming */
extern void T52f241(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eatd_error */
extern void T53f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_ERROR.make_eatd */
extern T0* T209c115(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_AST_FACTORY.new_class_renamings */
extern T0* T157f40(GE_context* ac, T0* C);
/* [detachable] ET_ECF_AST_FACTORY.case_insensitive_string_equality_tester */
extern T0* T157f52(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_options */
extern T0* T52f135(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ECF_AST_FACTORY.new_options */
extern T0* T157f39(GE_context* ac, T0* C);
/* [detachable] ET_ECF_OPTIONS.make */
extern T0* T427c14(GE_context* ac);
/* Creation of agent #1 in feature [detachable] ET_ECF_OPTIONS.make */
extern T0* T427f14ac1(GE_context* ac, T0* a1);
/* [detachable] FUNCTION [[attached] TUPLE [[attached] STRING_8], [attached] INTEGER_32].set_rout_disp_final */
extern void T213f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] KL_STRING_ROUTINES.case_insensitive_hash_code */
extern T6 T83f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].set_hash_function */
extern void T211f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_AGENT_HASH_FUNCTION [[attached] STRING_8].make */
extern T0* T210c3(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_OPTIONS.string_ */
extern T0* T427f10(GE_context* ac, T0* C);
/* [detachable] ET_ECF_OPTIONS.case_insensitive_string_equality_tester */
extern T0* T427f9(GE_context* ac, T0* C);
/* detachable ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_description */
extern void T756f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_class_options */
extern T0* T52f134(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].force_last */
extern void T769f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].key_storage_put */
extern void T769f46(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].slots_put */
extern void T769f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].clashes_put */
extern void T769f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].slots_item */
extern T6 T769f26(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].hash_position */
extern T6 T769f23(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].resize */
extern void T769f43(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].clashes_resize */
extern void T769f51(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].special_integer_ */
extern T0* T769f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].key_storage_resize */
extern void T769f50(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].item_storage_resize */
extern void T769f49(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS].aliased_resized_area */
extern T0* T1521f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_OPTIONS].aliased_resized_area */
extern T0* T1518f4(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].key_storage_item */
extern T0* T769f22(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].slots_resize */
extern void T769f48(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].new_modulus */
extern T6 T769f24(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].new_capacity */
extern T6 T769f21(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].item_storage_put */
extern void T769f42(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS].force */
extern void T1521f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_OPTIONS].fill_with */
extern void T1518f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_OPTIONS].extend */
extern void T1518f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].search_position */
extern void T769f40(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].unset_found_item */
extern void T769f41(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].found_item */
extern T0* T769f25(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].found */
extern T1 T769f27(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].search */
extern void T769f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_AST_FACTORY.new_class_options */
extern T0* T157f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].set_key_equality_tester */
extern void T769f38(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_map */
extern T0* T769c34(GE_context* ac, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_with_equality_testers */
extern void T769f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_sparse_container */
extern void T769f47(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].set_internal_cursor */
extern void T769f56(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].new_cursor */
extern T0* T769f30(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make */
extern T0* T1522c4(GE_context* ac, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_slots */
extern void T769f55(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_clashes */
extern void T769f54(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_key_storage */
extern void T769f53(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_item_storage */
extern void T769f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS].make */
extern T0* T1521f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_OPTIONS].make_empty */
extern T0* T1518c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS].default_create */
extern T0* T1521c3(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_conditions */
extern T0* T52f132(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T52f132ot1(T0* a1, T0** a2);
extern T1 T52f132ot2(T0* a1, T0** a2);
/* [detachable] ET_ECF_ORED_CONDITIONS.put_last */
extern void T775f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].force_last */
extern void T1526f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS].force */
extern void T1818f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS].fill_with */
extern void T1819f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS].extend */
extern void T1819f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].resize */
extern void T1526f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS].aliased_resized_area */
extern T0* T1818f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS].aliased_resized_area */
extern T0* T1819f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].new_capacity */
extern T6 T1526f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].extendible */
extern T1 T1526f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_AST_FACTORY.new_ored_conditions */
extern T0* T157f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ORED_CONDITIONS.make */
extern T0* T775c6(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].put_last */
extern void T1526f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].make */
extern T0* T1526c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].set_internal_cursor */
extern void T1526f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].new_cursor */
extern T0* T1526f8(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ANDED_CONDITIONS].make */
extern T0* T1820c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS].make */
extern T0* T1818f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS].make_empty */
extern T0* T1819c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS].default_create */
extern T0* T1818c3(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_condition */
extern T0* T52f170(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T52f170ot1(T0* a1, T0** a2);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_version_condition */
extern T0* T52f188(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eabj_error */
extern void T53f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR.make_eabj */
extern T0* T209c114(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_MSIL_CLR_VERSION_CONDITION.make */
extern T0* T788c7(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ECF_COMPILER_VERSION_CONDITION.make */
extern T0* T787c7(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eabi_error */
extern void T53f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_ERROR.make_eabi */
extern T0* T209c113(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eabh_error */
extern void T53f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ECF_ERROR.make_eabh */
extern T0* T209c112(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eabg_error */
extern void T53f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR.make_eabg */
extern T0* T209c111(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eabf_error */
extern void T53f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR.make_eabf */
extern T0* T209c110(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] UT_VERSION.make_major_minor_revision */
extern T0* T43c21(GE_context* ac, T6 a1, T6 a2, T6 a3);
/* [detachable] UT_VERSION.make_major_minor */
extern T0* T43c18(GE_context* ac, T6 a1, T6 a2);
/* [detachable] UT_VERSION.make_major */
extern T0* T43c17(GE_context* ac, T6 a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_platform_condition */
extern T0* T52f187(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eatn_error */
extern void T53f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_ERROR.make_eatn */
extern T0* T209c109(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_AST_FACTORY.new_platform_condition */
extern T0* T157f51(GE_context* ac, T0* C, T0* a1, T1 a2);
/* detachable ET_ECF_PLATFORM_CONDITION.make */
extern T0* T785c9(GE_context* ac, T0* a1);
/* detachable ET_ECF_PLATFORM_CONDITION.make_excluded */
extern T0* T785c8(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eatx_error */
extern void T53f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_ERROR.make_eatx */
extern T0* T209c108(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_multithreaded_condition */
extern T0* T52f185(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_AST_FACTORY.new_concurrency_condition */
extern T0* T157f46(GE_context* ac, T0* C, T0* a1, T1 a2);
/* detachable ET_ECF_CONCURRENCY_CONDITION.make */
extern T0* T780c18(GE_context* ac, T0* a1);
/* detachable ET_ECF_CONCURRENCY_CONDITION.make_excluded */
extern T0* T780c17(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_dynamic_runtime_condition */
extern T0* T52f183(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_AST_FACTORY.new_dynamic_runtime_condition */
extern T0* T157f50(GE_context* ac, T0* C, T1 a1);
/* detachable ET_ECF_DYNAMIC_RUNTIME_CONDITION.make */
extern T0* T784c5(GE_context* ac, T1 a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_dotnet_condition */
extern T0* T52f181(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_AST_FACTORY.new_dotnet_condition */
extern T0* T157f49(GE_context* ac, T0* C, T1 a1);
/* detachable ET_ECF_DOTNET_CONDITION.make */
extern T0* T783c5(GE_context* ac, T1 a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_custom_condition */
extern T0* T52f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_AST_FACTORY.new_custom_condition */
extern T0* T157f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* detachable ET_ECF_CUSTOM_CONDITION.make */
extern T0* T782c13(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* detachable ET_ECF_CUSTOM_CONDITION.make_excluded */
extern T0* T782c12(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_void_safety_condition */
extern T0* T52f177(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_AST_FACTORY.new_void_safety_condition */
extern T0* T157f47(GE_context* ac, T0* C, T0* a1, T1 a2);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.make */
extern T0* T781c18(GE_context* ac, T0* a1);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.make_excluded */
extern T0* T781c17(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_concurrency_condition */
extern T0* T52f175(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ECF_ANDED_CONDITIONS.put_last */
extern void T776f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].force_last */
extern void T1527f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM].force */
extern void T1821f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_CONDITION_ITEM].fill_with */
extern void T1822f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_CONDITION_ITEM].extend */
extern void T1822f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].resize */
extern void T1527f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM].aliased_resized_area */
extern T0* T1821f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_CONDITION_ITEM].aliased_resized_area */
extern T0* T1822f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].new_capacity */
extern T6 T1527f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].extendible */
extern T1 T1527f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_build_condition */
extern T0* T52f173(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_AST_FACTORY.new_build_condition */
extern T0* T157f45(GE_context* ac, T0* C, T0* a1, T1 a2);
/* detachable ET_ECF_BUILD_CONDITION.make */
extern T0* T779c8(GE_context* ac, T0* a1);
/* detachable ET_ECF_BUILD_CONDITION.make_excluded */
extern T0* T779c7(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_AST_FACTORY.new_anded_conditions */
extern T0* T157f43(GE_context* ac, T0* C);
/* detachable ET_ECF_ANDED_CONDITIONS.make_empty */
extern T0* T776c6(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].make */
extern T0* T1527c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].set_internal_cursor */
extern void T1527f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].new_cursor */
extern T0* T1527f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CONDITION_ITEM].make */
extern T0* T1823c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM].make */
extern T0* T1821f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_CONDITION_ITEM].make_empty */
extern T0* T1822c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM].default_create */
extern T0* T1821c3(GE_context* ac);
/* [detachable] ET_ECF_AST_FACTORY.new_adapted_precompiled_library */
extern T0* T157f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.make */
extern T0* T756c19(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.make_adapted_library */
extern void T756f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.default_read_only_value */
extern T1 T756f18(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.unknown_library */
extern T0* T71f258(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.make */
extern T0* T809c104(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_LIBRARY.make_from_system */
extern void T809f105(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_LIBRARY.set_default_class_mapping */
extern void T809f110(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_wide_character_ref_class_mapping */
extern void T809f164(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.set_class_mapping */
extern void T809f165(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_LIBRARY.set_wide_character_class_mapping */
extern void T809f163(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.set_string_class_mapping */
extern void T809f162(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.set_real_ref_class_mapping */
extern void T809f161(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.set_real_class_mapping */
extern void T809f160(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.set_natural_ref_class_mapping */
extern void T809f159(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.set_natural_class_mapping */
extern void T809f158(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.set_integer_ref_class_mapping */
extern void T809f157(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.set_integer_class_mapping */
extern void T809f156(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.set_double_ref_class_mapping */
extern void T809f155(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.set_double_class_mapping */
extern void T809f154(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.set_character_ref_class_mapping */
extern void T809f153(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.set_character_class_mapping */
extern void T809f152(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.tokens */
extern T0* T809f93(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_kernel_types */
extern void T809f109(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_wide_character_type */
extern void T809f151(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_typed_pointer_type */
extern void T809f150(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_type_type */
extern void T809f149(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_system_string_type */
extern void T809f148(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_system_object_type */
extern void T809f147(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_string_type */
extern void T809f146(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_string_32_type */
extern void T809f145(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_string_8_type */
extern void T809f144(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_special_type */
extern void T809f143(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_routine_type */
extern void T809f142(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_real_64_type */
extern void T809f141(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_real_32_type */
extern void T809f140(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_real_type */
extern void T809f139(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_procedure_type */
extern void T809f138(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_predicate_type */
extern void T809f137(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_pointer_type */
extern void T809f136(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_natural_64_type */
extern void T809f135(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_natural_32_type */
extern void T809f134(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_natural_16_type */
extern void T809f133(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_natural_8_type */
extern void T809f132(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_natural_type */
extern void T809f131(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_iterable_type */
extern void T809f130(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_ise_exception_manager_type */
extern void T809f129(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_integer_64_type */
extern void T809f128(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_integer_32_type */
extern void T809f127(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_integer_16_type */
extern void T809f126(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_integer_8_type */
extern void T809f125(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_integer_type */
extern void T809f124(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_immutable_string_32_type */
extern void T809f123(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_function_type */
extern void T809f122(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_exception_manager_type */
extern void T809f121(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_exception_type */
extern void T809f120(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_double_type */
extern void T809f119(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_character_32_type */
extern void T809f118(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_character_8_type */
extern void T809f117(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_character_type */
extern void T809f116(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_boolean_type */
extern void T809f115(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_array_type */
extern void T809f114(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_tuple_type */
extern void T809f113(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_none_type */
extern void T809f112(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_any_type */
extern void T809f111(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.make_adapted */
extern void T809f108(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_LIBRARY.default_read_only_value */
extern T1 T809f89(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.set_unknown_kernel_types */
extern void T809f107(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.initialize */
extern void T809f106(GE_context* ac, T0* C);
/* [detachable] ET_ADAPTED_DOTNET_ASSEMBLIES.make_empty */
extern T0* T205c6(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T576c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T576f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T576f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1344c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1343f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T1342c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T1343c3(GE_context* ac);
/* [detachable] ET_CLUSTERS.make_empty */
extern T0* T546c3(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLUSTER].make */
extern T0* T1331c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLUSTER].set_internal_cursor */
extern void T1331f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLUSTER].new_cursor */
extern T0* T1331f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLUSTER].make */
extern T0* T1654c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER].make */
extern T0* T1653f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_CLUSTER].make_empty */
extern T0* T1652c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER].default_create */
extern T0* T1653c3(GE_context* ac);
/* [detachable] ET_ADAPTED_LIBRARIES.make_empty */
extern T0* T183c6(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].make */
extern T0* T560c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].set_internal_cursor */
extern void T560f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].new_cursor */
extern T0* T560f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_LIBRARY].make */
extern T0* T1339c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY].make */
extern T0* T1338f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ADAPTED_LIBRARY].make_empty */
extern T0* T1337c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY].default_create */
extern T0* T1338c3(GE_context* ac);
/* [detachable] ET_LIBRARY.initialize */
extern void T809f106p1(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.class_name_tester */
extern T0* T809f88(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.unknown_system */
extern T0* T71f226(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.make */
extern T0* T35c132(GE_context* ac, T0* a1);
/* detachable ET_SYSTEM.set_default_class_mapping */
extern void T35f138(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_wide_character_ref_class_mapping */
extern void T35f192(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYSTEM.set_class_mapping */
extern void T35f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_SYSTEM.set_wide_character_class_mapping */
extern void T35f191(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYSTEM.set_string_class_mapping */
extern void T35f190(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYSTEM.set_real_ref_class_mapping */
extern void T35f189(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYSTEM.set_real_class_mapping */
extern void T35f188(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYSTEM.set_natural_ref_class_mapping */
extern void T35f187(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYSTEM.set_natural_class_mapping */
extern void T35f186(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYSTEM.set_integer_ref_class_mapping */
extern void T35f185(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYSTEM.set_integer_class_mapping */
extern void T35f184(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYSTEM.set_double_ref_class_mapping */
extern void T35f183(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYSTEM.set_double_class_mapping */
extern void T35f182(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYSTEM.set_character_ref_class_mapping */
extern void T35f181(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYSTEM.set_character_class_mapping */
extern void T35f180(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYSTEM.tokens */
extern T0* T35f129(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_kernel_types */
extern void T35f137(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_wide_character_type */
extern void T35f179(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_typed_pointer_type */
extern void T35f178(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_type_type */
extern void T35f177(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_system_string_type */
extern void T35f176(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_system_object_type */
extern void T35f175(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_string_type */
extern void T35f174(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_string_32_type */
extern void T35f173(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_string_8_type */
extern void T35f172(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_special_type */
extern void T35f171(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_routine_type */
extern void T35f170(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_real_64_type */
extern void T35f169(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_real_32_type */
extern void T35f168(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_real_type */
extern void T35f167(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_procedure_type */
extern void T35f166(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_predicate_type */
extern void T35f165(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_pointer_type */
extern void T35f164(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_natural_64_type */
extern void T35f163(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_natural_32_type */
extern void T35f162(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_natural_16_type */
extern void T35f161(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_natural_8_type */
extern void T35f160(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_natural_type */
extern void T35f159(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_iterable_type */
extern void T35f158(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_ise_exception_manager_type */
extern void T35f157(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_integer_64_type */
extern void T35f156(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_integer_32_type */
extern void T35f155(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_integer_16_type */
extern void T35f154(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_integer_8_type */
extern void T35f153(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_integer_type */
extern void T35f152(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_immutable_string_32_type */
extern void T35f151(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_function_type */
extern void T35f150(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_exception_manager_type */
extern void T35f149(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_exception_type */
extern void T35f148(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_double_type */
extern void T35f147(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_character_32_type */
extern void T35f146(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_character_8_type */
extern void T35f145(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_character_type */
extern void T35f144(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_boolean_type */
extern void T35f143(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_array_type */
extern void T35f142(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_tuple_type */
extern void T35f141(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_none_type */
extern void T35f140(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.add_first_local_class */
extern void T552f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.add_first_local_non_override_class */
extern void T552f80(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].force_first */
extern void T445f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].put */
extern void T445f33(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].move_cursors_right */
extern void T445f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].move_right */
extern void T445f35(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].put_last */
extern void T445f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.add_first_local_override_class */
extern void T552f79(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.add_first_local_ignored_class */
extern void T552f78(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NONE_GROUP.make */
extern T0* T844c30(GE_context* ac, T0* a1);
/* detachable ET_SYSTEM.set_any_type */
extern void T35f139(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.make_adapted */
extern void T35f136(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_SYSTEM.default_read_only_value */
extern T1 T35f114(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_unknown_kernel_types */
extern void T35f135(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_system_name */
extern void T35f134(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYSTEM.initialize */
extern void T35f133(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.initialize */
extern void T35f133p1(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.class_name_tester */
extern T0* T35f123(GE_context* ac, T0* C);
/* detachable ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.tokens */
extern T0* T756f17(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_actions */
extern T0* T52f107(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].force_last */
extern void T755f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION].force */
extern void T1514f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_ACTION].fill_with */
extern void T1515f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_ACTION].extend */
extern void T1515f7(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].resize */
extern void T755f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION].aliased_resized_area */
extern T0* T1514f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_ACTION].aliased_resized_area */
extern T0* T1515f3(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].new_capacity */
extern T6 T755f7(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].extendible */
extern T1 T755f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_AST_FACTORY.new_actions */
extern T0* T157f21(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].make */
extern T0* T755c9(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].set_internal_cursor */
extern void T755f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].new_cursor */
extern T0* T755f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ACTION].make */
extern T0* T1516c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION].make */
extern T0* T1514f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_ACTION].make_empty */
extern T0* T1515c4(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION].default_create */
extern T0* T1514c3(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_action */
extern T0* T52f130(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T52f130ot1(T0* a1, T0** a2);
extern T1 T52f130ot2(T0* a1, T0** a2);
/* detachable ET_ECF_ACTION.set_conditions */
extern void T768f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_ACTION.set_working_directory */
extern void T768f9(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_ACTION.set_must_succeed */
extern void T768f8(GE_context* ac, T0* C, T1 a1);
/* detachable ET_ECF_ACTION.set_description */
extern void T768f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_AST_FACTORY.new_action */
extern T0* T157f36(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_ACTION.make */
extern T0* T768c6(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.add_options */
extern void T52f234(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T52f234ot1(T0* a1, T0** a2);
extern T1 T52f234ot2(T0* a1, T0** a2);
/* [detachable] ET_ECF_OPTIONS.set_description */
extern void T427f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.add_warning */
extern void T52f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_OPTIONS.set_primary_warning_value */
extern void T427f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_OPTIONS.primary_warning_value */
extern T0* T427f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.add_debug */
extern void T52f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_OPTIONS.set_primary_debug_value */
extern void T427f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_OPTIONS.primary_debug_value */
extern T0* T427f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.add_assertions */
extern void T52f246(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T52f246ot1(T0* a1, T0** a2);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].new_iterator */
extern T0* T211f43(GE_context* ac, T0* C);
/* [detachable] ET_ECF_OPTIONS.set_primary_assertion_value */
extern void T427f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_OPTIONS.primary_assertion_value */
extern T0* T427f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_mappings */
extern T0* T52f104(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_SYSTEM_PARSER.add_mapping */
extern void T52f239(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_AST_FACTORY.new_class_mappings */
extern T0* T157f20(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_adapted_libraries */
extern T0* T52f102(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_ECF_ADAPTED_LIBRARIES.put_last */
extern void T745f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].force_last */
extern void T1504f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY].force */
extern void T1786f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY].fill_with */
extern void T1785f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY].extend */
extern void T1785f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].resize */
extern void T1504f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1786f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1785f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].new_capacity */
extern T6 T1504f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].extendible */
extern T1 T1504f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_AST_FACTORY.new_adapted_libraries */
extern T0* T157f19(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_ADAPTED_LIBRARIES.make */
extern T0* T745c5(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].put_last */
extern void T1504f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1504c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].set_internal_cursor */
extern void T1504f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].new_cursor */
extern T0* T1504f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1787c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1786f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY].make_empty */
extern T0* T1785c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY].default_create */
extern T0* T1786c3(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_adapted_library */
extern T0* T52f129(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM_PARSER.new_adapted_library */
extern T0* T52f129ac1(GE_context* ac, T0* a1);
extern T1 T52f129ot1(T0* a1, T0** a2);
extern T1 T52f129ot2(T0* a1, T0** a2);
/* [detachable] ET_ECF_ADAPTED_LIBRARY.set_notes */
extern void T202f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ADAPTED_LIBRARY.set_conditions */
extern void T202f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ADAPTED_LIBRARY.set_visible_classes */
extern void T202f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ADAPTED_LIBRARY.set_class_renamings */
extern void T202f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ADAPTED_LIBRARY.set_class_options */
extern void T202f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ADAPTED_LIBRARY.set_use_application_options */
extern void T202f26(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ECF_ADAPTED_LIBRARY.set_read_only */
extern void T202f25(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ECF_ADAPTED_LIBRARY.set_classname_prefix */
extern void T202f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ADAPTED_LIBRARY.set_description */
extern void T202f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_AST_FACTORY.new_adapted_library */
extern T0* T157f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_ADAPTED_LIBRARY.make */
extern T0* T202c22(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_ADAPTED_LIBRARY.make_adapted_library */
extern void T202f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_ADAPTED_LIBRARY.default_read_only_value */
extern T1 T202f18(GE_context* ac, T0* C);
/* [detachable] ET_ECF_ADAPTED_LIBRARY.tokens */
extern T0* T202f17(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_override_clusters */
extern T0* T52f100(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ECF_AST_FACTORY.new_clusters */
extern T0* T157f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTERS.make */
extern T0* T744c5(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].put_last */
extern void T1503f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_override_cluster */
extern T0* T52f128(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM_PARSER.new_override_cluster */
extern T0* T52f128ac1(GE_context* ac, T0* a1);
extern T1 T52f128ot1(T0* a1, T0** a2);
extern T1 T52f128ot2(T0* a1, T0** a2);
/* detachable ET_ECF_CLUSTER.set_conditions */
extern void T759f83(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.set_conditioned_file_rules */
extern void T759f76(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.set_conditioned_subclusters */
extern void T759f75(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_provider_groups */
extern T0* T52f159(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_SYSTEM_PARSER.add_provider_group */
extern void T52f242(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_AST_FACTORY.new_provider_groups */
extern T0* T157f42(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_overridden_group */
extern T0* T52f166(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ECF_CLUSTER.set_description */
extern void T759f70(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_AST_FACTORY.new_cluster */
extern T0* T157f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_ECF_CLUSTER.make */
extern T0* T759c69(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_file_rules */
extern T0* T52f98(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_ECF_FILE_RULES.put_last */
extern void T747f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].force_last */
extern void T1506f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE].force */
extern void T1791f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_FILE_RULE].fill_with */
extern void T1792f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_FILE_RULE].extend */
extern void T1792f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].resize */
extern void T1506f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T1791f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T1792f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].new_capacity */
extern T6 T1506f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].extendible */
extern T1 T1506f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_AST_FACTORY.new_file_rules */
extern T0* T157f18(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_FILE_RULES.make */
extern T0* T747c4(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].put_last */
extern void T1506f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].make */
extern T0* T1506c11(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].set_internal_cursor */
extern void T1506f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].new_cursor */
extern T0* T1506f8(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_FILE_RULE].make */
extern T0* T1793c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE].make */
extern T0* T1791f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_FILE_RULE].make_empty */
extern T0* T1792c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE].default_create */
extern T0* T1791c3(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_file_rule */
extern T0* T52f127(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T52f127ot1(T0* a1, T0** a2);
/* detachable ET_ECF_FILE_RULE.set_description */
extern void T767f13(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_FILE_RULE.set_conditions */
extern void T767f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_AST_FACTORY.new_file_rule */
extern T0* T157f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ECF_FILE_RULE.make */
extern T0* T767c11(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_ECF_FILE_RULE.compiled_regexp */
extern T0* T767f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] STRING_8].forth */
extern void T365f14(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION].put_last */
extern void T1517f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] RX_PCRE_REGULAR_EXPRESSION].force */
extern void T1815f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] RX_PCRE_REGULAR_EXPRESSION].fill_with */
extern void T1816f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] RX_PCRE_REGULAR_EXPRESSION].extend */
extern void T1816f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.is_compiled */
extern T1 T82f300(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] STRING_8].item */
extern T0* T365f6(GE_context* ac, T0* C);
/* detachable ET_ECF_FILE_RULE.operating_system */
extern T0* T767f8(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] STRING_8].start */
extern void T365f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1517c9(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION].set_internal_cursor */
extern void T1517f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION].new_cursor */
extern T0* T1517f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1817c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1815f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] RX_PCRE_REGULAR_EXPRESSION].make_empty */
extern T0* T1816c4(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] RX_PCRE_REGULAR_EXPRESSION].default_create */
extern T0* T1815c2(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_external_resources */
extern T0* T52f96(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_ECF_EXTERNAL_RESOURCES.put_last */
extern void T754f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].force_last */
extern void T1513f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE].force */
extern void T1812f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE].fill_with */
extern void T1813f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE].extend */
extern void T1813f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].resize */
extern void T1513f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE].aliased_resized_area */
extern T0* T1812f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE].aliased_resized_area */
extern T0* T1813f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].new_capacity */
extern T6 T1513f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].extendible */
extern T1 T1513f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_AST_FACTORY.new_external_resources */
extern T0* T157f17(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_RESOURCES.make */
extern T0* T754c3(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].put_last */
extern void T1513f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T1513c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].set_internal_cursor */
extern void T1513f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].new_cursor */
extern T0* T1513f9(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T1814c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T1812f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE].make_empty */
extern T0* T1813c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE].default_create */
extern T0* T1812c3(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_external_resource */
extern T0* T52f126(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T52f126ot1(T0* a1, T0** a2);
/* detachable ET_ECF_EXTERNAL_RESOURCE.set_conditions */
extern void T766f11(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_RESOURCE.set_description */
extern void T766f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_AST_FACTORY.new_external_resource */
extern T0* T157f33(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_RESOURCE.make */
extern T0* T766c9(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_external_objects */
extern T0* T52f94(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_ECF_EXTERNAL_OBJECTS.put_last */
extern void T753f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].force_last */
extern void T1512f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT].force */
extern void T1809f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT].fill_with */
extern void T1810f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT].extend */
extern void T1810f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].resize */
extern void T1512f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T1809f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T1810f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].new_capacity */
extern T6 T1512f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].extendible */
extern T1 T1512f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_AST_FACTORY.new_external_objects */
extern T0* T157f16(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_OBJECTS.make */
extern T0* T753c3(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].put_last */
extern void T1512f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1512c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].set_internal_cursor */
extern void T1512f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].new_cursor */
extern T0* T1512f9(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1811c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1809f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT].make_empty */
extern T0* T1810c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT].default_create */
extern T0* T1809c3(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_external_object */
extern T0* T52f125(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T52f125ot1(T0* a1, T0** a2);
/* detachable ET_ECF_EXTERNAL_OBJECT.set_conditions */
extern void T765f11(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_OBJECT.set_description */
extern void T765f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_AST_FACTORY.new_external_object */
extern T0* T157f32(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_OBJECT.make */
extern T0* T765c9(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_external_makes */
extern T0* T52f92(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_ECF_EXTERNAL_MAKES.put_last */
extern void T752f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].force_last */
extern void T1511f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE].force */
extern void T1806f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE].fill_with */
extern void T1807f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE].extend */
extern void T1807f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].resize */
extern void T1511f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE].aliased_resized_area */
extern T0* T1806f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE].aliased_resized_area */
extern T0* T1807f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].new_capacity */
extern T6 T1511f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].extendible */
extern T1 T1511f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_AST_FACTORY.new_external_makes */
extern T0* T157f15(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_MAKES.make */
extern T0* T752c3(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].put_last */
extern void T1511f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].make */
extern T0* T1511c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].set_internal_cursor */
extern void T1511f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].new_cursor */
extern T0* T1511f9(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_MAKE].make */
extern T0* T1808c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE].make */
extern T0* T1806f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE].make_empty */
extern T0* T1807c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE].default_create */
extern T0* T1806c3(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_external_make */
extern T0* T52f124(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T52f124ot1(T0* a1, T0** a2);
/* detachable ET_ECF_EXTERNAL_MAKE.set_conditions */
extern void T764f11(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_MAKE.set_description */
extern void T764f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_AST_FACTORY.new_external_make */
extern T0* T157f31(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_MAKE.make */
extern T0* T764c9(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_external_linker_flags */
extern T0* T52f90(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_ECF_EXTERNAL_LINKER_FLAGS.put_last */
extern void T751f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].force_last */
extern void T1510f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].force */
extern void T1803f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].fill_with */
extern void T1804f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].extend */
extern void T1804f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].resize */
extern void T1510f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].aliased_resized_area */
extern T0* T1803f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].aliased_resized_area */
extern T0* T1804f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].new_capacity */
extern T6 T1510f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].extendible */
extern T1 T1510f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_AST_FACTORY.new_external_linker_flags */
extern T0* T157f14(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_LINKER_FLAGS.make */
extern T0* T751c3(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].put_last */
extern void T1510f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T1510c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].set_internal_cursor */
extern void T1510f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].new_cursor */
extern T0* T1510f9(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T1805c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T1803f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].make_empty */
extern T0* T1804c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].default_create */
extern T0* T1803c3(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_external_linker_flag */
extern T0* T52f123(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T52f123ot1(T0* a1, T0** a2);
/* detachable ET_ECF_EXTERNAL_LINKER_FLAG.set_conditions */
extern void T763f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_LINKER_FLAG.set_description */
extern void T763f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_AST_FACTORY.new_external_linker_flag */
extern T0* T157f30(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_LINKER_FLAG.make */
extern T0* T763c5(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_external_libraries */
extern T0* T52f88(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_ECF_EXTERNAL_LIBRARIES.put_last */
extern void T750f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].force_last */
extern void T1509f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY].force */
extern void T1800f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY].fill_with */
extern void T1801f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY].extend */
extern void T1801f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].resize */
extern void T1509f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T1800f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T1801f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].new_capacity */
extern T6 T1509f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].extendible */
extern T1 T1509f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_AST_FACTORY.new_external_libraries */
extern T0* T157f13(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_LIBRARIES.make */
extern T0* T750c3(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].put_last */
extern void T1509f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1509c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].set_internal_cursor */
extern void T1509f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].new_cursor */
extern T0* T1509f9(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1802c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1800f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY].make_empty */
extern T0* T1801c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY].default_create */
extern T0* T1800c3(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_external_library */
extern T0* T52f122(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T52f122ot1(T0* a1, T0** a2);
/* detachable ET_ECF_EXTERNAL_LIBRARY.set_conditions */
extern void T762f11(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_LIBRARY.set_description */
extern void T762f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_AST_FACTORY.new_external_library */
extern T0* T157f29(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_LIBRARY.make */
extern T0* T762c9(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_external_includes */
extern T0* T52f86(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_ECF_EXTERNAL_INCLUDES.put_last */
extern void T749f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].force_last */
extern void T1508f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE].force */
extern void T1797f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE].fill_with */
extern void T1798f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE].extend */
extern void T1798f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].resize */
extern void T1508f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T1797f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T1798f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].new_capacity */
extern T6 T1508f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].extendible */
extern T1 T1508f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_AST_FACTORY.new_external_includes */
extern T0* T157f12(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_INCLUDES.make */
extern T0* T749c3(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].put_last */
extern void T1508f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1508c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].set_internal_cursor */
extern void T1508f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].new_cursor */
extern T0* T1508f9(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1799c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1797f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE].make_empty */
extern T0* T1798c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE].default_create */
extern T0* T1797c3(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_external_include */
extern T0* T52f121(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T52f121ot1(T0* a1, T0** a2);
/* detachable ET_ECF_EXTERNAL_INCLUDE.set_conditions */
extern void T761f11(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_INCLUDE.set_description */
extern void T761f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_AST_FACTORY.new_external_include */
extern T0* T157f28(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_INCLUDE.make */
extern T0* T761c9(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_external_cflags */
extern T0* T52f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_ECF_EXTERNAL_CFLAGS.put_last */
extern void T748f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].force_last */
extern void T1507f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG].force */
extern void T1794f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG].fill_with */
extern void T1795f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG].extend */
extern void T1795f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].resize */
extern void T1507f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG].aliased_resized_area */
extern T0* T1794f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG].aliased_resized_area */
extern T0* T1795f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].new_capacity */
extern T6 T1507f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].extendible */
extern T1 T1507f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_AST_FACTORY.new_external_cflags */
extern T0* T157f11(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_CFLAGS.make */
extern T0* T748c3(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].put_last */
extern void T1507f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T1507c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].set_internal_cursor */
extern void T1507f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].new_cursor */
extern T0* T1507f9(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T1796c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T1794f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG].make_empty */
extern T0* T1795c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG].default_create */
extern T0* T1794c3(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_external_cflag */
extern T0* T52f120(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T52f120ot1(T0* a1, T0** a2);
/* detachable ET_ECF_EXTERNAL_CFLAG.set_conditions */
extern void T760f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_CFLAG.set_description */
extern void T760f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_AST_FACTORY.new_external_cflag */
extern T0* T157f27(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_EXTERNAL_CFLAG.make */
extern T0* T760c5(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_TARGET.set_description */
extern void T56f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_clusters */
extern T0* T52f82(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_cluster */
extern T0* T52f119(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM_PARSER.new_cluster */
extern T0* T52f119ac1(GE_context* ac, T0* a1);
extern T1 T52f119ot1(T0* a1, T0** a2);
extern T1 T52f119ot2(T0* a1, T0** a2);
/* detachable ET_ECF_CLUSTER.set_notes */
extern void T759f84(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.add_capabilities */
extern void T52f233(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T52f233ot1(T0* a1, T0** a2);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assemblies */
extern T0* T52f79(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T746f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T1505f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T1789f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T1788f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T1788f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T1505f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1789f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1788f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1505f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T1505f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_AST_FACTORY.new_adapted_dotnet_assemblies */
extern T0* T157f9(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.make */
extern T0* T746c5(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].put_last */
extern void T1505f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1505c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1505f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1505f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1790c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1789f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T1788c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T1789c3(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assembly */
extern T0* T52f118(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assembly */
extern T0* T52f118ac1(GE_context* ac, T0* a1);
extern T1 T52f118ot1(T0* a1, T0** a2);
extern T1 T52f118ot2(T0* a1, T0** a2);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_notes */
extern void T208f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_conditions */
extern void T208f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_class_renamings */
extern void T208f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_class_options */
extern void T208f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_read_only */
extern void T208f31(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T208f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_version */
extern void T208f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_name */
extern void T208f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_key */
extern void T208f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_culture */
extern void T208f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_description */
extern void T208f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_AST_FACTORY.new_adapted_dotnet_assembly */
extern T0* T157f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make */
extern T0* T208c24(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make_adapted_dotnet_assembly */
extern void T208f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T208f20(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.unknown_dotnet_assembly */
extern T0* T71f259(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.make */
extern T0* T578c103(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DOTNET_ASSEMBLY.make_from_system */
extern void T578f104(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DOTNET_ASSEMBLY.set_default_class_mapping */
extern void T578f109(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T578f163(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.set_class_mapping */
extern void T578f164(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DOTNET_ASSEMBLY.set_wide_character_class_mapping */
extern void T578f162(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.set_string_class_mapping */
extern void T578f161(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.set_real_ref_class_mapping */
extern void T578f160(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.set_real_class_mapping */
extern void T578f159(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.set_natural_ref_class_mapping */
extern void T578f158(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.set_natural_class_mapping */
extern void T578f157(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.set_integer_ref_class_mapping */
extern void T578f156(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.set_integer_class_mapping */
extern void T578f155(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.set_double_ref_class_mapping */
extern void T578f154(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.set_double_class_mapping */
extern void T578f153(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.set_character_ref_class_mapping */
extern void T578f152(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.set_character_class_mapping */
extern void T578f151(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.set_kernel_types */
extern void T578f108(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T578f150(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T578f149(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_type_type */
extern void T578f148(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_system_string_type */
extern void T578f147(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_system_object_type */
extern void T578f146(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_string_type */
extern void T578f145(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_string_32_type */
extern void T578f144(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_string_8_type */
extern void T578f143(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_special_type */
extern void T578f142(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_routine_type */
extern void T578f141(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_real_64_type */
extern void T578f140(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_real_32_type */
extern void T578f139(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_real_type */
extern void T578f138(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_procedure_type */
extern void T578f137(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_predicate_type */
extern void T578f136(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_pointer_type */
extern void T578f135(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T578f134(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T578f133(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T578f132(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T578f131(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_natural_type */
extern void T578f130(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_iterable_type */
extern void T578f129(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T578f128(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T578f127(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T578f126(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T578f125(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T578f124(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_integer_type */
extern void T578f123(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T578f122(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_function_type */
extern void T578f121(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T578f120(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_exception_type */
extern void T578f119(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_double_type */
extern void T578f118(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_character_32_type */
extern void T578f117(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_character_8_type */
extern void T578f116(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_character_type */
extern void T578f115(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_boolean_type */
extern void T578f114(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_array_type */
extern void T578f113(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_tuple_type */
extern void T578f112(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_none_type */
extern void T578f111(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_any_type */
extern void T578f110(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.make_adapted */
extern void T578f107(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T578f88(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T578f106(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.initialize */
extern void T578f105(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T578f87(GE_context* ac, T0* C);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.tokens */
extern T0* T208f19(GE_context* ac, T0* C);
/* [detachable] ET_ECF_TARGET.set_parent */
extern void T56f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.execution_environment */
extern T0* T56f28(GE_context* ac, T0* C);
/* detachable ET_ECF_VARIABLES.set_secondary_variables */
extern void T59f12(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_TARGET_PARENT.make */
extern T0* T195c4(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ECF_OPTIONS.set_secondary_options */
extern void T427f20(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CAPABILITIES.set_secondary_capabilities */
extern void T58f17(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_SETTINGS.set_secondary_settings */
extern void T54f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_AST_FACTORY.new_target */
extern T0* T157f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_TARGET.make */
extern T0* T56c32(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_ECF_CAPABILITIES.make */
extern T0* T58c13(GE_context* ac);
/* Creation of agent #1 in feature detachable ET_ECF_CAPABILITIES.make */
extern T0* T58f13ac1(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].set_hash_function */
extern void T216f41(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CAPABILITIES.string_ */
extern T0* T58f8(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].set_key_equality_tester */
extern void T216f40(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CAPABILITIES.case_insensitive_string_equality_tester */
extern T0* T58f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_map */
extern T0* T216c39(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_with_equality_testers */
extern void T216f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_sparse_container */
extern void T216f51(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].set_internal_cursor */
extern void T216f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].new_cursor */
extern T0* T216f28(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].make */
extern T0* T583c10(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_slots */
extern void T216f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_clashes */
extern void T216f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_key_storage */
extern void T216f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_item_storage */
extern void T216f56(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ECF_VARIABLES.make */
extern T0* T59c10(GE_context* ac);
/* Creation of agent #1 in feature detachable ET_ECF_VARIABLES.make */
extern T0* T59f10ac1(GE_context* ac, T0* a1);
/* detachable ET_ECF_VARIABLES.case_insensitive_string_equality_tester */
extern T0* T59f4(GE_context* ac, T0* C);
/* detachable ET_ECF_VARIABLES.execution_environment */
extern T0* T59f3(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_notes */
extern T0* T52f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].force_last */
extern void T428f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT].force */
extern void T892f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT].fill_with */
extern void T893f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT].extend */
extern void T893f7(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].resize */
extern void T428f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT].aliased_resized_area */
extern T0* T892f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT].aliased_resized_area */
extern T0* T893f3(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].new_capacity */
extern T6 T428f7(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].extendible */
extern T1 T428f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_AST_FACTORY.new_notes */
extern T0* T157f5(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].make */
extern void T428f10(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].make */
extern T0* T428c10(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].set_internal_cursor */
extern void T428f12(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].new_cursor */
extern T0* T428f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_NOTE_ELEMENT].make */
extern T0* T894c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT].make */
extern T0* T892f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT].make_empty */
extern T0* T893c4(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT].default_create */
extern T0* T892c3(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_note_element */
extern T0* T52f72(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T52f72ot1(T0* a1, T0** a2);
extern T1 T52f72ot2(T0* a1, T0** a2);
/* detachable ET_ECF_NOTE_ELEMENT.set_content */
extern void T743f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_NOTE_ELEMENT.add_element */
extern void T743f9(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_NOTE_ELEMENT.add_attribute */
extern void T743f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_AST_FACTORY.new_note */
extern T0* T157f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_NOTE_ELEMENT.make */
extern T0* T743c7(GE_context* ac, T0* a1);
/* Creation of agent #1 in feature detachable ET_ECF_NOTE_ELEMENT.make */
extern T0* T743f7ac1(GE_context* ac, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].make_default */
extern T0* T428c14(GE_context* ac);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].default_capacity */
extern T6 T428f9(GE_context* ac, T0* C);
/* detachable ET_ECF_NOTE_ELEMENT.string_ */
extern T0* T743f6(GE_context* ac, T0* C);
/* detachable ET_ECF_NOTE_ELEMENT.case_insensitive_string_equality_tester */
extern T0* T743f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_map_default */
extern T0* T211c93(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].default_capacity */
extern T6 T211f46(GE_context* ac, T0* C);
/* [detachable] XM_ELEMENT.text */
extern T0* T163f14(GE_context* ac, T0* C);
extern T1 T163f14ot1(T0* a1, T0** a2);
/* [detachable] XM_ELEMENT.string_ */
extern T0* T163f15(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.string_ */
extern T0* T52f20(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].item */
extern T0* T430f8(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].start */
extern void T430f11(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].cursor_start */
extern void T854f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].cursor_off */
extern T1 T854f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].off */
extern T1 T430f9(GE_context* ac, T0* C);
/* [detachable] XM_ELEMENT.new_cursor */
extern T0* T163f6(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].new_cursor */
extern T0* T854f5(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].make */
extern T0* T430c10(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.default_options */
extern T0* T52f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.default_options_1_0_0 */
extern T0* T52f71(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.set_default_options_1_0_0 */
extern void T52f232(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.set_default_options_1_5_0 */
extern void T52f231(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.set_default_options_1_9_0 */
extern void T52f230(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.set_default_options_1_11_0 */
extern void T52f229(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.set_default_options_1_15_0 */
extern void T52f228(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.set_default_options_1_18_0 */
extern void T52f227(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.set_default_options_latest */
extern void T52f245(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.default_options_1_5_0 */
extern T0* T52f70(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.default_options_1_9_0 */
extern T0* T52f68(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.ecf_1_9_0 */
extern T0* T52f67(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.default_options_1_11_0 */
extern T0* T52f66(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.default_options_1_15_0 */
extern T0* T52f65(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.ecf_1_15_0 */
extern T0* T52f64(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.default_options_1_18_0 */
extern T0* T52f63(GE_context* ac, T0* C);
/* [detachable] UT_VERSION.is_greater_equal */
extern T1 T43f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.ecf_1_18_0 */
extern T0* T52f62(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.default_capabilities */
extern T0* T52f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.default_capabilities_1_0_0 */
extern T0* T52f61(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_0_0 */
extern void T52f226(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_11_0 */
extern void T52f225(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_13_0 */
extern void T52f224(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_16_0 */
extern void T52f223(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.set_default_capabilities_latest */
extern void T52f244(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.default_capabilities_1_11_0 */
extern T0* T52f60(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.default_capabilities_1_13_0 */
extern T0* T52f58(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.ecf_1_13_0 */
extern T0* T52f57(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.default_capabilities_1_16_0 */
extern T0* T52f56(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.ecf_1_16_0 */
extern T0* T52f55(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.default_settings */
extern T0* T52f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.default_settings_1_0_0 */
extern T0* T52f54(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.set_default_settings_1_0_0 */
extern void T52f222(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.set_default_settings_1_20_0 */
extern void T52f221(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.set_default_settings_latest */
extern void T52f243(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.default_settings_1_20_0 */
extern T0* T52f53(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.ecf_1_20_0 */
extern T0* T52f52(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.ecf_latest */
extern T0* T52f38(GE_context* ac, T0* C);
/* [detachable] UT_VERSION.make_latest */
extern T0* T43c20(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM_PARSER.ecf_version */
extern T0* T52f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eate_error */
extern void T53f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR.make_eate */
extern T0* T209c102(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_SYSTEM_PARSER.attribute_name */
extern T0* T52f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].found_item */
extern T0* T169f27(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].found */
extern T1 T169f22(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].search */
extern void T169f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].search_position */
extern void T169f56(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eatm_error */
extern void T53f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR.make_eatm */
extern T0* T209c101(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_AST_FACTORY.new_library */
extern T0* T157f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_LIBRARY.make */
extern T0* T182c117(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_LIBRARY.make_library */
extern void T182f126(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_LIBRARY.make_from_system */
extern void T182f127(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_LIBRARY.set_default_class_mapping */
extern void T182f132(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_wide_character_ref_class_mapping */
extern void T182f186(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.set_class_mapping */
extern void T182f187(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_LIBRARY.set_wide_character_class_mapping */
extern void T182f185(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.set_string_class_mapping */
extern void T182f184(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.set_real_ref_class_mapping */
extern void T182f183(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.set_real_class_mapping */
extern void T182f182(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.set_natural_ref_class_mapping */
extern void T182f181(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.set_natural_class_mapping */
extern void T182f180(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.set_integer_ref_class_mapping */
extern void T182f179(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.set_integer_class_mapping */
extern void T182f178(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.set_double_ref_class_mapping */
extern void T182f177(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.set_double_class_mapping */
extern void T182f176(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.set_character_ref_class_mapping */
extern void T182f175(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.set_character_class_mapping */
extern void T182f174(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.tokens */
extern T0* T182f100(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_kernel_types */
extern void T182f131(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_wide_character_type */
extern void T182f173(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_typed_pointer_type */
extern void T182f172(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_type_type */
extern void T182f171(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_system_string_type */
extern void T182f170(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_system_object_type */
extern void T182f169(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_string_type */
extern void T182f168(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_string_32_type */
extern void T182f167(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_string_8_type */
extern void T182f166(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_special_type */
extern void T182f165(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_routine_type */
extern void T182f164(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_real_64_type */
extern void T182f163(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_real_32_type */
extern void T182f162(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_real_type */
extern void T182f161(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_procedure_type */
extern void T182f160(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_predicate_type */
extern void T182f159(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_pointer_type */
extern void T182f158(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_natural_64_type */
extern void T182f157(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_natural_32_type */
extern void T182f156(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_natural_16_type */
extern void T182f155(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_natural_8_type */
extern void T182f154(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_natural_type */
extern void T182f153(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_iterable_type */
extern void T182f152(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_ise_exception_manager_type */
extern void T182f151(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_integer_64_type */
extern void T182f150(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_integer_32_type */
extern void T182f149(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_integer_16_type */
extern void T182f148(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_integer_8_type */
extern void T182f147(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_integer_type */
extern void T182f146(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_immutable_string_32_type */
extern void T182f145(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_function_type */
extern void T182f144(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_exception_manager_type */
extern void T182f143(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_exception_type */
extern void T182f142(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_double_type */
extern void T182f141(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_character_32_type */
extern void T182f140(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_character_8_type */
extern void T182f139(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_character_type */
extern void T182f138(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_boolean_type */
extern void T182f137(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_array_type */
extern void T182f136(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_tuple_type */
extern void T182f135(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_none_type */
extern void T182f134(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_any_type */
extern void T182f133(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.make_adapted */
extern void T182f130(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_LIBRARY.default_read_only_value */
extern T1 T182f105(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.set_unknown_kernel_types */
extern void T182f129(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.initialize */
extern void T182f128(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.initialize */
extern void T182f128p1(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.class_name_tester */
extern T0* T182f99(GE_context* ac, T0* C);
/* [detachable] XM_ELEMENT.attribute_by_name */
extern T0* T163f5(GE_context* ac, T0* C, T0* a1);
extern T1 T163f5ot1(T0* a1, T0** a2);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].go_after */
extern void T430f13(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].cursor_go_after */
extern void T854f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].set_after */
extern void T430f16(GE_context* ac, T0* C);
/* [detachable] XM_ELEMENT.attribute_same_name */
extern T1 T163f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_ELEMENT.same_string */
extern T1 T163f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_ELEMENT.string_equality_tester */
extern T0* T163f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].forth */
extern void T200f10(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].cursor_forth */
extern void T199f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].add_traversing_cursor */
extern void T199f64(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].set_next_cursor */
extern void T200f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].set_position */
extern void T200f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].remove_traversing_cursor */
extern void T199f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].set_after */
extern void T200f12(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].clashes_item */
extern T6 T199f29(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eadp_error */
extern void T53f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_ERROR.make_eadp */
extern T0* T209c100(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_ECF_ANDED_CONDITIONS.is_capability_supported */
extern T1 T776f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ECF_ANDED_CONDITIONS.is_capability_supported */
extern T1 T776f3p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].item */
extern T0* T1527f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_ORED_CONDITIONS.is_capability_supported */
extern T1 T775f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].item */
extern T0* T1526f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_ORED_CONDITIONS.is_capability_supported */
extern T1 T775f3p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ECF_CAPABILITIES.is_capability_supported */
extern T1 T58f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].found_item */
extern T0* T1672f24(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].item_storage_item */
extern T0* T1672f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].found */
extern T1 T1672f25(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].search */
extern void T1672f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].search_position */
extern void T1672f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].hash_position */
extern T6 T1672f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].key_storage_item */
extern T0* T1672f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].clashes_item */
extern T6 T1672f29(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].slots_item */
extern T6 T1672f23(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ECF_CAPABILITIES.capability_order */
extern T0* T58f12(GE_context* ac, T0* C);
/* Creation of agent #1 in feature detachable ET_ECF_CAPABILITIES.capability_order */
extern T0* T58f12ac1(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].put_last */
extern void T1672f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].key_storage_put */
extern void T1672f44(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].slots_put */
extern void T1672f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].clashes_put */
extern void T1672f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].compress */
extern void T1672f41(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].slots_wipe_out */
extern void T1672f50(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].clashes_wipe_out */
extern void T1672f49(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].key_storage_keep_head */
extern void T1672f48(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].item_storage_keep_head */
extern void T1672f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].keep_head */
extern void T1910f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].set_count */
extern void T1910f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].move_all_cursors */
extern void T1672f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].set_position */
extern void T1914f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].item_storage_put */
extern void T1672f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].force */
extern void T1913f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].fill_with */
extern void T1910f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].extend */
extern void T1910f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].unset_found_item */
extern void T1672f39(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].put_last */
extern void T1671f39(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].compress */
extern void T1671f47(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].slots_wipe_out */
extern void T1671f57(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].clashes_wipe_out */
extern void T1671f56(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].key_storage_keep_head */
extern void T1671f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].item_storage_keep_head */
extern void T1671f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].move_all_cursors */
extern void T1671f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] STRING_8].set_position */
extern void T1909f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].set_hash_function */
extern void T1671f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].set_hash_function */
extern void T1672f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].set_key_equality_tester */
extern void T1672f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_map */
extern T0* T1672c32(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_with_equality_testers */
extern void T1672f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_sparse_container */
extern void T1672f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].set_internal_cursor */
extern void T1672f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].new_cursor */
extern T0* T1672f30(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make */
extern T0* T1914c5(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_slots */
extern void T1672f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].new_modulus */
extern T6 T1672f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_clashes */
extern void T1672f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_key_storage */
extern void T1672f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_item_storage */
extern void T1672f51(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].make */
extern T0* T1913f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].make_empty */
extern T0* T1910c4(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].default_create */
extern T0* T1913c2(GE_context* ac);
/* [detachable] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].key */
extern T0* T200f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].cursor_key */
extern T0* T199f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].key_storage_item */
extern T0* T199f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].after */
extern T1 T200f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].new_iterator */
extern T0* T199f23(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].start */
extern void T200f11(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].cursor_start */
extern void T199f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].cursor_off */
extern T1 T199f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].off */
extern T1 T200f8(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].is_empty */
extern T1 T199f33(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].new_cursor */
extern T0* T199f25(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make */
extern T0* T200c9(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.valid_capabilities_latest */
extern T0* T52f28(GE_context* ac, T0* C);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM_PARSER.valid_capabilities_latest */
extern T0* T52f28ac1(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.void_safety_detection_capability_value_regexp */
extern T0* T52f35(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.concurrency_capability_value_regexp */
extern T0* T52f34(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].force_last */
extern void T199f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].key_storage_put */
extern void T199f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].slots_put */
extern void T199f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].clashes_put */
extern void T199f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].slots_item */
extern T6 T199f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].hash_position */
extern T6 T199f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].resize */
extern void T199f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].clashes_resize */
extern void T199f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].special_integer_ */
extern T0* T199f30(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].key_storage_resize */
extern void T199f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].item_storage_resize */
extern void T199f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].aliased_resized_area */
extern T0* T574f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable RX_REGULAR_EXPRESSION].aliased_resized_area */
extern T0* T575f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].slots_resize */
extern void T199f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].new_modulus */
extern T6 T199f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].new_capacity */
extern T6 T199f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].item_storage_put */
extern void T199f46(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].force */
extern void T574f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable RX_REGULAR_EXPRESSION].fill_with */
extern void T575f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable RX_REGULAR_EXPRESSION].extend */
extern void T575f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].search_position */
extern void T199f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].unset_found_item */
extern void T199f44(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.catcall_detection_capability_value_regexp */
extern T0* T52f33(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].set_hash_function */
extern void T199f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].set_key_equality_tester */
extern void T199f40(GE_context* ac, T0* C, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].internal_set_equality_tester */
extern void T573f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.case_insensitive_string_equality_tester */
extern T0* T52f14(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_map */
extern T0* T199c39(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_with_equality_testers */
extern void T199f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_sparse_container */
extern void T199f51(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].set_internal_cursor */
extern void T199f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_slots */
extern void T199f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_clashes */
extern void T199f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_key_storage */
extern void T199f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_item_storage */
extern void T199f56(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].make */
extern T0* T574f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable RX_REGULAR_EXPRESSION].make_empty */
extern T0* T575c6(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].default_create */
extern T0* T574c3(GE_context* ac);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eabw_error */
extern void T53f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR.make_eabw */
extern T0* T209c99(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ADAPTED_LIBRARY.set_library */
extern void T202f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eabv_error */
extern void T53f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR.make_eabv */
extern T0* T209c98(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ADAPTED_LIBRARY.pathname */
extern T0* T202f20(GE_context* ac, T0* C);
/* [detachable] ET_ADAPTED_LIBRARIES.library */
extern T0* T183f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ADAPTED_LIBRARIES.count */
extern T6 T183f3(GE_context* ac, T0* C);
/* [detachable] DS_CELL [detachable ET_ECF_LIBRARY].make */
extern T0* T201c2(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.select_target */
extern void T52f215(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM_PARSER.select_target */
extern T0* T52f215ac1(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_SYSTEM_PARSER.build_system_config */
extern void T52f218(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG].put */
extern void T196f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_system_config */
extern T0* T52f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_AST_FACTORY.new_system_config */
extern T0* T157f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_SYSTEM_CONFIG.make */
extern T0* T180c12(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_TARGET.fill_universe */
extern void T56f54(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T56f54ot1(T0* a1);
/* detachable ET_ECF_EXTERNAL_LINKER_FLAGS.fill_external_linker_flags */
extern void T751f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature detachable ET_ECF_EXTERNAL_LINKER_FLAGS.fill_external_linker_flags */
extern T0* T751f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG]].set_rout_disp_final */
extern void T1722f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* detachable ET_ECF_EXTERNAL_LINKER_FLAG.fill_external_linker_flags */
extern void T763f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ECF_EXTERNAL_LINKER_FLAG.add_external_value */
extern void T763f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ECF_EXTERNAL_LINKER_FLAG.is_enabled */
extern T1 T763f4(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_ANDED_CONDITIONS.is_enabled */
extern T1 T776f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ORED_CONDITIONS.is_enabled */
extern T1 T775f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].do_all */
extern void T1510f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].item */
extern T0* T1510f8(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ECF_EXTERNAL_CFLAGS.fill_external_cflags */
extern void T748f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature detachable ET_ECF_EXTERNAL_CFLAGS.fill_external_cflags */
extern T0* T748f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG]].set_rout_disp_final */
extern void T1715f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* detachable ET_ECF_EXTERNAL_CFLAG.fill_external_cflags */
extern void T760f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ECF_EXTERNAL_CFLAG.add_external_value */
extern void T760f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ECF_EXTERNAL_CFLAG.is_enabled */
extern T1 T760f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].do_all */
extern void T1507f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].item */
extern T0* T1507f8(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ECF_EXTERNAL_MAKES.fill_external_makes */
extern void T752f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature detachable ET_ECF_EXTERNAL_MAKES.fill_external_makes */
extern T0* T752f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE]].set_rout_disp_final */
extern void T1724f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* detachable ET_ECF_EXTERNAL_MAKE.fill_external_makes */
extern void T764f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ECF_EXTERNAL_MAKE.add_external_value */
extern void T764f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ECF_EXTERNAL_MAKE.file_system */
extern T0* T764f5(GE_context* ac, T0* C);
/* detachable ET_ECF_EXTERNAL_MAKE.unix_file_system */
extern T0* T764f8(GE_context* ac, T0* C);
/* detachable ET_ECF_EXTERNAL_MAKE.windows_file_system */
extern T0* T764f7(GE_context* ac, T0* C);
/* detachable ET_ECF_EXTERNAL_MAKE.operating_system */
extern T0* T764f6(GE_context* ac, T0* C);
/* detachable ET_ECF_EXTERNAL_MAKE.is_enabled */
extern T1 T764f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].do_all */
extern void T1511f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].item */
extern T0* T1511f8(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ECF_EXTERNAL_RESOURCES.fill_external_resources */
extern void T754f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature detachable ET_ECF_EXTERNAL_RESOURCES.fill_external_resources */
extern T0* T754f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE]].set_rout_disp_final */
extern void T1728f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* detachable ET_ECF_EXTERNAL_RESOURCE.fill_external_resources */
extern void T766f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ECF_EXTERNAL_RESOURCE.add_external_value */
extern void T766f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ECF_EXTERNAL_RESOURCE.file_system */
extern T0* T766f5(GE_context* ac, T0* C);
/* detachable ET_ECF_EXTERNAL_RESOURCE.unix_file_system */
extern T0* T766f8(GE_context* ac, T0* C);
/* detachable ET_ECF_EXTERNAL_RESOURCE.windows_file_system */
extern T0* T766f7(GE_context* ac, T0* C);
/* detachable ET_ECF_EXTERNAL_RESOURCE.operating_system */
extern T0* T766f6(GE_context* ac, T0* C);
/* detachable ET_ECF_EXTERNAL_RESOURCE.is_enabled */
extern T1 T766f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].do_all */
extern void T1513f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].item */
extern T0* T1513f8(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern void T750f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature detachable ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern T0* T750f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY]].set_rout_disp_final */
extern void T1720f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* detachable ET_ECF_EXTERNAL_LIBRARY.fill_external_libraries */
extern void T762f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ECF_EXTERNAL_LIBRARY.add_external_value */
extern void T762f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ECF_EXTERNAL_LIBRARY.file_system */
extern T0* T762f5(GE_context* ac, T0* C);
/* detachable ET_ECF_EXTERNAL_LIBRARY.unix_file_system */
extern T0* T762f8(GE_context* ac, T0* C);
/* detachable ET_ECF_EXTERNAL_LIBRARY.windows_file_system */
extern T0* T762f7(GE_context* ac, T0* C);
/* detachable ET_ECF_EXTERNAL_LIBRARY.operating_system */
extern T0* T762f6(GE_context* ac, T0* C);
/* detachable ET_ECF_EXTERNAL_LIBRARY.is_enabled */
extern T1 T762f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].do_all */
extern void T1509f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].item */
extern T0* T1509f8(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern void T753f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature detachable ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern T0* T753f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT]].set_rout_disp_final */
extern void T1726f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* detachable ET_ECF_EXTERNAL_OBJECT.fill_external_objects */
extern void T765f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ECF_EXTERNAL_OBJECT.add_external_value */
extern void T765f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ECF_EXTERNAL_OBJECT.file_system */
extern T0* T765f5(GE_context* ac, T0* C);
/* detachable ET_ECF_EXTERNAL_OBJECT.unix_file_system */
extern T0* T765f8(GE_context* ac, T0* C);
/* detachable ET_ECF_EXTERNAL_OBJECT.windows_file_system */
extern T0* T765f7(GE_context* ac, T0* C);
/* detachable ET_ECF_EXTERNAL_OBJECT.operating_system */
extern T0* T765f6(GE_context* ac, T0* C);
/* detachable ET_ECF_EXTERNAL_OBJECT.is_enabled */
extern T1 T765f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].do_all */
extern void T1512f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].item */
extern T0* T1512f8(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern void T749f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature detachable ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern T0* T749f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE]].set_rout_disp_final */
extern void T1718f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* detachable ET_ECF_EXTERNAL_INCLUDE.fill_external_includes */
extern void T761f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ECF_EXTERNAL_INCLUDE.add_external_value */
extern void T761f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ECF_EXTERNAL_INCLUDE.file_system */
extern T0* T761f5(GE_context* ac, T0* C);
/* detachable ET_ECF_EXTERNAL_INCLUDE.unix_file_system */
extern T0* T761f8(GE_context* ac, T0* C);
/* detachable ET_ECF_EXTERNAL_INCLUDE.windows_file_system */
extern T0* T761f7(GE_context* ac, T0* C);
/* detachable ET_ECF_EXTERNAL_INCLUDE.operating_system */
extern T0* T761f6(GE_context* ac, T0* C);
/* detachable ET_ECF_EXTERNAL_INCLUDE.is_enabled */
extern T1 T761f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].do_all */
extern void T1508f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].item */
extern T0* T1508f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_SYSTEM.set_dotnet */
extern void T55f251(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T205f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T576f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T1343f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T1342f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T1342f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T576f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1343f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1342f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T576f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T576f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.is_enabled */
extern T1 T208f21(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T746f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T1505f9(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T746f3(GE_context* ac, T0* C);
/* [detachable] ET_ECF_STATE.is_dotnet */
extern T1 T178f3(GE_context* ac, T0* C);
/* [detachable] ET_ADAPTED_LIBRARIES.put_last */
extern void T183f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].force_last */
extern void T560f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY].force */
extern void T1338f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ADAPTED_LIBRARY].fill_with */
extern void T1337f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ADAPTED_LIBRARY].extend */
extern void T1337f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].resize */
extern void T560f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1338f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1337f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].new_capacity */
extern T6 T560f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].extendible */
extern T1 T560f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_ADAPTED_LIBRARY.is_enabled */
extern T1 T202f19(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_ADAPTED_LIBRARIES.library */
extern T0* T745f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].item */
extern T0* T1504f9(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ECF_ADAPTED_LIBRARIES.count */
extern T6 T745f3(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.fill_file_rules */
extern void T759f93(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature detachable ET_ECF_CLUSTER.fill_file_rules */
extern T0* T759f93ac1(GE_context* ac, T0* a1, T0* a2);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_CLUSTER]].set_rout_disp_final */
extern void T1660f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* detachable ET_ECF_CLUSTERS.do_all */
extern void T744f12(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_FILE_RULES.fill_file_rules */
extern void T747f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature detachable ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T747f7ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature detachable ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T747f7ac2(GE_context* ac, T0* a1);
/* detachable ET_ECF_FILE_RULE.is_enabled */
extern T1 T767f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]].set_rout_disp_final */
extern void T1983f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].do_if */
extern void T1506f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_TARGET.fill_file_rules */
extern void T56f66(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ECF_FILE_RULES.make_empty */
extern T0* T747c6(GE_context* ac);
/* detachable ET_ECF_CLUSTER.fill_subclusters */
extern void T759f92(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLUSTERS.put_last */
extern void T546f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLUSTER].force_last */
extern void T1331f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER].force */
extern void T1653f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CLUSTER].fill_with */
extern void T1652f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CLUSTER].extend */
extern void T1652f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLUSTER].resize */
extern void T1331f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER].aliased_resized_area */
extern T0* T1653f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_CLUSTER].aliased_resized_area */
extern T0* T1652f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLUSTER].new_capacity */
extern T6 T1331f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLUSTER].extendible */
extern T1 T1331f8(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ECF_CLUSTER.is_enabled */
extern T1 T759f67(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTERS.cluster */
extern T0* T744f4(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ECF_CLUSTERS.count */
extern T6 T744f3(GE_context* ac, T0* C);
/* [detachable] ET_ECF_ERROR_HANDLER.report_epcd_error */
extern void T53f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_ECF_ERROR.make_epcd */
extern T0* T209c97(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_ECF_ERROR_HANDLER.report_epcl_error */
extern void T53f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_ERROR.make_epcl */
extern T0* T209c96(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ECF_ERROR_HANDLER.report_epcr_error */
extern void T53f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ECF_ERROR.make_epcr */
extern T0* T209c95(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eadq_error */
extern void T53f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR.make_eadq */
extern T0* T209c94(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].before */
extern T1 T194f42(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_before */
extern T1 T194f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].before */
extern T1 T568f8(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].back */
extern void T194f48(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_back */
extern void T194f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].add_traversing_cursor */
extern void T194f67(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].set_next_cursor */
extern void T568f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].set_position */
extern void T568f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].remove_traversing_cursor */
extern void T194f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].set_before */
extern void T568f13(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].clashes_item */
extern T6 T194f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].finish */
extern void T194f47(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_finish */
extern void T194f59(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_off */
extern T1 T194f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].off */
extern T1 T568f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].is_empty */
extern T1 T194f36(GE_context* ac, T0* C);
/* detachable ET_ECF_TARGET_PARENT.set_target */
extern void T195f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ERROR_HANDLER.report_epcy_error */
extern void T53f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR.make_epcy */
extern T0* T209c93(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].put_last */
extern void T142f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].item_for_iteration */
extern T0* T194f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_item */
extern T0* T194f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].item_storage_item */
extern T0* T194f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].forth */
extern void T194f46(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_forth */
extern void T194f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].set_after */
extern void T568f10(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].key_for_iteration */
extern T0* T194f35(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_key */
extern T0* T194f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].key_storage_item */
extern T0* T194f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].after */
extern T1 T194f25(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_after */
extern T1 T194f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].after */
extern T1 T568f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].start */
extern void T194f45(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_start */
extern void T194f57(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].has */
extern T1 T194f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].search_position */
extern void T194f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].hash_position */
extern T6 T194f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].slots_item */
extern T6 T194f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_ERROR_HANDLER.report_internal_error */
extern void T53f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_ERROR.make_internal */
extern T0* T209c92(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ECF_ERROR_HANDLER.report_epud_error */
extern void T53f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR.make_epud */
extern T0* T209c91(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR_HANDLER.report_epul_error */
extern void T53f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_ERROR.make_epul */
extern T0* T209c90(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ECF_ERROR_HANDLER.report_epur_error */
extern void T53f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR.make_epur */
extern T0* T209c89(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR_HANDLER.report_epfe_error */
extern void T53f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR.make_epfe */
extern T0* T209c88(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].found_item */
extern T0* T193f25(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].item_storage_item */
extern T0* T193f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].found */
extern T1 T193f28(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].search */
extern void T193f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].search_position */
extern void T193f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].hash_position */
extern T6 T193f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].key_storage_item */
extern T0* T193f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].clashes_item */
extern T6 T193f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].slots_item */
extern T6 T193f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG].make */
extern T0* T196c2(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].force_last */
extern void T194f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].key_storage_put */
extern void T194f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].slots_put */
extern void T194f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].clashes_put */
extern void T194f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].resize */
extern void T194f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].clashes_resize */
extern void T194f65(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].special_integer_ */
extern T0* T194f39(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].key_storage_resize */
extern void T194f64(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].item_storage_resize */
extern void T194f63(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].slots_resize */
extern void T194f62(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].new_modulus */
extern T6 T194f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].new_capacity */
extern T6 T194f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].item_storage_put */
extern void T194f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].unset_found_item */
extern void T194f51(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_default */
extern T0* T194c43(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make */
extern void T194f50(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_with_equality_testers */
extern void T194f61(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_sparse_container */
extern void T194f68(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].set_internal_cursor */
extern void T194f73(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].new_cursor */
extern T0* T194f41(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].make */
extern T0* T568c9(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_slots */
extern void T194f72(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_clashes */
extern void T194f71(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_key_storage */
extern void T194f70(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_item_storage */
extern void T194f69(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].default_capacity */
extern T6 T194f40(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].force_last */
extern void T193f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].key_storage_put */
extern void T193f44(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].slots_put */
extern void T193f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].clashes_put */
extern void T193f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].resize */
extern void T193f41(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].clashes_resize */
extern void T193f49(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].special_integer_ */
extern T0* T193f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].key_storage_resize */
extern void T193f48(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].item_storage_resize */
extern void T193f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG].aliased_resized_area */
extern T0* T566f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG].aliased_resized_area */
extern T0* T564f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].slots_resize */
extern void T193f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].new_modulus */
extern T6 T193f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].new_capacity */
extern T6 T193f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].item_storage_put */
extern void T193f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG].force */
extern void T566f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG].fill_with */
extern void T564f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG].extend */
extern void T564f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].unset_found_item */
extern void T193f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_default */
extern T0* T193c34(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make */
extern void T193f37(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_with_equality_testers */
extern void T193f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_sparse_container */
extern void T193f50(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].set_internal_cursor */
extern void T193f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].new_cursor */
extern T0* T193f31(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make */
extern T0* T567c4(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_slots */
extern void T193f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_clashes */
extern void T193f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_key_storage */
extern void T193f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_item_storage */
extern void T193f51(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG].make */
extern T0* T566f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG].make_empty */
extern T0* T564c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG].default_create */
extern T0* T566c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].default_capacity */
extern T6 T193f27(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.select_target */
extern void T182f188(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.select_target */
extern void T55f157(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_STATE.make */
extern T0* T178c4(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ECF_ERROR_HANDLER.report_etnu_error */
extern void T53f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR.make_etnu */
extern T0* T209c81(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_SYSTEM_PARSER.element_name */
extern T0* T52f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_SYSTEM.target_with_name */
extern T0* T55f140(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_TARGETS.target */
extern T0* T198f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.new_system */
extern T0* T52f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_AST_FACTORY.new_system */
extern T0* T157f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_SYSTEM.make */
extern T0* T55c156(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ECF_SYSTEM.make_system */
extern void T55f169(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_default_class_mapping */
extern void T55f183(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_wide_character_ref_class_mapping */
extern void T55f245(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_class_mapping */
extern void T55f247(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_SYSTEM.set_wide_character_class_mapping */
extern void T55f244(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_string_class_mapping */
extern void T55f243(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_real_ref_class_mapping */
extern void T55f242(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_real_class_mapping */
extern void T55f241(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_natural_ref_class_mapping */
extern void T55f240(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_natural_class_mapping */
extern void T55f239(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_integer_ref_class_mapping */
extern void T55f238(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_integer_class_mapping */
extern void T55f237(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_double_ref_class_mapping */
extern void T55f236(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_double_class_mapping */
extern void T55f235(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_character_ref_class_mapping */
extern void T55f234(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_character_class_mapping */
extern void T55f233(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.tokens */
extern T0* T55f143(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_kernel_types */
extern void T55f182(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_wide_character_type */
extern void T55f232(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_typed_pointer_type */
extern void T55f231(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_type_type */
extern void T55f230(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_system_string_type */
extern void T55f229(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_system_object_type */
extern void T55f228(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_string_type */
extern void T55f227(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_string_32_type */
extern void T55f226(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_string_8_type */
extern void T55f225(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_special_type */
extern void T55f224(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_routine_type */
extern void T55f223(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_real_64_type */
extern void T55f222(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_real_32_type */
extern void T55f221(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_real_type */
extern void T55f220(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_procedure_type */
extern void T55f219(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_predicate_type */
extern void T55f218(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_pointer_type */
extern void T55f217(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_natural_64_type */
extern void T55f216(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_natural_32_type */
extern void T55f215(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_natural_16_type */
extern void T55f214(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_natural_8_type */
extern void T55f213(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_natural_type */
extern void T55f212(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_iterable_type */
extern void T55f211(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_ise_exception_manager_type */
extern void T55f210(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_integer_64_type */
extern void T55f209(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_integer_32_type */
extern void T55f208(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_integer_16_type */
extern void T55f207(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_integer_8_type */
extern void T55f206(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_integer_type */
extern void T55f205(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_immutable_string_32_type */
extern void T55f204(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_function_type */
extern void T55f203(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_exception_manager_type */
extern void T55f202(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_exception_type */
extern void T55f201(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_double_type */
extern void T55f200(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_character_32_type */
extern void T55f199(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_character_8_type */
extern void T55f198(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_character_type */
extern void T55f197(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_boolean_type */
extern void T55f196(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_array_type */
extern void T55f195(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_tuple_type */
extern void T55f194(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_none_type */
extern void T55f193(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_any_type */
extern void T55f192(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.make_adapted */
extern void T55f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_SYSTEM.default_read_only_value */
extern T1 T55f142(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_unknown_kernel_types */
extern void T55f180(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.set_system_name */
extern void T55f179(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.initialize */
extern void T55f178(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.initialize */
extern void T55f178p1(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.class_name_tester */
extern T0* T55f144(GE_context* ac, T0* C);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_TARGET]].set_rout_disp_final */
extern void T160f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] ET_ECF_SYSTEM_PARSER.override_target */
extern void T52f212(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.override_variables */
extern void T56f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.override_capabilities */
extern void T56f57(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].forth */
extern void T583f11(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].cursor_forth */
extern void T216f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].add_traversing_cursor */
extern void T216f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].set_next_cursor */
extern void T583f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].set_position */
extern void T583f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].remove_traversing_cursor */
extern void T216f64(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].set_after */
extern void T583f13(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].item */
extern T0* T583f6(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].cursor_item */
extern T0* T216f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].key */
extern T0* T583f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].cursor_key */
extern T0* T216f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].after */
extern T1 T583f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].new_iterator */
extern T0* T216f34(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].start */
extern void T583f12(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].cursor_start */
extern void T216f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].cursor_off */
extern T1 T216f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].off */
extern T1 T583f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].is_empty */
extern T1 T216f37(GE_context* ac, T0* C);
/* [detachable] ET_ECF_TARGET.override_settings */
extern void T56f56(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_TARGET.override_settings */
extern T0* T56f56ac1(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_TARGET.override_all_assertions */
extern void T56f62(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_TARGET.override_all_assertions */
extern T0* T56f62ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature [detachable] ET_ECF_TARGET.override_all_assertions */
extern T0* T56f62ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature [detachable] ET_ECF_TARGET.override_all_assertions */
extern T0* T56f62ac3(GE_context* ac, T0* a1, T0* a2);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T1666f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_ADAPTED_LIBRARY]].set_rout_disp_final */
extern void T1664f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] ET_ECF_TARGET.override_all_assertions_in_cluster */
extern void T56f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature [detachable] ET_ECF_TARGET.override_all_assertions_in_cluster */
extern T0* T56f64ac1(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ECF_TARGET.override_all_assertions_in_adapted_group */
extern void T56f65(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature [detachable] ET_ECF_TARGET.override_all_assertions_in_adapted_group */
extern T0* T56f65ac1(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.do_adapted */
extern void T746f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_ADAPTED_LIBRARIES.do_adapted */
extern void T745f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTERS.do_explicit */
extern void T744f8(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTERS.do_recursive */
extern void T744f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_TARGET.override_all_assertions_in_option */
extern void T56f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature [detachable] ET_ECF_TARGET.override_all_assertions_in_option */
extern T0* T56f63ac1(GE_context* ac, T0* a1, T0* a2);
/* [detachable] PROCEDURE [[attached] TUPLE [[attached] STRING_8]].set_rout_disp_final */
extern void T1669f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* detachable DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].do_all */
extern void T573f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].forth */
extern void T1960f7(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].cursor_forth */
extern void T573f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].item */
extern T0* T1960f4(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].cursor_item */
extern T0* T573f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].after */
extern T1 T1960f3(GE_context* ac, T0* C);
/* [detachable] DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].start */
extern void T1960f6(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].cursor_start */
extern void T573f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].new_cursor */
extern T0* T573f4(GE_context* ac, T0* C);
/* [detachable] DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make */
extern T0* T1960c5(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].keys */
extern T0* T199f35(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make */
extern T0* T573c7(GE_context* ac, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].set_internal_cursor */
extern void T573f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].new_cursor_with_table_cursor */
extern T0* T573f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_with_table_cursor */
extern T0* T1960c8(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_ECF_TARGETS.do_all */
extern void T198f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].do_all */
extern void T869f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.parse_file_with_action */
extern void T52f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_EIFFEL_PARSER.last_error_description */
extern T0* T173f120(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.position */
extern T0* T173f114(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] XM_POSITION].first */
extern T0* T501f6(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.positions */
extern T0* T173f118(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.new_positions */
extern T0* T173f88(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER].remove */
extern void T502f7(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER].item */
extern T0* T502f4(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER].is_empty */
extern T1 T502f3(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] XM_POSITION].force_last */
extern void T501f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] XM_POSITION].put_right */
extern void T1305f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] XM_POSITION].attach_left */
extern void T1305f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] XM_POSITION].make */
extern T0* T1305c4(GE_context* ac, T0* a1);
/* [detachable] DS_BILINKED_LIST [[attached] XM_POSITION].make */
extern T0* T501c7(GE_context* ac);
/* [detachable] DS_BILINKED_LIST [[attached] XM_POSITION].set_internal_cursor */
extern void T501f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST [[attached] XM_POSITION].new_cursor */
extern T0* T501f5(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] XM_POSITION].make */
extern T0* T1306c3(GE_context* ac, T0* a1);
/* [detachable] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER].copy */
extern void T502f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] XM_EIFFEL_SCANNER].put_right */
extern void T1307f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] XM_EIFFEL_SCANNER].make */
extern T0* T1307c3(GE_context* ac, T0* a1);
/* [detachable] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER].make */
extern T0* T502c5(GE_context* ac);
/* [detachable] ET_ECF_ERROR_HANDLER.report_syntax_error */
extern void T53f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR.make_syntax */
extern T0* T209c87(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] XM_TREE_CALLBACKS_PIPE.last_error */
extern T0* T174f5(GE_context* ac, T0* C);
/* [detachable] ET_COMPRESSED_POSITION.make */
extern T0* T188c11(GE_context* ac, T6 a1, T6 a2);
/* [detachable] ET_COMPRESSED_POSITION.set_position */
extern void T188f13(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eabx_error */
extern void T53f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_ERROR.make_eabx */
extern T0* T209c86(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eadf_error */
extern void T53f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR.make_eadf */
extern T0* T209c85(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eadi_error */
extern void T53f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_ERROR.make_eadi */
extern T0* T209c84(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* detachable DS_HASH_SET [[attached] STRING_8].remove */
extern void T68f43(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [[attached] STRING_8].remove_position */
extern void T68f59(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [[attached] STRING_8].key_storage_put */
extern void T68f76(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable DS_HASH_SET [[attached] STRING_8].key_storage_keep_head */
extern void T68f75(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [[attached] STRING_8].item_storage_keep_head */
extern void T68f74(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [[attached] STRING_8].move_cursors_forth */
extern void T68f73(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [[attached] STRING_8].internal_set_key_equality_tester */
extern void T68f72(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.string_equality_tester */
extern T0* T52f13(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.execution_environment */
extern T0* T52f25(GE_context* ac, T0* C);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eadh_error */
extern void T53f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_ERROR.make_eadh */
extern T0* T209c83(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ECF_ERROR_HANDLER.report_eadg_error */
extern void T53f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_ERROR.make_eadg */
extern T0* T209c82(GE_context* ac, T0* a1, T0* a2);
/* [detachable] XM_TREE_CALLBACKS_PIPE.document */
extern T0* T174f8(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.is_correct */
extern T1 T173f90(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.parse_from_stream */
extern void T173f208(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.parse_with_events */
extern void T173f213(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.on_finish */
extern void T173f219(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.parse */
extern void T173f218(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.yy_pop_last_value */
extern void T173f228(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_PARSER.yy_push_error_value */
extern void T173f227(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.yy_do_action */
extern void T173f226(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_PARSER.on_notation_declaration */
extern void T173f256(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_DTD_CALLBACKS_NULL.on_notation_declaration */
extern void T508f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_DTD_EXTERNAL_ID.set_public */
extern void T518f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T517f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T519f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_DTD_EXTERNAL_ID.set_system */
extern void T518f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.new_dtd_external_id */
extern T0* T173f168(GE_context* ac, T0* C);
/* [detachable] XM_DTD_EXTERNAL_ID.make */
extern T0* T518c3(GE_context* ac);
/* [detachable] XM_EIFFEL_PARSER.when_pe_entity_declared */
extern void T173f255(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].force_new */
extern void T504f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].key_storage_put */
extern void T504f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].item_storage_put */
extern void T504f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF].force */
extern void T1312f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF].fill_with */
extern void T1308f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF].extend */
extern void T1308f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].slots_put */
extern void T504f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].clashes_put */
extern void T504f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].slots_item */
extern T6 T504f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].hash_position */
extern T6 T504f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].clashes_item */
extern T6 T504f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].resize */
extern void T504f48(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].clashes_resize */
extern void T504f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].special_integer_ */
extern T0* T504f33(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].key_storage_resize */
extern void T504f56(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].item_storage_resize */
extern void T504f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1312f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1308f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].key_storage_item */
extern T0* T504f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].slots_resize */
extern void T504f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].new_modulus */
extern T6 T504f29(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].new_capacity */
extern T6 T504f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].unset_found_item */
extern void T504f43(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].has */
extern T1 T504f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].search_position */
extern void T504f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.make_def */
extern T0* T541c210(GE_context* ac, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.make_literal */
extern void T541f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_NULL_EXTERNAL_RESOLVER.default_create */
extern T0* T506c3(GE_context* ac);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.make_scanner */
extern void T541f213(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T541f215(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.reset_sent */
extern void T541f218(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T541f215p1(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T541f215p0(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T541f215p2(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T541f215p3(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.make_with_buffer */
extern void T541f214(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_load_input_buffer */
extern void T541f217(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_set_content */
extern void T541f220(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T541f216(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T541f216p1(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_build_tables */
extern void T541f219(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template */
extern T0* T541f54(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_fixed_array */
extern T0* T541f57(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_5 */
extern void T541f264(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_array_subcopy */
extern void T541f292(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.integer_array_ */
extern T0* T541f59(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_4 */
extern void T541f263(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_3 */
extern void T541f262(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_2 */
extern void T541f261(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_1 */
extern void T541f260(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_meta_template */
extern T0* T541f52(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template */
extern T0* T541f93(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_2 */
extern void T541f232(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_1 */
extern void T541f231(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_def_template */
extern T0* T541f71(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_5 */
extern void T541f230(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_4 */
extern void T541f229(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_3 */
extern void T541f228(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_2 */
extern void T541f227(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_1 */
extern void T541f226(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_base_template */
extern T0* T541f61(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_5 */
extern void T541f225(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_4 */
extern void T541f224(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_3 */
extern void T541f223(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_2 */
extern void T541f222(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_1 */
extern void T541f221(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template */
extern T0* T541f55(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_27 */
extern void T541f291(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_26 */
extern void T541f290(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_25 */
extern void T541f289(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_24 */
extern void T541f288(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_23 */
extern void T541f287(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_22 */
extern void T541f286(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_21 */
extern void T541f285(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_20 */
extern void T541f284(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_19 */
extern void T541f283(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_18 */
extern void T541f282(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_17 */
extern void T541f281(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_16 */
extern void T541f280(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_15 */
extern void T541f279(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_14 */
extern void T541f278(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_13 */
extern void T541f277(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_12 */
extern void T541f276(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_11 */
extern void T541f275(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_10 */
extern void T541f274(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_9 */
extern void T541f273(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_8 */
extern void T541f272(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_7 */
extern void T541f271(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_6 */
extern void T541f270(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_5 */
extern void T541f269(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_4 */
extern void T541f268(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_3 */
extern void T541f267(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_2 */
extern void T541f266(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_1 */
extern void T541f265(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template */
extern T0* T541f51(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_27 */
extern void T541f259(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_26 */
extern void T541f258(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_25 */
extern void T541f257(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_24 */
extern void T541f256(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_23 */
extern void T541f255(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_22 */
extern void T541f254(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_21 */
extern void T541f253(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_20 */
extern void T541f252(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_19 */
extern void T541f251(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_18 */
extern void T541f250(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_17 */
extern void T541f249(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_16 */
extern void T541f248(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_15 */
extern void T541f247(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_14 */
extern void T541f246(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_13 */
extern void T541f245(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_12 */
extern void T541f244(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_11 */
extern void T541f243(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_10 */
extern void T541f242(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_9 */
extern void T541f241(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_8 */
extern void T541f240(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_7 */
extern void T541f239(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_6 */
extern void T541f238(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_5 */
extern void T541f237(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_4 */
extern void T541f236(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_3 */
extern void T541f235(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_2 */
extern void T541f234(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_1 */
extern void T541f233(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.special_integer_ */
extern T0* T541f56(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.empty_buffer */
extern T0* T541f53(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_CHARACTER_ENTITY.make */
extern T0* T1303c8(GE_context* ac);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.make_external */
extern void T541f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_EIFFEL_PARSER.new_external_entity */
extern T0* T173f167(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.make_external */
extern T0* T538c209(GE_context* ac, T0* a1, T0* a2);
/* [detachable] XM_EIFFEL_ENTITY_DEF.make_scanner */
extern void T538f210(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.reset */
extern void T538f212(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.reset */
extern void T538f212p1(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.reset */
extern void T538f212p0(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.reset */
extern void T538f212p2(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.make_with_buffer */
extern void T538f211(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_load_input_buffer */
extern void T538f214(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_set_content */
extern void T538f216(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T538f213(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T538f213p1(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_build_tables */
extern void T538f215(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_accept_template */
extern T0* T538f52(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_fixed_array */
extern T0* T538f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_accept_template_5 */
extern void T538f260(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_array_subcopy */
extern void T538f288(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* [detachable] XM_EIFFEL_ENTITY_DEF.integer_array_ */
extern T0* T538f57(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_accept_template_4 */
extern void T538f259(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_accept_template_3 */
extern void T538f258(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_accept_template_2 */
extern void T538f257(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_accept_template_1 */
extern void T538f256(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_meta_template */
extern T0* T538f50(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_ec_template */
extern T0* T538f90(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_ec_template_2 */
extern void T538f228(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_ec_template_1 */
extern void T538f227(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_def_template */
extern T0* T538f69(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_def_template_5 */
extern void T538f226(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_def_template_4 */
extern void T538f225(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_def_template_3 */
extern void T538f224(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_def_template_2 */
extern void T538f223(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_def_template_1 */
extern void T538f222(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_base_template */
extern T0* T538f59(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_base_template_5 */
extern void T538f221(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_base_template_4 */
extern void T538f220(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_base_template_3 */
extern void T538f219(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_base_template_2 */
extern void T538f218(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_base_template_1 */
extern void T538f217(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template */
extern T0* T538f53(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_27 */
extern void T538f287(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_26 */
extern void T538f286(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_25 */
extern void T538f285(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_24 */
extern void T538f284(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_23 */
extern void T538f283(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_22 */
extern void T538f282(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_21 */
extern void T538f281(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_20 */
extern void T538f280(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_19 */
extern void T538f279(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_18 */
extern void T538f278(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_17 */
extern void T538f277(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_16 */
extern void T538f276(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_15 */
extern void T538f275(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_14 */
extern void T538f274(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_13 */
extern void T538f273(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_12 */
extern void T538f272(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_11 */
extern void T538f271(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_10 */
extern void T538f270(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_9 */
extern void T538f269(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_8 */
extern void T538f268(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_7 */
extern void T538f267(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_6 */
extern void T538f266(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_5 */
extern void T538f265(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_4 */
extern void T538f264(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_3 */
extern void T538f263(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_2 */
extern void T538f262(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_chk_template_1 */
extern void T538f261(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template */
extern T0* T538f49(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_27 */
extern void T538f255(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_26 */
extern void T538f254(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_25 */
extern void T538f253(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_24 */
extern void T538f252(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_23 */
extern void T538f251(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_22 */
extern void T538f250(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_21 */
extern void T538f249(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_20 */
extern void T538f248(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_19 */
extern void T538f247(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_18 */
extern void T538f246(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_17 */
extern void T538f245(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_16 */
extern void T538f244(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_15 */
extern void T538f243(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_14 */
extern void T538f242(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_13 */
extern void T538f241(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_12 */
extern void T538f240(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_11 */
extern void T538f239(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_10 */
extern void T538f238(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_9 */
extern void T538f237(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_8 */
extern void T538f236(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_7 */
extern void T538f235(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_6 */
extern void T538f234(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_5 */
extern void T538f233(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_4 */
extern void T538f232(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_3 */
extern void T538f231(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_2 */
extern void T538f230(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_nxt_template_1 */
extern void T538f229(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.special_integer_ */
extern T0* T538f70(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.empty_buffer */
extern T0* T538f65(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.on_entity_declaration */
extern void T173f254(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* [detachable] XM_DTD_CALLBACKS_NULL.on_entity_declaration */
extern void T508f7(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* [detachable] XM_EIFFEL_PARSER.when_entity_declared */
extern void T173f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_EIFFEL_PARSER.new_literal_entity */
extern T0* T173f166(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_EIFFEL_ENTITY_DEF.make_literal */
extern T0* T538c208(GE_context* ac, T0* a1, T0* a2);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.set_default_value */
extern void T527f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.set_value_fixed */
extern void T527f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.set_value_implied */
extern void T527f24(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.set_value_required */
extern void T527f23(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]].aliased_resized_area */
extern T0* T529f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]].aliased_resized_area */
extern T0* T531f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_BILINKED_LIST [[attached] STRING_8].force_last */
extern void T530f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] STRING_8].put_right */
extern void T1321f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] STRING_8].attach_left */
extern void T1321f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] STRING_8].make */
extern T0* T1321c4(GE_context* ac, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.new_string_bilinked_list */
extern T0* T173f163(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] STRING_8].set_equality_tester */
extern void T530f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.string_equality_tester */
extern T0* T173f177(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] STRING_8].make */
extern T0* T530c10(GE_context* ac);
/* [detachable] DS_BILINKED_LIST [[attached] STRING_8].set_internal_cursor */
extern void T530f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST [[attached] STRING_8].new_cursor */
extern T0* T530f6(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].make */
extern T0* T1320c8(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]].force */
extern void T529f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]].fill_with */
extern void T531f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]].extend */
extern void T531f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.set_enumeration_list */
extern void T527f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.set_enumeration */
extern void T527f27(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.default_enumeration_list */
extern T0* T527f11(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.set_notation */
extern void T527f21(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.set_token */
extern void T527f20(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.set_entity */
extern void T527f19(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.set_list_type */
extern void T527f18(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.set_id_ref */
extern void T527f17(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.set_id */
extern void T527f16(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.set_data */
extern void T527f15(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.new_dtd_attribute_content */
extern T0* T173f162(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T526f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T528f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.make */
extern T0* T527c12(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT].force */
extern void T526f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT].fill_with */
extern void T528f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT].extend */
extern void T528f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.copy_default */
extern void T527f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.is_value_implied */
extern T1 T527f10(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.is_value_required */
extern T1 T527f9(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.has_default_value */
extern T1 T527f8(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.is_value_fixed */
extern T1 T527f7(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ATTRIBUTE_CONTENT.set_name */
extern void T527f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].force */
extern void T523f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].fill_with */
extern void T525f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].extend */
extern void T525f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T523f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T525f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].force_last */
extern void T524f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] XM_DTD_ATTRIBUTE_CONTENT].put_right */
extern void T1319f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] XM_DTD_ATTRIBUTE_CONTENT].attach_left */
extern void T1319f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1319c4(GE_context* ac, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.new_dtd_attribute_content_list */
extern T0* T173f160(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T524c7(GE_context* ac);
/* [detachable] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].set_internal_cursor */
extern void T524f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].new_cursor */
extern T0* T524f5(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1318c8(GE_context* ac, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.on_attribute_declarations */
extern void T173f252(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].forth */
extern void T1318f10(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].cursor_forth */
extern void T524f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].add_traversing_cursor */
extern void T524f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].set_next_cursor */
extern void T1318f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].remove_traversing_cursor */
extern void T524f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].set */
extern void T1318f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [detachable] XM_EIFFEL_PARSER.on_attribute_declaration */
extern void T173f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] XM_DTD_CALLBACKS_NULL.on_attribute_declaration */
extern void T508f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].item */
extern T0* T1318f6(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].start */
extern void T1318f9(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].cursor_start */
extern void T524f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].cursor_off */
extern T1 T524f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].off */
extern T1 T1318f7(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ELEMENT_CONTENT.set_zero_or_more */
extern void T521f11(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ELEMENT_CONTENT.make_mixed */
extern T0* T521c10(GE_context* ac);
/* [detachable] XM_DTD_ELEMENT_CONTENT.set_content_mixed */
extern void T521f21(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ELEMENT_CONTENT.set_choice */
extern void T521f19(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ELEMENT_CONTENT.make_list */
extern void T521f16(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ELEMENT_CONTENT.set_default */
extern void T521f22(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ELEMENT_CONTENT.set_one */
extern void T521f12(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ELEMENT_CONTENT.set_sequence */
extern void T521f20(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1317c6(GE_context* ac);
/* [detachable] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT].set_internal_cursor */
extern void T1317f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT].new_cursor */
extern T0* T1317f5(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1646c3(GE_context* ac, T0* a1);
/* [detachable] XM_DTD_ELEMENT_CONTENT.make_sequence */
extern T0* T521c9(GE_context* ac);
/* [detachable] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT].force_last */
extern void T1317f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] XM_DTD_ELEMENT_CONTENT].put_right */
extern void T1647f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] XM_DTD_ELEMENT_CONTENT].attach_left */
extern void T1647f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1647c4(GE_context* ac, T0* a1);
/* [detachable] XM_DTD_ELEMENT_CONTENT.make_choice */
extern T0* T521c8(GE_context* ac);
/* [detachable] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT].force_first */
extern void T1317f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.element_name */
extern T0* T173f155(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_DTD_ELEMENT_CONTENT.make_name */
extern T0* T521c15(GE_context* ac, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.set_element_repetition */
extern void T173f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_DTD_ELEMENT_CONTENT.set_zero_or_one */
extern void T521f14(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ELEMENT_CONTENT.set_one_or_more */
extern void T521f13(GE_context* ac, T0* C);
/* [detachable] XM_DTD_ELEMENT_CONTENT.make_any */
extern T0* T521c7(GE_context* ac);
/* [detachable] XM_DTD_ELEMENT_CONTENT.set_content_any */
extern void T521f18(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT].force */
extern void T520f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT].fill_with */
extern void T522f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT].extend */
extern void T522f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T520f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T522f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_DTD_ELEMENT_CONTENT.make_empty */
extern T0* T521c6(GE_context* ac);
/* [detachable] XM_DTD_ELEMENT_CONTENT.set_content_empty */
extern void T521f17(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.on_element_declaration */
extern void T173f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_DTD_CALLBACKS_NULL.on_element_declaration */
extern void T508f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_EIFFEL_PARSER.on_attribute */
extern void T173f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].has */
extern T1 T515f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].search_position */
extern void T515f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].hash_position */
extern T6 T515f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER_NAME.hash_code */
extern T6 T512f16(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER_NAME.item */
extern T0* T512f17(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_BILINKED_LIST [[attached] STRING_8].item */
extern T0* T530f8(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [[attached] XM_EIFFEL_PARSER_NAME].test */
extern T1 T1315f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].key_storage_item */
extern T0* T515f19(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].item_storage_item */
extern T0* T515f29(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].clashes_item */
extern T6 T515f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].key_equality_tester */
extern T0* T515f17(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].slots_item */
extern T6 T515f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].force */
extern void T514f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].fill_with */
extern void T516f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].extend */
extern void T516f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T514f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T516f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].force_new */
extern void T515f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].item_storage_put */
extern void T515f39(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].slots_put */
extern void T515f38(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].clashes_put */
extern void T515f37(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].resize */
extern void T515f36(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].clashes_resize */
extern void T515f48(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].special_integer_ */
extern T0* T515f28(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].key_storage_resize */
extern void T515f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].item_storage_resize */
extern void T515f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].slots_resize */
extern void T515f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].new_modulus */
extern T6 T515f20(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].new_capacity */
extern T6 T515f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].unset_found_item */
extern void T515f35(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.new_name_set */
extern T0* T173f148(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].make_equal */
extern T0* T515c31(GE_context* ac, T6 a1);
/* detachable KL_EQUALITY_TESTER [[attached] XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T1315c2(GE_context* ac);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].make */
extern void T515f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].set_internal_cursor */
extern void T515f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].new_cursor */
extern T0* T515f21(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] XM_EIFFEL_PARSER_NAME].make */
extern T0* T1316c4(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].make_slots */
extern void T515f43(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].make_clashes */
extern void T515f42(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].make_key_storage */
extern void T515f41(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].make_item_storage */
extern void T515f40(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME].make */
extern T0* T511f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME].make_empty */
extern T0* T513c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T511c3(GE_context* ac);
/* [detachable] XM_EIFFEL_PARSER.on_start_tag */
extern void T173f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] XM_EIFFEL_PARSER.on_end_tag */
extern void T173f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] XM_EIFFEL_PARSER_NAME.local_part */
extern T0* T512f11(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].forth */
extern void T1320f10(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] STRING_8].cursor_forth */
extern void T530f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST [[attached] STRING_8].add_traversing_cursor */
extern void T530f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].set_next_cursor */
extern void T1320f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST [[attached] STRING_8].remove_traversing_cursor */
extern void T530f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].set */
extern void T1320f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].item */
extern T0* T1320f6(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].start */
extern void T1320f9(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] STRING_8].cursor_start */
extern void T530f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST [[attached] STRING_8].cursor_off */
extern T1 T530f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].off */
extern T1 T1320f7(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER_NAME.string_ */
extern T0* T512f10(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER_NAME.last */
extern T0* T512f9(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] STRING_8].last */
extern T0* T530f7(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER_NAME.ns_prefix */
extern T0* T512f8(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER_NAME.is_namespace_name */
extern T1 T512f7(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern void T512f18(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern T0* T512c18(GE_context* ac);
/* [detachable] XM_EIFFEL_PARSER_NAME.new_string_bilinked_list */
extern T0* T512f15(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER_NAME.string_equality_tester */
extern T0* T512f14(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.on_start_tag_finish */
extern void T173f246(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER_NAME.is_equal */
extern T1 T512f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER_NAME.same_string */
extern T1 T512f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_EIFFEL_PARSER.when_external_dtd */
extern void T173f245(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.make_scanner */
extern T0* T539c201(GE_context* ac);
/* [detachable] XM_EIFFEL_SCANNER_DTD.set_start_condition */
extern void T539f208(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.make_scanner */
extern void T539f201p1(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.reset */
extern void T539f210(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.reset */
extern void T539f210p1(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.reset */
extern void T539f210p0(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.make_with_buffer */
extern void T539f209(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_load_input_buffer */
extern void T539f220(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_set_content */
extern void T539f221(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T539f219(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T539f219p1(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_build_tables */
extern void T539f224(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_accept_template */
extern T0* T539f195(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_fixed_array */
extern T0* T539f198(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_accept_template_5 */
extern void T539f295(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_array_subcopy */
extern void T539f296(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* [detachable] XM_EIFFEL_SCANNER_DTD.integer_array_ */
extern T0* T539f200(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_accept_template_4 */
extern void T539f294(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_accept_template_3 */
extern void T539f293(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_accept_template_2 */
extern void T539f292(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_accept_template_1 */
extern void T539f291(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_meta_template */
extern T0* T539f194(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_ec_template */
extern T0* T539f193(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_ec_template_2 */
extern void T539f290(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_ec_template_1 */
extern void T539f289(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_def_template */
extern T0* T539f192(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_def_template_5 */
extern void T539f288(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_def_template_4 */
extern void T539f287(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_def_template_3 */
extern void T539f286(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_def_template_2 */
extern void T539f285(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_def_template_1 */
extern void T539f284(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_base_template */
extern T0* T539f191(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_base_template_5 */
extern void T539f283(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_base_template_4 */
extern void T539f282(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_base_template_3 */
extern void T539f281(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_base_template_2 */
extern void T539f280(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_base_template_1 */
extern void T539f279(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template */
extern T0* T539f190(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_27 */
extern void T539f278(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_26 */
extern void T539f277(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_25 */
extern void T539f276(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_24 */
extern void T539f275(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_23 */
extern void T539f274(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_22 */
extern void T539f273(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_21 */
extern void T539f272(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_20 */
extern void T539f271(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_19 */
extern void T539f270(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_18 */
extern void T539f269(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_17 */
extern void T539f268(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_16 */
extern void T539f267(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_15 */
extern void T539f266(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_14 */
extern void T539f265(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_13 */
extern void T539f264(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_12 */
extern void T539f263(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_11 */
extern void T539f262(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_10 */
extern void T539f261(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_9 */
extern void T539f260(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_8 */
extern void T539f259(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_7 */
extern void T539f258(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_6 */
extern void T539f257(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_5 */
extern void T539f256(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_4 */
extern void T539f255(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_3 */
extern void T539f254(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_2 */
extern void T539f253(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_chk_template_1 */
extern void T539f252(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template */
extern T0* T539f189(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_27 */
extern void T539f251(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_26 */
extern void T539f250(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_25 */
extern void T539f249(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_24 */
extern void T539f248(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_23 */
extern void T539f247(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_22 */
extern void T539f246(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_21 */
extern void T539f245(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_20 */
extern void T539f244(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_19 */
extern void T539f243(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_18 */
extern void T539f242(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_17 */
extern void T539f241(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_16 */
extern void T539f240(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_15 */
extern void T539f239(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_14 */
extern void T539f238(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_13 */
extern void T539f237(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_12 */
extern void T539f236(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_11 */
extern void T539f235(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_10 */
extern void T539f234(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_9 */
extern void T539f233(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_8 */
extern void T539f232(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_7 */
extern void T539f231(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_6 */
extern void T539f230(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_5 */
extern void T539f229(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_4 */
extern void T539f228(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_3 */
extern void T539f227(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_2 */
extern void T539f226(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_nxt_template_1 */
extern void T539f225(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.special_integer_ */
extern T0* T539f62(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.empty_buffer */
extern T0* T539f50(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER].force */
extern void T502f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.null_resolver */
extern T0* T173f112(GE_context* ac, T0* C);
/* [detachable] XM_NULL_EXTERNAL_RESOLVER.last_error */
extern T0* T506f1(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.resolve_external_id */
extern void T173f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_NULL_EXTERNAL_RESOLVER.resolve */
extern void T506f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_NULL_EXTERNAL_RESOLVER.resolve_public */
extern void T506f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID].force */
extern void T517f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] XM_DTD_EXTERNAL_ID].fill_with */
extern void T519f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] XM_DTD_EXTERNAL_ID].extend */
extern void T519f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.on_dtd_end */
extern void T173f244(GE_context* ac, T0* C);
/* [detachable] XM_DTD_CALLBACKS_NULL.on_dtd_end */
extern void T508f5(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.on_doctype */
extern void T173f243(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] XM_DTD_CALLBACKS_NULL.on_doctype */
extern void T508f4(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] XM_EIFFEL_DECLARATION.set_encoding */
extern void T534f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_DECLARATION.set_stand_alone */
extern void T534f8(GE_context* ac, T0* C, T1 a1);
/* [detachable] XM_EIFFEL_DECLARATION.set_version */
extern void T534f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION].force */
extern void T533f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] XM_EIFFEL_DECLARATION].fill_with */
extern void T535f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] XM_EIFFEL_DECLARATION].extend */
extern void T535f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T533f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T535f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_DECLARATION.make */
extern T0* T534c7(GE_context* ac);
/* [detachable] XM_EIFFEL_DECLARATION.process */
extern void T534f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.on_xml_declaration */
extern void T173f287(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] XM_EIFFEL_PARSER.apply_encoding */
extern void T173f242(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.on_content */
extern void T173f241(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.on_dtd_processing_instruction */
extern void T173f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_DTD_CALLBACKS_NULL.on_dtd_processing_instruction */
extern void T508f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_EIFFEL_PARSER.on_processing_instruction */
extern void T173f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_EIFFEL_PARSER.on_dtd_comment */
extern void T173f238(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_DTD_CALLBACKS_NULL.on_dtd_comment */
extern void T508f2(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.on_comment */
extern void T173f237(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.entity_referenced_in_entity_value */
extern T0* T173f138(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.defined_entity_referenced */
extern T0* T173f191(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.external_entity_to_string */
extern T0* T173f198(GE_context* ac, T0* C, T0* a1);
/* [detachable] STRING_8.remove */
extern void T17f76(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_NULL_EXTERNAL_RESOLVER.resolve_finish */
extern void T506f6(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_INPUT_STREAM.read_string */
extern void T863f30(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_INPUT_STREAM.string_ */
extern T0* T863f17(GE_context* ac, T0* C);
/* [detachable] KL_INTEGER_ROUTINES.platform */
extern T0* T864f1(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.integer_ */
extern T0* T173f203(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_INPUT_STREAM.make_from_stream */
extern T0* T863c29(GE_context* ac, T0* a1);
/* [detachable] DS_LINKED_QUEUE [[attached] CHARACTER_8].make */
extern T0* T1551c5(GE_context* ac);
/* [detachable] XM_NULL_EXTERNAL_RESOLVER.last_stream */
extern T0* T506f2(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].item */
extern T0* T504f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].item_storage_item */
extern T0* T504f35(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_PARSER.string_ */
extern T0* T173f137(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.force_error */
extern void T173f236(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.report_error */
extern void T173f234(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.on_error */
extern void T173f260(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.last_error_extended_description */
extern T0* T173f173(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.safe_error_component */
extern T0* T173f193(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.is_safe_error_character */
extern T1 T173f201(GE_context* ac, T0* C, T2 a1);
/* [detachable] XM_EIFFEL_PARSER.setup_error_state */
extern void T173f259(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.onstring_utf8 */
extern T0* T173f126(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.maximum_item_code */
extern T6 T173f186(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.is_string_mode_latin1 */
extern T1 T173f185(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.new_unicode_string_from_utf8 */
extern T0* T173f181(GE_context* ac, T0* C, T0* a1);
/* [detachable] UC_UTF8_STRING.make_from_utf8 */
extern T0* T862c67(GE_context* ac, T0* a1);
/* [detachable] UC_UTF8_STRING.append_utf8 */
extern void T862f86(GE_context* ac, T0* C, T0* a1);
/* [detachable] UC_UTF8_ROUTINES.valid_utf8 */
extern T1 T861f1(GE_context* ac, T0* C, T0* a1);
/* [detachable] UC_UTF8_ROUTINES.is_encoded_next_byte */
extern T1 T861f10(GE_context* ac, T0* C, T2 a1);
/* [detachable] UC_UTF8_ROUTINES.is_encoded_second_byte */
extern T1 T861f5(GE_context* ac, T0* C, T2 a1, T2 a2);
/* [detachable] UC_UTF8_ROUTINES.is_encoded_first_byte */
extern T1 T861f2(GE_context* ac, T0* C, T2 a1);
/* [detachable] XM_EIFFEL_PARSER.utf8 */
extern T0* T173f184(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.is_string_mode_ascii */
extern T1 T173f182(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.onstring_ascii */
extern T0* T173f124(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.is_string_mode_unicode */
extern T1 T173f180(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.shared_empty_string */
extern T0* T173f135(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.shared_empty_string_string */
extern T0* T173f190(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.shared_empty_string_uc */
extern T0* T173f189(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.new_unicode_string_empty */
extern T0* T173f197(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.make_empty */
extern T0* T862c72(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME].force */
extern void T511f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME].fill_with */
extern void T513f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME].extend */
extern void T513f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T511f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T513f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_PARSER.namespace_force_last */
extern void T173f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_EIFFEL_PARSER_NAME.force_last */
extern void T512f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER_NAME.can_force_last */
extern T1 T512f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.new_namespace_name */
extern T0* T173f134(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER_NAME.make_namespaces */
extern T0* T512c20(GE_context* ac);
/* [detachable] XM_EIFFEL_PARSER.yy_push_last_value */
extern void T173f225(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_PARSER.accept */
extern void T173f224(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.yy_do_error_action */
extern void T173f222(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_PARSER.report_eof_expected_error */
extern void T173f233(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.read_token */
extern void T173f221(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.process_attribute_entity */
extern void T173f232(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.process_entity_scanner */
extern void T173f258(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.set_start_condition */
extern void T538f290(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.set_start_condition */
extern void T541f294(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.apply_input_buffer */
extern void T538f289(GE_context* ac, T0* C);
/* [detachable] KL_STRING_INPUT_STREAM.make */
extern T0* T1404c9(GE_context* ac, T0* a1);
/* [detachable] UC_UTF8_ROUTINES.to_utf8 */
extern T0* T861f32(GE_context* ac, T0* C, T0* a1);
extern T1 T861f32ot1(T0* a1, T0** a2);
/* [detachable] UC_UTF8_ROUTINES.append_code_to_utf8 */
extern void T861f37(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] UC_UTF8_ROUTINES.integer_ */
extern T0* T861f29(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.utf8 */
extern T0* T538f68(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.fatal_error */
extern void T538f297(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.apply_input_buffer */
extern void T541f293(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.utf8 */
extern T0* T541f70(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.fatal_error */
extern void T541f301(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.is_literal */
extern T1 T538f63(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.is_external */
extern T1 T538f66(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.is_literal */
extern T1 T541f65(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.is_external */
extern T1 T541f68(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.process_entity */
extern void T173f231(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.process_pe_entity */
extern void T173f230(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.special_integer_ */
extern T0* T173f97(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.yy_init_value_stacks */
extern void T173f220(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.yy_clear_all */
extern void T173f229(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.clear_all */
extern void T173f257(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.clear_stacks */
extern void T173f263(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T173f264(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] XM_EIFFEL_DECLARATION].keep_head */
extern void T535f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] XM_EIFFEL_DECLARATION].set_count */
extern void T535f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]].keep_head */
extern void T531f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]].set_count */
extern void T531f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT].keep_head */
extern void T528f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT].set_count */
extern void T528f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].keep_head */
extern void T525f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].set_count */
extern void T525f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT].keep_head */
extern void T522f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT].set_count */
extern void T522f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] XM_DTD_EXTERNAL_ID].keep_head */
extern void T519f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] XM_DTD_EXTERNAL_ID].set_count */
extern void T519f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].keep_head */
extern void T516f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].set_count */
extern void T516f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME].keep_head */
extern void T513f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME].set_count */
extern void T513f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_PARSER.abort */
extern void T173f223(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.on_start */
extern void T173f217(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.reset_error_state */
extern void T173f216(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.reset */
extern void T173f212(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].wipe_out */
extern void T504f37(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].slots_wipe_out */
extern void T504f47(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].clashes_wipe_out */
extern void T504f46(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].key_storage_wipe_out */
extern void T504f45(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].item_storage_wipe_out */
extern void T504f44(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF].keep_head */
extern void T1308f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF].set_count */
extern void T1308f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].move_all_cursors_after */
extern void T504f42(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].set_next_cursor */
extern void T1311f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].set_after */
extern void T1311f7(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.make_scanner */
extern void T173f210(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.make_scanner */
extern T0* T498c199(GE_context* ac);
/* [detachable] XM_EIFFEL_SCANNER.reset */
extern void T498f207(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.reset */
extern void T498f207p1(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.reset */
extern void T498f207p0(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.make_with_buffer */
extern void T498f206(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_load_input_buffer */
extern void T498f215(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.yy_set_content */
extern void T498f216(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_initialize */
extern void T498f214(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.yy_initialize */
extern void T498f214p1(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.yy_build_tables */
extern void T498f222(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.yy_accept_template */
extern T0* T498f193(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.yy_fixed_array */
extern T0* T498f196(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_accept_template_5 */
extern void T498f293(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_array_subcopy */
extern void T498f294(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* [detachable] XM_EIFFEL_SCANNER.integer_array_ */
extern T0* T498f198(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.yy_accept_template_4 */
extern void T498f292(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_accept_template_3 */
extern void T498f291(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_accept_template_2 */
extern void T498f290(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_accept_template_1 */
extern void T498f289(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_meta_template */
extern T0* T498f192(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.yy_ec_template */
extern T0* T498f191(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.yy_ec_template_2 */
extern void T498f288(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_ec_template_1 */
extern void T498f287(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_def_template */
extern T0* T498f190(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.yy_def_template_5 */
extern void T498f286(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_def_template_4 */
extern void T498f285(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_def_template_3 */
extern void T498f284(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_def_template_2 */
extern void T498f283(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_def_template_1 */
extern void T498f282(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_base_template */
extern T0* T498f189(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.yy_base_template_5 */
extern void T498f281(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_base_template_4 */
extern void T498f280(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_base_template_3 */
extern void T498f279(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_base_template_2 */
extern void T498f278(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_base_template_1 */
extern void T498f277(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template */
extern T0* T498f188(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_27 */
extern void T498f276(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_26 */
extern void T498f275(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_25 */
extern void T498f274(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_24 */
extern void T498f273(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_23 */
extern void T498f272(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_22 */
extern void T498f271(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_21 */
extern void T498f270(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_20 */
extern void T498f269(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_19 */
extern void T498f268(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_18 */
extern void T498f267(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_17 */
extern void T498f266(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_16 */
extern void T498f265(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_15 */
extern void T498f264(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_14 */
extern void T498f263(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_13 */
extern void T498f262(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_12 */
extern void T498f261(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_11 */
extern void T498f260(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_10 */
extern void T498f259(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_9 */
extern void T498f258(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_8 */
extern void T498f257(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_7 */
extern void T498f256(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_6 */
extern void T498f255(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_5 */
extern void T498f254(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_4 */
extern void T498f253(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_3 */
extern void T498f252(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_2 */
extern void T498f251(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_chk_template_1 */
extern void T498f250(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template */
extern T0* T498f187(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_27 */
extern void T498f249(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_26 */
extern void T498f248(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_25 */
extern void T498f247(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_24 */
extern void T498f246(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_23 */
extern void T498f245(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_22 */
extern void T498f244(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_21 */
extern void T498f243(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_20 */
extern void T498f242(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_19 */
extern void T498f241(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_18 */
extern void T498f240(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_17 */
extern void T498f239(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_16 */
extern void T498f238(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_15 */
extern void T498f237(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_14 */
extern void T498f236(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_13 */
extern void T498f235(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_12 */
extern void T498f234(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_11 */
extern void T498f233(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_10 */
extern void T498f232(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_9 */
extern void T498f231(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_8 */
extern void T498f230(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_7 */
extern void T498f229(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_6 */
extern void T498f228(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_5 */
extern void T498f227(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_4 */
extern void T498f226(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_3 */
extern void T498f225(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_2 */
extern void T498f224(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_nxt_template_1 */
extern void T498f223(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.special_integer_ */
extern T0* T498f51(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.empty_buffer */
extern T0* T498f70(GE_context* ac, T0* C);
/* [detachable] DS_CELL [detachable ET_ECF_SYSTEM].make */
extern T0* T158c2(GE_context* ac, T0* a1);
/* [detachable] GEC.target_name */
extern T0* T24f33(GE_context* ac, T0* C);
/* [detachable] AP_STRING_OPTION.parameter */
extern T0* T40f15(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.set_override_variables */
extern void T52f209(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.set_override_capabilities */
extern void T52f208(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.set_override_settings */
extern void T52f207(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_SETTINGS.set_primary_value */
extern void T54f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ECF_SETTINGS.make */
extern T0* T54c7(GE_context* ac);
/* Creation of agent #1 in feature detachable ET_ECF_SETTINGS.make */
extern T0* T54f7ac1(GE_context* ac, T0* a1);
/* detachable ET_ECF_SETTINGS.string_ */
extern T0* T54f3(GE_context* ac, T0* C);
/* detachable ET_ECF_SETTINGS.case_insensitive_string_equality_tester */
extern T0* T54f6(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM_PARSER.make */
extern T0* T52c206(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T52f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_CALLBACKS_TO_TREE_FILTER.enable_position_table */
extern void T177f10(GE_context* ac, T0* C, T0* a1);
/* detachable XM_POSITION_TABLE.make */
extern T0* T164c4(GE_context* ac);
/* [detachable] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].make */
extern T0* T859c7(GE_context* ac);
/* [detachable] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].set_internal_cursor */
extern void T859f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.set_callbacks */
extern void T173f207(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_TREE_CALLBACKS_PIPE.make */
extern T0* T174c10(GE_context* ac);
/* [detachable] XM_TREE_CALLBACKS_PIPE.callbacks_pipe */
extern T0* T174f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ARRAY [[attached] XM_CALLBACKS_FILTER].item */
extern T0* T543f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_CALLBACKS_TO_TREE_FILTER.make_null */
extern T0* T177c9(GE_context* ac);
/* [detachable] XM_CALLBACKS_TO_TREE_FILTER.make_next */
extern void T177f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_CALLBACKS_TO_TREE_FILTER.initialize */
extern void T177f12(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].make_equal */
extern T0* T545c31(GE_context* ac, T6 a1);
/* detachable KL_EQUALITY_TESTER [[attached] XM_NAMESPACE].default_create */
extern T0* T1327c2(GE_context* ac);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].make */
extern void T545f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].set_internal_cursor */
extern void T545f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].new_cursor */
extern T0* T545f24(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] XM_NAMESPACE].make */
extern T0* T1328c4(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].unset_found_item */
extern void T545f37(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].make_slots */
extern void T545f36(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].new_modulus */
extern T6 T545f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].make_clashes */
extern void T545f35(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].make_key_storage */
extern void T545f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].make_item_storage */
extern void T545f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE].make */
extern T0* T1329f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] XM_NAMESPACE].make_empty */
extern T0* T1330c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE].default_create */
extern T0* T1329c3(GE_context* ac);
/* [detachable] XM_DOCUMENT.make */
extern T0* T187c10(GE_context* ac);
/* [detachable] XM_DOCUMENT.make_with_root_named */
extern void T187f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_DOCUMENT.force_last */
extern void T187f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].force_last */
extern void T561f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].force_last */
extern void T561f12p1(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] XM_DOCUMENT_NODE].put_right */
extern void T1340f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] XM_DOCUMENT_NODE].make */
extern T0* T1340c3(GE_context* ac, T0* a1);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].before_addition */
extern void T561f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_DOCUMENT.before_addition */
extern void T187f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_ELEMENT.equality_delete */
extern void T163f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].remove */
extern void T430f14(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].remove_at_cursor */
extern void T854f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].move_all_cursors */
extern void T854f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].set_current_cell */
extern void T430f18(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] XM_ELEMENT_NODE].put */
extern void T1677f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] XM_ELEMENT_NODE].put_right */
extern void T1677f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].set_last_cell */
extern void T854f23(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] XM_ELEMENT_NODE].forget_right */
extern void T1677f5(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].remove_last */
extern void T854f22(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].move_last_cursors_after */
extern void T854f27(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].wipe_out */
extern void T854f25(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].move_all_cursors_after */
extern void T854f28(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].is_last */
extern T1 T430f7(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].cursor_is_last */
extern T1 T854f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].remove_first */
extern void T854f21(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].set_first_cell */
extern void T854f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].is_first */
extern T1 T430f6(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].cursor_is_first */
extern T1 T854f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_DOCUMENT.equality_delete */
extern void T187f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].forth */
extern void T868f13(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].cursor_forth */
extern void T561f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].add_traversing_cursor */
extern void T561f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].set_next_cursor */
extern void T868f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].remove_traversing_cursor */
extern void T561f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].set */
extern void T868f15(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].remove */
extern void T868f12(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].remove_at_cursor */
extern void T561f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].move_all_cursors */
extern void T561f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].set_current_cell */
extern void T868f17(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] XM_DOCUMENT_NODE].put */
extern void T1340f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].set_last_cell */
extern void T561f21(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] XM_DOCUMENT_NODE].forget_right */
extern void T1340f5(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].remove_last */
extern void T561f20(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].move_last_cursors_after */
extern void T561f26(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].set_after */
extern void T868f18(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].wipe_out */
extern void T561f24(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].move_all_cursors_after */
extern void T561f27(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].is_last */
extern T1 T868f7(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].cursor_is_last */
extern T1 T561f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].remove_first */
extern void T561f19(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].set_first_cell */
extern void T561f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].is_first */
extern T1 T868f6(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].cursor_is_first */
extern T1 T561f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].item */
extern T0* T868f8(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].start */
extern void T868f11(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].cursor_start */
extern void T561f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].cursor_off */
extern T1 T561f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].off */
extern T1 T868f9(GE_context* ac, T0* C);
/* [detachable] XM_DOCUMENT.new_cursor */
extern T0* T187f7(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].new_cursor */
extern T0* T561f5(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].make */
extern T0* T868c10(GE_context* ac, T0* a1);
/* [detachable] XM_DOCUMENT.last */
extern T0* T187f6(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].last */
extern T0* T561f7(GE_context* ac, T0* C);
/* [detachable] XM_DOCUMENT.is_empty */
extern T1 T187f5(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].is_empty */
extern T1 T561f6(GE_context* ac, T0* C);
/* [detachable] XM_ELEMENT.make */
extern T0* T163c16(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].make */
extern T0* T854c11(GE_context* ac);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].set_internal_cursor */
extern void T854f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].make */
extern T0* T561c11(GE_context* ac);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].set_internal_cursor */
extern void T561f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_DOCUMENT.default_ns */
extern T0* T187f3(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE.make_default */
extern T0* T429c7(GE_context* ac);
/* [detachable] XM_NAMESPACE.make */
extern void T429f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_NAMESPACE.make */
extern T0* T429c8(GE_context* ac, T0* a1, T0* a2);
/* [detachable] XM_CALLBACKS_TO_TREE_FILTER.null_callbacks */
extern T0* T177f7(GE_context* ac, T0* C);
/* [detachable] XM_CALLBACKS_NULL.make */
extern T0* T503c1(GE_context* ac);
/* [detachable] XM_TREE_CALLBACKS_PIPE.new_stop_on_error */
extern T0* T174f7(GE_context* ac, T0* C);
/* [detachable] XM_STOP_ON_ERROR_FILTER.make_null */
extern T0* T190c5(GE_context* ac);
/* [detachable] XM_STOP_ON_ERROR_FILTER.make_next */
extern void T190f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_STOP_ON_ERROR_FILTER.initialize */
extern void T190f7(GE_context* ac, T0* C);
/* [detachable] XM_STOP_ON_ERROR_FILTER.null_callbacks */
extern T0* T190f4(GE_context* ac, T0* C);
/* [detachable] XM_TREE_CALLBACKS_PIPE.new_namespace_resolver */
extern T0* T174f6(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.make_null */
extern T0* T542c27(GE_context* ac);
/* [detachable] XM_NAMESPACE_RESOLVER.make_next */
extern void T542f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_NAMESPACE_RESOLVER.initialize */
extern void T542f39(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.attributes_make */
extern void T542f43(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.new_string_queue */
extern T0* T542f21(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_QUEUE [[attached] STRING_8].make */
extern T0* T1326c5(GE_context* ac);
/* [detachable] XM_NAMESPACE_RESOLVER.new_detachable_string_queue */
extern T0* T542f20(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_QUEUE [detachable STRING_8].make */
extern T0* T1325c6(GE_context* ac);
/* [detachable] XM_NAMESPACE_RESOLVER_CONTEXT.make */
extern T0* T1322c10(GE_context* ac);
/* [detachable] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].make */
extern T0* T1649c8(GE_context* ac);
/* [detachable] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].set_internal_cursor */
extern void T1649f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].new_cursor */
extern T0* T1649f6(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].make */
extern T0* T1650c8(GE_context* ac, T0* a1);
/* [detachable] XM_NAMESPACE_RESOLVER.null_callbacks */
extern T0* T542f13(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.set_string_mode_mixed */
extern void T173f206(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.make */
extern T0* T173c205(GE_context* ac);
/* [detachable] XM_EIFFEL_PARSER.new_entities_table */
extern T0* T173f85(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].set_key_equality_tester */
extern void T504f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_map_default */
extern T0* T504c36(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_map */
extern void T504f41(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_with_equality_testers */
extern void T504f53(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_sparse_container */
extern void T504f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].set_internal_cursor */
extern void T504f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].new_cursor */
extern T0* T504f34(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make */
extern T0* T1311c6(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_slots */
extern void T504f62(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_clashes */
extern void T504f61(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_key_storage */
extern void T504f60(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_item_storage */
extern void T504f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF].make */
extern T0* T1312f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF].make_empty */
extern T0* T1308c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF].default_create */
extern T0* T1312c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].default_capacity */
extern T6 T504f30(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.make_parser */
extern void T173f211(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.yy_build_parser_tables */
extern void T173f215(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.yycheck_template */
extern T0* T173f121(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.yyfixed_array */
extern T0* T173f178(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yycheck_template_4 */
extern void T173f285(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yyarray_subcopy */
extern void T173f286(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* [detachable] XM_EIFFEL_PARSER.integer_array_ */
extern T0* T173f204(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.yycheck_template_3 */
extern void T173f284(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yycheck_template_2 */
extern void T173f283(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yycheck_template_1 */
extern void T173f282(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yytable_template */
extern T0* T173f119(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.yytable_template_4 */
extern void T173f281(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yytable_template_3 */
extern void T173f280(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yytable_template_2 */
extern void T173f279(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yytable_template_1 */
extern void T173f278(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yypgoto_template */
extern T0* T173f117(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.yypact_template */
extern T0* T173f115(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.yypact_template_3 */
extern void T173f277(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yypact_template_2 */
extern void T173f276(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yypact_template_1 */
extern void T173f275(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yydefgoto_template */
extern T0* T173f113(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.yydefact_template */
extern T0* T173f105(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.yydefact_template_3 */
extern void T173f274(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yydefact_template_2 */
extern void T173f273(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yydefact_template_1 */
extern void T173f272(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yytypes2_template */
extern T0* T173f98(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.yytypes1_template */
extern T0* T173f93(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.yytypes1_template_3 */
extern void T173f271(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yytypes1_template_2 */
extern void T173f270(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yytypes1_template_1 */
extern void T173f269(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yyr1_template */
extern T0* T173f89(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.yyr1_template_2 */
extern void T173f268(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yyr1_template_1 */
extern void T173f267(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yytranslate_template */
extern T0* T173f87(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.yytranslate_template_2 */
extern void T173f266(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yytranslate_template_1 */
extern void T173f265(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PARSER.yy_create_value_stacks */
extern void T173f214(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION].make */
extern T0* T533f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] XM_EIFFEL_DECLARATION].make_empty */
extern T0* T535c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION].default_create */
extern T0* T533c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]].make */
extern T0* T529f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]].make_empty */
extern T0* T531c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]].default_create */
extern T0* T529c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T526f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT].make_empty */
extern T0* T528c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT].default_create */
extern T0* T526c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T523f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].make_empty */
extern T0* T525c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].default_create */
extern T0* T523c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT].make */
extern T0* T520f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT].make_empty */
extern T0* T522c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT].default_create */
extern T0* T520c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID].make */
extern T0* T517f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] XM_DTD_EXTERNAL_ID].make_empty */
extern T0* T519c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID].default_create */
extern T0* T517c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].make */
extern T0* T514f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].make_empty */
extern T0* T516c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].default_create */
extern T0* T514c3(GE_context* ac);
/* [detachable] XM_EIFFEL_PARSER.initialize */
extern void T173f209(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PARSER.null_dtd_callbacks */
extern T0* T173f86(GE_context* ac, T0* C);
/* [detachable] XM_DTD_CALLBACKS_NULL.make */
extern T0* T508c1(GE_context* ac);
/* [detachable] XM_EIFFEL_PARSER.null_callbacks */
extern T0* T173f84(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].set_key_equality_tester */
extern void T171f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_map */
extern T0* T171c34(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_with_equality_testers */
extern void T171f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_sparse_container */
extern void T171f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].set_internal_cursor */
extern void T171f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].new_cursor */
extern T0* T171f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make */
extern T0* T496c6(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_slots */
extern void T171f60(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_clashes */
extern void T171f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_key_storage */
extern void T171f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_item_storage */
extern void T171f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY].make */
extern T0* T497f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY].make_empty */
extern T0* T493c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY].default_create */
extern T0* T497c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].set_key_equality_tester */
extern void T169f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_map */
extern T0* T169c40(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_with_equality_testers */
extern void T169f47(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_sparse_container */
extern void T169f62(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].set_internal_cursor */
extern void T169f73(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].new_cursor */
extern T0* T169f37(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make */
extern T0* T488c8(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_slots */
extern void T169f72(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_clashes */
extern void T169f71(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_key_storage */
extern void T169f70(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_item_storage */
extern void T169f69(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY].make */
extern T0* T492f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ECF_LIBRARY].make_empty */
extern T0* T489c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY].default_create */
extern T0* T492c3(GE_context* ac);
/* [detachable] ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T52f211p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_SYSTEM_PARSER.ise_latest */
extern T0* T52f15(GE_context* ac, T0* C);
/* [detachable] ET_ECF_AST_FACTORY.make */
extern T0* T157c53(GE_context* ac);
/* [detachable] ET_ECF_ERROR_HANDLER.make_standard */
extern T0* T53c10(GE_context* ac);
/* [detachable] KL_STANDARD_FILES.output */
extern T0* T134f2(GE_context* ac, T0* C);
/* [detachable] KL_STDOUT_FILE.make */
extern T0* T136c5(GE_context* ac);
/* [detachable] ET_ECF_ERROR_HANDLER.std */
extern T0* T53f7(GE_context* ac, T0* C);
/* [detachable] ET_ECF_ERROR_HANDLER.make_null */
extern T0* T53c9(GE_context* ac);
/* [detachable] ET_ECF_ERROR_HANDLER.null_output_stream */
extern T0* T53f6(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.is_open_read */
extern T1 T31f14(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.old_is_open_read */
extern T1 T31f28(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.open_read */
extern void T31f61(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.old_open_read */
extern void T31f66(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.default_pointer */
extern T14 T31f21(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.open_read */
extern void T31f66p1(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.file_open */
extern T14 T31f24(GE_context* ac, T0* C, T14 a1, T6 a2);
/* [detachable] KL_TEXT_INPUT_FILE.old_is_readable */
extern T1 T31f16(GE_context* ac, T0* C);
/* [detachable] FILE_INFO.is_readable */
extern T1 T131f8(GE_context* ac, T0* C);
/* [detachable] FILE_INFO.file_eaccess */
extern T1 T131f6(GE_context* ac, T0* C, T14 a1, T6 a2);
/* [detachable] KL_TEXT_INPUT_FILE.make */
extern void T31f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_TEXT_INPUT_FILE.make */
extern T0* T31c60(GE_context* ac, T0* a1);
/* [detachable] KL_TEXT_INPUT_FILE.make */
extern void T31f60p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_TEXT_INPUT_FILE.old_make */
extern void T31f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_TEXT_INPUT_FILE.make_with_name */
extern void T31f70(GE_context* ac, T0* C, T0* a1);
/* [detachable] GEC.parse_arguments */
extern void T24f60(GE_context* ac, T0* C);
/* [detachable] GEC.set_new_instance_types */
extern void T24f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable DS_HASH_SET [[attached] STRING_8].force */
extern void T68f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] STRING_8.adjust */
extern void T17f60(GE_context* ac, T0* C);
/* [detachable] STRING_8.right_adjust */
extern void T17f65(GE_context* ac, T0* C);
/* CHARACTER_8.is_space */
extern T1 T2f4(GE_context* ac, T2* C);
/* [detachable] STRING_8.left_adjust */
extern void T17f64(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [[attached] STRING_8].make_equal */
extern T0* T68c38(GE_context* ac, T6 a1);
/* [detachable] GEC.set_split_size */
extern void T24f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] AP_ERROR.make_invalid_parameter_error */
extern T0* T87c21(GE_context* ac, T0* a1, T0* a2);
/* [detachable] GEC.set_override_variables */
extern void T24f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable STRING_8].forth */
extern void T146f10(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [detachable STRING_8].cursor_forth */
extern void T145f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable STRING_8].set_position */
extern void T146f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [detachable STRING_8].add_traversing_cursor */
extern void T145f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable STRING_8].set_next_cursor */
extern void T146f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [detachable STRING_8].remove_traversing_cursor */
extern void T145f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] STRING_8.index_of */
extern T6 T17f33(GE_context* ac, T0* C, T2 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable STRING_8].item */
extern T0* T146f5(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [detachable STRING_8].cursor_item */
extern T0* T145f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable STRING_8].after */
extern T1 T146f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [detachable STRING_8].new_iterator */
extern T0* T145f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable STRING_8].start */
extern void T146f11(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [detachable STRING_8].cursor_start */
extern void T145f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable STRING_8].set_after */
extern void T146f13(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable STRING_8].off */
extern T1 T146f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable STRING_8].before */
extern T1 T146f8(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [detachable STRING_8].new_cursor */
extern T0* T145f9(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable STRING_8].make */
extern T0* T146c9(GE_context* ac, T0* a1);
/* [detachable] KL_EXECUTION_ENVIRONMENT.set_variable_value */
extern void T86f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] EXECUTION_ENVIRONMENT.put */
extern void T121f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] EXECUTION_ENVIRONMENT.eif_putenv */
extern T6 T121f8(GE_context* ac, T0* C, T14 a1);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].force */
extern void T464f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] SPECIAL [[attached] NATIVE_STRING].force */
extern void T1301f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] NATIVE_STRING].extend */
extern void T1301f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].position */
extern T6 T464f22(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] IMMUTABLE_STRING_32].force */
extern void T891f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] BOOLEAN].force */
extern void T126f7(GE_context* ac, T0* C, T1 a1, T6 a2);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].deleted_position */
extern T6 T464f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].add_space */
extern void T464f37(GE_context* ac, T0* C);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].accommodate */
extern void T464f38(GE_context* ac, T0* C, T6 a1);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].set_indexes_map */
extern void T464f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].set_deleted_marks */
extern void T464f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].set_keys */
extern void T464f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].set_content */
extern void T464f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].put */
extern void T464f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].set_conflict */
extern void T464f45(GE_context* ac, T0* C);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].found */
extern T1 T464f31(GE_context* ac, T0* C);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].occupied */
extern T1 T464f29(GE_context* ac, T0* C, T6 a1);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].empty_duplicate */
extern T0* T464f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].compare_objects */
extern void T464f44(GE_context* ac, T0* C);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].make */
extern T0* T464c34(GE_context* ac, T6 a1);
/* [detachable] SPECIAL [[attached] NATIVE_STRING].make_empty */
extern T0* T1301c4(GE_context* ac, T6 a1);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].soon_full */
extern T1 T464f20(GE_context* ac, T0* C);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].not_found */
extern T1 T464f19(GE_context* ac, T0* C);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].internal_search */
extern void T464f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].same_keys */
extern T1 T464f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] IMMUTABLE_STRING_32.is_equal */
extern T1 T19f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] SPECIAL [CHARACTER_32].same_items */
extern T1 T16f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [detachable] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].hash_code_of */
extern T6 T464f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] IMMUTABLE_STRING_32.hash_code */
extern T6 T19f7(GE_context* ac, T0* C);
/* [detachable] IMMUTABLE_STRING_32.item */
extern T3 T19f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] IMMUTABLE_STRING_32.make_from_string_general */
extern T0* T19c11(GE_context* ac, T0* a1);
/* [detachable] UC_UTF8_STRING.to_string_32 */
extern T0* T862f18(GE_context* ac, T0* C);
/* [detachable] STRING_8.to_string_32 */
extern T0* T17f40(GE_context* ac, T0* C);
/* [detachable] IMMUTABLE_STRING_32.make_from_string_32 */
extern void T19f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] IMMUTABLE_STRING_32.make_from_string_8 */
extern void T19f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] IMMUTABLE_STRING_32.make_from_area_and_bounds */
extern void T19f15(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] EXECUTION_ENVIRONMENT.environ */
extern T0* T121f6(GE_context* ac, T0* C);
/* [detachable] GEC.execution_environment */
extern T0* T24f56(GE_context* ac, T0* C);
/* [detachable] GEC.set_override_capabilities */
extern void T24f68(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] GEC.set_override_settings */
extern void T24f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] GEC.set_ise_version */
extern void T24f66(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].first */
extern T0* T142f19(GE_context* ac, T0* C);
/* [detachable] GEC.report_usage_message */
extern void T24f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_PARSER.full_usage_instruction */
extern T0* T38f23(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].forth */
extern void T141f17(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].cursor_forth */
extern void T141f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].set_position */
extern void T475f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].add_traversing_cursor */
extern void T141f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].set_next_cursor */
extern void T475f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].remove_traversing_cursor */
extern void T141f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_PARSER.alternative_usage_instruction */
extern T0* T38f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ST_WORD_WRAPPER.wrapped_string */
extern T0* T137f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] ST_WORD_WRAPPER.canonify_whitespace */
extern void T137f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ST_WORD_WRAPPER.is_space */
extern T1 T137f8(GE_context* ac, T0* C, T2 a1);
/* [detachable] ST_WORD_WRAPPER.string_ */
extern T0* T137f4(GE_context* ac, T0* C);
/* [detachable] ST_WORD_WRAPPER.set_new_line_indentation */
extern void T137f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] AP_PARSER.wrapper */
extern T0* T38f12(GE_context* ac, T0* C);
/* [detachable] ST_WORD_WRAPPER.set_maximum_text_width */
extern void T137f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] ST_WORD_WRAPPER.make */
extern T0* T137c9(GE_context* ac);
/* [detachable] AP_PARSER.arguments */
extern T0* T38f27(GE_context* ac, T0* C);
/* [detachable] AP_PARSER.file_system */
extern T0* T38f26(GE_context* ac, T0* C);
/* [detachable] AP_PARSER.unix_file_system */
extern T0* T38f15(GE_context* ac, T0* C);
/* [detachable] AP_PARSER.windows_file_system */
extern T0* T38f14(GE_context* ac, T0* C);
/* [detachable] AP_PARSER.operating_system */
extern T0* T38f13(GE_context* ac, T0* C);
/* [detachable] AP_ALTERNATIVE_OPTIONS_LIST.forth */
extern void T39f17(GE_context* ac, T0* C);
/* [detachable] AP_ALTERNATIVE_OPTIONS_LIST.cursor_forth */
extern void T39f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_ALTERNATIVE_OPTIONS_LIST.add_traversing_cursor */
extern void T39f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION].set_next_cursor */
extern void T144f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_ALTERNATIVE_OPTIONS_LIST.remove_traversing_cursor */
extern void T39f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION].set */
extern void T144f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [detachable] AP_ALTERNATIVE_OPTIONS_LIST.item_for_iteration */
extern T0* T39f6(GE_context* ac, T0* C);
/* [detachable] AP_ALTERNATIVE_OPTIONS_LIST.cursor_item */
extern T0* T39f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_ALTERNATIVE_OPTIONS_LIST.after */
extern T1 T39f5(GE_context* ac, T0* C);
/* [detachable] AP_ALTERNATIVE_OPTIONS_LIST.cursor_after */
extern T1 T39f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_ALTERNATIVE_OPTIONS_LIST.start */
extern void T39f16(GE_context* ac, T0* C);
/* [detachable] AP_ALTERNATIVE_OPTIONS_LIST.cursor_start */
extern void T39f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_ALTERNATIVE_OPTIONS_LIST.cursor_off */
extern T1 T39f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION].off */
extern T1 T144f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].item_for_iteration */
extern T0* T141f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].cursor_item */
extern T0* T141f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T141f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].cursor_after */
extern T1 T141f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T475f5(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].start */
extern void T141f16(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].cursor_start */
extern void T141f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].set_after */
extern void T475f9(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].is_empty */
extern T1 T141f13(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].off */
extern T1 T475f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].before */
extern T1 T475f6(GE_context* ac, T0* C);
/* [detachable] AP_PARSER.usage_instruction */
extern T0* T38f17(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].forth */
extern void T140f20(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].cursor_forth */
extern void T140f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].set_position */
extern void T471f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].add_traversing_cursor */
extern void T140f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].set_next_cursor */
extern void T471f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].remove_traversing_cursor */
extern void T140f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].item_for_iteration */
extern T0* T140f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].cursor_item */
extern T0* T140f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].after */
extern T1 T140f9(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].cursor_after */
extern T1 T140f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].after */
extern T1 T471f5(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].start */
extern void T140f19(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].cursor_start */
extern void T140f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].set_after */
extern void T471f9(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].is_empty */
extern T1 T140f15(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].off */
extern T1 T471f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].before */
extern T1 T471f6(GE_context* ac, T0* C);
/* [detachable] GEC.report_version_number */
extern void T24f64(GE_context* ac, T0* C);
/* [detachable] UT_VERSION_NUMBER.make */
extern T0* T80c8(GE_context* ac, T0* a1);
/* [detachable] AP_PARSER.parse_arguments */
extern void T38f44(GE_context* ac, T0* C);
/* [detachable] AP_PARSER.parse_list */
extern void T38f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_PARSER.final_error_action */
extern void T38f49(GE_context* ac, T0* C);
/* [detachable] AP_PARSER.exceptions */
extern T0* T38f31(GE_context* ac, T0* C);
/* [detachable] KL_EXCEPTIONS.default_create */
extern T0* T37c1(GE_context* ac);
/* [detachable] AP_ERROR_HANDLER.report_error_message */
extern void T143f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_ERROR_HANDLER.report_error_message */
extern void T143f10p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_PARSER.check_options_after_parsing */
extern void T38f48(GE_context* ac, T0* C);
/* [detachable] AP_ERROR.make_surplus_option_error */
extern T0* T87c23(GE_context* ac, T0* a1);
/* [detachable] AP_ERROR_HANDLER.report_error */
extern void T143f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_ERROR_HANDLER.message */
extern T0* T143f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_ERROR.make_missing_option_error */
extern T0* T87c22(GE_context* ac, T0* a1);
/* [detachable] AP_PARSER.parse_argument */
extern void T38f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_PARSER.parse_short */
extern void T38f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_ERROR.make_missing_parameter_error */
extern T0* T87c25(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].off */
extern T1 T142f12(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].cursor_off */
extern T1 T142f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].off */
extern T1 T478f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].before */
extern T1 T478f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].after */
extern T1 T478f5(GE_context* ac, T0* C);
/* [detachable] AP_ERROR.make_unknown_option_error */
extern T0* T87c24(GE_context* ac, T0* a1);
/* CHARACTER_8.out */
extern T0* T2f3(GE_context* ac, T2* C);
/* [detachable] AP_PARSER.parse_long */
extern void T38f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_ERROR.make_unnecessary_parameter_error */
extern T0* T87c26(GE_context* ac, T0* a1, T0* a2);
/* [detachable] AP_PARSER.string_ */
extern T0* T38f33(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].forth */
extern void T142f24(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].cursor_forth */
extern void T142f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].add_traversing_cursor */
extern void T142f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].remove_traversing_cursor */
extern void T142f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].item_for_iteration */
extern T0* T142f11(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].cursor_item */
extern T0* T142f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].after */
extern T1 T142f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].cursor_after */
extern T1 T142f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].start */
extern void T142f23(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].cursor_start */
extern void T142f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].is_empty */
extern T1 T142f16(GE_context* ac, T0* C);
/* [detachable] AP_PARSER.reset_parser */
extern void T38f46(GE_context* ac, T0* C);
/* [detachable] AP_PARSER.all_options */
extern T0* T38f25(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].has */
extern T1 T140f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].make */
extern T0* T140c17(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].set_internal_cursor */
extern void T140f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].new_cursor */
extern T0* T140f12(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].make */
extern T0* T471c8(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] AP_OPTION].make */
extern T0* T474f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] AP_OPTION].make_empty */
extern T0* T473c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] AP_OPTION].default_create */
extern T0* T474c3(GE_context* ac);
/* [detachable] AP_ERROR_HANDLER.reset */
extern void T143f8(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].force */
extern void T142f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].put */
extern void T142f29(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].move_cursors_right */
extern void T142f33(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].move_right */
extern void T142f32(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] KL_ARGUMENTS.argument_count */
extern T6 T32f3(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].force_last */
extern void T141f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST].force */
extern void T477f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST].fill_with */
extern void T476f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST].extend */
extern void T476f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern void T141f19(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T477f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T476f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].new_capacity */
extern T6 T141f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].extendible */
extern T1 T141f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] AP_ALTERNATIVE_OPTIONS_LIST.make */
extern T0* T39c11(GE_context* ac, T0* a1);
/* [detachable] AP_ALTERNATIVE_OPTIONS_LIST.old_make */
extern void T39f14(GE_context* ac, T0* C);
/* [detachable] AP_ALTERNATIVE_OPTIONS_LIST.set_internal_cursor */
extern void T39f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_ALTERNATIVE_OPTIONS_LIST.new_cursor */
extern T0* T39f10(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION].make */
extern T0* T144c7(GE_context* ac, T0* a1);
/* [detachable] AP_ALTERNATIVE_OPTIONS_LIST.set_parameters_description */
extern void T39f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_ALTERNATIVE_OPTIONS_LIST.set_introduction_option */
extern void T39f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_FLAG.make */
extern T0* T42c19(GE_context* ac, T2 a1, T0* a2);
/* [detachable] AP_FLAG.set_long_form */
extern void T42f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_FLAG.set_short_form */
extern void T42f23(GE_context* ac, T0* C, T2 a1);
/* [detachable] AP_FLAG.initialize */
extern void T42f20(GE_context* ac, T0* C);
/* [detachable] AP_INTEGER_OPTION.set_parameter_description */
extern void T46f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_INTEGER_OPTION.set_description */
extern void T46f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_INTEGER_OPTION.make_with_long_form */
extern T0* T46c23(GE_context* ac, T0* a1);
/* [detachable] AP_INTEGER_OPTION.set_long_form */
extern void T46f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_INTEGER_OPTION.initialize */
extern void T46f26(GE_context* ac, T0* C);
/* [detachable] AP_INTEGER_OPTION.initialize */
extern void T46f26p1(GE_context* ac, T0* C);
/* [detachable] AP_INTEGER_OPTION.initialize */
extern void T46f26p0(GE_context* ac, T0* C);
/* [detachable] AP_BOOLEAN_OPTION.set_parameter_description */
extern void T45f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_BOOLEAN_OPTION.set_description */
extern void T45f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_BOOLEAN_OPTION.make_with_long_form */
extern T0* T45c26(GE_context* ac, T0* a1);
/* [detachable] AP_BOOLEAN_OPTION.set_long_form */
extern void T45f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_BOOLEAN_OPTION.initialize */
extern void T45f29(GE_context* ac, T0* C);
/* [detachable] AP_BOOLEAN_OPTION.initialize */
extern void T45f29p1(GE_context* ac, T0* C);
/* [detachable] AP_BOOLEAN_OPTION.initialize */
extern void T45f29p0(GE_context* ac, T0* C);
/* [detachable] AP_ENUMERATION_OPTION.set_parameter_description */
extern void T44f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_ENUMERATION_OPTION.extend */
extern void T44f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_ENUMERATION_OPTION.update_parameter_description */
extern void T44f32(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].forth */
extern void T147f21(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].is_last */
extern T1 T147f10(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].cursor_is_last */
extern T1 T147f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].item_for_iteration */
extern T0* T147f8(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].cursor_item */
extern T0* T147f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].after */
extern T1 T147f11(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].cursor_after */
extern T1 T147f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].start */
extern void T147f20(GE_context* ac, T0* C);
/* [detachable] AP_ENUMERATION_OPTION.set_description */
extern void T44f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_ENUMERATION_OPTION.make_with_long_form */
extern T0* T44c25(GE_context* ac, T0* a1);
/* [detachable] AP_ENUMERATION_OPTION.set_long_form */
extern void T44f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_ENUMERATION_OPTION.initialize */
extern void T44f29(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].set_equality_tester */
extern void T147f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_ENUMERATION_OPTION.string_equality_tester */
extern T0* T44f14(GE_context* ac, T0* C);
/* [detachable] AP_ENUMERATION_OPTION.initialize */
extern void T44f29p1(GE_context* ac, T0* C);
/* [detachable] AP_ENUMERATION_OPTION.initialize */
extern void T44f29p0(GE_context* ac, T0* C);
/* [detachable] AP_STRING_OPTION.set_default_parameter */
extern void T40f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_VERSION.out */
extern T0* T43f10(GE_context* ac, T0* C);
/* [detachable] GEC.ise_latest */
extern T0* T24f32(GE_context* ac, T0* C);
/* [detachable] AP_FLAG.set_description */
extern void T42f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_FLAG.make_with_long_form */
extern T0* T42c17(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].force_last */
extern void T140f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] AP_OPTION].force */
extern void T474f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] AP_OPTION].fill_with */
extern void T473f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] AP_OPTION].extend */
extern void T473f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].resize */
extern void T140f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] AP_OPTION].aliased_resized_area */
extern T0* T474f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] AP_OPTION].aliased_resized_area */
extern T0* T473f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].new_capacity */
extern T6 T140f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].extendible */
extern T1 T140f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] AP_STRING_OPTION.set_parameter_description */
extern void T40f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_STRING_OPTION.set_description */
extern void T40f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_STRING_OPTION.make_with_long_form */
extern T0* T40c24(GE_context* ac, T0* a1);
/* [detachable] AP_STRING_OPTION.set_long_form */
extern void T40f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_STRING_OPTION.initialize */
extern void T40f28(GE_context* ac, T0* C);
/* [detachable] AP_STRING_OPTION.initialize */
extern void T40f28p1(GE_context* ac, T0* C);
/* [detachable] AP_PARSER.set_parameters_description */
extern void T38f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_PARSER.set_application_description */
extern void T38f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_PARSER.make */
extern T0* T38c41(GE_context* ac);
/* [detachable] AP_DISPLAY_HELP_FLAG.set_description */
extern void T139f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_DISPLAY_HELP_FLAG.make */
extern T0* T139c19(GE_context* ac, T2 a1, T0* a2);
/* [detachable] AP_DISPLAY_HELP_FLAG.set_long_form */
extern void T139f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_DISPLAY_HELP_FLAG.set_short_form */
extern void T139f22(GE_context* ac, T0* C, T2 a1);
/* [detachable] AP_DISPLAY_HELP_FLAG.initialize */
extern void T139f21(GE_context* ac, T0* C);
/* [detachable] AP_PARSER.make */
extern void T38f41p1(GE_context* ac, T0* C);
/* [detachable] AP_ERROR_HANDLER.make_standard */
extern T0* T143c7(GE_context* ac);
/* [detachable] AP_ERROR_HANDLER.std */
extern T0* T143f5(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T141c14(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].set_internal_cursor */
extern void T141f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].new_cursor */
extern T0* T141f9(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T475c8(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T477f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST].make_empty */
extern T0* T476c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST].default_create */
extern T0* T477c3(GE_context* ac);
/* [detachable] ET_ERROR_HANDLER.make_standard */
extern T0* T34c177(GE_context* ac);
/* [detachable] ET_ERROR_HANDLER.make_standard */
extern void T34f177p1(GE_context* ac, T0* C);
/* [detachable] ET_ERROR_HANDLER.std */
extern T0* T34f23(GE_context* ac, T0* C);
/* [detachable] ET_ISE_VARIABLES.set_ise_library_variable */
extern void T33f7(GE_context* ac, T0* C);
/* [detachable] ET_ISE_VARIABLES.execution_environment */
extern T0* T33f3(GE_context* ac, T0* C);
/* [detachable] ET_ISE_VARIABLES.ise_eiffel_value */
extern T0* T33f2(GE_context* ac, T0* C);
/* [detachable] ET_ISE_VARIABLES.ise_library_value */
extern T0* T33f1(GE_context* ac, T0* C);
/* [detachable] GEC.ise_variables */
extern T0* T24f31(GE_context* ac, T0* C);
/* [detachable] ET_ISE_VARIABLES.default_create */
extern T0* T33c6(GE_context* ac);
/* [detachable] KL_ARGUMENTS.set_program_name */
extern void T32f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] GEC.arguments */
extern T0* T24f34(GE_context* ac, T0* C);
/* [detachable] KL_EXCEPTIONS.die */
extern void T37f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_EXCEPTIONS.exceptions_die */
extern void T37f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] GEC.exceptions */
extern T0* T24f48(GE_context* ac, T0* C);
/* [detachable] ISE_EXCEPTION_MANAGER.set_exception_data */
extern void T20f16(GE_context* ac, T0* C, T6 a1, T1 a2, T6 a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T6 a11, T1 a12);
/* [detachable] ISE_EXCEPTION_MANAGER.exception_from_data */
extern T0* T20f10(GE_context* ac, T0* C);
extern T1 T20f10ot1(T0* a1, T0** a2);
extern T1 T20f10ot2(T0* a1, T0** a2);
extern T1 T20f10ot3(T0* a1, T0** a2);
extern T1 T20f10ot4(T0* a1, T0** a2);
extern T1 T20f10ot5(T0* a1, T0** a2);
extern T1 T20f10ot6(T0* a1, T0** a2);
extern T1 T20f10ot7(T0* a1, T0** a2);
/* [detachable] COM_FAILURE.set_exception_information */
extern void T101f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] COM_FAILURE.ccom_hresult_to_string */
extern T0* T101f11(GE_context* ac, T0* C, T6 a1);
/* INTEGER_32.to_hex_string */
extern T0* T6f25(GE_context* ac, T6* C);
/* [detachable] COM_FAILURE.set_hresult_code */
extern void T101f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] OPERATING_SYSTEM_FAILURE.set_error_code */
extern void T100f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] IO_FAILURE.set_error_code */
extern void T99f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] OPERATING_SYSTEM_SIGNAL_FAILURE.set_signal_code */
extern void T98f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] INVARIANT_VIOLATION.set_is_entry */
extern void T97f9(GE_context* ac, T0* C, T1 a1);
/* [detachable] ROUTINE_FAILURE.set_class_name */
extern void T92f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ROUTINE_FAILURE.set_routine_name */
extern void T92f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ISE_EXCEPTION_MANAGER.exception_from_code */
extern T0* T20f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] SERIALIZATION_FAILURE.default_create */
extern T0* T120c6(GE_context* ac);
/* [detachable] OLD_VIOLATION.default_create */
extern T0* T94c6(GE_context* ac);
/* [detachable] COM_FAILURE.default_create */
extern T0* T101c12(GE_context* ac);
/* [detachable] ADDRESS_APPLIED_TO_MELTED_FEATURE.default_create */
extern T0* T119c6(GE_context* ac);
/* [detachable] MISMATCH_FAILURE.default_create */
extern T0* T117c6(GE_context* ac);
/* [detachable] OPERATING_SYSTEM_FAILURE.default_create */
extern T0* T100c7(GE_context* ac);
/* [detachable] IO_FAILURE.set_code */
extern void T99f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] IO_FAILURE.default_create */
extern T0* T99c8(GE_context* ac);
/* [detachable] EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.default_create */
extern T0* T116c6(GE_context* ac);
/* [detachable] VOID_ASSIGNED_TO_EXPANDED.default_create */
extern T0* T115c6(GE_context* ac);
/* [detachable] EXTERNAL_FAILURE.default_create */
extern T0* T114c6(GE_context* ac);
/* [detachable] CREATE_ON_DEFERRED.default_create */
extern T0* T113c6(GE_context* ac);
/* [detachable] RESUMPTION_FAILURE.default_create */
extern T0* T112c6(GE_context* ac);
/* [detachable] RESCUE_FAILURE.default_create */
extern T0* T111c6(GE_context* ac);
/* [detachable] EIFFEL_RUNTIME_PANIC.set_code */
extern void T102f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] EIFFEL_RUNTIME_PANIC.code */
extern T6 T102f7(GE_context* ac, T0* C);
/* [detachable] EIFFEL_RUNTIME_PANIC.default_create */
extern T0* T102c8(GE_context* ac);
/* [detachable] OPERATING_SYSTEM_SIGNAL_FAILURE.default_create */
extern T0* T98c7(GE_context* ac);
/* [detachable] LOOP_INVARIANT_VIOLATION.default_create */
extern T0* T110c6(GE_context* ac);
/* [detachable] VARIANT_VIOLATION.default_create */
extern T0* T109c6(GE_context* ac);
/* [detachable] BAD_INSPECT_VALUE.default_create */
extern T0* T108c6(GE_context* ac);
/* [detachable] ROUTINE_FAILURE.default_create */
extern T0* T92c8(GE_context* ac);
/* [detachable] CHECK_VIOLATION.default_create */
extern T0* T107c6(GE_context* ac);
/* [detachable] INVARIANT_VIOLATION.default_create */
extern T0* T97c7(GE_context* ac);
/* [detachable] FLOATING_POINT_FAILURE.default_create */
extern T0* T106c6(GE_context* ac);
/* [detachable] POSTCONDITION_VIOLATION.default_create */
extern T0* T105c6(GE_context* ac);
/* [detachable] PRECONDITION_VIOLATION.default_create */
extern T0* T104c6(GE_context* ac);
/* [detachable] NO_MORE_MEMORY.set_code */
extern void T96f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] NO_MORE_MEMORY.code */
extern T6 T96f7(GE_context* ac, T0* C);
/* [detachable] ISE_EXCEPTION_MANAGER.no_memory_exception_object_cell */
extern T0* T20f7(GE_context* ac, T0* C);
/* [detachable] CELL [[attached] NO_MORE_MEMORY].put */
extern T0* T28c2(GE_context* ac, T0* a1);
/* [detachable] NO_MORE_MEMORY.default_create */
extern T0* T96c8(GE_context* ac);
/* [detachable] VOID_TARGET.default_create */
extern T0* T90c6(GE_context* ac);
/* [detachable] ISE_EXCEPTION_MANAGER.exception_data */
extern T0* T20f11(GE_context* ac, T0* C);
/* [detachable] CELL [detachable TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN]].put */
extern void T27f2(GE_context* ac, T0* C, T0* a1);
/* [detachable] CELL [detachable TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN]].put */
extern T0* T27c2(GE_context* ac, T0* a1);
/* [detachable] ISE_EXCEPTION_MANAGER.exception_data_cell */
extern T0* T20f6(GE_context* ac, T0* C);
/* [detachable] ISE_EXCEPTION_MANAGER.once_raise */
extern void T20f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ISE_EXCEPTION_MANAGER.last_exception */
extern T0* T20f1(GE_context* ac, T0* C);
/* [detachable] ISE_EXCEPTION_MANAGER.init_exception_manager */
extern void T20f14(GE_context* ac, T0* C);
/* [detachable] CELL [[attached] NO_MORE_MEMORY].do_nothing */
extern void T28f3(GE_context* ac, T0* C);
/* [detachable] CELL [detachable EXCEPTION].do_nothing */
extern void T25f3(GE_context* ac, T0* C);
/* [detachable] CELL [detachable TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN]].do_nothing */
extern void T27f3(GE_context* ac, T0* C);
/* [detachable] ISE_EXCEPTION_MANAGER.unraisable_exceptions */
extern T0* T20f5(GE_context* ac, T0* C);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].force */
extern void T26f37(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].position */
extern T6 T26f22(GE_context* ac, T0* C);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].deleted_position */
extern T6 T26f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].add_space */
extern void T26f39(GE_context* ac, T0* C);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].accommodate */
extern void T26f40(GE_context* ac, T0* C, T6 a1);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].set_indexes_map */
extern void T26f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].set_deleted_marks */
extern void T26f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].set_keys */
extern void T26f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].set_content */
extern void T26f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].put */
extern void T26f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].set_conflict */
extern void T26f47(GE_context* ac, T0* C);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].found */
extern T1 T26f31(GE_context* ac, T0* C);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].occupied */
extern T1 T26f29(GE_context* ac, T0* C, T6 a1);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].empty_duplicate */
extern T0* T26f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].compare_objects */
extern void T26f46(GE_context* ac, T0* C);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].soon_full */
extern T1 T26f20(GE_context* ac, T0* C);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].not_found */
extern T1 T26f19(GE_context* ac, T0* C);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].internal_search */
extern void T26f38(GE_context* ac, T0* C, T6 a1);
/* [detachable] ISE_EXCEPTION_MANAGER.unignorable_exceptions */
extern T0* T20f4(GE_context* ac, T0* C);
/* [detachable] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].do_nothing */
extern void T26f36(GE_context* ac, T0* C);
/* [detachable] KL_DIRECTORY.dispose */
extern void T326f30(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.dispose */
extern void T292f27(GE_context* ac, T0* C);
/* [detachable] MUTEX.dispose */
extern void T132f9(GE_context* ac, T0* C);
/* [detachable] MUTEX.destroy */
extern void T132f13(GE_context* ac, T0* C);
/* [detachable] MUTEX.eif_thr_mutex_destroy */
extern void T132f16(GE_context* ac, T0* C, T14 a1);
/* [detachable] MANAGED_POINTER.dispose */
extern void T130f9(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.dispose */
extern void T31f59(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.old_close */
extern void T31f64(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.file_close */
extern void T31f69(GE_context* ac, T0* C, T14 a1);
/* [detachable] LX_SYMBOL_TRANSITION [[attached] LX_NFA_STATE].record */
extern void T2081f5(GE_context* ac, T0* C, T0* a1);
/* detachable LX_SYMBOL_PARTITIONS.put */
extern void T2059f12(GE_context* ac, T0* C, T6 a1);
/* detachable LX_SYMBOL_PARTITIONS.put */
extern void T2059f12p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_EPSILON_TRANSITION [[attached] LX_NFA_STATE].record */
extern void T2079f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_SYMBOL_CLASS_TRANSITION [[attached] LX_NFA_STATE].record */
extern void T2077f5(GE_context* ac, T0* C, T0* a1);
/* detachable LX_SYMBOL_PARTITIONS.add */
extern void T2059f11(GE_context* ac, T0* C, T0* a1);
/* detachable LX_SYMBOL_PARTITIONS.add */
extern void T2059f11p1(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PARENTHESIS_INSTRUCTION.set_arguments */
extern void T1926f9(GE_context* ac, T0* C, T0* a1);
/* detachable ET_UNQUALIFIED_CALL_INSTRUCTION.set_arguments */
extern void T1682f11(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PRECURSOR_EXPRESSION.set_arguments */
extern void T1467f33(GE_context* ac, T0* C, T0* a1);
/* detachable ET_STATIC_CALL_INSTRUCTION.set_arguments */
extern void T1466f15(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PRECURSOR_INSTRUCTION.set_arguments */
extern void T1464f16(GE_context* ac, T0* C, T0* a1);
/* detachable ET_STATIC_CALL_EXPRESSION.set_arguments */
extern void T1217f36(GE_context* ac, T0* C, T0* a1);
/* detachable ET_BRACKET_EXPRESSION.set_arguments */
extern void T1000f28(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PARENTHESIS_EXPRESSION.set_arguments */
extern void T845f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_CALL.set_arguments */
extern void T320f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T278f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T277f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_CALL_INSTRUCTION.set_arguments */
extern void T274f14(GE_context* ac, T0* C, T0* a1);
/* detachable ET_UNQUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T1682f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_PARENTHESIS_INSTRUCTION.make */
extern T0* T1926c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T278f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_PARENTHESIS_EXPRESSION.make */
extern T0* T845c10(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T277f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_QUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T274f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.reset */
extern void T1474f36(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.reset */
extern void T1473f36(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.reset */
extern void T959f100(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.reset */
extern void T946f55(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.reset */
extern void T938f52(GE_context* ac, T0* C);
/* detachable ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_options */
extern void T756f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_options */
extern void T208f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_ADAPTED_LIBRARY.set_options */
extern void T202f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_CHARACTER_DATA.node_set_parent */
extern void T1398f4(GE_context* ac, T0* C, T0* a1);
/* detachable XM_ATTRIBUTE.node_set_parent */
extern void T191f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BASE_TYPE_RENAME_CONSTRAINT.add_overloaded_queries */
extern void T1772f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].remove */
extern void T692f37(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_QUERY].keep_head */
extern void T873f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_QUERY].set_count */
extern void T873f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].move_left */
extern void T692f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].move_cursors_left */
extern void T692f40(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].set_position */
extern void T1364f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].remove_last */
extern void T692f39(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].move_last_cursors_after */
extern void T692f42(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].set_next_cursor */
extern void T1364f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].set_after */
extern void T1364f10(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINT_RENAME_LIST.index_of_old_name */
extern T6 T1044f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].item */
extern T0* T692f7(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CONSTRAINT_RENAME_LIST.rename_pair */
extern T0* T1044f7(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CONSTRAINT_RENAME_LIST.item */
extern T0* T1044f10(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CONSTRAINT_RENAME_LIST.index_of_new_name */
extern T6 T1044f8(GE_context* ac, T0* C, T0* a1);
extern T1 T1044f8ot1(T0* a1, T0** a2);
/* [detachable] ET_TUPLE_TYPE.add_overloaded_queries */
extern void T247f128(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.add_overloaded_queries */
extern void T72f326(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_QUERY_LIST.add_overloaded_features */
extern void T252f14(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T252f14ot1(T0* a1, T0** a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].force_last */
extern void T692f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_QUERY].force */
extern void T875f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_QUERY].fill_with */
extern void T873f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_QUERY].extend */
extern void T873f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].resize */
extern void T692f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_QUERY].aliased_resized_area */
extern T0* T875f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_QUERY].aliased_resized_area */
extern T0* T873f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].new_capacity */
extern T6 T692f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].extendible */
extern T1 T692f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLASS_TYPE.add_overloaded_queries */
extern void T70f137(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_BASE_TYPE_RENAME_CONSTRAINT.add_overloaded_procedures */
extern void T1772f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].remove */
extern void T688f37(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_PROCEDURE].keep_head */
extern void T876f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_PROCEDURE].set_count */
extern void T876f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].move_left */
extern void T688f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].move_cursors_left */
extern void T688f40(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].set_position */
extern void T1363f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].remove_last */
extern void T688f39(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].move_last_cursors_after */
extern void T688f42(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].set_next_cursor */
extern void T1363f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].set_after */
extern void T1363f10(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].item */
extern T0* T688f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TUPLE_TYPE.add_overloaded_procedures */
extern void T247f129(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.add_overloaded_procedures */
extern void T72f327(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_PROCEDURE_LIST.add_overloaded_features */
extern void T253f14(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T253f14ot1(T0* a1, T0** a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].force_last */
extern void T688f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PROCEDURE].force */
extern void T877f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_PROCEDURE].fill_with */
extern void T876f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_PROCEDURE].extend */
extern void T876f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].resize */
extern void T688f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PROCEDURE].aliased_resized_area */
extern T0* T877f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_PROCEDURE].aliased_resized_area */
extern T0* T876f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].new_capacity */
extern T6 T688f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].extendible */
extern T1 T688f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLASS_TYPE.add_overloaded_procedures */
extern void T70f138(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_TYPE_CONSTRAINT_LIST.reset_renames */
extern void T1231f17(GE_context* ac, T0* C);
/* detachable ET_TYPE_CONSTRAINT_LIST.reset */
extern void T1231f18(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.reset_renames */
extern void T1455f89(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.reset_renames */
extern void T1454f93(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.reset_renames */
extern void T1453f94(GE_context* ac, T0* C);
/* detachable ET_TYPE_RENAME_CONSTRAINT.reset_renames */
extern void T1428f10(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINT_RENAME_LIST.reset */
extern void T1044f14(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_CURRENT.reset_renames */
extern void T432f87(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.reset_renames */
extern void T247f126(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.reset_renames */
extern void T245f83(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.reset_renames */
extern void T72f324(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.reset_renames */
extern void T70f136(GE_context* ac, T0* C);
/* detachable ET_TYPE_RENAME_CONSTRAINT.reset */
extern void T1428f11(GE_context* ac, T0* C);
/* detachable ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T1682f8(GE_context* ac, T0* C);
/* detachable ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T1682f8p1(GE_context* ac, T0* C);
/* detachable ET_UNQUALIFIED_CALL_INSTRUCTION.reset_arguments */
extern void T1682f9(GE_context* ac, T0* C);
extern T1 T1682f9ot1(T0* a1, T0** a2);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.reset */
extern void T1903f14(GE_context* ac, T0* C);
extern T1 T1903f14ot1(T0* a1, T0** a2);
/* [detachable] ET_ACTUAL_ARGUMENT_LIST.reset */
extern void T273f18(GE_context* ac, T0* C);
extern T1 T273f18ot1(T0* a1, T0** a2);
/* detachable ET_STATIC_CALL_INSTRUCTION.reset */
extern void T1466f12(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_INSTRUCTION.type */
extern T0* T1466f6(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_INSTRUCTION.reset */
extern void T1466f12p1(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_INSTRUCTION.reset_arguments */
extern void T1466f13(GE_context* ac, T0* C);
extern T1 T1466f13ot1(T0* a1, T0** a2);
/* detachable ET_PRECURSOR_INSTRUCTION.reset */
extern void T1464f13(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_INSTRUCTION.reset_arguments */
extern void T1464f14(GE_context* ac, T0* C);
extern T1 T1464f14ot1(T0* a1, T0** a2);
/* detachable ET_CREATE_INSTRUCTION.reset */
extern void T1462f16(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL.reset */
extern void T320f6(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL.reset_arguments */
extern void T320f7(GE_context* ac, T0* C);
extern T1 T320f7ot1(T0* a1, T0** a2);
/* detachable ET_CREATE_INSTRUCTION.type */
extern T0* T1462f7(GE_context* ac, T0* C);
/* detachable ET_BANG_INSTRUCTION.reset */
extern void T1461f14(GE_context* ac, T0* C);
/* detachable ET_LOOP_INSTRUCTION.reset */
extern void T1459f15(GE_context* ac, T0* C);
/* detachable ET_LOOP_INSTRUCTION.until_expression */
extern T0* T1459f9(GE_context* ac, T0* C);
/* detachable ET_VARIANT.reset */
extern void T1240f7(GE_context* ac, T0* C);
/* detachable ET_LOOP_INVARIANTS.reset */
extern void T1171f12(GE_context* ac, T0* C);
/* detachable ET_COMPOUND.reset */
extern void T329f13(GE_context* ac, T0* C);
/* detachable ET_ASSIGNMENT_ATTEMPT.reset */
extern void T1458f7(GE_context* ac, T0* C);
/* detachable ET_ASSIGNMENT.reset */
extern void T1457f7(GE_context* ac, T0* C);
extern T1 T1457f7ot1(T0* a1, T0** a2);
/* detachable ET_ASSIGNER_INSTRUCTION.reset */
extern void T1456f17(GE_context* ac, T0* C);
extern T1 T1456f17ot1(T0* a1, T0** a2);
/* detachable ET_ASSIGNER_INSTRUCTION.dummy_name */
extern T0* T1456f6(GE_context* ac, T0* C);
/* detachable ET_INSPECT_INSTRUCTION.reset */
extern void T1149f10(GE_context* ac, T0* C);
/* detachable ET_WHEN_PART_LIST.reset */
extern void T1246f7(GE_context* ac, T0* C);
/* detachable ET_WHEN_PART.reset */
extern void T1243f4(GE_context* ac, T0* C);
/* detachable ET_CHOICE_LIST.reset */
extern void T1018f11(GE_context* ac, T0* C);
/* detachable ET_INSPECT_INSTRUCTION.expression */
extern T0* T1149f6(GE_context* ac, T0* C);
/* detachable ET_IF_INSTRUCTION.reset */
extern void T1130f12(GE_context* ac, T0* C);
/* detachable ET_ELSEIF_PART_LIST.reset */
extern void T1082f7(GE_context* ac, T0* C);
/* detachable ET_ELSEIF_PART.reset */
extern void T1079f6(GE_context* ac, T0* C);
/* detachable ET_ELSEIF_PART.expression */
extern T0* T1079f3(GE_context* ac, T0* C);
/* detachable ET_IF_INSTRUCTION.expression */
extern T0* T1130f7(GE_context* ac, T0* C);
/* detachable ET_DEBUG_INSTRUCTION.reset */
extern void T1070f7(GE_context* ac, T0* C);
/* detachable ET_CHECK_INSTRUCTION.reset */
extern void T1006f15(GE_context* ac, T0* C);
/* detachable ET_CHECK_INSTRUCTION.reset */
extern void T1006f15p1(GE_context* ac, T0* C);
/* detachable ET_ACROSS_INSTRUCTION.reset */
extern void T976f25(GE_context* ac, T0* C);
/* detachable ET_ACROSS_INSTRUCTION.reset_unfolded_form */
extern void T976f26(GE_context* ac, T0* C);
/* detachable ET_RETRY_INSTRUCTION.reset */
extern void T956f18(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T274f16(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T274f16p1(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T274f16p0(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_INSTRUCTION.reset_arguments */
extern void T274f17(GE_context* ac, T0* C);
extern T1 T274f17ot1(T0* a1, T0** a2);
/* detachable ET_UNQUALIFIED_CALL_INSTRUCTION.process */
extern void T1682f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_STATIC_CALL_INSTRUCTION.process */
extern void T1466f11(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PRECURSOR_INSTRUCTION.process */
extern void T1464f12(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CREATE_INSTRUCTION.process */
extern void T1462f15(GE_context* ac, T0* C, T0* a1);
/* detachable ET_BANG_INSTRUCTION.process */
extern void T1461f13(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LOOP_INSTRUCTION.process */
extern void T1459f14(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ASSIGNMENT_ATTEMPT.process */
extern void T1458f6(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ASSIGNMENT.process */
extern void T1457f6(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ASSIGNER_INSTRUCTION.process */
extern void T1456f16(GE_context* ac, T0* C, T0* a1);
/* detachable ET_INSPECT_INSTRUCTION.process */
extern void T1149f9(GE_context* ac, T0* C, T0* a1);
/* detachable ET_IF_INSTRUCTION.process */
extern void T1130f11(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEBUG_INSTRUCTION.process */
extern void T1070f6(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CHECK_INSTRUCTION.process */
extern void T1006f14(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ACROSS_INSTRUCTION.process */
extern void T976f24(GE_context* ac, T0* C, T0* a1);
/* detachable ET_RETRY_INSTRUCTION.process */
extern void T956f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_CALL_INSTRUCTION.process */
extern void T274f11(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CHOICE_RANGE.reset */
extern void T1463f8(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.set_sign */
extern void T1415f64(GE_context* ac, T0* C, T0* a1);
/* detachable ET_OCTAL_INTEGER_CONSTANT.set_sign */
extern void T1414f64(GE_context* ac, T0* C, T0* a1);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.set_sign */
extern void T1413f64(GE_context* ac, T0* C, T0* a1);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.set_sign */
extern void T1412f64(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.set_sign */
extern void T360f64(GE_context* ac, T0* C, T0* a1);
/* detachable ET_BINARY_INTEGER_CONSTANT.set_type */
extern void T1415f71(GE_context* ac, T0* C, T0* a1);
/* detachable ET_OCTAL_INTEGER_CONSTANT.set_type */
extern void T1414f71(GE_context* ac, T0* C, T0* a1);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.set_type */
extern void T1413f71(GE_context* ac, T0* C, T0* a1);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.set_type */
extern void T1412f71(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.set_type */
extern void T360f72(GE_context* ac, T0* C, T0* a1);
/* detachable ET_BINARY_INTEGER_CONSTANT.set_cast_type */
extern void T1415f65(GE_context* ac, T0* C, T0* a1);
/* detachable ET_OCTAL_INTEGER_CONSTANT.set_cast_type */
extern void T1414f65(GE_context* ac, T0* C, T0* a1);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.set_cast_type */
extern void T1413f65(GE_context* ac, T0* C, T0* a1);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.set_cast_type */
extern void T1412f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.set_cast_type */
extern void T360f65(GE_context* ac, T0* C, T0* a1);
/* detachable ET_C2_CHARACTER_CONSTANT.set_type */
extern void T1422f49(GE_context* ac, T0* C, T0* a1);
/* detachable ET_C1_CHARACTER_CONSTANT.set_type */
extern void T1421f49(GE_context* ac, T0* C, T0* a1);
/* detachable ET_C3_CHARACTER_CONSTANT.set_type */
extern void T1409f50(GE_context* ac, T0* C, T0* a1);
/* detachable ET_C2_CHARACTER_CONSTANT.set_cast_type */
extern void T1422f43(GE_context* ac, T0* C, T0* a1);
/* detachable ET_C1_CHARACTER_CONSTANT.set_cast_type */
extern void T1421f43(GE_context* ac, T0* C, T0* a1);
/* detachable ET_C3_CHARACTER_CONSTANT.set_cast_type */
extern void T1409f46(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ALIAS_FREE_NAME.set_infix */
extern void T1447f52(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.tokens */
extern T0* T1447f12(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.set_infix */
extern void T1445f106(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.set_infix */
extern void T1444f74(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.tokens */
extern T0* T1444f33(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.set_infix */
extern void T1443f92(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.tokens */
extern T0* T1443f27(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.set_infix */
extern void T874f91(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.tokens */
extern T0* T874f66(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.set_infix */
extern void T849f74(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.set_prefix */
extern void T1447f51(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.set_prefix */
extern void T1445f105(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.tokens */
extern T0* T1445f41(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.set_prefix */
extern void T1444f73(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.set_prefix */
extern void T1443f91(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.set_prefix */
extern void T874f90(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.set_prefix */
extern void T849f73(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.tokens */
extern T0* T849f17(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.reset */
extern void T1447f53(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.reset */
extern void T874f92(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.dotnet_assemblies_do_if */
extern void T809f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ADAPTED_DOTNET_ASSEMBLIES.do_if */
extern void T205f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_LIBRARY.dotnet_assemblies_do_if */
extern void T182f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_SYSTEM.dotnet_assemblies_do_if */
extern void T55f279(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_LIBRARY.clusters_do_explicit */
extern void T809f181(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLUSTERS.do_explicit */
extern void T546f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.clusters_do_explicit */
extern void T182f205(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.clusters_do_explicit */
extern void T55f280(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1485f38(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1484f44(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1483f40(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1482f39(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1481f45(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1480f41(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T1485f39(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T1484f45(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T1483f41(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_across_components */
extern void T1482f40(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.set_across_components */
extern void T1481f46(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.set_across_components */
extern void T1480f42(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_attached_result_index */
extern void T1485f50(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.set_attached_result_index */
extern void T1484f58(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.set_attached_result_index */
extern void T1483f53(GE_context* ac, T0* C, T6 a1);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_attached_result_index */
extern void T1482f51(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.set_attached_result_index */
extern void T1481f59(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.set_attached_result_index */
extern void T1480f54(GE_context* ac, T0* C, T6 a1);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_result_index */
extern void T1485f49(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.set_result_index */
extern void T1484f57(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.set_result_index */
extern void T1483f52(GE_context* ac, T0* C, T6 a1);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_result_index */
extern void T1482f50(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.set_result_index */
extern void T1481f58(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.set_result_index */
extern void T1480f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T1968f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_type */
extern void T1968f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T225f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T69f543(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_actual_argument_dynamic_types */
extern void T69f168(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.error_handler */
extern T0* T225f12(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_fatal_error */
extern void T225f27(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T1967f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_type */
extern void T1967f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_from_type_set */
extern void T305f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_tuple_label */
extern void T305f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T225f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T69f483(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T69f483ot1(T0* a1, T0** a2);
extern T1 T69f483ot2(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_argument_dynamic_types */
extern void T69f501(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_feature */
extern void T305f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T305f15ot1(T0* a1, T0** a2);
extern T1 T305f15ot2(T0* a1, T0** a2);
extern T1 T305f15ot3(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type */
extern void T1393f20(GE_context* ac, T0* C, T0* a1);
extern T1 T1393f20ot1(T0* a1, T0** a2);
/* detachable ET_DYNAMIC_PRECURSOR.is_builtin_function_item */
extern T1 T297f30(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_FEATURE.is_builtin_function_item */
extern T1 T231f28(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_PRECURSOR.is_builtin_procedure_call */
extern T1 T297f31(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_FEATURE.is_builtin_procedure_call */
extern T1 T231f29(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_from_type_set */
extern void T301f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_tuple_label */
extern void T301f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T225f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T69f482(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T69f482ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_result_dynamic_types */
extern void T69f500(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T301f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T301f16p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T301f16p1ot1(T0* a1, T0** a2);
extern T1 T301f16p1ot2(T0* a1, T0** a2);
extern T1 T301f16p1ot3(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T1968f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T1967f9(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.propagate_can_be_void */
extern void T305f13(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_QUALIFIED_QUERY_CALL.propagate_can_be_void */
extern void T301f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_PROCESSING_INSTRUCTION.node_set_parent */
extern void T1397f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_COMMENT.node_set_parent */
extern void T1396f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_ELEMENT.node_set_parent */
extern void T163f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.set_input_stream */
extern void T541f295(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T541f302(GE_context* ac, T0* C, T0* a1);
/* [detachable] YY_FILE_BUFFER.name */
extern T0* T896f13(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T541f302p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.new_file_buffer */
extern T0* T541f73(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.set_input_stream */
extern void T539f202(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T539f211(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T539f211p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.new_file_buffer */
extern T0* T539f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.set_input_stream */
extern void T538f291(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T538f298(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T538f298p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.new_file_buffer */
extern T0* T538f71(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.set_input_stream */
extern void T498f200(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.set_input_buffer */
extern void T498f208(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.set_input_buffer */
extern void T498f208p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.new_file_buffer */
extern T0* T498f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T541f296(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T541f296p1(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T541f296p0(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_execute_action */
extern void T541f306(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_CHARACTER_ENTITY.from_hexadecimal */
extern void T1303f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_STRING_ROUTINES.hexadecimal_to_integer */
extern T6 T83f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_CHARACTER_ENTITY.string_ */
extern T0* T1303f7(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_CHARACTER_ENTITY.to_utf8 */
extern T0* T1303f3(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_CHARACTER_ENTITY.utf8 */
extern T0* T1303f6(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_CHARACTER_ENTITY.is_ascii */
extern T1 T1303f2(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_CHARACTER_ENTITY.is_valid */
extern T1 T1303f5(GE_context* ac, T0* C);
/* [detachable] UC_UNICODE_ROUTINES.valid_non_surrogate_code */
extern T1 T461f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_CHARACTER_ENTITY.unicode */
extern T0* T1303f4(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_CHARACTER_ENTITY.from_decimal */
extern void T1303f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.has_normalized_newline */
extern T1 T541f203(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.text_substring */
extern T0* T541f183(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.text_count */
extern T6 T541f182(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.system_literal_text */
extern T0* T541f164(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.text_item */
extern T2 T541f209(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T541f123(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T541f123p1(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_set_line_column */
extern void T541f310(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.text */
extern T0* T541f107(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.pop_start_condition */
extern void T541f309(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.push_start_condition */
extern void T541f307(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.set_last_token */
extern void T541f308(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_execute_eof_action */
extern void T541f305(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.wrap */
extern T1 T541f101(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_refill_input_buffer */
extern void T541f304(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_null_trans_state */
extern T6 T541f100(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.yy_previous_state */
extern T6 T541f99(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.terminate */
extern void T541f303(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.read_token */
extern void T539f203(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.read_token */
extern void T539f203p1(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_execute_action */
extern void T539f217(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.has_normalized_newline */
extern T1 T539f183(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.text_substring */
extern T0* T539f163(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] XM_EIFFEL_SCANNER_DTD.text_count */
extern T6 T539f162(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.system_literal_text */
extern T0* T539f144(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.text_item */
extern T2 T539f197(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.normalized_newline */
extern T0* T539f106(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_set_line_column */
extern void T539f223(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.text */
extern T0* T539f80(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.pop_start_condition */
extern void T539f222(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.push_start_condition */
extern void T539f218(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_execute_eof_action */
extern void T539f216(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.wrap */
extern T1 T539f68(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_refill_input_buffer */
extern void T539f215(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_null_trans_state */
extern T6 T539f67(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.yy_previous_state */
extern T6 T539f66(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.fatal_error */
extern void T539f214(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.terminate */
extern void T539f213(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.set_last_token */
extern void T539f212(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.read_token */
extern void T538f292(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.read_token */
extern void T538f292p1(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_execute_action */
extern void T538f301(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.has_normalized_newline */
extern T1 T538f200(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.text_substring */
extern T0* T538f180(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] XM_EIFFEL_ENTITY_DEF.text_count */
extern T6 T538f179(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.system_literal_text */
extern T0* T538f161(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.text_item */
extern T2 T538f207(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T538f120(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T538f120p1(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_set_line_column */
extern void T538f306(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.text */
extern T0* T538f104(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.pop_start_condition */
extern void T538f305(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.push_start_condition */
extern void T538f302(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.set_last_token */
extern void T538f304(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_execute_eof_action */
extern void T538f300(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.terminate */
extern void T538f303(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.wrap */
extern T1 T538f98(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_refill_input_buffer */
extern void T538f299(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_null_trans_state */
extern T6 T538f97(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.yy_previous_state */
extern T6 T538f96(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.read_token */
extern void T498f201(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.yy_execute_action */
extern void T498f212(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_SCANNER.has_normalized_newline */
extern T1 T498f181(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.text_substring */
extern T0* T498f161(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] XM_EIFFEL_SCANNER.text_count */
extern T6 T498f160(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.system_literal_text */
extern T0* T498f142(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.text_item */
extern T2 T498f195(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_SCANNER.normalized_newline */
extern T0* T498f101(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.yy_set_line_column */
extern void T498f220(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.text */
extern T0* T498f75(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.pop_start_condition */
extern void T498f219(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.set_start_condition */
extern void T498f221(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_SCANNER.push_start_condition */
extern void T498f213(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_SCANNER.set_last_token */
extern void T498f218(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_execute_eof_action */
extern void T498f211(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_SCANNER.terminate */
extern void T498f217(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.wrap */
extern T1 T498f63(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.yy_refill_input_buffer */
extern void T498f210(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.yy_null_trans_state */
extern T6 T498f62(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_SCANNER.yy_previous_state */
extern T6 T498f61(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.fatal_error */
extern void T498f209(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T541f298(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.push_start_condition_dtd_ignore */
extern void T539f205(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T538f294(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T498f203(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.set_encoding */
extern void T541f299(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_INPUT_STREAM.set_encoding */
extern void T863f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.set_encoding */
extern void T539f206(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.set_encoding */
extern void T538f295(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.set_encoding */
extern void T498f204(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.set_input_from_resolver */
extern void T541f300(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.set_input_from_resolver */
extern void T539f207(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.set_input_from_resolver */
extern void T538f296(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T498f205(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.close_input */
extern void T541f297(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.close_input */
extern void T539f204(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.close_input */
extern void T538f293(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.close_input */
extern void T498f202(GE_context* ac, T0* C);
/* detachable ET_ALIASED_FEATURE_NAME.reset */
extern void T1446f8(GE_context* ac, T0* C);
/* detachable ET_TAGGED_ASSERTION.reset */
extern void T1490f9(GE_context* ac, T0* C);
/* detachable ET_CLASS_ASSERTION.reset */
extern void T1450f9(GE_context* ac, T0* C);
/* detachable ET_TAGGED_ASSERTION.process */
extern void T1490f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_tagged_assertion */
extern void T1271f105(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CLASS_ASSERTION.process */
extern void T1450f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_class_assertion */
extern void T1271f94(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SPECIAL_MANIFEST_STRING.set_cast_type */
extern void T1411f45(GE_context* ac, T0* C, T0* a1);
/* detachable ET_VERBATIM_STRING.set_cast_type */
extern void T1410f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REGULAR_MANIFEST_STRING.set_cast_type */
extern void T848f43(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SPECIAL_MANIFEST_STRING.set_type */
extern void T1411f49(GE_context* ac, T0* C, T0* a1);
/* detachable ET_VERBATIM_STRING.set_type */
extern void T1410f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REGULAR_MANIFEST_STRING.set_type */
extern void T848f48(GE_context* ac, T0* C, T0* a1);
/* detachable ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T1487f11(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.reset */
extern void T970f45(GE_context* ac, T0* C);
/* detachable ET_AGENT_TYPED_OPEN_ARGUMENT.process */
extern void T1487f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_agent_typed_open_argument */
extern void T1271f104(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUESTION_MARK_SYMBOL.process */
extern void T970f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_question_mark_symbol */
extern void T1271f109(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AGENT_IMPLICIT_CURRENT_TARGET.reset */
extern void T1738f7(GE_context* ac, T0* C);
/* detachable ET_AGENT_OPEN_TARGET.reset */
extern void T1486f10(GE_context* ac, T0* C);
/* [detachable] ET_AGENT_IMPLICIT_CURRENT_TARGET.process */
extern void T1738f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_agent_implicit_current_target */
extern void T1271f107(GE_context* ac, T0* C, T0* a1);
/* detachable ET_AGENT_OPEN_TARGET.process */
extern void T1486f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_agent_open_target */
extern void T1271f103(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONVERT_TO_EXPRESSION.set_index */
extern void T1973f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CONVERT_FROM_EXPRESSION.set_index */
extern void T1972f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CONVERT_BUILTIN_EXPRESSION.set_index */
extern void T1971f20(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AGENT_IMPLICIT_OPEN_ARGUMENT.set_index */
extern void T1953f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_INFIX_CAST_EXPRESSION.set_index */
extern void T1905f17(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AGENT_IMPLICIT_CURRENT_TARGET.set_index */
extern void T1738f8(GE_context* ac, T0* C, T6 a1);
/* detachable ET_AGENT_TYPED_OPEN_ARGUMENT.set_index */
extern void T1487f12(GE_context* ac, T0* C, T6 a1);
/* detachable ET_AGENT_OPEN_TARGET.set_index */
extern void T1486f11(GE_context* ac, T0* C, T6 a1);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_index */
extern void T1485f51(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.set_index */
extern void T1484f59(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.set_index */
extern void T1483f54(GE_context* ac, T0* C, T6 a1);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_index */
extern void T1482f52(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.set_index */
extern void T1481f60(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.set_index */
extern void T1480f55(GE_context* ac, T0* C, T6 a1);
/* detachable ET_OLD_EXPRESSION.set_index */
extern void T1477f24(GE_context* ac, T0* C, T6 a1);
/* detachable ET_PREFIX_EXPRESSION.set_index */
extern void T1476f29(GE_context* ac, T0* C, T6 a1);
/* detachable ET_INFIX_EXPRESSION.set_index */
extern void T1472f29(GE_context* ac, T0* C, T6 a1);
/* detachable ET_PRECURSOR_EXPRESSION.set_index */
extern void T1467f30(GE_context* ac, T0* C, T6 a1);
/* detachable ET_STATIC_CALL_EXPRESSION.set_index */
extern void T1217f34(GE_context* ac, T0* C, T6 a1);
/* detachable ET_PARENTHESIZED_EXPRESSION.set_index */
extern void T1188f25(GE_context* ac, T0* C, T6 a1);
/* detachable ET_MANIFEST_ARRAY.set_index */
extern void T1174f34(GE_context* ac, T0* C, T6 a1);
/* detachable ET_IF_EXPRESSION.set_index */
extern void T1127f30(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CALL_AGENT.set_index */
extern void T1003f36(GE_context* ac, T0* C, T6 a1);
/* detachable ET_BRACKET_EXPRESSION.set_index */
extern void T1000f27(GE_context* ac, T0* C, T6 a1);
/* detachable ET_QUESTION_MARK_SYMBOL.set_index */
extern void T970f46(GE_context* ac, T0* C, T6 a1);
/* detachable ET_PARENTHESIS_EXPRESSION.set_index */
extern void T845f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CREATE_EXPRESSION.set_index */
extern void T319f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.set_index */
extern void T277f27(GE_context* ac, T0* C, T6 a1);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1485f41(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1484f47(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1483f43(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1482f42(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1481f48(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1480f44(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CALL_AGENT.set_arguments */
extern void T1003f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENTHESIS_SYMBOL.set_seed */
extern void T1946f42(GE_context* ac, T0* C, T6 a1);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.set_seed */
extern void T1474f37(GE_context* ac, T0* C, T6 a1);
/* detachable ET_INFIX_AND_THEN_OPERATOR.set_seed */
extern void T1473f37(GE_context* ac, T0* C, T6 a1);
/* detachable ET_SYMBOL_OPERATOR.set_seed */
extern void T959f101(GE_context* ac, T0* C, T6 a1);
/* detachable ET_KEYWORD_OPERATOR.set_seed */
extern void T946f56(GE_context* ac, T0* C, T6 a1);
/* detachable ET_FREE_OPERATOR.set_seed */
extern void T938f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_BRACKET_SYMBOL.set_seed */
extern void T602f112(GE_context* ac, T0* C, T6 a1);
/* detachable ET_EXTERNAL_PROCEDURE.set_validity_checked */
extern void T1442f89(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.set_validity_checked */
extern void T1441f84(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.set_validity_checked */
extern void T1439f82(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.set_validity_checked */
extern void T1438f85(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.set_validity_checked */
extern void T1437f83(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.set_validity_checked */
extern void T458f79(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.set_validity_checked */
extern void T456f80(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.set_validity_checked */
extern void T361f79(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_validity_checked */
extern void T359f83(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.set_validity_checked */
extern void T357f82(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_validity_checked */
extern void T328f82(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.set_validity_checked */
extern void T246f91(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.set_validity_error */
extern void T1442f90(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.set_validity_error */
extern void T1441f85(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.set_validity_error */
extern void T1439f83(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.set_validity_error */
extern void T1438f86(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.set_validity_error */
extern void T1437f84(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.set_validity_error */
extern void T458f80(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.set_validity_error */
extern void T456f81(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.set_validity_error */
extern void T361f80(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_validity_error */
extern void T359f84(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.set_validity_error */
extern void T357f83(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_validity_error */
extern void T328f83(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.set_validity_error */
extern void T246f92(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.set_implementation_feature */
extern void T1442f115(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_implementation_feature */
extern void T1441f112(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.set_implementation_feature */
extern void T1439f108(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_implementation_feature */
extern void T1438f114(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_implementation_feature */
extern void T1437f111(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_implementation_feature */
extern void T458f105(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.set_implementation_feature */
extern void T456f108(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTRIBUTE.set_implementation_feature */
extern void T361f99(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_implementation_feature */
extern void T359f106(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.set_implementation_feature */
extern void T357f103(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_implementation_feature */
extern void T328f109(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_implementation_feature */
extern void T246f118(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.set_implementation_class */
extern void T1442f116(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_implementation_class */
extern void T1441f113(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.set_implementation_class */
extern void T1439f109(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_implementation_class */
extern void T1438f115(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_implementation_class */
extern void T1437f112(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_implementation_class */
extern void T458f106(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.set_implementation_class */
extern void T456f109(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTRIBUTE.set_implementation_class */
extern void T361f100(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_implementation_class */
extern void T359f107(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.set_implementation_class */
extern void T357f104(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_implementation_class */
extern void T328f110(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_implementation_class */
extern void T246f119(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.reset_preconditions */
extern void T1442f113(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.reset_preconditions */
extern void T1441f110(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.reset_preconditions */
extern void T1439f106(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.reset_preconditions */
extern void T1438f112(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.reset_preconditions */
extern void T1437f109(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.reset_preconditions */
extern void T458f103(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.reset_preconditions */
extern void T456f106(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.reset_preconditions */
extern void T361f97(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.reset_preconditions */
extern void T359f104(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.reset_preconditions */
extern void T357f101(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.reset_preconditions */
extern void T328f107(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.reset_preconditions */
extern void T246f116(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.reset_postconditions */
extern void T1442f114(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.reset_postconditions */
extern void T1441f111(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.reset_postconditions */
extern void T1439f107(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.reset_postconditions */
extern void T1438f113(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.reset_postconditions */
extern void T1437f110(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.reset_postconditions */
extern void T458f104(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.reset_postconditions */
extern void T456f107(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.reset_postconditions */
extern void T361f98(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.reset_postconditions */
extern void T359f105(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.reset_postconditions */
extern void T357f102(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.reset_postconditions */
extern void T328f108(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.reset_postconditions */
extern void T246f117(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.set_first_precursor */
extern void T1442f117(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_first_precursor */
extern void T1441f114(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.set_first_precursor */
extern void T1439f110(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_first_precursor */
extern void T1438f116(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_first_precursor */
extern void T1437f113(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_first_precursor */
extern void T458f107(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.set_first_precursor */
extern void T456f110(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTRIBUTE.set_first_precursor */
extern void T361f101(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_first_precursor */
extern void T359f108(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.set_first_precursor */
extern void T357f105(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_first_precursor */
extern void T328f111(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_first_precursor */
extern void T246f120(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.set_other_precursors */
extern void T1442f118(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_other_precursors */
extern void T1441f115(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.set_other_precursors */
extern void T1439f111(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_other_precursors */
extern void T1438f117(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_other_precursors */
extern void T1437f114(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_other_precursors */
extern void T458f108(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.set_other_precursors */
extern void T456f111(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTRIBUTE.set_other_precursors */
extern void T361f102(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_other_precursors */
extern void T359f109(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.set_other_precursors */
extern void T357f106(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_other_precursors */
extern void T328f112(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_other_precursors */
extern void T246f121(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.set_version */
extern void T1442f111(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ONCE_PROCEDURE.set_version */
extern void T1441f108(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DEFERRED_FUNCTION.set_version */
extern void T1439f104(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ONCE_FUNCTION.set_version */
extern void T1438f110(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DO_FUNCTION.set_version */
extern void T1437f107(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_version */
extern void T458f101(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DO_PROCEDURE.set_version */
extern void T456f104(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ATTRIBUTE.set_version */
extern void T361f95(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_version */
extern void T359f102(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.set_version */
extern void T357f99(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_version */
extern void T328f105(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_version */
extern void T246f114(GE_context* ac, T0* C, T6 a1);
/* detachable ET_EXTERNAL_PROCEDURE.set_clients */
extern void T1442f103(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_clients */
extern void T1441f101(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.set_clients */
extern void T1439f96(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_clients */
extern void T1438f103(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_clients */
extern void T1437f100(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_clients */
extern void T458f93(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.set_clients */
extern void T456f97(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTRIBUTE.set_clients */
extern void T361f89(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_clients */
extern void T359f93(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.set_clients */
extern void T357f92(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_clients */
extern void T328f98(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_clients */
extern void T246f106(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.set_first_seed */
extern void T1442f110(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ONCE_PROCEDURE.set_first_seed */
extern void T1441f107(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DEFERRED_FUNCTION.set_first_seed */
extern void T1439f103(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ONCE_FUNCTION.set_first_seed */
extern void T1438f109(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DO_FUNCTION.set_first_seed */
extern void T1437f106(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_first_seed */
extern void T458f100(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DO_PROCEDURE.set_first_seed */
extern void T456f103(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ATTRIBUTE.set_first_seed */
extern void T361f94(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_first_seed */
extern void T359f101(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.set_first_seed */
extern void T357f98(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_first_seed */
extern void T328f104(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_first_seed */
extern void T246f113(GE_context* ac, T0* C, T6 a1);
/* detachable ET_EXTERNAL_PROCEDURE.set_other_seeds */
extern void T1442f119(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_other_seeds */
extern void T1441f116(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.set_other_seeds */
extern void T1439f112(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_other_seeds */
extern void T1438f118(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_other_seeds */
extern void T1437f115(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_other_seeds */
extern void T458f109(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.set_other_seeds */
extern void T456f112(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTRIBUTE.set_other_seeds */
extern void T361f103(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_other_seeds */
extern void T359f110(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.set_other_seeds */
extern void T357f107(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_other_seeds */
extern void T328f113(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_other_seeds */
extern void T246f122(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.process */
extern void T1442f88(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.process */
extern void T1441f83(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.process */
extern void T1439f81(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.process */
extern void T1438f84(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.process */
extern void T1437f82(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.process */
extern void T458f78(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.process */
extern void T456f79(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTRIBUTE.process */
extern void T361f78(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.process */
extern void T359f82(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.process */
extern void T357f81(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.process */
extern void T328f81(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.process */
extern void T246f90(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.set_id */
extern void T1442f87(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ONCE_PROCEDURE.set_id */
extern void T1441f82(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DEFERRED_FUNCTION.set_id */
extern void T1439f80(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ONCE_FUNCTION.set_id */
extern void T1438f83(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DO_FUNCTION.set_id */
extern void T1437f81(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_id */
extern void T458f81(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DO_PROCEDURE.set_id */
extern void T456f82(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ATTRIBUTE.set_id */
extern void T361f77(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_id */
extern void T359f81(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.set_id */
extern void T357f80(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_id */
extern void T328f80(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_id */
extern void T246f89(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ONCE_MANIFEST_STRING.set_index */
extern void T1479f26(GE_context* ac, T0* C, T6 a1);
/* detachable ET_OLD_OBJECT_TEST.set_index */
extern void T1478f32(GE_context* ac, T0* C, T6 a1);
/* detachable ET_MANIFEST_TYPE.set_index */
extern void T1475f23(GE_context* ac, T0* C, T6 a1);
/* detachable ET_EXPRESSION_ADDRESS.set_index */
extern void T1471f24(GE_context* ac, T0* C, T6 a1);
/* detachable ET_RESULT_ADDRESS.set_index */
extern void T1470f23(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CURRENT_ADDRESS.set_index */
extern void T1469f23(GE_context* ac, T0* C, T6 a1);
/* detachable ET_FEATURE_ADDRESS.set_index */
extern void T1468f23(GE_context* ac, T0* C, T6 a1);
/* detachable ET_C2_CHARACTER_CONSTANT.set_index */
extern void T1422f47(GE_context* ac, T0* C, T6 a1);
/* detachable ET_C1_CHARACTER_CONSTANT.set_index */
extern void T1421f47(GE_context* ac, T0* C, T6 a1);
/* detachable ET_FALSE_CONSTANT.set_index */
extern void T1420f44(GE_context* ac, T0* C, T6 a1);
/* detachable ET_TRUE_CONSTANT.set_index */
extern void T1419f44(GE_context* ac, T0* C, T6 a1);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.set_index */
extern void T1417f47(GE_context* ac, T0* C, T6 a1);
/* detachable ET_REGULAR_REAL_CONSTANT.set_index */
extern void T1416f47(GE_context* ac, T0* C, T6 a1);
/* detachable ET_BINARY_INTEGER_CONSTANT.set_index */
extern void T1415f70(GE_context* ac, T0* C, T6 a1);
/* detachable ET_OCTAL_INTEGER_CONSTANT.set_index */
extern void T1414f70(GE_context* ac, T0* C, T6 a1);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.set_index */
extern void T1413f70(GE_context* ac, T0* C, T6 a1);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.set_index */
extern void T1412f70(GE_context* ac, T0* C, T6 a1);
/* detachable ET_SPECIAL_MANIFEST_STRING.set_index */
extern void T1411f44(GE_context* ac, T0* C, T6 a1);
/* detachable ET_VERBATIM_STRING.set_index */
extern void T1410f48(GE_context* ac, T0* C, T6 a1);
/* detachable ET_C3_CHARACTER_CONSTANT.set_index */
extern void T1409f45(GE_context* ac, T0* C, T6 a1);
/* detachable ET_STRIP_EXPRESSION.set_index */
extern void T1220f31(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ACROSS_EXPRESSION.set_index */
extern void T973f44(GE_context* ac, T0* C, T6 a1);
/* detachable ET_VOID.set_index */
extern void T962f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_REGULAR_MANIFEST_STRING.set_index */
extern void T848f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NAMED_OBJECT_TEST.set_index */
extern void T709f30(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.set_index */
extern void T360f68(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EQUALITY_EXPRESSION.set_index */
extern void T309f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.set_index */
extern void T308f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_OBJECT_TEST.set_index */
extern void T307f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_RESULT.set_index */
extern void T300f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_MANIFEST_TUPLE.set_index */
extern void T280f30(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.set_index */
extern void T278f30(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CURRENT.set_index */
extern void T272f35(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_IDENTIFIER.set_index */
extern void T179f111(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CONVERT_TO_EXPRESSION.reset */
extern void T1973f24(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_FROM_EXPRESSION.reset */
extern void T1972f24(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_BUILTIN_EXPRESSION.reset */
extern void T1971f19(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_CAST_EXPRESSION.reset */
extern void T1905f19(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.reset */
extern void T1485f48(GE_context* ac, T0* C);
extern T1 T1485f48ot1(T0* a1, T0** a2);
/* detachable ET_POSTCONDITIONS.reset */
extern void T1200f24(GE_context* ac, T0* C);
/* detachable ET_POSTCONDITIONS.reset_validity_checked */
extern void T1200f21(GE_context* ac, T0* C);
/* detachable ET_POSTCONDITIONS.reset */
extern void T1200f24p1(GE_context* ac, T0* C);
/* detachable ET_PRECONDITIONS.reset */
extern void T394f23(GE_context* ac, T0* C);
/* detachable ET_PRECONDITIONS.reset_validity_checked */
extern void T394f22(GE_context* ac, T0* C);
/* detachable ET_PRECONDITIONS.reset */
extern void T394f23p1(GE_context* ac, T0* C);
/* detachable ET_FORMAL_ARGUMENT_LIST.reset */
extern void T248f14(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_COMMA_ARGUMENT.reset */
extern void T1693f14(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_ARGUMENT.reset */
extern void T251f13(GE_context* ac, T0* C);
/* detachable ET_AGENT_ARGUMENT_OPERAND_LIST.reset */
extern void T990f14(GE_context* ac, T0* C);
extern T1 T990f14ot1(T0* a1, T0** a2);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T1484f56(GE_context* ac, T0* C);
/* detachable ET_LOCAL_VARIABLE_LIST.reset */
extern void T330f14(GE_context* ac, T0* C);
/* [detachable] ET_LOCAL_COMMA_VARIABLE.reset */
extern void T1694f14(GE_context* ac, T0* C);
/* [detachable] ET_LOCAL_COMMA_VARIABLE.type */
extern T0* T1694f6(GE_context* ac, T0* C);
/* [detachable] ET_LOCAL_COMMA_VARIABLE.name */
extern T0* T1694f8(GE_context* ac, T0* C);
/* detachable ET_LOCAL_VARIABLE.reset */
extern void T1163f13(GE_context* ac, T0* C);
/* detachable ET_LOCAL_VARIABLE.type */
extern T0* T1163f6(GE_context* ac, T0* C);
/* detachable ET_LOCAL_VARIABLE.name */
extern T0* T1163f8(GE_context* ac, T0* C);
/* detachable ET_LOCAL_VARIABLE.local_variable */
extern T0* T1163f7(GE_context* ac, T0* C);
/* [detachable] ET_LOCAL_COMMA_VARIABLE.local_variable */
extern T0* T1694f7(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T1484f56p1(GE_context* ac, T0* C);
extern T1 T1484f56p1ot1(T0* a1, T0** a2);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T1483f51(GE_context* ac, T0* C);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T1483f51p1(GE_context* ac, T0* C);
extern T1 T1483f51p1ot1(T0* a1, T0** a2);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.reset */
extern void T1482f49(GE_context* ac, T0* C);
extern T1 T1482f49ot1(T0* a1, T0** a2);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T1481f57(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T1481f57p1(GE_context* ac, T0* C);
extern T1 T1481f57p1ot1(T0* a1, T0** a2);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T1480f52(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T1480f52p1(GE_context* ac, T0* C);
extern T1 T1480f52p1ot1(T0* a1, T0** a2);
/* detachable ET_ONCE_MANIFEST_STRING.reset */
extern void T1479f28(GE_context* ac, T0* C);
/* detachable ET_OLD_OBJECT_TEST.reset */
extern void T1478f31(GE_context* ac, T0* C);
/* detachable ET_OLD_EXPRESSION.reset */
extern void T1477f23(GE_context* ac, T0* C);
/* detachable ET_PREFIX_EXPRESSION.reset */
extern void T1476f27(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_TYPE.reset */
extern void T1475f24(GE_context* ac, T0* C);
/* detachable ET_INFIX_EXPRESSION.reset */
extern void T1472f27(GE_context* ac, T0* C);
extern T1 T1472f27ot1(T0* a1, T0** a2);
extern T1 T1472f27ot2(T0* a1, T0** a2);
extern T1 T1472f27ot3(T0* a1, T0** a2);
/* detachable ET_EXPRESSION_ADDRESS.reset */
extern void T1471f23(GE_context* ac, T0* C);
/* detachable ET_RESULT_ADDRESS.reset */
extern void T1470f24(GE_context* ac, T0* C);
/* detachable ET_CURRENT_ADDRESS.reset */
extern void T1469f24(GE_context* ac, T0* C);
/* detachable ET_FEATURE_ADDRESS.reset */
extern void T1468f24(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_EXPRESSION.reset */
extern void T1467f28(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_EXPRESSION.reset_arguments */
extern void T1467f29(GE_context* ac, T0* C);
extern T1 T1467f29ot1(T0* a1, T0** a2);
/* detachable ET_C2_CHARACTER_CONSTANT.reset */
extern void T1422f48(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.reset */
extern void T1421f48(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.reset */
extern void T1420f45(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.reset */
extern void T1419f45(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.reset */
extern void T1417f49(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.reset */
extern void T1416f49(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.reset */
extern void T1415f72(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.reset */
extern void T1414f72(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.reset */
extern void T1413f72(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.reset */
extern void T1412f72(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.reset */
extern void T1411f47(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.reset */
extern void T1410f51(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.reset */
extern void T1409f48(GE_context* ac, T0* C);
/* detachable ET_STRIP_EXPRESSION.reset */
extern void T1220f32(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.reset */
extern void T1217f32(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.type */
extern T0* T1217f10(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.reset */
extern void T1217f32p1(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.reset_arguments */
extern void T1217f33(GE_context* ac, T0* C);
extern T1 T1217f33ot1(T0* a1, T0** a2);
/* detachable ET_PARENTHESIZED_EXPRESSION.reset */
extern void T1188f24(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_ARRAY.reset */
extern void T1174f32(GE_context* ac, T0* C);
extern T1 T1174f32ot1(T0* a1, T0** a2);
/* detachable ET_IF_EXPRESSION.reset */
extern void T1127f29(GE_context* ac, T0* C);
/* detachable ET_ELSEIF_EXPRESSION_LIST.reset */
extern void T1076f8(GE_context* ac, T0* C);
/* detachable ET_ELSEIF_EXPRESSION.reset */
extern void T1073f8(GE_context* ac, T0* C);
/* detachable ET_ELSEIF_EXPRESSION.conditional_expression */
extern T0* T1073f5(GE_context* ac, T0* C);
/* detachable ET_IF_EXPRESSION.conditional_expression */
extern T0* T1127f13(GE_context* ac, T0* C);
/* detachable ET_CALL_AGENT.reset */
extern void T1003f33(GE_context* ac, T0* C);
extern T1 T1003f33ot1(T0* a1, T0** a2);
/* detachable ET_BRACKET_EXPRESSION.reset */
extern void T1000f26(GE_context* ac, T0* C);
/* detachable ET_BRACKET_EXPRESSION.reset_arguments */
extern void T1000f29(GE_context* ac, T0* C);
extern T1 T1000f29ot1(T0* a1, T0** a2);
/* [detachable] ET_BRACKET_SYMBOL.reset */
extern void T602f113(GE_context* ac, T0* C);
/* detachable ET_ACROSS_EXPRESSION.reset */
extern void T973f42(GE_context* ac, T0* C);
/* detachable ET_ACROSS_EXPRESSION.reset_unfolded_form */
extern void T973f43(GE_context* ac, T0* C);
/* detachable ET_VOID.reset */
extern void T962f35(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.reset */
extern void T848f47(GE_context* ac, T0* C);
/* [detachable] ET_NAMED_OBJECT_TEST.reset */
extern void T709f29(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.reset */
extern void T360f73(GE_context* ac, T0* C);
/* [detachable] ET_CREATE_EXPRESSION.reset */
extern void T319f32(GE_context* ac, T0* C);
/* [detachable] ET_CREATE_EXPRESSION.type */
extern T0* T319f19(GE_context* ac, T0* C);
/* [detachable] ET_EQUALITY_EXPRESSION.reset */
extern void T309f22(GE_context* ac, T0* C);
extern T1 T309f22ot1(T0* a1, T0** a2);
extern T1 T309f22ot2(T0* a1, T0** a2);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.reset */
extern void T308f24(GE_context* ac, T0* C);
extern T1 T308f24ot1(T0* a1, T0** a2);
extern T1 T308f24ot2(T0* a1, T0** a2);
/* [detachable] ET_OBJECT_TEST.reset */
extern void T307f26(GE_context* ac, T0* C);
/* [detachable] ET_RESULT.reset */
extern void T300f36(GE_context* ac, T0* C);
/* [detachable] ET_MANIFEST_TUPLE.reset */
extern void T280f34(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T278f29(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T278f29p1(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.reset_arguments */
extern void T278f33(GE_context* ac, T0* C);
extern T1 T278f33ot1(T0* a1, T0** a2);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T277f32(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T277f32p1(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T277f32p0(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.reset_arguments */
extern void T277f33(GE_context* ac, T0* C);
extern T1 T277f33ot1(T0* a1, T0** a2);
/* [detachable] ET_CURRENT.reset */
extern void T272f37(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_TO_EXPRESSION.process */
extern void T1973f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONVERT_FROM_EXPRESSION.process */
extern void T1972f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONVERT_BUILTIN_EXPRESSION.process */
extern void T1971f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INFIX_CAST_EXPRESSION.process */
extern void T1905f18(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.process */
extern void T1485f40(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.process */
extern void T1484f46(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.process */
extern void T1483f42(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.process */
extern void T1482f41(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.process */
extern void T1481f47(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.process */
extern void T1480f43(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_MANIFEST_STRING.process */
extern void T1479f24(GE_context* ac, T0* C, T0* a1);
/* detachable ET_OLD_OBJECT_TEST.process */
extern void T1478f29(GE_context* ac, T0* C, T0* a1);
/* detachable ET_OLD_EXPRESSION.process */
extern void T1477f21(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PREFIX_EXPRESSION.process */
extern void T1476f26(GE_context* ac, T0* C, T0* a1);
/* detachable ET_MANIFEST_TYPE.process */
extern void T1475f22(GE_context* ac, T0* C, T0* a1);
/* detachable ET_INFIX_EXPRESSION.process */
extern void T1472f26(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXPRESSION_ADDRESS.process */
extern void T1471f21(GE_context* ac, T0* C, T0* a1);
/* detachable ET_RESULT_ADDRESS.process */
extern void T1470f21(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CURRENT_ADDRESS.process */
extern void T1469f21(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FEATURE_ADDRESS.process */
extern void T1468f21(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PRECURSOR_EXPRESSION.process */
extern void T1467f25(GE_context* ac, T0* C, T0* a1);
/* detachable ET_C2_CHARACTER_CONSTANT.process */
extern void T1422f45(GE_context* ac, T0* C, T0* a1);
/* detachable ET_C1_CHARACTER_CONSTANT.process */
extern void T1421f45(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FALSE_CONSTANT.process */
extern void T1420f41(GE_context* ac, T0* C, T0* a1);
/* detachable ET_TRUE_CONSTANT.process */
extern void T1419f41(GE_context* ac, T0* C, T0* a1);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.process */
extern void T1417f45(GE_context* ac, T0* C, T0* a1);
/* detachable ET_REGULAR_REAL_CONSTANT.process */
extern void T1416f45(GE_context* ac, T0* C, T0* a1);
/* detachable ET_BINARY_INTEGER_CONSTANT.process */
extern void T1415f67(GE_context* ac, T0* C, T0* a1);
/* detachable ET_OCTAL_INTEGER_CONSTANT.process */
extern void T1414f67(GE_context* ac, T0* C, T0* a1);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.process */
extern void T1413f67(GE_context* ac, T0* C, T0* a1);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.process */
extern void T1412f67(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SPECIAL_MANIFEST_STRING.process */
extern void T1411f43(GE_context* ac, T0* C, T0* a1);
/* detachable ET_VERBATIM_STRING.process */
extern void T1410f47(GE_context* ac, T0* C, T0* a1);
/* detachable ET_C3_CHARACTER_CONSTANT.process */
extern void T1409f44(GE_context* ac, T0* C, T0* a1);
/* detachable ET_STRIP_EXPRESSION.process */
extern void T1220f28(GE_context* ac, T0* C, T0* a1);
/* detachable ET_STATIC_CALL_EXPRESSION.process */
extern void T1217f29(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PARENTHESIZED_EXPRESSION.process */
extern void T1188f22(GE_context* ac, T0* C, T0* a1);
/* detachable ET_MANIFEST_ARRAY.process */
extern void T1174f28(GE_context* ac, T0* C, T0* a1);
/* detachable ET_IF_EXPRESSION.process */
extern void T1127f28(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CALL_AGENT.process */
extern void T1003f30(GE_context* ac, T0* C, T0* a1);
/* detachable ET_BRACKET_EXPRESSION.process */
extern void T1000f25(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ACROSS_EXPRESSION.process */
extern void T973f33(GE_context* ac, T0* C, T0* a1);
/* detachable ET_VOID.process */
extern void T962f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REGULAR_MANIFEST_STRING.process */
extern void T848f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NAMED_OBJECT_TEST.process */
extern void T709f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.process */
extern void T360f67(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CREATE_EXPRESSION.process */
extern void T319f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EQUALITY_EXPRESSION.process */
extern void T309f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.process */
extern void T308f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST.process */
extern void T307f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_RESULT.process */
extern void T300f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MANIFEST_TUPLE.process */
extern void T280f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.process */
extern void T278f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.process */
extern void T277f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CURRENT.process */
extern void T272f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER.process */
extern void T179f114(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.set_meta_type */
extern void T434f59(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.set_meta_type */
extern void T433f59(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.set_meta_type */
extern void T314f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.set_meta_type */
extern void T310f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.set_meta_type */
extern void T293f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.set_meta_type */
extern void T218f57(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1393f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T1393f17ot1(T0* a1, T0** a2);
extern T1 T1393f17ot2(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1393f17p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T1393f17p1ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T459f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_DYNAMIC_TARGET_LIST.item */
extern T0* T1298f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T459f17p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T459f17p1ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.put_type_from_type_set */
extern void T434f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.put_type_from_type_set */
extern void T433f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.put_type_from_type_set */
extern void T314f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.put_type_from_type_set */
extern void T310f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.put_type_from_type_set */
extern void T293f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.put_type_from_type_set */
extern void T260f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.put_type_from_type_set */
extern void T218f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.propagate_can_be_void */
extern void T1393f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET.propagate_can_be_void */
extern void T459f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.propagate_can_be_void */
extern void T434f70(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.propagate_can_be_void */
extern void T433f70(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.propagate_can_be_void */
extern void T314f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.propagate_can_be_void */
extern void T310f71(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.propagate_can_be_void */
extern void T293f71(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.propagate_can_be_void */
extern void T260f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.propagate_can_be_void */
extern void T218f69(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.set_never_void */
extern void T1393f16(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET.set_never_void */
extern void T459f16(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.set_never_void */
extern void T434f63(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.set_never_void */
extern void T433f63(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.set_never_void */
extern void T314f26(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.set_never_void */
extern void T310f61(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.set_never_void */
extern void T293f61(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.set_never_void */
extern void T260f15(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.set_never_void */
extern void T218f60(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_target */
extern void T1393f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET.put_target */
extern void T459f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_DYNAMIC_TARGET_LIST.force_last */
extern void T1298f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET].force */
extern void T1644f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TARGET].fill_with */
extern void T1643f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TARGET].extend */
extern void T1643f8(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_TARGET_LIST.fixed_array */
extern T0* T1298f6(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET].default_create */
extern T0* T1644c3(GE_context* ac);
/* detachable ET_DYNAMIC_TARGET_LIST.resize */
extern void T1298f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T1644f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T1643f4(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DYNAMIC_TARGET_LIST.new_capacity */
extern T6 T1298f8(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DYNAMIC_TARGET_LIST.capacity */
extern T6 T1298f7(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_TARGET_LIST.has */
extern T1 T1298f3(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_TARGET_LIST.index_of */
extern T6 T1298f5(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_TARGET_LIST.put_last */
extern void T1298f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_TARGET_LIST.make_with_capacity */
extern T0* T1298c9(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET].make */
extern T0* T1644f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TARGET].make_empty */
extern T0* T1643c5(GE_context* ac, T6 a1);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.put_target */
extern void T434f68(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.put_target */
extern void T433f68(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.put_target */
extern void T314f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.put_target */
extern void T310f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.put_target */
extern void T293f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.put_target */
extern void T260f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.put_target */
extern void T218f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.append_runtime_name_to_string */
extern void T1881f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_runtime_name_to_string */
extern void T1880f20(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FORMAL_PARAMETER_LIST.append_runtime_name_to_string */
extern void T585f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_runtime_name_to_string */
extern void T559f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.append_runtime_name_to_string */
extern void T235f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.append_unaliased_to_string */
extern void T1881f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T1880f21(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FORMAL_PARAMETER_LIST.append_unaliased_to_string */
extern void T585f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T559f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.append_unaliased_to_string */
extern void T235f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.append_to_string */
extern void T1881f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T1880f22(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FORMAL_PARAMETER_LIST.append_to_string */
extern void T585f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T559f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.append_to_string */
extern void T235f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.reset */
extern void T1881f26(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T1880f23(GE_context* ac, T0* C);
/* detachable ET_FORMAL_PARAMETER_LIST.reset */
extern void T585f33(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T559f21(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.reset */
extern void T235f33(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.reset_qualified_anchored_types */
extern void T1881f27(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T1880f24(GE_context* ac, T0* C);
/* detachable ET_FORMAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T585f34(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T559f22(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T235f34(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.append_to_string_with_space */
extern void T970f43(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUESTION_MARK_SYMBOL.expandedness_text */
extern T0* T970f27(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.tokens */
extern T0* T970f15(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.is_explicit_expandedness_mark */
extern T1 T970f31(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.is_reference */
extern T1 T970f17(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.is_expanded */
extern T1 T970f16(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.separateness_text */
extern T0* T970f26(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.is_explicit_separateness_mark */
extern T1 T970f30(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.is_separate */
extern T1 T970f18(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.attachment_text */
extern T0* T970f25(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.append_to_string_with_space */
extern void T602f111(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BRACKET_SYMBOL.expandedness_text */
extern T0* T602f31(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_explicit_expandedness_mark */
extern T1 T602f41(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_reference */
extern T1 T602f24(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_expanded */
extern T1 T602f23(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.separateness_text */
extern T0* T602f30(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_explicit_separateness_mark */
extern T1 T602f40(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_separate */
extern T1 T602f25(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.attachment_text */
extern T0* T602f29(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.append_to_string_with_space */
extern void T553f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.expandedness_text */
extern T0* T553f15(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.tokens */
extern T0* T553f18(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_explicit_expandedness_mark */
extern T1 T553f20(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_reference */
extern T1 T553f11(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_expanded */
extern T1 T553f10(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.separateness_text */
extern T0* T553f14(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_explicit_separateness_mark */
extern T1 T553f19(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_explicit_separateness_mark */
extern T1 T402f25(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_separate */
extern T1 T402f20(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.attachment_text */
extern T0* T553f13(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_explicit_attachment_mark */
extern T1 T553f17(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.append_to_string_with_space */
extern void T402f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_KEYWORD.expandedness_text */
extern T0* T402f23(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_explicit_expandedness_mark */
extern T1 T402f26(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_reference */
extern T1 T402f19(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_expanded */
extern T1 T402f18(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.separateness_text */
extern T0* T402f22(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.attachment_text */
extern T0* T402f21(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.append_to_string_with_space */
extern void T342f90(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYMBOL.expandedness_text */
extern T0* T342f34(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_explicit_expandedness_mark */
extern T1 T342f26(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_reference */
extern T1 T342f24(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_expanded */
extern T1 T342f23(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.separateness_text */
extern T0* T342f33(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_explicit_separateness_mark */
extern T1 T342f27(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_separate */
extern T1 T342f25(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.attachment_text */
extern T0* T342f32(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.append_to_string_with_space */
extern void T341f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IMPLICIT_TYPE_MARK.expandedness_text */
extern T0* T341f11(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.tokens */
extern T0* T341f13(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.is_explicit_expandedness_mark */
extern T1 T341f15(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.is_reference */
extern T1 T341f22(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.is_expanded */
extern T1 T341f21(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.separateness_text */
extern T0* T341f10(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.is_explicit_separateness_mark */
extern T1 T341f14(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.is_separate */
extern T1 T341f20(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.attachment_text */
extern T0* T341f9(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.classes_do_all */
extern void T809f171(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T578f170(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T578f170p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T206f170(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T206f170p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.classes_do_all */
extern void T182f196(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.classes_do_all */
extern void T55f273(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYSTEM.classes_do_all */
extern void T35f204(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.classes_do_until */
extern void T809f172(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].go_after */
extern void T591f13(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].cursor_go_after */
extern void T220f64(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.classes_do_until */
extern void T578f171(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.classes_do_until */
extern void T206f171(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_LIBRARY.classes_do_until */
extern void T182f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_SYSTEM.classes_do_until */
extern void T55f274(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_SYSTEM.classes_do_until */
extern void T35f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_LIBRARY.classes_do_if */
extern void T809f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T578f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T578f173p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T206f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T206f173p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_LIBRARY.classes_do_if */
extern void T182f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_SYSTEM.classes_do_if */
extern void T55f275(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_SYSTEM.classes_do_if */
extern void T35f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_LIBRARY.master_classes_do_all */
extern void T809f173(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].do_all */
extern void T220f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T578f172(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T206f172(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.master_classes_do_all */
extern void T182f198(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.master_classes_do_all */
extern void T55f189(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYSTEM.master_classes_do_all */
extern void T35f206(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.master_classes_do_until */
extern void T809f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T578f175(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T206f175(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_LIBRARY.master_classes_do_until */
extern void T182f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_SYSTEM.master_classes_do_until */
extern void T55f276(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_SYSTEM.master_classes_do_until */
extern void T35f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_LIBRARY.master_classes_do_if */
extern void T809f177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].do_if */
extern void T220f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T578f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T206f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_LIBRARY.master_classes_do_if */
extern void T182f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_SYSTEM.master_classes_do_if */
extern void T55f277(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_SYSTEM.master_classes_do_if */
extern void T35f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_LIBRARY.master_classes_do_if_until */
extern void T809f178(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T578f177(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T206f177(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_LIBRARY.master_classes_do_if_until */
extern void T182f203(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_SYSTEM.master_classes_do_if_until */
extern void T55f278(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_SYSTEM.master_classes_do_if_until */
extern void T35f210(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_LIBRARY.universes_do_if */
extern void T809f175(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_if */
extern void T205f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ADAPTED_LIBRARIES.universes_do_if */
extern void T183f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DOTNET_ASSEMBLY.universes_do_if */
extern void T578f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DOTNET_ASSEMBLIES.universes_do_if */
extern void T577f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.universes_do_if */
extern void T206f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_LIBRARY.universes_do_if */
extern void T182f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ECF_SYSTEM.universes_do_if */
extern void T55f281(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_SYSTEM.universes_do_if */
extern void T35f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.append_runtime_name_to_string */
extern void T1455f84(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.append_runtime_name_to_string */
extern void T1454f85(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.append_runtime_name_to_string */
extern void T1453f85(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.append_runtime_name_to_string */
extern void T1427f89(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.append_runtime_name_to_string */
extern void T852f86(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIKE_CURRENT.append_runtime_name_to_string */
extern void T432f78(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.append_runtime_name_to_string */
extern void T245f80(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.append_unaliased_to_string */
extern void T1455f85(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.append_unaliased_to_string */
extern void T1454f86(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.append_unaliased_to_string */
extern void T1453f86(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T1427f90(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T852f87(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIKE_CURRENT.append_unaliased_to_string */
extern void T432f79(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.append_unaliased_to_string */
extern void T247f119(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.append_unaliased_to_string */
extern void T245f81(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.append_unaliased_to_string */
extern void T72f262(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.append_unaliased_to_string */
extern void T70f126(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.append_to_string */
extern void T1455f81(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.append_to_string */
extern void T1454f87(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.append_to_string */
extern void T1453f87(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.append_to_string */
extern void T1427f87(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.upper_name */
extern T0* T1427f28(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER.append_to_string */
extern void T852f84(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.upper_name */
extern T0* T852f29(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_CURRENT.append_to_string */
extern void T432f80(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.append_to_string */
extern void T245f76(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.upper_name */
extern T0* T245f46(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.reset_qualified_anchored_types */
extern void T1455f83(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.reset_qualified_anchored_types */
extern void T1454f90(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.reset_qualified_anchored_types */
extern void T1453f90(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T1427f92(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T852f89(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_CURRENT.reset_qualified_anchored_types */
extern void T432f84(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.reset_qualified_anchored_types */
extern void T247f123(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.reset_qualified_anchored_types */
extern void T245f78(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.reset_qualified_anchored_types */
extern void T72f318(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.reset_qualified_anchored_types */
extern void T70f130(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.process */
extern void T1455f86(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.process */
extern void T1454f88(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.process */
extern void T1453f88(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.process */
extern void T1427f88(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.process */
extern void T852f85(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIKE_CURRENT.process */
extern void T432f82(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.process */
extern void T245f79(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.reset */
extern void T1455f82(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.reset */
extern void T1454f89(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.reset */
extern void T1453f89(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.set_feature_name */
extern void T179f121(GE_context* ac, T0* C, T1 a1);
/* detachable ET_LIKE_FEATURE.is_like_argument */
extern T1 T1453f30(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.reset */
extern void T1427f91(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.reset_constraint_base_types */
extern void T1427f93(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER.reset */
extern void T852f88(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_CURRENT.reset */
extern void T432f83(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.reset */
extern void T247f122(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.reset */
extern void T245f77(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.reset_type */
extern void T72f317(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.reset */
extern void T70f129(GE_context* ac, T0* C);
extern T1 T70f129ot1(T0* a1, T0** a2);
extern T1 T70f129ot2(T0* a1, T0** a2);
extern T1 T70f129ot3(T0* a1, T0** a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.add_adapted_base_classes_to_list */
extern void T1455f88(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1455f88ot1(T0* a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.keep_first */
extern void T236f61(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.force_last */
extern void T236f56(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.resize */
extern void T236f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE].aliased_resized_area */
extern T0* T605f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_TYPE].aliased_resized_area */
extern T0* T250f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.new_capacity */
extern T6 T236f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.capacity */
extern T6 T236f10(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS].force_last */
extern void T682f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_CLASS].force */
extern void T1359f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ADAPTED_CLASS].fill_with */
extern void T1361f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ADAPTED_CLASS].extend */
extern void T1361f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS].resize */
extern void T682f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_CLASS].aliased_resized_area */
extern T0* T1359f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ADAPTED_CLASS].aliased_resized_area */
extern T0* T1361f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS].new_capacity */
extern T6 T682f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS].extendible */
extern T1 T682f10(GE_context* ac, T0* C, T6 a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.tokens */
extern T0* T1455f37(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.seed */
extern T6 T1455f36(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.add_adapted_base_classes_to_list */
extern void T1454f92(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1454f92ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.tokens */
extern T0* T1454f33(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.seed */
extern T6 T1454f32(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.add_adapted_base_classes_to_list */
extern void T1453f93(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.seeded_feature */
extern T0* T72f194(GE_context* ac, T0* C, T6 a1);
/* detachable ET_LIKE_FEATURE.index */
extern T6 T1453f31(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.tokens */
extern T0* T1453f29(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.add_adapted_base_classes_to_list */
extern void T1427f86(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f86ot1(T0* a1, T0** a2);
extern T1 T1427f86ot2(T0* a1, T0** a2);
extern T1 T1427f86ot3(T0* a1, T0** a2);
/* [detachable] ET_FORMAL_PARAMETER.constraint_base_types */
extern T0* T852f28(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.tokens */
extern T0* T1427f30(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.ancestor */
extern T0* T72f146(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BASE_TYPE_LIST.base_type */
extern T0* T401f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIKE_N.add_adapted_base_classes_to_list */
extern void T1401f41(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NESTED_TYPE_CONTEXT.remove_last */
extern void T236f57(GE_context* ac, T0* C);
/* [detachable] ET_NESTED_TYPE_CONTEXT.item */
extern T0* T236f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.valid_index */
extern T1 T236f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FORMAL_PARAMETER.add_adapted_base_classes_to_list */
extern void T852f83(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T852f83ot1(T0* a1, T0** a2);
extern T1 T852f83ot2(T0* a1, T0** a2);
extern T1 T852f83ot3(T0* a1, T0** a2);
/* [detachable] ET_FORMAL_PARAMETER.tokens */
extern T0* T852f40(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_CURRENT.add_adapted_base_classes_to_list */
extern void T432f85(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NESTED_TYPE_CONTEXT.add_adapted_base_classes_to_list */
extern void T236f62(GE_context* ac, T0* C, T0* a1);
extern T1 T236f62ot1(T0* a1, T0** a2);
/* [detachable] ET_NESTED_TYPE_CONTEXT.put */
extern void T236f60(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_NESTED_TYPE_CONTEXT.last */
extern T0* T236f17(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.add_adapted_base_classes_to_list */
extern void T245f82(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T245f82ot1(T0* a1, T0** a2);
extern T1 T245f82ot2(T0* a1, T0** a2);
extern T1 T245f82ot3(T0* a1, T0** a2);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.tokens */
extern T0* T245f8(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER3.process_class */
extern void T1543f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class */
extern void T1542f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER2.process_class */
extern void T1541f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER1.process_class */
extern void T1540f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER3.process_class */
extern void T1283f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class */
extern void T1275f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class */
extern void T1274f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER2.process_class */
extern void T1269f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER2.process_class */
extern void T1268f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SIGNATURE_CHECKER.process_class */
extern void T1267f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCHORED_TYPE_CHECKER.process_class */
extern void T1266f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class */
extern void T1265f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER_TYPE_RESOLVER.process_class */
extern void T1264f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.process_class */
extern void T1253f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER1.process_class */
extern void T1252f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_NULL_PROCESSOR.process_class */
extern void T447f2(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IMPLEMENTATION_CHECKER.process_class */
extern void T444f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IMPLEMENTATION_CHECKER.internal_process_class */
extern void T444f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_PROCESSOR.report_class_processed */
extern void T61f107(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.report_class_processed */
extern void T364f111(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.set_implementation_checked */
extern void T72f270(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].wipe_out */
extern void T913f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].slots_wipe_out */
extern void T913f53(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].clashes_wipe_out */
extern void T913f52(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].key_storage_wipe_out */
extern void T913f51(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].item_storage_wipe_out */
extern void T913f50(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_NAMED_CLASS].keep_head */
extern void T1576f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_NAMED_CLASS].set_count */
extern void T1576f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].move_all_cursors_after */
extern void T913f49(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.set_suppliers */
extern void T72f269(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].extend */
extern void T913f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].put */
extern void T913f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].make */
extern T0* T913c36(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].set_internal_cursor */
extern void T913f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].make_slots */
extern void T913f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].make_clashes */
extern void T913f44(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].make_key_storage */
extern void T913f43(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].make_item_storage */
extern void T913f42(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS].make */
extern T0* T1578f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_NAMED_CLASS].make_empty */
extern T0* T1576c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS].default_create */
extern T0* T1578c3(GE_context* ac);
/* [detachable] ET_IMPLEMENTATION_CHECKER.check_invariants_validity */
extern void T444f30(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_IMPLEMENTATION_CHECKER.flat_mode */
extern T1 T444f17(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.check_invariants_validity */
extern void T369f80(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INVARIANTS.set_validity_error */
extern void T1155f33(GE_context* ac, T0* C);
/* detachable ET_INVARIANTS.set_validity_checked */
extern void T1155f32(GE_context* ac, T0* C);
/* detachable ET_INVARIANTS.assertion */
extern T0* T1155f11(GE_context* ac, T0* C, T6 a1);
/* detachable ET_INVARIANTS.item */
extern T0* T1155f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_CHECKER.set_supplier_handler */
extern void T369f79(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TYPE_CHECKER.set_supplier_handler */
extern void T373f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IMPLEMENTATION_CHECKER.check_features_validity */
extern void T444f29(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_IMPLEMENTATION_CHECKER.check_procedure_validity */
extern void T444f34(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].wipe_out */
extern void T1284f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].slots_wipe_out */
extern void T1284f51(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].clashes_wipe_out */
extern void T1284f50(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].key_storage_wipe_out */
extern void T1284f49(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].item_storage_wipe_out */
extern void T1284f48(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].unset_found_item */
extern void T1284f43(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].move_all_cursors_after */
extern void T1284f47(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE].set_next_cursor */
extern void T1639f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE].set_after */
extern void T1639f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].forth */
extern void T1284f37(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].cursor_forth */
extern void T1284f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].add_traversing_cursor */
extern void T1284f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE].set_position */
extern void T1639f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].remove_traversing_cursor */
extern void T1284f52(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].clashes_item */
extern T6 T1284f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_IMPLEMENTATION_CHECKER.check_precursor_procedure_validity */
extern void T444f38(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [detachable] ET_FEATURE_CHECKER.check_precursor_feature_validity */
extern void T369f85(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].item_for_iteration */
extern T0* T1284f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].cursor_item */
extern T0* T1284f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].item_storage_item */
extern T0* T1284f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].after */
extern T1 T1284f34(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].cursor_after */
extern T1 T1284f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE].after */
extern T1 T1639f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].start */
extern void T1284f36(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].cursor_start */
extern void T1284f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].cursor_off */
extern T1 T1284f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE].off */
extern T1 T1639f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].is_empty */
extern T1 T1284f21(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.check_feature_validity */
extern void T369f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.build_preconditions_attachment_scope */
extern void T369f86(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.free_attachment_scope */
extern void T369f89(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.new_attachment_scope */
extern T0* T369f50(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.build_assertions_attachment_scope */
extern void T369f88(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.add_precursors_with_preconditions_recursive */
extern void T369f87(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.feature_checker */
extern T0* T369f46(GE_context* ac, T0* C);
/* [detachable] ET_IMPLEMENTATION_CHECKER.check_assertions_validity */
extern void T444f36(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_IMPLEMENTATION_CHECKER.flat_dbc_mode */
extern T1 T444f18(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.check_postconditions_validity */
extern void T369f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_POSTCONDITIONS.set_validity_error */
extern void T1200f23(GE_context* ac, T0* C);
/* detachable ET_POSTCONDITIONS.set_validity_checked */
extern void T1200f22(GE_context* ac, T0* C);
/* detachable ET_POSTCONDITIONS.assertion */
extern T0* T1200f8(GE_context* ac, T0* C, T6 a1);
/* detachable ET_POSTCONDITIONS.item */
extern T0* T1200f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_CHECKER.set_precursor_procedures */
extern void T369f83(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IMPLEMENTATION_CHECKER.check_query_validity */
extern void T444f33(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].wipe_out */
extern void T1285f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].slots_wipe_out */
extern void T1285f51(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].clashes_wipe_out */
extern void T1285f50(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].key_storage_wipe_out */
extern void T1285f49(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].item_storage_wipe_out */
extern void T1285f48(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].unset_found_item */
extern void T1285f43(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].move_all_cursors_after */
extern void T1285f47(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_QUERY].set_next_cursor */
extern void T1640f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_QUERY].set_after */
extern void T1640f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].forth */
extern void T1285f37(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].cursor_forth */
extern void T1285f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].add_traversing_cursor */
extern void T1285f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_QUERY].set_position */
extern void T1640f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].remove_traversing_cursor */
extern void T1285f52(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].clashes_item */
extern T6 T1285f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_IMPLEMENTATION_CHECKER.check_precursor_query_validity */
extern void T444f37(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].item_for_iteration */
extern T0* T1285f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].cursor_item */
extern T0* T1285f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].item_storage_item */
extern T0* T1285f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].after */
extern T1 T1285f34(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].cursor_after */
extern T1 T1285f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_QUERY].after */
extern T1 T1640f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].start */
extern void T1285f36(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].cursor_start */
extern void T1285f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].cursor_off */
extern T1 T1285f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_QUERY].off */
extern T1 T1640f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].is_empty */
extern T1 T1285f21(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.set_precursor_queries */
extern void T369f81(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SUPPLIER_BUILDER.set */
extern void T1286f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_IMPLEMENTATION_CHECKER.suppliers_enabled */
extern T1 T444f15(GE_context* ac, T0* C);
/* [detachable] ET_IMPLEMENTATION_CHECKER.check_signatures_validity */
extern void T444f28(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].wipe_out */
extern void T1254f48(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].slots_wipe_out */
extern void T1254f62(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].clashes_wipe_out */
extern void T1254f61(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1254f60(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_FEATURE_NAME].keep_head */
extern void T1592f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_FEATURE_NAME].set_count */
extern void T1592f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1254f59(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_FLATTENED_FEATURE].keep_head */
extern void T1589f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_FLATTENED_FEATURE].set_count */
extern void T1589f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].unset_found_item */
extern void T1254f58(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].move_all_cursors_after */
extern void T1254f57(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].set_next_cursor */
extern void T1588f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].set_after */
extern void T1588f10(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].forth */
extern void T1254f47(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_forth */
extern void T1254f56(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].add_traversing_cursor */
extern void T1254f68(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].set_position */
extern void T1588f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1254f67(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].clashes_item */
extern T6 T1254f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_IMPLEMENTATION_CHECKER.check_signature_validity */
extern void T444f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SIGNATURE_CHECKER.check_signature_validity */
extern void T1267f11(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].forth */
extern void T1622f10(GE_context* ac, T0* C);
/* detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].cursor_forth */
extern void T1623f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1623f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].set_next_cursor */
extern void T1622f12(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1623f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].set */
extern void T1622f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [detachable] ET_SIGNATURE_CHECKER.check_selected_signature_validity */
extern void T1267f15(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1267f15ot1(T0* a1);
extern T1 T1267f15ot2(T0* a1);
/* detachable ET_FORMAL_ARGUMENT_LIST.is_empty */
extern T1 T248f8(GE_context* ac, T0* C);
/* [detachable] ET_SIGNATURE_CHECKER.check_tuple_actual_parameters_unfolded */
extern void T1267f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_SIGNATURE_CHECKER.tokens */
extern T0* T1267f6(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrd2c_error */
extern void T50f354(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdrd2c */
extern T0* T742c954(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T50f87(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vdrd2c_error */
extern void T34f354(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T34f87(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrd2d_error */
extern void T50f353(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdrd2d */
extern T0* T742c953(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* detachable ET_PARENT_FEATURE.name */
extern T0* T1289f13(GE_context* ac, T0* C);
/* [detachable] ET_ERROR_HANDLER.report_vdrd2d_error */
extern void T34f353(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_SIGNATURE_CHECKER.error_handler */
extern T0* T1267f8(GE_context* ac, T0* C);
/* [detachable] ET_SIGNATURE_CHECKER.set_fatal_error */
extern void T1267f16(GE_context* ac, T0* C);
/* [detachable] ET_NESTED_TYPE_CONTEXT.set */
extern void T236f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].item */
extern T0* T1622f6(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].start */
extern void T1622f9(GE_context* ac, T0* C);
/* detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].cursor_start */
extern void T1623f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].cursor_off */
extern T1 T1623f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].off */
extern T1 T1622f7(GE_context* ac, T0* C);
/* detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].new_cursor */
extern T0* T1623f5(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].make */
extern T0* T1622c8(GE_context* ac, T0* a1);
/* detachable ET_PARENT_FEATURE.is_deferred */
extern T1 T1289f14(GE_context* ac, T0* C);
/* detachable ET_PARENT_FEATURE.has_undefine */
extern T1 T1289f19(GE_context* ac, T0* C);
/* [detachable] ET_SIGNATURE_CHECKER.check_joined_signature_validity */
extern void T1267f14(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdjr0b_error */
extern void T50f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* [detachable] ET_VALIDITY_ERROR.make_vdjr0b */
extern T0* T742c952(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T50f88(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vdjr0b_error */
extern void T34f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T34f88(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdjr0a_error */
extern void T50f351(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdjr0a */
extern T0* T742c951(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vdjr0a_error */
extern void T34f351(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdjr0c_error */
extern void T50f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdjr0c */
extern T0* T742c950(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vdjr0c_error */
extern void T34f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_SIGNATURE_CHECKER.check_redeclared_signature_validity */
extern void T1267f13(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1267f13ot1(T0* a1);
extern T1 T1267f13ot2(T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrd6b_error */
extern void T50f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdrd6b */
extern T0* T742c949(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T50f67(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vdrd6b_error */
extern void T34f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T34f67(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrd2a_error */
extern void T50f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdrd2a */
extern T0* T742c948(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vdrd2a_error */
extern void T34f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrd2b_error */
extern void T50f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdrd2b */
extern T0* T742c947(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vdrd2b_error */
extern void T34f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item_for_iteration */
extern T0* T1254f21(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_item */
extern T0* T1254f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item_storage_item */
extern T0* T1254f30(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].after */
extern T1 T1254f36(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_after */
extern T1 T1254f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].after */
extern T1 T1588f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].start */
extern void T1254f46(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_start */
extern void T1254f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_off */
extern T1 T1254f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].off */
extern T1 T1588f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].is_empty */
extern T1 T1254f31(GE_context* ac, T0* C);
/* [detachable] ET_IMPLEMENTATION_CHECKER.resolve_feature_adaptations */
extern void T444f31(GE_context* ac, T0* C);
/* [detachable] ET_IMPLEMENTATION_CHECKER.resolve_inherited_features */
extern void T444f35(GE_context* ac, T0* C, T0* a1);
extern T1 T444f35ot1(T0* a1, T0** a2);
/* [detachable] ET_INHERITED_FEATURE.set_flattened_parent */
extern void T1290f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INHERITED_FEATURE.set_flattened_feature */
extern void T1290f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].found_item */
extern T0* T1254f35(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].found */
extern T1 T1254f24(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].search */
extern void T1254f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].search_position */
extern void T1254f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].hash_position */
extern T6 T1254f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_NAME_TESTER.test */
extern T1 T1255f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].key_storage_item */
extern T0* T1254f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].slots_item */
extern T6 T1254f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1262f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].wipe_out */
extern void T1608f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].slots_wipe_out */
extern void T1608f48(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].clashes_wipe_out */
extern void T1608f47(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1608f46(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_ALIAS_NAME].keep_head */
extern void T1597f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ALIAS_NAME].set_count */
extern void T1597f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1608f45(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].unset_found_item */
extern void T1608f44(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].move_all_cursors_after */
extern void T1608f43(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].set_next_cursor */
extern void T1836f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].set_after */
extern void T1836f7(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.process_replication */
extern void T1262f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].wipe_out */
extern void T1609f45(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].slots_wipe_out */
extern void T1609f57(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].clashes_wipe_out */
extern void T1609f56(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].key_storage_wipe_out */
extern void T1609f55(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].item_storage_wipe_out */
extern void T1609f54(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_REPLICABLE_FEATURE].keep_head */
extern void T1838f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_REPLICABLE_FEATURE].set_count */
extern void T1838f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].unset_found_item */
extern void T1609f53(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].move_all_cursors_after */
extern void T1609f52(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].set_next_cursor */
extern void T1837f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].set_after */
extern void T1837f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].forth */
extern void T1609f44(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].cursor_forth */
extern void T1609f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].add_traversing_cursor */
extern void T1609f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].set_position */
extern void T1837f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].remove_traversing_cursor */
extern void T1609f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].clashes_item */
extern T6 T1609f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.process_replicated_feature */
extern void T1262f37(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vmrc2b_error */
extern void T50f345(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vmrc2b */
extern T0* T742c945(GE_context* ac, T0* a1, T0* a2);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].after */
extern T1 T1845f4(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].forth */
extern void T1845f11(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].cursor_forth */
extern void T1613f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].set_position */
extern void T1845f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1613f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].set_next_cursor */
extern void T1845f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1613f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].item */
extern T0* T1845f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].cursor_item */
extern T0* T1613f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].start */
extern void T1845f10(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].cursor_start */
extern void T1613f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].set_after */
extern void T1845f12(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].is_empty */
extern T1 T1613f9(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].off */
extern T1 T1845f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].before */
extern T1 T1845f8(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].new_cursor */
extern T0* T1613f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].make */
extern T0* T1845c9(GE_context* ac, T0* a1);
/* [detachable] ET_VALIDITY_ERROR.ast_position */
extern T0* T742f88(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].first */
extern T0* T1613f7(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T50f85(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vmrc2b_error */
extern void T34f345(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T34f85(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REDECLARED_FEATURE.selected_feature */
extern T0* T1497f17(GE_context* ac, T0* C);
/* detachable ET_PARENT_FEATURE.has_select */
extern T1 T1289f22(GE_context* ac, T0* C);
/* [detachable] ET_INHERITED_FEATURE.selected_feature */
extern T0* T1290f18(GE_context* ac, T0* C);
/* [detachable] ET_REDECLARED_FEATURE.add_replicated_feature */
extern void T1497f33(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].force_last */
extern void T1623f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] ET_PARENT_FEATURE].put_right */
extern void T1996f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] ET_PARENT_FEATURE].make */
extern T0* T1996c3(GE_context* ac, T0* a1);
/* detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].make */
extern T0* T1623c7(GE_context* ac);
/* detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].set_internal_cursor */
extern void T1623f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INHERITED_FEATURE.add_replicated_feature */
extern void T1290f37(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PARENT_FEATURE.has_seed */
extern T1 T1289f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_REDECLARED_FEATURE.set_selected */
extern void T1497f35(GE_context* ac, T0* C);
/* [detachable] ET_INHERITED_FEATURE.set_selected */
extern void T1290f39(GE_context* ac, T0* C);
/* [detachable] ET_REDECLARED_FEATURE.set_replicated */
extern void T1497f34(GE_context* ac, T0* C, T6 a1);
/* detachable ET_FEATURE_IDS.put */
extern void T586f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_ARRAY_ROUTINES [[attached] INTEGER_32].resize_with_default */
extern void T865f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [detachable] ARRAY [[attached] INTEGER_32].conservative_resize_with_default */
extern void T283f18(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* detachable ET_FEATURE_IDS.integer_array_ */
extern T0* T586f5(GE_context* ac, T0* C);
/* detachable ET_FEATURE_IDS.has */
extern T1 T586f7(GE_context* ac, T0* C, T6 a1);
/* detachable ET_FEATURE_IDS.make */
extern T0* T586c9(GE_context* ac, T6 a1);
/* [detachable] ET_INHERITED_FEATURE.set_replicated */
extern void T1290f38(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_REDECLARED_FEATURE.has_selected_feature */
extern T1 T1497f18(GE_context* ac, T0* C);
/* [detachable] ET_INHERITED_FEATURE.has_selected_feature */
extern T1 T1290f19(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vmrc2a_error */
extern void T50f344(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vmrc2a */
extern T0* T742c944(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_vmrc2a_error */
extern void T34f344(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1262f20(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1262f30(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].forth */
extern void T1612f16(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].cursor_forth */
extern void T1612f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].add_traversing_cursor */
extern void T1612f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE].set_next_cursor */
extern void T1841f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].remove_traversing_cursor */
extern void T1612f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE].set */
extern void T1841f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].put_last */
extern void T1613f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_FEATURE].force */
extern void T1843f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_PARENT_FEATURE].fill_with */
extern void T1844f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_PARENT_FEATURE].extend */
extern void T1844f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REDECLARED_FEATURE.seeded_feature */
extern T0* T1497f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_INHERITED_FEATURE.seeded_feature */
extern T0* T1290f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].item_for_iteration */
extern T0* T1612f7(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].cursor_item */
extern T0* T1612f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].after */
extern T1 T1612f6(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].cursor_after */
extern T1 T1612f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].start */
extern void T1612f15(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].cursor_start */
extern void T1612f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].cursor_off */
extern T1 T1612f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE].off */
extern T1 T1841f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].make */
extern T0* T1613c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].set_internal_cursor */
extern void T1613f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_FEATURE].make */
extern T0* T1843f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_PARENT_FEATURE].make_empty */
extern T0* T1844c4(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_FEATURE].default_create */
extern T0* T1843c2(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].key_for_iteration */
extern T6 T1609f33(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].cursor_key */
extern T6 T1609f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].key_storage_item */
extern T6 T1609f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].item_for_iteration */
extern T0* T1609f26(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].cursor_item */
extern T0* T1609f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].item_storage_item */
extern T0* T1609f31(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].after */
extern T1 T1609f36(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].cursor_after */
extern T1 T1609f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].after */
extern T1 T1837f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].start */
extern void T1609f43(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].cursor_start */
extern void T1609f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].cursor_off */
extern T1 T1609f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].off */
extern T1 T1837f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].is_empty */
extern T1 T1609f28(GE_context* ac, T0* C);
/* detachable ET_FEATURE_IDS.item */
extern T6 T586f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.record_replicable_feature */
extern void T1262f36(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].force_new */
extern void T1609f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].key_storage_put */
extern void T1609f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].item_storage_put */
extern void T1609f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE].force */
extern void T1840f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_REPLICABLE_FEATURE].fill_with */
extern void T1838f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_REPLICABLE_FEATURE].extend */
extern void T1838f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].slots_put */
extern void T1609f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].clashes_put */
extern void T1609f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].slots_item */
extern T6 T1609f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].hash_position */
extern T6 T1609f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].resize */
extern void T1609f60(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].clashes_resize */
extern void T1609f70(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].special_integer_ */
extern T0* T1609f40(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].key_storage_resize */
extern void T1609f69(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].item_storage_resize */
extern void T1609f68(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T1840f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T1838f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].slots_resize */
extern void T1609f67(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].new_modulus */
extern T6 T1609f37(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].new_capacity */
extern T6 T1609f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].replace_found_item */
extern void T1609f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REPLICATED_FEATURE.make */
extern T0* T1611c6(GE_context* ac, T0* a1, T0* a2);
/* [detachable] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].make */
extern T0* T1612c12(GE_context* ac);
/* [detachable] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].set_internal_cursor */
extern void T1612f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].new_cursor */
extern T0* T1612f5(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE].make */
extern T0* T1841c7(GE_context* ac, T0* a1);
/* [detachable] ET_REPLICATED_FEATURE.put_feature */
extern void T1611f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].force_last */
extern void T1612f13(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] ET_ADAPTED_FEATURE].put_right */
extern void T1842f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] ET_ADAPTED_FEATURE].make */
extern T0* T1842c3(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].found_item */
extern T0* T1609f35(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].found */
extern T1 T1609f34(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].search */
extern void T1609f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].search_position */
extern void T1609f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1262f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vmss1a_error */
extern void T50f337(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vmss1a */
extern T0* T742c937(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T50f78(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vmss1a_error */
extern void T34f337(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T34f78(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrs1a_error */
extern void T50f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdrs1a */
extern T0* T742c936(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T50f77(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vdrs1a_error */
extern void T34f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T34f77(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].wipe_out */
extern void T1607f49(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].slots_wipe_out */
extern void T1607f62(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].clashes_wipe_out */
extern void T1607f61(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].key_storage_wipe_out */
extern void T1607f60(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_CALL_NAME].keep_head */
extern void T1632f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_CALL_NAME].set_count */
extern void T1632f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].item_storage_wipe_out */
extern void T1607f59(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].unset_found_item */
extern void T1607f58(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].move_all_cursors_after */
extern void T1607f57(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME].set_next_cursor */
extern void T1833f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME].set_after */
extern void T1833f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].forth */
extern void T1607f48(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].cursor_forth */
extern void T1607f56(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].add_traversing_cursor */
extern void T1607f72(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME].set_position */
extern void T1833f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].remove_traversing_cursor */
extern void T1607f71(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].clashes_item */
extern T6 T1607f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdus1a_error */
extern void T50f335(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdus1a */
extern T0* T742c935(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T50f76(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vdus1a_error */
extern void T34f335(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T34f76(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].key_for_iteration */
extern T0* T1607f40(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].cursor_key */
extern T0* T1607f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].key_storage_item */
extern T0* T1607f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].item_for_iteration */
extern T1 T1607f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].cursor_item */
extern T1 T1607f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].item_storage_item */
extern T1 T1607f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].after */
extern T1 T1607f37(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].cursor_after */
extern T1 T1607f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME].after */
extern T1 T1833f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].start */
extern void T1607f47(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].cursor_start */
extern void T1607f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].cursor_off */
extern T1 T1607f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME].off */
extern T1 T1833f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].is_empty */
extern T1 T1607f35(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].wipe_out */
extern void T1606f43(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].slots_wipe_out */
extern void T1606f60(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].clashes_wipe_out */
extern void T1606f59(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].key_storage_wipe_out */
extern void T1606f58(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].item_storage_wipe_out */
extern void T1606f57(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].unset_found_item */
extern void T1606f50(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].move_all_cursors_after */
extern void T1606f56(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME].set_next_cursor */
extern void T1832f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME].set_after */
extern void T1832f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].forth */
extern void T1606f42(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].cursor_forth */
extern void T1606f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].add_traversing_cursor */
extern void T1606f74(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME].set_position */
extern void T1832f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].remove_traversing_cursor */
extern void T1606f73(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].clashes_item */
extern T6 T1606f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vlel2a_error */
extern void T50f334(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vlel2a */
extern T0* T742c934(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T50f75(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vlel2a_error */
extern void T34f334(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T34f75(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].item_for_iteration */
extern T0* T1606f31(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].cursor_item */
extern T0* T1606f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].item_storage_item */
extern T0* T1606f19(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].after */
extern T1 T1606f30(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].cursor_after */
extern T1 T1606f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME].after */
extern T1 T1832f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].start */
extern void T1606f41(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].cursor_start */
extern void T1606f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].cursor_off */
extern T1 T1606f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME].off */
extern T1 T1832f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].wipe_out */
extern void T1276f44(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].slots_wipe_out */
extern void T1276f58(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].clashes_wipe_out */
extern void T1276f57(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].key_storage_wipe_out */
extern void T1276f56(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].item_storage_wipe_out */
extern void T1276f55(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_RENAME].keep_head */
extern void T1631f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_RENAME].set_count */
extern void T1631f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].unset_found_item */
extern void T1276f54(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].move_all_cursors_after */
extern void T1276f53(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME].set_next_cursor */
extern void T1630f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME].set_after */
extern void T1630f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].forth */
extern void T1276f50(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].cursor_forth */
extern void T1276f69(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].add_traversing_cursor */
extern void T1276f76(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME].set_position */
extern void T1630f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].remove_traversing_cursor */
extern void T1276f75(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].clashes_item */
extern T6 T1276f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vhrc1a_error */
extern void T50f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vhrc1a */
extern T0* T742c933(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T50f74(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vhrc1a_error */
extern void T34f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T34f74(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].item_for_iteration */
extern T0* T1276f41(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].cursor_item */
extern T0* T1276f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].item_storage_item */
extern T0* T1276f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].after */
extern T1 T1276f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].cursor_after */
extern T1 T1276f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME].after */
extern T1 T1630f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].start */
extern void T1276f49(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].cursor_start */
extern void T1276f68(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].cursor_off */
extern T1 T1276f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME].off */
extern T1 T1630f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].force_last_new */
extern void T1608f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].key_storage_put */
extern void T1608f53(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ALIAS_NAME].force */
extern void T1596f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ALIAS_NAME].fill_with */
extern void T1597f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ALIAS_NAME].extend */
extern void T1597f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].item_storage_put */
extern void T1608f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME].force */
extern void T1594f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_FEATURE_NAME].fill_with */
extern void T1592f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_FEATURE_NAME].extend */
extern void T1592f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].slots_put */
extern void T1608f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].clashes_put */
extern void T1608f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].slots_item */
extern T6 T1608f35(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].hash_position */
extern T6 T1608f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].resize */
extern void T1608f49(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].clashes_resize */
extern void T1608f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].special_integer_ */
extern T0* T1608f34(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].key_storage_resize */
extern void T1608f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ALIAS_NAME].aliased_resized_area */
extern T0* T1596f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ALIAS_NAME].aliased_resized_area */
extern T0* T1597f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].item_storage_resize */
extern void T1608f56(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1594f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1592f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].key_storage_item */
extern T0* T1608f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].clashes_item */
extern T6 T1608f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].slots_resize */
extern void T1608f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].new_modulus */
extern T6 T1608f30(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].new_capacity */
extern T6 T1608f31(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].has */
extern T1 T1608f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].search_position */
extern void T1608f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ALIAS_NAME_TESTER.test */
extern T1 T1258f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].put_last_new */
extern void T1254f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].key_storage_put */
extern void T1254f86(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item_storage_put */
extern void T1254f85(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE].force */
extern void T1593f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_FLATTENED_FEATURE].fill_with */
extern void T1589f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_FLATTENED_FEATURE].extend */
extern void T1589f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].slots_put */
extern void T1254f79(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].clashes_put */
extern void T1254f80(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].compress */
extern void T1254f84(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].key_storage_keep_head */
extern void T1254f89(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item_storage_keep_head */
extern void T1254f88(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].move_all_cursors */
extern void T1254f87(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1262f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INHERITED_FEATURE.set_next */
extern void T1290f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INHERITED_FEATURE.make */
extern T0* T1290c29(GE_context* ac, T0* a1);
/* detachable ET_PARENT_FEATURE.other_seeds */
extern T0* T1289f12(GE_context* ac, T0* C);
/* detachable ET_PARENT_FEATURE.first_seed */
extern T6 T1289f11(GE_context* ac, T0* C);
/* [detachable] ET_INHERITED_FEATURE.reset */
extern void T1290f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REDECLARED_FEATURE.put_parent_feature */
extern void T1497f30(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FEATURE_IDS.cloned_object */
extern T0* T586f4(GE_context* ac, T0* C);
/* detachable ET_FEATURE_IDS.twin */
extern T0* T586f3(GE_context* ac, T0* C);
/* detachable ET_FEATURE_IDS.copy */
extern void T586f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_ARRAY_ROUTINES [[attached] INTEGER_32].cloned_array */
extern T0* T865f1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ARRAY [[attached] INTEGER_32].twin */
extern T0* T283f9(GE_context* ac, T0* C);
/* [detachable] ARRAY [[attached] INTEGER_32].copy */
extern void T283f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] SPECIAL [[attached] INTEGER_32].twin */
extern T0* T125f7(GE_context* ac, T0* C);
/* [detachable] ET_REDECLARED_FEATURE.has_seed */
extern T1 T1497f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_REDECLARED_FEATURE.is_other_seeds_shared */
extern T1 T1497f20(GE_context* ac, T0* C);
/* detachable ET_PARENT_FEATURE.set_merged_feature */
extern void T1289f33(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PARENT_FEATURE.set_has_other_effective */
extern void T1289f32(GE_context* ac, T0* C, T1 a1);
/* detachable ET_PARENT_FEATURE.set_has_other_deferred */
extern void T1289f31(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_INHERITED_FEATURE.put_parent_feature */
extern void T1290f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INHERITED_FEATURE.has_seed */
extern T1 T1290f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_INHERITED_FEATURE.is_other_seeds_shared */
extern T1 T1290f21(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].replace_found_item */
extern void T1254f76(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1262f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_REDECLARED_FEATURE.set_next */
extern void T1497f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REDECLARED_FEATURE.make */
extern T0* T1497c27(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_REDECLARED_FEATURE.reset */
extern void T1497f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].found_item */
extern T0* T1608f21(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].item_storage_item */
extern T0* T1608f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].found_key */
extern T0* T1608f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].found */
extern T1 T1608f26(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].search */
extern void T1608f40(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PARENT_FEATURE.set_select_name */
extern void T1289f28(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PARENT_FEATURE.set_redefine_name */
extern void T1289f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].replace_found_item */
extern void T1607f46(GE_context* ac, T0* C, T1 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].item_storage_put */
extern void T1607f54(GE_context* ac, T0* C, T1 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].found_item */
extern T1 T1607f25(GE_context* ac, T0* C);
/* detachable ET_PARENT_FEATURE.set_undefine_name */
extern void T1289f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].found_key */
extern T0* T1607f21(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].found */
extern T1 T1607f42(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].search */
extern void T1607f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].search_position */
extern void T1607f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].hash_position */
extern T6 T1607f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CALL_NAME_TESTER.test */
extern T1 T1277f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].slots_item */
extern T6 T1607f29(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].remove_found_item */
extern void T1606f40(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].remove_position */
extern void T1606f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].key_storage_put */
extern void T1606f72(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].item_storage_put */
extern void T1606f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME].force */
extern void T1636f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CALL_NAME].fill_with */
extern void T1632f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CALL_NAME].extend */
extern void T1632f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].key_storage_keep_head */
extern void T1606f71(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].item_storage_keep_head */
extern void T1606f70(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].clashes_put */
extern void T1606f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].slots_put */
extern void T1606f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].move_cursors_forth */
extern void T1606f69(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].search_position */
extern void T1606f52(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].internal_set_key_equality_tester */
extern void T1606f68(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].key_equality_tester */
extern T0* T1606f33(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].slots_item */
extern T6 T1606f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].hash_position */
extern T6 T1606f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].key_storage_item */
extern T0* T1606f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].found_item */
extern T0* T1606f21(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].found */
extern T1 T1606f17(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].search */
extern void T1606f39(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PARENT_FEATURE.set_new_name */
extern void T1289f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].remove_found_item */
extern void T1276f48(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].remove_position */
extern void T1276f67(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].key_storage_put */
extern void T1276f66(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].item_storage_put */
extern void T1276f65(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_RENAME].force */
extern void T1635f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_RENAME].fill_with */
extern void T1631f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_RENAME].extend */
extern void T1631f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].key_storage_keep_head */
extern void T1276f74(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].item_storage_keep_head */
extern void T1276f73(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].clashes_put */
extern void T1276f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].slots_put */
extern void T1276f60(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].move_cursors_forth */
extern void T1276f72(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].search_position */
extern void T1276f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].internal_set_key_equality_tester */
extern void T1276f71(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].slots_item */
extern T6 T1276f29(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].hash_position */
extern T6 T1276f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].key_storage_item */
extern T0* T1276f31(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].found_item */
extern T0* T1276f25(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].found */
extern T1 T1276f21(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.current_system */
extern T0* T1262f21(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].search */
extern void T1276f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1262f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_PARENT_FEATURE.set_next */
extern void T1289f30(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PARENT_FEATURE.make */
extern T0* T1289c24(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_PARENT_FEATURE.reset */
extern void T1289f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].resize */
extern void T1254f74(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].clashes_resize */
extern void T1254f83(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].special_integer_ */
extern T0* T1254f43(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].key_storage_resize */
extern void T1254f82(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item_storage_resize */
extern void T1254f81(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1593f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1589f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].slots_resize */
extern void T1254f78(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].new_modulus */
extern T6 T1254f37(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.fill_select_table */
extern void T1262f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vmss2a_error */
extern void T50f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vmss2a */
extern T0* T742c943(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T50f84(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vmss2a_error */
extern void T34f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T34f84(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].put_new */
extern void T1607f51(GE_context* ac, T0* C, T1 a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].key_storage_put */
extern void T1607f69(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].slots_put */
extern void T1607f64(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].clashes_put */
extern void T1607f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable ET_KEYWORD_FEATURE_NAME_LIST.feature_name */
extern T0* T556f6(GE_context* ac, T0* C, T6 a1);
/* detachable ET_KEYWORD_FEATURE_NAME_LIST.item */
extern T0* T556f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].resize */
extern void T1607f50(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].clashes_resize */
extern void T1607f68(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].special_integer_ */
extern T0* T1607f39(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].key_storage_resize */
extern void T1607f67(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME].aliased_resized_area */
extern T0* T1636f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_CALL_NAME].aliased_resized_area */
extern T0* T1632f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].item_storage_resize */
extern void T1607f66(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].slots_resize */
extern void T1607f63(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].new_modulus */
extern T6 T1607f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.fill_redefine_table */
extern void T1262f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrs3a_error */
extern void T50f342(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vdrs3a */
extern T0* T742c942(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T50f83(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vdrs3a_error */
extern void T34f342(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T34f83(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.fill_undefine_table */
extern void T1262f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdus4a_error */
extern void T50f341(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vdus4a */
extern T0* T742c941(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T50f82(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vdus4a_error */
extern void T34f341(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T34f82(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].is_empty */
extern T1 T1606f32(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.fill_export_table */
extern void T1262f32(GE_context* ac, T0* C, T0* a1);
extern T1 T1262f32ot1(T0* a1, T0** a2);
extern T1 T1262f32ot2(T0* a1, T0** a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vlel3a_error */
extern void T50f340(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vlel3a */
extern T0* T742c940(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T50f81(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vlel3a_error */
extern void T34f340(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T34f81(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].put_new */
extern void T1606f45(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FEATURE_EXPORT.feature_name */
extern T0* T1105f5(GE_context* ac, T0* C, T6 a1);
/* detachable ET_FEATURE_EXPORT.item */
extern T0* T1105f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].resize */
extern void T1606f44(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].clashes_resize */
extern void T1606f66(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].special_integer_ */
extern T0* T1606f35(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].key_storage_resize */
extern void T1606f65(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].item_storage_resize */
extern void T1606f64(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].slots_resize */
extern void T1606f61(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].new_modulus */
extern T6 T1606f36(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vlel1a_error */
extern void T50f339(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vlel1a */
extern T0* T742c939(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T50f80(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vlel1a_error */
extern void T34f339(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T34f80(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXPORT_LIST.item */
extern T0* T555f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].is_empty */
extern T1 T1276f37(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.fill_rename_table */
extern void T1262f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vhrc2a_error */
extern void T50f338(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vhrc2a */
extern T0* T742c938(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T50f79(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vhrc2a_error */
extern void T34f338(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T34f79(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].put_new */
extern void T1276f47(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_RENAME_LIST.rename_pair */
extern T0* T554f6(GE_context* ac, T0* C, T6 a1);
/* detachable ET_RENAME_LIST.item */
extern T0* T554f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].resize */
extern void T1276f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].clashes_resize */
extern void T1276f64(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].special_integer_ */
extern T0* T1276f36(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].key_storage_resize */
extern void T1276f63(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].item_storage_resize */
extern void T1276f62(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_RENAME].aliased_resized_area */
extern T0* T1635f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_RENAME].aliased_resized_area */
extern T0* T1631f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].slots_resize */
extern void T1276f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].new_modulus */
extern T6 T1276f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1262f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vmfn0a_error */
extern void T50f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vmfn0a */
extern T0* T742c932(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T50f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vmfn0a_error */
extern void T34f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T34f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1263f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].wipe_out */
extern void T1617f36(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1617f45(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1617f44(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1617f43(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_DOTNET_FEATURE].keep_head */
extern void T1846f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_DOTNET_FEATURE].set_count */
extern void T1846f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1617f42(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].keep_head */
extern void T1849f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].set_count */
extern void T1849f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].unset_found_item */
extern void T1617f41(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1617f40(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].set_next_cursor */
extern void T1852f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].set_after */
extern void T1852f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].wipe_out */
extern void T1615f33(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1615f47(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1615f46(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1615f45(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1615f44(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].unset_found_item */
extern void T1615f41(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1615f43(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_FEATURE].set_next_cursor */
extern void T1847f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_FEATURE].set_after */
extern void T1847f7(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_any_features */
extern void T1263f23(GE_context* ac, T0* C, T0* a1);
extern T1 T1263f23ot1(T0* a1, T0** a2);
extern T1 T1263f23ot2(T0* a1, T0** a2);
/* [detachable] ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1263f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_RENAME.make */
extern T0* T1282c6(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.as_keyword */
extern T0* T71f708(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_as */
extern T0* T402c67(GE_context* ac);
/* [detachable] ET_RENAME.tokens */
extern T0* T1282f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].has */
extern T1 T1254f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1263f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_system */
extern T0* T1263f15(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_universe */
extern T0* T1263f13(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features_from_parents */
extern void T1263f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1263f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1263f14(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1263f25(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].forth */
extern void T1619f15(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].cursor_forth */
extern void T1619f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].add_traversing_cursor */
extern void T1619f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE].set_next_cursor */
extern void T1854f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].remove_traversing_cursor */
extern void T1619f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE].set */
extern void T1854f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [detachable] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].item_for_iteration */
extern T0* T1619f7(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].cursor_item */
extern T0* T1619f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].after */
extern T1 T1619f6(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].cursor_after */
extern T1 T1619f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].start */
extern void T1619f14(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].cursor_start */
extern void T1619f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].cursor_off */
extern T1 T1619f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE].off */
extern T1 T1854f6(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].found_item */
extern T0* T1617f24(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1617f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].found */
extern T1 T1617f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].search */
extern void T1617f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].search_position */
extern void T1617f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].hash_position */
extern T6 T1617f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_SIGNATURE_TESTER.test */
extern T1 T1614f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1617f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].clashes_item */
extern T6 T1617f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].slots_item */
extern T6 T1617f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_feature */
extern void T1263f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1263f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].found_item */
extern T0* T1615f24(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1615f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].found */
extern T1 T1615f26(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].search */
extern void T1615f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].search_position */
extern void T1615f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].hash_position */
extern T6 T1615f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1615f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].clashes_item */
extern T6 T1615f30(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].key_equality_tester */
extern T0* T1615f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].slots_item */
extern T6 T1615f20(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1263f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_feature */
extern void T1263f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].force_last */
extern void T1615f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].slots_put */
extern void T1615f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].clashes_put */
extern void T1615f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].new_capacity */
extern T6 T1615f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].item_storage_put */
extern void T1615f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE].force */
extern void T1848f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DOTNET_FEATURE].fill_with */
extern void T1846f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DOTNET_FEATURE].extend */
extern void T1846f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].force_last_new */
extern void T1617f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].key_storage_put */
extern void T1617f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].item_storage_put */
extern void T1617f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].force */
extern void T1853f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].fill_with */
extern void T1849f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].extend */
extern void T1849f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].slots_put */
extern void T1617f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].clashes_put */
extern void T1617f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].resize */
extern void T1617f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].clashes_resize */
extern void T1617f56(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1617f32(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].key_storage_resize */
extern void T1617f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T1848f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T1846f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].item_storage_resize */
extern void T1617f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T1853f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T1849f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].slots_resize */
extern void T1617f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].new_modulus */
extern T6 T1617f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].new_capacity */
extern T6 T1617f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].make */
extern T0* T1619c11(GE_context* ac);
/* [detachable] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1619f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].new_cursor */
extern T0* T1619f5(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE].make */
extern T0* T1854c7(GE_context* ac, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].force_last */
extern void T1619f12(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] ET_DOTNET_FEATURE].put_right */
extern void T1855f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] ET_DOTNET_FEATURE].make */
extern T0* T1855c3(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].force_last_new */
extern void T1254f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].new_capacity */
extern T6 T1254f42(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].resize */
extern void T1615f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].clashes_resize */
extern void T1615f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1615f27(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].key_storage_resize */
extern void T1615f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].item_storage_resize */
extern void T1615f51(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].slots_resize */
extern void T1615f48(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].new_modulus */
extern T6 T1615f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_IMPLEMENTATION_CHECKER.check_parents_validity */
extern void T444f27(GE_context* ac, T0* C);
/* [detachable] ET_PARENT_CHECKER3.check_parents_validity */
extern void T1283f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_compilation_status */
extern void T50f204(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_compilation_status */
extern void T34f204(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_SYSTEM_PROCESSOR.report_class_postponed */
extern void T61f108(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.report_class_postponed */
extern void T364f112(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IMPLEMENTATION_CHECKER.process_parent_class */
extern void T444f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.set_checking_implementation */
extern void T72f271(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_CLASS.interface_checked_successfully */
extern T1 T72f110(GE_context* ac, T0* C);
/* [detachable] MUTEX.try_lock */
extern T1 T132f7(GE_context* ac, T0* C);
/* [detachable] MUTEX.eif_thr_mutex_trylock */
extern T1 T132f8(GE_context* ac, T0* C, T14 a1);
/* [detachable] ET_IMPLEMENTATION_CHECKER.set_fatal_error */
extern void T444f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IMPLEMENTATION_CHECKER.make */
extern T0* T444c19(GE_context* ac, T0* a1);
/* [detachable] ET_IMPLEMENTATION_CHECKER.make_with_feature_checker */
extern void T444f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SUPPLIER_BUILDER.make */
extern T0* T1286c5(GE_context* ac);
/* [detachable] ET_SUPPLIER_BUILDER.dummy_suppliers */
extern T0* T1286f4(GE_context* ac, T0* C);
/* [detachable] ET_SUPPLIER_BUILDER.tokens */
extern T0* T1286f3(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].make */
extern T0* T1285c35(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].set_internal_cursor */
extern void T1285f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].new_cursor */
extern T0* T1285f33(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_QUERY].make */
extern T0* T1640c8(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].make_slots */
extern void T1285f42(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].new_modulus */
extern T6 T1285f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].make_clashes */
extern void T1285f41(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].make_key_storage */
extern void T1285f40(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].make_item_storage */
extern void T1285f39(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].make */
extern T0* T1284c35(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].set_internal_cursor */
extern void T1284f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].new_cursor */
extern T0* T1284f33(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE].make */
extern T0* T1639c8(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].make_slots */
extern void T1284f42(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].new_modulus */
extern T6 T1284f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].make_clashes */
extern void T1284f41(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].make_key_storage */
extern void T1284f40(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].make_item_storage */
extern void T1284f39(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_PARENT_CHECKER3.make */
extern T0* T1283c6(GE_context* ac, T0* a1);
/* [detachable] ET_PARENT_CHECKER3.make */
extern void T1283f6p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER3.tokens */
extern T0* T1283f4(GE_context* ac, T0* C);
/* [detachable] ET_SIGNATURE_CHECKER.make */
extern T0* T1267c10(GE_context* ac, T0* a1);
/* [detachable] ET_SIGNATURE_CHECKER.make */
extern void T1267f10p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1263c19(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].set_key_equality_tester */
extern void T1617f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_map */
extern T0* T1617c34(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_with_equality_testers */
extern void T1617f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_sparse_container */
extern void T1617f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1617f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].new_cursor */
extern T0* T1617f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make */
extern T0* T1852c6(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_slots */
extern void T1617f60(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_clashes */
extern void T1617f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_key_storage */
extern void T1617f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE].make */
extern T0* T1848f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_DOTNET_FEATURE].make_empty */
extern T0* T1846c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE].default_create */
extern T0* T1848c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_item_storage */
extern void T1617f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].make */
extern T0* T1853f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].make_empty */
extern T0* T1849c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].default_create */
extern T0* T1853c3(GE_context* ac);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].set_equality_tester */
extern void T1615f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_SIGNATURE_TESTER.make */
extern T0* T1614c2(GE_context* ac);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].make */
extern T0* T1615c31(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1615f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].new_cursor */
extern T0* T1615f25(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_FEATURE].make */
extern T0* T1847c6(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].make_slots */
extern void T1615f40(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].make_clashes */
extern void T1615f39(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].make_key_storage */
extern void T1615f38(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].make_item_storage */
extern void T1615f37(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1263f19p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1263f12(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1262c25(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_map */
extern T0* T1609c42(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_with_equality_testers */
extern void T1609f49(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_sparse_container */
extern void T1609f64(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].set_internal_cursor */
extern void T1609f75(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].new_cursor */
extern T0* T1609f39(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make */
extern T0* T1837c8(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_slots */
extern void T1609f74(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_clashes */
extern void T1609f73(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_key_storage */
extern void T1609f72(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_item_storage */
extern void T1609f71(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE].make */
extern T0* T1840f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_REPLICABLE_FEATURE].make_empty */
extern T0* T1838c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE].default_create */
extern T0* T1840c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].set_key_equality_tester */
extern void T1608f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.alias_name_tester */
extern T0* T1262f17(GE_context* ac, T0* C);
/* [detachable] ET_ALIAS_NAME_TESTER.default_create */
extern T0* T1258c2(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_map */
extern T0* T1608c36(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_with_equality_testers */
extern void T1608f42(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_sparse_container */
extern void T1608f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].set_internal_cursor */
extern void T1608f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].new_cursor */
extern T0* T1608f33(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make */
extern T0* T1836c6(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_slots */
extern void T1608f62(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_clashes */
extern void T1608f61(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_key_storage */
extern void T1608f60(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ALIAS_NAME].make */
extern T0* T1596f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ALIAS_NAME].make_empty */
extern T0* T1597c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ALIAS_NAME].default_create */
extern T0* T1596c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_item_storage */
extern void T1608f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME].make */
extern T0* T1594f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_FEATURE_NAME].make_empty */
extern T0* T1592c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME].default_create */
extern T0* T1594c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].set_key_equality_tester */
extern void T1607f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_map */
extern T0* T1607c43(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_with_equality_testers */
extern void T1607f52(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_sparse_container */
extern void T1607f70(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].set_internal_cursor */
extern void T1607f77(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].new_cursor */
extern T0* T1607f41(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME].make */
extern T0* T1833c8(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_slots */
extern void T1607f76(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_clashes */
extern void T1607f75(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_key_storage */
extern void T1607f74(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME].make */
extern T0* T1636f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_CALL_NAME].make_empty */
extern T0* T1632c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME].default_create */
extern T0* T1636c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_item_storage */
extern void T1607f73(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].set_equality_tester */
extern void T1606f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].make */
extern T0* T1606c37(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].set_internal_cursor */
extern void T1606f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].new_cursor */
extern T0* T1606f20(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME].make */
extern T0* T1832c8(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].make_slots */
extern void T1606f49(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].make_clashes */
extern void T1606f48(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].make_key_storage */
extern void T1606f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CALL_NAME].make_item_storage */
extern void T1606f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].set_key_equality_tester */
extern void T1276f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.call_name_tester */
extern T0* T1262f19(GE_context* ac, T0* C);
/* [detachable] ET_CALL_NAME_TESTER.default_create */
extern T0* T1277c2(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_map */
extern T0* T1276c42(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_with_equality_testers */
extern void T1276f52(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_sparse_container */
extern void T1276f70(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].set_internal_cursor */
extern void T1276f81(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].new_cursor */
extern T0* T1276f40(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME].make */
extern T0* T1630c8(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_slots */
extern void T1276f80(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_clashes */
extern void T1276f79(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_key_storage */
extern void T1276f78(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_item_storage */
extern void T1276f77(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_RENAME].make */
extern T0* T1635f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_RENAME].make_empty */
extern T0* T1631c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_RENAME].default_create */
extern T0* T1635c3(GE_context* ac);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1262f25p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1262f18(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].set_key_equality_tester */
extern void T1254f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IMPLEMENTATION_CHECKER.feature_name_tester */
extern T0* T444f14(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_NAME_TESTER.default_create */
extern T0* T1255c2(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_map */
extern T0* T1254c44(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_with_equality_testers */
extern void T1254f54(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_sparse_container */
extern void T1254f66(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].set_internal_cursor */
extern void T1254f73(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].new_cursor */
extern T0* T1254f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make */
extern T0* T1588c9(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_slots */
extern void T1254f72(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_clashes */
extern void T1254f71(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_key_storage */
extern void T1254f70(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_item_storage */
extern void T1254f69(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE].make */
extern T0* T1593f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_FLATTENED_FEATURE].make_empty */
extern T0* T1589c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE].default_create */
extern T0* T1593c3(GE_context* ac);
/* [detachable] ET_IMPLEMENTATION_CHECKER.make_class_processor */
extern void T444f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IMPLEMENTATION_CHECKER.tokens */
extern T0* T444f16(GE_context* ac, T0* C);
/* [detachable] ET_IMPLEMENTATION_CHECKER.error_handler */
extern T0* T444f13(GE_context* ac, T0* C);
/* [detachable] ET_IMPLEMENTATION_CHECKER.process_none_class */
extern void T444f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INTERFACE_CHECKER.process_class */
extern void T443f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].remove */
extern void T1273f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].remove_position */
extern void T1273f41(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].key_storage_put */
extern void T1273f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].item_storage_put */
extern void T1273f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].key_storage_keep_head */
extern void T1273f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].item_storage_keep_head */
extern void T1273f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].clashes_put */
extern void T1273f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].slots_put */
extern void T1273f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].clashes_item */
extern T6 T1273f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].move_cursors_forth */
extern void T1273f43(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_CLASS].set_position */
extern void T1628f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_CLASS].set_next_cursor */
extern void T1628f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_CLASS].set_after */
extern void T1628f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].internal_set_key_equality_tester */
extern void T1273f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].key_equality_tester */
extern T0* T1273f24(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].slots_item */
extern T6 T1273f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].hash_position */
extern T6 T1273f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].key_storage_item */
extern T0* T1273f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].item_storage_item */
extern T0* T1273f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].search_position */
extern void T1273f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].unset_found_item */
extern void T1273f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].last */
extern T0* T1273f17(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].is_empty */
extern T1 T1273f28(GE_context* ac, T0* C);
/* [detachable] ET_INTERFACE_CHECKER.internal_process_class */
extern void T443f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INTERFACE_CHECKER.check_constraint_creations_validity */
extern void T443f18(GE_context* ac, T0* C);
/* [detachable] ET_INTERFACE_CHECKER.check_constraint_creation_validity */
extern void T443f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vggc3b_error */
extern void T50f219(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vggc3b */
extern T0* T742c838(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vggc3_error */
extern T1 T50f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vggc3b_error */
extern void T34f219(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vggc3_error */
extern T1 T34f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vggc3a_error */
extern void T50f218(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vggc3a */
extern T0* T742c837(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vggc3a_error */
extern void T34f218(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vggc3c_error */
extern void T50f217(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vggc3c */
extern T0* T742c836(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vggc3c_error */
extern void T34f217(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vggc3d_error */
extern void T50f216(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_VALIDITY_ERROR.make_vggc3d */
extern T0* T742c835(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_ERROR_HANDLER.report_vggc3d_error */
extern void T34f216(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgcp3c_error */
extern void T50f215(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vgcp3c */
extern T0* T742c834(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T50f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vgcp3c_error */
extern void T34f215(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T34f33(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINT_CREATOR.feature_name */
extern T0* T1041f7(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CONSTRAINT_CREATOR.item */
extern T0* T1041f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLASS.features_flattened_successfully */
extern T1 T72f217(GE_context* ac, T0* C);
/* [detachable] ET_INTERFACE_CHECKER.check_constraint_renamings_validity */
extern void T443f17(GE_context* ac, T0* C);
/* [detachable] ET_INTERFACE_CHECKER.check_constraint_renaming_validity */
extern void T443f20(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T443f20ot1(T0* a1, T0** a2);
extern T1 T443f20ot2(T0* a1, T0** a2);
/* [detachable] ET_INTERFACE_CHECKER.check_constraint_not_renamed_names_validity */
extern void T443f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T443f23ot1(T0* a1, T0** a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav3g_error */
extern void T50f239(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_VALIDITY_ERROR.make_vfav3g */
extern T0* T742c858(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vfav3_error */
extern T1 T50f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vfav3g_error */
extern void T34f239(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_ERROR_HANDLER.reportable_vfav3_error */
extern T1 T34f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav2g_error */
extern void T50f238(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_VALIDITY_ERROR.make_vfav2g */
extern T0* T742c857(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T50f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vfav2g_error */
extern void T34f238(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T34f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vggc2f_error */
extern void T50f237(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vggc2f */
extern T0* T742c856(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vggc2_error */
extern T1 T50f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vggc2f_error */
extern void T34f237(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vggc2_error */
extern T1 T34f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav1t_error */
extern void T50f236(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_VALIDITY_ERROR.make_vfav1t */
extern T0* T742c855(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T50f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vfav1t_error */
extern void T34f236(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T34f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav1s_error */
extern void T50f235(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_VALIDITY_ERROR.make_vfav1s */
extern T0* T742c854(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_ERROR_HANDLER.report_vfav1s_error */
extern void T34f235(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].found_key */
extern T0* T1276f33(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].has */
extern T1 T1276f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INTERFACE_CHECKER.check_constraint_renamed_names_validity */
extern void T443f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T443f22ot1(T0* a1, T0** a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav3f_error */
extern void T50f234(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_VALIDITY_ERROR.make_vfav3f */
extern T0* T742c853(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_ERROR_HANDLER.report_vfav3f_error */
extern void T34f234(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav2f_error */
extern void T50f233(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_VALIDITY_ERROR.make_vfav2f */
extern T0* T742c852(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_ERROR_HANDLER.report_vfav2f_error */
extern void T34f233(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vggc2e_error */
extern void T50f232(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vggc2e */
extern T0* T742c851(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.report_vggc2e_error */
extern void T34f232(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav1r_error */
extern void T50f231(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_VALIDITY_ERROR.make_vfav1r */
extern T0* T742c850(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_ERROR_HANDLER.report_vfav1r_error */
extern void T34f231(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav1q_error */
extern void T50f230(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_VALIDITY_ERROR.make_vfav1q */
extern T0* T742c849(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_ERROR_HANDLER.report_vfav1q_error */
extern void T34f230(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav4a_error */
extern void T50f229(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vfav4a */
extern T0* T742c848(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T50f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vfav4a_error */
extern void T34f229(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T34f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav1p_error */
extern void T50f228(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vfav1p */
extern T0* T742c847(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.alias_lower_name */
extern T0* T742f92(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vfav1p_error */
extern void T34f228(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav1n_error */
extern void T50f227(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vfav1n */
extern T0* T742c846(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vfav1n_error */
extern void T34f227(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav1m_error */
extern void T50f226(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vfav1m */
extern T0* T742c845(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vfav1m_error */
extern void T34f226(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav3e_error */
extern void T50f225(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vfav3e */
extern T0* T742c844(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vfav3e_error */
extern void T34f225(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav2e_error */
extern void T50f224(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vfav2e */
extern T0* T742c843(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vfav2e_error */
extern void T34f224(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav1l_error */
extern void T50f223(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vfav1l */
extern T0* T742c842(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vfav1l_error */
extern void T34f223(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav1o_error */
extern void T50f222(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vfav1o */
extern T0* T742c841(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vfav1o_error */
extern void T34f222(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vggc2a_error */
extern void T50f221(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vggc2a */
extern T0* T742c840(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vggc2a_error */
extern void T34f221(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vggc2d_error */
extern void T50f220(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vggc2d */
extern T0* T742c839(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.report_vggc2d_error */
extern void T34f220(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vggc2c_error */
extern void T50f214(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vggc2c */
extern T0* T742c833(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vggc2c_error */
extern void T34f214(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vggc2b_error */
extern void T50f213(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vggc2b */
extern T0* T742c832(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vggc2b_error */
extern void T34f213(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_INTERFACE_CHECKER.resolve_signatures_unfolded_tuple_actual_parameters */
extern void T443f16(GE_context* ac, T0* C);
/* [detachable] ET_INTERFACE_CHECKER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T443f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_type */
extern void T1275f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_INTERFACE_CHECKER.check_qualified_anchored_signatures_validity */
extern void T443f15(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_signatures_validity */
extern void T1274f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.reset_fatal_error */
extern void T1274f16(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_INTERFACE_CHECKER.set_fatal_error */
extern void T443f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INTERFACE_CHECKER.make */
extern T0* T443c11(GE_context* ac, T0* a1);
/* [detachable] ET_INTERFACE_CHECKER.call_name_tester */
extern T0* T443f9(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern T0* T1275c6(GE_context* ac, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern void T1275f6p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.tokens */
extern T0* T1275f4(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.set_classes_to_be_processed */
extern void T1274f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern T0* T1274c13(GE_context* ac, T0* a1);
/* [detachable] ET_ADAPTED_BASE_CLASS_CHECKER.set_feature_flattening_error_only */
extern void T393f10(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern void T1274f13p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1274f11(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].make */
extern T0* T1273c32(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].set_internal_cursor */
extern void T1273f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].new_cursor */
extern T0* T1273f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET_CURSOR [[attached] ET_CLASS].make */
extern T0* T1628c6(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].make_slots */
extern void T1273f37(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].new_modulus */
extern T6 T1273f20(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].make_clashes */
extern void T1273f36(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].make_key_storage */
extern void T1273f35(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].make_item_storage */
extern void T1273f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_INTERFACE_CHECKER.make */
extern void T443f11p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INTERFACE_CHECKER.tokens */
extern T0* T443f8(GE_context* ac, T0* C);
/* [detachable] ET_INTERFACE_CHECKER.error_handler */
extern T0* T443f10(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.set_interface_checked */
extern void T72f268(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_FLATTENER.process_class */
extern void T442f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_FLATTENER.internal_process_class */
extern void T442f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_FLATTENER.flatten_features */
extern void T442f36(GE_context* ac, T0* C);
extern T1 T442f36ot1(T0* a1, T0** a2);
extern T1 T442f36ot2(T0* a1, T0** a2);
/* [detachable] ET_FEATURE_FLATTENER.check_kernel_features_validity */
extern void T442f47(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_iteration_cursor_forth_seed */
extern void T35f203(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_SYSTEM.set_iteration_cursor_forth_seed */
extern void T55f269(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.forth_feature_name */
extern T0* T71f274(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_iteration_cursor_after_seed */
extern void T35f202(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_SYSTEM.set_iteration_cursor_after_seed */
extern void T55f268(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.after_feature_name */
extern T0* T71f273(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_iteration_cursor_class */
extern T1 T72f167(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_iterable_new_cursor_seed */
extern void T35f201(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_SYSTEM.set_iterable_new_cursor_seed */
extern void T55f267(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.new_cursor_feature_name */
extern T0* T71f272(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_iterable_class */
extern T1 T72f166(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_dispose_seed */
extern void T35f200(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_SYSTEM.set_dispose_seed */
extern void T55f266(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.dispose_feature_name */
extern T0* T71f271(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_disposable_class */
extern T1 T72f165(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_function_item_seed */
extern void T35f199(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_SYSTEM.set_function_item_seed */
extern void T55f265(GE_context* ac, T0* C, T6 a1);
/* detachable ET_SYSTEM.set_routine_call_seed */
extern void T35f198(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_SYSTEM.set_routine_call_seed */
extern void T55f264(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.call_feature_name */
extern T0* T71f270(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_routine_class */
extern T1 T72f164(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvkfe5a_error */
extern void T50f305(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_gvkfe5a */
extern T0* T742c905(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T50f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvkfe5a_error */
extern void T34f305(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T34f58(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYSTEM.set_is_equal_seed */
extern void T35f197(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_SYSTEM.set_is_equal_seed */
extern void T55f263(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.is_equal_feature_name */
extern T0* T71f269(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_copy_seed */
extern void T35f196(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_SYSTEM.set_copy_seed */
extern void T55f262(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.copy_feature_name */
extern T0* T71f268(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.set_default_create_seed */
extern void T35f195(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ECF_SYSTEM.set_default_create_seed */
extern void T55f261(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_FLATTENER.current_system */
extern T0* T442f27(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_FLATTENER.tokens */
extern T0* T442f21(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_FLATTENER.check_convert_validity */
extern void T442f46(GE_context* ac, T0* C);
/* detachable ET_CONVERT_FEATURE_LIST.convert_feature */
extern T0* T1056f6(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CONVERT_FEATURE_LIST.item */
extern T0* T1056f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_FLATTENER.check_creators_validity */
extern void T442f45(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgcp2a_error */
extern void T50f304(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vgcp2a */
extern T0* T742c904(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T50f57(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vgcp2a_error */
extern void T34f304(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T34f57(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgcp2b_error */
extern void T50f303(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vgcp2b */
extern T0* T742c903(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vgcp2b_error */
extern void T34f303(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgcc6a_error */
extern void T50f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vgcc6a */
extern T0* T742c902(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T50f56(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vgcc6a_error */
extern void T34f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T34f56(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgcp3b_error */
extern void T50f301(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vgcp3b */
extern T0* T742c901(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vgcp3b_error */
extern void T34f301(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgcp3a_error */
extern void T50f300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vgcp3a */
extern T0* T742c900(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vgcp3a_error */
extern void T34f300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_CREATOR.feature_name */
extern T0* T1064f8(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CREATOR.item */
extern T0* T1064f13(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CREATOR_LIST.item */
extern T0* T1067f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgcp1a_error */
extern void T50f299(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vgcp1a */
extern T0* T742c899(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_CREATOR.position */
extern T0* T1064f7(GE_context* ac, T0* C);
/* detachable ET_CREATOR.first */
extern T0* T1064f12(GE_context* ac, T0* C);
/* detachable ET_CLIENTS.position */
extern T0* T1025f13(GE_context* ac, T0* C);
/* [detachable] ET_CLIENT.position */
extern T0* T391f5(GE_context* ac, T0* C);
/* detachable ET_CLIENTS.first */
extern T0* T1025f16(GE_context* ac, T0* C);
/* detachable ET_CLIENTS.is_empty */
extern T1 T1025f15(GE_context* ac, T0* C);
/* detachable ET_CREATOR.clients_clause */
extern T0* T1064f10(GE_context* ac, T0* C);
extern T1 T1064f10ot1(T0* a1, T0** a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T50f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vgcp1a_error */
extern void T34f299(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T34f55(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CREATOR_LIST.first */
extern T0* T1067f5(GE_context* ac, T0* C);
/* detachable ET_CREATOR_LIST.is_empty */
extern T1 T1067f4(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_FLATTENER.check_assigners_validity */
extern void T442f44(GE_context* ac, T0* C);
extern T1 T442f44ot1(T0* a1, T0** a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfac4a_error */
extern void T50f298(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* [detachable] ET_VALIDITY_ERROR.make_vfac4a */
extern T0* T742c898(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T50f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vfac4a_error */
extern void T34f298(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* [detachable] ET_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T34f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfac3a_error */
extern void T50f297(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vfac3a */
extern T0* T742c897(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T50f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vfac3a_error */
extern void T34f297(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T34f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfac2a_error */
extern void T50f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vfac2a */
extern T0* T742c896(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T50f52(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vfac2a_error */
extern void T34f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T34f52(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfac1b_error */
extern void T50f295(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vfac1b */
extern T0* T742c895(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T50f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vfac1b_error */
extern void T34f295(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T34f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfac1a_error */
extern void T50f294(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vfac1a */
extern T0* T742c894(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vfac1a_error */
extern void T34f294(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vcch2a_error */
extern void T50f290(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_VALIDITY_ERROR.set_ise_reported */
extern void T742f890(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_VALIDITY_ERROR.make_vcch2a */
extern T0* T742c889(GE_context* ac, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T50f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vcch2a_error */
extern void T34f290(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T34f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vcch1a_error */
extern void T50f289(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vcch1a */
extern T0* T742c888(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T50f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vcch1a_error */
extern void T34f289(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T34f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vcch1b_error */
extern void T50f288(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vcch1b */
extern T0* T742c887(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_INHERITED_FEATURE.name */
extern T0* T1290f22(GE_context* ac, T0* C);
/* [detachable] ET_ERROR_HANDLER.report_vcch1b_error */
extern void T34f288(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].go_after */
extern void T1254f52(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_go_after */
extern void T1254f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.set_has_deferred_features */
extern void T72f280(GE_context* ac, T0* C, T1 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].wipe_out */
extern void T1257f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].slots_wipe_out */
extern void T1257f51(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].clashes_wipe_out */
extern void T1257f50(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1257f49(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1257f48(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].unset_found_item */
extern void T1257f41(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].move_all_cursors_after */
extern void T1257f47(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].set_next_cursor */
extern void T1598f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].set_after */
extern void T1598f7(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_FLATTENER.check_signature_validity */
extern void T442f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].force_last_new */
extern void T1257f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].key_storage_put */
extern void T1257f46(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].item_storage_put */
extern void T1257f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].slots_put */
extern void T1257f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].clashes_put */
extern void T1257f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].slots_item */
extern T6 T1257f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].hash_position */
extern T6 T1257f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].resize */
extern void T1257f42(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].clashes_resize */
extern void T1257f56(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].special_integer_ */
extern T0* T1257f32(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].key_storage_resize */
extern void T1257f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].item_storage_resize */
extern void T1257f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].key_storage_item */
extern T0* T1257f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].clashes_item */
extern T6 T1257f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].slots_resize */
extern void T1257f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].new_modulus */
extern T6 T1257f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].new_capacity */
extern T6 T1257f30(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav1f_error */
extern void T50f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vfav1f */
extern T0* T742c886(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vfav1f_error */
extern void T34f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav1c_error */
extern void T50f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vfav1c */
extern T0* T742c885(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vfav1c_error */
extern void T34f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav3b_error */
extern void T50f285(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vfav3b */
extern T0* T742c884(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vfav3b_error */
extern void T34f285(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav2b_error */
extern void T50f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vfav2b */
extern T0* T742c883(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vfav2b_error */
extern void T34f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav1g_error */
extern void T50f283(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vfav1g */
extern T0* T742c882(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* detachable ET_PARENT_FEATURE.alias_name */
extern T0* T1289f20(GE_context* ac, T0* C);
/* [detachable] ET_ERROR_HANDLER.report_vfav1g_error */
extern void T34f283(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav1d_error */
extern void T50f282(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vfav1d */
extern T0* T742c881(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vfav1d_error */
extern void T34f282(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav3c_error */
extern void T50f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vfav3c */
extern T0* T742c880(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vfav3c_error */
extern void T34f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav2c_error */
extern void T50f280(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vfav2c */
extern T0* T742c879(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vfav2c_error */
extern void T34f280(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav1h_error */
extern void T50f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vfav1h */
extern T0* T742c878(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vfav1h_error */
extern void T34f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav1e_error */
extern void T50f278(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vfav1e */
extern T0* T742c877(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vfav1e_error */
extern void T34f278(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav3d_error */
extern void T50f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vfav3d */
extern T0* T742c876(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vfav3d_error */
extern void T34f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav2d_error */
extern void T50f276(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vfav2d */
extern T0* T742c875(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vfav2d_error */
extern void T34f276(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].found_item */
extern T0* T1257f28(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].item_storage_item */
extern T0* T1257f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].found */
extern T1 T1257f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].search */
extern void T1257f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].search_position */
extern void T1257f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.set_redeclared_signatures_checked */
extern void T72f279(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_FEATURE_FLATTENER.check_anchored_signatures */
extern void T442f42(GE_context* ac, T0* C);
/* [detachable] ET_ANCHORED_TYPE_CHECKER.check_signatures */
extern void T1266f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].wipe_out */
extern void T1620f12(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].wipe_out */
extern void T668f19(GE_context* ac, T0* C);
/* [detachable] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].keep_head */
extern void T1349f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].set_count */
extern void T1349f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].wipe_out */
extern void T1856f34(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].slots_wipe_out */
extern void T1856f43(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].clashes_wipe_out */
extern void T1856f42(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].key_storage_wipe_out */
extern void T1856f41(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_LIKE_FEATURE].keep_head */
extern void T1857f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_LIKE_FEATURE].set_count */
extern void T1857f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].item_storage_wipe_out */
extern void T1856f40(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].unset_found_item */
extern void T1856f39(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].move_all_cursors_after */
extern void T1856f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].set_next_cursor */
extern void T1918f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].set_after */
extern void T1918f7(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].wipe_out */
extern void T1621f12(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].move_all_cursors_after */
extern void T1621f14(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].set_next_cursor */
extern void T1859f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].set_after */
extern void T1859f10(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].reset */
extern void T1620f14(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vtat2a_error */
extern void T50f346(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vtat2a */
extern T0* T742c946(GE_context* ac, T0* a1, T0* a2);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].forth */
extern void T1859f14(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].cursor_forth */
extern void T1621f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].set_position */
extern void T1859f15(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].add_traversing_cursor */
extern void T1621f19(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].remove_traversing_cursor */
extern void T1621f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].go_after */
extern void T1859f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].cursor_go_after */
extern void T1621f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].off */
extern T1 T1859f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].before */
extern T1 T1859f8(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].item */
extern T0* T1859f6(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].cursor_item */
extern T0* T1621f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].after */
extern T1 T1859f4(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].start */
extern void T1859f12(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].cursor_start */
extern void T1621f16(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].new_cursor */
extern T0* T1621f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].make */
extern T0* T1859c9(GE_context* ac, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T50f86(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vtat2a_error */
extern void T34f346(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T34f86(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1266f6(GE_context* ac, T0* C);
/* [detachable] ET_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1266f10(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].is_empty */
extern T1 T1621f6(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].sort */
extern void T1620f11(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].put_last */
extern void T1621f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE].force */
extern void T1858f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_LIKE_FEATURE].fill_with */
extern void T1857f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_LIKE_FEATURE].extend */
extern void T1857f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].item */
extern T0* T1621f8(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].make */
extern T0* T1621c10(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].set_internal_cursor */
extern void T1621f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE].make */
extern T0* T1858f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_LIKE_FEATURE].make_empty */
extern T0* T1857c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE].default_create */
extern T0* T1858c3(GE_context* ac);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vffd7b_error */
extern void T50f275(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vffd7b */
extern T0* T742c874(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vffd7_error */
extern T1 T50f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vffd7b_error */
extern void T34f275(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vffd7_error */
extern T1 T34f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vffd7a_error */
extern void T50f274(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vffd7a */
extern T0* T742c873(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_vffd7a_error */
extern void T34f274(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav1k_error */
extern void T50f273(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vfav1k */
extern T0* T742c872(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_vfav1k_error */
extern void T34f273(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav1b_error */
extern void T50f272(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vfav1b */
extern T0* T742c871(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_vfav1b_error */
extern void T34f272(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav1a_error */
extern void T50f271(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vfav1a */
extern T0* T742c870(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_vfav1a_error */
extern void T34f271(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav3a_error */
extern void T50f270(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vfav3a */
extern T0* T742c869(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_vfav3a_error */
extern void T34f270(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav2a_error */
extern void T50f269(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vfav2a */
extern T0* T742c868(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_vfav2a_error */
extern void T34f269(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav1j_error */
extern void T50f268(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vfav1j */
extern T0* T742c867(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_vfav1j_error */
extern void T34f268(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vfav1i_error */
extern void T50f267(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vfav1i */
extern T0* T742c866(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_vfav1i_error */
extern void T34f267(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vffd4a_error */
extern void T50f266(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vffd4a */
extern T0* T742c865(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T50f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vffd4a_error */
extern void T34f266(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T34f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_FLATTENER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T442f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_FLATTENER.check_signature_vtct_validity */
extern void T442f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SIGNATURE_CHECKER.check_signature_vtct_validity */
extern void T1267f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_FLATTENER.resolve_identifier_signature */
extern void T442f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vrfa0a_error */
extern void T50f293(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vrfa0a */
extern T0* T742c893(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T50f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vrfa0a_error */
extern void T34f293(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T34f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item */
extern T0* T1254f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vreg0a_error */
extern void T50f292(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vreg0a */
extern T0* T742c892(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vreg_error */
extern T1 T50f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vreg0a_error */
extern void T34f292(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vreg_error */
extern T1 T34f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER_TYPE_RESOLVER.resolve_type */
extern void T1264f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].wipe_out */
extern void T688f17(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].move_all_cursors_after */
extern void T688f23(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.set_procedures */
extern void T72f278(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PROCEDURE_LIST.set_declared_count */
extern void T253f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_PROCEDURE_LIST.put_first */
extern void T253f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_QUICK_SORTER [[attached] ET_PROCEDURE].subsort */
extern void T1495f3(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] DS_QUICK_SORTER [[attached] ET_PROCEDURE].subsort_with_comparator */
extern void T1495f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].swap */
extern void T688f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].replace */
extern void T688f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_SEEDED_PROCEDURE_COMPARATOR.less_than */
extern T1 T1688f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_FLATTENER.procedure_sorter */
extern T0* T442f26(GE_context* ac, T0* C);
/* [detachable] DS_QUICK_SORTER [[attached] ET_PROCEDURE].make */
extern T0* T1495c2(GE_context* ac, T0* a1);
/* [detachable] ET_SEEDED_PROCEDURE_COMPARATOR.make */
extern T0* T1688c2(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].wipe_out */
extern void T692f17(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].move_all_cursors_after */
extern void T692f23(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.set_queries */
extern void T72f277(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUERY_LIST.set_declared_count */
extern void T252f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_QUERY_LIST.put_first */
extern void T252f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_QUICK_SORTER [[attached] ET_QUERY].subsort */
extern void T1494f3(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] DS_QUICK_SORTER [[attached] ET_QUERY].subsort_with_comparator */
extern void T1494f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].swap */
extern void T692f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].replace */
extern void T692f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_SEEDED_QUERY_COMPARATOR.less_than */
extern T1 T1685f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_FLATTENER.query_sorter */
extern T0* T442f25(GE_context* ac, T0* C);
/* [detachable] DS_QUICK_SORTER [[attached] ET_QUERY].make */
extern T0* T1494c2(GE_context* ac, T0* a1);
/* [detachable] ET_SEEDED_QUERY_COMPARATOR.make */
extern T0* T1685c2(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].back */
extern void T1254f51(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_back */
extern void T1254f64(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].set_before */
extern void T1588f13(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_FLATTENER.flatten_feature */
extern void T442f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_FLATTENER.flatten_inherited_feature */
extern void T442f50(GE_context* ac, T0* C, T0* a1);
extern T1 T442f50ot1(T0* a1, T0** a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdjr2b_error */
extern void T50f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdjr2b */
extern T0* T742c912(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T50f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vdjr2b_error */
extern void T34f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T34f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vmfn2b_error */
extern void T50f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vmfn2b */
extern T0* T742c911(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T50f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vmfn2b_error */
extern void T34f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T34f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdjr2a_error */
extern void T50f310(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdjr2a */
extern T0* T742c910(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vdjr2a_error */
extern void T34f310(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vmfn2a_error */
extern void T50f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vmfn2a */
extern T0* T742c909(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vmfn2a_error */
extern void T34f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_FLATTENER.process_replicated_seeds */
extern void T442f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_REDECLARED_FEATURE.set_other_seeds */
extern void T1497f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INHERITED_FEATURE.set_other_seeds */
extern void T1290f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REDECLARED_FEATURE.set_first_seed */
extern void T1497f31(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_INHERITED_FEATURE.set_first_seed */
extern void T1290f35(GE_context* ac, T0* C, T6 a1);
/* detachable ET_FEATURE_IDS.replace */
extern void T586f10(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable ET_FEATURE_IDS.first */
extern T6 T586f8(GE_context* ac, T0* C);
/* detachable ET_FEATURE_IDS.remove */
extern void T586f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLASS.register_feature */
extern void T72f281(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PARENT_FEATURE.extended_name */
extern T0* T1289f21(GE_context* ac, T0* C);
/* detachable ET_ALIASED_FEATURE_NAME.make */
extern T0* T1446c7(GE_context* ac, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].wipe_out */
extern void T1272f44(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].slots_wipe_out */
extern void T1272f60(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].clashes_wipe_out */
extern void T1272f59(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].key_storage_wipe_out */
extern void T1272f58(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].item_storage_wipe_out */
extern void T1272f57(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].unset_found_item */
extern void T1272f46(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].move_all_cursors_after */
extern void T1272f56(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32].set_next_cursor */
extern void T1625f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32].set_after */
extern void T1625f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].forth */
extern void T1272f43(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].cursor_forth */
extern void T1272f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].add_traversing_cursor */
extern void T1272f71(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32].set_position */
extern void T1625f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].remove_traversing_cursor */
extern void T1272f70(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].clashes_item */
extern T6 T1272f23(GE_context* ac, T0* C, T6 a1);
/* detachable ET_FEATURE_LIST.put_first */
extern void T397f6(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FEATURE_LIST.fixed_array */
extern T0* T397f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].item_for_iteration */
extern T0* T1272f30(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].cursor_item */
extern T0* T1272f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].item_storage_item */
extern T0* T1272f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].after */
extern T1 T1272f31(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].cursor_after */
extern T1 T1272f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32].after */
extern T1 T1625f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].start */
extern void T1272f42(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].cursor_start */
extern void T1272f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].cursor_off */
extern T1 T1272f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32].off */
extern T1 T1625f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].is_empty */
extern T1 T1272f33(GE_context* ac, T0* C);
/* detachable ET_FEATURE_LIST.make_with_capacity */
extern T0* T397c5(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].remove */
extern void T1272f41(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].remove_position */
extern void T1272f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].key_storage_put */
extern void T1272f52(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].item_storage_put */
extern void T1272f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].key_storage_keep_head */
extern void T1272f69(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].item_storage_keep_head */
extern void T1272f68(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].clashes_put */
extern void T1272f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].slots_put */
extern void T1272f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].move_cursors_forth */
extern void T1272f67(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].internal_set_key_equality_tester */
extern void T1272f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].slots_item */
extern T6 T1272f29(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].hash_position */
extern T6 T1272f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].key_storage_item */
extern T6 T1272f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].search_position */
extern void T1272f47(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CLIENTS.same_clients */
extern T1 T1025f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLIENT_LIST.same_clients */
extern T1 T390f12(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PARENT_FEATURE.clients */
extern T0* T1289f18(GE_context* ac, T0* C);
/* detachable ET_PARENT_FEATURE.has_rename */
extern T1 T1289f17(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vmfn0c_error */
extern void T50f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vmfn0c */
extern T0* T742c908(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vmfn0c_error */
extern void T34f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_PARENT_FEATURE.same_version */
extern T1 T1289f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].force_last */
extern void T1272f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].resize */
extern void T1272f49(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].clashes_resize */
extern void T1272f65(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].special_integer_ */
extern T0* T1272f36(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].key_storage_resize */
extern void T1272f64(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].item_storage_resize */
extern void T1272f63(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].slots_resize */
extern void T1272f62(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].new_modulus */
extern T6 T1272f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].new_capacity */
extern T6 T1272f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_FLATTENER.check_no_redeclaration_validity */
extern void T442f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrs4a_error */
extern void T50f323(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vdrs4a */
extern T0* T742c924(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.feature_lower_name */
extern T0* T742f197(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T50f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vdrs4a_error */
extern void T34f323(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T34f65(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PARENT_FEATURE.has_redefine */
extern T1 T1289f15(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_FLATTENER.check_redefine_clause_validity */
extern void T442f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrs2b_error */
extern void T50f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdrs2b */
extern T0* T742c929(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T50f70(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vdrs2b_error */
extern void T34f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T34f70(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrs2a_error */
extern void T50f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdrs2a */
extern T0* T742c928(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vdrs2a_error */
extern void T34f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_FLATTENER.check_undefine_clause_validity */
extern void T442f57(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdus2b_error */
extern void T50f326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdus2b */
extern T0* T742c927(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T50f69(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vdus2b_error */
extern void T34f326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T34f69(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdus2a_error */
extern void T50f325(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdus2a */
extern T0* T742c926(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vdus2a_error */
extern void T34f325(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdus3a_error */
extern void T50f324(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdus3a */
extern T0* T742c925(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T50f68(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vdus3a_error */
extern void T34f324(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T34f68(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_FLATTENER.check_rename_clause_validity */
extern void T442f56(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INHERITED_FEATURE.is_replicated */
extern T1 T1290f20(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T442f28(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T442f28ac1(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].wipe_out */
extern void T1260f16(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_CLIENT_LIST].keep_head */
extern void T1600f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_CLIENT_LIST].set_count */
extern void T1600f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].move_all_cursors_after */
extern void T1260f21(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST].set_next_cursor */
extern void T1601f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST].set_after */
extern void T1601f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].wipe_out */
extern void T1261f53(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].slots_wipe_out */
extern void T1261f66(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].clashes_wipe_out */
extern void T1261f65(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].key_storage_wipe_out */
extern void T1261f64(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].item_storage_wipe_out */
extern void T1261f63(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_CLIENT].keep_head */
extern void T1605f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_CLIENT].set_count */
extern void T1605f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].unset_found_item */
extern void T1261f48(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].move_all_cursors_after */
extern void T1261f62(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].set_next_cursor */
extern void T1603f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].set_after */
extern void T1603f13(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].back */
extern void T1261f52(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_back */
extern void T1261f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].add_traversing_cursor */
extern void T1261f72(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].set_position */
extern void T1603f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].remove_traversing_cursor */
extern void T1261f71(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].set_before */
extern void T1603f11(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].clashes_item */
extern T6 T1261f31(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CLIENTS.put_first */
extern void T1025f18(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CLIENTS.fixed_array */
extern T0* T1025f6(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].item_for_iteration */
extern T0* T1261f22(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_item */
extern T0* T1261f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].item_storage_item */
extern T0* T1261f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].before */
extern T1 T1261f21(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_before */
extern T1 T1261f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].before */
extern T1 T1603f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].finish */
extern void T1261f51(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_finish */
extern void T1261f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_off */
extern T1 T1261f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].off */
extern T1 T1603f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].is_empty */
extern T1 T1261f36(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].for_all */
extern T1 T1775f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].forth */
extern void T1915f8(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_forth */
extern void T1775f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].forth */
extern void T1603f17(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_forth */
extern void T1261f75(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].go_after */
extern void T1915f7(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_go_after */
extern void T1775f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].go_after */
extern void T1603f16(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_go_after */
extern void T1261f74(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].item */
extern T0* T1915f4(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_item */
extern T0* T1775f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].key */
extern T0* T1603f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_key */
extern T0* T1261f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].key_storage_item */
extern T0* T1261f35(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].after */
extern T1 T1915f3(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].after */
extern T1 T1603f8(GE_context* ac, T0* C);
/* [detachable] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].start */
extern void T1915f6(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_start */
extern void T1775f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].start */
extern void T1603f15(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_start */
extern void T1261f73(GE_context* ac, T0* C, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].new_cursor */
extern T0* T1775f4(GE_context* ac, T0* C);
/* [detachable] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].make */
extern T0* T1915c5(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].new_cursor */
extern T0* T1261f33(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].make */
extern T0* T1603c10(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].keys */
extern T0* T1261f39(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].make */
extern T0* T1775c8(GE_context* ac, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].set_internal_cursor */
extern void T1775f9(GE_context* ac, T0* C, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].new_cursor_with_table_cursor */
extern T0* T1775f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].make_with_table_cursor */
extern T0* T1915c9(GE_context* ac, T0* a1, T0* a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].is_empty */
extern T1 T1260f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].force */
extern void T1261f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].key_storage_put */
extern void T1261f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].slots_put */
extern void T1261f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].clashes_put */
extern void T1261f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].slots_item */
extern T6 T1261f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].hash_position */
extern T6 T1261f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].resize */
extern void T1261f56(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].clashes_resize */
extern void T1261f70(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].special_integer_ */
extern T0* T1261f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].key_storage_resize */
extern void T1261f69(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].item_storage_resize */
extern void T1261f68(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT].aliased_resized_area */
extern T0* T1604f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_CLIENT].aliased_resized_area */
extern T0* T1605f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].slots_resize */
extern void T1261f67(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].new_modulus */
extern T6 T1261f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].new_capacity */
extern T6 T1261f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].item_storage_put */
extern void T1261f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT].force */
extern void T1604f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CLIENT].fill_with */
extern void T1605f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CLIENT].extend */
extern void T1605f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].search_position */
extern void T1261f54(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CLIENTS.client */
extern T0* T1025f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLIENT.client */
extern T0* T391f4(GE_context* ac, T0* C);
/* detachable ET_CLIENTS.item */
extern T0* T1025f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLIENT_LIST.client */
extern T0* T390f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLIENT_LIST.item */
extern T0* T390f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].remove */
extern void T1260f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].move_left */
extern void T1260f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].move_cursors_left */
extern void T1260f19(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST].set_position */
extern void T1601f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].remove_last */
extern void T1260f18(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].move_last_cursors_after */
extern void T1260f22(GE_context* ac, T0* C);
/* detachable ET_CLIENTS.is_none */
extern T1 T1025f7(GE_context* ac, T0* C);
/* [detachable] ET_CLIENT_LIST.is_none */
extern T1 T390f4(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].item */
extern T0* T1260f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].first */
extern T0* T1260f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].force_last */
extern void T1260f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST].force */
extern void T1599f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CLIENT_LIST].fill_with */
extern void T1600f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CLIENT_LIST].extend */
extern void T1600f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].resize */
extern void T1260f17(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1599f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1600f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].new_capacity */
extern T6 T1260f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].extendible */
extern T1 T1260f10(GE_context* ac, T0* C, T6 a1);
/* detachable ET_FEATURE_EXPORT.clients */
extern T0* T1105f8(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ALL_EXPORT.clients */
extern T0* T1432f6(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FEATURE_EXPORT.has_feature_name */
extern T1 T1105f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ALL_EXPORT.has_feature_name */
extern T1 T1432f5(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FEATURE_EXPORT.is_all */
extern T1 T1105f6(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_FLATTENER.flatten_redeclared_feature */
extern void T442f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_FLATTENER.check_precursor_validity */
extern void T442f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.check_feature_validity */
extern void T1271f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrd3b_error */
extern void T50f307(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdrd3b */
extern T0* T742c907(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* detachable ET_POSTCONDITIONS.position */
extern T0* T1200f14(GE_context* ac, T0* C);
/* detachable ET_POSTCONDITIONS.first */
extern T0* T1200f16(GE_context* ac, T0* C);
/* detachable ET_POSTCONDITIONS.is_empty */
extern T1 T1200f15(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T50f59(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vdrd3b_error */
extern void T34f307(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T34f59(GE_context* ac, T0* C, T0* a1);
/* detachable ET_POSTCONDITIONS.is_ensure_then */
extern T1 T1200f13(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrd3a_error */
extern void T50f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdrd3a */
extern T0* T742c906(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* detachable ET_PRECONDITIONS.position */
extern T0* T394f13(GE_context* ac, T0* C);
/* detachable ET_PRECONDITIONS.first */
extern T0* T394f15(GE_context* ac, T0* C);
/* detachable ET_PRECONDITIONS.is_empty */
extern T1 T394f14(GE_context* ac, T0* C);
/* [detachable] ET_ERROR_HANDLER.report_vdrd3a_error */
extern void T34f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_PRECONDITIONS.is_require_else */
extern T1 T394f12(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_FLATTENER.check_redeclaration_validity */
extern void T442f53(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrd6a_error */
extern void T50f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdrd6a */
extern T0* T742c923(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vdrd6a_error */
extern void T34f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrd4b_error */
extern void T50f321(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdrd4b */
extern T0* T742c922(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T50f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vdrd4b_error */
extern void T34f321(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T34f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrd4c_error */
extern void T50f320(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdrd4c */
extern T0* T742c921(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vdrd4c_error */
extern void T34f320(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vmfn0b_error */
extern void T50f319(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.set_ge_reported */
extern void T742f920(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_VALIDITY_ERROR.make_vmfn0b */
extern T0* T742c919(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vmfn0b_error */
extern void T34f319(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrd4a_error */
extern void T50f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdrd4a */
extern T0* T742c918(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vdrd4a_error */
extern void T34f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrs4b_error */
extern void T50f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdrs4b */
extern T0* T742c917(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vdrs4b_error */
extern void T34f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_FLATTENER.ise_19_01_0 */
extern T0* T442f29(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrd5a_error */
extern void T50f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdrd5a */
extern T0* T742c916(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T50f64(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vdrd5a_error */
extern void T34f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T34f64(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrd7c_error */
extern void T50f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdrd7c */
extern T0* T742c915(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T50f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vdrd7c_error */
extern void T34f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T34f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrd7a_error */
extern void T50f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdrd7a */
extern T0* T742c914(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vdrd7a_error */
extern void T34f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdrd7b_error */
extern void T50f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdrd7b */
extern T0* T742c913(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vdrd7b_error */
extern void T34f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_REDECLARED_FEATURE.is_replicated */
extern T1 T1497f19(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_FLATTENER.check_builtin_feature_validity */
extern void T442f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_feature_validity */
extern void T1270f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vmss3a_error */
extern void T50f291(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vmss3a */
extern T0* T742c891(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T50f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vmss3a_error */
extern void T34f291(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T34f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_FLATTENER.flatten_immediate_feature */
extern void T442f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].before */
extern T1 T1254f39(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_before */
extern T1 T1254f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].before */
extern T1 T1588f8(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].finish */
extern void T1254f50(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_finish */
extern void T1254f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_FLATTENER.resolve_feature_adaptations */
extern void T442f37(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_FLATTENER.check_parents_validity */
extern void T442f35(GE_context* ac, T0* C);
/* [detachable] ET_PARENT_CHECKER2.check_parents_validity */
extern void T1268f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_FLATTENER.check_formal_parameters_validity */
extern void T442f34(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER2.check_formal_parameters_validity */
extern void T1269f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER2.check_constraint_validity */
extern void T1269f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.ancestors_built_successfully */
extern T1 T72f161(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_FLATTENER.set_fatal_error */
extern void T442f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_FLATTENER.make */
extern T0* T442c30(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_map */
extern T0* T1272c39(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_with_equality_testers */
extern void T1272f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_sparse_container */
extern void T1272f61(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].set_internal_cursor */
extern void T1272f76(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].new_cursor */
extern T0* T1272f35(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32].make */
extern T0* T1625c8(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_slots */
extern void T1272f75(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_clashes */
extern void T1272f74(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_key_storage */
extern void T1272f73(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_item_storage */
extern void T1272f72(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_PRECURSOR_CHECKER.make */
extern T0* T1271c10(GE_context* ac, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.dummy_feature */
extern T0* T1271f6(GE_context* ac, T0* C);
/* [detachable] ET_PRECURSOR_CHECKER.current_system */
extern T0* T1271f7(GE_context* ac, T0* C);
/* [detachable] ET_PRECURSOR_CHECKER.make */
extern void T1271f10p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.tokens */
extern T0* T1271f5(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.make */
extern T0* T1270c12(GE_context* ac, T0* a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.make */
extern void T1270f12p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.tokens */
extern T0* T1270f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_map */
extern T0* T1624c33(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_with_equality_testers */
extern void T1624f34(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_sparse_container */
extern void T1624f35(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].set_internal_cursor */
extern void T1624f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].new_cursor */
extern T0* T1624f24(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make */
extern T0* T1861c4(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].unset_found_item */
extern void T1624f40(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_slots */
extern void T1624f39(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].new_modulus */
extern T6 T1624f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_clashes */
extern void T1624f38(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_key_storage */
extern void T1624f37(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_item_storage */
extern void T1624f36(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].make */
extern T0* T1862f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].make_empty */
extern T0* T1864c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].default_create */
extern T0* T1862c3(GE_context* ac);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER2.make */
extern T0* T1269c8(GE_context* ac, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER2.make */
extern void T1269f8p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER2.tokens */
extern T0* T1269f5(GE_context* ac, T0* C);
/* [detachable] ET_PARENT_CHECKER2.make */
extern T0* T1268c9(GE_context* ac, T0* a1);
/* [detachable] ET_PARENT_CHECKER2.make */
extern void T1268f9p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER2.tokens */
extern T0* T1268f5(GE_context* ac, T0* C);
/* [detachable] ET_ANCHORED_TYPE_CHECKER.make */
extern T0* T1266c8(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].make_default */
extern T0* T1620c10(GE_context* ac);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].make */
extern void T1620f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_map */
extern T0* T1856c33(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_with_equality_testers */
extern void T1856f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_sparse_container */
extern void T1856f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].set_internal_cursor */
extern void T1856f57(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].new_cursor */
extern T0* T1856f26(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make */
extern T0* T1918c6(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_slots */
extern void T1856f56(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].new_modulus */
extern T6 T1856f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_clashes */
extern void T1856f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_key_storage */
extern void T1856f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_item_storage */
extern void T1856f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ANCHORED_TYPE_CHECKER.make */
extern void T1266f8p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1266f7(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER_TYPE_RESOLVER.make */
extern T0* T1264c7(GE_context* ac, T0* a1);
/* [detachable] ET_IDENTIFIER_TYPE_RESOLVER.tokens */
extern T0* T1264f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_map */
extern T0* T1261c41(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_with_equality_testers */
extern void T1261f42(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_sparse_container */
extern void T1261f43(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].set_internal_cursor */
extern void T1261f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_slots */
extern void T1261f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_clashes */
extern void T1261f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_key_storage */
extern void T1261f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_item_storage */
extern void T1261f44(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT].make */
extern T0* T1604f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_CLIENT].make_empty */
extern T0* T1605c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT].default_create */
extern T0* T1604c3(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].make */
extern T0* T1260c12(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].set_internal_cursor */
extern void T1260f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].new_cursor */
extern T0* T1260f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST].make */
extern T0* T1601c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST].make */
extern T0* T1599f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_CLIENT_LIST].make_empty */
extern T0* T1600c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST].default_create */
extern T0* T1599c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].set_key_equality_tester */
extern void T1257f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_FLATTENER.alias_name_tester */
extern T0* T442f24(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_map */
extern T0* T1257c34(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_with_equality_testers */
extern void T1257f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_sparse_container */
extern void T1257f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].set_internal_cursor */
extern void T1257f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].new_cursor */
extern T0* T1257f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make */
extern T0* T1598c6(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_slots */
extern void T1257f60(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_clashes */
extern void T1257f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_key_storage */
extern void T1257f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_item_storage */
extern void T1257f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].make */
extern T0* T688c15(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].set_internal_cursor */
extern void T688f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].new_cursor */
extern T0* T688f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].make */
extern T0* T1363c9(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].make */
extern T0* T692c15(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].set_internal_cursor */
extern void T692f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].new_cursor */
extern T0* T692f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].make */
extern T0* T1364c9(GE_context* ac, T0* a1);
/* [detachable] ET_FEATURE_FLATTENER.feature_name_tester */
extern T0* T442f22(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_FLATTENER.make */
extern void T442f30p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_FLATTENER.error_handler */
extern T0* T442f23(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.set_features_flattened */
extern void T72f276(GE_context* ac, T0* C);
/* [detachable] ET_ANCESTOR_BUILDER.process_class */
extern void T441f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCESTOR_BUILDER.internal_process_class */
extern void T441f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vhpr1a_error */
extern void T50f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vhpr1a */
extern T0* T742c824(GE_context* ac, T0* a1, T0* a2);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].after */
extern T1 T1293f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].forth */
extern void T1293f14(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].cursor_forth */
extern void T445f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].add_traversing_cursor */
extern void T445f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].remove_traversing_cursor */
extern void T445f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].item */
extern T0* T1293f5(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].cursor_item */
extern T0* T445f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].start */
extern void T1293f13(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].cursor_start */
extern void T445f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].off */
extern T1 T1293f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].before */
extern T1 T1293f8(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T50f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vhpr1a_error */
extern void T34f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T34f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCESTOR_BUILDER.set_parents_inheritance_error */
extern void T441f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].wipe_out */
extern void T1250f13(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].wipe_out */
extern void T1580f35(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].slots_wipe_out */
extern void T1580f46(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].clashes_wipe_out */
extern void T1580f45(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].key_storage_wipe_out */
extern void T1580f44(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].item_storage_wipe_out */
extern void T1580f43(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].unset_found_item */
extern void T1580f42(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].move_all_cursors_after */
extern void T1580f41(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_CLASS].set_next_cursor */
extern void T1826f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_CLASS].set_after */
extern void T1826f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].wipe_out */
extern void T445f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].reset */
extern void T1250f17(GE_context* ac, T0* C);
/* [detachable] ET_ANCESTOR_BUILDER.check_parents_validity */
extern void T441f20(GE_context* ac, T0* C);
/* [detachable] ET_PARENT_CHECKER1.check_parents_validity */
extern void T1252f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCESTOR_BUILDER.check_formal_parameters_validity */
extern void T441f19(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameters_validity */
extern void T1253f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_BASE_TYPE_CONSTRAINT].wipe_out */
extern void T1584f12(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_BASE_TYPE_CONSTRAINT].keep_head */
extern void T1827f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_BASE_TYPE_CONSTRAINT].set_count */
extern void T1827f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_BASE_TYPE_CONSTRAINT].move_all_cursors_after */
extern void T1584f15(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_BASE_TYPE_CONSTRAINT].set_next_cursor */
extern void T1829f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_BASE_TYPE_CONSTRAINT].set_after */
extern void T1829f6(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.set_constraint_base_types */
extern void T1253f28(GE_context* ac, T0* C, T0* a1);
extern T1 T1253f28ot1(T0* a1, T0** a2);
/* [detachable] ET_BASE_TYPE_CONSTRAINT_LIST.put_first */
extern void T1587f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE_CONSTRAINT].force */
extern void T1828f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_BASE_TYPE_CONSTRAINT].fill_with */
extern void T1827f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_BASE_TYPE_CONSTRAINT].extend */
extern void T1827f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BASE_TYPE_CONSTRAINT_LIST.fixed_array */
extern T0* T1587f6(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE_CONSTRAINT].default_create */
extern T0* T1828c3(GE_context* ac);
/* [detachable] ET_BASE_TYPE_CONSTRAINT_LIST.make_with_capacity */
extern T0* T1587c11(GE_context* ac, T0* a1, T6 a2);
/* [detachable] ET_BASE_TYPE_CONSTRAINT_LIST.make_empty_with_capacity */
extern void T1587f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE_CONSTRAINT].make */
extern T0* T1828f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_BASE_TYPE_CONSTRAINT].make_empty */
extern T0* T1827c5(GE_context* ac, T6 a1);
/* [detachable] ET_BASE_TYPE_CONSTRAINT_LIST.tokens */
extern T0* T1587f5(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_BASE_TYPE_CONSTRAINT].item */
extern T0* T1584f6(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint_base_types */
extern void T1427f83(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_BASE_TYPE_CONSTRAINT].first */
extern T0* T1584f10(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_BASE_TYPE_CONSTRAINT].force_last */
extern void T1584f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_BASE_TYPE_CONSTRAINT].resize */
extern void T1584f16(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE_CONSTRAINT].aliased_resized_area */
extern T0* T1828f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_BASE_TYPE_CONSTRAINT].aliased_resized_area */
extern T0* T1827f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_BASE_TYPE_CONSTRAINT].new_capacity */
extern T6 T1584f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_BASE_TYPE_CONSTRAINT].extendible */
extern T1 T1584f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.base_type_constraint */
extern T0* T1253f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] ET_BASE_TYPE_RENAME_CONSTRAINT.make */
extern T0* T1772c12(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.tokens */
extern T0* T1253f14(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.set_recursive_formal_constraints */
extern void T1253f27(GE_context* ac, T0* C, T0* a1);
extern T1 T1253f27ot1(T0* a1, T0** a2);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.set_recursive_formal_constraints */
extern void T1427f82(GE_context* ac, T0* C, T0* a1);
/* [detachable] SPECIAL [[attached] NATURAL_32].make_filled */
extern T0* T1586c5(GE_context* ac, T10 a1, T6 a2);
/* [detachable] SPECIAL [[attached] NATURAL_32].fill_with */
extern void T1586f8(GE_context* ac, T0* C, T10 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] NATURAL_32].extend */
extern void T1586f9(GE_context* ac, T0* C, T10 a1);
/* [detachable] SPECIAL [[attached] NATURAL_32].make_empty */
extern void T1586f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] NATURAL_32].make_empty */
extern T0* T1586c7(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] NATURAL_32].item */
extern T10 T1585f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] NATURAL_32].replace */
extern void T1585f12(GE_context* ac, T0* C, T10 a1, T6 a2);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.add_n_flags_to_list */
extern void T1253f30(GE_context* ac, T0* C, T10 a1, T6 a2, T0* a3);
/* [detachable] DS_ARRAYED_LIST [[attached] NATURAL_32].force_last */
extern void T1585f13(GE_context* ac, T0* C, T10 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] NATURAL_32].force */
extern void T1830f4(GE_context* ac, T0* C, T0* a1, T10 a2, T6 a3);
/* [detachable] DS_ARRAYED_LIST [[attached] NATURAL_32].resize */
extern void T1585f16(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] NATURAL_32].aliased_resized_area */
extern T0* T1830f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] NATURAL_32].aliased_resized_area */
extern T0* T1586f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] NATURAL_32].new_capacity */
extern T6 T1585f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] NATURAL_32].extendible */
extern T1 T1585f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] NATURAL_32].wipe_out */
extern void T1585f11(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] NATURAL_32].keep_head */
extern void T1586f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] NATURAL_32].set_count */
extern void T1586f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] NATURAL_32].move_all_cursors_after */
extern void T1585f15(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] NATURAL_32].set_next_cursor */
extern void T1831f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] NATURAL_32].set_after */
extern void T1831f6(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.propagate_recursive_formal_dependencies */
extern void T1253f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.check_constraint_validity */
extern void T1253f25(GE_context* ac, T0* C, T0* a1);
extern T1 T1253f25ot1(T0* a1, T0** a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vcfg2a_error */
extern void T50f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vcfg2a */
extern T0* T742c931(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T50f73(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vcfg2a_error */
extern void T34f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T34f73(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vcfg1a_error */
extern void T50f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vcfg1a */
extern T0* T742c930(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T50f72(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vcfg1a_error */
extern void T34f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T34f72(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.error_handler */
extern T0* T1253f12(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.set_fatal_error */
extern void T1253f24(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.current_universe */
extern T0* T1253f15(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.initalize_base_type_dependencies */
extern void T1253f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.add_n_items_to_list */
extern void T1253f29(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.initalize_formal_dependencies */
extern void T1253f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ANCESTOR_BUILDER.set_ancestors */
extern void T441f18(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.set_conforming_ancestors */
extern void T72f267(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.set_ancestors */
extern void T72f266(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].wipe_out */
extern void T1251f43(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].slots_wipe_out */
extern void T1251f54(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].clashes_wipe_out */
extern void T1251f53(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].key_storage_wipe_out */
extern void T1251f52(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].item_storage_wipe_out */
extern void T1251f51(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_BASE_TYPE].keep_head */
extern void T887f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_BASE_TYPE].set_count */
extern void T887f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].unset_found_item */
extern void T1251f50(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].move_all_cursors_after */
extern void T1251f49(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS].set_next_cursor */
extern void T1581f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS].set_after */
extern void T1581f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].forth */
extern void T1251f42(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].cursor_forth */
extern void T1251f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].add_traversing_cursor */
extern void T1251f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS].set_position */
extern void T1581f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].remove_traversing_cursor */
extern void T1251f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].clashes_item */
extern T6 T1251f39(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_BASE_TYPE_LIST.put_last */
extern void T401f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE].force */
extern void T888f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_BASE_TYPE].fill_with */
extern void T887f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_BASE_TYPE].extend */
extern void T887f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].item_for_iteration */
extern T0* T1251f22(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].cursor_item */
extern T0* T1251f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].item_storage_item */
extern T0* T1251f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].after */
extern T1 T1251f30(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].cursor_after */
extern T1 T1251f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS].after */
extern T1 T1581f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].start */
extern void T1251f41(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].cursor_start */
extern void T1251f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].cursor_off */
extern T1 T1251f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS].off */
extern T1 T1581f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].is_empty */
extern T1 T1251f24(GE_context* ac, T0* C);
/* [detachable] ET_ANCESTOR_BUILDER.add_parent_to_ancestors */
extern void T441f23(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].force_new */
extern void T1251f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].key_storage_put */
extern void T1251f60(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].item_storage_put */
extern void T1251f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].slots_put */
extern void T1251f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].clashes_put */
extern void T1251f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].slots_item */
extern T6 T1251f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].hash_position */
extern T6 T1251f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].resize */
extern void T1251f56(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].clashes_resize */
extern void T1251f67(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].special_integer_ */
extern T0* T1251f38(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].key_storage_resize */
extern void T1251f66(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].item_storage_resize */
extern void T1251f65(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE].aliased_resized_area */
extern T0* T888f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_BASE_TYPE].aliased_resized_area */
extern T0* T887f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].key_storage_item */
extern T0* T1251f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].slots_resize */
extern void T1251f64(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].new_modulus */
extern T6 T1251f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].new_capacity */
extern T6 T1251f35(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvagp0a_error */
extern void T50f212(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvagp0a */
extern T0* T742c831(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T50f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvagp0a_error */
extern void T34f212(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T34f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].found_item */
extern T0* T1251f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].found */
extern T1 T1251f28(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].search */
extern void T1251f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].search_position */
extern void T1251f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vhpr2a_error */
extern void T50f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vhpr2a */
extern T0* T742c830(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vhpr2_error */
extern T1 T50f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vhpr2a_error */
extern void T34f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vhpr2_error */
extern T1 T34f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.is_frozen */
extern T1 T72f215(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.has_frozen_mark */
extern T1 T72f222(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvhso2a_error */
extern void T50f210(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_VALIDITY_ERROR.make_gvhso2a */
extern T0* T742c829(GE_context* ac, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T50f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvhso2a_error */
extern void T34f210(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T34f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vtct0a_error */
extern void T50f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vtct0a */
extern T0* T742c828(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vtct_error */
extern T1 T50f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vtct0a_error */
extern void T34f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vtct_error */
extern T1 T34f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvhso1a_error */
extern void T50f208(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_VALIDITY_ERROR.make_gvhso1a */
extern T0* T742c827(GE_context* ac, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T50f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvhso1a_error */
extern void T34f208(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T34f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vhay0a_error */
extern void T50f207(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_VALIDITY_ERROR.make_vhay0a */
extern T0* T742c826(GE_context* ac, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vhay_error */
extern T1 T50f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vhay0a_error */
extern void T34f207(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.reportable_vhay_error */
extern T1 T34f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vhpr1b_error */
extern void T50f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vhpr1b */
extern T0* T742c825(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_vhpr1b_error */
extern void T34f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_PARENT_LIST.is_conforming */
extern T1 T550f7(GE_context* ac, T0* C);
/* [detachable] ET_ANCESTOR_BUILDER.current_system */
extern T0* T441f12(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].sort */
extern void T1250f12(GE_context* ac, T0* C);
/* [detachable] ET_ANCESTOR_BUILDER.add_class_to_sorter */
extern void T441f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCESTOR_BUILDER.current_universe */
extern T0* T441f11(GE_context* ac, T0* C);
/* [detachable] ET_ANCESTOR_BUILDER.add_parents_to_sorter */
extern void T441f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].force_relation */
extern void T1250f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].put_indexed_relation */
extern void T1250f19(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].count */
extern T6 T1250f8(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].index_of */
extern T6 T1250f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].found_item */
extern T6 T1580f33(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].item_storage_item */
extern T6 T1580f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].found */
extern T1 T1580f23(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].search */
extern void T1580f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].search_position */
extern void T1580f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].hash_position */
extern T6 T1580f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].key_storage_item */
extern T0* T1580f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].clashes_item */
extern T6 T1580f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].slots_item */
extern T6 T1580f31(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].force */
extern void T1250f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].put */
extern void T1250f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].put_new */
extern void T1580f37(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].key_storage_put */
extern void T1580f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].item_storage_put */
extern void T1580f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].slots_put */
extern void T1580f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].clashes_put */
extern void T1580f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].resize */
extern void T1580f36(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].clashes_resize */
extern void T1580f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].special_integer_ */
extern T0* T1580f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].key_storage_resize */
extern void T1580f51(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].item_storage_resize */
extern void T1580f50(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].slots_resize */
extern void T1580f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].new_modulus */
extern T6 T1580f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].capacity */
extern T6 T1250f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].has */
extern T1 T1250f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].has */
extern T1 T1580f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCESTOR_BUILDER.set_fatal_error */
extern void T441f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCESTOR_BUILDER.make */
extern T0* T441c13(GE_context* ac, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.make */
extern T0* T1253c20(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] NATURAL_32].make */
extern T0* T1585c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] NATURAL_32].set_internal_cursor */
extern void T1585f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] NATURAL_32].new_cursor */
extern T0* T1585f9(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] NATURAL_32].make */
extern T0* T1831c5(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] NATURAL_32].make */
extern T0* T1830f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] NATURAL_32].default_create */
extern T0* T1830c3(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_BASE_TYPE_CONSTRAINT].make */
extern T0* T1584c11(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_BASE_TYPE_CONSTRAINT].set_internal_cursor */
extern void T1584f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_BASE_TYPE_CONSTRAINT].new_cursor */
extern T0* T1584f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_BASE_TYPE_CONSTRAINT].make */
extern T0* T1829c5(GE_context* ac, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.make */
extern void T1253f20p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER1.make */
extern T0* T1252c8(GE_context* ac, T0* a1);
/* [detachable] ET_PARENT_CHECKER1.tokens */
extern T0* T1252f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_map */
extern T0* T1251c40(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_with_equality_testers */
extern void T1251f46(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_sparse_container */
extern void T1251f61(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].set_internal_cursor */
extern void T1251f72(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].new_cursor */
extern T0* T1251f37(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make */
extern T0* T1581c8(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_slots */
extern void T1251f71(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_clashes */
extern void T1251f70(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_key_storage */
extern void T1251f69(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_item_storage */
extern void T1251f68(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].make_default */
extern T0* T1250c11(GE_context* ac);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].make */
extern void T1250f16(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_map */
extern T0* T1580c34(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_with_equality_testers */
extern void T1580f40(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_sparse_container */
extern void T1580f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].set_internal_cursor */
extern void T1580f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].new_cursor */
extern T0* T1580f32(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_CLASS].make */
extern T0* T1826c6(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_slots */
extern void T1580f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_clashes */
extern void T1580f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_key_storage */
extern void T1580f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_item_storage */
extern void T1580f56(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ANCESTOR_BUILDER.make */
extern void T441f13p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCESTOR_BUILDER.tokens */
extern T0* T441f9(GE_context* ac, T0* C);
/* [detachable] ET_ANCESTOR_BUILDER.error_handler */
extern T0* T441f10(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.set_ancestors_built */
extern void T72f265(GE_context* ac, T0* C);
/* [detachable] ET_PROVIDER_CHECKER.process_class */
extern void T440f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PROVIDER_CHECKER.internal_process_class */
extern void T440f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PROVIDER_CHECKER.check_cluster_dependence_constraints */
extern void T440f10(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gcdep_error */
extern void T50f392(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_CLUSTER_ERROR.make_gcdep */
extern T0* T1866c25(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].forth */
extern void T1966f11(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].cursor_forth */
extern void T1965f57(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].add_traversing_cursor */
extern void T1965f59(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].set_next_cursor */
extern void T1966f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].remove_traversing_cursor */
extern void T1965f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].set_after */
extern void T1966f13(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].key */
extern T0* T1966f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].cursor_key */
extern T0* T1965f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].after */
extern T1 T1966f6(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].start */
extern void T1966f10(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].cursor_start */
extern void T1965f56(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].cursor_off */
extern T1 T1965f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].off */
extern T1 T1966f8(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].is_empty */
extern T1 T1965f29(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T50f110(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gcdep_error */
extern void T34f392(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T34f110(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gcpro_error */
extern void T50f391(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_CLUSTER_ERROR.make_gcpro */
extern T0* T1866c24(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T50f109(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gcpro_error */
extern void T34f391(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T34f109(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T1 T1684f8(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature detachable ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1684f8ac1(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* Creation of agent #2 in feature detachable ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1684f8ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature detachable ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1684f8ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature detachable ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1684f8ac4(GE_context* ac, T0* a1, T0* a2);
extern T1 T1684f8ot1(T0* a1, T0** a2);
/* [detachable] PREDICATE [[attached] TUPLE [[attached] STRING_8]].set_rout_disp_final */
extern void T1988f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] PREDICATE [[attached] TUPLE [[attached] LX_WILDCARD]].set_rout_disp_final */
extern void T1999f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* detachable ET_CLUSTER_DEPENDENCE_CONSTRAINT.matches_pathname */
extern T1 T1684f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] LX_DFA_WILDCARD.recognizes */
extern T1 T1993f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_DFA_WILDCARD.longest_end_position */
extern T6 T1993f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] LX_DFA_WILDCARD.is_compiled */
extern T1 T1993f13(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].there_exists */
extern T1 T142f20(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_ */
extern T0* T1684f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].there_exists */
extern T1 T1965f26(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CLUSTER_DEPENDENCE_CONSTRAINT.group_pathname */
extern T0* T1684f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.first_non_override_overridden_class */
extern T0* T72f193(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.master_class_in_universe */
extern T0* T72f199(GE_context* ac, T0* C);
/* [detachable] ET_PROVIDER_CHECKER.scm_mapped_cluster */
extern T0* T440f5(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CLUSTER.scm_write_mapping_recursive */
extern T0* T759f57(GE_context* ac, T0* C);
/* [detachable] ET_PROVIDER_CHECKER.set_fatal_error */
extern void T440f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PROVIDER_CHECKER.make */
extern T0* T440c6(GE_context* ac, T0* a1);
/* [detachable] ET_PROVIDER_CHECKER.tokens */
extern T0* T440f3(GE_context* ac, T0* C);
/* [detachable] ET_PROVIDER_CHECKER.error_handler */
extern T0* T440f4(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.process_class */
extern void T439f994(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.internal_process_class */
extern void T439f1153(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_class */
extern void T450f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvscn1b_error */
extern void T50f244(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_gvscn1b */
extern T0* T742c863(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T50f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvscn1b_error */
extern void T34f244(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T34f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.syntax_error */
extern T1 T439f712(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.parse_file */
extern void T439f1156(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* [detachable] ET_EIFFEL_PARSER.yyparse */
extern void T439f1157(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_pop_last_value */
extern void T439f1167(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_push_error_value */
extern void T439f1166(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action */
extern void T439f1165(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_801_1000 */
extern void T439f1191(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_942 */
extern void T439f2149(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.add_counter */
extern void T439f2157(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [[attached] INTEGER_32].force */
extern void T902f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [[attached] INTEGER_32].resize */
extern void T902f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [[attached] INTEGER_32].new_capacity */
extern T6 T902f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [[attached] INTEGER_32].extendible */
extern T1 T902f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_941 */
extern void T439f2148(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].force */
extern void T940f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_IDENTIFIER].fill_with */
extern void T941f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_IDENTIFIER].extend */
extern void T941f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_940 */
extern void T439f2147(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_939 */
extern void T439f2146(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_938 */
extern void T439f2145(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].force */
extern void T950f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_REAL_CONSTANT].fill_with */
extern void T952f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_REAL_CONSTANT].extend */
extern void T952f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.set_cast_type */
extern void T1417f43(GE_context* ac, T0* C, T0* a1);
/* detachable ET_REGULAR_REAL_CONSTANT.set_cast_type */
extern void T1416f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_target_type */
extern T0* T448f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_EIFFEL_PARSER.ast_factory */
extern T0* T439f726(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_937 */
extern void T439f2144(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.set_sign */
extern void T1417f42(GE_context* ac, T0* C, T0* a1);
/* detachable ET_REGULAR_REAL_CONSTANT.set_sign */
extern void T1416f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_936 */
extern void T439f2143(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_935 */
extern void T439f2142(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_934 */
extern void T439f2141(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_933 */
extern void T439f2140(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_932 */
extern void T439f2139(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_931 */
extern void T439f2138(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].force */
extern void T942f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_INTEGER_CONSTANT].fill_with */
extern void T944f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_INTEGER_CONSTANT].extend */
extern void T944f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_930 */
extern void T439f2137(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_929 */
extern void T439f2136(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_928 */
extern void T439f2135(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_927 */
extern void T439f2134(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_926 */
extern void T439f2133(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_925 */
extern void T439f2132(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_924 */
extern void T439f2131(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].force */
extern void T926f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_BOOLEAN_CONSTANT].fill_with */
extern void T928f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_BOOLEAN_CONSTANT].extend */
extern void T928f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_923 */
extern void T439f2130(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_922 */
extern void T439f2129(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].force */
extern void T932f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CHARACTER_CONSTANT].fill_with */
extern void T934f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CHARACTER_CONSTANT].extend */
extern void T934f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_921 */
extern void T439f2128(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T932f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T934f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_920 */
extern void T439f2127(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_919 */
extern void T439f2126(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_918 */
extern void T439f2125(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_917 */
extern void T439f2124(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].force */
extern void T948f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING].fill_with */
extern void T949f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING].extend */
extern void T949f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_916 */
extern void T439f2123(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T948f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T949f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_915 */
extern void T439f2122(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_914 */
extern void T439f2121(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_913 */
extern void T439f2120(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_912 */
extern void T439f2119(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_911 */
extern void T439f2118(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_910 */
extern void T439f2117(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_909 */
extern void T439f2116(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_908 */
extern void T439f2115(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_907 */
extern void T439f2114(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_906 */
extern void T439f2113(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_905 */
extern void T439f2112(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_904 */
extern void T439f2111(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_903 */
extern void T439f2110(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_902 */
extern void T439f2109(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_901 */
extern void T439f2108(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_900 */
extern void T439f2107(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_899 */
extern void T439f2106(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_898 */
extern void T439f2105(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_897 */
extern void T439f2104(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_896 */
extern void T439f2103(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_895 */
extern void T439f2102(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_894 */
extern void T439f2101(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_893 */
extern void T439f2100(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_892 */
extern void T439f2099(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_891 */
extern void T439f2098(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_890 */
extern void T439f2097(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].force */
extern void T984f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].fill_with */
extern void T985f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].extend */
extern void T985f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T984f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T985f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_agent_typed_open_argument */
extern T0* T448f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_AGENT_TYPED_OPEN_ARGUMENT.make */
extern T0* T1487c10(GE_context* ac, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.question_mark_symbol */
extern T0* T71f1517(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.make */
extern T0* T970c41(GE_context* ac);
/* detachable ET_QUESTION_MARK_SYMBOL.make_leaf */
extern void T970f44(GE_context* ac, T0* C);
/* detachable ET_AGENT_TYPED_OPEN_ARGUMENT.tokens */
extern T0* T1487f8(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_889 */
extern void T439f2096(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_888 */
extern void T439f2095(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_887 */
extern void T439f2094(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].force */
extern void T986f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].fill_with */
extern void T988f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].extend */
extern void T988f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T986f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T988f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.increment_counter */
extern void T439f2158(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [[attached] INTEGER_32].replace */
extern void T902f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_agent_argument_operand_comma */
extern T0* T448f328(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_886 */
extern void T439f2093(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].force */
extern void T989f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].fill_with */
extern void T991f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].extend */
extern void T991f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_AGENT_ARGUMENT_OPERAND_LIST.put_first */
extern void T990f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM].force */
extern void T1737f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM].fill_with */
extern void T1736f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM].extend */
extern void T1736f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_AGENT_ARGUMENT_OPERAND_LIST.fixed_array */
extern T0* T990f6(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T1737c2(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_885 */
extern void T439f2092(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T989f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T991f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_agent_argument_operands */
extern T0* T448f327(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* detachable ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern T0* T990c12(GE_context* ac, T6 a1);
/* detachable ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern void T990f12p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T1737f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM].make_empty */
extern T0* T1736c4(GE_context* ac, T6 a1);
/* detachable ET_AGENT_ARGUMENT_OPERAND_LIST.tokens */
extern T0* T990f5(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.counter_value */
extern T6 T439f900(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.last_symbol */
extern T0* T439f902(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [detachable ET_SYMBOL].item */
extern T0* T906f7(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_884 */
extern void T439f2091(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_883 */
extern void T439f2090(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.add_symbol */
extern void T439f2161(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_SYMBOL].force */
extern void T906f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].force */
extern void T922f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_SYMBOL].fill_with */
extern void T923f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_SYMBOL].extend */
extern void T923f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_SYMBOL].resize */
extern void T906f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T922f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T923f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_SYMBOL].new_capacity */
extern T6 T906f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_SYMBOL].extendible */
extern T1 T906f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_882 */
extern void T439f2089(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.remove_counter */
extern void T439f2155(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.remove_symbol */
extern void T439f2160(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [detachable ET_SYMBOL].remove */
extern void T906f10(GE_context* ac, T0* C);
/* [detachable] SPECIAL [detachable ET_SYMBOL].keep_head */
extern void T923f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_SYMBOL].set_count */
extern void T923f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_881 */
extern void T439f2088(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_880 */
extern void T439f2087(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_879 */
extern void T439f2086(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].force */
extern void T992f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_AGENT_TARGET].fill_with */
extern void T993f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_AGENT_TARGET].extend */
extern void T993f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T992f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T993f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_agent_open_target */
extern T0* T448f326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_AGENT_OPEN_TARGET.make */
extern T0* T1486c9(GE_context* ac, T0* a1);
/* detachable ET_AGENT_OPEN_TARGET.tokens */
extern T0* T1486f7(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_878 */
extern void T439f2085(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_877 */
extern void T439f2084(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_876 */
extern void T439f2083(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_875 */
extern void T439f2082(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_agent_identifier_target */
extern T0* T439f948(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_unqualified_call_expression */
extern T0* T448f351(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_IDENTIFIER.set_object_test_local */
extern void T179f124(GE_context* ac, T0* C, T1 a1);
/* detachable ET_OBJECT_TEST_LIST.index_of_name */
extern T6 T1407f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER.set_across_cursor */
extern void T179f123(GE_context* ac, T0* C, T1 a1);
/* detachable ET_ACROSS_COMPONENT_LIST.index_of_name */
extern T6 T1408f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LOCAL_COMMA_VARIABLE.set_used */
extern void T1694f11(GE_context* ac, T0* C, T1 a1);
/* detachable ET_LOCAL_VARIABLE.set_used */
extern void T1163f10(GE_context* ac, T0* C, T1 a1);
/* detachable ET_LOCAL_VARIABLE_LIST.local_variable */
extern T0* T330f4(GE_context* ac, T0* C, T6 a1);
/* detachable ET_LOCAL_VARIABLE_LIST.item */
extern T0* T330f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_IDENTIFIER.set_local */
extern void T179f122(GE_context* ac, T0* C, T1 a1);
/* detachable ET_LOCAL_VARIABLE_LIST.index_of */
extern T6 T330f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_COMMA_ARGUMENT.set_used */
extern void T1693f13(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_FORMAL_ARGUMENT.set_used */
extern void T251f12(GE_context* ac, T0* C, T1 a1);
/* detachable ET_FORMAL_ARGUMENT_LIST.index_of */
extern T6 T248f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_874 */
extern void T439f2081(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.set_start_closure */
extern void T439f2169(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].force */
extern void T909f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].force */
extern void T1569f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].fill_with */
extern void T1568f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].extend */
extern void T1568f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].resize */
extern void T909f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].aliased_resized_area */
extern T0* T1569f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].aliased_resized_area */
extern T0* T1568f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].new_capacity */
extern T6 T909f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].extendible */
extern T1 T909f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].force */
extern void T907f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].force */
extern void T1565f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_OBJECT_TEST_LIST].fill_with */
extern void T1564f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_OBJECT_TEST_LIST].extend */
extern void T1564f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].resize */
extern void T907f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1565f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1564f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].new_capacity */
extern T6 T907f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].extendible */
extern T1 T907f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T904f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T1168f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].fill_with */
extern void T1169f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].extend */
extern void T1169f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].resize */
extern void T904f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T1168f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T1169f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].new_capacity */
extern T6 T904f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].extendible */
extern T1 T904f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T903f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T1117f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].fill_with */
extern void T1118f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].extend */
extern void T1118f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].resize */
extern void T903f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1117f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1118f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].new_capacity */
extern T6 T903f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].extendible */
extern T1 T903f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_873 */
extern void T439f2080(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_872 */
extern void T439f2079(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].force */
extern void T1146f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_INLINE_AGENT].fill_with */
extern void T1147f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_INLINE_AGENT].extend */
extern void T1147f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].aliased_resized_area */
extern T0* T1146f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_INLINE_AGENT].aliased_resized_area */
extern T0* T1147f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.register_inline_agent */
extern void T439f2180(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.set_end_closure */
extern void T439f2184(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].remove */
extern void T909f13(GE_context* ac, T0* C);
/* [detachable] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].keep_head */
extern void T1568f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].set_count */
extern void T1568f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].item */
extern T0* T909f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].is_empty */
extern T1 T909f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST].force */
extern void T910f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT_LIST].force */
extern void T1570f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ACROSS_COMPONENT_LIST].fill_with */
extern void T1571f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ACROSS_COMPONENT_LIST].extend */
extern void T1571f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST].resize */
extern void T910f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT_LIST].aliased_resized_area */
extern T0* T1570f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ACROSS_COMPONENT_LIST].aliased_resized_area */
extern T0* T1571f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST].new_capacity */
extern T6 T910f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST].extendible */
extern T1 T910f5(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ACROSS_COMPONENT_LIST.wipe_out */
extern void T1408f10(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT].keep_head */
extern void T717f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* detachable ET_ACROSS_COMPONENT_LIST.fixed_array */
extern T0* T1408f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].remove */
extern void T907f13(GE_context* ac, T0* C);
/* [detachable] SPECIAL [detachable ET_OBJECT_TEST_LIST].keep_head */
extern void T1564f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_OBJECT_TEST_LIST].set_count */
extern void T1564f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].item */
extern T0* T907f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].is_empty */
extern T1 T907f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST].force */
extern void T908f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST_LIST].force */
extern void T1566f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_OBJECT_TEST_LIST].fill_with */
extern void T1567f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_OBJECT_TEST_LIST].extend */
extern void T1567f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST].resize */
extern void T908f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1566f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1567f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST].new_capacity */
extern T6 T908f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST].extendible */
extern T1 T908f5(GE_context* ac, T0* C, T6 a1);
/* detachable ET_OBJECT_TEST_LIST.wipe_out */
extern void T1407f10(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST].keep_head */
extern void T711f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* detachable ET_OBJECT_TEST_LIST.fixed_array */
extern T0* T1407f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].remove */
extern void T904f12(GE_context* ac, T0* C);
/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].keep_head */
extern void T1169f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].set_count */
extern void T1169f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].item */
extern T0* T904f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].is_empty */
extern T1 T904f5(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].remove */
extern void T903f12(GE_context* ac, T0* C);
/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].keep_head */
extern void T1118f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].set_count */
extern void T1118f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].item */
extern T0* T903f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].is_empty */
extern T1 T903f5(GE_context* ac, T0* C);
/* detachable ET_ACROSS_COMPONENT_LIST.cloned_across_component_list */
extern T0* T1408f3(GE_context* ac, T0* C);
/* detachable ET_ACROSS_COMPONENT_LIST.put_last */
extern void T1408f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT].force */
extern void T717f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ACROSS_COMPONENT].fill_with */
extern void T716f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ACROSS_COMPONENT].extend */
extern void T716f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ACROSS_COMPONENT_LIST.make_with_capacity */
extern T0* T1408c9(GE_context* ac, T6 a1);
/* detachable ET_OBJECT_TEST_LIST.cloned_object_test_list */
extern T0* T1407f3(GE_context* ac, T0* C);
/* detachable ET_OBJECT_TEST_LIST.put_last */
extern void T1407f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST].force */
extern void T711f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_NAMED_OBJECT_TEST].fill_with */
extern void T710f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_NAMED_OBJECT_TEST].extend */
extern void T710f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_OBJECT_TEST_LIST.make_with_capacity */
extern T0* T1407c9(GE_context* ac, T6 a1);
/* [detachable] ET_AST_FACTORY.new_external_procedure_inline_agent */
extern T0* T448f325(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1485f45(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_alias_clause */
extern void T1485f44(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1485f43(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1485f42(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make */
extern T0* T1485c37(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_procedure */
extern void T1485f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1485f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AGENT_IMPLICIT_CURRENT_TARGET.make */
extern T0* T1738c6(GE_context* ac, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.agent_keyword */
extern T0* T71f889(GE_context* ac, T0* C);
/* detachable ET_AGENT_KEYWORD.make */
extern T0* T917c13(GE_context* ac);
/* detachable ET_AGENT_KEYWORD.make_token */
extern void T917f15(GE_context* ac, T0* C, T0* a1);
/* detachable ET_AGENT_KEYWORD.make_leaf */
extern void T917f16(GE_context* ac, T0* C);
/* detachable ET_AGENT_KEYWORD.tokens */
extern T0* T917f7(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1485f15(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_external_language */
extern T0* T448f179(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_871 */
extern void T439f2078(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_870 */
extern void T439f2077(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_once_procedure_inline_agent */
extern T0* T448f324(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T1484f54(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1484f53(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.set_compound */
extern void T1484f52(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.set_keys */
extern void T1484f51(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.set_locals */
extern void T1484f50(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1484f49(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1484f48(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.make */
extern T0* T1484c43(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1484f55(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1484f39(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_once_compound */
extern T0* T448f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_COMPOUND.set_keyword */
extern void T329f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.once_keyword */
extern T0* T71f743(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_once */
extern T0* T402c54(GE_context* ac);
/* [detachable] ET_AST_FACTORY.tokens */
extern T0* T448f361(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_869 */
extern void T439f2076(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_868 */
extern void T439f2075(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_do_procedure_inline_agent */
extern T0* T448f323(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T1483f49(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1483f48(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.set_compound */
extern void T1483f47(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.set_locals */
extern void T1483f46(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1483f45(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1483f44(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.make */
extern T0* T1483c39(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1483f50(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1483f16(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_867 */
extern void T439f2074(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_866 */
extern void T439f2073(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_external_function_inline_agent */
extern T0* T448f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1482f46(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_alias_clause */
extern void T1482f45(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1482f44(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1482f43(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.make */
extern T0* T1482c38(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_function */
extern void T1482f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1482f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_RESULT.set_position */
extern void T300f35(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1482f34(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_colon_type */
extern T0* T448f170(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_865 */
extern void T439f2072(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_864 */
extern void T439f2071(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_once_function_inline_agent */
extern T0* T448f321(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T1481f55(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1481f54(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.set_compound */
extern void T1481f53(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.set_keys */
extern void T1481f52(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.set_locals */
extern void T1481f51(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1481f50(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1481f49(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.make */
extern T0* T1481c44(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1481f56(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1481f39(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_863 */
extern void T439f2070(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_862 */
extern void T439f2069(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_do_function_inline_agent */
extern T0* T448f320(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T1480f50(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1480f49(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.set_compound */
extern void T1480f48(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.set_locals */
extern void T1480f47(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1480f46(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1480f45(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.make */
extern T0* T1480c40(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1480f51(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1480f36(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_861 */
extern void T439f2068(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_860 */
extern void T439f2067(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.set_inline_agent_actual_arguments */
extern void T439f2179(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_859 */
extern void T439f2066(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].force */
extern void T1002f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CALL_AGENT].fill_with */
extern void T1004f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CALL_AGENT].extend */
extern void T1004f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T1002f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T1004f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_call_agent */
extern T0* T448f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_CALL_AGENT.set_agent_keyword */
extern void T1003f32(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CALL_AGENT.make */
extern T0* T1003c31(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* detachable ET_CALL_AGENT.tokens */
extern T0* T1003f9(GE_context* ac, T0* C);
/* detachable ET_CALL_AGENT.make_unqualified */
extern T0* T1003c29(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_AST_FACTORY.new_dot_feature_name */
extern T0* T448f319(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_858 */
extern void T439f2065(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_857 */
extern void T439f2064(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].force */
extern void T972f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ACROSS_EXPRESSION].fill_with */
extern void T974f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ACROSS_EXPRESSION].extend */
extern void T974f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T972f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T974f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.new_across_expression_header */
extern T0* T439f947(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_ACROSS_COMPONENT_LIST.force_last */
extern void T1408f11(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ACROSS_COMPONENT_LIST.resize */
extern void T1408f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT].aliased_resized_area */
extern T0* T717f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ACROSS_COMPONENT].aliased_resized_area */
extern T0* T716f4(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ACROSS_COMPONENT_LIST.new_capacity */
extern T6 T1408f8(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ACROSS_COMPONENT_LIST.capacity */
extern T6 T1408f7(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_across_component_list */
extern T0* T439f966(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST].remove */
extern void T910f12(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_ACROSS_COMPONENT_LIST].keep_head */
extern void T1571f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ACROSS_COMPONENT_LIST].set_count */
extern void T1571f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST].item */
extern T0* T910f8(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST].is_empty */
extern T1 T910f7(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_across_all_expression */
extern T0* T448f360(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* detachable ET_ACROSS_EXPRESSION.set_variant_part */
extern void T973f38(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ACROSS_EXPRESSION.set_invariant_part */
extern void T973f37(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ACROSS_EXPRESSION.make_all */
extern T0* T973c32(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_ACROSS_EXPRESSION.create_unfolded_form */
extern void T973f41(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.across_keyword */
extern T0* T71f888(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_across */
extern T0* T402c60(GE_context* ac);
/* detachable ET_ACROSS_EXPRESSION.tokens */
extern T0* T973f16(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.true_keyword */
extern T0* T71f294(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.make */
extern T0* T1419c39(GE_context* ac);
/* detachable ET_TRUE_CONSTANT.make_token */
extern void T1419f42(GE_context* ac, T0* C, T0* a1);
/* detachable ET_TRUE_CONSTANT.make_leaf */
extern void T1419f43(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.tokens */
extern T0* T1419f11(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_856 */
extern void T439f2063(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_across_all_expression */
extern T0* T439f946(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* detachable ET_ACROSS_EXPRESSION.set_end_keyword */
extern void T973f39(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ACROSS_EXPRESSION.set_all */
extern void T973f40(GE_context* ac, T0* C, T1 a1);
/* detachable ET_ACROSS_EXPRESSION.set_iteration_conditional */
extern void T973f35(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ACROSS_EXPRESSION.set_until_conditional */
extern void T973f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_conditional */
extern T0* T448f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_KEYWORD_EXPRESSION.make */
extern T0* T1697c4(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_KEYWORD.is_inspect */
extern T1 T402f29(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_if */
extern T1 T402f28(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_855 */
extern void T439f2062(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_across_some_expression */
extern T0* T439f945(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* detachable ET_ACROSS_EXPRESSION.set_some */
extern void T973f36(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_854 */
extern void T439f2061(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].force */
extern void T1032f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CONSTANT].fill_with */
extern void T1033f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CONSTANT].extend */
extern void T1033f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].aliased_resized_area */
extern T0* T1032f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CONSTANT].aliased_resized_area */
extern T0* T1033f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_853 */
extern void T439f2060(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_852 */
extern void T439f2059(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_851 */
extern void T439f2058(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_850 */
extern void T439f2057(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_849 */
extern void T439f2056(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].force */
extern void T1219f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_STRIP_EXPRESSION].fill_with */
extern void T1221f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_STRIP_EXPRESSION].extend */
extern void T1221f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_STRIP_EXPRESSION.put_first */
extern void T1220f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME_ITEM].force */
extern void T1709f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_FEATURE_NAME_ITEM].fill_with */
extern void T1708f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_FEATURE_NAME_ITEM].extend */
extern void T1708f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_STRIP_EXPRESSION.fixed_array */
extern T0* T1220f13(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME_ITEM].default_create */
extern T0* T1709c2(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_848 */
extern void T439f2055(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T1219f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T1221f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_strip_expression */
extern T0* T448f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* detachable ET_STRIP_EXPRESSION.set_strip_keyword */
extern void T1220f30(GE_context* ac, T0* C, T0* a1);
/* detachable ET_STRIP_EXPRESSION.make_with_capacity */
extern T0* T1220c27(GE_context* ac, T6 a1);
/* detachable ET_STRIP_EXPRESSION.make_with_capacity */
extern void T1220f27p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME_ITEM].make */
extern T0* T1709f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_FEATURE_NAME_ITEM].make_empty */
extern T0* T1708c4(GE_context* ac, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.strip_keyword */
extern T0* T71f894(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_strip */
extern T0* T402c59(GE_context* ac);
/* detachable ET_STRIP_EXPRESSION.tokens */
extern T0* T1220f11(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.last_keyword */
extern T0* T439f899(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [detachable ET_KEYWORD].item */
extern T0* T905f7(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_847 */
extern void T439f2054(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_846 */
extern void T439f2053(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.add_keyword */
extern void T439f2156(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_KEYWORD].force */
extern void T905f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].force */
extern void T914f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_KEYWORD].fill_with */
extern void T915f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_KEYWORD].extend */
extern void T915f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_KEYWORD].resize */
extern void T905f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T914f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T915f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_KEYWORD].new_capacity */
extern T6 T905f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_KEYWORD].extendible */
extern T1 T905f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_845 */
extern void T439f2052(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.remove_keyword */
extern void T439f2154(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [detachable ET_KEYWORD].remove */
extern void T905f10(GE_context* ac, T0* C);
/* [detachable] SPECIAL [detachable ET_KEYWORD].keep_head */
extern void T915f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_KEYWORD].set_count */
extern void T915f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_844 */
extern void T439f2051(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_843 */
extern void T439f2050(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].force */
extern void T1182f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_MANIFEST_TUPLE].fill_with */
extern void T1183f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_MANIFEST_TUPLE].extend */
extern void T1183f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_842 */
extern void T439f2049(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T1182f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T1183f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_manifest_tuple */
extern T0* T448f316(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] ET_MANIFEST_TUPLE.set_left_symbol */
extern void T280f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_841 */
extern void T439f2048(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_840 */
extern void T439f2047(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_839 */
extern void T439f2046(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_838 */
extern void T439f2045(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_837 */
extern void T439f2044(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].force */
extern void T1173f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_MANIFEST_ARRAY].fill_with */
extern void T1175f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_MANIFEST_ARRAY].extend */
extern void T1175f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_MANIFEST_ARRAY.put_first */
extern void T1174f30(GE_context* ac, T0* C, T0* a1);
/* detachable ET_MANIFEST_ARRAY.fixed_array */
extern T0* T1174f13(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_836 */
extern void T439f2043(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T1173f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T1175f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_manifest_array */
extern T0* T448f315(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* detachable ET_MANIFEST_ARRAY.set_left_symbol */
extern void T1174f31(GE_context* ac, T0* C, T0* a1);
/* detachable ET_MANIFEST_ARRAY.make_with_capacity */
extern T0* T1174c27(GE_context* ac, T6 a1);
/* detachable ET_MANIFEST_ARRAY.make_with_capacity */
extern void T1174f27p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.right_array_symbol */
extern T0* T71f703(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.make_right_array */
extern T0* T342c96(GE_context* ac);
/* [detachable] ET_TOKEN_CONSTANTS.left_array_symbol */
extern T0* T71f892(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.make_left_array */
extern T0* T342c89(GE_context* ac);
/* detachable ET_MANIFEST_ARRAY.tokens */
extern T0* T1174f11(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_835 */
extern void T439f2042(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_834 */
extern void T439f2041(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_ARRAY.set_cast_type */
extern void T1174f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_833 */
extern void T439f2040(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_832 */
extern void T439f2039(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_831 */
extern void T439f2038(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_830 */
extern void T439f2037(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].force */
extern void T1187f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].fill_with */
extern void T1189f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].extend */
extern void T1189f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T1187f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T1189f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_parenthesized_expression */
extern T0* T448f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_PARENTHESIZED_EXPRESSION.set_left_parenthesis */
extern void T1188f23(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PARENTHESIZED_EXPRESSION.make */
extern T0* T1188c21(GE_context* ac, T0* a1);
/* detachable ET_PARENTHESIZED_EXPRESSION.tokens */
extern T0* T1188f7(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_829 */
extern void T439f2036(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].force */
extern void T978f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].fill_with */
extern void T979f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].extend */
extern void T979f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_828 */
extern void T439f2035(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T978f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T979f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_bracket_arguments */
extern T0* T448f313(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] ET_ACTUAL_ARGUMENT_LIST.make_bracketed_with_capacity */
extern T0* T273c17(GE_context* ac, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_827 */
extern void T439f2034(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_826 */
extern void T439f2033(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].force */
extern void T999f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_BRACKET_EXPRESSION].fill_with */
extern void T1001f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_BRACKET_EXPRESSION].extend */
extern void T1001f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T999f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T1001f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_825 */
extern void T439f2032(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_bracket_expression */
extern T0* T448f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_BRACKET_EXPRESSION.make */
extern T0* T1000c24(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_824 */
extern void T439f2031(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_823 */
extern void T439f2030(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_822 */
extern void T439f2029(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_821 */
extern void T439f2028(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_820 */
extern void T439f2027(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_819 */
extern void T439f2026(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_818 */
extern void T439f2025(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_817 */
extern void T439f2024(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_816 */
extern void T439f2023(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].force */
extern void T1089f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_EXPRESSION].fill_with */
extern void T1090f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_EXPRESSION].extend */
extern void T1090f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].aliased_resized_area */
extern T0* T1089f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_EXPRESSION].aliased_resized_area */
extern T0* T1090f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_815 */
extern void T439f2022(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.raise_error */
extern void T439f2151(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.ise_17_11_0 */
extern T0* T439f944(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_814 */
extern void T439f2021(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_813 */
extern void T439f2020(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_812 */
extern void T439f2019(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_811 */
extern void T439f2018(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_810 */
extern void T439f2017(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_809 */
extern void T439f2016(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_once_manifest_string */
extern T0* T439f943(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.register_inline_constant */
extern void T72f316(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_MANIFEST_STRING.set_id */
extern void T1479f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_once_manifest_string */
extern T0* T448f359(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ONCE_MANIFEST_STRING.set_once_keyword */
extern void T1479f25(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_MANIFEST_STRING.make */
extern T0* T1479c23(GE_context* ac, T0* a1);
/* detachable ET_ONCE_MANIFEST_STRING.tokens */
extern T0* T1479f7(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_808 */
extern void T439f2015(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_807 */
extern void T439f2014(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_806 */
extern void T439f2013(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_805 */
extern void T439f2012(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_804 */
extern void T439f2011(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_803 */
extern void T439f2010(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_802 */
extern void T439f2009(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_801 */
extern void T439f2008(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_601_800 */
extern void T439f1190(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_800 */
extern void T439f2007(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_799 */
extern void T439f2006(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_798 */
extern void T439f2005(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_797 */
extern void T439f2004(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_796 */
extern void T439f2003(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_named_object_test */
extern T0* T439f942(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_OBJECT_TEST_LIST.force_last */
extern void T1407f11(GE_context* ac, T0* C, T0* a1);
/* detachable ET_OBJECT_TEST_LIST.resize */
extern void T1407f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T711f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T710f4(GE_context* ac, T0* C, T6 a1);
/* detachable ET_OBJECT_TEST_LIST.new_capacity */
extern T6 T1407f8(GE_context* ac, T0* C, T6 a1);
/* detachable ET_OBJECT_TEST_LIST.capacity */
extern T6 T1407f7(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_object_test_list */
extern T0* T439f967(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST].remove */
extern void T908f12(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_OBJECT_TEST_LIST].keep_head */
extern void T1567f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_OBJECT_TEST_LIST].set_count */
extern void T1567f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST].item */
extern T0* T908f8(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST].is_empty */
extern T1 T908f7(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_named_object_test */
extern T0* T448f358(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NAMED_OBJECT_TEST.set_attached_keyword */
extern void T709f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NAMED_OBJECT_TEST.make */
extern T0* T709c25(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NAMED_OBJECT_TEST.make_object_test */
extern void T709f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NAMED_OBJECT_TEST.tokens */
extern T0* T709f10(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_795 */
extern void T439f2002(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_794 */
extern void T439f2001(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_object_test */
extern T0* T448f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_OBJECT_TEST.set_attached_keyword */
extern void T307f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST.make */
extern T0* T307c23(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_OBJECT_TEST.tokens */
extern T0* T307f10(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_793 */
extern void T439f2000(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_792 */
extern void T439f1999(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_old_object_test */
extern T0* T439f941(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_AST_FACTORY.new_old_object_test */
extern T0* T448f357(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* detachable ET_OLD_OBJECT_TEST.set_left_brace */
extern void T1478f30(GE_context* ac, T0* C, T0* a1);
/* detachable ET_OLD_OBJECT_TEST.make */
extern T0* T1478c28(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_TOKEN_CONSTANTS.colon_symbol */
extern T0* T71f700(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.make_colon */
extern T0* T342c93(GE_context* ac);
/* detachable ET_OLD_OBJECT_TEST.tokens */
extern T0* T1478f12(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.ise_6_1_0 */
extern T0* T439f929(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_791 */
extern void T439f1998(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_old_expression */
extern T0* T448f310(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_OLD_EXPRESSION.set_old_keyword */
extern void T1477f22(GE_context* ac, T0* C, T0* a1);
/* detachable ET_OLD_EXPRESSION.make */
extern T0* T1477c20(GE_context* ac, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.old_keyword */
extern T0* T71f1516(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_old */
extern T0* T402c57(GE_context* ac);
/* detachable ET_OLD_EXPRESSION.tokens */
extern T0* T1477f7(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_790 */
extern void T439f1997(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_prefix_expression */
extern T0* T448f308(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_PREFIX_EXPRESSION.make */
extern T0* T1476c25(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_AST_FACTORY.new_prefix_free_operator */
extern T0* T448f309(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FREE_OPERATOR.set_prefix */
extern void T938f49(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.tokens */
extern T0* T938f9(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_789 */
extern void T439f1996(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_788 */
extern void T439f1995(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_prefix_minus_expression */
extern T0* T439f940(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T439f940ot1(T0* a1, T0** a2);
extern T1 T439f940ot2(T0* a1, T0** a2);
/* [detachable] ET_AST_FACTORY.new_prefix_minus_operator */
extern T0* T448f356(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYMBOL_OPERATOR.set_prefix_minus */
extern void T959f98(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.tokens */
extern T0* T959f7(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_787 */
extern void T439f1994(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_prefix_plus_expression */
extern T0* T439f939(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T439f939ot1(T0* a1, T0** a2);
extern T1 T439f939ot2(T0* a1, T0** a2);
/* [detachable] ET_AST_FACTORY.new_prefix_plus_operator */
extern T0* T448f355(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYMBOL_OPERATOR.set_prefix_plus */
extern void T959f97(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_786 */
extern void T439f1993(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_785 */
extern void T439f1992(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_784 */
extern void T439f1991(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_783 */
extern void T439f1990(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_782 */
extern void T439f1989(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_781 */
extern void T439f1988(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_780 */
extern void T439f1987(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_779 */
extern void T439f1986(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_778 */
extern void T439f1985(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_777 */
extern void T439f1984(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_manifest_type */
extern T0* T448f307(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_MANIFEST_TYPE.make */
extern T0* T1475c21(GE_context* ac, T0* a1);
/* detachable ET_MANIFEST_TYPE.tokens */
extern T0* T1475f7(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_776 */
extern void T439f1983(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_775 */
extern void T439f1982(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_774 */
extern void T439f1981(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_773 */
extern void T439f1980(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_772 */
extern void T439f1979(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_771 */
extern void T439f1978(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_object_equality_expression */
extern T0* T448f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T308c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_770 */
extern void T439f1977(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_769 */
extern void T439f1976(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_equality_expression */
extern T0* T448f305(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_EQUALITY_EXPRESSION.make */
extern T0* T309c20(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_768 */
extern void T439f1975(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_767 */
extern void T439f1974(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_expression */
extern T0* T448f300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_INFIX_EXPRESSION.make */
extern T0* T1472c25(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_766 */
extern void T439f1973(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_or_else_operator */
extern T0* T448f304(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.set_or_keyword */
extern void T1474f35(GE_context* ac, T0* C, T0* a1);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.make */
extern T0* T1474c34(GE_context* ac);
/* [detachable] ET_TOKEN_CONSTANTS.else_keyword */
extern T0* T71f712(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_else */
extern T0* T402c71(GE_context* ac);
/* [detachable] ET_TOKEN_CONSTANTS.or_keyword */
extern T0* T71f1515(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.make_or */
extern T0* T946c47(GE_context* ac);
/* detachable ET_KEYWORD_OPERATOR.make_token */
extern void T946f53(GE_context* ac, T0* C, T0* a1);
/* detachable ET_KEYWORD_OPERATOR.make_leaf */
extern void T946f54(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.tokens */
extern T0* T946f7(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.tokens */
extern T0* T1474f9(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_765 */
extern void T439f1972(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_and_then_operator */
extern T0* T448f303(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INFIX_AND_THEN_OPERATOR.set_and_keyword */
extern void T1473f35(GE_context* ac, T0* C, T0* a1);
/* detachable ET_INFIX_AND_THEN_OPERATOR.make */
extern T0* T1473c34(GE_context* ac);
/* [detachable] ET_TOKEN_CONSTANTS.then_keyword */
extern T0* T71f716(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_then */
extern T0* T402c75(GE_context* ac);
/* [detachable] ET_TOKEN_CONSTANTS.and_keyword */
extern T0* T71f1514(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.make_and */
extern T0* T946c49(GE_context* ac);
/* detachable ET_INFIX_AND_THEN_OPERATOR.tokens */
extern T0* T1473f9(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_764 */
extern void T439f1971(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_763 */
extern void T439f1970(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_762 */
extern void T439f1969(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_761 */
extern void T439f1968(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_760 */
extern void T439f1967(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_759 */
extern void T439f1966(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_758 */
extern void T439f1965(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_757 */
extern void T439f1964(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_756 */
extern void T439f1963(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_755 */
extern void T439f1962(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_754 */
extern void T439f1961(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_753 */
extern void T439f1960(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_752 */
extern void T439f1959(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_minus_operator */
extern T0* T448f302(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYMBOL_OPERATOR.set_infix_minus */
extern void T959f96(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_751 */
extern void T439f1958(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_plus_operator */
extern T0* T448f301(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYMBOL_OPERATOR.set_infix_plus */
extern void T959f95(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_750 */
extern void T439f1957(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_free_operator */
extern T0* T448f299(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FREE_OPERATOR.set_infix */
extern void T938f48(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_749 */
extern void T439f1956(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_748 */
extern void T439f1955(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_747 */
extern void T439f1954(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].force */
extern void T1248f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_WRITABLE].fill_with */
extern void T1249f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_WRITABLE].extend */
extern void T1249f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T1248f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T1249f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_746 */
extern void T439f1953(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_writable */
extern T0* T439f938(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_745 */
extern void T439f1952(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_expression_address */
extern T0* T448f298(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_EXPRESSION_ADDRESS.set_dollar */
extern void T1471f22(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXPRESSION_ADDRESS.make */
extern T0* T1471c20(GE_context* ac, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.dollar_symbol */
extern T0* T71f1513(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.make_dollar */
extern T0* T342c85(GE_context* ac);
/* detachable ET_EXPRESSION_ADDRESS.tokens */
extern T0* T1471f6(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_744 */
extern void T439f1951(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_result_address */
extern T0* T448f297(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_RESULT_ADDRESS.set_dollar */
extern void T1470f22(GE_context* ac, T0* C, T0* a1);
/* detachable ET_RESULT_ADDRESS.make */
extern T0* T1470c20(GE_context* ac);
/* detachable ET_RESULT_ADDRESS.tokens */
extern T0* T1470f6(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_743 */
extern void T439f1950(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_current_address */
extern T0* T448f296(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CURRENT_ADDRESS.set_dollar */
extern void T1469f22(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CURRENT_ADDRESS.make */
extern T0* T1469c20(GE_context* ac);
/* detachable ET_CURRENT_ADDRESS.tokens */
extern T0* T1469f6(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_742 */
extern void T439f1949(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_feature_address */
extern T0* T439f937(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T439f937ot1(T0* a1, T0** a2);
/* [detachable] ET_AST_FACTORY.new_feature_address */
extern T0* T448f354(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_FEATURE_ADDRESS.set_dollar */
extern void T1468f22(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FEATURE_ADDRESS.make */
extern T0* T1468c20(GE_context* ac, T0* a1);
/* detachable ET_FEATURE_ADDRESS.tokens */
extern T0* T1468f6(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_741 */
extern void T439f1948(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].force */
extern void T1091f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_EXPRESSION_ITEM].fill_with */
extern void T1092f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_EXPRESSION_ITEM].extend */
extern void T1092f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T1091f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T1092f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_expression_comma */
extern T0* T448f295(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_740 */
extern void T439f1947(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_739 */
extern void T439f1946(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_actual_arguments */
extern T0* T448f294(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_738 */
extern void T439f1945(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_737 */
extern void T439f1944(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_736 */
extern void T439f1943(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_735 */
extern void T439f1942(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_734 */
extern void T439f1941(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_733 */
extern void T439f1940(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_qualified_call_expression */
extern T0* T448f291(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_EIFFEL_PARSER.new_dot_feature_name */
extern T0* T439f928(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_732 */
extern void T439f1939(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.ise_5_7_59914 */
extern T0* T439f911(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_731 */
extern void T439f1938(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_730 */
extern void T439f1937(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_729 */
extern void T439f1936(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_728 */
extern void T439f1935(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_727 */
extern void T439f1934(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_726 */
extern void T439f1933(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_725 */
extern void T439f1932(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_724 */
extern void T439f1931(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_unqualified_call_expression */
extern T0* T439f936(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_723 */
extern void T439f1930(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_precursor_expression */
extern T0* T448f293(GE_context* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_PRECURSOR_EXPRESSION.set_precursor_keyword */
extern void T1467f27(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PRECURSOR_EXPRESSION.set_parent_prefixed */
extern void T1467f26(GE_context* ac, T0* C, T1 a1);
/* detachable ET_PRECURSOR_EXPRESSION.make */
extern T0* T1467c24(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.precursor_keyword */
extern T0* T71f1512(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_KEYWORD.make */
extern T0* T920c21(GE_context* ac);
/* detachable ET_PRECURSOR_KEYWORD.make_token */
extern void T920f23(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PRECURSOR_KEYWORD.make_leaf */
extern void T920f24(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_KEYWORD.tokens */
extern T0* T920f7(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_EXPRESSION.tokens */
extern T0* T1467f9(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_precursor_class_name */
extern T0* T448f289(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_722 */
extern void T439f1929(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_721 */
extern void T439f1928(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].force */
extern void T1216f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].fill_with */
extern void T1218f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].extend */
extern void T1218f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1216f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1218f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_static_call_expression */
extern T0* T448f292(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_STATIC_CALL_EXPRESSION.set_feature_keyword */
extern void T1217f30(GE_context* ac, T0* C, T0* a1);
/* detachable ET_STATIC_CALL_EXPRESSION.make */
extern T0* T1217c28(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* detachable ET_STATIC_CALL_EXPRESSION.make_qualified_call */
extern void T1217f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_720 */
extern void T439f1927(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_719 */
extern void T439f1926(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_718 */
extern void T439f1925(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_717 */
extern void T439f1924(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_716 */
extern void T439f1923(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_715 */
extern void T439f1922(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_714 */
extern void T439f1921(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].force */
extern void T1151f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_INSTRUCTION].fill_with */
extern void T1153f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_INSTRUCTION].extend */
extern void T1153f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T1151f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T1153f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_static_call_instruction */
extern T0* T448f290(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_STATIC_CALL_INSTRUCTION.set_feature_keyword */
extern void T1466f9(GE_context* ac, T0* C, T0* a1);
/* detachable ET_STATIC_CALL_INSTRUCTION.make */
extern T0* T1466c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* detachable ET_STATIC_CALL_INSTRUCTION.make_qualified_call */
extern void T1466f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_713 */
extern void T439f1920(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_712 */
extern void T439f1919(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_precursor_instruction */
extern T0* T448f288(GE_context* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_PRECURSOR_INSTRUCTION.set_precursor_keyword */
extern void T1464f11(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PRECURSOR_INSTRUCTION.set_parent_prefixed */
extern void T1464f10(GE_context* ac, T0* C, T1 a1);
/* detachable ET_PRECURSOR_INSTRUCTION.make */
extern T0* T1464c9(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_PRECURSOR_INSTRUCTION.tokens */
extern T0* T1464f7(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_711 */
extern void T439f1918(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_710 */
extern void T439f1917(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_qualified_call_instruction */
extern T0* T448f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_709 */
extern void T439f1916(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_708 */
extern void T439f1915(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_unqualified_call_instruction */
extern T0* T439f935(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_AST_FACTORY.new_unqualified_call_instruction */
extern T0* T448f353(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_UNQUALIFIED_CALL_INSTRUCTION.make */
extern T0* T1682c6(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_707 */
extern void T439f1914(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].force */
extern void T1176f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING_ITEM].fill_with */
extern void T1178f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING_ITEM].extend */
extern void T1178f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T1176f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T1178f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_manifest_string_comma */
extern T0* T448f286(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_706 */
extern void T439f1913(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].force */
extern void T1179f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING_LIST].fill_with */
extern void T1181f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING_LIST].extend */
extern void T1181f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_MANIFEST_STRING_LIST.put_first */
extern void T1180f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_MANIFEST_STRING_ITEM].force */
extern void T1763f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_MANIFEST_STRING_ITEM].fill_with */
extern void T1762f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_MANIFEST_STRING_ITEM].extend */
extern void T1762f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_MANIFEST_STRING_LIST.fixed_array */
extern T0* T1180f6(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T1763c2(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_705 */
extern void T439f1912(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T1179f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T1181f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_manifest_string_list */
extern T0* T448f285(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* detachable ET_MANIFEST_STRING_LIST.make_with_capacity */
extern T0* T1180c9(GE_context* ac, T6 a1);
/* detachable ET_MANIFEST_STRING_LIST.tokens */
extern T0* T1180f5(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_STRING_LIST.make_with_capacity */
extern void T1180f9p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_MANIFEST_STRING_ITEM].make */
extern T0* T1763f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_MANIFEST_STRING_ITEM].make_empty */
extern T0* T1762c4(GE_context* ac, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_704 */
extern void T439f1911(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_703 */
extern void T439f1910(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_702 */
extern void T439f1909(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_701 */
extern void T439f1908(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_700 */
extern void T439f1907(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].force */
extern void T1069f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_DEBUG_INSTRUCTION].fill_with */
extern void T1071f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_DEBUG_INSTRUCTION].extend */
extern void T1071f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T1069f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T1071f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_debug_instruction */
extern T0* T448f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_DEBUG_INSTRUCTION.make */
extern T0* T1070c5(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_DEBUG_INSTRUCTION.tokens */
extern T0* T1070f4(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_debug_compound */
extern T0* T448f283(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.debug_keyword */
extern T0* T71f720(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_debug */
extern T0* T402c79(GE_context* ac);
/* detachable ET_COMPOUND.make */
extern T0* T329c9(GE_context* ac);
/* detachable ET_COMPOUND.make */
extern void T329f9p1(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INSTRUCTION].make */
extern T0* T1892f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_INSTRUCTION].make_empty */
extern T0* T1890c4(GE_context* ac, T6 a1);
/* detachable ET_COMPOUND.fixed_array */
extern T0* T329f7(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INSTRUCTION].default_create */
extern T0* T1892c2(GE_context* ac);
/* [detachable] ET_TOKEN_CONSTANTS.do_keyword */
extern T0* T71f709(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_do */
extern T0* T402c68(GE_context* ac);
/* detachable ET_COMPOUND.tokens */
extern T0* T329f6(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_699 */
extern void T439f1906(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].force */
extern void T1029f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CONDITIONAL].fill_with */
extern void T1031f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CONDITIONAL].extend */
extern void T1031f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T1029f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T1031f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_698 */
extern void T439f1905(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_697 */
extern void T439f1904(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].force */
extern void T975f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ACROSS_INSTRUCTION].fill_with */
extern void T977f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ACROSS_INSTRUCTION].extend */
extern void T977f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T975f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T977f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.new_across_instruction_header */
extern T0* T439f934(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_AST_FACTORY.new_across_instruction */
extern T0* T448f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* detachable ET_ACROSS_INSTRUCTION.set_variant_part */
extern void T976f21(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ACROSS_INSTRUCTION.set_invariant_part */
extern void T976f20(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ACROSS_INSTRUCTION.make */
extern T0* T976c16(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_ACROSS_INSTRUCTION.create_unfolded_form */
extern void T976f23(GE_context* ac, T0* C);
/* detachable ET_ACROSS_INSTRUCTION.tokens */
extern T0* T976f14(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_696 */
extern void T439f1903(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].force */
extern void T1011f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CHOICE_CONSTANT].fill_with */
extern void T1013f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CHOICE_CONSTANT].extend */
extern void T1013f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T1011f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T1013f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_695 */
extern void T439f1902(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_choice_attribute_constant */
extern T0* T439f933(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_694 */
extern void T439f1901(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_693 */
extern void T439f1900(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_692 */
extern void T439f1899(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE].force */
extern void T1008f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CHOICE].fill_with */
extern void T1010f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CHOICE].extend */
extern void T1010f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE].aliased_resized_area */
extern T0* T1008f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CHOICE].aliased_resized_area */
extern T0* T1010f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_choice_range */
extern T0* T448f282(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_CHOICE_RANGE.make */
extern T0* T1463c7(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.dotdot_symbol */
extern T0* T71f705(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.make_dotdot */
extern T0* T342c98(GE_context* ac);
/* detachable ET_CHOICE_RANGE.tokens */
extern T0* T1463f4(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_691 */
extern void T439f1898(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_690 */
extern void T439f1897(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].force */
extern void T1014f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CHOICE_ITEM].fill_with */
extern void T1016f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CHOICE_ITEM].extend */
extern void T1016f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T1014f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T1016f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_choice_comma */
extern T0* T448f281(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_689 */
extern void T439f1896(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].force */
extern void T1017f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CHOICE_LIST].fill_with */
extern void T1019f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CHOICE_LIST].extend */
extern void T1019f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CHOICE_LIST.put_first */
extern void T1018f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CHOICE_ITEM].force */
extern void T1741f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CHOICE_ITEM].fill_with */
extern void T1740f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CHOICE_ITEM].extend */
extern void T1740f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CHOICE_LIST.fixed_array */
extern T0* T1018f5(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CHOICE_ITEM].default_create */
extern T0* T1741c2(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_688 */
extern void T439f1895(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T1017f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T1019f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_choice_list */
extern T0* T448f280(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable ET_CHOICE_LIST.set_when_keyword */
extern void T1018f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CHOICE_LIST.make_with_capacity */
extern T0* T1018c8(GE_context* ac, T6 a1);
/* detachable ET_CHOICE_LIST.make_with_capacity */
extern void T1018f8p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CHOICE_ITEM].make */
extern T0* T1741f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_CHOICE_ITEM].make_empty */
extern T0* T1740c4(GE_context* ac, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.when_keyword */
extern T0* T71f717(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_when */
extern T0* T402c76(GE_context* ac);
/* detachable ET_CHOICE_LIST.tokens */
extern T0* T1018f4(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_687 */
extern void T439f1894(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_686 */
extern void T439f1893(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_685 */
extern void T439f1892(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_684 */
extern void T439f1891(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_683 */
extern void T439f1890(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].force */
extern void T1242f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_WHEN_PART].fill_with */
extern void T1244f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_WHEN_PART].extend */
extern void T1244f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T1242f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T1244f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_when_part */
extern T0* T448f279(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_WHEN_PART.make */
extern T0* T1243c3(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_682 */
extern void T439f1889(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].force */
extern void T1245f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_WHEN_PART_LIST].fill_with */
extern void T1247f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_WHEN_PART_LIST].extend */
extern void T1247f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_WHEN_PART_LIST.put_first */
extern void T1246f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_WHEN_PART].force */
extern void T1770f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_WHEN_PART].fill_with */
extern void T1769f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_WHEN_PART].extend */
extern void T1769f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_WHEN_PART_LIST.fixed_array */
extern T0* T1246f3(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_WHEN_PART].default_create */
extern T0* T1770c2(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_681 */
extern void T439f1888(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T1245f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T1247f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_when_part_list */
extern T0* T448f278(GE_context* ac, T0* C, T6 a1);
/* detachable ET_WHEN_PART_LIST.make_with_capacity */
extern T0* T1246c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_WHEN_PART].make */
extern T0* T1770f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_WHEN_PART].make_empty */
extern T0* T1769c4(GE_context* ac, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_680 */
extern void T439f1887(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_679 */
extern void T439f1886(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_678 */
extern void T439f1885(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].force */
extern void T1148f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_INSPECT_INSTRUCTION].fill_with */
extern void T1150f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_INSPECT_INSTRUCTION].extend */
extern void T1150f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T1148f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T1150f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_inspect_instruction */
extern T0* T448f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_INSPECT_INSTRUCTION.set_else_compound */
extern void T1149f8(GE_context* ac, T0* C, T0* a1);
/* detachable ET_INSPECT_INSTRUCTION.make */
extern T0* T1149c7(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_INSPECT_INSTRUCTION.tokens */
extern T0* T1149f5(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_677 */
extern void T439f1884(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_676 */
extern void T439f1883(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].force */
extern void T1072f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ELSEIF_EXPRESSION].fill_with */
extern void T1074f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ELSEIF_EXPRESSION].extend */
extern void T1074f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].aliased_resized_area */
extern T0* T1072f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_ELSEIF_EXPRESSION].aliased_resized_area */
extern T0* T1074f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_elseif_expression */
extern T0* T448f276(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ELSEIF_EXPRESSION.make */
extern T0* T1073c7(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_ELSEIF_EXPRESSION.tokens */
extern T0* T1073f4(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_675 */
extern void T439f1882(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].force */
extern void T1075f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].fill_with */
extern void T1077f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].extend */
extern void T1077f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ELSEIF_EXPRESSION_LIST.put_first */
extern void T1076f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_EXPRESSION].force */
extern void T1751f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ELSEIF_EXPRESSION].fill_with */
extern void T1750f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ELSEIF_EXPRESSION].extend */
extern void T1750f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ELSEIF_EXPRESSION_LIST.fixed_array */
extern T0* T1076f3(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_EXPRESSION].default_create */
extern T0* T1751c2(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_674 */
extern void T439f1881(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].aliased_resized_area */
extern T0* T1075f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].aliased_resized_area */
extern T0* T1077f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_elseif_expression_list */
extern T0* T448f275(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ELSEIF_EXPRESSION_LIST.make_with_capacity */
extern T0* T1076c6(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_EXPRESSION].make */
extern T0* T1751f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ELSEIF_EXPRESSION].make_empty */
extern T0* T1750c4(GE_context* ac, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_673 */
extern void T439f1880(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_672 */
extern void T439f1879(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].force */
extern void T1126f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_IF_EXPRESSION].fill_with */
extern void T1128f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_IF_EXPRESSION].extend */
extern void T1128f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].aliased_resized_area */
extern T0* T1126f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_IF_EXPRESSION].aliased_resized_area */
extern T0* T1128f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_if_expression */
extern T0* T448f274(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* detachable ET_IF_EXPRESSION.set_elseif_parts */
extern void T1127f27(GE_context* ac, T0* C, T0* a1);
/* detachable ET_IF_EXPRESSION.make */
extern T0* T1127c26(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* detachable ET_IF_EXPRESSION.tokens */
extern T0* T1127f11(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_671 */
extern void T439f1878(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_670 */
extern void T439f1877(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].force */
extern void T1078f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ELSEIF_PART].fill_with */
extern void T1080f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ELSEIF_PART].extend */
extern void T1080f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T1078f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T1080f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_elseif_part */
extern T0* T448f273(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ELSEIF_PART.make */
extern T0* T1079c4(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_669 */
extern void T439f1876(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].force */
extern void T1081f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ELSEIF_PART_LIST].fill_with */
extern void T1083f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ELSEIF_PART_LIST].extend */
extern void T1083f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ELSEIF_PART_LIST.put_first */
extern void T1082f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_PART].force */
extern void T1753f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ELSEIF_PART].fill_with */
extern void T1752f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ELSEIF_PART].extend */
extern void T1752f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ELSEIF_PART_LIST.fixed_array */
extern T0* T1082f3(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_PART].default_create */
extern T0* T1753c2(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_668 */
extern void T439f1875(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T1081f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T1083f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_elseif_part_list */
extern T0* T448f272(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ELSEIF_PART_LIST.make_with_capacity */
extern T0* T1082c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_PART].make */
extern T0* T1753f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ELSEIF_PART].make_empty */
extern T0* T1752c4(GE_context* ac, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_667 */
extern void T439f1874(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_666 */
extern void T439f1873(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].force */
extern void T1129f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_IF_INSTRUCTION].fill_with */
extern void T1131f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_IF_INSTRUCTION].extend */
extern void T1131f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T1129f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T1131f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_if_instruction */
extern T0* T448f271(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_IF_INSTRUCTION.set_else_compound */
extern void T1130f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_IF_INSTRUCTION.set_elseif_parts */
extern void T1130f9(GE_context* ac, T0* C, T0* a1);
/* detachable ET_IF_INSTRUCTION.make */
extern T0* T1130c8(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_IF_INSTRUCTION.tokens */
extern T0* T1130f6(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_665 */
extern void T439f1872(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_664 */
extern void T439f1871(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_663 */
extern void T439f1870(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_662 */
extern void T439f1869(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].force */
extern void T1060f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CREATION_REGION].fill_with */
extern void T1062f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CREATION_REGION].extend */
extern void T1062f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].aliased_resized_area */
extern T0* T1060f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CREATION_REGION].aliased_resized_area */
extern T0* T1062f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_creation_region */
extern T0* T448f270(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_CREATION_REGION.set_right_symbol */
extern void T1061f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CREATION_REGION.set_left_symbol */
extern void T1061f6(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CREATION_REGION.make */
extern T0* T1061c5(GE_context* ac, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.greater_than_symbol */
extern T0* T71f891(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.make_gt */
extern T0* T959c89(GE_context* ac);
/* detachable ET_SYMBOL_OPERATOR.make_leaf */
extern void T959f99(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.less_than_symbol */
extern T0* T71f890(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.make_lt */
extern T0* T959c90(GE_context* ac);
/* detachable ET_CREATION_REGION.tokens */
extern T0* T1061f4(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_661 */
extern void T439f1868(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_660 */
extern void T439f1867(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].force */
extern void T1058f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CREATE_EXPRESSION].fill_with */
extern void T1059f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CREATE_EXPRESSION].extend */
extern void T1059f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T1058f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T1059f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_create_expression */
extern T0* T448f269(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_CREATE_EXPRESSION.set_creation_region */
extern void T319f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CREATE_EXPRESSION.set_create_keyword */
extern void T319f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_qualified_call */
extern T0* T448f266(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_659 */
extern void T439f1866(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_658 */
extern void T439f1865(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_create_instruction */
extern T0* T448f268(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_CREATE_INSTRUCTION.set_creation_region */
extern void T1462f14(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CREATE_INSTRUCTION.set_create_keyword */
extern void T1462f13(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CREATE_INSTRUCTION.make */
extern T0* T1462c12(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* detachable ET_CREATE_INSTRUCTION.tokens */
extern T0* T1462f6(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_657 */
extern void T439f1864(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_656 */
extern void T439f1863(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_655 */
extern void T439f1862(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_654 */
extern void T439f1861(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_bang_instruction */
extern T0* T448f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_BANG_INSTRUCTION.set_left_bang */
extern void T1461f12(GE_context* ac, T0* C, T0* a1);
/* detachable ET_BANG_INSTRUCTION.make */
extern T0* T1461c11(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_TOKEN_CONSTANTS.bang_symbol */
extern T0* T71f1511(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.make_bang */
extern T0* T342c84(GE_context* ac);
/* detachable ET_BANG_INSTRUCTION.tokens */
extern T0* T1461f6(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_653 */
extern void T439f1860(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_652 */
extern void T439f1859(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_651 */
extern void T439f1858(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_650 */
extern void T439f1857(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].force */
extern void T1005f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CHECK_INSTRUCTION].fill_with */
extern void T1007f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CHECK_INSTRUCTION].extend */
extern void T1007f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T1005f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T1007f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.new_check_instruction */
extern T0* T439f932(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].remove_last */
extern void T911f15(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_ASSERTION_ITEM].keep_head */
extern void T1572f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ASSERTION_ITEM].set_count */
extern void T1572f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].move_last_cursors_after */
extern void T911f19(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ASSERTION_ITEM].set_next_cursor */
extern void T1574f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ASSERTION_ITEM].set_after */
extern void T1574f6(GE_context* ac, T0* C);
/* detachable ET_CHECK_INSTRUCTION.put_first */
extern void T1006f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM].force */
extern void T1573f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ASSERTION_ITEM].fill_with */
extern void T1572f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ASSERTION_ITEM].extend */
extern void T1572f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CHECK_INSTRUCTION.fixed_array */
extern T0* T1006f6(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM].default_create */
extern T0* T1573c3(GE_context* ac);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].item */
extern T0* T911f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_check_instruction */
extern T0* T448f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* detachable ET_CHECK_INSTRUCTION.set_check_keyword */
extern void T1006f13(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CHECK_INSTRUCTION.set_then_compound */
extern void T1006f12(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CHECK_INSTRUCTION.make_with_capacity */
extern T0* T1006c10(GE_context* ac, T6 a1);
/* detachable ET_CHECK_INSTRUCTION.make_with_capacity */
extern void T1006f10p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM].make */
extern T0* T1573f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ASSERTION_ITEM].make_empty */
extern T0* T1572c5(GE_context* ac, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.check_keyword */
extern T0* T71f719(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_check */
extern T0* T402c78(GE_context* ac);
/* detachable ET_CHECK_INSTRUCTION.tokens */
extern T0* T1006f7(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].remove_last */
extern void T258f29(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].move_last_cursors_after */
extern void T258f30(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] INTEGER_32].last */
extern T6 T258f15(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_649 */
extern void T439f1856(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_648 */
extern void T439f1855(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_647 */
extern void T439f1854(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_646 */
extern void T439f1853(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.start_check_instruction */
extern void T439f2178(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.start_assertions */
extern void T439f2183(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_645 */
extern void T439f1852(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_null_instruction */
extern T0* T448f264(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_644 */
extern void T439f1851(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_643 */
extern void T439f1850(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_642 */
extern void T439f1849(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_641 */
extern void T439f1848(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_across_instruction */
extern T0* T439f931(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* detachable ET_ACROSS_INSTRUCTION.set_end_keyword */
extern void T976f22(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ACROSS_INSTRUCTION.set_loop_compound */
extern void T976f19(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ACROSS_INSTRUCTION.set_until_conditional */
extern void T976f18(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ACROSS_INSTRUCTION.set_from_compound */
extern void T976f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_640 */
extern void T439f1847(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_loop_instruction */
extern T0* T448f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* detachable ET_LOOP_INSTRUCTION.set_has_old_variant_syntax */
extern void T1459f13(GE_context* ac, T0* C, T1 a1);
/* detachable ET_LOOP_INSTRUCTION.set_variant_part */
extern void T1459f12(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LOOP_INSTRUCTION.set_invariant_part */
extern void T1459f11(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LOOP_INSTRUCTION.make */
extern T0* T1459c10(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* detachable ET_LOOP_INSTRUCTION.tokens */
extern T0* T1459f8(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.ise_6_3_7_4554 */
extern T0* T439f930(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_639 */
extern void T439f1846(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_loop_instruction_old_syntax */
extern T0* T448f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_638 */
extern void T439f1845(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_637 */
extern void T439f1844(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_636 */
extern void T439f1843(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_635 */
extern void T439f1842(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_assignment_attempt */
extern T0* T448f260(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ASSIGNMENT_ATTEMPT.make */
extern T0* T1458c5(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.assign_attempt_symbol */
extern T0* T71f707(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.make_assign_attempt */
extern T0* T342c100(GE_context* ac);
/* detachable ET_ASSIGNMENT_ATTEMPT.tokens */
extern T0* T1458f4(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_634 */
extern void T439f1841(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_assignment */
extern T0* T448f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ASSIGNMENT.make */
extern T0* T1457c5(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.assign_symbol */
extern T0* T71f706(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.make_assign */
extern T0* T342c99(GE_context* ac);
/* detachable ET_ASSIGNMENT.tokens */
extern T0* T1457f4(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_633 */
extern void T439f1840(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_assigner_instruction */
extern T0* T448f258(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ASSIGNER_INSTRUCTION.make */
extern T0* T1456c15(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_ASSIGNER_INSTRUCTION.tokens */
extern T0* T1456f5(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_632 */
extern void T439f1839(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_631 */
extern void T439f1838(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_630 */
extern void T439f1837(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_629 */
extern void T439f1836(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_628 */
extern void T439f1835(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].force */
extern void T1027f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_COMPOUND].fill_with */
extern void T1028f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_COMPOUND].extend */
extern void T1028f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T1027f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T1028f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_627 */
extern void T439f1834(GE_context* ac, T0* C);
/* detachable ET_COMPOUND.put_first */
extern void T329f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INSTRUCTION].force */
extern void T1892f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_INSTRUCTION].fill_with */
extern void T1890f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_INSTRUCTION].extend */
extern void T1890f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_626 */
extern void T439f1833(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_compound */
extern T0* T448f257(GE_context* ac, T0* C, T6 a1);
/* detachable ET_COMPOUND.make_with_capacity */
extern T0* T329c12(GE_context* ac, T6 a1);
/* detachable ET_COMPOUND.make_with_capacity */
extern void T329f12p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_625 */
extern void T439f1832(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_624 */
extern void T439f1831(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_623 */
extern void T439f1830(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_622 */
extern void T439f1829(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_empty_compound */
extern T0* T448f256(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_621 */
extern void T439f1828(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_620 */
extern void T439f1827(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_loop_compound */
extern T0* T448f255(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.loop_keyword */
extern T0* T71f714(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_loop */
extern T0* T402c73(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_619 */
extern void T439f1826(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_618 */
extern void T439f1825(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_617 */
extern void T439f1824(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_from_compound */
extern T0* T448f254(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.from_keyword */
extern T0* T71f713(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_from */
extern T0* T402c72(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_616 */
extern void T439f1823(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_rescue_compound */
extern T0* T448f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.rescue_keyword */
extern T0* T71f729(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_rescue */
extern T0* T402c88(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_615 */
extern void T439f1822(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_else_compound */
extern T0* T448f252(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_614 */
extern void T439f1821(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_613 */
extern void T439f1820(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_then_compound */
extern T0* T448f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_612 */
extern void T439f1819(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_611 */
extern void T439f1818(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_attribute_compound */
extern T0* T448f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.attribute_keyword */
extern T0* T71f741(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_attribute */
extern T0* T402c100(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_610 */
extern void T439f1817(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_do_compound */
extern T0* T448f249(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_609 */
extern void T439f1816(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].force */
extern void T1206f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].fill_with */
extern void T1208f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].extend */
extern void T1208f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T1206f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T1208f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_qualified_like_type */
extern T0* T448f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_QUALIFIED_LIKE_TYPE.make */
extern T0* T1455c80(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_AST_FACTORY.new_attachment_mark_separate_keyword */
extern T0* T448f138(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_608 */
extern void T439f1815(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_607 */
extern void T439f1814(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_606 */
extern void T439f1813(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_605 */
extern void T439f1812(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_604 */
extern void T439f1811(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_603 */
extern void T439f1810(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_602 */
extern void T439f1809(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_601 */
extern void T439f1808(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_401_600 */
extern void T439f1189(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_600 */
extern void T439f1807(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_qualified_like_braced_type */
extern T0* T448f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.set_like_keyword */
extern void T1454f84(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.make */
extern T0* T1454c83(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_599 */
extern void T439f1806(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_598 */
extern void T439f1805(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_597 */
extern void T439f1804(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_596 */
extern void T439f1803(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_595 */
extern void T439f1802(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_594 */
extern void T439f1801(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_593 */
extern void T439f1800(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_592 */
extern void T439f1799(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_591 */
extern void T439f1798(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_590 */
extern void T439f1797(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_589 */
extern void T439f1796(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_588 */
extern void T439f1795(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].force */
extern void T1159f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_LIKE_TYPE].fill_with */
extern void T1161f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_LIKE_TYPE].extend */
extern void T1161f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T1159f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T1161f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_587 */
extern void T439f1794(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_like_current */
extern T0* T448f246(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_LIKE_CURRENT.set_like_keyword */
extern void T432f81(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_586 */
extern void T439f1793(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_585 */
extern void T439f1792(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_584 */
extern void T439f1791(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_583 */
extern void T439f1790(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_582 */
extern void T439f1789(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_581 */
extern void T439f1788(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_580 */
extern void T439f1787(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_579 */
extern void T439f1786(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_578 */
extern void T439f1785(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_577 */
extern void T439f1784(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_like_feature */
extern T0* T439f927(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_AST_FACTORY.new_like_feature */
extern T0* T448f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_LIKE_FEATURE.set_like_keyword */
extern void T1453f84(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.make */
extern T0* T1453c83(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_576 */
extern void T439f1783(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_575 */
extern void T439f1782(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_574 */
extern void T439f1781(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_573 */
extern void T439f1780(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_572 */
extern void T439f1779(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_571 */
extern void T439f1778(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_570 */
extern void T439f1777(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_569 */
extern void T439f1776(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_568 */
extern void T439f1775(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_567 */
extern void T439f1774(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_566 */
extern void T439f1773(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_565 */
extern void T439f1772(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_564 */
extern void T439f1771(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].force */
extern void T980f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T981f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].extend */
extern void T981f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T980f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T981f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_labeled_actual_parameter_semicolon */
extern T0* T448f245(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_AST_FACTORY.new_labeled_actual_parameter */
extern T0* T448f242(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_LABELED_ACTUAL_PARAMETER.make */
extern T0* T1451c10(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_563 */
extern void T439f1770(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_562 */
extern void T439f1769(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].force */
extern void T982f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].fill_with */
extern void T983f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].extend */
extern void T983f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.add_to_actual_parameter_list */
extern void T439f2177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_AST_FACTORY.new_labeled_comma_actual_parameter */
extern T0* T448f244(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T1695c10(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.first */
extern T0* T235f15(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_label_comma */
extern T0* T448f243(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_561 */
extern void T439f1768(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_560 */
extern void T439f1767(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_559 */
extern void T439f1766(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_558 */
extern void T439f1765(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_557 */
extern void T439f1764(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T982f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T983f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_actual_parameters */
extern T0* T448f240(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T235f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_556 */
extern void T439f1763(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_555 */
extern void T439f1762(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_554 */
extern void T439f1761(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_553 */
extern void T439f1760(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_552 */
extern void T439f1759(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_551 */
extern void T439f1758(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_actual_parameter_comma */
extern T0* T448f241(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_550 */
extern void T439f1757(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_549 */
extern void T439f1756(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_tuple_type */
extern T0* T439f926(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T439f926ot1(T0* a1, T0** a2);
/* [detachable] ET_AST_FACTORY.new_tuple_type */
extern T0* T448f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_TUPLE_TYPE.set_tuple_keyword */
extern void T247f117(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.providers_enabled */
extern T1 T439f949(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.current_universe */
extern T0* T439f960(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_548 */
extern void T439f1755(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_named_type */
extern T0* T439f925(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T439f925ot1(T0* a1, T0** a2);
/* [detachable] ET_AST_FACTORY.new_class_type */
extern T0* T448f335(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_AST_FACTORY.new_generic_class_type */
extern T0* T448f334(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_AST_FACTORY.new_formal_parameter_type */
extern T0* T448f347(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* [detachable] ET_CLASS.formal_parameter */
extern T0* T72f192(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FORMAL_PARAMETER_LIST.formal_parameter_by_name */
extern T0* T585f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_547 */
extern void T439f1754(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_546 */
extern void T439f1753(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_545 */
extern void T439f1752(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_544 */
extern void T439f1751(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_543 */
extern void T439f1750(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_542 */
extern void T439f1749(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_541 */
extern void T439f1748(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_540 */
extern void T439f1747(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_539 */
extern void T439f1746(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_538 */
extern void T439f1745(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_537 */
extern void T439f1744(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE].force */
extern void T1222f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_TYPE].fill_with */
extern void T1223f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_TYPE].extend */
extern void T1223f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE].aliased_resized_area */
extern T0* T1222f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_TYPE].aliased_resized_area */
extern T0* T1223f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_536 */
extern void T439f1743(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_535 */
extern void T439f1742(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_534 */
extern void T439f1741(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_533 */
extern void T439f1740(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_532 */
extern void T439f1739(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_531 */
extern void T439f1738(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_530 */
extern void T439f1737(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_529 */
extern void T439f1736(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_528 */
extern void T439f1735(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_527 */
extern void T439f1734(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_526 */
extern void T439f1733(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_525 */
extern void T439f1732(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_524 */
extern void T439f1731(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_523 */
extern void T439f1730(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_522 */
extern void T439f1729(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_521 */
extern void T439f1728(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_520 */
extern void T439f1727(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_519 */
extern void T439f1726(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_518 */
extern void T439f1725(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_517 */
extern void T439f1724(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_516 */
extern void T439f1723(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_515 */
extern void T439f1722(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_514 */
extern void T439f1721(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_513 */
extern void T439f1720(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_512 */
extern void T439f1719(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_511 */
extern void T439f1718(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_510 */
extern void T439f1717(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_509 */
extern void T439f1716(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_508 */
extern void T439f1715(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_507 */
extern void T439f1714(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_506 */
extern void T439f1713(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_505 */
extern void T439f1712(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_504 */
extern void T439f1711(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_503 */
extern void T439f1710(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_502 */
extern void T439f1709(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_501 */
extern void T439f1708(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_500 */
extern void T439f1707(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_499 */
extern void T439f1706(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_498 */
extern void T439f1705(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_497 */
extern void T439f1704(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_496 */
extern void T439f1703(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_495 */
extern void T439f1702(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_494 */
extern void T439f1701(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_493 */
extern void T439f1700(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_492 */
extern void T439f1699(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_491 */
extern void T439f1698(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_490 */
extern void T439f1697(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_489 */
extern void T439f1696(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_488 */
extern void T439f1695(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_487 */
extern void T439f1694(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_486 */
extern void T439f1693(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_485 */
extern void T439f1692(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_484 */
extern void T439f1691(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_483 */
extern void T439f1690(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_482 */
extern void T439f1689(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_481 */
extern void T439f1688(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_480 */
extern void T439f1687(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_479 */
extern void T439f1686(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_478 */
extern void T439f1685(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_477 */
extern void T439f1684(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_476 */
extern void T439f1683(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_475 */
extern void T439f1682(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_474 */
extern void T439f1681(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_473 */
extern void T439f1680(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_472 */
extern void T439f1679(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_471 */
extern void T439f1678(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_470 */
extern void T439f1677(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_469 */
extern void T439f1676(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_468 */
extern void T439f1675(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_467 */
extern void T439f1674(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_466 */
extern void T439f1673(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_VARIANT].force */
extern void T1239f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_VARIANT].fill_with */
extern void T1241f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_VARIANT].extend */
extern void T1241f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_465 */
extern void T439f1672(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_VARIANT].aliased_resized_area */
extern T0* T1239f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_VARIANT].aliased_resized_area */
extern T0* T1241f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_464 */
extern void T439f1671(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_variant */
extern T0* T448f239(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_VARIANT.set_variant_keyword */
extern void T1240f6(GE_context* ac, T0* C, T0* a1);
/* detachable ET_VARIANT.make */
extern T0* T1240c5(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.variant_keyword */
extern T0* T71f734(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_variant */
extern T0* T402c93(GE_context* ac);
/* detachable ET_VARIANT.tokens */
extern T0* T1240f4(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_tag */
extern T0* T448f122(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_463 */
extern void T439f1670(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_462 */
extern void T439f1669(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].force */
extern void T1170f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_LOOP_INVARIANTS].fill_with */
extern void T1172f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_LOOP_INVARIANTS].extend */
extern void T1172f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T1170f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T1172f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.new_loop_invariants */
extern T0* T439f924(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LOOP_INVARIANTS.put_first */
extern void T1171f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LOOP_INVARIANTS.fixed_array */
extern T0* T1171f5(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_loop_invariants */
extern T0* T448f346(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable ET_LOOP_INVARIANTS.set_invariant_keyword */
extern void T1171f11(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LOOP_INVARIANTS.make_with_capacity */
extern T0* T1171c9(GE_context* ac, T6 a1);
/* detachable ET_LOOP_INVARIANTS.make_with_capacity */
extern void T1171f9p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.invariant_keyword */
extern T0* T71f742(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_invariant */
extern T0* T402c101(GE_context* ac);
/* detachable ET_LOOP_INVARIANTS.tokens */
extern T0* T1171f4(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_461 */
extern void T439f1668(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_460 */
extern void T439f1667(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_459 */
extern void T439f1666(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_458 */
extern void T439f1665(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.start_loop_invariant */
extern void T439f2176(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_457 */
extern void T439f1664(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_456 */
extern void T439f1663(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].force */
extern void T1154f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_INVARIANTS].fill_with */
extern void T1156f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_INVARIANTS].extend */
extern void T1156f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T1154f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T1156f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.new_invariants */
extern T0* T439f923(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.wipe_out_last_across_components_stack */
extern void T439f1172(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].wipe_out */
extern void T909f11(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].i_th */
extern T0* T909f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.wipe_out_last_object_tests_stack */
extern void T439f1171(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].wipe_out */
extern void T907f11(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].i_th */
extern T0* T907f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.wipe_out_last_local_variables_stack */
extern void T439f1170(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].wipe_out */
extern void T904f10(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.wipe_out_last_formal_arguments_stack */
extern void T439f1169(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].wipe_out */
extern void T903f10(GE_context* ac, T0* C);
/* detachable ET_INVARIANTS.set_across_components */
extern void T1155f28(GE_context* ac, T0* C, T0* a1);
/* detachable ET_INVARIANTS.set_object_tests */
extern void T1155f27(GE_context* ac, T0* C, T0* a1);
/* detachable ET_INVARIANTS.put_first */
extern void T1155f26(GE_context* ac, T0* C, T0* a1);
/* detachable ET_INVARIANTS.fixed_array */
extern T0* T1155f10(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_invariants */
extern T0* T448f345(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* detachable ET_INVARIANTS.set_invariant_keyword */
extern void T1155f29(GE_context* ac, T0* C, T0* a1);
/* detachable ET_INVARIANTS.make_with_capacity */
extern T0* T1155c25(GE_context* ac, T0* a1, T6 a2);
/* detachable ET_INVARIANTS.make_assertions_with_capacity */
extern void T1155f30(GE_context* ac, T0* C, T6 a1);
/* detachable ET_INVARIANTS.tokens */
extern T0* T1155f9(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_455 */
extern void T439f1662(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_454 */
extern void T439f1661(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_453 */
extern void T439f1660(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_452 */
extern void T439f1659(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.start_invariant */
extern void T439f2175(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_451 */
extern void T439f1658(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].force */
extern void T1199f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_POSTCONDITIONS].fill_with */
extern void T1201f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_POSTCONDITIONS].extend */
extern void T1201f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T1199f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T1201f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.new_postconditions */
extern T0* T439f922(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_POSTCONDITIONS.put_first */
extern void T1200f18(GE_context* ac, T0* C, T0* a1);
/* detachable ET_POSTCONDITIONS.fixed_array */
extern T0* T1200f10(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_postconditions */
extern T0* T448f344(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* detachable ET_POSTCONDITIONS.set_then_keyword */
extern void T1200f20(GE_context* ac, T0* C, T0* a1);
/* detachable ET_POSTCONDITIONS.set_ensure_keyword */
extern void T1200f19(GE_context* ac, T0* C, T0* a1);
/* detachable ET_POSTCONDITIONS.make_with_capacity */
extern T0* T1200c17(GE_context* ac, T6 a1);
/* detachable ET_POSTCONDITIONS.make_with_capacity */
extern void T1200f17p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.ensure_keyword */
extern T0* T71f893(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_ensure */
extern T0* T402c61(GE_context* ac);
/* detachable ET_POSTCONDITIONS.tokens */
extern T0* T1200f9(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_450 */
extern void T439f1657(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_449 */
extern void T439f1656(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_448 */
extern void T439f1655(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_447 */
extern void T439f1654(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_446 */
extern void T439f1653(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.start_postcondition */
extern void T439f2174(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_445 */
extern void T439f1652(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].force */
extern void T1202f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_PRECONDITIONS].fill_with */
extern void T1203f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_PRECONDITIONS].extend */
extern void T1203f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].aliased_resized_area */
extern T0* T1202f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_PRECONDITIONS].aliased_resized_area */
extern T0* T1203f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.new_preconditions */
extern T0* T439f921(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_PRECONDITIONS.put_first */
extern void T394f17(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PRECONDITIONS.fixed_array */
extern T0* T394f10(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_preconditions */
extern T0* T448f343(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* detachable ET_PRECONDITIONS.set_else_keyword */
extern void T394f19(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PRECONDITIONS.set_require_keyword */
extern void T394f18(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PRECONDITIONS.make_with_capacity */
extern T0* T394c16(GE_context* ac, T6 a1);
/* detachable ET_PRECONDITIONS.make_with_capacity */
extern void T394f16p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.require_keyword */
extern T0* T71f1519(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_require */
extern T0* T402c64(GE_context* ac);
/* detachable ET_PRECONDITIONS.tokens */
extern T0* T394f9(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_444 */
extern void T439f1651(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_443 */
extern void T439f1650(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_442 */
extern void T439f1649(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_441 */
extern void T439f1648(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_440 */
extern void T439f1647(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.start_precondition */
extern void T439f2173(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_439 */
extern void T439f1646(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.add_class_assertion */
extern void T439f2172(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.add_untagged_assertion */
extern void T439f2182(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T439f2182ot1(T0* a1, T0** a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].force_last */
extern void T911f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].resize */
extern void T911f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1573f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1572f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].new_capacity */
extern T6 T911f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].extendible */
extern T1 T911f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].replace */
extern void T911f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_AST_FACTORY.new_assertion_semicolon */
extern T0* T448f331(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_TAGGED_ASSERTION.set_untagged_assertion */
extern void T1490f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].last */
extern T0* T911f9(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_class_assertion */
extern T0* T448f238(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CLASS_ASSERTION.set_class_keyword */
extern void T1450f8(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CLASS_ASSERTION.make */
extern T0* T1450c7(GE_context* ac);
/* detachable ET_CLASS_ASSERTION.tokens */
extern T0* T1450f2(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_438 */
extern void T439f1645(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_437 */
extern void T439f1644(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.add_tagged_assertion */
extern void T439f2171(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T439f2171ot1(T0* a1, T0** a2);
/* [detachable] ET_AST_FACTORY.new_tagged_assertion */
extern T0* T448f330(GE_context* ac, T0* C, T0* a1);
/* detachable ET_TAGGED_ASSERTION.make */
extern T0* T1490c7(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.report_syntax_error */
extern void T439f1193(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.set_syntax_error */
extern void T439f1197(GE_context* ac, T0* C);
/* [detachable] ET_FILE_POSITION.column */
extern T6 T1492f3(GE_context* ac, T0* C);
/* [detachable] ET_FILE_POSITION.line */
extern T6 T1492f6(GE_context* ac, T0* C);
/* [detachable] ET_FILE_POSITION.is_null */
extern T1 T1492f5(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.current_position */
extern T0* T439f716(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_436 */
extern void T439f1643(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_435 */
extern void T439f1642(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.add_expression_assertion */
extern void T439f2170(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_434 */
extern void T439f1641(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_433 */
extern void T439f1640(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_432 */
extern void T439f1639(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_431 */
extern void T439f1638(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_430 */
extern void T439f1637(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_429 */
extern void T439f1636(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_428 */
extern void T439f1635(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_427 */
extern void T439f1634(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].force */
extern void T1165f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].fill_with */
extern void T1167f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].extend */
extern void T1167f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T1165f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T1167f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_local_variable_semicolon */
extern T0* T448f237(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_AST_FACTORY.new_local_variable */
extern T0* T448f236(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_LOCAL_VARIABLE.make */
extern T0* T1163c9(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_426 */
extern void T439f1633(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_425 */
extern void T439f1632(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].force */
extern void T1162f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE].fill_with */
extern void T1164f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE].extend */
extern void T1164f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T1162f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T1164f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_local_comma_variable */
extern T0* T448f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_LOCAL_COMMA_VARIABLE.make */
extern T0* T1694c9(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.dummy_type */
extern T0* T439f918(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_424 */
extern void T439f1631(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_local_name_comma */
extern T0* T448f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_423 */
extern void T439f1630(GE_context* ac, T0* C);
/* detachable ET_LOCAL_VARIABLE_LIST.put_first */
extern void T330f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_LOCAL_VARIABLE_ITEM].force */
extern void T1895f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_LOCAL_VARIABLE_ITEM].fill_with */
extern void T1893f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_LOCAL_VARIABLE_ITEM].extend */
extern void T1893f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LOCAL_VARIABLE_LIST.fixed_array */
extern T0* T330f10(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T1895c2(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_422 */
extern void T439f1629(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_421 */
extern void T439f1628(GE_context* ac, T0* C);
/* [detachable] ET_LOCAL_COMMA_VARIABLE.set_declared_type */
extern void T1694f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LOCAL_VARIABLE_LIST.first */
extern T0* T330f6(GE_context* ac, T0* C);
/* detachable ET_LOCAL_VARIABLE_LIST.is_empty */
extern T1 T330f5(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_420 */
extern void T439f1627(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_419 */
extern void T439f1626(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_local_variables */
extern T0* T439f919(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_AST_FACTORY.new_local_variables */
extern T0* T448f342(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable ET_LOCAL_VARIABLE_LIST.set_local_keyword */
extern void T330f13(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern T0* T330c11(GE_context* ac, T6 a1);
/* detachable ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern void T330f11p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T1895f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_LOCAL_VARIABLE_ITEM].make_empty */
extern T0* T1893c4(GE_context* ac, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.local_keyword */
extern T0* T71f722(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_local */
extern T0* T402c81(GE_context* ac);
/* detachable ET_LOCAL_VARIABLE_LIST.tokens */
extern T0* T330f9(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_418 */
extern void T439f1625(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_417 */
extern void T439f1624(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_416 */
extern void T439f1623(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_415 */
extern void T439f1622(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_414 */
extern void T439f1621(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_413 */
extern void T439f1620(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].force */
extern void T1114f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].fill_with */
extern void T1116f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].extend */
extern void T1116f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T1114f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T1116f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_formal_argument_semicolon */
extern T0* T448f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_AST_FACTORY.new_formal_argument */
extern T0* T448f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_ARGUMENT.make */
extern T0* T251c9(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_412 */
extern void T439f1619(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_411 */
extern void T439f1618(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].force */
extern void T1112f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT].fill_with */
extern void T1113f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT].extend */
extern void T1113f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T1112f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T1113f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_formal_comma_argument */
extern T0* T448f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_COMMA_ARGUMENT.make */
extern T0* T1693c9(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_410 */
extern void T439f1617(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_argument_name_comma */
extern T0* T448f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_409 */
extern void T439f1616(GE_context* ac, T0* C);
/* detachable ET_FORMAL_ARGUMENT_LIST.put_first */
extern void T248f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_ARGUMENT_ITEM].force */
extern void T1886f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_FORMAL_ARGUMENT_ITEM].fill_with */
extern void T1884f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_FORMAL_ARGUMENT_ITEM].extend */
extern void T1884f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FORMAL_ARGUMENT_LIST.fixed_array */
extern T0* T248f11(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T1886c2(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_408 */
extern void T439f1615(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_407 */
extern void T439f1614(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_COMMA_ARGUMENT.set_declared_type */
extern void T1693f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FORMAL_ARGUMENT_LIST.first */
extern T0* T248f5(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_406 */
extern void T439f1613(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_405 */
extern void T439f1612(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_formal_arguments */
extern T0* T439f917(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] ET_AST_FACTORY.new_formal_arguments */
extern T0* T448f341(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* detachable ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T248c12(GE_context* ac, T6 a1);
/* detachable ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern void T248f12p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T1886f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_FORMAL_ARGUMENT_ITEM].make_empty */
extern T0* T1884c4(GE_context* ac, T6 a1);
/* detachable ET_FORMAL_ARGUMENT_LIST.tokens */
extern T0* T248f9(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_404 */
extern void T439f1611(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_403 */
extern void T439f1610(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_402 */
extern void T439f1609(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_401 */
extern void T439f1608(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_201_400 */
extern void T439f1188(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_400 */
extern void T439f1607(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_399 */
extern void T439f1606(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_398 */
extern void T439f1605(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_397 */
extern void T439f1604(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].force */
extern void T994f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ALIAS_NAME].fill_with */
extern void T995f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ALIAS_NAME].extend */
extern void T995f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T994f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T995f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.new_invalid_alias_name */
extern T0* T439f916(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_EIFFEL_PARSER.new_alias_free_name */
extern T0* T439f965(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_AST_FACTORY.new_alias_free_name */
extern T0* T448f227(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_FREE_NAME.set_convert_keyword */
extern void T1447f50(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ALIAS_FREE_NAME.set_alias_keyword */
extern void T1447f49(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ALIAS_FREE_NAME.make_infix */
extern T0* T1447c48(GE_context* ac, T0* a1);
/* detachable ET_ALIAS_FREE_NAME.string_ */
extern T0* T1447f15(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.default_keyword */
extern T0* T1447f21(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.alias_keyword */
extern T0* T71f718(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_alias */
extern T0* T402c77(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_396 */
extern void T439f1603(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_parenthesis_name */
extern T0* T448f229(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.set_convert_keyword */
extern void T874f69(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ALIAS_NAME.set_alias_keyword */
extern void T874f68(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ALIAS_NAME.make_parenthesis */
extern T0* T874c89(GE_context* ac, T0* a1);
/* detachable ET_ALIAS_NAME.default_keyword */
extern T0* T874f6(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_395 */
extern void T439f1602(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_bracket_name */
extern T0* T448f228(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.make_bracket */
extern T0* T874c88(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_394 */
extern void T439f1601(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_393 */
extern void T439f1600(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_dotdot_name */
extern T0* T448f226(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.make_dotdot */
extern T0* T874c87(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_392 */
extern void T439f1599(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_xor_name */
extern T0* T448f225(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.make_xor */
extern T0* T874c86(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_391 */
extern void T439f1598(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_implies_name */
extern T0* T448f224(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.make_implies */
extern T0* T874c85(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_390 */
extern void T439f1597(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_or_else_name */
extern T0* T448f223(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.make_or_else */
extern T0* T874c84(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_389 */
extern void T439f1596(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_or_name */
extern T0* T448f222(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.make_or */
extern T0* T874c83(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_388 */
extern void T439f1595(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_and_then_name */
extern T0* T448f221(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.make_and_then */
extern T0* T874c82(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_387 */
extern void T439f1594(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_and_name */
extern T0* T448f220(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.make_and */
extern T0* T874c81(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_386 */
extern void T439f1593(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_ge_name */
extern T0* T448f219(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.make_ge */
extern T0* T874c80(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_385 */
extern void T439f1592(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_gt_name */
extern T0* T448f218(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.make_gt */
extern T0* T874c79(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_384 */
extern void T439f1591(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_le_name */
extern T0* T448f217(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.make_le */
extern T0* T874c78(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_383 */
extern void T439f1590(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_lt_name */
extern T0* T448f216(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.make_lt */
extern T0* T874c77(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_382 */
extern void T439f1589(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_power_name */
extern T0* T448f215(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.make_power */
extern T0* T874c76(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_381 */
extern void T439f1588(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_mod_name */
extern T0* T448f214(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.make_mod */
extern T0* T874c75(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_380 */
extern void T439f1587(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_div_name */
extern T0* T448f213(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.make_div */
extern T0* T874c74(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_379 */
extern void T439f1586(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_divide_name */
extern T0* T448f212(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.make_divide */
extern T0* T874c73(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_378 */
extern void T439f1585(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_times_name */
extern T0* T448f211(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.make_times */
extern T0* T874c72(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_377 */
extern void T439f1584(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_minus_name */
extern T0* T448f210(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.make_minus */
extern T0* T874c71(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_376 */
extern void T439f1583(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_plus_name */
extern T0* T448f209(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.make_plus */
extern T0* T874c70(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_375 */
extern void T439f1582(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_alias_not_name */
extern T0* T448f208(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ALIAS_NAME.make_not */
extern T0* T874c67(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_374 */
extern void T439f1581(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].force */
extern void T1093f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].fill_with */
extern void T1094f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].extend */
extern void T1094f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T1093f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T1094f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_aliased_feature_name */
extern T0* T448f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_373 */
extern void T439f1580(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_372 */
extern void T439f1579(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].force */
extern void T1107f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FEATURE_NAME].fill_with */
extern void T1108f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FEATURE_NAME].extend */
extern void T1108f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1107f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1108f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.new_invalid_infix_name */
extern T0* T439f915(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.new_infix_free_name */
extern T0* T439f964(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_AST_FACTORY.new_infix_free_name */
extern T0* T448f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_INFIX_FREE_NAME.set_infix_keyword */
extern void T849f70(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INFIX_FREE_NAME.make */
extern T0* T849c69(GE_context* ac, T0* a1);
/* [detachable] ET_INFIX_FREE_NAME.string_ */
extern T0* T849f7(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.default_keyword */
extern T0* T849f29(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.infix_keyword */
extern T0* T71f721(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_infix */
extern T0* T402c80(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_371 */
extern void T439f1578(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_370 */
extern void T439f1577(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_invalid_prefix_name */
extern T0* T439f914(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.new_prefix_free_name */
extern T0* T439f963(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_AST_FACTORY.new_prefix_free_name */
extern T0* T448f188(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_PREFIX_FREE_NAME.set_prefix_keyword */
extern void T1444f70(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PREFIX_FREE_NAME.make */
extern T0* T1444c69(GE_context* ac, T0* a1);
/* detachable ET_PREFIX_FREE_NAME.string_ */
extern T0* T1444f30(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.default_keyword */
extern T0* T1444f31(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.prefix_keyword */
extern T0* T71f727(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_prefix */
extern T0* T402c86(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_369 */
extern void T439f1576(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_368 */
extern void T439f1575(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_367 */
extern void T439f1574(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_366 */
extern void T439f1573(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_365 */
extern void T439f1572(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_364 */
extern void T439f1571(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_363 */
extern void T439f1570(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_362 */
extern void T439f1569(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_361 */
extern void T439f1568(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_360 */
extern void T439f1567(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_359 */
extern void T439f1566(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_358 */
extern void T439f1565(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_357 */
extern void T439f1564(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_356 */
extern void T439f1563(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_355 */
extern void T439f1562(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_354 */
extern void T439f1561(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_353 */
extern void T439f1560(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_xor_name */
extern T0* T448f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INFIX_NAME.set_infix_keyword */
extern void T1445f86(GE_context* ac, T0* C, T0* a1);
/* detachable ET_INFIX_NAME.make_xor */
extern T0* T1445c102(GE_context* ac, T0* a1);
/* detachable ET_INFIX_NAME.default_keyword */
extern T0* T1445f46(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_352 */
extern void T439f1559(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_implies_name */
extern T0* T448f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INFIX_NAME.make_implies */
extern T0* T1445c101(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_351 */
extern void T439f1558(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_or_else_name */
extern T0* T448f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INFIX_NAME.make_or_else */
extern T0* T1445c100(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_350 */
extern void T439f1557(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_or_name */
extern T0* T448f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INFIX_NAME.make_or */
extern T0* T1445c99(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_349 */
extern void T439f1556(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_and_then_name */
extern T0* T448f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INFIX_NAME.make_and_then */
extern T0* T1445c98(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_348 */
extern void T439f1555(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_and_name */
extern T0* T448f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INFIX_NAME.make_and */
extern T0* T1445c97(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_347 */
extern void T439f1554(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_ge_name */
extern T0* T448f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INFIX_NAME.make_ge */
extern T0* T1445c96(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_346 */
extern void T439f1553(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_gt_name */
extern T0* T448f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INFIX_NAME.make_gt */
extern T0* T1445c95(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_345 */
extern void T439f1552(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_le_name */
extern T0* T448f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INFIX_NAME.make_le */
extern T0* T1445c94(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_344 */
extern void T439f1551(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_lt_name */
extern T0* T448f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INFIX_NAME.make_lt */
extern T0* T1445c93(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_343 */
extern void T439f1550(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_power_name */
extern T0* T448f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INFIX_NAME.make_power */
extern T0* T1445c92(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_342 */
extern void T439f1549(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_mod_name */
extern T0* T448f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INFIX_NAME.make_mod */
extern T0* T1445c91(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_341 */
extern void T439f1548(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_div_name */
extern T0* T448f193(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INFIX_NAME.make_div */
extern T0* T1445c90(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_340 */
extern void T439f1547(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_divide_name */
extern T0* T448f192(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INFIX_NAME.make_divide */
extern T0* T1445c89(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_339 */
extern void T439f1546(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_times_name */
extern T0* T448f191(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INFIX_NAME.make_times */
extern T0* T1445c88(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_338 */
extern void T439f1545(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_minus_name */
extern T0* T448f190(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INFIX_NAME.make_minus */
extern T0* T1445c87(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_337 */
extern void T439f1544(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_infix_plus_name */
extern T0* T448f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INFIX_NAME.make_plus */
extern T0* T1445c85(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_336 */
extern void T439f1543(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_335 */
extern void T439f1542(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_prefix_minus_name */
extern T0* T448f187(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_PREFIX_NAME.set_prefix_keyword */
extern void T1443f86(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PREFIX_NAME.make_minus */
extern T0* T1443c88(GE_context* ac, T0* a1);
/* detachable ET_PREFIX_NAME.default_keyword */
extern T0* T1443f32(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_334 */
extern void T439f1541(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_prefix_plus_name */
extern T0* T448f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_PREFIX_NAME.make_plus */
extern T0* T1443c87(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_333 */
extern void T439f1540(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_prefix_not_name */
extern T0* T448f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_PREFIX_NAME.make_not */
extern T0* T1443c85(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_332 */
extern void T439f1539(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_331 */
extern void T439f1538(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].force */
extern void T996f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ASSIGNER].fill_with */
extern void T998f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_ASSIGNER].extend */
extern void T998f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T996f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T998f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_assigner */
extern T0* T448f184(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_330 */
extern void T439f1537(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_329 */
extern void T439f1536(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].force */
extern void T1095f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_EXTERNAL_ALIAS].fill_with */
extern void T1097f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_EXTERNAL_ALIAS].extend */
extern void T1097f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T1095f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T1097f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_external_alias */
extern T0* T448f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_328 */
extern void T439f1535(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_327 */
extern void T439f1534(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].force */
extern void T964f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_SEMICOLON_SYMBOL].fill_with */
extern void T966f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_SEMICOLON_SYMBOL].extend */
extern void T966f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_326 */
extern void T439f1533(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T964f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T966f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_325 */
extern void T439f1532(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_324 */
extern void T439f1531(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_323 */
extern void T439f1530(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].force */
extern void T1204f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_PROCEDURE].fill_with */
extern void T1205f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_PROCEDURE].extend */
extern void T1205f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].aliased_resized_area */
extern T0* T1204f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_PROCEDURE].aliased_resized_area */
extern T0* T1205f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.new_external_procedure */
extern T0* T439f913(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* [detachable] ET_AST_FACTORY.new_external_procedure */
extern T0* T448f340(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* detachable ET_EXTERNAL_PROCEDURE.set_first_indexing */
extern void T1442f104(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.set_alias_clause */
extern void T1442f102(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.set_postconditions */
extern void T1442f101(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.set_preconditions */
extern void T1442f100(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.set_obsolete_message */
extern void T1442f99(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.set_is_keyword */
extern void T1442f98(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.is_keyword */
extern T0* T71f711(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_is */
extern T0* T402c70(GE_context* ac);
/* detachable ET_EXTERNAL_PROCEDURE.make */
extern T0* T1442c86(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_EXTERNAL_PROCEDURE.tokens */
extern T0* T1442f44(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_322 */
extern void T439f1529(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_321 */
extern void T439f1528(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_deferred_procedure */
extern T0* T448f182(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13);
/* [detachable] ET_DEFERRED_PROCEDURE.set_first_indexing */
extern void T458f94(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_postconditions */
extern void T458f92(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_preconditions */
extern void T458f91(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_obsolete_message */
extern void T458f90(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_is_keyword */
extern void T458f89(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_320 */
extern void T439f1527(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_319 */
extern void T439f1526(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_once_procedure */
extern T0* T448f181(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* detachable ET_ONCE_PROCEDURE.set_first_indexing */
extern void T1441f102(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_rescue_clause */
extern void T1441f100(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_postconditions */
extern void T1441f99(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_compound */
extern void T1441f98(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_keys */
extern void T1441f97(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_locals */
extern void T1441f96(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_preconditions */
extern void T1441f95(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_obsolete_message */
extern void T1441f94(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_is_keyword */
extern void T1441f93(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.make */
extern T0* T1441c81(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* detachable ET_ONCE_PROCEDURE.tokens */
extern T0* T1441f32(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_318 */
extern void T439f1525(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_317 */
extern void T439f1524(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_do_procedure */
extern T0* T448f180(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* [detachable] ET_DO_PROCEDURE.set_first_indexing */
extern void T456f98(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.set_rescue_clause */
extern void T456f96(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.set_postconditions */
extern void T456f95(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.set_compound */
extern void T456f94(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.set_locals */
extern void T456f93(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.set_preconditions */
extern void T456f92(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.set_obsolete_message */
extern void T456f91(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.set_is_keyword */
extern void T456f90(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_316 */
extern void T439f1523(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_315 */
extern void T439f1522(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUERY].force */
extern void T1209f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_QUERY].fill_with */
extern void T1210f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_QUERY].extend */
extern void T1210f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUERY].aliased_resized_area */
extern T0* T1209f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_QUERY].aliased_resized_area */
extern T0* T1210f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.new_external_function */
extern T0* T439f912(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* [detachable] ET_AST_FACTORY.new_external_function */
extern T0* T448f339(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* [detachable] ET_EXTERNAL_FUNCTION.set_first_indexing */
extern void T246f107(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_alias_clause */
extern void T246f105(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_postconditions */
extern void T246f104(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_preconditions */
extern void T246f103(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_obsolete_message */
extern void T246f102(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_assigner */
extern void T246f101(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_is_keyword */
extern void T246f100(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.make */
extern T0* T246c88(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_EXTERNAL_FUNCTION.tokens */
extern T0* T246f49(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_314 */
extern void T439f1521(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_313 */
extern void T439f1520(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_312 */
extern void T439f1519(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_311 */
extern void T439f1518(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_deferred_function */
extern T0* T448f178(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* detachable ET_DEFERRED_FUNCTION.set_first_indexing */
extern void T1439f97(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.set_postconditions */
extern void T1439f95(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.set_preconditions */
extern void T1439f94(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.set_obsolete_message */
extern void T1439f93(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.set_assigner */
extern void T1439f92(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.set_is_keyword */
extern void T1439f91(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.make */
extern T0* T1439c79(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_DEFERRED_FUNCTION.make */
extern void T1439f79p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_DEFERRED_FUNCTION.tokens */
extern T0* T1439f47(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_310 */
extern void T439f1517(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_309 */
extern void T439f1516(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_308 */
extern void T439f1515(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_307 */
extern void T439f1514(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_once_function */
extern T0* T448f177(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17, T0* a18);
/* detachable ET_ONCE_FUNCTION.set_first_indexing */
extern void T1438f104(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_rescue_clause */
extern void T1438f102(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_postconditions */
extern void T1438f101(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_compound */
extern void T1438f100(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_keys */
extern void T1438f99(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_locals */
extern void T1438f98(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_preconditions */
extern void T1438f97(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_obsolete_message */
extern void T1438f96(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_assigner */
extern void T1438f95(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_is_keyword */
extern void T1438f94(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.make */
extern T0* T1438c82(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_ONCE_FUNCTION.tokens */
extern T0* T1438f38(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_306 */
extern void T439f1513(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_305 */
extern void T439f1512(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_304 */
extern void T439f1511(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_303 */
extern void T439f1510(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_do_function */
extern T0* T448f175(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* detachable ET_DO_FUNCTION.set_first_indexing */
extern void T1437f101(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_rescue_clause */
extern void T1437f99(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_postconditions */
extern void T1437f98(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_compound */
extern void T1437f97(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_locals */
extern void T1437f96(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_preconditions */
extern void T1437f95(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_obsolete_message */
extern void T1437f94(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_assigner */
extern void T1437f93(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_is_keyword */
extern void T1437f92(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.make */
extern T0* T1437c80(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_DO_FUNCTION.tokens */
extern T0* T1437f49(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_302 */
extern void T439f1509(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_301 */
extern void T439f1508(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_300 */
extern void T439f1507(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_299 */
extern void T439f1506(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_unique_attribute */
extern T0* T448f174(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_assigner */
extern void T359f92(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.make */
extern T0* T359c80(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.make */
extern T0* T360c63(GE_context* ac, T0* a1);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.compute_value */
extern void T360f71(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.make_leaf */
extern void T360f70(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.unique_keyword */
extern T0* T71f1518(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_unique */
extern T0* T402c63(GE_context* ac);
/* [detachable] ET_UNIQUE_ATTRIBUTE.tokens */
extern T0* T359f61(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_298 */
extern void T439f1505(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_297 */
extern void T439f1504(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_constant_attribute */
extern T0* T448f173(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* [detachable] ET_CONSTANT_ATTRIBUTE.set_assigner */
extern void T357f91(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.make */
extern T0* T357c79(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_CONSTANT_ATTRIBUTE.tokens */
extern T0* T357f59(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_296 */
extern void T439f1503(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_295 */
extern void T439f1502(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_extended_attribute */
extern T0* T448f172(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_first_indexing */
extern void T328f99(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_rescue_clause */
extern void T328f97(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_postconditions */
extern void T328f96(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_compound */
extern void T328f95(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_locals */
extern void T328f94(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_preconditions */
extern void T328f93(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_obsolete_message */
extern void T328f92(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_assigner */
extern void T328f91(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.make */
extern T0* T328c79(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_EXTENDED_ATTRIBUTE.make */
extern void T328f79p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_EXTENDED_ATTRIBUTE.tokens */
extern T0* T328f59(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_294 */
extern void T439f1501(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_attribute */
extern T0* T448f171(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_ATTRIBUTE.set_assigner */
extern void T361f88(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTRIBUTE.make */
extern T0* T361c76(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ATTRIBUTE.tokens */
extern T0* T361f54(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_293 */
extern void T439f1500(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_292 */
extern void T439f1499(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.register_procedure_synonym */
extern void T439f2168(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].back */
extern void T688f22(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].cursor_back */
extern void T688f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].add_traversing_cursor */
extern void T688f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].remove_traversing_cursor */
extern void T688f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].force_left */
extern void T688f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].force_left_cursor */
extern void T688f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].put */
extern void T688f31(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].move_cursors_right */
extern void T688f34(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].move_right */
extern void T688f33(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].put_last */
extern void T688f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].index */
extern T6 T1363f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].cursor_index */
extern T6 T688f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].forth */
extern void T688f20(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].cursor_forth */
extern void T688f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].before */
extern T1 T688f8(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].cursor_before */
extern T1 T688f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].before */
extern T1 T1363f4(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_procedure_synonym */
extern T0* T439f910(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_291 */
extern void T439f1498(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_extended_feature_name_comma */
extern T0* T448f169(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_290 */
extern void T439f1497(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_289 */
extern void T439f1496(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_288 */
extern void T439f1495(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.register_procedure */
extern void T439f2167(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].finish */
extern void T688f19(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].cursor_finish */
extern void T688f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].off */
extern T1 T1363f8(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].after */
extern T1 T1363f7(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_287 */
extern void T439f1494(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_286 */
extern void T439f1493(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.register_query_synonym */
extern void T439f2166(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].back */
extern void T692f22(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].cursor_back */
extern void T692f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].add_traversing_cursor */
extern void T692f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].remove_traversing_cursor */
extern void T692f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].force_left */
extern void T692f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].force_left_cursor */
extern void T692f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].put */
extern void T692f31(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].move_cursors_right */
extern void T692f34(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].move_right */
extern void T692f33(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].put_last */
extern void T692f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].index */
extern T6 T1364f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].cursor_index */
extern T6 T692f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].forth */
extern void T692f20(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].cursor_forth */
extern void T692f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].before */
extern T1 T692f8(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].cursor_before */
extern T1 T692f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].before */
extern T1 T1364f4(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_query_synonym */
extern T0* T439f909(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_285 */
extern void T439f1492(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_284 */
extern void T439f1491(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_283 */
extern void T439f1490(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_282 */
extern void T439f1489(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.register_query */
extern void T439f2165(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].finish */
extern void T692f19(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].cursor_finish */
extern void T692f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].off */
extern T1 T1364f8(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].after */
extern T1 T1364f7(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_281 */
extern void T439f1488(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_280 */
extern void T439f1487(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_279 */
extern void T439f1486(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_278 */
extern void T439f1485(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_277 */
extern void T439f1484(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_276 */
extern void T439f1483(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].force */
extern void T1098f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FEATURE_CLAUSE].fill_with */
extern void T1100f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FEATURE_CLAUSE].extend */
extern void T1100f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T1098f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T1100f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_feature_clause */
extern T0* T448f168(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_FEATURE_CLAUSE.make */
extern T0* T1099c4(GE_context* ac, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.feature_keyword */
extern T0* T71f732(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_feature */
extern T0* T402c91(GE_context* ac);
/* detachable ET_FEATURE_CLAUSE.tokens */
extern T0* T1099f3(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_any_clients */
extern T0* T439f908(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.new_client */
extern T0* T439f906(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_client */
extern T0* T448f337(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.current_system */
extern T0* T439f962(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_275 */
extern void T439f1482(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_274 */
extern void T439f1481(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_273 */
extern void T439f1480(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_272 */
extern void T439f1479(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].force */
extern void T1101f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].fill_with */
extern void T1103f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].extend */
extern void T1103f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FEATURE_CLAUSE_LIST.put_first */
extern void T1102f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_CLAUSE].force */
extern void T1755f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_FEATURE_CLAUSE].fill_with */
extern void T1754f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_FEATURE_CLAUSE].extend */
extern void T1754f6(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FEATURE_CLAUSE_LIST.fixed_array */
extern T0* T1102f3(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_CLAUSE].default_create */
extern T0* T1755c2(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_271 */
extern void T439f1478(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T1101f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T1103f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_feature_clauses */
extern T0* T448f167(GE_context* ac, T0* C, T6 a1);
/* detachable ET_FEATURE_CLAUSE_LIST.make_with_capacity */
extern T0* T1102c4(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_CLAUSE].make */
extern T0* T1755f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_FEATURE_CLAUSE].make_empty */
extern T0* T1754c3(GE_context* ac, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_270 */
extern void T439f1477(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.set_class_features */
extern void T439f2164(GE_context* ac, T0* C);
extern T1 T439f2164ot1(T0* a1, T0** a2);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.set_value */
extern void T360f69(GE_context* ac, T0* C, T11 a1);
/* NATURAL_64.out */
extern T0* T11f14(GE_context* ac, T11* C);
/* [detachable] STRING_8.append_natural_64 */
extern void T17f80(GE_context* ac, T0* C, T11 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_269 */
extern void T439f1476(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_268 */
extern void T439f1475(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_267 */
extern void T439f1474(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].force */
extern void T1233f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_TYPE_ITEM].fill_with */
extern void T1235f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_TYPE_ITEM].extend */
extern void T1235f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T1233f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T1235f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_type_comma */
extern T0* T448f166(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_266 */
extern void T439f1473(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].force */
extern void T1236f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_TYPE_LIST].fill_with */
extern void T1238f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_TYPE_LIST].extend */
extern void T1238f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BRACED_TYPE_LIST.put_first */
extern void T1335f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE_ITEM].force */
extern void T1656f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_TYPE_ITEM].fill_with */
extern void T1655f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_TYPE_ITEM].extend */
extern void T1655f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_265 */
extern void T439f1472(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T1236f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T1238f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_convert_types */
extern T0* T448f165(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] ET_BRACED_TYPE_LIST.set_left_brace */
extern void T1335f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BRACED_TYPE_LIST.make_with_capacity */
extern T0* T1335c9(GE_context* ac, T6 a1);
/* [detachable] ET_BRACED_TYPE_LIST.make_with_capacity */
extern void T1335f9p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_264 */
extern void T439f1471(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_263 */
extern void T439f1470(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_262 */
extern void T439f1469(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_261 */
extern void T439f1468(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].force */
extern void T1049f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE].fill_with */
extern void T1051f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE].extend */
extern void T1051f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T1049f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T1051f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_convert_procedure */
extern T0* T448f164(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_CONVERT_PROCEDURE.make */
extern T0* T1435c9(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_CONVERT_PROCEDURE.tokens */
extern T0* T1435f5(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_260 */
extern void T439f1467(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_convert_function */
extern T0* T448f163(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_CONVERT_FUNCTION.make */
extern T0* T1434c8(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_CONVERT_FUNCTION.tokens */
extern T0* T1434f4(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_259 */
extern void T439f1466(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].force */
extern void T1052f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].fill_with */
extern void T1054f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].extend */
extern void T1054f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T1052f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T1054f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_convert_feature_comma */
extern T0* T448f162(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_258 */
extern void T439f1465(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].force */
extern void T1055f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE_LIST].fill_with */
extern void T1057f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE_LIST].extend */
extern void T1057f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONVERT_FEATURE_LIST.put_first */
extern void T1056f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CONVERT_FEATURE_ITEM].force */
extern void T1747f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CONVERT_FEATURE_ITEM].fill_with */
extern void T1746f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CONVERT_FEATURE_ITEM].extend */
extern void T1746f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONVERT_FEATURE_LIST.fixed_array */
extern T0* T1056f5(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T1747c2(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_257 */
extern void T439f1464(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T1055f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T1057f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_convert_features */
extern T0* T448f161(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern T0* T1056c8(GE_context* ac, T6 a1);
/* detachable ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern void T1056f8p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CONVERT_FEATURE_ITEM].make */
extern T0* T1747f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_CONVERT_FEATURE_ITEM].make_empty */
extern T0* T1746c4(GE_context* ac, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.convert_keyword */
extern T0* T71f731(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_convert */
extern T0* T402c90(GE_context* ac);
/* detachable ET_CONVERT_FEATURE_LIST.tokens */
extern T0* T1056f4(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_256 */
extern void T439f1463(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_255 */
extern void T439f1462(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_254 */
extern void T439f1461(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_253 */
extern void T439f1460(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_252 */
extern void T439f1459(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_251 */
extern void T439f1458(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].force */
extern void T1109f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FEATURE_NAME_ITEM].fill_with */
extern void T1111f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FEATURE_NAME_ITEM].extend */
extern void T1111f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T1109f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T1111f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_feature_name_comma */
extern T0* T448f158(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_250 */
extern void T439f1457(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATOR].force */
extern void T1063f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CREATOR].fill_with */
extern void T1065f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CREATOR].extend */
extern void T1065f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CREATOR.put_first */
extern void T1064f17(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CREATOR.fixed_array */
extern T0* T1064f6(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_249 */
extern void T439f1456(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATOR].aliased_resized_area */
extern T0* T1063f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CREATOR].aliased_resized_area */
extern T0* T1065f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_creator */
extern T0* T448f160(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* detachable ET_CREATOR.make_with_capacity */
extern T0* T1064c16(GE_context* ac, T0* a1, T6 a2);
/* detachable ET_CREATOR.make_feature_name_list_with_capacity */
extern void T1064f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.creation_keyword */
extern T0* T71f735(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_creation */
extern T0* T402c94(GE_context* ac);
/* detachable ET_CREATOR.tokens */
extern T0* T1064f5(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_248 */
extern void T439f1455(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_247 */
extern void T439f1454(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_246 */
extern void T439f1453(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_245 */
extern void T439f1452(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_244 */
extern void T439f1451(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_243 */
extern void T439f1450(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_242 */
extern void T439f1449(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_241 */
extern void T439f1448(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_240 */
extern void T439f1447(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_239 */
extern void T439f1446(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_238 */
extern void T439f1445(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_237 */
extern void T439f1444(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_236 */
extern void T439f1443(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_235 */
extern void T439f1442(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].force */
extern void T1066f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CREATOR_LIST].fill_with */
extern void T1068f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CREATOR_LIST].extend */
extern void T1068f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T1066f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T1068f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_234 */
extern void T439f1441(GE_context* ac, T0* C);
/* detachable ET_CREATOR_LIST.put_first */
extern void T1067f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CREATOR].force */
extern void T1749f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CREATOR].fill_with */
extern void T1748f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CREATOR].extend */
extern void T1748f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CREATOR_LIST.fixed_array */
extern T0* T1067f3(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CREATOR].default_create */
extern T0* T1749c2(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_233 */
extern void T439f1440(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_creators */
extern T0* T448f159(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CREATOR_LIST.make_with_capacity */
extern T0* T1067c9(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CREATOR].make */
extern T0* T1749f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_CREATOR].make_empty */
extern T0* T1748c4(GE_context* ac, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_232 */
extern void T439f1439(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_231 */
extern void T439f1438(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_230 */
extern void T439f1437(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_229 */
extern void T439f1436(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].force */
extern void T1157f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].fill_with */
extern void T1158f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].extend */
extern void T1158f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_KEYWORD_FEATURE_NAME_LIST.put_first */
extern void T556f9(GE_context* ac, T0* C, T0* a1);
/* detachable ET_KEYWORD_FEATURE_NAME_LIST.fixed_array */
extern T0* T556f5(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_228 */
extern void T439f1435(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T1157f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T1158f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_keyword_feature_name_list */
extern T0* T448f157(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern T0* T556c8(GE_context* ac, T6 a1);
/* detachable ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern void T556f8p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.redefine_keyword */
extern T0* T71f739(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_redefine */
extern T0* T402c98(GE_context* ac);
/* detachable ET_KEYWORD_FEATURE_NAME_LIST.tokens */
extern T0* T556f4(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_227 */
extern void T439f1434(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_226 */
extern void T439f1433(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_225 */
extern void T439f1432(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_224 */
extern void T439f1431(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_223 */
extern void T439f1430(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_222 */
extern void T439f1429(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_221 */
extern void T439f1428(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_220 */
extern void T439f1427(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_219 */
extern void T439f1426(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_218 */
extern void T439f1425(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_217 */
extern void T439f1424(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_216 */
extern void T439f1423(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_215 */
extern void T439f1422(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_214 */
extern void T439f1421(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_213 */
extern void T439f1420(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_212 */
extern void T439f1419(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_211 */
extern void T439f1418(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].force */
extern void T1024f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CLIENTS].fill_with */
extern void T1026f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CLIENTS].extend */
extern void T1026f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T1024f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T1026f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_clients */
extern T0* T448f156(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* detachable ET_CLIENTS.set_left_brace */
extern void T1025f19(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CLIENTS.make_with_capacity */
extern T0* T1025c20(GE_context* ac, T6 a1);
/* detachable ET_CLIENTS.make_with_capacity */
extern void T1025f20p1(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CLIENTS.tokens */
extern T0* T1025f5(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_210 */
extern void T439f1417(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_209 */
extern void T439f1416(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_208 */
extern void T439f1415(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].force */
extern void T1022f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CLIENT_ITEM].fill_with */
extern void T1023f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CLIENT_ITEM].extend */
extern void T1023f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T1022f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T1023f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.new_client_comma */
extern T0* T439f907(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_AST_FACTORY.new_client_comma */
extern T0* T448f338(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_207 */
extern void T439f1414(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_206 */
extern void T439f1413(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_205 */
extern void T439f1412(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_204 */
extern void T439f1411(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_203 */
extern void T439f1410(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_202 */
extern void T439f1409(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_none_clients */
extern T0* T448f155(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CLIENTS.make */
extern T0* T1025c17(GE_context* ac);
/* detachable ET_CLIENTS.make */
extern void T1025f17p1(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_201 */
extern void T439f1408(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_1_200 */
extern void T439f1187(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_200 */
extern void T439f1407(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_199 */
extern void T439f1406(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].force */
extern void T1104f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FEATURE_EXPORT].fill_with */
extern void T1106f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FEATURE_EXPORT].extend */
extern void T1106f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FEATURE_EXPORT.put_first */
extern void T1105f11(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FEATURE_EXPORT.fixed_array */
extern T0* T1105f4(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_198 */
extern void T439f1405(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T1104f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T1106f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_feature_export */
extern T0* T448f153(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable ET_FEATURE_EXPORT.make_with_capacity */
extern T0* T1105c10(GE_context* ac, T0* a1, T6 a2);
/* detachable ET_FEATURE_EXPORT.make_feature_name_list_with_capacity */
extern void T1105f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_197 */
extern void T439f1404(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_196 */
extern void T439f1403(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPORT].force */
extern void T1084f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_EXPORT].fill_with */
extern void T1086f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_EXPORT].extend */
extern void T1086f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPORT].aliased_resized_area */
extern T0* T1084f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_EXPORT].aliased_resized_area */
extern T0* T1086f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_null_export */
extern T0* T448f154(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_195 */
extern void T439f1402(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_194 */
extern void T439f1401(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_193 */
extern void T439f1400(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_192 */
extern void T439f1399(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_all_export */
extern T0* T448f152(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ALL_EXPORT.make */
extern T0* T1432c7(GE_context* ac, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.all_keyword */
extern T0* T71f1510(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_all */
extern T0* T402c56(GE_context* ac);
/* detachable ET_ALL_EXPORT.tokens */
extern T0* T1432f3(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_191 */
extern void T439f1398(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].force */
extern void T1087f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_EXPORT_LIST].fill_with */
extern void T1088f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_EXPORT_LIST].extend */
extern void T1088f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T1087f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T1088f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_190 */
extern void T439f1397(GE_context* ac, T0* C);
/* detachable ET_EXPORT_LIST.put_first */
extern void T555f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPORT].force */
extern void T1706f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_EXPORT].fill_with */
extern void T1705f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_EXPORT].extend */
extern void T1705f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXPORT_LIST.fixed_array */
extern T0* T555f5(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPORT].default_create */
extern T0* T1706c2(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_189 */
extern void T439f1396(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_exports */
extern T0* T448f151(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable ET_EXPORT_LIST.make_with_capacity */
extern T0* T555c7(GE_context* ac, T6 a1);
/* detachable ET_EXPORT_LIST.make_with_capacity */
extern void T555f7p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_EXPORT].make */
extern T0* T1706f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_EXPORT].make_empty */
extern T0* T1705c4(GE_context* ac, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.export_keyword */
extern T0* T71f726(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_export */
extern T0* T402c85(GE_context* ac);
/* detachable ET_EXPORT_LIST.tokens */
extern T0* T555f4(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_188 */
extern void T439f1395(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_187 */
extern void T439f1394(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_186 */
extern void T439f1393(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_185 */
extern void T439f1392(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_184 */
extern void T439f1391(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_183 */
extern void T439f1390(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].force */
extern void T1211f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_RENAME_ITEM].fill_with */
extern void T1213f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_RENAME_ITEM].extend */
extern void T1213f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T1211f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T1213f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_rename_comma */
extern T0* T448f150(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_182 */
extern void T439f1389(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_rename */
extern T0* T448f149(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_181 */
extern void T439f1388(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].force */
extern void T1214f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_RENAME_LIST].fill_with */
extern void T1215f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_RENAME_LIST].extend */
extern void T1215f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_RENAME_LIST.put_first */
extern void T554f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_RENAME_ITEM].force */
extern void T1703f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_RENAME_ITEM].fill_with */
extern void T1702f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_RENAME_ITEM].extend */
extern void T1702f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_RENAME_LIST.fixed_array */
extern T0* T554f5(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_RENAME_ITEM].default_create */
extern T0* T1703c2(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_180 */
extern void T439f1387(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T1214f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T1215f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_renames */
extern T0* T448f148(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable ET_RENAME_LIST.make_with_capacity */
extern T0* T554c8(GE_context* ac, T6 a1);
/* detachable ET_RENAME_LIST.make_with_capacity */
extern void T554f8p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_RENAME_ITEM].make */
extern T0* T1703f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_RENAME_ITEM].make_empty */
extern T0* T1702c4(GE_context* ac, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.rename_keyword */
extern T0* T71f728(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_rename */
extern T0* T402c87(GE_context* ac);
/* detachable ET_RENAME_LIST.tokens */
extern T0* T554f4(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_179 */
extern void T439f1386(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_178 */
extern void T439f1385(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_177 */
extern void T439f1384(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_176 */
extern void T439f1383(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_175 */
extern void T439f1382(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].force */
extern void T1195f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_PARENT_ITEM].fill_with */
extern void T1196f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_PARENT_ITEM].extend */
extern void T1196f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T1195f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T1196f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_parent_semicolon */
extern T0* T448f147(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_174 */
extern void T439f1381(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].force */
extern void T1197f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_PARENT_LIST].fill_with */
extern void T1198f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_PARENT_LIST].extend */
extern void T1198f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_173 */
extern void T439f1380(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_172 */
extern void T439f1379(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T1197f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T1198f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_parents */
extern T0* T448f146(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_171 */
extern void T439f1378(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_170 */
extern void T439f1377(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT].force */
extern void T1190f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_PARENT].fill_with */
extern void T1191f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_PARENT].extend */
extern void T1191f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT].aliased_resized_area */
extern T0* T1190f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_PARENT].aliased_resized_area */
extern T0* T1191f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.new_parent */
extern T0* T439f905(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* [detachable] ET_AST_FACTORY.new_parent */
extern T0* T448f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_CLASS.has_formal_parameter */
extern T1 T72f191(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FORMAL_PARAMETER_LIST.has_formal_parameter */
extern T1 T585f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_169 */
extern void T439f1376(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_168 */
extern void T439f1375(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_167 */
extern void T439f1374(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_166 */
extern void T439f1373(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_165 */
extern void T439f1372(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_164 */
extern void T439f1371(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_163 */
extern void T439f1370(GE_context* ac, T0* C);
/* [detachable] ET_PARENT_LIST.set_clients_clause */
extern void T550f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_162 */
extern void T439f1369(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_161 */
extern void T439f1368(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].force */
extern void T1192f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_PARENT_CLAUSE_LIST].fill_with */
extern void T1194f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_PARENT_CLAUSE_LIST].extend */
extern void T1194f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].aliased_resized_area */
extern T0* T1192f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_PARENT_CLAUSE_LIST].aliased_resized_area */
extern T0* T1194f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_160 */
extern void T439f1367(GE_context* ac, T0* C);
/* detachable ET_PARENT_CLAUSE_LIST.put_first */
extern void T1193f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_LIST].force */
extern void T1765f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_PARENT_LIST].fill_with */
extern void T1764f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_PARENT_LIST].extend */
extern void T1764f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PARENT_CLAUSE_LIST.fixed_array */
extern T0* T1193f3(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_LIST].default_create */
extern T0* T1765c2(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_159 */
extern void T439f1366(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_parent_clauses */
extern T0* T448f145(GE_context* ac, T0* C, T6 a1);
/* detachable ET_PARENT_CLAUSE_LIST.make_with_capacity */
extern T0* T1193c6(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_LIST].make */
extern T0* T1765f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_PARENT_LIST].make_empty */
extern T0* T1764c4(GE_context* ac, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_158 */
extern void T439f1365(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_157 */
extern void T439f1364(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_156 */
extern void T439f1363(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].force */
extern void T1184f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_OBSOLETE].fill_with */
extern void T1186f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_OBSOLETE].extend */
extern void T1186f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T1184f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T1186f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_obsolete_message */
extern T0* T448f144(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_155 */
extern void T439f1362(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_154 */
extern void T439f1361(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].force */
extern void T1034f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T1036f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].extend */
extern void T1036f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1034f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1036f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_constraint_labeled_actual_parameter_semicolon */
extern T0* T448f143(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_AST_FACTORY.new_constraint_labeled_actual_parameter */
extern T0* T448f141(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.make */
extern T0* T1430c6(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_153 */
extern void T439f1360(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_152 */
extern void T439f1359(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].force */
extern void T1037f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].fill_with */
extern void T1039f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].extend */
extern void T1039f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.add_to_constraint_actual_parameter_list */
extern void T439f2163(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.put_first */
extern void T1038f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].force */
extern void T1744f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T1742f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].extend */
extern void T1742f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.fixed_array */
extern T0* T1038f8(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T1744c2(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_constraint_labeled_comma_actual_parameter */
extern T0* T448f142(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T1431c6(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.first */
extern T0* T1038f7(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T1038f5(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_151 */
extern void T439f1358(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_150 */
extern void T439f1357(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_149 */
extern void T439f1356(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1037f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1039f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_constraint_actual_parameters */
extern T0* T448f139(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T1038f14(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T1038c12(GE_context* ac, T6 a1);
/* detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T1038f12p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T1744f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T1742c4(GE_context* ac, T6 a1);
/* detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T1038f6(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_148 */
extern void T439f1355(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_147 */
extern void T439f1354(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_146 */
extern void T439f1353(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_145 */
extern void T439f1352(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_144 */
extern void T439f1351(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_143 */
extern void T439f1350(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_constraint_actual_parameter_comma */
extern T0* T448f140(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_142 */
extern void T439f1349(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.new_constraint_named_type */
extern T0* T439f904(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_AST_FACTORY.new_constraint_named_type */
extern T0* T448f333(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CONSTRAINT_NAMED_TYPE.make */
extern T0* T1429c7(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_AST_FACTORY.new_constraint_generic_named_type */
extern T0* T448f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_CONSTRAINT_GENERIC_NAMED_TYPE.make */
extern T0* T1681c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_141 */
extern void T439f1348(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_140 */
extern void T439f1347(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_139 */
extern void T439f1346(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_138 */
extern void T439f1345(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_137 */
extern void T439f1344(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_136 */
extern void T439f1343(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_135 */
extern void T439f1342(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].force */
extern void T1046f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_TYPE].fill_with */
extern void T1048f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_TYPE].extend */
extern void T1048f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T1046f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T1048f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_134 */
extern void T439f1341(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_133 */
extern void T439f1340(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_132 */
extern void T439f1339(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_131 */
extern void T439f1338(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_130 */
extern void T439f1337(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_129 */
extern void T439f1336(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_128 */
extern void T439f1335(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_127 */
extern void T439f1334(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_126 */
extern void T439f1333(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_125 */
extern void T439f1332(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_124 */
extern void T439f1331(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_123 */
extern void T439f1330(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_122 */
extern void T439f1329(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_121 */
extern void T439f1328(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_120 */
extern void T439f1327(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_119 */
extern void T439f1326(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_118 */
extern void T439f1325(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_117 */
extern void T439f1324(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_116 */
extern void T439f1323(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_115 */
extern void T439f1322(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_114 */
extern void T439f1321(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_113 */
extern void T439f1320(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_112 */
extern void T439f1319(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_111 */
extern void T439f1318(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_110 */
extern void T439f1317(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_109 */
extern void T439f1316(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_108 */
extern void T439f1315(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_107 */
extern void T439f1314(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_106 */
extern void T439f1313(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_105 */
extern void T439f1312(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_104 */
extern void T439f1311(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_103 */
extern void T439f1310(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_102 */
extern void T439f1309(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_101 */
extern void T439f1308(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_100 */
extern void T439f1307(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_99 */
extern void T439f1306(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_98 */
extern void T439f1305(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_97 */
extern void T439f1304(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_96 */
extern void T439f1303(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_95 */
extern void T439f1302(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_94 */
extern void T439f1301(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_93 */
extern void T439f1300(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_92 */
extern void T439f1299(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_91 */
extern void T439f1298(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].force */
extern void T1040f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_CREATOR].fill_with */
extern void T1042f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_CREATOR].extend */
extern void T1042f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINT_CREATOR.put_first */
extern void T1041f13(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINT_CREATOR.fixed_array */
extern T0* T1041f6(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_90 */
extern void T439f1297(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T1040f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T1042f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_constraint_creator */
extern T0* T448f137(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* detachable ET_CONSTRAINT_CREATOR.make_with_capacity */
extern T0* T1041c12(GE_context* ac, T6 a1);
/* detachable ET_CONSTRAINT_CREATOR.make_with_capacity */
extern void T1041f12p1(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CONSTRAINT_CREATOR.tokens */
extern T0* T1041f5(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_89 */
extern void T439f1296(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_88 */
extern void T439f1295(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_87 */
extern void T439f1294(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_86 */
extern void T439f1293(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_85 */
extern void T439f1292(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_84 */
extern void T439f1291(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_83 */
extern void T439f1290(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST].force */
extern void T1043f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].fill_with */
extern void T1045f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].extend */
extern void T1045f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINT_RENAME_LIST.put_first */
extern void T1044f13(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINT_RENAME_LIST.fixed_array */
extern T0* T1044f6(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_82 */
extern void T439f1289(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST].aliased_resized_area */
extern T0* T1043f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].aliased_resized_area */
extern T0* T1045f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_constraint_renames */
extern T0* T448f136(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* detachable ET_CONSTRAINT_RENAME_LIST.make_with_capacity */
extern T0* T1044c12(GE_context* ac, T6 a1);
/* detachable ET_CONSTRAINT_RENAME_LIST.make_with_capacity */
extern void T1044f12p1(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CONSTRAINT_RENAME_LIST.make_with_capacity */
extern void T1044f12p0(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CONSTRAINT_RENAME_LIST.tokens */
extern T0* T1044f5(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_81 */
extern void T439f1288(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_80 */
extern void T439f1287(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_79 */
extern void T439f1286(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_78 */
extern void T439f1285(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_77 */
extern void T439f1284(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM].force */
extern void T1227f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].fill_with */
extern void T1229f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].extend */
extern void T1229f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM].aliased_resized_area */
extern T0* T1227f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].aliased_resized_area */
extern T0* T1229f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_type_constraint_comma */
extern T0* T448f135(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_76 */
extern void T439f1283(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST].force */
extern void T1230f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].fill_with */
extern void T1232f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].extend */
extern void T1232f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_TYPE_CONSTRAINT_LIST.put_first */
extern void T1231f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE_CONSTRAINT_ITEM].force */
extern void T1768f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_TYPE_CONSTRAINT_ITEM].fill_with */
extern void T1767f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_TYPE_CONSTRAINT_ITEM].extend */
extern void T1767f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_TYPE_CONSTRAINT_LIST.fixed_array */
extern T0* T1231f6(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE_CONSTRAINT_ITEM].default_create */
extern T0* T1768c2(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_75 */
extern void T439f1282(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST].aliased_resized_area */
extern T0* T1230f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].aliased_resized_area */
extern T0* T1232f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_type_constraint_list */
extern T0* T448f134(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* detachable ET_TYPE_CONSTRAINT_LIST.set_left_brace */
extern void T1231f13(GE_context* ac, T0* C, T0* a1);
/* detachable ET_TYPE_CONSTRAINT_LIST.make_with_capacity */
extern T0* T1231c11(GE_context* ac, T6 a1);
/* detachable ET_TYPE_CONSTRAINT_LIST.make_with_capacity */
extern void T1231f11p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE_CONSTRAINT_ITEM].make */
extern T0* T1768f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_TYPE_CONSTRAINT_ITEM].make_empty */
extern T0* T1767c4(GE_context* ac, T6 a1);
/* detachable ET_TYPE_CONSTRAINT_LIST.tokens */
extern T0* T1231f5(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_74 */
extern void T439f1281(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_73 */
extern void T439f1280(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_72 */
extern void T439f1279(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT].force */
extern void T1224f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT].fill_with */
extern void T1226f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT].extend */
extern void T1226f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT].aliased_resized_area */
extern T0* T1224f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT].aliased_resized_area */
extern T0* T1226f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.register_constraint */
extern void T439f2162(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].force_last */
extern void T912f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].resize */
extern void T912f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_capacity */
extern T6 T912f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].extendible */
extern T1 T912f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_type_rename_constraint */
extern T0* T448f133(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_TYPE_RENAME_CONSTRAINT.make */
extern T0* T1428c8(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.dummy_constraint */
extern T0* T439f903(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_71 */
extern void T439f1278(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_70 */
extern void T439f1277(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].force */
extern void T1119f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER].fill_with */
extern void T1120f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER].extend */
extern void T1120f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T1119f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T1120f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_constrained_formal_parameter */
extern T0* T448f132(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.set_type_mark */
extern void T1427f78(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.make */
extern T0* T1427c77(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.make_unconstrained */
extern void T1427f80(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.arrow_symbol */
extern T0* T71f704(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.make_arrow */
extern T0* T342c97(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_69 */
extern void T439f1276(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_68 */
extern void T439f1275(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_67 */
extern void T439f1274(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_66 */
extern void T439f1273(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_65 */
extern void T439f1272(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_64 */
extern void T439f1271(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_formal_parameter */
extern T0* T448f131(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FORMAL_PARAMETER.set_type_mark */
extern void T852f79(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.make */
extern T0* T852c78(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_63 */
extern void T439f1270(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_62 */
extern void T439f1269(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_61 */
extern void T439f1268(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].force */
extern void T1121f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].fill_with */
extern void T1123f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].extend */
extern void T1123f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1121f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1123f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_formal_parameter_comma */
extern T0* T448f130(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_60 */
extern void T439f1267(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].force */
extern void T1124f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].fill_with */
extern void T1125f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].extend */
extern void T1125f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FORMAL_PARAMETER_LIST.put_first */
extern void T585f28(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.set_index */
extern void T1427f79(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FORMAL_PARAMETER.set_index */
extern void T852f80(GE_context* ac, T0* C, T6 a1);
/* detachable ET_FORMAL_PARAMETER_LIST.capacity */
extern T6 T585f9(GE_context* ac, T0* C);
/* detachable ET_FORMAL_PARAMETER_LIST.put_first */
extern void T585f28p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER_ITEM].force */
extern void T1711f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_FORMAL_PARAMETER_ITEM].fill_with */
extern void T1710f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_FORMAL_PARAMETER_ITEM].extend */
extern void T1710f9(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FORMAL_PARAMETER_LIST.fixed_array */
extern T0* T585f8(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T1711c2(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_59 */
extern void T439f1266(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1124f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1125f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_formal_parameters */
extern T0* T448f129(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* detachable ET_FORMAL_PARAMETER_LIST.set_left_bracket */
extern void T585f29(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern T0* T585c26(GE_context* ac, T6 a1);
/* detachable ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern void T585f26p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T1711f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_FORMAL_PARAMETER_ITEM].make_empty */
extern T0* T1710c4(GE_context* ac, T6 a1);
/* detachable ET_FORMAL_PARAMETER_LIST.tokens */
extern T0* T585f6(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_58 */
extern void T439f1265(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_57 */
extern void T439f1264(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.set_formal_parameters */
extern void T439f2159(GE_context* ac, T0* C, T0* a1);
extern T1 T439f2159ot1(T0* a1, T0** a2);
extern T1 T439f2159ot2(T0* a1, T0** a2);
extern T1 T439f2159ot3(T0* a1, T0** a2);
extern T1 T439f2159ot4(T0* a1, T0** a2);
extern T1 T439f2159ot5(T0* a1, T0** a2);
/* [detachable] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].wipe_out */
extern void T912f11(GE_context* ac, T0* C);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_TYPE].keep_head */
extern void T1048f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_TYPE].set_count */
extern void T1048f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].move_all_cursors_after */
extern void T912f14(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_next_cursor */
extern void T1575f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_after */
extern void T1575f6(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.set_formal_parameters */
extern void T72f302(GE_context* ac, T0* C, T0* a1);
extern T1 T72f302ot1(T0* a1);
/* detachable ET_TYPE_CONSTRAINT_LIST.put */
extern void T1231f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable ET_TYPE_CONSTRAINT_LIST.remove */
extern void T1231f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_TYPE_CONSTRAINT_ITEM].keep_head */
extern void T1768f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_TYPE_CONSTRAINT_ITEM].keep_head */
extern void T1767f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_TYPE_CONSTRAINT_ITEM].set_count */
extern void T1767f9(GE_context* ac, T0* C, T6 a1);
/* detachable ET_TYPE_CONSTRAINT_LIST.item */
extern T0* T1231f7(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint */
extern void T1427f81(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FORMAL_PARAMETER_LIST.remove */
extern void T585f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T1711f3(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T1710f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_FORMAL_PARAMETER_ITEM].set_count */
extern void T1710f8(GE_context* ac, T0* C, T6 a1);
/* detachable ET_TYPE_RENAME_CONSTRAINT.set_type */
extern void T1428f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].item */
extern T0* T912f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_56 */
extern void T439f1263(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_55 */
extern void T439f1262(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_54 */
extern void T439f1261(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_53 */
extern void T439f1260(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_52 */
extern void T439f1259(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_51 */
extern void T439f1258(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_50 */
extern void T439f1257(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLASS].force */
extern void T1020f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CLASS].fill_with */
extern void T1021f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CLASS].extend */
extern void T1021f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLASS].aliased_resized_area */
extern T0* T1020f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CLASS].aliased_resized_area */
extern T0* T1021f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLASS.set_external_keyword */
extern void T72f300(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.set_frozen_keyword */
extern void T72f299(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.set_class_mark */
extern void T72f313(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.set_class_keyword */
extern void T72f298(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.new_class */
extern T0* T439f901(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.set_name */
extern void T72f314(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.file_system */
extern T0* T439f961(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.unix_file_system */
extern T0* T439f971(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.windows_file_system */
extern T0* T439f970(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.operating_system */
extern T0* T439f969(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvscn1a_error */
extern void T50f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvscn1a */
extern T0* T742c864(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_gvscn1a_error */
extern void T34f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_MASTER_CLASS.first_local_class */
extern T0* T552f29(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.has_local_class */
extern T1 T552f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.has_local_hidden_class */
extern T1 T552f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_CLASS].has */
extern T1 T445f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.has_local_ignored_class */
extern T1 T552f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.has_local_non_override_class */
extern T1 T552f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.has_local_override_class */
extern T1 T552f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_49 */
extern void T439f1256(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_48 */
extern void T439f1255(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_47 */
extern void T439f1254(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_46 */
extern void T439f1253(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].force */
extern void T1140f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_INDEXING_TERM_ITEM].fill_with */
extern void T1142f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_INDEXING_TERM_ITEM].extend */
extern void T1142f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].aliased_resized_area */
extern T0* T1140f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_INDEXING_TERM_ITEM].aliased_resized_area */
extern T0* T1142f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_indexing_term_comma */
extern T0* T448f128(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_45 */
extern void T439f1252(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].force */
extern void T1138f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_INDEXING_TERM].fill_with */
extern void T1139f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_INDEXING_TERM].extend */
extern void T1139f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].aliased_resized_area */
extern T0* T1138f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_INDEXING_TERM].aliased_resized_area */
extern T0* T1139f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_custom_attribute */
extern T0* T448f127(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_CUSTOM_ATTRIBUTE.make */
extern T0* T1426c9(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_CUSTOM_ATTRIBUTE.tokens */
extern T0* T1426f4(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_44 */
extern void T439f1251(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_43 */
extern void T439f1250(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_42 */
extern void T439f1249(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_41 */
extern void T439f1248(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_40 */
extern void T439f1247(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_39 */
extern void T439f1246(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_38 */
extern void T439f1245(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_37 */
extern void T439f1244(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].force */
extern void T1143f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_INDEXING_TERM_LIST].fill_with */
extern void T1145f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_INDEXING_TERM_LIST].extend */
extern void T1145f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_INDEXING_TERM_LIST.put_first */
extern void T1144f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM_ITEM].force */
extern void T1760f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_INDEXING_TERM_ITEM].fill_with */
extern void T1759f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_INDEXING_TERM_ITEM].extend */
extern void T1759f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_INDEXING_TERM_LIST.fixed_array */
extern T0* T1144f3(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM_ITEM].default_create */
extern T0* T1760c2(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_36 */
extern void T439f1243(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].aliased_resized_area */
extern T0* T1143f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_INDEXING_TERM_LIST].aliased_resized_area */
extern T0* T1145f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_indexing_terms */
extern T0* T448f126(GE_context* ac, T0* C, T6 a1);
/* detachable ET_INDEXING_TERM_LIST.make_with_capacity */
extern T0* T1144c9(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM_ITEM].make */
extern T0* T1760f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_INDEXING_TERM_ITEM].make_empty */
extern T0* T1759c4(GE_context* ac, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_35 */
extern void T439f1242(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].force */
extern void T1135f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_INDEXING_ITEM].fill_with */
extern void T1137f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_INDEXING_ITEM].extend */
extern void T1137f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_indexing_semicolon */
extern T0* T448f124(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_34 */
extern void T439f1241(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_33 */
extern void T439f1240(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].aliased_resized_area */
extern T0* T1135f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_INDEXING_ITEM].aliased_resized_area */
extern T0* T1137f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_tagged_indexing */
extern T0* T448f123(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_TAGGED_INDEXING.make */
extern T0* T1424c5(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_32 */
extern void T439f1239(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_indexing */
extern T0* T448f125(GE_context* ac, T0* C, T0* a1);
/* detachable ET_INDEXING.make */
extern T0* T1425c5(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_31 */
extern void T439f1238(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_30 */
extern void T439f1237(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].force */
extern void T1132f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_INDEXING_LIST].fill_with */
extern void T1134f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_INDEXING_LIST].extend */
extern void T1134f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].aliased_resized_area */
extern T0* T1132f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_INDEXING_LIST].aliased_resized_area */
extern T0* T1134f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_29 */
extern void T439f1236(GE_context* ac, T0* C);
/* detachable ET_INDEXING_LIST.put_first */
extern void T1133f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_ITEM].force */
extern void T1758f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_INDEXING_ITEM].fill_with */
extern void T1757f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_INDEXING_ITEM].extend */
extern void T1757f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_INDEXING_LIST.fixed_array */
extern T0* T1133f5(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_ITEM].default_create */
extern T0* T1758c2(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_28 */
extern void T439f1235(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_27 */
extern void T439f1234(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_26 */
extern void T439f1233(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_indexings */
extern T0* T448f121(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable ET_INDEXING_LIST.set_indexing_keyword */
extern void T1133f13(GE_context* ac, T0* C, T0* a1);
/* detachable ET_INDEXING_LIST.make_with_capacity */
extern T0* T1133c11(GE_context* ac, T6 a1);
/* detachable ET_INDEXING_LIST.make_with_capacity */
extern void T1133f11p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_ITEM].make */
extern T0* T1758f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_INDEXING_ITEM].make_empty */
extern T0* T1757c4(GE_context* ac, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.indexing_keyword */
extern T0* T71f737(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_indexing */
extern T0* T402c96(GE_context* ac);
/* detachable ET_INDEXING_LIST.tokens */
extern T0* T1133f4(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_25 */
extern void T439f1232(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_24 */
extern void T439f1231(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_23 */
extern void T439f1230(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_22 */
extern void T439f1229(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_21 */
extern void T439f1228(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_20 */
extern void T439f1227(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_19 */
extern void T439f1226(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_18 */
extern void T439f1225(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_17 */
extern void T439f1224(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_16 */
extern void T439f1223(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_15 */
extern void T439f1222(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_14 */
extern void T439f1221(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_13 */
extern void T439f1220(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_12 */
extern void T439f1219(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_11 */
extern void T439f1218(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_10 */
extern void T439f1217(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_9 */
extern void T439f1216(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_8 */
extern void T439f1215(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.set_class_providers */
extern void T439f2153(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].forth */
extern void T913f41(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].put_last */
extern void T913f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].compress */
extern void T913f57(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].key_storage_keep_head */
extern void T913f66(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].item_storage_keep_head */
extern void T913f65(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].move_all_cursors */
extern void T913f64(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].key_storage_put */
extern void T913f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].item_for_iteration */
extern T0* T913f17(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].after */
extern T1 T913f20(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].cursor_after */
extern T1 T913f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_NAMED_CLASS].start */
extern void T913f39(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.set_providers */
extern void T72f301(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_7 */
extern void T439f1214(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.set_class_to_end */
extern void T439f2152(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* [detachable] ET_CLASS.set_parsed */
extern void T72f272(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.set_end_keyword */
extern void T72f312(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.set_second_indexing */
extern void T72f311(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.set_invariants */
extern void T72f310(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.set_feature_clauses */
extern void T72f309(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.set_convert_features */
extern void T72f308(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.set_creators */
extern void T72f307(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.set_parent_clauses */
extern void T72f306(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.set_obsolete_message */
extern void T72f305(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_6 */
extern void T439f1213(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_5 */
extern void T439f1212(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_4 */
extern void T439f1211(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_3 */
extern void T439f1210(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.set_first_indexing */
extern void T72f304(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_2 */
extern void T439f1209(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.set_leading_break */
extern void T72f303(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_action_1 */
extern void T439f1208(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_push_last_value */
extern void T439f1164(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].force */
extern void T969f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].fill_with */
extern void T971f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].extend */
extern void T971f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T969f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T971f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].force */
extern void T967f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_BRACKET_SYMBOL].fill_with */
extern void T968f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_BRACKET_SYMBOL].extend */
extern void T968f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T967f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T968f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_VOID].force */
extern void T961f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_VOID].fill_with */
extern void T963f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_VOID].extend */
extern void T963f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_VOID].aliased_resized_area */
extern T0* T961f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_VOID].aliased_resized_area */
extern T0* T963f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].force */
extern void T958f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_SYMBOL_OPERATOR].fill_with */
extern void T960f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_SYMBOL_OPERATOR].extend */
extern void T960f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T958f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T960f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].force */
extern void T955f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_RETRY_INSTRUCTION].fill_with */
extern void T957f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_RETRY_INSTRUCTION].extend */
extern void T957f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T955f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T957f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_RESULT].force */
extern void T953f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_RESULT].fill_with */
extern void T954f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_RESULT].extend */
extern void T954f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_RESULT].aliased_resized_area */
extern T0* T953f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_RESULT].aliased_resized_area */
extern T0* T954f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T950f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T952f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].force */
extern void T945f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_KEYWORD_OPERATOR].fill_with */
extern void T947f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_KEYWORD_OPERATOR].extend */
extern void T947f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T945f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T947f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T942f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T944f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].aliased_resized_area */
extern T0* T940f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_IDENTIFIER].aliased_resized_area */
extern T0* T941f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].force */
extern void T937f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FREE_OPERATOR].fill_with */
extern void T939f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_FREE_OPERATOR].extend */
extern void T939f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T937f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T939f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CURRENT].force */
extern void T935f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CURRENT].fill_with */
extern void T936f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_CURRENT].extend */
extern void T936f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CURRENT].aliased_resized_area */
extern T0* T935f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_CURRENT].aliased_resized_area */
extern T0* T936f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_BREAK].force */
extern void T929f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_BREAK].fill_with */
extern void T931f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_BREAK].extend */
extern void T931f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_BREAK].aliased_resized_area */
extern T0* T929f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_BREAK].aliased_resized_area */
extern T0* T931f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T926f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T928f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_POSITION].force */
extern void T924f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_POSITION].fill_with */
extern void T925f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_POSITION].extend */
extern void T925f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_POSITION].aliased_resized_area */
extern T0* T924f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_POSITION].aliased_resized_area */
extern T0* T925f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].force */
extern void T919f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_PRECURSOR_KEYWORD].fill_with */
extern void T921f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_PRECURSOR_KEYWORD].extend */
extern void T921f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T919f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T921f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].force */
extern void T916f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_AGENT_KEYWORD].fill_with */
extern void T918f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable ET_AGENT_KEYWORD].extend */
extern void T918f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T916f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T918f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.accept */
extern void T439f1163(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_error_action */
extern void T439f1161(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.report_error */
extern void T439f1186(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_error_action_1600_1799 */
extern void T439f1185(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.report_eof_expected_error */
extern void T439f1207(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_do_error_action_1400_1599 */
extern void T439f1184(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_error_action_1200_1399 */
extern void T439f1183(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_error_action_1000_1199 */
extern void T439f1182(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_error_action_800_999 */
extern void T439f1181(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_error_action_600_799 */
extern void T439f1180(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_error_action_400_599 */
extern void T439f1179(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_error_action_200_399 */
extern void T439f1178(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_do_error_action_0_199 */
extern void T439f1177(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.read_token */
extern void T439f1160(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_execute_action */
extern void T439f1176(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.less */
extern void T439f1206(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.process_break */
extern void T439f1195(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_comment */
extern T0* T448f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_break */
extern T0* T448f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_underscored_real_constant */
extern T0* T448f13(GE_context* ac, T0* C, T0* a1);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.set_position */
extern void T1417f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.make */
extern T0* T1417c41(GE_context* ac, T0* a1);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.make_leaf */
extern void T1417f46(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.last_literal */
extern T0* T439f972(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_regular_real_constant */
extern T0* T448f12(GE_context* ac, T0* C, T0* a1);
/* detachable ET_REGULAR_REAL_CONSTANT.set_position */
extern void T1416f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable ET_REGULAR_REAL_CONSTANT.make */
extern T0* T1416c41(GE_context* ac, T0* a1);
/* detachable ET_REGULAR_REAL_CONSTANT.make_leaf */
extern void T1416f46(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_binary_integer_constant */
extern T0* T448f11(GE_context* ac, T0* C, T0* a1);
/* detachable ET_BINARY_INTEGER_CONSTANT.set_position */
extern void T1415f66(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable ET_BINARY_INTEGER_CONSTANT.make */
extern T0* T1415c63(GE_context* ac, T0* a1);
/* detachable ET_BINARY_INTEGER_CONSTANT.compute_value */
extern void T1415f69(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.make_leaf */
extern void T1415f68(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_octal_integer_constant */
extern T0* T448f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_OCTAL_INTEGER_CONSTANT.set_position */
extern void T1414f66(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable ET_OCTAL_INTEGER_CONSTANT.make */
extern T0* T1414c63(GE_context* ac, T0* a1);
/* detachable ET_OCTAL_INTEGER_CONSTANT.compute_value */
extern void T1414f69(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.make_leaf */
extern void T1414f68(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_hexadecimal_integer_constant */
extern T0* T448f9(GE_context* ac, T0* C, T0* a1);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.set_position */
extern void T1413f66(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.make */
extern T0* T1413c63(GE_context* ac, T0* a1);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.compute_value */
extern void T1413f69(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.make_leaf */
extern void T1413f68(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_underscored_integer_constant */
extern T0* T448f8(GE_context* ac, T0* C, T0* a1);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.set_position */
extern void T1412f66(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.make */
extern T0* T1412c63(GE_context* ac, T0* a1);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.compute_value */
extern void T1412f69(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.make_leaf */
extern void T1412f68(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_regular_integer_constant */
extern T0* T448f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.set_position */
extern void T360f66(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_ssel_error */
extern void T50f259(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_ssel_error */
extern void T34f259(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_sscu_error */
extern void T50f256(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_sscu_error */
extern void T34f256(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_ssac_error */
extern void T50f255(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_ssac_error */
extern void T34f255(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_ssas_error */
extern void T50f254(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_ssas_error */
extern void T34f254(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_ssao_error */
extern void T50f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_ssao_error */
extern void T34f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_AST_FACTORY.new_special_manifest_string */
extern T0* T448f6(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SPECIAL_MANIFEST_STRING.set_position */
extern void T1411f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_EIFFEL_PARSER.last_special_manifest_string */
extern T0* T439f975(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.make */
extern T0* T1411c42(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_SPECIAL_MANIFEST_STRING.make_leaf */
extern void T1411f48(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.integer_ */
extern T0* T439f979(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_verbatim_string */
extern T0* T448f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* detachable ET_VERBATIM_STRING.set_position */
extern void T1410f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_EIFFEL_PARSER.last_verbatim_string */
extern T0* T439f974(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* detachable ET_VERBATIM_STRING.make */
extern T0* T1410c46(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* detachable ET_VERBATIM_STRING.make_leaf */
extern void T1410f52(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.is_verbatim_string_closer */
extern T1 T439f742(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_EIFFEL_PARSER.text */
extern T0* T439f740(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.append_text_to_string */
extern void T439f2186(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.text_substring */
extern T0* T439f738(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_EIFFEL_PARSER.process_regular_manifest_string */
extern void T439f1205(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_regular_manifest_string */
extern T0* T448f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REGULAR_MANIFEST_STRING.set_position */
extern void T848f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_REGULAR_MANIFEST_STRING.make */
extern T0* T848c41(GE_context* ac, T0* a1);
/* [detachable] ET_REGULAR_MANIFEST_STRING.make_leaf */
extern void T848f42(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_scao_error */
extern void T50f248(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_scao_error */
extern void T34f248(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_AST_FACTORY.new_c3_character_constant */
extern T0* T448f3(GE_context* ac, T0* C, T0* a1);
/* detachable ET_C3_CHARACTER_CONSTANT.set_position */
extern void T1409f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_EIFFEL_PARSER.last_c3_character_constant */
extern T0* T439f973(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.make */
extern T0* T1409c43(GE_context* ac, T0* a1, T3 a2);
/* detachable ET_C3_CHARACTER_CONSTANT.make_leaf */
extern void T1409f49(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.process_c2_character_constant */
extern void T439f1204(GE_context* ac, T0* C, T2 a1);
/* [detachable] ET_AST_FACTORY.new_c2_character_constant */
extern T0* T448f120(GE_context* ac, T0* C, T2 a1, T0* a2);
/* detachable ET_C2_CHARACTER_CONSTANT.set_position */
extern void T1422f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable ET_C2_CHARACTER_CONSTANT.make */
extern T0* T1422c42(GE_context* ac, T3 a1);
/* detachable ET_C2_CHARACTER_CONSTANT.make_leaf */
extern void T1422f46(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_scsc_error */
extern void T50f264(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_scsc_error */
extern void T34f264(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_sccu_error */
extern void T50f263(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_sccu_error */
extern void T34f263(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.process_c1_character_constant */
extern void T439f1203(GE_context* ac, T0* C, T2 a1);
/* [detachable] ET_AST_FACTORY.new_c1_character_constant */
extern T0* T448f119(GE_context* ac, T0* C, T2 a1, T0* a2);
/* detachable ET_C1_CHARACTER_CONSTANT.set_position */
extern void T1421f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable ET_C1_CHARACTER_CONSTANT.make */
extern T0* T1421c42(GE_context* ac, T3 a1);
/* detachable ET_C1_CHARACTER_CONSTANT.make_leaf */
extern void T1421f46(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_free_operator */
extern T0* T448f2(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FREE_OPERATOR.set_position */
extern void T938f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable ET_FREE_OPERATOR.make_prefix */
extern T0* T938c46(GE_context* ac, T0* a1);
/* detachable ET_FREE_OPERATOR.string_ */
extern T0* T938f10(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.make_token */
extern void T938f50(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FREE_OPERATOR.make_leaf */
extern void T938f51(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.set_start_condition */
extern void T439f1196(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.more */
extern void T439f1202(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.process_identifier */
extern void T439f1201(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AST_FACTORY.new_detachable_keyword */
extern T0* T448f118(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_KEYWORD.set_position */
extern void T402f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_EIFFEL_PARSER.use_detachable_keyword */
extern T1 T439f875(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_reference_keyword */
extern T0* T448f117(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_KEYWORD.make_reference */
extern T0* T402c66(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.use_reference_keyword */
extern T1 T439f873(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_precursor_keyword */
extern T0* T448f116(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PRECURSOR_KEYWORD.set_position */
extern void T920f22(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_AST_FACTORY.new_invariant_keyword */
extern T0* T448f115(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_attribute_keyword */
extern T0* T448f114(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.use_attribute_keyword */
extern T1 T439f869(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_undefine_keyword */
extern T0* T448f113(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.undefine_keyword */
extern T0* T71f740(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_undefine */
extern T0* T402c99(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_separate_keyword */
extern T0* T448f112(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_redefine_keyword */
extern T0* T448f111(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_obsolete_keyword */
extern T0* T448f110(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.obsolete_keyword */
extern T0* T71f738(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_obsolete */
extern T0* T402c97(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_indexing_keyword */
extern T0* T448f109(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_external_keyword */
extern T0* T448f108(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.external_keyword */
extern T0* T71f736(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_external */
extern T0* T402c95(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_expanded_keyword */
extern T0* T448f107(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_KEYWORD.make_expanded */
extern T0* T402c65(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_deferred_keyword */
extern T0* T448f106(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_creation_keyword */
extern T0* T448f105(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_attached_keyword */
extern T0* T448f104(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.use_attached_keyword */
extern T1 T439f858(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_variant_keyword */
extern T0* T448f103(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_require_keyword */
extern T0* T448f102(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_inspect_keyword */
extern T0* T448f101(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.inspect_keyword */
extern T0* T71f733(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_inspect */
extern T0* T402c92(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_inherit_keyword */
extern T0* T448f100(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_implies_keyword */
extern T0* T448f99(GE_context* ac, T0* C, T0* a1);
/* detachable ET_KEYWORD_OPERATOR.set_position */
extern void T946f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable ET_KEYWORD_OPERATOR.make_implies */
extern T0* T946c52(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_feature_keyword */
extern T0* T448f98(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_convert_keyword */
extern T0* T448f97(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_current_keyword */
extern T0* T448f96(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CURRENT.set_position */
extern void T272f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_AST_FACTORY.new_unique_keyword */
extern T0* T448f95(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_select_keyword */
extern T0* T448f94(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.select_keyword */
extern T0* T71f730(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_select */
extern T0* T402c89(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_result_keyword */
extern T0* T448f93(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_rescue_keyword */
extern T0* T448f92(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_rename_keyword */
extern T0* T448f91(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_prefix_keyword */
extern T0* T448f90(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_frozen_keyword */
extern T0* T448f89(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_KEYWORD.make_frozen */
extern T0* T402c62(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_export_keyword */
extern T0* T448f88(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_ensure_keyword */
extern T0* T448f87(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_elseif_keyword */
extern T0* T448f86(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.elseif_keyword */
extern T0* T71f725(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_elseif */
extern T0* T402c84(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_create_keyword */
extern T0* T448f85(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_assign_keyword */
extern T0* T448f84(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.assign_keyword */
extern T0* T71f724(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_assign */
extern T0* T402c83(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_across_keyword */
extern T0* T448f83(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_until_keyword */
extern T0* T448f82(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.until_keyword */
extern T0* T71f723(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_until */
extern T0* T402c82(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_strip_keyword */
extern T0* T448f81(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_retry_keyword */
extern T0* T448f80(GE_context* ac, T0* C, T0* a1);
/* detachable ET_RETRY_INSTRUCTION.set_position */
extern void T956f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable ET_RETRY_INSTRUCTION.make */
extern T0* T956c13(GE_context* ac);
/* detachable ET_RETRY_INSTRUCTION.make_token */
extern void T956f15(GE_context* ac, T0* C, T0* a1);
/* detachable ET_RETRY_INSTRUCTION.make_leaf */
extern void T956f16(GE_context* ac, T0* C);
/* detachable ET_RETRY_INSTRUCTION.tokens */
extern T0* T956f7(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_local_keyword */
extern T0* T448f79(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_infix_keyword */
extern T0* T448f78(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_false_keyword */
extern T0* T448f77(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FALSE_CONSTANT.set_position */
extern void T1420f40(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable ET_FALSE_CONSTANT.make */
extern T0* T1420c39(GE_context* ac);
/* detachable ET_FALSE_CONSTANT.make_token */
extern void T1420f42(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FALSE_CONSTANT.make_leaf */
extern void T1420f43(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.tokens */
extern T0* T1420f11(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_debug_keyword */
extern T0* T448f76(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_class_keyword */
extern T0* T448f75(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_check_keyword */
extern T0* T448f74(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_alias_keyword */
extern T0* T448f73(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_agent_keyword */
extern T0* T448f72(GE_context* ac, T0* C, T0* a1);
/* detachable ET_AGENT_KEYWORD.set_position */
extern void T917f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_AST_FACTORY.new_when_keyword */
extern T0* T448f71(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_void_keyword */
extern T0* T448f70(GE_context* ac, T0* C, T0* a1);
/* detachable ET_VOID.set_position */
extern void T962f30(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable ET_VOID.make */
extern T0* T962c29(GE_context* ac);
/* detachable ET_VOID.make_token */
extern void T962f32(GE_context* ac, T0* C, T0* a1);
/* detachable ET_VOID.make_leaf */
extern void T962f33(GE_context* ac, T0* C);
/* detachable ET_VOID.tokens */
extern T0* T962f11(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_true_keyword */
extern T0* T448f69(GE_context* ac, T0* C, T0* a1);
/* detachable ET_TRUE_CONSTANT.set_position */
extern void T1419f40(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_AST_FACTORY.new_then_keyword */
extern T0* T448f68(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_some_keyword */
extern T0* T448f67(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_KEYWORD.make_some */
extern T0* T402c58(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_note_keyword */
extern T0* T448f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.note_keyword */
extern T0* T71f715(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_note */
extern T0* T402c74(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.use_note_keyword */
extern T1 T439f817(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_loop_keyword */
extern T0* T448f64(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_like_keyword */
extern T0* T448f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_from_keyword */
extern T0* T448f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_else_keyword */
extern T0* T448f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_xor_keyword */
extern T0* T448f60(GE_context* ac, T0* C, T0* a1);
/* detachable ET_KEYWORD_OPERATOR.make_xor */
extern T0* T946c51(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_old_keyword */
extern T0* T448f59(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_not_keyword */
extern T0* T448f58(GE_context* ac, T0* C, T0* a1);
/* detachable ET_KEYWORD_OPERATOR.make_not */
extern T0* T946c50(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_end_keyword */
extern T0* T448f57(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_all_keyword */
extern T0* T448f56(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_and_keyword */
extern T0* T448f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_or_keyword */
extern T0* T448f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_is_keyword */
extern T0* T448f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_if_keyword */
extern T0* T448f52(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.if_keyword */
extern T0* T71f710(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.make_if */
extern T0* T402c69(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_do_keyword */
extern T0* T448f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_as_keyword */
extern T0* T448f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_once_keyword */
extern T0* T448f1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.process_two_char_symbol */
extern void T439f1200(GE_context* ac, T0* C, T2 a1, T2 a2);
/* [detachable] ET_AST_FACTORY.new_assign_attempt_symbol */
extern T0* T448f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_assign_symbol */
extern T0* T448f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_dotdot_symbol */
extern T0* T448f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_arrow_symbol */
extern T0* T448f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_left_array_symbol */
extern T0* T448f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYMBOL.set_position */
extern void T342f83(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_AST_FACTORY.new_le_symbol */
extern T0* T448f44(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYMBOL_OPERATOR.set_position */
extern void T959f84(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable ET_SYMBOL_OPERATOR.make_le */
extern T0* T959c94(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_right_array_symbol */
extern T0* T448f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_ge_symbol */
extern T0* T448f42(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYMBOL_OPERATOR.make_ge */
extern T0* T959c93(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_mod_symbol */
extern T0* T448f41(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYMBOL_OPERATOR.make_mod */
extern T0* T959c92(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_not_tilde_symbol */
extern T0* T448f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYMBOL.make_not_tilde */
extern T0* T342c88(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_not_equal_symbol */
extern T0* T448f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYMBOL.make_not_equal */
extern T0* T342c87(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_div_symbol */
extern T0* T448f38(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYMBOL_OPERATOR.make_div */
extern T0* T959c91(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.text_count */
extern T6 T439f724(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_set_line_column */
extern void T439f1199(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.process_one_char_symbol */
extern void T439f1198(GE_context* ac, T0* C, T2 a1);
/* [detachable] ET_AST_FACTORY.new_tilde_symbol */
extern T0* T448f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYMBOL.make_tilde */
extern T0* T342c86(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_dollar_symbol */
extern T0* T448f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_right_bracket_symbol */
extern T0* T448f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_left_bracket_symbol */
extern T0* T448f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BRACKET_SYMBOL.set_position */
extern void T602f110(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_AST_FACTORY.new_right_brace_symbol */
extern T0* T448f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_left_brace_symbol */
extern T0* T448f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_right_parenthesis_symbol */
extern T0* T448f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_left_parenthesis_symbol */
extern T0* T448f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_question_mark_symbol */
extern T0* T448f29(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUESTION_MARK_SYMBOL.set_position */
extern void T970f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_AST_FACTORY.new_bang_symbol */
extern T0* T448f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_colon_symbol */
extern T0* T448f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_comma_symbol */
extern T0* T448f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.comma_symbol */
extern T0* T71f699(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.make_comma */
extern T0* T342c92(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_semicolon_symbol */
extern T0* T448f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.semicolon_symbol */
extern T0* T71f698(GE_context* ac, T0* C);
/* detachable ET_SEMICOLON_SYMBOL.make */
extern T0* T965c4(GE_context* ac);
/* detachable ET_SEMICOLON_SYMBOL.make_leaf */
extern void T965f5(GE_context* ac, T0* C);
/* detachable ET_SEMICOLON_SYMBOL.tokens */
extern T0* T965f3(GE_context* ac, T0* C);
/* [detachable] ET_AST_FACTORY.new_dot_symbol */
extern T0* T448f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.dot_symbol */
extern T0* T71f697(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.make_dot */
extern T0* T342c91(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_lt_symbol */
extern T0* T448f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_gt_symbol */
extern T0* T448f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AST_FACTORY.new_equal_symbol */
extern T0* T448f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYMBOL.make_equal */
extern T0* T342c82(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_power_symbol */
extern T0* T448f20(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYMBOL_OPERATOR.make_power */
extern T0* T959c88(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_divide_symbol */
extern T0* T448f19(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYMBOL_OPERATOR.make_divide */
extern T0* T959c87(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_times_symbol */
extern T0* T448f18(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYMBOL_OPERATOR.make_times */
extern T0* T959c86(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_plus_symbol */
extern T0* T448f17(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYMBOL_OPERATOR.make_plus */
extern T0* T959c85(GE_context* ac);
/* [detachable] ET_AST_FACTORY.new_minus_symbol */
extern T0* T448f16(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYMBOL_OPERATOR.make_minus */
extern T0* T959c83(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.text_item */
extern T2 T439f723(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_execute_eof_action */
extern void T439f1175(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.terminate */
extern void T439f1194(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.wrap */
extern T1 T439f686(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_refill_input_buffer */
extern void T439f1174(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_set_content */
extern void T439f993(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_null_trans_state */
extern T6 T439f685(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.yy_previous_state */
extern T6 T439f684(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.fatal_error */
extern void T439f1173(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.special_integer_ */
extern T0* T439f698(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_init_value_stacks */
extern void T439f1159(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_clear_all */
extern void T439f1168(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.clear_all */
extern void T439f1192(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.clear_stacks */
extern void T439f2150(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T439f2181(GE_context* ac, T0* C);
/* [detachable] SPECIAL [detachable ET_WRITABLE].keep_head */
extern void T1249f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_WRITABLE].set_count */
extern void T1249f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_WHEN_PART_LIST].keep_head */
extern void T1247f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_WHEN_PART_LIST].set_count */
extern void T1247f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_WHEN_PART].keep_head */
extern void T1244f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_WHEN_PART].set_count */
extern void T1244f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_VARIANT].keep_head */
extern void T1241f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_VARIANT].set_count */
extern void T1241f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_TYPE_LIST].keep_head */
extern void T1238f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_TYPE_LIST].set_count */
extern void T1238f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_TYPE_ITEM].keep_head */
extern void T1235f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_TYPE_ITEM].set_count */
extern void T1235f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].keep_head */
extern void T1232f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].set_count */
extern void T1232f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].keep_head */
extern void T1229f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].set_count */
extern void T1229f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT].keep_head */
extern void T1226f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT].set_count */
extern void T1226f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_TYPE].keep_head */
extern void T1223f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_TYPE].set_count */
extern void T1223f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_STRIP_EXPRESSION].keep_head */
extern void T1221f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_STRIP_EXPRESSION].set_count */
extern void T1221f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].keep_head */
extern void T1218f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].set_count */
extern void T1218f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_RENAME_LIST].keep_head */
extern void T1215f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_RENAME_LIST].set_count */
extern void T1215f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_RENAME_ITEM].keep_head */
extern void T1213f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_RENAME_ITEM].set_count */
extern void T1213f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_QUERY].keep_head */
extern void T1210f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_QUERY].set_count */
extern void T1210f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].keep_head */
extern void T1208f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].set_count */
extern void T1208f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PROCEDURE].keep_head */
extern void T1205f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PROCEDURE].set_count */
extern void T1205f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PRECONDITIONS].keep_head */
extern void T1203f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PRECONDITIONS].set_count */
extern void T1203f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_POSTCONDITIONS].keep_head */
extern void T1201f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_POSTCONDITIONS].set_count */
extern void T1201f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PARENT_LIST].keep_head */
extern void T1198f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PARENT_LIST].set_count */
extern void T1198f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PARENT_ITEM].keep_head */
extern void T1196f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PARENT_ITEM].set_count */
extern void T1196f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PARENT_CLAUSE_LIST].keep_head */
extern void T1194f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PARENT_CLAUSE_LIST].set_count */
extern void T1194f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PARENT].keep_head */
extern void T1191f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PARENT].set_count */
extern void T1191f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].keep_head */
extern void T1189f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].set_count */
extern void T1189f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_OBSOLETE].keep_head */
extern void T1186f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_OBSOLETE].set_count */
extern void T1186f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_MANIFEST_TUPLE].keep_head */
extern void T1183f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_MANIFEST_TUPLE].set_count */
extern void T1183f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING_LIST].keep_head */
extern void T1181f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING_LIST].set_count */
extern void T1181f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING_ITEM].keep_head */
extern void T1178f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING_ITEM].set_count */
extern void T1178f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_MANIFEST_ARRAY].keep_head */
extern void T1175f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_MANIFEST_ARRAY].set_count */
extern void T1175f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_LOOP_INVARIANTS].keep_head */
extern void T1172f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_LOOP_INVARIANTS].set_count */
extern void T1172f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].keep_head */
extern void T1167f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].set_count */
extern void T1167f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE].keep_head */
extern void T1164f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE].set_count */
extern void T1164f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_LIKE_TYPE].keep_head */
extern void T1161f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_LIKE_TYPE].set_count */
extern void T1161f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].keep_head */
extern void T1158f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].set_count */
extern void T1158f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INVARIANTS].keep_head */
extern void T1156f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INVARIANTS].set_count */
extern void T1156f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INSTRUCTION].keep_head */
extern void T1153f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INSTRUCTION].set_count */
extern void T1153f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INSPECT_INSTRUCTION].keep_head */
extern void T1150f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INSPECT_INSTRUCTION].set_count */
extern void T1150f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INLINE_AGENT].keep_head */
extern void T1147f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INLINE_AGENT].set_count */
extern void T1147f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INDEXING_TERM_LIST].keep_head */
extern void T1145f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INDEXING_TERM_LIST].set_count */
extern void T1145f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INDEXING_TERM_ITEM].keep_head */
extern void T1142f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INDEXING_TERM_ITEM].set_count */
extern void T1142f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INDEXING_TERM].keep_head */
extern void T1139f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INDEXING_TERM].set_count */
extern void T1139f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INDEXING_ITEM].keep_head */
extern void T1137f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INDEXING_ITEM].set_count */
extern void T1137f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INDEXING_LIST].keep_head */
extern void T1134f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INDEXING_LIST].set_count */
extern void T1134f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_IF_INSTRUCTION].keep_head */
extern void T1131f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_IF_INSTRUCTION].set_count */
extern void T1131f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_IF_EXPRESSION].keep_head */
extern void T1128f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_IF_EXPRESSION].set_count */
extern void T1128f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].keep_head */
extern void T1125f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].set_count */
extern void T1125f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T1123f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].set_count */
extern void T1123f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER].keep_head */
extern void T1120f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER].set_count */
extern void T1120f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].keep_head */
extern void T1116f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].set_count */
extern void T1116f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT].keep_head */
extern void T1113f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT].set_count */
extern void T1113f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FEATURE_NAME_ITEM].keep_head */
extern void T1111f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FEATURE_NAME_ITEM].set_count */
extern void T1111f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FEATURE_NAME].keep_head */
extern void T1108f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FEATURE_NAME].set_count */
extern void T1108f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FEATURE_EXPORT].keep_head */
extern void T1106f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FEATURE_EXPORT].set_count */
extern void T1106f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].keep_head */
extern void T1103f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].set_count */
extern void T1103f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FEATURE_CLAUSE].keep_head */
extern void T1100f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FEATURE_CLAUSE].set_count */
extern void T1100f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_EXTERNAL_ALIAS].keep_head */
extern void T1097f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_EXTERNAL_ALIAS].set_count */
extern void T1097f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].keep_head */
extern void T1094f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].set_count */
extern void T1094f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_EXPRESSION_ITEM].keep_head */
extern void T1092f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_EXPRESSION_ITEM].set_count */
extern void T1092f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_EXPRESSION].keep_head */
extern void T1090f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_EXPRESSION].set_count */
extern void T1090f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_EXPORT_LIST].keep_head */
extern void T1088f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_EXPORT_LIST].set_count */
extern void T1088f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_EXPORT].keep_head */
extern void T1086f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_EXPORT].set_count */
extern void T1086f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ELSEIF_PART_LIST].keep_head */
extern void T1083f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ELSEIF_PART_LIST].set_count */
extern void T1083f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ELSEIF_PART].keep_head */
extern void T1080f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ELSEIF_PART].set_count */
extern void T1080f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].keep_head */
extern void T1077f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].set_count */
extern void T1077f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ELSEIF_EXPRESSION].keep_head */
extern void T1074f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ELSEIF_EXPRESSION].set_count */
extern void T1074f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_DEBUG_INSTRUCTION].keep_head */
extern void T1071f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_DEBUG_INSTRUCTION].set_count */
extern void T1071f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CREATOR_LIST].keep_head */
extern void T1068f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CREATOR_LIST].set_count */
extern void T1068f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CREATOR].keep_head */
extern void T1065f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CREATOR].set_count */
extern void T1065f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CREATION_REGION].keep_head */
extern void T1062f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CREATION_REGION].set_count */
extern void T1062f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CREATE_EXPRESSION].keep_head */
extern void T1059f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CREATE_EXPRESSION].set_count */
extern void T1059f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE_LIST].keep_head */
extern void T1057f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE_LIST].set_count */
extern void T1057f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].keep_head */
extern void T1054f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].set_count */
extern void T1054f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE].keep_head */
extern void T1051f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE].set_count */
extern void T1051f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].keep_head */
extern void T1045f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].set_count */
extern void T1045f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_CREATOR].keep_head */
extern void T1042f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_CREATOR].set_count */
extern void T1042f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].keep_head */
extern void T1039f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].set_count */
extern void T1039f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T1036f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].set_count */
extern void T1036f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONSTANT].keep_head */
extern void T1033f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONSTANT].set_count */
extern void T1033f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONDITIONAL].keep_head */
extern void T1031f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONDITIONAL].set_count */
extern void T1031f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_COMPOUND].keep_head */
extern void T1028f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_COMPOUND].set_count */
extern void T1028f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CLIENTS].keep_head */
extern void T1026f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CLIENTS].set_count */
extern void T1026f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CLIENT_ITEM].keep_head */
extern void T1023f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CLIENT_ITEM].set_count */
extern void T1023f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CLASS].keep_head */
extern void T1021f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CLASS].set_count */
extern void T1021f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CHOICE_LIST].keep_head */
extern void T1019f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CHOICE_LIST].set_count */
extern void T1019f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CHOICE_ITEM].keep_head */
extern void T1016f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CHOICE_ITEM].set_count */
extern void T1016f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CHOICE_CONSTANT].keep_head */
extern void T1013f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CHOICE_CONSTANT].set_count */
extern void T1013f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CHOICE].keep_head */
extern void T1010f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CHOICE].set_count */
extern void T1010f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CHECK_INSTRUCTION].keep_head */
extern void T1007f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CHECK_INSTRUCTION].set_count */
extern void T1007f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].keep_head */
extern void T638f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].set_count */
extern void T638f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CALL_AGENT].keep_head */
extern void T1004f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CALL_AGENT].set_count */
extern void T1004f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_BRACKET_EXPRESSION].keep_head */
extern void T1001f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_BRACKET_EXPRESSION].set_count */
extern void T1001f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ASSIGNER].keep_head */
extern void T998f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ASSIGNER].set_count */
extern void T998f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ALIAS_NAME].keep_head */
extern void T995f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ALIAS_NAME].set_count */
extern void T995f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_AGENT_TARGET].keep_head */
extern void T993f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_AGENT_TARGET].set_count */
extern void T993f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].keep_head */
extern void T991f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].set_count */
extern void T991f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].keep_head */
extern void T988f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].set_count */
extern void T988f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].keep_head */
extern void T985f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].set_count */
extern void T985f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].keep_head */
extern void T983f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].set_count */
extern void T983f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T981f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].set_count */
extern void T981f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].keep_head */
extern void T979f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].set_count */
extern void T979f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ACROSS_INSTRUCTION].keep_head */
extern void T977f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ACROSS_INSTRUCTION].set_count */
extern void T977f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ACROSS_EXPRESSION].keep_head */
extern void T974f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ACROSS_EXPRESSION].set_count */
extern void T974f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].keep_head */
extern void T971f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].set_count */
extern void T971f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_BRACKET_SYMBOL].keep_head */
extern void T968f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_BRACKET_SYMBOL].set_count */
extern void T968f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_SEMICOLON_SYMBOL].keep_head */
extern void T966f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_SEMICOLON_SYMBOL].set_count */
extern void T966f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_VOID].keep_head */
extern void T963f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_VOID].set_count */
extern void T963f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_SYMBOL_OPERATOR].keep_head */
extern void T960f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_SYMBOL_OPERATOR].set_count */
extern void T960f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_RETRY_INSTRUCTION].keep_head */
extern void T957f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_RETRY_INSTRUCTION].set_count */
extern void T957f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_RESULT].keep_head */
extern void T954f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_RESULT].set_count */
extern void T954f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_REAL_CONSTANT].keep_head */
extern void T952f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_REAL_CONSTANT].set_count */
extern void T952f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING].keep_head */
extern void T949f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING].set_count */
extern void T949f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_KEYWORD_OPERATOR].keep_head */
extern void T947f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_KEYWORD_OPERATOR].set_count */
extern void T947f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INTEGER_CONSTANT].keep_head */
extern void T944f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INTEGER_CONSTANT].set_count */
extern void T944f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_IDENTIFIER].keep_head */
extern void T941f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_IDENTIFIER].set_count */
extern void T941f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FREE_OPERATOR].keep_head */
extern void T939f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FREE_OPERATOR].set_count */
extern void T939f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CURRENT].keep_head */
extern void T936f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CURRENT].set_count */
extern void T936f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CHARACTER_CONSTANT].keep_head */
extern void T934f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CHARACTER_CONSTANT].set_count */
extern void T934f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_BREAK].keep_head */
extern void T931f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_BREAK].set_count */
extern void T931f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_BOOLEAN_CONSTANT].keep_head */
extern void T928f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_BOOLEAN_CONSTANT].set_count */
extern void T928f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_POSITION].keep_head */
extern void T925f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_POSITION].set_count */
extern void T925f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PRECURSOR_KEYWORD].keep_head */
extern void T921f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PRECURSOR_KEYWORD].set_count */
extern void T921f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_AGENT_KEYWORD].keep_head */
extern void T918f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_AGENT_KEYWORD].set_count */
extern void T918f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EIFFEL_PARSER.abort */
extern void T439f1162(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_load_input_buffer */
extern void T439f991(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.reset */
extern void T439f1158(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].wipe_out */
extern void T911f12(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].move_all_cursors_after */
extern void T911f17(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [detachable ET_SYMBOL].wipe_out */
extern void T906f9(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [detachable ET_KEYWORD].wipe_out */
extern void T905f9(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_STACK [[attached] INTEGER_32].wipe_out */
extern void T902f10(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.reset */
extern void T439f1158p1(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.reset */
extern void T439f1158p0(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.reset */
extern void T439f1158p2(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.tmp_file */
extern T0* T439f711(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.shared_file */
extern T0* T439f955(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.error_handler */
extern T0* T439f710(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.set_fatal_error */
extern void T439f1152(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.process_none_class */
extern void T439f1151(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TYPE_CHECKER.process_class */
extern void T373f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_identifier */
extern void T1271f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_identifier */
extern void T387f56(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_identifier */
extern void T383f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_identifier */
extern void T369f191(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_across_cursor_validity */
extern void T369f245(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ACROSS_COMPONENT_LIST.across_component */
extern T0* T1408f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_CHECKER.current_closure_impl */
extern T0* T369f55(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.report_across_cursor */
extern void T369f269(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NESTED_TYPE_CONTEXT.copy_type_context */
extern void T236f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.set_root_context */
extern void T236f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].found_item */
extern T0* T384f30(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].found */
extern T1 T384f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].search */
extern void T384f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].search_position */
extern void T384f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].hash_position */
extern T6 T384f32(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ACROSS_INSTRUCTION.hash_code */
extern T6 T976f15(GE_context* ac, T0* C);
/* detachable ET_ACROSS_EXPRESSION.hash_code */
extern T6 T973f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].key_storage_item */
extern T0* T384f36(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].slots_item */
extern T6 T384f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_veen9b_error */
extern void T50f407(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_veen9b */
extern T0* T742c997(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_veen9_error */
extern T1 T50f118(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_veen9b_error */
extern void T34f407(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_veen9_error */
extern T1 T34f118(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_veen9a_error */
extern void T50f406(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_veen9a */
extern T0* T742c996(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_veen9a_error */
extern void T34f406(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ACROSS_CURSOR_SCOPE.across_component */
extern T0* T385f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].item */
extern T0* T718f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_CHECKER.has_implementation_error */
extern T1 T369f57(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_object_test_local_validity */
extern void T369f244(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_OBJECT_TEST_LIST.object_test */
extern T0* T1407f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_CHECKER.report_object_test_local */
extern void T369f266(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].found_item */
extern T0* T381f30(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].found */
extern T1 T381f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].search */
extern void T381f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].search_position */
extern void T381f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].hash_position */
extern T6 T381f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NAMED_OBJECT_TEST.hash_code */
extern T6 T709f22(GE_context* ac, T0* C);
/* detachable ET_OLD_OBJECT_TEST.hash_code */
extern T6 T1478f25(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].key_storage_item */
extern T0* T381f36(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].slots_item */
extern T6 T381f34(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_veen8b_error */
extern void T50f405(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_veen8b */
extern T0* T742c995(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_veen8_error */
extern T1 T50f117(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_veen8b_error */
extern void T34f405(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_veen8_error */
extern T1 T34f117(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_veen8a_error */
extern void T50f404(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_veen8a */
extern T0* T742c994(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_veen8a_error */
extern void T34f404(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_OBJECT_TEST_SCOPE.object_test */
extern T0* T382f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].item */
extern T0* T712f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_CHECKER.check_local_variable_validity */
extern void T369f243(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_local_variable */
extern void T369f275(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vevi0a_error */
extern void T50f436(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vevi0a */
extern T0* T742c1026(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vevi_error */
extern T1 T50f89(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vevi0a_error */
extern void T34f436(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vevi_error */
extern T1 T34f89(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.is_type_expanded */
extern T1 T236f43(GE_context* ac, T0* C);
/* [detachable] ET_NESTED_TYPE_CONTEXT.is_type_detachable */
extern T1 T236f37(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_SCOPE.has_local_variable */
extern T1 T386f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.is_type_attached */
extern T1 T236f36(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_veen2c_error */
extern void T50f411(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_veen2c */
extern T0* T742c1001(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_veen2_error */
extern T1 T50f120(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_veen2c_error */
extern void T34f411(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_veen2_error */
extern T1 T34f120(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_veen2e_error */
extern void T50f410(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_veen2e */
extern T0* T742c1000(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_veen2e_error */
extern void T34f410(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_formal_argument_validity */
extern void T369f242(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_formal_argument */
extern void T369f274(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* [detachable] ET_ATTACHMENT_SCOPE.has_formal_argument */
extern T1 T386f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_identifier */
extern void T69f219(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_cursor_validity */
extern void T69f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_closure_impl */
extern T0* T69f72(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_cursor */
extern void T69f236(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.has_implementation_error */
extern T1 T69f78(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_validity */
extern void T69f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_local */
extern void T69f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_validity */
extern void T69f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable */
extern void T69f234(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_cap_dynamic_types */
extern void T69f299(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_dynamic_type_set */
extern void T69f146(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_TYPE_SET_LIST.put */
extern void T254f16(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dynamic_type_set */
extern T0* T69f70(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_validity */
extern void T69f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument */
extern void T69f233(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* [detachable] ET_C_GENERATOR.process_identifier */
extern void T64f997(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_agent_closed_operand */
extern void T64f1003(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER.is_agent_closed_operand */
extern T1 T179f30(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_agent_open_operand */
extern void T64f1002(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER.is_agent_open_operand */
extern T1 T179f29(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_object_test_local */
extern void T64f1001(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_object_test_local_name */
extern void T64f1007(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_PRECURSOR_CHECKER.process_current */
extern void T1271f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_current */
extern void T387f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_current */
extern void T383f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_current */
extern void T369f178(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_current_validity */
extern void T369f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_current */
extern void T369f289(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vucr0f_error */
extern void T50f431(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vucr0f */
extern T0* T742c1021(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vucr_error */
extern T1 T50f90(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vucr0f_error */
extern void T34f431(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vucr_error */
extern T1 T34f90(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current */
extern void T69f237(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_validity */
extern void T69f300(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current */
extern void T69f360(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_current */
extern void T64f998(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_current */
extern void T64f1004(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_qualified_call_expression */
extern void T1271f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_actual_argument_list */
extern void T1271f84(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_qualified_call_expression */
extern void T387f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_qualified_call_expression */
extern void T383f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_qualified_call_expression */
extern void T369f181(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_qualified_call_expression_validity */
extern void T369f194(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T369f194ot1(T0* a1, T0** a2);
extern T1 T369f194ot2(T0* a1, T0** a2);
extern T1 T369f194ot3(T0* a1, T0** a2);
/* [detachable] ET_FEATURE_CHECKER.free_adapted_base_classes */
extern void T369f255(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].force_last */
extern void T392f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].force */
extern void T730f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].fill_with */
extern void T731f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].extend */
extern void T731f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].resize */
extern void T392f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].aliased_resized_area */
extern T0* T730f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].aliased_resized_area */
extern T0* T731f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].new_capacity */
extern T6 T392f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].extendible */
extern T1 T392f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS].wipe_out */
extern void T682f14(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_ADAPTED_CLASS].keep_head */
extern void T1361f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ADAPTED_CLASS].set_count */
extern void T1361f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS].move_all_cursors_after */
extern void T682f18(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_CLASS].set_next_cursor */
extern void T1362f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_CLASS].set_after */
extern void T1362f6(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgmc0f_error */
extern void T50f397(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* [detachable] ET_VALIDITY_ERROR.make_vgmc0f */
extern T0* T742c987(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vgmc_error */
extern T1 T50f103(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vgmc0f_error */
extern void T34f397(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* [detachable] ET_ERROR_HANDLER.reportable_vgmc_error */
extern T1 T34f103(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgmc0e_error */
extern void T50f381(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_VALIDITY_ERROR.make_vgmc0e */
extern T0* T742c979(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_ERROR_HANDLER.report_vgmc0e_error */
extern void T34f381(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_NESTED_TYPE_CONTEXT.same_named_context */
extern T1 T236f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.same_named_context_with_type_marks */
extern T1 T236f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NESTED_TYPE_CONTEXT.tokens */
extern T0* T236f18(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS].item */
extern T0* T682f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS].is_empty */
extern T1 T682f8(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuex2a_error */
extern void T50f396(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vuex2a */
extern T0* T742c986(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T50f112(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vuex2a_error */
extern void T34f396(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T34f112(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_qualified_tuple_label_call_expression_validity */
extern void T369f254(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_FEATURE_CHECKER.report_tuple_label_expression */
extern void T369f321(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuar1c_error */
extern void T50f440(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vuar1c */
extern T0* T742c1030(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T50f130(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vuar1c_error */
extern void T34f440(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T34f130(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuta2b_error */
extern void T50f439(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vuta2b */
extern T0* T742c1029(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T50f129(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vuta2b_error */
extern void T34f439(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T34f129(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_tuple_label_parenthesis_call_validity */
extern void T369f253(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T369f253ot1(T0* a1, T0** a2);
extern T1 T369f253ot2(T0* a1, T0** a2);
extern T1 T369f253ot3(T0* a1, T0** a2);
/* [detachable] ET_FEATURE_CHECKER.check_qualified_feature_call_expression_validity */
extern void T369f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T369f316ot1(T0* a1, T0** a2);
extern T1 T369f316ot2(T0* a1, T0** a2);
/* [detachable] ET_FEATURE_CHECKER.check_qualified_feature_call_instruction_validity */
extern void T369f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T369f315ot1(T0* a1, T0** a2);
extern T1 T369f315ot2(T0* a1, T0** a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vkcn1a_error */
extern void T50f484(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vkcn1a */
extern T0* T742c1074(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T50f143(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vkcn1a_error */
extern void T34f484(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T34f143(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_qualified_procedure_call_instruction_validity */
extern void T369f361(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_FEATURE_CHECKER.report_qualified_call_instruction */
extern void T369f378(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_qualified_feature_call_validity */
extern void T369f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FEATURE_CHECKER.reset_fatal_error */
extern void T369f320(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_FEATURE_CHECKER.check_actual_arguments_validity */
extern void T369f324(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T369f324ot1(T0* a1, T0** a2);
extern T1 T369f324ot2(T0* a1);
extern T1 T369f324ot3(T0* a1, T0** a2);
extern T1 T369f324ot4(T0* a1);
extern T1 T369f324ot5(T0* a1, T0** a2);
extern T1 T369f324ot6(T0* a1, T0** a2);
extern T1 T369f324ot7(T0* a1, T0** a2);
extern T1 T369f324ot8(T0* a1, T0** a2);
extern T1 T369f324ot9(T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuar2b_error */
extern void T50f492(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* [detachable] ET_VALIDITY_ERROR.make_vuar2b */
extern T0* T742c1082(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T50f145(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vuar2b_error */
extern void T34f492(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* [detachable] ET_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T34f145(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuar2a_error */
extern void T50f491(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* [detachable] ET_VALIDITY_ERROR.make_vuar2a */
extern T0* T742c1081(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* [detachable] ET_ERROR_HANDLER.report_vuar2a_error */
extern void T34f491(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdpr4b_error */
extern void T50f490(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* [detachable] ET_VALIDITY_ERROR.make_vdpr4b */
extern T0* T742c1080(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T50f144(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vdpr4b_error */
extern void T34f490(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* [detachable] ET_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T34f144(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_converted_target_infix_expression_validity */
extern void T369f363(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_INFIX_EXPRESSION.set_left */
extern void T1472f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.conforms_to_type */
extern T1 T236f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_INFIX_CAST_EXPRESSION.make */
extern T0* T1905c16(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_INFIX_EXPRESSION.set_right */
extern void T1472f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.put */
extern void T1903f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_ACTUAL_ARGUMENT_LIST.put */
extern void T273f19(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.item */
extern T0* T1903f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ACTUAL_ARGUMENT_LIST.item */
extern T0* T273f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_CHECKER.convert_expression */
extern T0* T369f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.report_builtin_conversion */
extern void T369f383(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CONVERT_BUILTIN_EXPRESSION.make */
extern T0* T1971c17(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.report_qualified_call_expression */
extern void T369f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_CONVERT_TO_EXPRESSION.make */
extern T0* T1973c22(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_creation_expression */
extern void T369f369(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_creation_vape_validity */
extern void T369f380(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vape2a_error */
extern void T50f509(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_VALIDITY_ERROR.make_vape2a */
extern T0* T742c1099(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vape2_error */
extern T1 T50f155(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vape2a_error */
extern void T34f509(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_ERROR_HANDLER.reportable_vape2_error */
extern T1 T34f155(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.add_non_descendant_caller_clients_to */
extern void T369f334(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_CLIENT_LIST.force_first */
extern void T390f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLIENT_LIST.resize */
extern void T390f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T729f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T728f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLIENT_LIST.new_capacity */
extern T6 T390f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLIENT_LIST.capacity */
extern T6 T390f10(GE_context* ac, T0* C);
/* detachable ET_CLIENTS.has_descendant */
extern T1 T1025f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.has_ancestor */
extern T1 T72f238(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLIENT_LIST.has_descendant */
extern T1 T390f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CLIENTS.is_none_or_unknown */
extern T1 T1025f10(GE_context* ac, T0* C);
/* [detachable] ET_CLIENT_LIST.is_none_or_unknown */
extern T1 T390f7(GE_context* ac, T0* C);
/* [detachable] ET_CLIENT_LIST.wipe_out */
extern void T390f16(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_ITEM].keep_head */
extern void T729f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_CLIENT_ITEM].keep_head */
extern void T728f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_CLIENT_ITEM].set_count */
extern void T728f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CONVERT_FROM_EXPRESSION.make */
extern T0* T1972c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.current_universe */
extern T0* T369f64(GE_context* ac, T0* C);
/* [detachable] ET_TYPE_CHECKER.convert_feature */
extern T0* T373f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.convert_from_feature */
extern T0* T72f237(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_BRACED_TYPE_LIST.has_named_type_with_type_marks */
extern T1 T1335f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_TOKEN_CONSTANTS.attached_separate_type_mark */
extern T0* T71f1522(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.convert_to_feature */
extern T0* T72f236(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NESTED_TYPE_CONTEXT.conforms_to_context */
extern T1 T236f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NESTED_TYPE_CONTEXT.conforms_to_context_with_type_marks */
extern T1 T236f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_FEATURE_CHECKER.check_actual_argument_validity */
extern void T369f362(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T369f362ot1(T0* a1, T0** a2);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.build_negated_scope */
extern void T387f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.build_negated_scope */
extern void T383f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuar1b_error */
extern void T50f489(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vuar1b */
extern T0* T742c1079(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vuar1b_error */
extern void T34f489(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuar1a_error */
extern void T50f488(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vuar1a */
extern T0* T742c1078(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vuar1a_error */
extern void T34f488(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdpr4a_error */
extern void T50f487(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vdpr4a */
extern T0* T742c1077(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vdpr4a_error */
extern void T34f487(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make */
extern T0* T1903c13(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_MANIFEST_TUPLE.make */
extern T0* T280c35(GE_context* ac);
/* [detachable] ET_MANIFEST_TUPLE.make */
extern void T280f35p1(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.put_first */
extern void T1903f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T1903f11(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T1903f16(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T1903f16p1(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T1903f10(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.tuple_argument_position */
extern T6 T369f66(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.check_qualified_vape_validity */
extern void T369f323(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vape1b_error */
extern void T50f486(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_VALIDITY_ERROR.make_vape1b */
extern T0* T742c1076(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vape1_error */
extern T1 T50f131(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vape1b_error */
extern void T34f486(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_ERROR_HANDLER.reportable_vape1_error */
extern T1 T34f131(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuex2b_error */
extern void T50f441(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vuex2b */
extern T0* T742c1031(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.report_vuex2b_error */
extern void T34f441(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuta2a_error */
extern void T50f485(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vuta2a */
extern T0* T742c1075(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.report_vuta2a_error */
extern void T34f485(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FEATURE_CHECKER.set_parenthesis_call_position */
extern void T369f314(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_PARENTHESIS_SYMBOL.set_position */
extern void T1946f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_PARENTHESIS_SYMBOL.make */
extern T0* T1946c41(GE_context* ac);
/* [detachable] ET_PARENTHESIS_SYMBOL.make_leaf */
extern void T1946f44(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.tokens */
extern T0* T1946f36(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vkcn2a_error */
extern void T50f395(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vkcn2a */
extern T0* T742c985(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T50f111(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vkcn2a_error */
extern void T34f395(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T34f111(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_qualified_query_call_expression_validity */
extern void T369f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FEATURE_CHECKER.check_query_call_type_validity */
extern void T369f319(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T369f319ot1(T0* a1, T0** a2);
extern T1 T369f319ot2(T0* a1, T0** a2);
extern T1 T369f319ot3(T0* a1, T0** a2);
/* [detachable] ET_FEATURE_CHECKER.check_query_parenthesis_call_validity */
extern void T369f251(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T369f251ot1(T0* a1, T0** a2);
extern T1 T369f251ot2(T0* a1, T0** a2);
extern T1 T369f251ot3(T0* a1, T0** a2);
/* [detachable] ET_FEATURE_CHECKER.check_unqualified_query_call_expression_validity */
extern void T369f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.report_unqualified_call_expression */
extern void T369f357(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.check_unqualified_vape_validity */
extern void T369f270(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vape1a_error */
extern void T50f446(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_VALIDITY_ERROR.make_vape1a */
extern T0* T742c1036(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_ERROR_HANDLER.report_vape1a_error */
extern void T34f446(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vucr0d_error */
extern void T50f476(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vucr0d */
extern T0* T742c1066(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vucr0d_error */
extern void T34f476(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_FEATURE_CHECKER.check_qualified_dotnet_query_call_expression_validity */
extern void T369f250(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_FEATURE_CHECKER.free_overloaded_queries */
extern void T369f313(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].force_last */
extern void T377f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].force */
extern void T691f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].fill_with */
extern void T693f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].extend */
extern void T693f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].resize */
extern void T377f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].aliased_resized_area */
extern T0* T691f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].aliased_resized_area */
extern T0* T693f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].new_capacity */
extern T6 T377f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].extendible */
extern T1 T377f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].first */
extern T0* T692f14(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.keep_best_overloaded_features */
extern void T369f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].keep_first */
extern void T688f38(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].keep_first */
extern void T692f38(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_CHECKER.free_overloaded_features */
extern void T369f360(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].force_last */
extern void T378f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].force */
extern void T695f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].fill_with */
extern void T697f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].extend */
extern void T697f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].resize */
extern void T378f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].aliased_resized_area */
extern T0* T695f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].aliased_resized_area */
extern T0* T697f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].new_capacity */
extern T6 T378f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].extendible */
extern T1 T378f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_FEATURE].has */
extern T1 T696f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_FEATURE].remove */
extern void T696f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_FEATURE].move_left */
extern void T696f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_FEATURE].move_cursors_left */
extern void T696f20(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE].set_position */
extern void T1981f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_FEATURE].remove_last */
extern void T696f19(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_FEATURE].move_last_cursors_after */
extern void T696f22(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE].set_next_cursor */
extern void T1981f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE].set_after */
extern void T1981f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_FEATURE].item */
extern T0* T696f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_FEATURE].wipe_out */
extern void T696f14(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_FEATURE].move_all_cursors_after */
extern void T696f18(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_FEATURE].force_last */
extern void T696f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_FEATURE].resize */
extern void T696f17(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_FEATURE].new_capacity */
extern T6 T696f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_FEATURE].extendible */
extern T1 T696f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_CHECKER.new_overloaded_features */
extern T0* T369f65(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].remove_last */
extern void T378f15(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].keep_head */
extern void T697f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].set_count */
extern void T697f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].move_last_cursors_after */
extern void T378f16(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].set_next_cursor */
extern void T698f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].set_after */
extern void T698f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].last */
extern T0* T378f10(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_FEATURE].make */
extern T0* T696c12(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_FEATURE].set_internal_cursor */
extern void T696f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_FEATURE].new_cursor */
extern T0* T696f8(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE].make */
extern T0* T1981c5(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].is_empty */
extern T1 T378f9(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.adapted_name */
extern T0* T369f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_QUERY].is_empty */
extern T1 T692f13(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.new_overloaded_queries */
extern T0* T369f62(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].remove_last */
extern void T377f15(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].keep_head */
extern void T693f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].set_count */
extern void T693f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].move_last_cursors_after */
extern void T377f16(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].set_next_cursor */
extern void T694f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].set_after */
extern void T694f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].last */
extern T0* T377f10(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].is_empty */
extern T1 T377f9(GE_context* ac, T0* C);
/* detachable ET_INFIX_EXPRESSION.set_boolean_operator */
extern void T1472f28(GE_context* ac, T0* C, T1 a1);
/* detachable ET_PREFIX_EXPRESSION.set_boolean_operator */
extern void T1476f28(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_CLASS.is_boolean_class */
extern T1 T72f115(GE_context* ac, T0* C);
/* [detachable] ET_ADAPTED_BASE_CLASS_CHECKER.reset_context_if_multiple_constraints */
extern void T393f11(GE_context* ac, T0* C, T1 a1, T0* a2, T0* a3);
/* [detachable] ET_TOKEN_CONSTANTS.like_0 */
extern T0* T71f260(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_N.make_zero */
extern T0* T1401c39(GE_context* ac, T0* a1);
/* [detachable] ET_LIKE_N.tokens */
extern T0* T1401f14(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS].first */
extern T0* T682f7(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.check_orphan_actual_arguments_validity */
extern void T369f249(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_adapted_base_classes_validity */
extern void T369f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ADAPTED_BASE_CLASS_CHECKER.check_adapted_base_classes_validity */
extern void T393f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T393f13ot1(T0* a1, T0** a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgmc0a_error */
extern void T50f513(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vgmc0a */
extern T0* T742c1103(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vgmc0a_error */
extern void T34f513(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgmc0d_error */
extern void T50f512(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T6 a6, T0* a7);
/* [detachable] ET_VALIDITY_ERROR.make_vgmc0d */
extern T0* T742c1102(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T6 a6, T0* a7);
/* [detachable] ET_ERROR_HANDLER.report_vgmc0d_error */
extern void T34f512(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T6 a6, T0* a7);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgmc0c_error */
extern void T50f511(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7);
/* [detachable] ET_VALIDITY_ERROR.make_vgmc0c */
extern T0* T742c1101(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7);
/* [detachable] ET_ERROR_HANDLER.report_vgmc0c_error */
extern void T34f511(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgmc0b_error */
extern void T50f510(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_VALIDITY_ERROR.make_vgmc0b */
extern T0* T742c1100(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_ERROR_HANDLER.report_vgmc0b_error */
extern void T34f510(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_ADAPTED_BASE_CLASS_CHECKER.error_handler */
extern T0* T393f8(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS].put_last */
extern void T682f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS].remove */
extern void T682f16(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS].move_left */
extern void T682f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS].move_cursors_left */
extern void T682f20(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_CLASS].set_position */
extern void T1362f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS].remove_last */
extern void T682f19(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS].move_last_cursors_after */
extern void T682f22(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS].keep_first */
extern void T682f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ADAPTED_BASE_CLASS_CHECKER.set_fatal_error */
extern void T393f14(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.new_adapted_base_classes */
extern T0* T369f56(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].remove_last */
extern void T392f15(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].keep_head */
extern void T731f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].set_count */
extern void T731f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].move_last_cursors_after */
extern void T392f16(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].set_next_cursor */
extern void T732f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].set_after */
extern void T732f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].last */
extern T0* T392f10(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_CLASS]].is_empty */
extern T1 T392f9(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_expression */
extern void T69f254(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_expression_validity */
extern void T69f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T69f317ot1(T0* a1, T0** a2);
extern T1 T69f317ot2(T0* a1, T0** a2);
extern T1 T69f317ot3(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_adapted_base_classes */
extern void T69f232(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_expression_validity */
extern void T69f298(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_expression */
extern void T69f359(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T69f359ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_qualified_call_target_dynamic_types */
extern void T69f354(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_tuple_label_parenthesis_call_validity */
extern void T69f231(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T69f231ot1(T0* a1, T0** a2);
extern T1 T69f231ot2(T0* a1, T0** a2);
extern T1 T69f231ot3(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_expression_validity */
extern void T69f297(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T69f297ot1(T0* a1, T0** a2);
extern T1 T69f297ot2(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_instruction_validity */
extern void T69f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T69f296ot1(T0* a1, T0** a2);
extern T1 T69f296ot2(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_instruction_validity */
extern void T69f229(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_instruction */
extern void T69f292(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.make */
extern T0* T305c11(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_validity */
extern void T69f291(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.reset_fatal_error */
extern void T69f353(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_arguments_validity */
extern void T69f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T69f352ot1(T0* a1, T0** a2);
extern T1 T69f352ot2(T0* a1);
extern T1 T69f352ot3(T0* a1, T0** a2);
extern T1 T69f352ot4(T0* a1);
extern T1 T69f352ot5(T0* a1, T0** a2);
extern T1 T69f352ot6(T0* a1, T0** a2);
extern T1 T69f352ot7(T0* a1, T0** a2);
extern T1 T69f352ot8(T0* a1, T0** a2);
extern T1 T69f352ot9(T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_converted_target_infix_expression_validity */
extern void T69f415(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.convert_expression */
extern T0* T69f87(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_conversion */
extern void T69f499(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_expression */
extern void T69f355(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T69f355ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_expression */
extern void T69f465(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_operand_dynamic_types */
extern void T69f417(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_vape_validity */
extern void T69f475(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.add_non_descendant_caller_clients_to */
extern void T69f413(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe */
extern T0* T69f84(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_argument_validity */
extern void T69f414(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T69f414ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tuple_argument_position */
extern T6 T69f90(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_vape_validity */
extern void T69f351(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_parenthesis_call_position */
extern void T69f293(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_expression_validity */
extern void T69f294(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_call_type_validity */
extern void T69f356(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T69f356ot1(T0* a1, T0** a2);
extern T1 T69f356ot2(T0* a1, T0** a2);
extern T1 T69f356ot3(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_parenthesis_call_validity */
extern void T69f230(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T69f230ot1(T0* a1, T0** a2);
extern T1 T69f230ot2(T0* a1, T0** a2);
extern T1 T69f230ot3(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_expression_validity */
extern void T69f295(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_expression */
extern void T69f358(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T69f358ot1(T0* a1, T0** a2);
extern T1 T69f358ot2(T0* a1, T0** a2);
extern T1 T69f358ot3(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_like_argument_dynamic_types */
extern void T69f418(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_dynamic_types */
extern void T69f416(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_vape_validity */
extern void T69f357(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_query_call_expression_validity */
extern void T69f371(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_queries */
extern void T69f428(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.keep_best_overloaded_features */
extern void T69f289(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_features */
extern void T69f350(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_features */
extern T0* T69f85(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.adapted_name */
extern T0* T69f83(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_queries */
extern T0* T69f91(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_orphan_actual_arguments_validity */
extern void T69f227(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_adapted_base_classes_validity */
extern void T69f226(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_adapted_base_classes */
extern T0* T69f77(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_validity */
extern void T69f225(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_expression_supplier */
extern void T69f288(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_C_GENERATOR.process_qualified_call_expression */
extern void T64f999(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_qualified_call_expression */
extern void T64f1005(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1005ot1(T0* a1, T0** a2);
extern T1 T64f1005ot2(T0* a1, T0** a2);
extern T1 T64f1005ot3(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.mark_expressions_unfrozen */
extern void T64f1010(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.mark_expressions_frozen */
extern void T64f1009(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.mark_temp_variable_used */
extern void T64f1008(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_result */
extern void T1271f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_result */
extern void T387f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_result */
extern void T383f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_result */
extern void T369f177(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_result_validity */
extern void T369f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_result */
extern void T369f288(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vevi0b_error */
extern void T50f430(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vevi0b */
extern T0* T742c1020(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vevi0b_error */
extern void T34f430(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ATTACHMENT_SCOPE.has_result */
extern T1 T386f6(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_veen2a_error */
extern void T50f416(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_veen2a */
extern T0* T742c1006(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_veen2a_error */
extern void T34f416(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_veen2g_error */
extern void T50f429(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_veen2g */
extern T0* T742c1019(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_veen2g_error */
extern void T34f429(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_veen2d_error */
extern void T50f414(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_veen2d */
extern T0* T742c1004(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_veen2d_error */
extern void T34f414(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_veen2b_error */
extern void T50f413(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_veen2b */
extern T0* T742c1003(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_veen2b_error */
extern void T34f413(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result */
extern void T69f249(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_validity */
extern void T69f312(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result */
extern void T69f365(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [detachable] ET_C_GENERATOR.process_result */
extern void T64f1000(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_result */
extern void T64f1006(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_once_value */
extern void T64f1011(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* detachable ET_DYNAMIC_PRECURSOR.is_once_per_process */
extern T1 T297f19(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_FEATURE.is_once_per_process */
extern T1 T231f20(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.once_prefixes */
extern T0* T64f460(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.once_kind */
extern T6 T64f459(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.is_real_64_class */
extern T1 T72f128(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_real_32_class */
extern T1 T72f127(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_pointer_class */
extern T1 T72f126(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_natural_64_class */
extern T1 T72f125(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_natural_32_class */
extern T1 T72f124(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_natural_16_class */
extern T1 T72f123(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_natural_8_class */
extern T1 T72f122(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_integer_64_class */
extern T1 T72f121(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_integer_32_class */
extern T1 T72f120(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_integer_16_class */
extern T1 T72f119(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_integer_8_class */
extern T1 T72f118(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_character_32_class */
extern T1 T72f117(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_character_8_class */
extern T1 T72f116(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].found_item */
extern T6 T282f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].item_storage_item */
extern T6 T282f31(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].found */
extern T1 T282f28(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].search */
extern void T282f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_manifest_tuple */
extern void T1271f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_tuple */
extern void T387f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_tuple */
extern void T383f56(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_manifest_tuple */
extern void T369f186(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_manifest_tuple_validity */
extern void T369f238(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T369f238ot1(T0* a1, T0** a2);
/* [detachable] ET_FEATURE_CHECKER.report_manifest_tuple */
extern void T369f298(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_tuple */
extern void T69f270(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_tuple_validity */
extern void T69f333(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T69f333ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_tuple */
extern void T69f388(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T69f388ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe_impl */
extern T0* T69f75(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.process_manifest_tuple */
extern void T64f1012(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_manifest_tuple */
extern void T64f1015(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1015ot1(T0* a1, T0** a2);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].force_last */
extern void T281f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].slots_put */
extern void T281f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].clashes_put */
extern void T281f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].slots_item */
extern T6 T281f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].hash_position */
extern T6 T281f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].resize */
extern void T281f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].clashes_resize */
extern void T281f63(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].special_integer_ */
extern T0* T281f32(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].key_storage_resize */
extern void T281f62(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].item_storage_resize */
extern void T281f61(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T643f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T642f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].key_storage_item */
extern T0* T281f31(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].slots_resize */
extern void T281f60(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].new_capacity */
extern T6 T281f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].item_storage_put */
extern void T281f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE].force */
extern void T643f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE].fill_with */
extern void T642f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE].extend */
extern void T642f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].search_position */
extern void T281f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].key_equality_tester */
extern T0* T281f30(GE_context* ac, T0* C);
/* [detachable] ET_PRECURSOR_CHECKER.process_do_procedure */
extern void T1271f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_compound */
extern void T1271f24(GE_context* ac, T0* C, T0* a1);
/* detachable ET_COMPOUND.item */
extern T0* T329f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.process_do_procedure */
extern void T1270f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_do_procedure */
extern void T369f90(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_do_procedure_validity */
extern void T369f102(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_rescue_validity */
extern void T369f119(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_instructions_validity */
extern void T369f118(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_locals_validity */
extern void T369f117(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_local_supplier */
extern void T369f130(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_SUPPLIER_BUILDER.report_local_supplier */
extern void T1286f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.report_local_variable_declaration */
extern void T369f129(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_local_type_validity */
extern void T369f128(GE_context* ac, T0* C, T0* a1);
extern T1 T369f128ot1(T0* a1, T0** a2);
/* [detachable] ET_TYPE_CHECKER.check_creation_type_validity */
extern void T373f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T373f25ot1(T0* a1, T0** a2);
extern T1 T373f25ot2(T0* a1, T0** a2);
extern T1 T373f25ot3(T0* a1, T0** a2);
extern T1 T373f25ot4(T0* a1, T0** a2);
extern T1 T373f25ot5(T0* a1, T0** a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vtcg4a_error */
extern void T50f376(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_VALIDITY_ERROR.make_vtcg4a */
extern T0* T742c974(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T50f101(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vtcg4a_error */
extern void T34f376(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T34f101(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TYPE_CHECKER.current_system */
extern T0* T373f18(GE_context* ac, T0* C);
/* [detachable] ET_TYPE_CHECKER.ise_6_0_6_7358 */
extern T0* T373f17(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vtcg4b_error */
extern void T50f375(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_VALIDITY_ERROR.make_vtcg4b */
extern T0* T742c973(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_ERROR_HANDLER.report_vtcg4b_error */
extern void T34f375(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* detachable ET_CONSTRAINT_CREATOR.has_feature */
extern T1 T1041f8(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINT_CREATOR.is_empty */
extern T1 T1041f9(GE_context* ac, T0* C);
/* [detachable] ET_TYPE_CHECKER.error_handler */
extern T0* T373f15(GE_context* ac, T0* C);
/* [detachable] ET_TYPE_CHECKER.set_fatal_error */
extern void T373f26(GE_context* ac, T0* C);
/* [detachable] ET_TYPE_CHECKER.check_type_validity */
extern void T373f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vrle1a_error */
extern void T50f243(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vrle1a */
extern T0* T742c862(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T50f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vrle1a_error */
extern void T34f243(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T34f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vrle2a_error */
extern void T50f242(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vrle2a */
extern T0* T742c861(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T50f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vrle2a_error */
extern void T34f242(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T34f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vreg0b_error */
extern void T50f241(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vreg0b */
extern T0* T742c860(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vreg0b_error */
extern void T34f241(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_FEATURE_CHECKER.check_across_components_validity */
extern void T369f116(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.check_object_tests_validity */
extern void T369f115(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuot3a_error */
extern void T50f240(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vuot3a */
extern T0* T742c859(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T50f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vuot3a_error */
extern void T34f240(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T34f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.ise_6_4_7_7252 */
extern T0* T369f51(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.check_formal_arguments_validity */
extern void T369f114(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_argument_supplier */
extern void T369f127(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_SUPPLIER_BUILDER.report_argument_supplier */
extern void T1286f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.report_formal_argument_declaration */
extern void T369f126(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_signature_type_validity */
extern void T369f125(GE_context* ac, T0* C, T0* a1);
extern T1 T369f125ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure */
extern void T69f130(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T69f132(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_rescue_validity */
extern void T69f139(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_instructions_validity */
extern void T69f138(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_locals_validity */
extern void T69f137(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_supplier */
extern void T69f145(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable_declaration */
extern void T69f144(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LOCAL_COMMA_VARIABLE.set_attached_index */
extern void T1694f13(GE_context* ac, T0* C, T6 a1);
/* detachable ET_LOCAL_VARIABLE.set_attached_index */
extern void T1163f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_LOCAL_COMMA_VARIABLE.set_index */
extern void T1694f12(GE_context* ac, T0* C, T6 a1);
/* detachable ET_LOCAL_VARIABLE.set_index */
extern void T1163f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_type_validity */
extern void T69f143(GE_context* ac, T0* C, T0* a1);
extern T1 T69f143ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_components_validity */
extern void T69f136(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_tests_validity */
extern void T69f135(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_4_7_7252 */
extern T0* T69f67(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_arguments_validity */
extern void T69f134(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_argument_supplier */
extern void T69f142(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument_declaration */
extern void T69f141(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_COMMA_ARGUMENT.set_attached_index */
extern void T1693f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FORMAL_ARGUMENT.set_attached_index */
extern void T251f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_signature_type_validity */
extern void T69f140(GE_context* ac, T0* C, T0* a1);
extern T1 T69f140ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.process_do_procedure */
extern void T64f1013(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_do_procedure */
extern void T64f1016(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_internal_procedure */
extern void T64f1018(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_address_routine */
extern void T64f1020(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.argument_type_set */
extern T0* T64f464(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.print_address_routine_name */
extern void T64f1042(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_C_GENERATOR.print_feature_name_comment */
extern void T64f1021(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_C_GENERATOR.print_internal_routine */
extern void T64f1019(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [detachable] ET_C_GENERATOR.print_assign_completed_to_once_status */
extern void T64f1041(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_C_GENERATOR.print_internal_routine_body_declaration */
extern void T64f1040(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.print_assign_last_exception_to_once_exception */
extern void T64f1050(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_C_GENERATOR.print_once_exception */
extern void T64f1046(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_C_GENERATOR.print_compound */
extern void T64f1049(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_instruction */
extern void T64f1051(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.reset_rescue_data */
extern void T64f1048(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].wipe_out */
extern void T289f56(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].slots_wipe_out */
extern void T289f61(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].clashes_wipe_out */
extern void T289f60(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].key_storage_wipe_out */
extern void T289f59(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].item_storage_wipe_out */
extern void T289f58(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_IDENTIFIER].move_all_cursors_after */
extern void T289f57(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_malloc_current */
extern void T64f1039(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1039ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.current_universe */
extern T0* T64f473(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_feature_trace_message_call */
extern void T64f1038(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_C_GENERATOR.print_unindented_feature_info_message_call */
extern void T64f1047(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_assign_result_to_once_value */
extern void T64f1037(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_C_GENERATOR.print_assign_called_to_once_status */
extern void T64f1036(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_C_GENERATOR.print_return_once_value */
extern void T64f1035(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_C_GENERATOR.print_once_status */
extern void T64f1034(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_C_GENERATOR.print_once_status_is_completed */
extern void T64f1033(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_C_GENERATOR.print_return_statement */
extern void T64f1032(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_assign_called_to_thread_safe_once_status */
extern void T64f1031(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_C_GENERATOR.print_assign_once_exception_to_thread_safe_once_exception */
extern void T64f1030(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_C_GENERATOR.print_thread_safe_once_exception */
extern void T64f1043(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_C_GENERATOR.print_assign_result_to_thread_safe_once_value */
extern void T64f1029(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_C_GENERATOR.print_thread_safe_once_value */
extern void T64f1044(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_C_GENERATOR.print_assign_once_value_to_result */
extern void T64f1028(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_C_GENERATOR.print_once_mutex_unlock */
extern void T64f1027(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_C_GENERATOR.print_once_mutex */
extern void T64f1045(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_C_GENERATOR.print_once_mutex_lock */
extern void T64f1026(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_C_GENERATOR.print_once_mutex_try_lock */
extern void T64f1025(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_C_GENERATOR.print_return_thread_safe_once_value */
extern void T64f1024(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_C_GENERATOR.print_raise_thread_safe_once_exception_if_any */
extern void T64f1023(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_C_GENERATOR.print_thread_safe_once_status */
extern void T64f1022(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].force_last */
extern void T282f51(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].key_storage_put */
extern void T282f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].slots_put */
extern void T282f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].clashes_put */
extern void T282f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].resize */
extern void T282f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].clashes_resize */
extern void T282f60(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].special_integer_ */
extern T0* T282f33(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].key_storage_resize */
extern void T282f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].item_storage_resize */
extern void T282f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].slots_resize */
extern void T282f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].new_capacity */
extern T6 T282f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].item_storage_put */
extern void T282f52(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] ET_PRECURSOR_CHECKER.process_deferred_procedure */
extern void T1271f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.process_deferred_procedure */
extern void T1270f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_deferred_procedure */
extern void T369f91(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_deferred_procedure_validity */
extern void T369f103(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_procedure */
extern void T69f131(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_procedure_validity */
extern void T69f133(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_deferred_procedure */
extern void T64f1014(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_deferred_procedure */
extern void T64f1017(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_named_object_test */
extern void T1271f78(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_named_object_test */
extern void T387f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_named_object_test */
extern void T383f59(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE.add_object_test */
extern void T382f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].force_last */
extern void T712f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].resize */
extern void T712f16(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T712f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].extendible */
extern T1 T712f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuot1f_error */
extern void T50f517(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vuot1f */
extern T0* T742c1106(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T50f122(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vuot1f_error */
extern void T34f517(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T34f122(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.error_handler */
extern T0* T383f7(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.set_fatal_error */
extern void T383f63(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.process_named_object_test */
extern void T369f189(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_named_object_test_validity */
extern void T369f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_named_object_test */
extern void T369f278(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuot4b_error */
extern void T50f424(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vuot4b */
extern T0* T742c1014(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T50f123(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vuot4b_error */
extern void T34f424(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T34f123(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuot4a_error */
extern void T50f423(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vuot4a */
extern T0* T742c1013(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_vuot4a_error */
extern void T34f423(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.ise_6_3_7_5660 */
extern T0* T369f59(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuot1e_error */
extern void T50f422(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vuot1e */
extern T0* T742c1012(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vuot1e_error */
extern void T34f422(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuot1d_error */
extern void T50f421(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vuot1d */
extern T0* T742c1011(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vuot1d_error */
extern void T34f421(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].remove_last */
extern void T375f15(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_INLINE_AGENT].keep_head */
extern void T685f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_INLINE_AGENT].set_count */
extern void T685f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].move_last_cursors_after */
extern void T375f17(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_INLINE_AGENT].set_next_cursor */
extern void T686f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_INLINE_AGENT].set_after */
extern void T686f6(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuot1c_error */
extern void T50f420(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vuot1c */
extern T0* T742c1010(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vuot1c_error */
extern void T34f420(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuot1b_error */
extern void T50f419(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vuot1b */
extern T0* T742c1009(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vuot1b_error */
extern void T34f419(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].item */
extern T0* T375f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].force_last */
extern void T375f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_AGENT].force */
extern void T683f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_INLINE_AGENT].fill_with */
extern void T685f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_INLINE_AGENT].extend */
extern void T685f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].resize */
extern void T375f16(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_AGENT].aliased_resized_area */
extern T0* T683f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_INLINE_AGENT].aliased_resized_area */
extern T0* T685f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].new_capacity */
extern T6 T375f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].extendible */
extern T1 T375f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuot1a_error */
extern void T50f418(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vuot1a */
extern T0* T742c1008(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vuot1a_error */
extern void T34f418(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].force_last */
extern void T381f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].key_storage_put */
extern void T381f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].slots_put */
extern void T381f66(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].clashes_put */
extern void T381f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].resize */
extern void T381f64(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].clashes_resize */
extern void T381f71(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].special_integer_ */
extern T0* T381f37(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].key_storage_resize */
extern void T381f70(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].item_storage_resize */
extern void T381f69(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].slots_resize */
extern void T381f68(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T381f31(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].item_storage_put */
extern void T381f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_FEATURE_CHECKER.check_type_validity */
extern void T369f131(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_named_object_test */
extern void T69f282(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_named_object_test_validity */
extern void T69f344(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_named_object_test */
extern void T69f408(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_named_object_test_dynamic_types */
extern void T69f457(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_constant_expression */
extern void T69f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].force_last */
extern void T370f49(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].key_storage_put */
extern void T370f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE].force */
extern void T680f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TYPE].fill_with */
extern void T679f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TYPE].extend */
extern void T679f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].slots_put */
extern void T370f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].clashes_put */
extern void T370f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].slots_item */
extern T6 T370f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].hash_position */
extern T6 T370f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].resize */
extern void T370f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].clashes_resize */
extern void T370f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T370f31(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].key_storage_resize */
extern void T370f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T680f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T679f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].item_storage_resize */
extern void T370f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T370f30(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].clashes_item */
extern T6 T370f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].slots_resize */
extern void T370f56(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].new_capacity */
extern T6 T370f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].item_storage_put */
extern void T370f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].search_position */
extern void T370f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].found_item */
extern T6 T370f21(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].item_storage_item */
extern T6 T370f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].found */
extern T1 T370f20(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].search */
extern void T370f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_3_7_5660 */
extern T0* T69f88(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_type_validity */
extern void T69f208(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_named_object_test */
extern void T64f1052(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_object_test */
extern void T64f1095(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].force_last */
extern void T267f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST].force */
extern void T624f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_OBJECT_TEST].fill_with */
extern void T623f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_OBJECT_TEST].extend */
extern void T623f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].resize */
extern void T267f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST].aliased_resized_area */
extern T0* T624f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_OBJECT_TEST].aliased_resized_area */
extern T0* T623f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].new_capacity */
extern T6 T267f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].extendible */
extern T1 T267f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_regular_manifest_string */
extern void T1271f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_regular_manifest_string */
extern void T387f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_manifest_string */
extern void T383f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_regular_manifest_string */
extern void T369f174(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_regular_manifest_string_validity */
extern void T369f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.check_manifest_string_validity */
extern void T369f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_string_32_constant */
extern void T369f330(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_string_8_constant */
extern void T369f329(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vwmq0d_error */
extern void T50f443(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vwmq0d */
extern T0* T742c1033(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.type_name */
extern T0* T742f405(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T50f99(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vwmq0d_error */
extern void T34f443(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T34f99(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_manifest_string */
extern void T69f238(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_manifest_string_validity */
extern void T69f301(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_string_validity */
extern void T69f361(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_32_constant */
extern void T69f420(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_constant */
extern void T69f459(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_manifest_string_area_dynamic_type */
extern void T69f473(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_8_constant */
extern void T69f419(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_regular_manifest_string */
extern void T64f1053(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_regular_manifest_string */
extern void T64f1096(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_manifest_string */
extern void T64f1143(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_void */
extern void T1271f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_void */
extern void T387f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_void */
extern void T383f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_void */
extern void T369f176(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_void_validity */
extern void T369f229(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_void_constant */
extern void T369f287(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_void */
extern void T69f247(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_void_validity */
extern void T69f310(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_void_constant */
extern void T69f364(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_void */
extern void T64f1054(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_void */
extern void T64f1097(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_across_expression */
extern void T1271f80(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_loop_invariants */
extern void T1271f85(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LOOP_INVARIANTS.assertion */
extern T0* T1171f6(GE_context* ac, T0* C, T6 a1);
/* detachable ET_LOOP_INVARIANTS.item */
extern T0* T1171f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_across_expression */
extern void T387f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_across_expression */
extern void T383f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_across_expression */
extern void T369f190(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_across_expression_validity */
extern void T369f241(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_across_expression */
extern void T369f310(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].remove_found_item */
extern void T384f63(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].remove_position */
extern void T384f66(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].key_storage_put */
extern void T384f71(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].item_storage_put */
extern void T384f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].key_storage_keep_head */
extern void T384f75(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].item_storage_keep_head */
extern void T384f74(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].clashes_put */
extern void T384f69(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].slots_put */
extern void T384f70(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].move_cursors_forth */
extern void T384f73(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].internal_set_key_equality_tester */
extern void T384f72(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACROSS_CURSOR_SCOPE.remove_across_components */
extern void T385f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].prune_last */
extern void T718f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_CHECKER.check_loop_variant_validity */
extern void T369f309(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vave0a_error */
extern void T50f483(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vave0a */
extern T0* T742c1073(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vave_error */
extern T1 T50f142(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vave0a_error */
extern void T34f483(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vave_error */
extern T1 T34f142(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_loop_invariant_validity */
extern void T369f308(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACROSS_CURSOR_SCOPE.add_across_component */
extern void T385f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].force_last */
extern void T718f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].resize */
extern void T718f16(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].new_capacity */
extern T6 T718f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].extendible */
extern T1 T718f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_CHECKER.check_across_component_header_validity */
extern void T369f307(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_qualified_call_instruction_validity */
extern void T369f359(GE_context* ac, T0* C, T0* a1);
extern T1 T369f359ot1(T0* a1, T0** a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vkcn1b_error */
extern void T50f503(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vkcn1b */
extern T0* T742c1093(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vkcn1b_error */
extern void T34f503(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_PARENTHESIS_INSTRUCTION.parenthesis_call */
extern T0* T1926f6(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T369f377(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.free_overloaded_procedures */
extern void T369f370(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].force_last */
extern void T376f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].force */
extern void T687f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].fill_with */
extern void T689f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].extend */
extern void T689f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].resize */
extern void T376f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].aliased_resized_area */
extern T0* T687f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].aliased_resized_area */
extern T0* T689f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].new_capacity */
extern T6 T376f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].extendible */
extern T1 T376f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].first */
extern T0* T688f14(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].is_empty */
extern T1 T688f13(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.new_overloaded_procedures */
extern T0* T369f67(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].remove_last */
extern void T376f15(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].keep_head */
extern void T689f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].set_count */
extern void T689f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].move_last_cursors_after */
extern void T376f16(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].set_next_cursor */
extern void T690f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].set_after */
extern void T690f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].last */
extern T0* T376f10(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].is_empty */
extern T1 T376f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].force_last */
extern void T384f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].resize */
extern void T384f68(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].clashes_resize */
extern void T384f79(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].special_integer_ */
extern T0* T384f39(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].key_storage_resize */
extern void T384f78(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].item_storage_resize */
extern void T384f77(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].slots_resize */
extern void T384f76(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].new_capacity */
extern T6 T384f31(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_CHECKER.report_across_cursor_declaration */
extern void T369f358(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ACROSS_CURSOR_SCOPE.hidden_across_component */
extern T0* T385f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_voit2e_error */
extern void T50f482(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_voit2e */
extern T0* T742c1072(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_voit2_error */
extern T1 T50f141(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_voit2e_error */
extern void T34f482(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_voit2_error */
extern T1 T34f141(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE.hidden_object_test */
extern T0* T382f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_voit2d_error */
extern void T50f481(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_voit2d */
extern T0* T742c1071(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_voit2d_error */
extern void T34f481(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_voit2c_error */
extern void T50f480(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_voit2c */
extern T0* T742c1070(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_voit2c_error */
extern void T34f480(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_voit2b_error */
extern void T50f479(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_voit2b */
extern T0* T742c1069(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_voit2b_error */
extern void T34f479(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_voit2a_error */
extern void T50f478(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_voit2a */
extern T0* T742c1068(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_voit2a_error */
extern void T34f478(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_voit1a_error */
extern void T50f477(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_voit1a */
extern T0* T742c1067(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_voit1_error */
extern T1 T50f140(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_voit1a_error */
extern void T34f477(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_voit1_error */
extern T1 T34f140(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_expression */
extern void T69f284(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_expression_validity */
extern void T69f346(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_expression */
extern void T69f412(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T69f411(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T69f411p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T69f410(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T69f410p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_component_header_validity */
extern void T69f409(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_instruction_validity */
extern void T69f220(GE_context* ac, T0* C, T0* a1);
extern T1 T69f220ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T69f228(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_procedures */
extern void T69f290(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_procedures */
extern T0* T69f82(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_cursor_declaration */
extern void T69f458(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_across_expression */
extern void T64f1055(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_across_expression */
extern void T64f1098(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_bracket_expression */
extern void T1271f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.process */
extern void T1903f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_unfolded_tuple_actual_argument_list */
extern void T1271f108(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_ARGUMENT_LIST.process */
extern void T273f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_bracket_expression */
extern void T387f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_bracket_expression */
extern void T383f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_bracket_expression */
extern void T369f185(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_bracket_expression_validity */
extern void T369f237(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bracket_expression */
extern void T69f267(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bracket_expression_validity */
extern void T69f330(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_bracket_expression */
extern void T64f1056(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_bracket_expression */
extern void T64f1099(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_call_agent */
extern void T1271f68(GE_context* ac, T0* C, T0* a1);
extern T1 T1271f68ot1(T0* a1, T0** a2);
/* [detachable] ET_PRECURSOR_CHECKER.process_agent_argument_operand_list */
extern void T1271f91(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_call_agent */
extern void T387f52(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_call_agent */
extern void T383f57(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_call_agent */
extern void T369f187(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_call_agent_validity */
extern void T369f239(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T369f239ot1(T0* a1, T0** a2);
extern T1 T369f239ot2(T0* a1, T0** a2);
/* [detachable] ET_FEATURE_CHECKER.check_typed_call_agent_validity */
extern void T369f301(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T369f301ot1(T0* a1, T0** a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgmc0g_error */
extern void T50f465(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_VALIDITY_ERROR.make_vgmc0g */
extern T0* T742c1055(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_ERROR_HANDLER.report_vgmc0g_error */
extern void T34f465(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* detachable ET_CALL_AGENT.is_procedure */
extern T1 T1003f21(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vpca1b_error */
extern void T50f464(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vpca1b */
extern T0* T742c1054(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T50f135(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vpca1b_error */
extern void T34f464(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T34f135(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_typed_tuple_label_call_agent_validity */
extern void T369f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.report_tuple_label_call_agent */
extern void T369f375(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_typed_query_call_agent_validity */
extern void T369f351(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.report_qualified_query_call_agent */
extern void T369f374(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_FEATURE_CHECKER.check_agent_arguments_validity */
extern void T369f340(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T369f340ot1(T0* a1, T0** a2);
extern T1 T369f340ot2(T0* a1, T0** a2);
extern T1 T369f340ot3(T0* a1, T0** a2);
extern T1 T369f340ot4(T0* a1, T0** a2);
extern T1 T369f340ot5(T0* a1, T0** a2);
extern T1 T369f340ot6(T0* a1, T0** a2);
extern T1 T369f340ot7(T0* a1, T0** a2);
extern T1 T369f340ot8(T0* a1, T0** a2);
extern T1 T369f340ot9(T0* a1, T0** a2);
extern T1 T369f340ot10(T0* a1, T0** a2);
extern T1 T369f340ot11(T0* a1, T0** a2);
extern T1 T369f340ot12(T0* a1, T0** a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vpca5b_error */
extern void T50f501(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* [detachable] ET_VALIDITY_ERROR.make_vpca5b */
extern T0* T742c1091(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T50f150(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vpca5b_error */
extern void T34f501(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* [detachable] ET_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T34f150(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vpca5a_error */
extern void T50f500(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* [detachable] ET_VALIDITY_ERROR.make_vpca5a */
extern T0* T742c1090(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* [detachable] ET_ERROR_HANDLER.report_vpca5a_error */
extern void T34f500(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vpca4b_error */
extern void T50f499(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* [detachable] ET_VALIDITY_ERROR.make_vpca4b */
extern T0* T742c1089(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T50f149(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vpca4b_error */
extern void T34f499(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* [detachable] ET_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T34f149(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vpca4a_error */
extern void T50f498(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* [detachable] ET_VALIDITY_ERROR.make_vpca4a */
extern T0* T742c1088(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* [detachable] ET_ERROR_HANDLER.report_vpca4a_error */
extern void T34f498(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* detachable ET_AGENT_ARGUMENT_OPERAND_LIST.put */
extern void T990f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable ET_AGENT_ARGUMENT_OPERAND_LIST.item */
extern T0* T990f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vpca3b_error */
extern void T50f497(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vpca3b */
extern T0* T742c1087(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T50f148(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vpca3b_error */
extern void T34f497(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T34f148(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vpca3a_error */
extern void T50f496(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vpca3a */
extern T0* T742c1086(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vpca3a_error */
extern void T34f496(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.force_first */
extern void T235f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.resize */
extern void T235f36(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T604f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T601f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.new_capacity */
extern T6 T235f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.capacity */
extern T6 T235f23(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.set_implicit_agent_open_arguments */
extern void T369f339(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.put_last */
extern void T1952f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT].force */
extern void T2003f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT].fill_with */
extern void T2002f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT].extend */
extern void T2002f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.fixed_array */
extern T0* T1952f6(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT].default_create */
extern T0* T2003c2(GE_context* ac);
/* [detachable] ET_AGENT_IMPLICIT_OPEN_ARGUMENT.make */
extern T0* T1953c5(GE_context* ac, T0* a1, T6 a2);
/* [detachable] ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.make_with_capacity */
extern T0* T1952c7(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T2003f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make_empty */
extern T0* T2002c4(GE_context* ac, T6 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vpca2a_error */
extern void T50f502(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vpca2a */
extern T0* T742c1092(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T50f151(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vpca2a_error */
extern void T34f502(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T34f151(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_typed_procedure_call_agent_validity */
extern void T369f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.report_qualified_procedure_call_agent */
extern void T369f373(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_CALL_AGENT.set_procedure */
extern void T1003f34(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_FEATURE_CHECKER.check_qualified_call_agent_validity */
extern void T369f300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T369f300ot1(T0* a1, T0** a2);
/* [detachable] ET_FEATURE_CHECKER.check_qualified_tuple_label_call_agent_validity */
extern void T369f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_qualified_query_call_agent_validity */
extern void T369f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_qualified_procedure_call_agent_validity */
extern void T369f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_unqualified_call_agent_validity */
extern void T369f299(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vpca1a_error */
extern void T50f463(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vpca1a */
extern T0* T742c1053(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_vpca1a_error */
extern void T34f463(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.check_unqualified_query_call_agent_validity */
extern void T369f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.report_unqualified_query_call_agent */
extern void T369f372(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_FEATURE_CHECKER.check_unqualified_procedure_call_agent_validity */
extern void T369f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.report_unqualified_procedure_call_agent */
extern void T369f371(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vucr0j_error */
extern void T50f462(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vucr0j */
extern T0* T742c1052(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vucr0j_error */
extern void T34f462(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_agent */
extern void T69f272(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_agent_validity */
extern void T69f335(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T69f335ot1(T0* a1, T0** a2);
extern T1 T69f335ot2(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_call_agent_validity */
extern void T69f392(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T69f392ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_tuple_label_call_agent_validity */
extern void T69f444(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_call_agent */
extern void T69f470(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T69f470ot1(T0* a1, T0** a2);
extern T1 T69f470ot2(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_query_call */
extern void T69f478(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_TYPE_SET_LIST.is_empty */
extern T1 T254f8(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_query_call_agent_validity */
extern void T69f443(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_query_call_agent */
extern void T69f469(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_agent */
extern void T69f477(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T69f477ot1(T0* a1, T0** a2);
extern T1 T69f477ot2(T0* a1, T0** a2);
extern T1 T69f477ot3(T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_agent_closed_operands_dynamic_types */
extern void T69f480(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T69f480ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_agent_arguments_validity */
extern void T69f450(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T69f450ot1(T0* a1, T0** a2);
extern T1 T69f450ot2(T0* a1, T0** a2);
extern T1 T69f450ot3(T0* a1, T0** a2);
extern T1 T69f450ot4(T0* a1, T0** a2);
extern T1 T69f450ot5(T0* a1, T0** a2);
extern T1 T69f450ot6(T0* a1, T0** a2);
extern T1 T69f450ot7(T0* a1, T0** a2);
extern T1 T69f450ot8(T0* a1, T0** a2);
extern T1 T69f450ot9(T0* a1, T0** a2);
extern T1 T69f450ot10(T0* a1, T0** a2);
extern T1 T69f450ot11(T0* a1, T0** a2);
extern T1 T69f450ot12(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_implicit_agent_open_arguments */
extern void T69f449(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_procedure_call_agent_validity */
extern void T69f442(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_procedure_call_agent */
extern void T69f468(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_agent_validity */
extern void T69f391(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T69f391ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_agent_validity */
extern void T69f441(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_agent_validity */
extern void T69f440(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_agent_validity */
extern void T69f439(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_agent_validity */
extern void T69f390(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_agent_validity */
extern void T69f438(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_query_call_agent */
extern void T69f467(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_agent */
extern void T69f476(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T69f476ot1(T0* a1, T0** a2);
extern T1 T69f476ot2(T0* a1, T0** a2);
extern T1 T69f476ot3(T0* a1, T0** a2);
extern T1 T69f476ot4(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_call_agent_result_dynamic_types */
extern void T69f481(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_agent_validity */
extern void T69f437(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_procedure_call_agent */
extern void T69f466(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_C_GENERATOR.process_call_agent */
extern void T64f1057(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_call_agent */
extern void T64f1101(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_agent */
extern void T64f1145(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1145ot1(T0* a1, T0** a2);
extern T1 T64f1145ot2(T0* a1, T0** a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_AGENT].force_last */
extern void T270f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_AGENT].force */
extern void T633f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_AGENT].fill_with */
extern void T632f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_AGENT].extend */
extern void T632f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_AGENT].resize */
extern void T270f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_AGENT].aliased_resized_area */
extern T0* T633f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_AGENT].aliased_resized_area */
extern T0* T632f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_AGENT].new_capacity */
extern T6 T270f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_AGENT].extendible */
extern T1 T270f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.print_call_agent_body_declaration */
extern void T64f1100(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_qualified_call_instruction */
extern void T64f1144(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1144ot1(T0* a1, T0** a2);
/* [detachable] ET_QUALIFIED_CALL_INSTRUCTION.set_name */
extern void T274f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_CALL_INSTRUCTION.set_target */
extern void T274f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.set_name */
extern void T277f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_if_expression */
extern void T1271f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_elseif_expression_list */
extern void T1271f88(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ELSEIF_EXPRESSION.process */
extern void T1073f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_elseif_expression */
extern void T1271f110(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ELSEIF_EXPRESSION_LIST.item */
extern T0* T1076f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_if_expression */
extern void T387f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_if_expression */
extern void T383f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_if_expression */
extern void T369f180(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_if_expression_validity */
extern void T369f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.free_common_ancestor_types */
extern void T369f293(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].keep_first */
extern void T380f19(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].move_all_cursors_after */
extern void T380f22(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].item */
extern T0* T380f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_CHECKER.report_if_expression */
extern void T369f292(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.update_common_ancestor_type_list */
extern void T369f291(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].remove */
extern void T380f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].move_left */
extern void T380f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].move_cursors_left */
extern void T380f20(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT].set_position */
extern void T705f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_expression */
extern void T69f253(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_expression_validity */
extern void T69f316(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_common_ancestor_types */
extern void T69f370(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_if_expression */
extern void T69f369(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_if_expression_dynamic_types */
extern void T69f427(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.update_common_ancestor_type_list */
extern void T69f368(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] ET_C_GENERATOR.process_if_expression */
extern void T64f1058(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_if_expression */
extern void T64f1102(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_manifest_array */
extern void T1271f65(GE_context* ac, T0* C, T0* a1);
/* detachable ET_MANIFEST_ARRAY.expression */
extern T0* T1174f14(GE_context* ac, T0* C, T6 a1);
/* detachable ET_MANIFEST_ARRAY.item */
extern T0* T1174f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_array */
extern void T387f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_array */
extern void T383f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_manifest_array */
extern void T369f140(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_manifest_array_validity */
extern void T369f192(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.check_untyped_manifest_array_validity */
extern void T369f247(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T369f247ot1(T0* a1, T0** a2);
extern T1 T369f247ot2(T0* a1, T0** a2);
/* detachable ET_MANIFEST_ARRAY.put */
extern void T1174f33(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_FEATURE_CHECKER.report_manifest_array */
extern void T369f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_CLASS_TYPE.conforms_to_context */
extern T1 T70f109(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS_TYPE.conforms_to_context_with_type_marks */
extern T1 T70f119(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_CLASS_TYPE.tokens */
extern T0* T70f17(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.check_typed_manifest_array_validity */
extern void T369f246(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T369f246ot1(T0* a1, T0** a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vwma2a_error */
extern void T50f438(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* [detachable] ET_VALIDITY_ERROR.make_vwma2a */
extern T0* T742c1028(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vwma2_error */
extern T1 T50f128(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vwma2a_error */
extern void T34f438(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* [detachable] ET_ERROR_HANDLER.reportable_vwma2_error */
extern T1 T34f128(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vwma1a_error */
extern void T50f437(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vwma1a */
extern T0* T742c1027(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vwma1_error */
extern T1 T50f127(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vwma1a_error */
extern void T34f437(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vwma1_error */
extern T1 T34f127(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_array */
extern void T69f269(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_array_validity */
extern void T69f332(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_untyped_manifest_array_validity */
extern void T69f387(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T69f387ot1(T0* a1, T0** a2);
extern T1 T69f387ot2(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_array */
extern void T69f436(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T69f436ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_manifest_array_validity */
extern void T69f386(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T69f386ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.process_manifest_array */
extern void T64f1059(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_manifest_array */
extern void T64f1103(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1103ot1(T0* a1, T0** a2);
/* [detachable] ET_PRECURSOR_CHECKER.process_parenthesized_expression */
extern void T1271f64(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_parenthesized_expression */
extern void T387f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_parenthesized_expression */
extern void T383f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_parenthesized_expression */
extern void T369f141(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_parenthesized_expression_validity */
extern void T369f193(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_parenthesized_expression */
extern void T69f268(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_parenthesized_expression_validity */
extern void T69f331(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_parenthesized_expression */
extern void T64f1060(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_parenthesized_expression */
extern void T64f1104(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_static_call_expression */
extern void T1271f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_static_call_expression */
extern void T387f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_static_call_expression */
extern void T383f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_static_call_expression */
extern void T369f142(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_static_call_expression_validity */
extern void T369f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.check_static_query_call_expression_validity */
extern void T369f258(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_FEATURE_CHECKER.report_static_call_expression */
extern void T369f326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_static_feature_validity */
extern void T369f325(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T369f325ot1(T0* a1, T0** a2);
extern T1 T369f325ot2(T0* a1, T0** a2);
extern T1 T369f325ot3(T0* a1, T0** a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuno5a_error */
extern void T50f495(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vuno5a */
extern T0* T742c1085(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vuno5_error */
extern T1 T50f147(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vuno5a_error */
extern void T34f495(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vuno5_error */
extern T1 T34f147(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.is_implicitly_static */
extern T1 T1442f53(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_builtin_static */
extern T1 T1442f45(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.string_ */
extern T0* T1442f49(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_builtin */
extern T1 T1442f43(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_implicitly_static */
extern T1 T246f47(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_builtin_static */
extern T1 T246f63(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.string_ */
extern T0* T246f67(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_builtin */
extern T1 T246f57(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_implicitly_static */
extern T1 T359f46(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_implicitly_static */
extern T1 T357f46(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuno5b_error */
extern void T50f494(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vuno5b */
extern T0* T742c1084(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vuno5b_error */
extern void T34f494(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuno3a_error */
extern void T50f493(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vuno3a */
extern T0* T742c1083(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vuno3_error */
extern T1 T50f146(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vuno3a_error */
extern void T34f493(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.reportable_vuno3_error */
extern T1 T34f146(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.report_static_supplier */
extern void T369f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_SUPPLIER_BUILDER.report_static_supplier */
extern void T1286f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_static_parenthesis_call_validity */
extern void T369f257(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T369f257ot1(T0* a1, T0** a2);
extern T1 T369f257ot2(T0* a1, T0** a2);
/* detachable ET_STATIC_CALL_INSTRUCTION.set_parenthesis_call */
extern void T1466f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_STATIC_CALL_EXPRESSION.set_parenthesis_call */
extern void T1217f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_static_dotnet_query_call_expression_validity */
extern void T369f256(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_expression */
extern void T69f255(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_expression_validity */
extern void T69f318(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_query_call_expression_validity */
extern void T69f374(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_expression */
extern void T69f431(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_feature_validity */
extern void T69f430(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T69f430ot1(T0* a1, T0** a2);
extern T1 T69f430ot2(T0* a1, T0** a2);
extern T1 T69f430ot3(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_supplier */
extern void T69f429(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_parenthesis_call_validity */
extern void T69f373(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T69f373ot1(T0* a1, T0** a2);
extern T1 T69f373ot2(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_query_call_expression_validity */
extern void T69f372(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_C_GENERATOR.process_static_call_expression */
extern void T64f1061(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_static_call_expression */
extern void T64f1105(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_expression_static_call */
extern void T64f1146(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T64f1146ot1(T0* a1, T0** a2);
extern T1 T64f1146ot2(T0* a1, T0** a2);
extern T1 T64f1146ot3(T0* a1, T0** a2);
/* detachable ET_DYNAMIC_PRECURSOR.set_static_generated */
extern void T297f33(GE_context* ac, T0* C, T1 a1);
/* detachable ET_DYNAMIC_FEATURE.set_static_generated */
extern void T231f38(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_strip_expression */
extern void T1271f67(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_strip_expression */
extern void T387f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_strip_expression */
extern void T383f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_strip_expression */
extern void T369f143(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_strip_expression_validity */
extern void T369f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_strip_expression */
extern void T369f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vwst2a_error */
extern void T50f400(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vwst2a */
extern T0* T742c990(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T50f114(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vwst2a_error */
extern void T34f400(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T34f114(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vwst1a_error */
extern void T50f399(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vwst1a */
extern T0* T742c989(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T50f113(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vwst1a_error */
extern void T34f399(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T34f113(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vwst1b_error */
extern void T50f398(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vwst1b */
extern T0* T742c988(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vwst1b_error */
extern void T34f398(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_STRIP_EXPRESSION.feature_name */
extern T0* T1220f20(GE_context* ac, T0* C, T6 a1);
/* detachable ET_STRIP_EXPRESSION.item */
extern T0* T1220f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_strip_expression */
extern void T69f271(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_strip_expression_validity */
extern void T69f334(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_strip_expression */
extern void T69f389(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_C_GENERATOR.process_strip_expression */
extern void T64f1062(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_strip_expression */
extern void T64f1106(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_underscored_integer_constant */
extern void T1271f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T387f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T383f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_underscored_integer_constant */
extern void T369f147(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_underscored_integer_constant_validity */
extern void T369f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.check_integer_constant_validity */
extern void T369f124(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_SYMBOL_OPERATOR.is_minus */
extern T1 T959f16(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.report_natural_64_constant */
extern void T369f139(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_natural_32_constant */
extern void T369f138(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_natural_16_constant */
extern void T369f137(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_natural_8_constant */
extern void T369f136(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_integer_64_constant */
extern void T369f135(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_integer_32_constant */
extern void T369f134(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_integer_16_constant */
extern void T369f133(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvwmc2a_error */
extern void T50f374(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_gvwmc2a */
extern T0* T742c972(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T50f100(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvwmc2a_error */
extern void T34f374(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T34f100(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.report_integer_8_constant */
extern void T369f132(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vwmq0a_error */
extern void T50f373(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vwmq0a */
extern T0* T742c971(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vwmq0a_error */
extern void T34f373(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_integer_constant */
extern void T69f240(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_integer_constant_validity */
extern void T69f303(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_integer_constant_validity */
extern void T69f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_64_constant */
extern void T69f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_32_constant */
extern void T69f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_16_constant */
extern void T69f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_8_constant */
extern void T69f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_64_constant */
extern void T69f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_32_constant */
extern void T69f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_16_constant */
extern void T69f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_8_constant */
extern void T69f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_underscored_integer_constant */
extern void T64f1063(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_underscored_integer_constant */
extern void T64f1107(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_integer_constant */
extern void T64f1147(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_integer_value */
extern void T64f1152(GE_context* ac, T0* C, T11 a1, T1 a2, T0* a3, T1 a4);
/* [detachable] KL_NULL_TEXT_OUTPUT_STREAM.put_natural_64 */
extern void T156f12(GE_context* ac, T0* C, T11 a1);
/* [detachable] KL_STRING_OUTPUT_STREAM.put_natural_64 */
extern void T255f13(GE_context* ac, T0* C, T11 a1);
/* [detachable] ET_C_GENERATOR.in_target */
extern T1 T64f491(GE_context* ac, T0* C);
/* [detachable] ET_PRECURSOR_CHECKER.process_hexadecimal_integer_constant */
extern void T1271f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T387f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T383f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_hexadecimal_integer_constant */
extern void T369f148(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_hexadecimal_integer_constant_validity */
extern void T369f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_hexadecimal_integer_constant */
extern void T69f241(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_hexadecimal_integer_constant_validity */
extern void T69f304(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_hexadecimal_integer_constant */
extern void T64f1064(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_hexadecimal_integer_constant */
extern void T64f1108(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_octal_integer_constant */
extern void T1271f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_octal_integer_constant */
extern void T387f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_octal_integer_constant */
extern void T383f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_octal_integer_constant */
extern void T369f149(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_octal_integer_constant_validity */
extern void T369f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_octal_integer_constant */
extern void T69f242(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_octal_integer_constant_validity */
extern void T69f305(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_octal_integer_constant */
extern void T64f1065(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_octal_integer_constant */
extern void T64f1109(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_binary_integer_constant */
extern void T1271f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_binary_integer_constant */
extern void T387f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_binary_integer_constant */
extern void T383f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_binary_integer_constant */
extern void T369f150(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_binary_integer_constant_validity */
extern void T369f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_binary_integer_constant */
extern void T69f243(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_binary_integer_constant_validity */
extern void T69f306(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_binary_integer_constant */
extern void T64f1066(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_binary_integer_constant */
extern void T64f1110(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_regular_real_constant */
extern void T1271f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_regular_real_constant */
extern void T387f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_real_constant */
extern void T383f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_regular_real_constant */
extern void T369f151(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_regular_real_constant_validity */
extern void T369f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.check_real_constant_validity */
extern void T369f262(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.set_type */
extern void T1417f48(GE_context* ac, T0* C, T0* a1);
/* detachable ET_REGULAR_REAL_CONSTANT.set_type */
extern void T1416f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.report_real_64_constant */
extern void T369f332(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_real_32_constant */
extern void T369f331(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vwmq0b_error */
extern void T50f444(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vwmq0b */
extern T0* T742c1034(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vwmq0b_error */
extern void T34f444(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_real_constant */
extern void T69f244(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_real_constant_validity */
extern void T69f307(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_real_constant_validity */
extern void T69f362(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_64_constant */
extern void T69f422(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_32_constant */
extern void T69f421(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_regular_real_constant */
extern void T64f1067(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_regular_real_constant */
extern void T64f1111(GE_context* ac, T0* C, T0* a1);
/* detachable ET_REGULAR_REAL_CONSTANT.is_negative */
extern T1 T1416f16(GE_context* ac, T0* C);
/* [detachable] ET_PRECURSOR_CHECKER.process_underscored_real_constant */
extern void T1271f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_real_constant */
extern void T387f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_real_constant */
extern void T383f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_underscored_real_constant */
extern void T369f152(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_underscored_real_constant_validity */
extern void T369f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_real_constant */
extern void T69f245(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_real_constant_validity */
extern void T69f308(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_underscored_real_constant */
extern void T64f1068(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_underscored_real_constant */
extern void T64f1112(GE_context* ac, T0* C, T0* a1);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.is_negative */
extern T1 T1417f16(GE_context* ac, T0* C);
/* [detachable] ET_PRECURSOR_CHECKER.process_true_constant */
extern void T1271f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_true_constant */
extern void T387f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_true_constant */
extern void T383f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_true_constant */
extern void T369f153(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_true_constant_validity */
extern void T369f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_boolean_constant */
extern void T369f263(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_true_constant */
extern void T69f246(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_true_constant_validity */
extern void T69f309(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_boolean_constant */
extern void T69f363(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_true_constant */
extern void T64f1069(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_true_constant */
extern void T64f1113(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_false_constant */
extern void T1271f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_false_constant */
extern void T387f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_false_constant */
extern void T383f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_false_constant */
extern void T369f154(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_false_constant_validity */
extern void T369f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_false_constant */
extern void T69f248(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_false_constant_validity */
extern void T69f311(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_false_constant */
extern void T64f1070(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_false_constant */
extern void T64f1114(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_c1_character_constant */
extern void T1271f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_c1_character_constant */
extern void T387f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_c1_character_constant */
extern void T383f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_c1_character_constant */
extern void T369f155(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_c1_character_constant_validity */
extern void T369f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.check_character_constant_validity */
extern void T369f260(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_character_32_constant */
extern void T369f328(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_character_8_constant */
extern void T369f327(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vwmq0c_error */
extern void T50f442(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vwmq0c */
extern T0* T742c1032(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vwmq0c_error */
extern void T34f442(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c1_character_constant */
extern void T69f250(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c1_character_constant_validity */
extern void T69f313(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_character_constant_validity */
extern void T69f366(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_32_constant */
extern void T69f424(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_8_constant */
extern void T69f423(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_c1_character_constant */
extern void T64f1071(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_character_constant */
extern void T64f1115(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_escaped_character_8 */
extern void T64f1148(GE_context* ac, T0* C, T2 a1);
/* [detachable] KL_NULL_TEXT_OUTPUT_STREAM.put_natural_32 */
extern void T156f11(GE_context* ac, T0* C, T10 a1);
/* [detachable] KL_STRING_OUTPUT_STREAM.put_natural_32 */
extern void T255f12(GE_context* ac, T0* C, T10 a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_c2_character_constant */
extern void T1271f47(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_c2_character_constant */
extern void T387f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_c2_character_constant */
extern void T383f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_c2_character_constant */
extern void T369f156(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_c2_character_constant_validity */
extern void T369f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c2_character_constant */
extern void T69f251(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c2_character_constant_validity */
extern void T69f314(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_c2_character_constant */
extern void T64f1072(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_do_function */
extern void T1271f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.process_do_function */
extern void T1270f52(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_do_function */
extern void T369f92(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_do_function_validity */
extern void T369f104(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vevi0c_error */
extern void T50f357(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vevi0c */
extern T0* T742c955(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vevi0c_error */
extern void T34f357(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.report_result_supplier */
extern void T369f122(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_SUPPLIER_BUILDER.report_result_supplier */
extern void T1286f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.report_result_declaration */
extern void T369f121(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_query_type_validity */
extern void T369f120(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function */
extern void T69f147(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_validity */
extern void T69f152(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_supplier */
extern void T69f159(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_declaration */
extern void T69f158(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_type_validity */
extern void T69f157(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_do_function */
extern void T64f1073(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_do_function */
extern void T64f1116(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_internal_function */
extern void T64f1149(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_once_function */
extern void T1271f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.process_once_function */
extern void T1270f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_once_function */
extern void T369f93(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_once_function_validity */
extern void T369f105(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vucr0b_error */
extern void T50f358(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vucr0b */
extern T0* T742c956(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_vucr0b_error */
extern void T34f358(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.check_once_keys_validity */
extern void T369f123(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vvok2a_error */
extern void T50f363(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vvok2a */
extern T0* T742c961(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T50f92(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vvok2a_error */
extern void T34f363(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T34f92(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_STANDARD_ONCE_KEYS.is_process_key */
extern T1 T1780f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_STANDARD_ONCE_KEYS.is_expected_key */
extern T1 T1780f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_STANDARD_ONCE_KEYS.string_ */
extern T0* T1780f7(GE_context* ac, T0* C);
/* [detachable] ET_STANDARD_ONCE_KEYS.is_thread_key */
extern T1 T1780f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vvok1b_error */
extern void T50f362(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vvok1b */
extern T0* T742c960(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T50f91(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vvok1b_error */
extern void T34f362(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T34f91(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vvok1a_error */
extern void T50f361(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vvok1a */
extern T0* T742c959(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vvok1a_error */
extern void T34f361(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_STANDARD_ONCE_KEYS.is_object_key */
extern T1 T1780f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.standard_once_keys */
extern T0* T369f53(GE_context* ac, T0* C);
/* [detachable] ET_STANDARD_ONCE_KEYS.default_create */
extern T0* T1780c12(GE_context* ac);
/* detachable ET_MANIFEST_STRING_LIST.manifest_string */
extern T0* T1180f7(GE_context* ac, T0* C, T6 a1);
/* detachable ET_MANIFEST_STRING_LIST.item */
extern T0* T1180f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].wipe_out */
extern void T389f12(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] ET_INDEXING_TERM].keep_head */
extern void T726f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_INDEXING_TERM].set_count */
extern void T726f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].move_all_cursors_after */
extern void T389f13(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_INDEXING_TERM].set_next_cursor */
extern void T727f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_INDEXING_TERM].set_after */
extern void T727f6(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vvok2b_error */
extern void T50f360(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vvok2b */
extern T0* T742c958(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_vvok2b_error */
extern void T34f360(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vvok1c_error */
extern void T50f359(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vvok1c */
extern T0* T742c957(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vvok1c_error */
extern void T34f359(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].item */
extern T0* T389f7(GE_context* ac, T0* C, T6 a1);
/* detachable ET_INDEXING_LIST.append_tagged_indexing_terms_to_list */
extern void T1133f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INDEXING_TERM_LIST.append_indexing_terms_to_list */
extern void T1144f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].force_last */
extern void T389f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM].force */
extern void T724f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_INDEXING_TERM].fill_with */
extern void T726f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_INDEXING_TERM].extend */
extern void T726f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].resize */
extern void T389f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM].aliased_resized_area */
extern T0* T724f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_INDEXING_TERM].aliased_resized_area */
extern T0* T726f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].new_capacity */
extern T6 T389f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].extendible */
extern T1 T389f8(GE_context* ac, T0* C, T6 a1);
/* detachable ET_INDEXING_LIST.string_ */
extern T0* T1133f7(GE_context* ac, T0* C);
/* detachable ET_INDEXING.tag */
extern T0* T1425f4(GE_context* ac, T0* C);
/* detachable ET_INDEXING.indexing_clause */
extern T0* T1425f2(GE_context* ac, T0* C);
/* detachable ET_TAGGED_INDEXING.indexing_clause */
extern T0* T1424f3(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function */
extern void T69f148(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_validity */
extern void T69f153(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_keys_validity */
extern void T69f160(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.standard_once_keys */
extern T0* T69f73(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.process_once_function */
extern void T64f1074(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_once_function */
extern void T64f1117(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_deferred_function */
extern void T1271f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.process_deferred_function */
extern void T1270f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_deferred_function */
extern void T369f94(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_deferred_function_validity */
extern void T369f106(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_function */
extern void T69f149(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_function_validity */
extern void T69f154(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_deferred_function */
extern void T64f1075(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_deferred_function */
extern void T64f1118(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_once_procedure */
extern void T1271f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.process_once_procedure */
extern void T1270f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_once_procedure */
extern void T369f95(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_once_procedure_validity */
extern void T369f107(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.is_once_per_object */
extern T1 T1441f62(GE_context* ac, T0* C);
/* [detachable] ET_STANDARD_ONCE_KEYS.has_object_key */
extern T1 T1780f2(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_STANDARD_ONCE_KEYS.has_expected_key */
extern T1 T1780f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ONCE_PROCEDURE.standard_once_keys */
extern T0* T1441f49(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure */
extern void T69f150(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_validity */
extern void T69f155(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_once_procedure */
extern void T64f1076(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_once_procedure */
extern void T64f1119(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_external_procedure */
extern void T1271f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.process_external_procedure */
extern void T1270f56(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_external_feature_validity */
extern void T1270f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_feature_validity */
extern void T1270f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvkbu1a_error */
extern void T50f515(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_gvkbu1a */
extern T0* T742c1104(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T50f156(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvkbu1a_error */
extern void T34f515(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T34f156(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.error_handler */
extern T0* T1270f9(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.set_fatal_error */
extern void T1270f48(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.unknown_builtin_reported */
extern T1 T1270f8(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.set_builtin_code */
extern void T1442f109(GE_context* ac, T0* C, T8 a1, T8 a2);
/* [detachable] ET_EXTERNAL_FUNCTION.set_builtin_code */
extern void T246f112(GE_context* ac, T0* C, T8 a1, T8 a2);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_real_n_feature_validity */
extern void T1270f47(GE_context* ac, T0* C, T0* a1, T8 a2);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_expected_builtin_feature_validity */
extern void T1270f50(GE_context* ac, T0* C, T0* a1, T8 a2, T0* a3);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_signature_validity */
extern void T1270f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvkbs0a_error */
extern void T50f516(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_gvkbs0a */
extern T0* T742c1105(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T50f157(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvkbs0a_error */
extern void T34f516(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T34f157(GE_context* ac, T0* C, T0* a1);
/* [detachable] ARRAY [[attached] ET_TYPE].count */
extern T6 T249f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].found_item */
extern T0* T1863f28(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].item_storage_item */
extern T0* T1863f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].found */
extern T1 T1863f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].search */
extern void T1863f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].search_position */
extern void T1863f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].hash_position */
extern T6 T1863f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].key_storage_item */
extern T0* T1863f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].clashes_item */
extern T6 T1863f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].slots_item */
extern T6 T1863f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TOKEN_CONSTANTS.truncated_to_real_feature_name */
extern T0* T71f1506(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.truncated_to_integer_64_feature_name */
extern T0* T71f1504(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.truncated_to_integer_feature_name */
extern T0* T71f1502(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.to_double_feature_name */
extern T0* T71f1449(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.quotient_feature_name */
extern T0* T71f1445(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.product_feature_name */
extern T0* T71f1443(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.power_feature_name */
extern T0* T71f1441(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.plus_feature_name */
extern T0* T71f1029(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.out_feature_name */
extern T0* T71f1027(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.opposite_feature_name */
extern T0* T71f1438(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.minus_feature_name */
extern T0* T71f1436(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_positive_infinity_feature_name */
extern T0* T71f1492(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_negative_infinity_feature_name */
extern T0* T71f1490(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_nan_feature_name */
extern T0* T71f1488(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_less_feature_name */
extern T0* T71f1434(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.ieee_minimum_number_feature_name */
extern T0* T71f1485(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.ieee_maximum_number_feature_name */
extern T0* T71f1483(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.ieee_is_less_equal_feature_name */
extern T0* T71f1481(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.ieee_is_less_feature_name */
extern T0* T71f1479(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.ieee_is_greater_equal_feature_name */
extern T0* T71f1477(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.ieee_is_greater_feature_name */
extern T0* T71f1475(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.ieee_is_equal_feature_name */
extern T0* T71f1473(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.identity_feature_name */
extern T0* T71f1428(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.floor_real_64_feature_name */
extern T0* T71f1470(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.floor_real_32_feature_name */
extern T0* T71f1468(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.ceiling_real_64_feature_name */
extern T0* T71f1466(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.register_builtin_feature */
extern void T1270f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T8 a4, T0* a5);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].force_last */
extern void T1863f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].key_storage_put */
extern void T1863f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].slots_put */
extern void T1863f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].clashes_put */
extern void T1863f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].resize */
extern void T1863f42(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].clashes_resize */
extern void T1863f50(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].special_integer_ */
extern T0* T1863f31(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].key_storage_resize */
extern void T1863f49(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].item_storage_resize */
extern void T1863f48(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].aliased_resized_area */
extern T0* T1922f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].aliased_resized_area */
extern T0* T1919f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].slots_resize */
extern void T1863f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].new_modulus */
extern T6 T1863f24(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].new_capacity */
extern T6 T1863f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].item_storage_put */
extern void T1863f41(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].force */
extern void T1922f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].fill_with */
extern void T1919f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].extend */
extern void T1919f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].unset_found_item */
extern void T1863f39(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.ceiling_real_32_feature_name */
extern T0* T71f1464(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].force_last */
extern void T1624f43(GE_context* ac, T0* C, T0* a1, T8 a2);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].key_storage_put */
extern void T1624f49(GE_context* ac, T0* C, T8 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].slots_put */
extern void T1624f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].clashes_put */
extern void T1624f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].slots_item */
extern T6 T1624f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].hash_position */
extern T6 T1624f23(GE_context* ac, T0* C, T8 a1);
/* NATURAL_8.hash_code */
extern T6 T8f20(GE_context* ac, T8* C);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].resize */
extern void T1624f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].clashes_resize */
extern void T1624f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].special_integer_ */
extern T0* T1624f31(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].key_storage_resize */
extern void T1624f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].item_storage_resize */
extern void T1624f51(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].aliased_resized_area */
extern T0* T1862f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].aliased_resized_area */
extern T0* T1864f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].key_storage_item */
extern T8 T1624f30(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].clashes_item */
extern T6 T1624f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].slots_resize */
extern void T1624f50(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].new_capacity */
extern T6 T1624f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].item_storage_put */
extern void T1624f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].force */
extern void T1862f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].fill_with */
extern void T1864f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].extend */
extern void T1864f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].search_position */
extern void T1624f44(GE_context* ac, T0* C, T8 a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].set_key_equality_tester */
extern void T1863f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.feature_name_tester */
extern T0* T1270f10(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_map */
extern T0* T1863c34(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_with_equality_testers */
extern void T1863f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_sparse_container */
extern void T1863f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].set_internal_cursor */
extern void T1863f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].new_cursor */
extern T0* T1863f30(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make */
extern T0* T1923c4(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_slots */
extern void T1863f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_clashes */
extern void T1863f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_key_storage */
extern void T1863f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_item_storage */
extern void T1863f51(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].make */
extern T0* T1922f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].make_empty */
extern T0* T1919c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].default_create */
extern T0* T1922c3(GE_context* ac);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].found_item */
extern T0* T1624f20(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].item_storage_item */
extern T0* T1624f21(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].found */
extern T1 T1624f32(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].search */
extern void T1624f42(GE_context* ac, T0* C, T8 a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_real_n_ref_feature_validity */
extern void T1270f46(GE_context* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* [detachable] ET_TOKEN_CONSTANTS.set_item_feature_name */
extern T0* T71f995(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.positive_infinity_feature_name */
extern T0* T71f1461(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.negative_infinity_feature_name */
extern T0* T71f1459(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.nan_feature_name */
extern T0* T71f1457(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.natural_64_ref_class_name */
extern T0* T71f927(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.natural_16_ref_class_name */
extern T0* T71f922(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.natural_8_ref_class_name */
extern T0* T71f919(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_64_ref_class_name */
extern T0* T71f916(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_16_ref_class_name */
extern T0* T71f911(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_integer_n_feature_validity */
extern void T1270f45(GE_context* ac, T0* C, T0* a1, T8 a2);
/* [detachable] ET_TOKEN_CONSTANTS.to_real_64_feature_name */
extern T0* T71f1455(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.to_real_32_feature_name */
extern T0* T71f1453(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.to_real_feature_name */
extern T0* T71f1451(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.to_character_32_feature_name */
extern T0* T71f1003(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.to_character_8_feature_name */
extern T0* T71f1001(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_remainder_feature_name */
extern T0* T71f1432(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_quotient_feature_name */
extern T0* T71f1430(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.bit_xor_feature_name */
extern T0* T71f1426(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.bit_shift_right_feature_name */
extern T0* T71f1424(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.bit_shift_left_feature_name */
extern T0* T71f1422(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.bit_or_feature_name */
extern T0* T71f1420(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.bit_not_feature_name */
extern T0* T71f1418(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.bit_and_feature_name */
extern T0* T71f1416(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.as_natural_64_feature_name */
extern T0* T71f1414(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.as_natural_32_feature_name */
extern T0* T71f1412(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.as_natural_16_feature_name */
extern T0* T71f1410(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.as_natural_8_feature_name */
extern T0* T71f1408(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.as_integer_64_feature_name */
extern T0* T71f1406(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.as_integer_32_feature_name */
extern T0* T71f1404(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.as_integer_16_feature_name */
extern T0* T71f1402(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.as_integer_8_feature_name */
extern T0* T71f1400(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_integer_n_ref_feature_validity */
extern void T1270f44(GE_context* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* [detachable] ET_TOKEN_CONSTANTS.integer_8_ref_class_name */
extern T0* T71f908(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_tuple_feature_validity */
extern void T1270f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.set_object_comparison_feature_name */
extern T0* T71f1397(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.put_reference_feature_name */
extern T0* T71f91(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.put_real_64_feature_name */
extern T0* T71f1394(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.put_real_32_feature_name */
extern T0* T71f1392(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.put_pointer_feature_name */
extern T0* T71f1390(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.put_natural_64_feature_name */
extern T0* T71f1388(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.put_natural_32_feature_name */
extern T0* T71f1386(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.put_natural_16_feature_name */
extern T0* T71f1384(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.put_natural_8_feature_name */
extern T0* T71f1382(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.put_integer_64_feature_name */
extern T0* T71f1380(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.put_integer_32_feature_name */
extern T0* T71f1378(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.put_integer_16_feature_name */
extern T0* T71f1376(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.put_integer_8_feature_name */
extern T0* T71f1374(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.put_character_32_feature_name */
extern T0* T71f1372(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.put_character_8_feature_name */
extern T0* T71f1370(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.put_boolean_feature_name */
extern T0* T71f1368(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.reference_item_feature_name */
extern T0* T71f93(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.real_64_item_feature_name */
extern T0* T71f1365(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.real_32_item_feature_name */
extern T0* T71f1363(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.object_comparison_feature_name */
extern T0* T71f1361(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.natural_64_item_feature_name */
extern T0* T71f1359(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.natural_32_item_feature_name */
extern T0* T71f1357(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.natural_16_item_feature_name */
extern T0* T71f1355(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.natural_8_item_feature_name */
extern T0* T71f1353(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.item_code_feature_name */
extern T0* T71f1351(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_64_item_feature_name */
extern T0* T71f1349(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_32_item_feature_name */
extern T0* T71f1347(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_16_item_feature_name */
extern T0* T71f1345(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_8_item_feature_name */
extern T0* T71f1343(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.character_32_item_feature_name */
extern T0* T71f1340(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.character_8_item_feature_name */
extern T0* T71f1338(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.boolean_item_feature_name */
extern T0* T71f1336(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_function_feature_validity */
extern void T1270f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.detachable_separate_formal_parameter_type */
extern T0* T1270f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.fast_item_feature_name */
extern T0* T71f1334(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_procedure_feature_validity */
extern void T1270f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.fast_call_feature_name */
extern T0* T71f1332(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_platform_feature_validity */
extern void T1270f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.wide_character_bytes_feature_name */
extern T0* T71f1330(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.real_bytes_feature_name */
extern T0* T71f1328(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.pointer_bytes_feature_name */
extern T0* T71f1326(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_windows_feature_name */
extern T0* T71f1324(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_vxworks_feature_name */
extern T0* T71f1322(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_vms_feature_name */
extern T0* T71f1320(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_unix_feature_name */
extern T0* T71f1318(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_thread_capable_feature_name */
extern T0* T71f1316(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_scoop_capable_feature_name */
extern T0* T71f1314(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_mac_feature_name */
extern T0* T71f1312(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_dotnet_feature_name */
extern T0* T71f1310(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_64_bits_feature_name */
extern T0* T71f1308(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_bytes_feature_name */
extern T0* T71f1306(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.double_bytes_feature_name */
extern T0* T71f1304(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.character_bytes_feature_name */
extern T0* T71f1302(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.boolean_bytes_feature_name */
extern T0* T71f1300(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.platform_class_name */
extern T0* T71f907(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_runtime_feature_validity */
extern void T1270f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.unmark_object_feature_name */
extern T0* T71f1297(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.unlock_marking_feature_name */
extern T0* T71f1295(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_reference_field_at_feature_name */
extern T0* T71f1294(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_reference_field_feature_name */
extern T0* T71f1293(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_real_64_field_at_feature_name */
extern T0* T71f1291(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_real_64_field_feature_name */
extern T0* T71f1289(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_real_32_field_at_feature_name */
extern T0* T71f1287(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_real_32_field_feature_name */
extern T0* T71f1285(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_pre_ecma_mapping_feature_name */
extern T0* T71f1283(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_pointer_field_at_feature_name */
extern T0* T71f1281(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_pointer_field_feature_name */
extern T0* T71f1279(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_natural_64_field_at_feature_name */
extern T0* T71f1277(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_natural_64_field_feature_name */
extern T0* T71f1275(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_natural_32_field_at_feature_name */
extern T0* T71f1273(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_natural_32_field_feature_name */
extern T0* T71f1271(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_natural_16_field_at_feature_name */
extern T0* T71f1269(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_natural_16_field_feature_name */
extern T0* T71f1267(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_natural_8_field_at_feature_name */
extern T0* T71f1265(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_natural_8_field_feature_name */
extern T0* T71f1263(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_integer_64_field_at_feature_name */
extern T0* T71f1261(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_integer_64_field_feature_name */
extern T0* T71f1259(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_integer_32_field_at_feature_name */
extern T0* T71f1257(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_integer_32_field_feature_name */
extern T0* T71f1255(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_integer_16_field_at_feature_name */
extern T0* T71f1253(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_integer_16_field_feature_name */
extern T0* T71f1251(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_integer_8_field_at_feature_name */
extern T0* T71f1249(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_integer_8_field_feature_name */
extern T0* T71f1247(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_character_32_field_at_feature_name */
extern T0* T71f1245(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_character_32_field_feature_name */
extern T0* T71f1243(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_character_8_field_at_feature_name */
extern T0* T71f1241(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_character_8_field_feature_name */
extern T0* T71f1239(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_boolean_field_at_feature_name */
extern T0* T71f1237(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.set_boolean_field_feature_name */
extern T0* T71f1235(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.mark_object_feature_name */
extern T0* T71f1233(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.lock_marking_feature_name */
extern T0* T71f1231(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.type_id_from_name_feature_name */
extern T0* T71f1229(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.type_conforms_to_feature_name */
extern T0* T71f1227(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.storable_version_of_type_feature_name */
extern T0* T71f1225(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.reference_field_at_offset_feature_name */
extern T0* T71f1224(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.reference_field_at_feature_name */
extern T0* T71f1223(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.reference_field_feature_name */
extern T0* T71f1222(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.real_64_field_at_feature_name */
extern T0* T71f1220(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.real_64_field_feature_name */
extern T0* T71f1218(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.real_32_field_at_feature_name */
extern T0* T71f1216(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.real_32_field_feature_name */
extern T0* T71f1214(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.raw_reference_field_at_offset_feature_name */
extern T0* T71f1212(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.raw_reference_field_at_feature_name */
extern T0* T71f1210(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.pre_ecma_mapping_status_feature_name */
extern T0* T71f1208(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.pointer_field_at_feature_name */
extern T0* T71f1206(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.pointer_field_feature_name */
extern T0* T71f1204(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.persistent_field_count_of_type_feature_name */
extern T0* T71f1202(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.once_objects_feature_name */
extern T0* T71f1200(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.object_size_feature_name */
extern T0* T71f1198(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.new_type_instance_of_feature_name */
extern T0* T71f1197(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.new_tuple_instance_of_feature_name */
extern T0* T71f1196(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.new_special_of_reference_instance_of_feature_name */
extern T0* T71f1195(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.new_instance_of_feature_name */
extern T0* T71f1194(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.natural_64_field_at_feature_name */
extern T0* T71f1192(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.natural_64_field_feature_name */
extern T0* T71f1190(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.natural_32_field_at_feature_name */
extern T0* T71f1188(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.natural_32_field_feature_name */
extern T0* T71f1186(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.natural_16_field_at_feature_name */
extern T0* T71f1184(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.natural_16_field_feature_name */
extern T0* T71f1182(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.natural_8_field_at_feature_name */
extern T0* T71f1180(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.natural_8_field_feature_name */
extern T0* T71f1178(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_tuple_type_feature_name */
extern T0* T71f1176(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_tuple_feature_name */
extern T0* T71f1174(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_special_of_reference_type_feature_name */
extern T0* T71f1172(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_special_of_reference_or_basic_type_feature_name */
extern T0* T71f1170(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_special_of_reference_feature_name */
extern T0* T71f1168(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_special_of_expanded_feature_name */
extern T0* T71f1166(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_special_copy_semantics_item_feature_name */
extern T0* T71f1164(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_special_feature_name */
extern T0* T71f1162(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_object_marked_feature_name */
extern T0* T71f1160(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_field_transient_of_type_feature_name */
extern T0* T71f1158(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_field_expanded_of_type_feature_name */
extern T0* T71f1156(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_expanded_feature_name */
extern T0* T71f973(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_copy_semantics_field_feature_name */
extern T0* T71f1153(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_attached_type_feature_name */
extern T0* T71f1151(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_64_field_at_feature_name */
extern T0* T71f1149(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_64_field_feature_name */
extern T0* T71f1147(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_32_field_at_feature_name */
extern T0* T71f1145(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_32_field_feature_name */
extern T0* T71f1143(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_16_field_at_feature_name */
extern T0* T71f1141(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_16_field_feature_name */
extern T0* T71f1139(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_8_field_at_feature_name */
extern T0* T71f1137(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.integer_8_field_feature_name */
extern T0* T71f1135(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.in_assertion_feature_name */
extern T0* T71f1133(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.generic_parameter_count_feature_name */
extern T0* T71f965(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.generator_of_type_feature_name */
extern T0* T71f1130(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.generating_type_of_type_feature_name */
extern T0* T71f1128(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.field_type_of_type_feature_name */
extern T0* T71f1126(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.field_static_type_of_type_feature_name */
extern T0* T71f1124(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.field_offset_of_type_feature_name */
extern T0* T71f1122(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.field_name_of_type_feature_name */
extern T0* T71f1120(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.field_count_of_type_feature_name */
extern T0* T71f1118(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.eif_gen_param_id_feature_name */
extern T0* T71f1116(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.dynamic_type_at_offset_feature_name */
extern T0* T71f1114(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.dynamic_type_feature_name */
extern T0* T71f1112(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.detachable_type_feature_name */
extern T0* T71f1110(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.compiler_version_feature_name */
extern T0* T71f1108(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.check_assert_feature_name */
extern T0* T71f1106(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.character_32_field_at_feature_name */
extern T0* T71f1104(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.character_32_field_feature_name */
extern T0* T71f1102(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.character_8_field_at_feature_name */
extern T0* T71f1100(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.character_8_field_feature_name */
extern T0* T71f1098(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.boolean_field_at_feature_name */
extern T0* T71f1096(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.boolean_field_feature_name */
extern T0* T71f1094(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.attached_type_feature_name */
extern T0* T71f1092(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.ise_runtime_class_name */
extern T0* T71f906(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_identified_routines_feature_validity */
extern void T1270f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.eif_object_id_free_feature_name */
extern T0* T71f1090(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.eif_object_id_feature_name */
extern T0* T71f1089(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.eif_id_object_feature_name */
extern T0* T71f1088(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.identified_routines_class_name */
extern T0* T71f905(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_exception_manager_feature_validity */
extern void T1270f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.developer_raise_feature_name */
extern T0* T71f1086(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_factory_feature_validity */
extern void T1270f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.exception_manager_feature_name */
extern T0* T71f1083(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.exception_manager_factory_class_name */
extern T0* T71f904(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_feature_validity */
extern void T1270f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.set_is_ignored_feature_name */
extern T0* T71f1080(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.raise_feature_name */
extern T0* T71f1078(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.ignore_feature_name */
extern T0* T71f1076(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.catch_feature_name */
extern T0* T71f1074(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.type_of_code_feature_name */
extern T0* T71f1072(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_raisable_feature_name */
extern T0* T71f1069(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_ignored_feature_name */
extern T0* T71f1067(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_ignorable_feature_name */
extern T0* T71f1065(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_caught_feature_name */
extern T0* T71f1063(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.exception_from_code_feature_name */
extern T0* T71f1061(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_memory_feature_validity */
extern void T1270f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.free_feature_name */
extern T0* T71f1058(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.find_referers_feature_name */
extern T0* T71f1056(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.memory_class_name */
extern T0* T71f903(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_com_failure_feature_validity */
extern void T1270f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.cwin_local_free_feature_name */
extern T0* T71f1053(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.cwin_error_text_feature_name */
extern T0* T71f1051(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.character_size_feature_name */
extern T0* T71f1049(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.ccom_hresult_facility_feature_name */
extern T0* T71f1047(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.ccom_hresult_code_feature_name */
extern T0* T71f1045(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.ccom_hresult_feature_name */
extern T0* T71f1043(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.c_strlen_feature_name */
extern T0* T71f1041(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.com_failure_class_name */
extern T0* T71f902(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_arguments_32_feature_validity */
extern void T1270f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.i_th_argument_string_feature_name */
extern T0* T71f1038(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.i_th_argument_pointer_feature_name */
extern T0* T71f1036(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.argument_count_feature_name */
extern T0* T71f1034(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.arguments_32_class_name */
extern T0* T71f901(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_feature_validity */
extern void T1270f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.to_integer_32_feature_name */
extern T0* T71f1031(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_default_pointer_feature_name */
extern T0* T71f1025(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.hash_code_feature_name */
extern T0* T71f1023(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_ref_feature_validity */
extern void T1270f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.pointer_ref_class_name */
extern T0* T71f900(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_feature_validity */
extern void T1270f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.negated_feature_name */
extern T0* T71f1019(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.implication_feature_name */
extern T0* T71f1017(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.disjuncted_semistrict_feature_name */
extern T0* T71f1015(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.disjuncted_exclusive_feature_name */
extern T0* T71f1013(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.disjuncted_feature_name */
extern T0* T71f1011(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.conjuncted_semistrict_feature_name */
extern T0* T71f1009(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.conjuncted_feature_name */
extern T0* T71f1007(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_ref_feature_validity */
extern void T1270f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.boolean_ref_class_name */
extern T0* T71f899(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_character_n_feature_validity */
extern void T1270f27(GE_context* ac, T0* C, T0* a1, T8 a2);
/* [detachable] ET_TOKEN_CONSTANTS.natural_32_code_feature_name */
extern T0* T71f999(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.code_feature_name */
extern T0* T71f997(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_character_n_ref_feature_validity */
extern void T1270f26(GE_context* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.current_universe */
extern T0* T1270f7(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_special_feature_validity */
extern void T1270f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.set_count_feature_name */
extern T0* T71f993(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.put_feature_name */
extern T0* T71f90(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.make_empty_feature_name */
extern T0* T71f990(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.extend_feature_name */
extern T0* T71f94(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.element_size_feature_name */
extern T0* T71f986(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.base_address_feature_name */
extern T0* T71f982(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.like_current */
extern T0* T71f938(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.aliased_resized_area_feature_name */
extern T0* T71f980(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_type_feature_validity */
extern void T1270f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.type_id_feature_name */
extern T0* T71f977(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.runtime_name_feature_name */
extern T0* T71f975(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_deferred_feature_name */
extern T0* T71f971(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_attached_feature_name */
extern T0* T71f969(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.has_default_feature_name */
extern T0* T71f967(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.generic_parameter_type_feature_name */
extern T0* T71f963(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.default_feature_name */
extern T0* T71f961(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.check_builtin_any_feature_validity */
extern void T1270f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.standard_copy_feature_name */
extern T0* T71f958(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.twin_feature_name */
extern T0* T71f955(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.tagged_out_feature_name */
extern T0* T71f953(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.standard_twin_feature_name */
extern T0* T71f951(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.standard_is_equal_feature_name */
extern T0* T71f949(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.same_type_feature_name */
extern T0* T71f947(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.is_deep_equal_feature_name */
extern T0* T71f944(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.generator_feature_name */
extern T0* T71f942(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.generating_type_feature_name */
extern T0* T71f940(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.deep_twin_feature_name */
extern T0* T71f937(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.conforms_to_feature_name */
extern T0* T71f935(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.string_ */
extern T0* T1270f6(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.process_external_procedure */
extern void T369f96(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_external_procedure_validity */
extern void T369f108(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure */
extern void T69f151(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T69f156(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_procedure_validity */
extern void T69f161(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_reference */
extern void T69f167(GE_context* ac, T0* C, T0* a1);
extern T1 T69f167ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_procedure */
extern void T69f166(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_set_is_ignored */
extern void T69f165(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.argument_type_set */
extern T0* T69f74(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_raise */
extern void T69f164(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_ignore */
extern void T69f163(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_catch */
extern void T69f162(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.is_builtin_unknown */
extern T1 T1442f68(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T69f156p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_external_procedure */
extern void T64f1077(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_procedure */
extern void T64f1120(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_routine */
extern void T64f1150(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [detachable] ET_C_GENERATOR.flush_to_cpp_file */
extern void T64f1163(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_external_dllwin_body */
extern void T64f1162(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_C_GENERATOR.print_external_cpp_body */
extern void T64f1161(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].item */
extern T0* T147f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] ST_SPLITTER.make_with_separators */
extern T0* T1877c9(GE_context* ac, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_c_struct_body */
extern void T64f1160(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_C_GENERATOR.print_external_c_body */
extern void T64f1159(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T1 a7);
/* [detachable] ET_C_GENERATOR.print_external_c_prototype */
extern void T64f1158(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_C_GENERATOR.print_external_builtin_body */
extern void T64f1157(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_procedure_body */
extern void T64f1167(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_tuple_procedure_body */
extern void T64f1205(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_put_reference_body */
extern void T64f1264(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1264ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_put_real_64_body */
extern void T64f1263(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_put_basic_expanded_item_body */
extern void T64f1266(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1266ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_put_real_32_body */
extern void T64f1262(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_put_pointer_body */
extern void T64f1261(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_put_natural_64_body */
extern void T64f1260(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_put_natural_32_body */
extern void T64f1259(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_put_natural_16_body */
extern void T64f1258(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_put_natural_8_body */
extern void T64f1257(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_put_integer_64_body */
extern void T64f1256(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_put_integer_32_body */
extern void T64f1255(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_put_integer_16_body */
extern void T64f1254(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_put_integer_8_body */
extern void T64f1253(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_put_character_32_body */
extern void T64f1252(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_put_character_8_body */
extern void T64f1251(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_put_boolean_body */
extern void T64f1250(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_special_procedure_body */
extern void T64f1204(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_special_set_count_body */
extern void T64f1249(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1249ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_builtin_special_extend_body */
extern void T64f1248(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1248ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_external_builtin_real_n_ref_procedure_body */
extern void T64f1203(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_procedure_procedure_body */
extern void T64f1202(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_pointer_ref_procedure_body */
extern void T64f1201(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_memory_procedure_body */
extern void T64f1200(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_ise_runtime_procedure_body */
extern void T64f1199(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_set_pre_ecma_mapping_body */
extern void T64f1247(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_ise_exception_manager_procedure_body */
extern void T64f1198(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_integer_n_ref_procedure_body */
extern void T64f1197(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_identified_routines_procedure_body */
extern void T64f1196(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_exception_manager_procedure_body */
extern void T64f1195(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_exception_manager_set_is_ignored_body */
extern void T64f1246(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_exception_manager_raise_body */
extern void T64f1245(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_exception_manager_ignore_body */
extern void T64f1244(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_exception_manager_catch_body */
extern void T64f1243(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_com_failure_procedure_body */
extern void T64f1194(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_character_n_ref_procedure_body */
extern void T64f1193(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_boolean_ref_procedure_body */
extern void T64f1192(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_any_procedure_body */
extern void T64f1191(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_function_body */
extern void T64f1166(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_type_function_body */
extern void T64f1190(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_type_generic_parameter_type_body */
extern void T64f1242(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_semicolon_newline */
extern void T64f1208(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_indentation_assign_to_result */
extern void T64f1207(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_external_builtin_tuple_function_body */
extern void T64f1189(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern void T64f1241(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern T0* T64f1241ac1(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T64f1241ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_real_64_item_body */
extern void T64f1240(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_basic_expanded_item_body */
extern void T64f1265(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1265ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_real_32_item_body */
extern void T64f1239(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_pointer_item_body */
extern void T64f1238(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_natural_64_item_body */
extern void T64f1237(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_natural_32_item_body */
extern void T64f1236(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_natural_16_item_body */
extern void T64f1235(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_natural_8_item_body */
extern void T64f1234(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_item_code_body */
extern void T64f1233(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1233ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_integer_64_item_body */
extern void T64f1232(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_integer_32_item_body */
extern void T64f1231(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_integer_16_item_body */
extern void T64f1230(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_integer_8_item_body */
extern void T64f1229(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_character_32_item_body */
extern void T64f1228(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_character_8_item_body */
extern void T64f1227(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_tuple_boolean_item_body */
extern void T64f1226(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_special_function_body */
extern void T64f1188(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_special_aliased_resized_area_body */
extern void T64f1225(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1225ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_external_builtin_real_n_ref_function_body */
extern void T64f1187(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_real_n_function_body */
extern void T64f1186(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_real_n_out_body */
extern void T64f1224(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_pointer_ref_function_body */
extern void T64f1185(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_pointer_function_body */
extern void T64f1184(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_pointer_out_body */
extern void T64f1223(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_platform_function_body */
extern void T64f1183(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_memory_function_body */
extern void T64f1182(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_ise_runtime_function_body */
extern void T64f1181(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_pre_ecma_mapping_status_body */
extern void T64f1222(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_ise_runtime_in_assertion_body */
extern void T64f1221(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_integer_n_ref_function_body */
extern void T64f1180(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_integer_n_function_body */
extern void T64f1179(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_identified_routines_function_body */
extern void T64f1178(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_function_function_body */
extern void T64f1177(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_exception_manager_factory_function_body */
extern void T64f1176(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_exception_manager_factory_exception_manager_body */
extern void T64f1220(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_exception_manager_function_body */
extern void T64f1175(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_exception_manager_type_of_code_body */
extern void T64f1219(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_exception_manager_last_exception_body */
extern void T64f1218(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_exception_manager_is_raisable_body */
extern void T64f1217(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_exception_manager_is_ignored_body */
extern void T64f1216(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_exception_manager_is_ignorable_body */
extern void T64f1215(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_exception_manager_is_caught_body */
extern void T64f1214(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_exception_manager_exception_from_code_body */
extern void T64f1213(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_com_failure_function_body */
extern void T64f1174(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_character_n_ref_function_body */
extern void T64f1173(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_character_n_function_body */
extern void T64f1172(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_boolean_ref_function_body */
extern void T64f1171(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_boolean_function_body */
extern void T64f1170(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_arguments_32_function_body */
extern void T64f1169(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_builtin_any_function_body */
extern void T64f1168(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_any_twin_body */
extern void T64f1212(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1212ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_builtin_any_tagged_out_body */
extern void T64f1211(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1211ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_builtin_any_standard_twin_body */
extern void T64f1210(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1210ot1(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.print_builtin_any_is_deep_equal_body */
extern void T64f1209(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_builtin_any_conforms_to_body */
extern void T64f1206(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.is_function */
extern T1 T1442f67(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_external_c_inline_body */
extern void T64f1156(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_CHARACTER_ROUTINES.as_lower */
extern T2 T1878f1(GE_context* ac, T0* C, T2 a1);
/* [detachable] ET_C_GENERATOR.character_ */
extern T0* T64f507(GE_context* ac, T0* C);
/* [detachable] KL_CHARACTER_ROUTINES.default_create */
extern T0* T1878c2(GE_context* ac);
/* [detachable] UC_UTF8_STRING.has_substring */
extern T1 T862f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] STRING_8.has_substring */
extern T1 T17f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_c_includes */
extern void T64f1155(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.include_header_filename */
extern void T64f1165(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] RX_PCRE_REGULAR_EXPRESSION.captured_substring_count */
extern T6 T82f301(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_C_GENERATOR.print_feature_info_message_call */
extern void T64f1154(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_inline_routine_name */
extern void T64f1153(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T64f1153ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER3.process_like_feature */
extern void T1543f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_feature */
extern void T1542f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER2.process_like_feature */
extern void T1541f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER1.process_like_feature */
extern void T1540f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER3.process_like_feature */
extern void T1283f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_feature */
extern void T1275f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1274f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_like_feature_validity */
extern void T1274f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vtat2b_error */
extern void T50f377(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vtat2b */
extern T0* T742c975(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vtat2b_error */
extern void T34f377(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1274f12(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1274f27(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER2.process_like_feature */
extern void T1269f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER2.process_like_feature */
extern void T1268f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SIGNATURE_CHECKER.process_like_feature */
extern void T1267f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1266f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCHORED_TYPE_CHECKER.add_like_feature_to_sorter */
extern void T1266f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].force_relation */
extern void T1620f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].put_indexed_relation */
extern void T1620f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].force */
extern void T1620f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].put */
extern void T1620f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].put_new */
extern void T1856f36(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].key_storage_put */
extern void T1856f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].item_storage_put */
extern void T1856f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].slots_put */
extern void T1856f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].clashes_put */
extern void T1856f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].slots_item */
extern T6 T1856f20(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].hash_position */
extern T6 T1856f32(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.hash_code */
extern T6 T1453f78(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].clashes_item */
extern T6 T1856f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].resize */
extern void T1856f35(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].clashes_resize */
extern void T1856f49(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].special_integer_ */
extern T0* T1856f23(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].key_storage_resize */
extern void T1856f48(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T1858f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T1857f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].item_storage_resize */
extern void T1856f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].key_storage_item */
extern T0* T1856f31(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].slots_resize */
extern void T1856f44(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].resize */
extern void T1621f15(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].capacity */
extern T6 T1620f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].count */
extern T6 T1620f8(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].index_of */
extern T6 T1620f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].found_item */
extern T6 T1856f28(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].item_storage_item */
extern T6 T1856f30(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].found */
extern T1 T1856f27(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].search */
extern void T1856f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].search_position */
extern void T1856f59(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_feature */
extern void T1265f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER_TYPE_RESOLVER.process_like_feature */
extern void T1264f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER_TYPE_RESOLVER.resolve_like_feature */
extern void T1264f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vtat1a_error */
extern void T50f379(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vtat1a */
extern T0* T742c977(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T50f102(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vtat1a_error */
extern void T34f379(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T34f102(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vtat1b_error */
extern void T50f378(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vtat1b */
extern T0* T742c976(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vtat1b_error */
extern void T34f378(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_IDENTIFIER_TYPE_RESOLVER.error_handler */
extern T0* T1264f6(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER_TYPE_RESOLVER.set_fatal_error */
extern void T1264f19(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.resolve_like_argument */
extern void T1453f92(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.resolve_like_feature */
extern void T1453f91(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.process_like_feature */
extern void T1253f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.process_like_type */
extern void T1253f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.check_like_type_constraint */
extern void T1253f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vggc1a_error */
extern void T50f520(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vggc1a */
extern T0* T742c1109(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vggc1_error */
extern T1 T50f160(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vggc1a_error */
extern void T34f520(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vggc1_error */
extern T1 T34f160(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER1.process_like_feature */
extern void T1252f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER1.process_like_type */
extern void T1252f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER1.check_like_type_validity */
extern void T1252f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vhpr3a_error */
extern void T50f519(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vhpr3a */
extern T0* T742c1108(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T50f159(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vhpr3a_error */
extern void T34f519(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T34f159(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER1.error_handler */
extern T0* T1252f6(GE_context* ac, T0* C);
/* [detachable] ET_PARENT_CHECKER1.set_fatal_error */
extern void T1252f12(GE_context* ac, T0* C);
/* [detachable] ET_TYPE_CHECKER.process_like_feature */
extern void T373f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TYPE_CHECKER.check_like_feature_validity */
extern void T373f33(GE_context* ac, T0* C, T0* a1);
extern T1 T373f33ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_braced_type */
extern void T1543f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER3.check_qualified_like_identifier_validity */
extern void T1543f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_braced_type */
extern void T1542f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_qualified_like_identifier_validity */
extern void T1542f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.set_fatal_error */
extern void T1542f12(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.has_flattening_error */
extern T1 T552f39(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.features_flattened */
extern T1 T552f38(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_braced_type */
extern void T1541f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER2.check_qualified_like_identifier_validity */
extern void T1541f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_braced_type */
extern void T1540f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER1.check_qualified_like_identifier_validity */
extern void T1540f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER3.process_qualified_like_braced_type */
extern void T1283f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_braced_type */
extern void T1275f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_qualified_like_identifier */
extern void T1275f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1274f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T1274f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vtat1c_error */
extern void T50f380(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vtat1c */
extern T0* T742c978(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vtat1c_error */
extern void T34f380(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_QUALIFIED_LIKE_TYPE.resolve_identifier_type */
extern void T1455f87(GE_context* ac, T0* C, T6 a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.resolve_identifier_type */
extern void T1454f91(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].force_last */
extern void T1273f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].resize */
extern void T1273f51(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].clashes_resize */
extern void T1273f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].special_integer_ */
extern T0* T1273f31(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].key_storage_resize */
extern void T1273f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].item_storage_resize */
extern void T1273f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].slots_resize */
extern void T1273f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_CLASS].new_capacity */
extern T6 T1273f30(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.add_adapted_base_classes_to_list */
extern void T1274f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T1274f28ot1(T0* a1, T0** a2);
extern T1 T1274f28ot2(T0* a1, T0** a2);
/* [detachable] ET_NESTED_TYPE_CONTEXT.copy_to_type_context */
extern void T236f64(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.copy_to_type_context */
extern void T72f321(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_braced_type */
extern void T1269f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER2.process_qualified_like_braced_type */
extern void T1268f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SIGNATURE_CHECKER.process_qualified_like_braced_type */
extern void T1267f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SIGNATURE_CHECKER.check_qualified_like_identifier_tuple_actual_parameters_unfolded */
extern void T1267f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SIGNATURE_CHECKER.check_qualified_like_identifier_vtct_validity */
extern void T1267f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1266f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCHORED_TYPE_CHECKER.add_qualified_like_identifier_to_sorter */
extern void T1266f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_braced_type */
extern void T1265f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_qualified_like_identifier */
extern void T1265f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_braced_type */
extern void T1264f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER_TYPE_RESOLVER.resolve_qualified_like_identifier */
extern void T1264f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_braced_type */
extern void T1253f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER1.process_qualified_like_braced_type */
extern void T1252f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T373f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T373f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TYPE_CHECKER.check_adapted_base_classes_validity */
extern void T373f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ADAPTED_BASE_CLASS_CHECKER.set_class_interface_error_only */
extern void T393f12(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_TYPE_CHECKER.report_qualified_anchored_type_supplier */
extern void T373f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_SUPPLIER_BUILDER.report_qualified_anchored_type_supplier */
extern void T1286f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_type */
extern void T1543f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_type */
extern void T1542f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_type */
extern void T1541f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_type */
extern void T1540f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER3.process_qualified_like_type */
extern void T1283f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_type */
extern void T1275f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1274f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_type */
extern void T1269f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER2.process_qualified_like_type */
extern void T1268f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SIGNATURE_CHECKER.process_qualified_like_type */
extern void T1267f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1266f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_type */
extern void T1265f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_type */
extern void T1264f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_type */
extern void T1253f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER1.process_qualified_like_type */
extern void T1252f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TYPE_CHECKER.process_qualified_like_type */
extern void T373f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_precursor_expression */
extern void T1271f52(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.check_precursor_validity */
extern void T1271f89(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdpr3c_error */
extern void T50f553(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdpr3c */
extern T0* T742c1141(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.tokens */
extern T0* T742f809(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T50f116(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vdpr3c_error */
extern void T34f553(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T34f116(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdpr3b_error */
extern void T50f552(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vdpr3b */
extern T0* T742c1140(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_PRECURSOR_INSTRUCTION.position */
extern T0* T1464f8(GE_context* ac, T0* C);
/* [detachable] ET_ERROR_HANDLER.report_vdpr3b_error */
extern void T34f552(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_PRECURSOR_INSTRUCTION.set_parent_type */
extern void T1464f17(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PRECURSOR_EXPRESSION.set_parent_type */
extern void T1467f31(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PRECURSOR_KEYWORD.set_seed */
extern void T920f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdpr3a_error */
extern void T50f551(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vdpr3a */
extern T0* T742c1139(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.report_vdpr3a_error */
extern void T34f551(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdpr2a_error */
extern void T50f550(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vdpr2a */
extern T0* T742c1138(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T50f176(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vdpr2a_error */
extern void T34f550(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T34f176(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.error_handler */
extern T0* T1271f9(GE_context* ac, T0* C);
/* [detachable] ET_PRECURSOR_CHECKER.set_fatal_error */
extern void T1271f93(GE_context* ac, T0* C);
/* [detachable] ET_PRECURSOR_CHECKER.current_universe */
extern T0* T1271f8(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.class_name */
extern T0* T179f97(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_precursor_expression */
extern void T387f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_precursor_expression */
extern void T383f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_precursor_expression */
extern void T369f157(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_precursor_expression_validity */
extern void T369f210(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T369f210ot1(T0* a1, T0** a2);
/* [detachable] ET_FEATURE_CHECKER.check_precursor_query_expression_validity */
extern void T369f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].force_last */
extern void T1285f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].slots_put */
extern void T1285f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].clashes_put */
extern void T1285f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].slots_item */
extern T6 T1285f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].hash_position */
extern T6 T1285f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].resize */
extern void T1285f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].clashes_resize */
extern void T1285f63(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].special_integer_ */
extern T0* T1285f32(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].key_storage_resize */
extern void T1285f62(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].item_storage_resize */
extern void T1285f61(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].key_storage_item */
extern T0* T1285f31(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].slots_resize */
extern void T1285f60(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].new_capacity */
extern T6 T1285f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].item_storage_put */
extern void T1285f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].search_position */
extern void T1285f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_QUERY].key_equality_tester */
extern T0* T1285f30(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.report_precursor_expression */
extern void T369f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vucr0h_error */
extern void T50f445(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vucr0h */
extern T0* T742c1035(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vucr0h_error */
extern void T34f445(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_FEATURE_CHECKER.check_precursor_parenthesis_call_validity */
extern void T369f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T369f264ot1(T0* a1, T0** a2);
extern T1 T369f264ot2(T0* a1, T0** a2);
/* detachable ET_PRECURSOR_INSTRUCTION.set_parenthesis_call */
extern void T1464f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_PRECURSOR_EXPRESSION.set_parenthesis_call */
extern void T1467f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_CLASS_TYPE.is_generic */
extern T1 T70f18(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdpr3d_error */
extern void T50f403(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vdpr3d */
extern T0* T742c993(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vdpr3d_error */
extern void T34f403(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdpr3e_error */
extern void T50f402(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vdpr3e */
extern T0* T742c992(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vdpr3e_error */
extern void T34f402(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdpr1b_error */
extern void T50f401(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vdpr1b */
extern T0* T742c991(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T50f115(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vdpr1b_error */
extern void T34f401(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T34f115(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_expression */
extern void T69f256(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_expression_validity */
extern void T69f319(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_query_expression_validity */
extern void T69f376(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_expression */
extern void T69f432(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_DYNAMIC_PRECURSOR.dynamic_precursor */
extern T0* T297f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_DYNAMIC_FEATURE.dynamic_precursor */
extern T0* T231f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_DYNAMIC_PRECURSOR_LIST.force_last */
extern void T298f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR].force */
extern void T1889f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR].fill_with */
extern void T1888f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR].extend */
extern void T1888f8(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_PRECURSOR_LIST.fixed_array */
extern T0* T298f4(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR].default_create */
extern T0* T1889c3(GE_context* ac);
/* detachable ET_DYNAMIC_PRECURSOR_LIST.resize */
extern void T298f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T1889f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T1888f4(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DYNAMIC_PRECURSOR_LIST.new_capacity */
extern T6 T298f6(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DYNAMIC_PRECURSOR_LIST.capacity */
extern T6 T298f5(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_PRECURSOR_LIST.put_last */
extern void T298f8(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_PRECURSOR_LIST.make_with_capacity */
extern T0* T298c7(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR].make */
extern T0* T1889f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR].make_empty */
extern T0* T1888c5(GE_context* ac, T6 a1);
/* detachable ET_DYNAMIC_PRECURSOR.make */
extern T0* T297c32(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_DYNAMIC_PRECURSOR.make_feature */
extern void T297f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T297f40ot1(T0* a1, T0** a2);
/* detachable ET_DYNAMIC_PRECURSOR.tokens */
extern T0* T297f28(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_PRECURSOR.empty_dynamic_type_sets */
extern T0* T297f27(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_parenthesis_call_validity */
extern void T69f375(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T69f375ot1(T0* a1, T0** a2);
extern T1 T69f375ot2(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.process_precursor_expression */
extern void T64f1078(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_precursor_expression */
extern void T64f1121(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_feature_address */
extern void T1271f76(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_feature_address */
extern void T387f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_feature_address */
extern void T383f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_feature_address */
extern void T369f158(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_feature_address_validity */
extern void T369f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuar4a_error */
extern void T50f409(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vuar4a */
extern T0* T742c999(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T50f119(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vuar4a_error */
extern void T34f409(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T34f119(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.report_function_address */
extern void T369f273(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_attribute_address */
extern void T369f272(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vucr0e_error */
extern void T50f408(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vucr0e */
extern T0* T742c998(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vucr0e_error */
extern void T34f408(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_FEATURE_CHECKER.report_procedure_address */
extern void T369f271(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_pointer_expression */
extern void T369f268(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_typed_pointer_expression */
extern void T369f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_feature_address */
extern void T69f280(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_address_validity */
extern void T69f343(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_function_address */
extern void T69f407(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_DYNAMIC_PRECURSOR.set_address */
extern void T297f41(GE_context* ac, T0* C, T1 a1);
/* detachable ET_DYNAMIC_FEATURE.set_address */
extern void T231f39(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_address */
extern void T69f406(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_address */
extern void T69f405(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_pointer_expression */
extern void T69f378(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_typed_pointer_expression */
extern void T69f377(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_C_GENERATOR.process_feature_address */
extern void T64f1079(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_feature_address */
extern void T64f1122(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1122ot1(T0* a1, T0** a2);
/* detachable ET_DYNAMIC_PRECURSOR.is_attribute */
extern T1 T297f25(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_FEATURE.is_attribute */
extern T1 T231f26(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FEATURE_LIST.is_empty */
extern T1 T219f9(GE_context* ac, T0* C);
/* [detachable] ET_PRECURSOR_CHECKER.process_current_address */
extern void T1271f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_current_address */
extern void T387f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_current_address */
extern void T383f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_current_address */
extern void T369f159(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_current_address_validity */
extern void T369f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vucr0g_error */
extern void T50f412(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vucr0g */
extern T0* T742c1002(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vucr0g_error */
extern void T34f412(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current_address */
extern void T69f257(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_address_validity */
extern void T69f320(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_current_address */
extern void T64f1080(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_current_address */
extern void T64f1123(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1123ot1(T0* a1, T0** a2);
/* [detachable] ET_PRECURSOR_CHECKER.process_result_address */
extern void T1271f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_result_address */
extern void T387f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_result_address */
extern void T383f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_result_address */
extern void T369f160(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_result_address_validity */
extern void T369f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_veen2f_error */
extern void T50f415(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_veen2f */
extern T0* T742c1005(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_veen2f_error */
extern void T34f415(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result_address */
extern void T69f258(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_address_validity */
extern void T69f321(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_result_address */
extern void T64f1081(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_result_address */
extern void T64f1124(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_expression_address */
extern void T1271f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_expression_address */
extern void T387f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_expression_address */
extern void T383f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_expression_address */
extern void T369f161(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_expression_address_validity */
extern void T369f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_expression_address */
extern void T69f259(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_address_validity */
extern void T69f322(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_expression_address */
extern void T64f1082(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_expression_address */
extern void T64f1125(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_infix_expression */
extern void T1271f56(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_infix_expression */
extern void T387f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_expression */
extern void T383f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_infix_expression */
extern void T369f162(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_infix_expression_validity */
extern void T369f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.free_call_info */
extern void T369f276(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].force_last */
extern void T379f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].force */
extern void T699f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].fill_with */
extern void T701f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].extend */
extern void T701f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].resize */
extern void T379f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].aliased_resized_area */
extern T0* T699f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].aliased_resized_area */
extern T0* T701f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].new_capacity */
extern T6 T379f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].extendible */
extern T1 T379f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_CHECKER.new_call_info */
extern T0* T369f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].remove_last */
extern void T379f15(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].keep_head */
extern void T701f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].set_count */
extern void T701f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].move_last_cursors_after */
extern void T379f16(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].set_next_cursor */
extern void T702f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].set_after */
extern void T702f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].last */
extern T0* T379f10(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] TUPLE [detachable ET_QUERY, [attached] ET_CLASS, [attached] ET_NESTED_TYPE_CONTEXT]].is_empty */
extern T1 T379f9(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_expression */
extern void T69f260(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_expression_validity */
extern void T69f323(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_call_info */
extern void T69f380(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_call_info */
extern T0* T69f86(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_infix_expression */
extern void T64f1083(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_infix_expression */
extern void T64f1126(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_manifest_type */
extern void T1271f59(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_type */
extern void T387f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_type */
extern void T383f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_manifest_type */
extern void T369f163(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_manifest_type_validity */
extern void T369f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_manifest_type */
extern void T369f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_type */
extern void T69f263(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_type_validity */
extern void T69f326(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_type */
extern void T69f383(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_C_GENERATOR.process_manifest_type */
extern void T64f1084(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_manifest_type */
extern void T64f1127(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_prefix_expression */
extern void T1271f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_prefix_expression */
extern void T387f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_prefix_expression */
extern void T383f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_prefix_expression */
extern void T369f164(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_prefix_expression_validity */
extern void T369f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_prefix_expression */
extern void T69f264(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_prefix_expression_validity */
extern void T69f327(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_prefix_expression */
extern void T64f1085(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_prefix_expression */
extern void T64f1128(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_old_expression */
extern void T1271f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_old_expression */
extern void T387f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_old_expression */
extern void T383f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_old_expression */
extern void T369f165(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_old_expression_validity */
extern void T369f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vaol1a_error */
extern void T50f417(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vaol1a */
extern T0* T742c1007(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T50f121(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vaol1a_error */
extern void T34f417(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T34f121(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_expression */
extern void T69f265(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_old_expression_validity */
extern void T69f328(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_old_expression */
extern void T64f1086(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_old_expression */
extern void T64f1129(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_old_object_test */
extern void T1271f77(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_old_object_test */
extern void T387f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_old_object_test */
extern void T383f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_old_object_test */
extern void T369f166(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_object_test */
extern void T69f281(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_old_object_test */
extern void T64f1087(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_once_manifest_string */
extern void T1271f79(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_once_manifest_string */
extern void T387f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_once_manifest_string */
extern void T383f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_once_manifest_string */
extern void T369f167(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_once_manifest_string_validity */
extern void T369f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_manifest_string */
extern void T69f283(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_manifest_string_validity */
extern void T69f345(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_once_manifest_string */
extern void T64f1088(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_once_manifest_string */
extern void T64f1130(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].force_last */
extern void T285f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].key_storage_put */
extern void T285f66(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT].force */
extern void T655f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_INLINE_CONSTANT].fill_with */
extern void T653f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_INLINE_CONSTANT].extend */
extern void T653f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].slots_put */
extern void T285f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].clashes_put */
extern void T285f64(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].slots_item */
extern T6 T285f35(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].hash_position */
extern T6 T285f33(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_MANIFEST_STRING.hash_code */
extern T6 T1479f16(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].resize */
extern void T285f63(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].clashes_resize */
extern void T285f70(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].special_integer_ */
extern T0* T285f37(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].key_storage_resize */
extern void T285f69(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T655f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T653f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].item_storage_resize */
extern void T285f68(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].slots_resize */
extern void T285f67(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].new_capacity */
extern T6 T285f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].item_storage_put */
extern void T285f62(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] ET_DYNAMIC_PRIMARY_TYPE, [attached] ET_INLINE_CONSTANT].search_position */
extern void T285f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_do_function_inline_agent */
extern void T1271f69(GE_context* ac, T0* C, T0* a1);
extern T1 T1271f69ot1(T0* a1, T0** a2);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T387f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T383f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_do_function_inline_agent */
extern void T369f168(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_do_function_inline_agent_validity */
extern void T369f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.check_query_inline_agent_validity */
extern void T369f285(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_query_inline_agent */
extern void T369f341(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].last */
extern T0* T375f9(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].is_empty */
extern T1 T375f8(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vevi0d_error */
extern void T50f426(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vevi0d */
extern T0* T742c1016(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vevi0d_error */
extern void T34f426(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_inline_agent_locals_validity */
extern void T369f284(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_inline_agent_local_supplier */
extern void T369f338(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_SUPPLIER_BUILDER.report_inline_agent_local_supplier */
extern void T1286f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.report_inline_agent_local_variable_declaration */
extern void T369f337(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vpir1h_error */
extern void T50f460(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vpir1h */
extern T0* T742c1050(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T50f132(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vpir1h_error */
extern void T34f460(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T34f132(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vpir1f_error */
extern void T50f459(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vpir1f */
extern T0* T742c1049(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vpir1f_error */
extern void T34f459(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vpir1d_error */
extern void T50f458(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vpir1d */
extern T0* T742c1048(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vpir1d_error */
extern void T34f458(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vpir1c_error */
extern void T50f457(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vpir1c */
extern T0* T742c1047(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vpir1c_error */
extern void T34f457(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vrlv1b_error */
extern void T50f456(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vrlv1b */
extern T0* T742c1046(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T50f134(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vrlv1b_error */
extern void T34f456(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T34f134(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vrlv2b_error */
extern void T50f455(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vrlv2b */
extern T0* T742c1045(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T50f133(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vrlv2b_error */
extern void T34f455(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T34f133(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vred0d_error */
extern void T50f454(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vred0d */
extern T0* T742c1044(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.report_vred0d_error */
extern void T34f454(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FEATURE_CHECKER.check_inline_agent_across_components_validity */
extern void T369f283(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.check_inline_agent_object_tests_validity */
extern void T369f282(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuot3b_error */
extern void T50f453(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vuot3b */
extern T0* T742c1043(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vuot3b_error */
extern void T34f453(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.report_inline_agent_result_supplier */
extern void T369f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_SUPPLIER_BUILDER.report_inline_agent_result_supplier */
extern void T1286f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.report_inline_agent_result_declaration */
extern void T369f280(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_inline_agent_formal_arguments_validity */
extern void T369f279(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_inline_agent_argument_supplier */
extern void T369f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_SUPPLIER_BUILDER.report_inline_agent_argument_supplier */
extern void T1286f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.report_inline_agent_formal_argument_declaration */
extern void T369f335(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vpir1g_error */
extern void T50f452(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vpir1g */
extern T0* T742c1042(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vpir1g_error */
extern void T34f452(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vpir1e_error */
extern void T50f451(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vpir1e */
extern T0* T742c1041(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vpir1e_error */
extern void T34f451(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vpir1b_error */
extern void T50f450(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vpir1b */
extern T0* T742c1040(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vpir1b_error */
extern void T34f450(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vpir1a_error */
extern void T50f449(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vpir1a */
extern T0* T742c1039(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vpir1a_error */
extern void T34f449(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vrfa0b_error */
extern void T50f448(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vrfa0b */
extern T0* T742c1038(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.report_vrfa0b_error */
extern void T34f448(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vred0c_error */
extern void T50f447(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vred0c */
extern T0* T742c1037(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.report_vred0c_error */
extern void T34f447(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vucr0i_error */
extern void T50f425(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vucr0i */
extern T0* T742c1015(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vucr0i_error */
extern void T34f425(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ACROSS_CURSOR_SCOPE.hide_across_components */
extern void T385f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ACROSS_CURSOR_SCOPE.count */
extern T6 T385f4(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST_SCOPE.hide_object_tests */
extern void T382f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function_inline_agent */
extern void T69f273(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_inline_agent_validity */
extern void T69f336(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_inline_agent_validity */
extern void T69f399(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_query_inline_agent */
extern void T69f451(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent */
extern void T69f471(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T69f471ot1(T0* a1, T0** a2);
extern T1 T69f471ot2(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_agent_result_dynamic_types */
extern void T69f479(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_locals_validity */
extern void T69f398(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_supplier */
extern void T69f448(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_variable_declaration */
extern void T69f447(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_across_components_validity */
extern void T69f397(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_object_tests_validity */
extern void T69f396(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_supplier */
extern void T69f395(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_declaration */
extern void T69f394(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_formal_arguments_validity */
extern void T69f393(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_argument_supplier */
extern void T69f446(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_formal_argument_declaration */
extern void T69f445(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_do_function_inline_agent */
extern void T64f1089(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_do_function_inline_agent */
extern void T64f1132(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_do_function_inline_agent_body_declaration */
extern void T64f1131(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_internal_routine_inline_agent_body_declaration */
extern void T64f1151(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_agent_trace_message_call */
extern void T64f1164(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [detachable] ET_PRECURSOR_CHECKER.process_once_function_inline_agent */
extern void T1271f70(GE_context* ac, T0* C, T0* a1);
extern T1 T1271f70ot1(T0* a1, T0** a2);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T387f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T383f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_once_function_inline_agent */
extern void T369f169(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_once_function_inline_agent_validity */
extern void T369f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vpir3a_error */
extern void T50f427(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vpir3a */
extern T0* T742c1017(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T50f124(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vpir3a_error */
extern void T34f427(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T34f124(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.first_indexing */
extern T0* T1481f30(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function_inline_agent */
extern void T69f274(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_inline_agent_validity */
extern void T69f337(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_once_function_inline_agent */
extern void T64f1090(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_once_function_inline_agent */
extern void T64f1134(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.is_once_per_object */
extern T1 T1481f23(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.standard_once_keys */
extern T0* T1481f29(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_once_function_inline_agent_body_declaration */
extern void T64f1133(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_external_function_inline_agent */
extern void T1271f71(GE_context* ac, T0* C, T0* a1);
extern T1 T1271f71ot1(T0* a1, T0** a2);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T387f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T383f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_external_function_inline_agent */
extern void T369f170(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_external_function_inline_agent_validity */
extern void T369f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vpir3b_error */
extern void T50f428(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vpir3b */
extern T0* T742c1018(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_vpir3b_error */
extern void T34f428(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function_inline_agent */
extern void T69f275(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_inline_agent_validity */
extern void T69f338(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_external_function_inline_agent */
extern void T64f1091(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_function_inline_agent */
extern void T64f1136(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_function_inline_agent_body_declaration */
extern void T64f1135(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_do_procedure_inline_agent */
extern void T1271f72(GE_context* ac, T0* C, T0* a1);
extern T1 T1271f72ot1(T0* a1, T0** a2);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T387f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T383f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_do_procedure_inline_agent */
extern void T369f171(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_do_procedure_inline_agent_validity */
extern void T369f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.check_procedure_inline_agent_validity */
extern void T369f286(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_procedure_inline_agent */
extern void T369f342(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure_inline_agent */
extern void T69f276(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_inline_agent_validity */
extern void T69f339(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_procedure_inline_agent_validity */
extern void T69f400(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_inline_agent */
extern void T69f452(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_C_GENERATOR.process_do_procedure_inline_agent */
extern void T64f1092(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_do_procedure_inline_agent */
extern void T64f1138(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_do_procedure_inline_agent_body_declaration */
extern void T64f1137(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_once_procedure_inline_agent */
extern void T1271f73(GE_context* ac, T0* C, T0* a1);
extern T1 T1271f73ot1(T0* a1, T0** a2);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T387f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T383f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_once_procedure_inline_agent */
extern void T369f172(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_once_procedure_inline_agent_validity */
extern void T369f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.first_indexing */
extern T0* T1484f29(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure_inline_agent */
extern void T69f277(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_inline_agent_validity */
extern void T69f340(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_once_procedure_inline_agent */
extern void T64f1093(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_once_procedure_inline_agent */
extern void T64f1140(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.is_once_per_object */
extern T1 T1484f21(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.standard_once_keys */
extern T0* T1484f28(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.print_once_procedure_inline_agent_body_declaration */
extern void T64f1139(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_external_procedure_inline_agent */
extern void T1271f74(GE_context* ac, T0* C, T0* a1);
extern T1 T1271f74ot1(T0* a1, T0** a2);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T387f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T383f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_external_procedure_inline_agent */
extern void T369f173(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_external_procedure_inline_agent_validity */
extern void T369f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure_inline_agent */
extern void T69f278(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_inline_agent_validity */
extern void T69f341(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_external_procedure_inline_agent */
extern void T64f1094(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_procedure_inline_agent */
extern void T64f1142(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_procedure_inline_agent_body_declaration */
extern void T64f1141(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER3.process_class_type */
extern void T1543f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER3.check_class_type_validity */
extern void T1543f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER3.set_fatal_error */
extern void T1543f6(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class_type */
extern void T1542f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_actual_parameters_validity */
extern void T1542f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER2.process_class_type */
extern void T1541f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER2.check_class_type_validity */
extern void T1541f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER2.set_fatal_error */
extern void T1541f14(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.has_ancestors_error */
extern T1 T552f46(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.ancestors_built */
extern T1 T552f45(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER1.process_class_type */
extern void T1540f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER1.check_class_type_validity */
extern void T1540f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS.has_syntax_error */
extern T1 T552f44(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.is_parsed */
extern T1 T552f43(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER1.set_fatal_error */
extern void T1540f6(GE_context* ac, T0* C);
/* [detachable] ET_MASTER_CLASS.is_preparsed */
extern T1 T552f42(GE_context* ac, T0* C);
/* [detachable] ET_PARENT_CHECKER3.process_class_type */
extern void T1283f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER3.check_class_type_validity */
extern void T1283f9(GE_context* ac, T0* C, T0* a1);
extern T1 T1283f9ot1(T0* a1, T0** a2);
extern T1 T1283f9ot2(T0* a1, T0** a2);
/* [detachable] ET_PARENT_CHECKER3.error_handler */
extern T0* T1283f5(GE_context* ac, T0* C);
/* [detachable] ET_PARENT_CHECKER3.set_fatal_error */
extern void T1283f10(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class_type */
extern void T1275f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_class_type */
extern void T1275f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_2 */
extern void T70f132(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T1880c19(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.make */
extern T0* T1881c22(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [detachable] ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_1 */
extern void T70f131(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.position */
extern T0* T1881f15(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.null_position */
extern T0* T71f794(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.tokens */
extern T0* T1881f19(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.current_universe */
extern T0* T1275f5(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1274f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_actual_parameters_validity */
extern void T1274f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER2.process_class_type */
extern void T1269f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER2.check_class_type_constraint */
extern void T1269f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vtcg3a_error */
extern void T50f386(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vtcg3a */
extern T0* T742c984(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T50f107(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vtcg3a_error */
extern void T34f386(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T34f107(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER2.error_handler */
extern T0* T1269f7(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.resolve_unfolded_tuple_actual_parameters_2 */
extern void T72f320(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER2.set_fatal_error */
extern void T1269f14(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.resolve_unfolded_tuple_actual_parameters_1 */
extern void T72f319(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER2.current_universe */
extern T0* T1269f6(GE_context* ac, T0* C);
/* [detachable] ET_PARENT_CHECKER2.process_class_type */
extern void T1268f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER2.check_class_type_validity */
extern void T1268f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER2.error_handler */
extern T0* T1268f8(GE_context* ac, T0* C);
/* [detachable] ET_PARENT_CHECKER2.current_system */
extern T0* T1268f7(GE_context* ac, T0* C);
/* [detachable] ET_PARENT_CHECKER2.set_fatal_error */
extern void T1268f13(GE_context* ac, T0* C);
/* [detachable] ET_PARENT_CHECKER2.current_universe */
extern T0* T1268f6(GE_context* ac, T0* C);
/* [detachable] ET_SIGNATURE_CHECKER.process_class_type */
extern void T1267f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SIGNATURE_CHECKER.check_class_type_tuple_actual_parameters_unfolded */
extern void T1267f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SIGNATURE_CHECKER.check_class_type_vtct_validity */
extern void T1267f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1266f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCHORED_TYPE_CHECKER.add_actual_parameters_to_sorter */
extern void T1266f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class_type */
extern void T1265f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_class_type */
extern void T1265f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.current_universe */
extern T0* T1265f5(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER_TYPE_RESOLVER.process_class_type */
extern void T1264f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER_TYPE_RESOLVER.resolve_actual_parameters */
extern void T1264f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER_TYPE_RESOLVER.reset_fatal_error */
extern void T1264f21(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.process_class_type */
extern void T1253f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.check_class_type_constraint */
extern void T1253f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.add_base_type_dependency */
extern void T1253f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvtcg5a_error */
extern void T50f385(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_gvtcg5a */
extern T0* T742c983(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T50f106(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvtcg5a_error */
extern void T34f385(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T34f106(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.is_reference */
extern T1 T1427f32(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER.is_reference */
extern T1 T852f33(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvtcg5b_error */
extern void T50f384(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_gvtcg5b */
extern T0* T742c982(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.report_gvtcg5b_error */
extern void T34f384(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.is_expanded */
extern T1 T1427f29(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER.is_expanded */
extern T1 T852f30(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vtug2a_error */
extern void T50f383(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vtug2a */
extern T0* T742c981(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T50f105(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vtug2a_error */
extern void T34f383(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T34f105(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vtug1a_error */
extern void T50f382(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vtug1a */
extern T0* T742c980(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T50f104(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vtug1a_error */
extern void T34f382(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T34f104(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER1.process_class_type */
extern void T1252f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER1.check_class_type_validity */
extern void T1252f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_PARENT_CHECKER1.current_universe */
extern T0* T1252f7(GE_context* ac, T0* C);
/* [detachable] ET_TYPE_CHECKER.process_class_type */
extern void T373f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TYPE_CHECKER.check_class_type_validity */
extern void T373f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TYPE_CHECKER.reset_fatal_error */
extern void T373f40(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_TYPE_CHECKER.current_universe */
extern T0* T373f20(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter_type */
extern void T1543f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter_type */
extern void T1542f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter_type */
extern void T1541f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter_type */
extern void T1540f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER3.process_formal_parameter_type */
extern void T1283f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter_type */
extern void T1275f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1274f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter_type */
extern void T1269f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER2.process_formal_parameter_type */
extern void T1268f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SIGNATURE_CHECKER.process_formal_parameter_type */
extern void T1267f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1266f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter_type */
extern void T1265f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter_type */
extern void T1264f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter_type */
extern void T1253f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameter_type_constraint */
extern void T1253f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_PARENT_CHECKER1.process_formal_parameter_type */
extern void T1252f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TYPE_CHECKER.process_formal_parameter_type */
extern void T373f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_external_function */
extern void T1271f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.process_external_function */
extern void T1270f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_external_function */
extern void T369f97(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_external_function_validity */
extern void T369f109(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function */
extern void T69f169(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T69f174(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_warning_message */
extern void T50f394(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_warning_message */
extern void T34f394(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_string_type_alive */
extern void T69f180(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.result_type_set */
extern T0* T69f76(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_function_validity */
extern void T69f179(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_generic_parameter_type */
extern void T69f207(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_default */
extern void T69f206(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_reference_item */
extern void T69f205(GE_context* ac, T0* C, T0* a1);
extern T1 T69f205ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_item */
extern void T69f204(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_type_conforms_to */
extern void T69f203(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SYSTEM.set_ise_runtime_type_conforms_to_feature */
extern void T60f108(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_storable_version_of_type */
extern void T69f202(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field_at_offset */
extern void T69f201(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field_at */
extern void T69f200(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field */
extern void T69f199(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_type_instance_of */
extern void T69f198(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_tuple_instance_of */
extern void T69f197(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_special_of_reference_instance_of */
extern void T69f196(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_instance_of */
extern void T69f195(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_object_id */
extern void T69f194(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_id_object */
extern void T69f193(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function_item */
extern void T69f192(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_factory_exception_manager */
extern void T69f191(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_type_of_code */
extern void T69f190(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_last_exception */
extern void T69f189(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_raisable */
extern void T69f188(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignored */
extern void T69f187(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignorable */
extern void T69f186(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_caught */
extern void T69f185(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_exception_from_code */
extern void T69f184(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function */
extern void T69f183(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_twin */
extern void T69f182(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.is_builtin_unknown */
extern T1 T246f78(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T69f174p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_external_function */
extern void T64f1267(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_external_function */
extern void T64f1282(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER3.process_tuple_type */
extern void T1543f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER3.check_tuple_type_validity */
extern void T1543f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_tuple_type */
extern void T1542f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER2.process_tuple_type */
extern void T1541f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER2.check_tuple_type_validity */
extern void T1541f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER1.process_tuple_type */
extern void T1540f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER1.check_tuple_type_validity */
extern void T1540f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER3.process_tuple_type */
extern void T1283f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER3.check_tuple_type_validity */
extern void T1283f19(GE_context* ac, T0* C, T0* a1);
extern T1 T1283f19ot1(T0* a1, T0** a2);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_tuple_type */
extern void T1275f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_tuple_type */
extern void T1275f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1274f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER2.process_tuple_type */
extern void T1269f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER2.check_tuple_type_constraint */
extern void T1269f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER2.process_tuple_type */
extern void T1268f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER2.check_tuple_type_validity */
extern void T1268f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SIGNATURE_CHECKER.process_tuple_type */
extern void T1267f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SIGNATURE_CHECKER.check_tuple_type_tuple_actual_parameters_unfolded */
extern void T1267f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SIGNATURE_CHECKER.check_tuple_type_vtct_validity */
extern void T1267f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1266f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_tuple_type */
extern void T1265f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_tuple_type */
extern void T1265f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER_TYPE_RESOLVER.process_tuple_type */
extern void T1264f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.process_tuple_type */
extern void T1253f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.check_tuple_type_constraint */
extern void T1253f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_PARENT_CHECKER1.process_tuple_type */
extern void T1252f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER1.check_tuple_type_validity */
extern void T1252f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvhpr5a_error */
extern void T50f518(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_gvhpr5a */
extern T0* T742c1107(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T50f158(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvhpr5a_error */
extern void T34f518(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T34f158(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TYPE_CHECKER.process_tuple_type */
extern void T373f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TYPE_CHECKER.check_tuple_type_validity */
extern void T373f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_qualified_call_instruction */
extern void T1271f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_qualified_call_instruction */
extern void T369f381(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_instruction */
extern void T69f218(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_qualified_call_instruction */
extern void T64f1268(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_unqualified_call_expression */
extern void T1271f75(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T387f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T383f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_unqualified_call_expression */
extern void T369f188(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_unqualified_call_expression_validity */
extern void T369f240(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T369f240ot1(T0* a1, T0** a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vuex1a_error */
extern void T50f435(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vuex1a */
extern T0* T742c1025(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T50f126(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vuex1a_error */
extern void T34f435(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T34f126(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vkcn2c_error */
extern void T50f434(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vkcn2c */
extern T0* T742c1024(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vkcn2c_error */
extern void T34f434(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_expression_validity */
extern void T369f305(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvuao0c_error */
extern void T50f475(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvuao0c */
extern T0* T742c1065(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T50f139(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvuao0c_error */
extern void T34f475(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T34f139(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvuao0a_error */
extern void T50f474(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvuao0a */
extern T0* T742c1064(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_gvuao0a_error */
extern void T34f474(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvuao0b_error */
extern void T50f473(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvuao0b */
extern T0* T742c1063(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_gvuao0b_error */
extern void T34f473(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_object_test_local_parenthesis_call_validity */
extern void T369f356(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_identifier_parenthesis_call_validity */
extern void T369f376(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T369f376ot1(T0* a1, T0** a2);
extern T1 T369f376ot2(T0* a1, T0** a2);
/* [detachable] ET_FEATURE_CHECKER.check_unqualified_across_cursor_call_expression_validity */
extern void T369f304(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvuac0c_error */
extern void T50f472(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvuac0c */
extern T0* T742c1062(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T50f138(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvuac0c_error */
extern void T34f472(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T34f138(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvuac0a_error */
extern void T50f471(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvuac0a */
extern T0* T742c1061(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_gvuac0a_error */
extern void T34f471(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvuac0b_error */
extern void T50f470(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvuac0b */
extern T0* T742c1060(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_gvuac0b_error */
extern void T34f470(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_across_cursor_parenthesis_call_validity */
extern void T369f355(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_unqualified_local_variable_call_expression_validity */
extern void T369f303(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvual0a_error */
extern void T50f469(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvual0a */
extern T0* T742c1059(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvual_error */
extern T1 T50f137(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvual0a_error */
extern void T34f469(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_gvual_error */
extern T1 T34f137(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvual0b_error */
extern void T50f468(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvual0b */
extern T0* T742c1058(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_gvual0b_error */
extern void T34f468(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_local_variable_parenthesis_call_validity */
extern void T369f354(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_expression_validity */
extern void T369f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvuaa0a_error */
extern void T50f467(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvuaa0a */
extern T0* T742c1057(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T50f136(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvuaa0a_error */
extern void T34f467(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T34f136(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvuaa0b_error */
extern void T50f466(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvuaa0b */
extern T0* T742c1056(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_gvuaa0b_error */
extern void T34f466(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_formal_argument_parenthesis_call_validity */
extern void T369f353(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_expression */
extern void T69f279(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_expression_validity */
extern void T69f342(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T69f342ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_expression_validity */
extern void T69f404(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_parenthesis_call_validity */
extern void T69f456(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_identifier_parenthesis_call_validity */
extern void T69f472(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T69f472ot1(T0* a1, T0** a2);
extern T1 T69f472ot2(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_across_cursor_call_expression_validity */
extern void T69f403(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_cursor_parenthesis_call_validity */
extern void T69f455(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_expression_validity */
extern void T69f402(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_parenthesis_call_validity */
extern void T69f454(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_expression_validity */
extern void T69f401(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_parenthesis_call_validity */
extern void T69f453(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_C_GENERATOR.process_unqualified_call_expression */
extern void T64f1269(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_unqualified_call_expression */
extern void T64f1283(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1283ot1(T0* a1, T0** a2);
extern T1 T64f1283ot2(T0* a1, T0** a2);
extern T1 T64f1283ot3(T0* a1, T0** a2);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T278f15(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_PRECURSOR.is_constant_attribute */
extern T1 T297f29(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_FEATURE.is_constant_attribute */
extern T1 T231f27(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].is_empty */
extern T1 T262f11(GE_context* ac, T0* C);
/* [detachable] ET_PRECURSOR_CHECKER.process_object_test */
extern void T1271f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_object_test */
extern void T387f49(GE_context* ac, T0* C, T0* a1);
extern T1 T387f49ot1(T0* a1);
extern T1 T387f49ot2(T0* a1, T0** a2);
/* [detachable] ET_ATTACHMENT_SCOPE.add_name */
extern void T386f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE.add_attribute */
extern void T386f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].force_last */
extern void T719f79(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ATTACHMENT_SCOPE.add_formal_argument */
extern void T386f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE.add_local_variable */
extern void T386f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE.add_result */
extern void T386f14(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_object_test */
extern void T383f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_object_test */
extern void T369f184(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_object_test_validity */
extern void T369f236(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_object_test */
extern void T369f297(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.report_object_test_type */
extern void T369f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_test */
extern void T69f266(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_validity */
extern void T69f329(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test */
extern void T69f385(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_type */
extern void T69f384(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_C_GENERATOR.process_object_test */
extern void T64f1270(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_object_equality_expression */
extern void T1271f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_object_equality_expression */
extern void T387f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_object_equality_expression */
extern void T383f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_object_equality_expression */
extern void T369f183(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_object_equality_expression_validity */
extern void T369f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_object_equality_expression */
extern void T369f295(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vweq0b_error */
extern void T50f433(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vweq0b */
extern T0* T742c1023(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_BRACKET_SYMBOL.text */
extern T0* T602f69(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.text */
extern T0* T342f40(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vweq_error */
extern T1 T50f125(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vweq0b_error */
extern void T34f433(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.reportable_vweq_error */
extern T1 T34f125(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.set_left */
extern void T308f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.set_right */
extern void T308f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.name */
extern T0* T308f15(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.twin */
extern T0* T179f92(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.copy */
extern void T179f126(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.tokens */
extern T0* T308f18(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_equality_expression */
extern void T69f262(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_equality_expression_validity */
extern void T69f325(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_equality_expression */
extern void T69f382(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_object_equality_expression_target_dynamic_types */
extern void T69f435(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T1968c6(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_C_GENERATOR.process_object_equality_expression */
extern void T64f1271(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_equality_expression */
extern void T1271f57(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_equality_expression */
extern void T387f47(GE_context* ac, T0* C, T0* a1);
extern T1 T387f47ot1(T0* a1);
extern T1 T387f47ot2(T0* a1);
extern T1 T387f47ot3(T0* a1, T0** a2);
extern T1 T387f47ot4(T0* a1);
extern T1 T387f47ot5(T0* a1);
extern T1 T387f47ot6(T0* a1, T0** a2);
/* [detachable] ET_BRACKET_SYMBOL.is_equal_symbol */
extern T1 T602f46(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_equal_symbol */
extern T1 T342f37(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_equality_expression */
extern void T383f52(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_equality_expression */
extern void T369f182(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_equality_expression_validity */
extern void T369f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_equality_expression */
extern void T369f294(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vweq0a_error */
extern void T50f432(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vweq0a */
extern T0* T742c1022(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.report_vweq0a_error */
extern void T34f432(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_EQUALITY_EXPRESSION.set_left */
extern void T309f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EQUALITY_EXPRESSION.set_right */
extern void T309f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_equality_expression */
extern void T69f261(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_equality_expression_validity */
extern void T69f324(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_equality_expression */
extern void T69f381(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_equality_expression_target_dynamic_types */
extern void T69f434(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_EQUALITY_EXPRESSION.make */
extern T0* T1967c6(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_C_GENERATOR.process_equality_expression */
extern void T64f1272(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_create_expression */
extern void T1271f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_create_expression */
extern void T387f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_create_expression */
extern void T383f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_create_expression */
extern void T369f179(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_create_expression_validity */
extern void T369f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.check_creation_expression_validity */
extern void T369f290(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgcc6b_error */
extern void T50f461(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vgcc6b */
extern T0* T742c1051(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vgcc6b_error */
extern void T34f461(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_FEATURE_CHECKER.check_dotnet_creation_procedure_call_expression_validity */
extern void T369f344(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* [detachable] ET_FEATURE_CHECKER.check_creation_procedure_call_expression_validity */
extern void T369f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T0* a6);
extern T1 T369f343ot1(T0* a1, T0** a2);
extern T1 T369f343ot2(T0* a1, T0** a2);
/* [detachable] ET_FEATURE_CHECKER.check_creation_procedure_call_validity */
extern void T369f368(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgcc6c_error */
extern void T50f507(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vgcc6c */
extern T0* T742c1097(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.report_vgcc6c_error */
extern void T34f507(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NESTED_TYPE_CONTEXT.first */
extern T0* T236f47(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.check_formal_creation_procedure_call_validity */
extern void T369f367(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_FEATURE_CHECKER.check_formal_parameter_creation_vape_validity */
extern void T369f379(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vape2b_error */
extern void T50f508(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_VALIDITY_ERROR.make_vape2b */
extern T0* T742c1098(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_ERROR_HANDLER.report_vape2b_error */
extern void T34f508(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [detachable] ET_CLIENT.reset */
extern void T391f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgcc8a_error */
extern void T50f506(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_VALIDITY_ERROR.make_vgcc8a */
extern T0* T742c1096(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T50f154(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vgcc8a_error */
extern void T34f506(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T34f154(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_no_creation_procedure_call_validity */
extern void T369f366(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgcc1a_error */
extern void T50f505(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vgcc1a */
extern T0* T742c1095(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T50f153(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vgcc1a_error */
extern void T34f505(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T34f153(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgcc5a_error */
extern void T50f504(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vgcc5a */
extern T0* T742c1094(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T50f152(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vgcc5a_error */
extern void T34f504(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T34f152(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_creation_type_validity */
extern void T369f365(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CONVERT_FROM_EXPRESSION.type_position */
extern T0* T1972f20(GE_context* ac, T0* C);
/* [detachable] ET_CREATE_EXPRESSION.type_position */
extern T0* T319f22(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.report_create_supplier */
extern void T369f364(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_SUPPLIER_BUILDER.report_create_supplier */
extern void T1286f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_AST_NULL_LEAF.column */
extern T6 T2018f3(GE_context* ac, T0* C);
/* [detachable] ET_AST_NULL_LEAF.line */
extern T6 T2018f2(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_FROM_EXPRESSION.last_position */
extern T0* T1972f19(GE_context* ac, T0* C);
/* [detachable] ET_CREATE_EXPRESSION.last_position */
extern T0* T319f21(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_FROM_EXPRESSION.creation_call */
extern T0* T1972f18(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_expression */
extern void T69f252(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_expression_validity */
extern void T69f315(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_expression_validity */
extern void T69f367(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_dotnet_creation_procedure_call_expression_validity */
extern void T69f426(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_procedure_call_expression_validity */
extern void T69f425(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T0* a6);
extern T1 T69f425ot1(T0* a1, T0** a2);
extern T1 T69f425ot2(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_procedure_call_validity */
extern void T69f464(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_creation_procedure_call_validity */
extern void T69f463(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_parameter_creation_vape_validity */
extern void T69f474(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_no_creation_procedure_call_validity */
extern void T69f462(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_type_validity */
extern void T69f461(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_create_supplier */
extern void T69f460(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_C_GENERATOR.process_create_expression */
extern void T64f1273(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_create_expression */
extern void T64f1284(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_extended_attribute */
extern void T1271f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.process_extended_attribute */
extern void T1270f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_extended_attribute */
extern void T369f98(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_extended_attribute_validity */
extern void T369f110(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vucr0a_error */
extern void T50f365(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vucr0a */
extern T0* T742c963(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_vucr0a_error */
extern void T34f365(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vevi0e_error */
extern void T50f364(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vevi0e */
extern T0* T742c962(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vevi0e_error */
extern void T34f364(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_COMPOUND.has_non_null_instruction */
extern T1 T329f8(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_extended_attribute */
extern void T69f170(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_extended_attribute_validity */
extern void T69f175(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_extended_attribute */
extern void T64f1274(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_extended_attribute */
extern void T64f1285(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_attribute */
extern void T64f1289(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_attribute_wrapper */
extern void T64f1292(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.set_name */
extern void T278f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_constant_attribute */
extern void T1271f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.process_constant_attribute */
extern void T1270f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_constant_attribute */
extern void T369f99(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_constant_attribute_validity */
extern void T369f111(GE_context* ac, T0* C, T0* a1);
extern T1 T369f111ot1(T0* a1, T0** a2);
extern T1 T369f111ot2(T0* a1, T0** a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vqmc5a_error */
extern void T50f371(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vqmc5a */
extern T0* T742c969(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T50f97(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vqmc5a_error */
extern void T34f371(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T34f97(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vqmc4a_error */
extern void T50f370(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vqmc4a */
extern T0* T742c968(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T50f96(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vqmc4a_error */
extern void T34f370(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T34f96(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vqmc3a_error */
extern void T50f369(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vqmc3a */
extern T0* T742c967(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T50f95(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vqmc3a_error */
extern void T34f369(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T34f95(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vqmc3b_error */
extern void T50f368(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vqmc3b */
extern T0* T742c966(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vqmc3b_error */
extern void T34f368(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vqmc2a_error */
extern void T50f367(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vqmc2a */
extern T0* T742c965(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T50f94(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vqmc2a_error */
extern void T34f367(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T34f94(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vqmc1a_error */
extern void T50f366(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vqmc1a */
extern T0* T742c964(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T50f93(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vqmc1a_error */
extern void T34f366(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T34f93(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_constant_attribute */
extern void T69f171(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_constant_attribute_validity */
extern void T69f176(GE_context* ac, T0* C, T0* a1);
extern T1 T69f176ot1(T0* a1, T0** a2);
extern T1 T69f176ot2(T0* a1, T0** a2);
/* [detachable] ET_C_GENERATOR.process_constant_attribute */
extern void T64f1275(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_constant_attribute */
extern void T64f1286(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_unique_attribute */
extern void T1271f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.process_unique_attribute */
extern void T1270f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_unique_attribute */
extern void T369f100(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_unique_attribute_validity */
extern void T369f112(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vqui0a_error */
extern void T50f372(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vqui0a */
extern T0* T742c970(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vqui_error */
extern T1 T50f98(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vqui0a_error */
extern void T34f372(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vqui_error */
extern T1 T34f98(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unique_attribute */
extern void T69f172(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unique_attribute_validity */
extern void T69f177(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_unique_attribute */
extern void T64f1276(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_unique_attribute */
extern void T64f1287(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_regular_integer_constant */
extern void T1271f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_regular_integer_constant */
extern void T387f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_integer_constant */
extern void T383f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_regular_integer_constant */
extern void T369f175(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_regular_integer_constant_validity */
extern void T369f228(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_integer_constant */
extern void T69f239(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_integer_constant_validity */
extern void T69f302(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_regular_integer_constant */
extern void T64f1277(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_regular_integer_constant */
extern void T64f1288(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_attribute */
extern void T1271f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BUILTIN_FEATURE_CHECKER.process_attribute */
extern void T1270f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_attribute */
extern void T369f101(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_attribute_validity */
extern void T369f113(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_attribute */
extern void T69f173(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_attribute_validity */
extern void T69f178(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_attribute */
extern void T64f1278(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER3.process_like_current */
extern void T1543f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_current */
extern void T1542f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER2.process_like_current */
extern void T1541f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER1.process_like_current */
extern void T1540f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER3.process_like_current */
extern void T1283f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_current */
extern void T1275f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1274f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER2.process_like_current */
extern void T1269f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER2.process_like_current */
extern void T1268f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SIGNATURE_CHECKER.process_like_current */
extern void T1267f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1266f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_current */
extern void T1265f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER_TYPE_RESOLVER.process_like_current */
extern void T1264f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.process_like_current */
extern void T1253f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER1.process_like_current */
extern void T1252f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TYPE_CHECKER.process_like_current */
extern void T373f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TYPE_CHECKER.check_like_current_validity */
extern void T373f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_c3_character_constant */
extern void T1271f81(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_c3_character_constant */
extern void T387f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_c3_character_constant */
extern void T383f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_c3_character_constant */
extern void T369f144(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_c3_character_constant_validity */
extern void T369f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c3_character_constant */
extern void T69f285(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c3_character_constant_validity */
extern void T69f347(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_c3_character_constant */
extern void T64f1279(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_verbatim_string */
extern void T1271f82(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_verbatim_string */
extern void T387f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_verbatim_string */
extern void T383f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_verbatim_string */
extern void T369f145(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_verbatim_string_validity */
extern void T369f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_verbatim_string */
extern void T69f286(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_verbatim_string_validity */
extern void T69f348(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_verbatim_string */
extern void T64f1280(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_verbatim_string */
extern void T64f1290(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_special_manifest_string */
extern void T1271f83(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_special_manifest_string */
extern void T387f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_special_manifest_string */
extern void T383f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_special_manifest_string */
extern void T369f146(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_special_manifest_string_validity */
extern void T369f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_special_manifest_string */
extern void T69f287(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_special_manifest_string_validity */
extern void T69f349(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_special_manifest_string */
extern void T64f1281(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_special_manifest_string */
extern void T64f1291(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter */
extern void T1543f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter */
extern void T1542f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter */
extern void T1541f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter */
extern void T1540f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER3.process_formal_parameter */
extern void T1283f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter */
extern void T1275f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1274f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter */
extern void T1269f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER2.process_formal_parameter */
extern void T1268f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SIGNATURE_CHECKER.process_formal_parameter */
extern void T1267f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1266f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter */
extern void T1265f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter */
extern void T1264f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter */
extern void T1253f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER1.process_formal_parameter */
extern void T1252f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TYPE_CHECKER.process_formal_parameter */
extern void T373f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER3.process_constrained_formal_parameter */
extern void T1543f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_constrained_formal_parameter */
extern void T1542f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER2.process_constrained_formal_parameter */
extern void T1541f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE_STATUS_CHECKER1.process_constrained_formal_parameter */
extern void T1540f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER3.process_constrained_formal_parameter */
extern void T1283f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_constrained_formal_parameter */
extern void T1275f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1274f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER2.process_constrained_formal_parameter */
extern void T1269f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER2.process_constrained_formal_parameter */
extern void T1268f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SIGNATURE_CHECKER.process_constrained_formal_parameter */
extern void T1267f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1266f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_constrained_formal_parameter */
extern void T1265f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER_TYPE_RESOLVER.process_constrained_formal_parameter */
extern void T1264f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_CHECKER1.process_constrained_formal_parameter */
extern void T1253f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENT_CHECKER1.process_constrained_formal_parameter */
extern void T1252f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T373f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_infix_cast_expression */
extern void T1271f90(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_infix_cast_expression */
extern void T387f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_cast_expression */
extern void T383f64(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_infix_cast_expression */
extern void T369f382(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_infix_cast_expression_validity */
extern void T369f384(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_cast_expression */
extern void T69f379(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_cast_expression_validity */
extern void T69f433(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_infix_cast_expression */
extern void T64f1293(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_infix_cast_expression */
extern void T64f1294(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_retry_instruction */
extern void T1271f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_retry_instruction */
extern void T369f385(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_retry_instruction_validity */
extern void T369f400(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vxrt0a_error */
extern void T50f521(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vxrt0a */
extern T0* T742c1110(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_RETRY_INSTRUCTION.position */
extern T0* T956f9(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T50f161(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vxrt0a_error */
extern void T34f521(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T34f161(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_retry_instruction */
extern void T69f484(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_retry_instruction_validity */
extern void T69f502(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_retry_instruction */
extern void T64f1295(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_retry_instruction */
extern void T64f1310(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_across_instruction */
extern void T1271f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_across_instruction */
extern void T369f386(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_across_instruction_validity */
extern void T369f401(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_loop_component_no_from_validity */
extern void T369f415(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE.is_subset */
extern T1 T386f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].go_after */
extern void T719f80(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] INTEGER_32].cursor_go_after */
extern void T719f81(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_instruction */
extern void T69f485(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_instruction_validity */
extern void T69f503(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_component_no_from_validity */
extern void T69f517(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_across_instruction */
extern void T64f1296(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_across_instruction */
extern void T64f1311(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_check_instruction */
extern void T1271f29(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CHECK_INSTRUCTION.assertion */
extern T0* T1006f8(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CHECK_INSTRUCTION.item */
extern T0* T1006f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_CHECKER.process_check_instruction */
extern void T369f387(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_check_instruction_validity */
extern void T369f402(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE.set_code_unreachable */
extern void T386f19(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_check_instruction */
extern void T69f486(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T69f504(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T69f504p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_check_instruction */
extern void T64f1297(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_check_instruction */
extern void T64f1312(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_debug_instruction */
extern void T1271f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_debug_instruction */
extern void T369f388(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_debug_instruction_validity */
extern void T369f403(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_debug_instruction */
extern void T69f487(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T69f505(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T69f505p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_debug_instruction */
extern void T64f1298(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_debug_instruction */
extern void T64f1313(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_if_instruction */
extern void T1271f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_elseif_part_list */
extern void T1271f86(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ELSEIF_PART.process */
extern void T1079f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_elseif_part */
extern void T1271f114(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ELSEIF_PART_LIST.item */
extern T0* T1082f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_CHECKER.process_if_instruction */
extern void T369f389(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_if_instruction_validity */
extern void T369f404(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_instruction */
extern void T69f488(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_instruction_validity */
extern void T69f506(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_if_instruction */
extern void T64f1299(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_if_instruction */
extern void T64f1314(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_inspect_instruction */
extern void T1271f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_when_part_list */
extern void T1271f87(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_when_part */
extern void T1271f92(GE_context* ac, T0* C, T0* a1);
/* detachable ET_WHEN_PART_LIST.item */
extern T0* T1246f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FEATURE_CHECKER.process_inspect_instruction */
extern void T369f390(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_inspect_instruction_validity */
extern void T369f405(GE_context* ac, T0* C, T0* a1);
extern T1 T369f405ot1(T0* a1, T0** a2);
extern T1 T369f405ot2(T0* a1, T0** a2);
extern T1 T369f405ot3(T0* a1, T0** a2);
extern T1 T369f405ot4(T0* a1, T0** a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vomb2a_error */
extern void T50f524(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vomb2a */
extern T0* T742c1113(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T50f163(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vomb2a_error */
extern void T34f524(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T34f163(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vomb2b_error */
extern void T50f523(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vomb2b */
extern T0* T742c1112(GE_context* ac, T0* a1, T0* a2, T0* a3);
extern T1 T742f1112ot1(T0* a1, T0** a2);
extern T1 T742f1112ot2(T0* a1, T0** a2);
/* [detachable] ET_ERROR_HANDLER.report_vomb2b_error */
extern void T34f523(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.choice_constant */
extern T0* T369f68(GE_context* ac, T0* C, T0* a1);
extern T1 T369f68ot1(T0* a1, T0** a2);
extern T1 T369f68ot2(T0* a1, T0** a2);
extern T1 T369f68ot3(T0* a1, T0** a2);
extern T1 T369f68ot4(T0* a1, T0** a2);
extern T1 T369f68ot5(T0* a1, T0** a2);
extern T1 T369f68ot6(T0* a1, T0** a2);
/* [detachable] ET_FEATURE_CHECKER.integer_choice_constant */
extern T0* T369f72(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.character_choice_constant */
extern T0* T369f71(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.arguments_count */
extern T6 T179f103(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.arguments */
extern T0* T179f107(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.arguments_count */
extern T6 T278f22(GE_context* ac, T0* C);
/* detachable ET_CHOICE_LIST.choice */
extern T0* T1018f6(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CHOICE_LIST.item */
extern T0* T1018f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vomb1a_error */
extern void T50f522(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vomb1a */
extern T0* T742c1111(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T50f162(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vomb1a_error */
extern void T34f522(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T34f162(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_instruction */
extern void T69f489(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_instruction_validity */
extern void T69f507(GE_context* ac, T0* C, T0* a1);
extern T1 T69f507ot1(T0* a1, T0** a2);
extern T1 T69f507ot2(T0* a1, T0** a2);
extern T1 T69f507ot3(T0* a1, T0** a2);
extern T1 T69f507ot4(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.choice_constant */
extern T0* T69f93(GE_context* ac, T0* C, T0* a1);
extern T1 T69f93ot1(T0* a1, T0** a2);
extern T1 T69f93ot2(T0* a1, T0** a2);
extern T1 T69f93ot3(T0* a1, T0** a2);
extern T1 T69f93ot4(T0* a1, T0** a2);
extern T1 T69f93ot5(T0* a1, T0** a2);
extern T1 T69f93ot6(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.integer_choice_constant */
extern T0* T69f98(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.character_choice_constant */
extern T0* T69f97(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.process_inspect_instruction */
extern void T64f1300(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_inspect_instruction */
extern void T64f1315(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1315ot1(T0* a1, T0** a2);
extern T1 T64f1315ot2(T0* a1, T0** a2);
extern T1 T64f1315ot3(T0* a1, T0** a2);
extern T1 T64f1315ot4(T0* a1, T0** a2);
extern T1 T64f1315ot5(T0* a1, T0** a2);
extern T1 T64f1315ot6(T0* a1, T0** a2);
/* INTEGER_32.abs */
extern T6 T6f31(GE_context* ac, T6* C);
/* INTEGER_32.abs_ref */
extern T6 T6f32(GE_context* ac, T6* C);
/* [detachable] ET_C_GENERATOR.choice_constant */
extern T0* T64f517(GE_context* ac, T0* C, T0* a1);
extern T1 T64f517ot1(T0* a1, T0** a2);
extern T1 T64f517ot2(T0* a1, T0** a2);
extern T1 T64f517ot3(T0* a1, T0** a2);
extern T1 T64f517ot4(T0* a1, T0** a2);
extern T1 T64f517ot5(T0* a1, T0** a2);
/* [detachable] ET_PRECURSOR_CHECKER.process_assigner_instruction */
extern void T1271f95(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_assigner_instruction */
extern void T369f391(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_assigner_instruction_validity */
extern void T369f406(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.report_tuple_label_setter */
extern void T369f416(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vbac1a_error */
extern void T50f526(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vbac1a */
extern T0* T742c1115(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T50f165(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vbac1a_error */
extern void T34f526(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T34f165(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ASSIGNER_INSTRUCTION.set_source */
extern void T1456f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vbac2a_error */
extern void T50f525(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vbac2a */
extern T0* T742c1114(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T50f164(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vbac2a_error */
extern void T34f525(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T34f164(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ASSIGNER_INSTRUCTION.set_name */
extern void T1456f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assigner_instruction */
extern void T69f490(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assigner_instruction_validity */
extern void T69f508(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_setter */
extern void T69f518(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_assigner_instruction */
extern void T64f1301(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_assigner_instruction */
extern void T64f1316(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_assignment */
extern void T1271f96(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_assignment */
extern void T369f392(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_assignment_validity */
extern void T369f407(GE_context* ac, T0* C, T0* a1);
extern T1 T369f407ot1(T0* a1);
extern T1 T369f407ot2(T0* a1, T0** a2);
/* [detachable] ET_FEATURE_CHECKER.report_assignment */
extern void T369f418(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE.remove_name */
extern void T386f21(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE.remove_attribute */
extern void T386f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE.remove_formal_argument */
extern void T386f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE.remove_local_variable */
extern void T386f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE.remove_result */
extern void T386f20(GE_context* ac, T0* C);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vjar0a_error */
extern void T50f527(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vjar0a */
extern T0* T742c1116(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vjar_error */
extern T1 T50f166(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vjar0a_error */
extern void T34f527(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.reportable_vjar_error */
extern T1 T34f166(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.is_basic */
extern T1 T72f180(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_CODES.is_basic */
extern T1 T403f34(GE_context* ac, T0* C, T8 a1);
/* detachable ET_ASSIGNMENT.set_source */
extern void T1457f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_writable_validity */
extern void T369f417(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T369f417ot1(T0* a1, T0** a2);
extern T1 T369f417ot2(T0* a1, T0** a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_veen0a_error */
extern void T50f536(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_veen0a */
extern T0* T742c1125(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_veen_error */
extern T1 T50f169(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_veen0a_error */
extern void T34f536(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_veen_error */
extern T1 T34f169(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_veen0b_error */
extern void T50f535(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_veen0b */
extern T0* T742c1124(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_veen0b_error */
extern void T34f535(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vjaw0b_error */
extern void T50f534(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vjaw0b */
extern T0* T742c1123(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T50f168(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vjaw0b_error */
extern void T34f534(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T34f168(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vjaw0c_error */
extern void T50f533(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vjaw0c */
extern T0* T742c1122(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vjaw0c_error */
extern void T34f533(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.report_attribute_assignment_target */
extern void T369f431(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vucr0c_error */
extern void T50f532(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vucr0c */
extern T0* T742c1121(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vucr0c_error */
extern void T34f532(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vjaw0a_error */
extern void T50f531(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vjaw0a */
extern T0* T742c1120(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vjaw0a_error */
extern void T34f531(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.report_local_assignment_target */
extern void T369f430(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_result_assignment_target */
extern void T369f429(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment */
extern void T69f491(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_validity */
extern void T69f509(GE_context* ac, T0* C, T0* a1);
extern T1 T69f509ot1(T0* a1);
extern T1 T69f509ot2(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment */
extern void T69f520(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_dynamic_types */
extern void T69f534(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_writable_validity */
extern void T69f519(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T69f519ot1(T0* a1, T0** a2);
extern T1 T69f519ot2(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_assignment_target */
extern void T69f533(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_assignment_target */
extern void T69f532(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_assignment_target */
extern void T69f531(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_assignment */
extern void T64f1302(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_assignment */
extern void T64f1317(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER.is_result */
extern T1 T179f98(GE_context* ac, T0* C);
/* [detachable] ET_PRECURSOR_CHECKER.process_assignment_attempt */
extern void T1271f97(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_assignment_attempt */
extern void T369f393(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_assignment_attempt_validity */
extern void T369f408(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.report_assignment_attempt */
extern void T369f419(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vjrv0a_error */
extern void T50f528(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vjrv0a */
extern T0* T742c1117(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T50f167(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vjrv0a_error */
extern void T34f528(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T34f167(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.is_type_reference */
extern T1 T236f50(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_PROCESSOR.newer_or_same_ise_version */
extern T1 T61f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.newer_or_same_ise_version */
extern T1 T364f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.ise_5_7_0 */
extern T0* T369f69(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment_attempt */
extern void T69f492(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_attempt_validity */
extern void T69f510(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment_attempt */
extern void T69f521(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_attempt_dynamic_types */
extern void T69f535(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_5_7_0 */
extern T0* T69f94(GE_context* ac, T0* C);
/* [detachable] ET_C_GENERATOR.process_assignment_attempt */
extern void T64f1303(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_assignment_attempt */
extern void T64f1318(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_loop_instruction */
extern void T1271f98(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_loop_instruction */
extern void T369f394(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_loop_instruction_validity */
extern void T369f409(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_loop_instruction */
extern void T69f493(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_instruction_validity */
extern void T69f511(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_loop_instruction */
extern void T64f1304(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_loop_instruction */
extern void T64f1319(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_bang_instruction */
extern void T1271f99(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_bang_instruction */
extern void T369f395(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_bang_instruction_validity */
extern void T369f410(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_creation_instruction_validity */
extern void T369f420(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgcc6d_error */
extern void T50f537(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_VALIDITY_ERROR.make_vgcc6d */
extern T0* T742c1126(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ERROR_HANDLER.report_vgcc6d_error */
extern void T34f537(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_FEATURE_CHECKER.check_dotnet_creation_procedure_call_instruction_validity */
extern void T369f433(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5, T0* a6);
/* [detachable] ET_FEATURE_CHECKER.check_creation_procedure_call_instruction_validity */
extern void T369f432(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T0* a6, T0* a7);
extern T1 T369f432ot1(T0* a1, T0** a2);
extern T1 T369f432ot2(T0* a1, T0** a2);
extern T1 T369f432ot3(T0* a1);
extern T1 T369f432ot4(T0* a1, T0** a2);
/* [detachable] ET_FEATURE_CHECKER.report_creation_instruction */
extern void T369f437(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.is_type_valid */
extern T1 T369f70(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TYPE_CHECKER.set_class_interface_error_only */
extern void T373f45(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vgcc3a_error */
extern void T50f548(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_VALIDITY_ERROR.make_vgcc3a */
extern T0* T742c1137(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T50f174(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_vgcc3a_error */
extern void T34f548(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T34f174(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CREATE_INSTRUCTION.last_position */
extern T0* T1462f8(GE_context* ac, T0* C);
/* detachable ET_CREATE_INSTRUCTION.last_leaf */
extern T0* T1462f11(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL.last_leaf */
extern T0* T320f4(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T1903f12(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T273f12(GE_context* ac, T0* C);
/* detachable ET_BANG_INSTRUCTION.last_position */
extern T0* T1461f7(GE_context* ac, T0* C);
/* detachable ET_BANG_INSTRUCTION.last_leaf */
extern T0* T1461f10(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bang_instruction */
extern void T69f494(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bang_instruction_validity */
extern void T69f512(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_instruction_validity */
extern void T69f522(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_dotnet_creation_procedure_call_instruction_validity */
extern void T69f537(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5, T0* a6);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_procedure_call_instruction_validity */
extern void T69f536(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T0* a6, T0* a7);
extern T1 T69f536ot1(T0* a1, T0** a2);
extern T1 T69f536ot2(T0* a1, T0** a2);
extern T1 T69f536ot3(T0* a1);
extern T1 T69f536ot4(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_instruction */
extern void T69f541(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_creation_dynamic_type */
extern void T69f542(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CREATE_INSTRUCTION.arguments */
extern T0* T1462f10(GE_context* ac, T0* C);
/* detachable ET_BANG_INSTRUCTION.arguments */
extern T0* T1461f9(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.is_type_valid */
extern T1 T69f96(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_bang_instruction */
extern void T64f1305(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_bang_instruction */
extern void T64f1320(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_creation_instruction */
extern void T64f1325(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_create_instruction */
extern void T1271f100(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_create_instruction */
extern void T369f396(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_create_instruction_validity */
extern void T369f411(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_instruction */
extern void T69f495(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_instruction_validity */
extern void T69f513(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.process_create_instruction */
extern void T64f1306(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_create_instruction */
extern void T64f1321(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_precursor_instruction */
extern void T1271f101(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_precursor_instruction */
extern void T369f397(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_precursor_instruction_validity */
extern void T369f412(GE_context* ac, T0* C, T0* a1);
extern T1 T369f412ot1(T0* a1, T0** a2);
/* [detachable] ET_FEATURE_CHECKER.check_precursor_procedure_instruction_validity */
extern void T369f421(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].force_last */
extern void T1284f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].slots_put */
extern void T1284f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].clashes_put */
extern void T1284f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].slots_item */
extern T6 T1284f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].hash_position */
extern T6 T1284f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].resize */
extern void T1284f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].clashes_resize */
extern void T1284f63(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].special_integer_ */
extern T0* T1284f32(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].key_storage_resize */
extern void T1284f62(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].item_storage_resize */
extern void T1284f61(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].key_storage_item */
extern T0* T1284f31(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].slots_resize */
extern void T1284f60(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].new_capacity */
extern T6 T1284f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].item_storage_put */
extern void T1284f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].search_position */
extern void T1284f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_PROCEDURE].key_equality_tester */
extern T0* T1284f30(GE_context* ac, T0* C);
/* [detachable] ET_FEATURE_CHECKER.report_precursor_instruction */
extern void T369f434(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vdpr1a_error */
extern void T50f529(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_VALIDITY_ERROR.make_vdpr1a */
extern T0* T742c1118(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ERROR_HANDLER.report_vdpr1a_error */
extern void T34f529(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_instruction */
extern void T69f496(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_instruction_validity */
extern void T69f514(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_procedure_instruction_validity */
extern void T69f523(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_instruction */
extern void T69f538(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_C_GENERATOR.process_precursor_instruction */
extern void T64f1307(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_precursor_instruction */
extern void T64f1322(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_static_call_instruction */
extern void T1271f102(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_static_call_instruction */
extern void T369f398(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_static_call_instruction_validity */
extern void T369f413(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_static_procedure_call_instruction_validity */
extern void T369f423(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_FEATURE_CHECKER.report_static_call_instruction */
extern void T369f435(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_static_dotnet_procedure_call_instruction_validity */
extern void T369f422(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_instruction */
extern void T69f497(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_instruction_validity */
extern void T69f515(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_procedure_call_instruction_validity */
extern void T69f525(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_instruction */
extern void T69f539(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_procedure_call_instruction_validity */
extern void T69f524(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_C_GENERATOR.process_static_call_instruction */
extern void T64f1308(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_static_call_instruction */
extern void T64f1323(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_instruction_static_call */
extern void T64f1326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_PRECURSOR_CHECKER.process_unqualified_call_instruction */
extern void T1271f106(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_unqualified_call_instruction */
extern void T369f399(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_unqualified_call_instruction_validity */
extern void T369f414(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_vkcn1c_error */
extern void T50f530(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_vkcn1c */
extern T0* T742c1119(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_vkcn1c_error */
extern void T34f530(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_unqualified_procedure_call_instruction_validity */
extern void T369f428(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.report_unqualified_call_instruction */
extern void T369f436(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_instruction_validity */
extern void T369f427(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvuio0c_error */
extern void T50f547(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvuio0c */
extern T0* T742c1136(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T50f173(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvuio0c_error */
extern void T34f547(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T34f173(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvuio0a_error */
extern void T50f546(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvuio0a */
extern T0* T742c1135(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_gvuio0a_error */
extern void T34f546(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvuio0b_error */
extern void T50f545(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvuio0b */
extern T0* T742c1134(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_gvuio0b_error */
extern void T34f545(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_unqualified_across_cursor_call_instruction_validity */
extern void T369f426(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvuic0c_error */
extern void T50f544(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvuic0c */
extern T0* T742c1133(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T50f172(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvuic0c_error */
extern void T34f544(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T34f172(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvuic0a_error */
extern void T50f543(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvuic0a */
extern T0* T742c1132(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_gvuic0a_error */
extern void T34f543(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvuic0b_error */
extern void T50f542(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvuic0b */
extern T0* T742c1131(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_gvuic0b_error */
extern void T34f542(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_unqualified_local_variable_call_instruction_validity */
extern void T369f425(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvuil0a_error */
extern void T50f541(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvuil0a */
extern T0* T742c1130(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T50f171(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvuil0a_error */
extern void T34f541(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T34f171(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvuil0b_error */
extern void T50f540(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvuil0b */
extern T0* T742c1129(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_gvuil0b_error */
extern void T34f540(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_instruction_validity */
extern void T369f424(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvuia0a_error */
extern void T50f539(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvuia0a */
extern T0* T742c1128(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_NULL_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T50f170(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ERROR_HANDLER.report_gvuia0a_error */
extern void T34f539(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T34f170(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NULL_ERROR_HANDLER.report_gvuia0b_error */
extern void T50f538(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_VALIDITY_ERROR.make_gvuia0b */
extern T0* T742c1127(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ERROR_HANDLER.report_gvuia0b_error */
extern void T34f538(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_instruction */
extern void T69f498(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_instruction_validity */
extern void T69f516(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_instruction_validity */
extern void T69f530(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_instruction */
extern void T69f540(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T69f540ot1(T0* a1, T0** a2);
extern T1 T69f540ot2(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_instruction_validity */
extern void T69f529(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_across_cursor_call_instruction_validity */
extern void T69f528(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_instruction_validity */
extern void T69f527(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_instruction_validity */
extern void T69f526(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_unqualified_call_instruction */
extern void T64f1309(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_unqualified_call_instruction */
extern void T64f1324(GE_context* ac, T0* C, T0* a1);
extern T1 T64f1324ot1(T0* a1, T0** a2);
/* detachable ET_UNQUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T1682f4(GE_context* ac, T0* C);
/* [detachable] ET_PRECURSOR_CHECKER.process_convert_builtin_expression */
extern void T1271f111(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T387f59(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T383f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_convert_builtin_expression */
extern void T369f438(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_convert_builtin_expression_validity */
extern void T369f441(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_builtin_expression */
extern void T69f544(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_builtin_expression_validity */
extern void T69f547(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_convert_builtin_expression */
extern void T64f1327(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_convert_builtin_expression */
extern void T64f1330(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_convert_from_expression */
extern void T1271f112(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_convert_from_expression */
extern void T387f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_from_expression */
extern void T383f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_convert_from_expression */
extern void T369f439(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_convert_from_expression_validity */
extern void T369f442(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_from_expression */
extern void T69f545(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_from_expression_validity */
extern void T69f548(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_convert_from_expression */
extern void T64f1328(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_convert_from_expression */
extern void T64f1331(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PRECURSOR_CHECKER.process_convert_to_expression */
extern void T1271f113(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_SCOPE_BUILDER.process_convert_to_expression */
extern void T387f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_to_expression */
extern void T383f67(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.process_convert_to_expression */
extern void T369f440(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FEATURE_CHECKER.check_convert_to_expression_validity */
extern void T369f443(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_to_expression */
extern void T69f546(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_to_expression_validity */
extern void T69f549(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_C_GENERATOR.process_convert_to_expression */
extern void T64f1329(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_C_GENERATOR.print_convert_to_expression */
extern void T64f1332(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.reset_validity_checked */
extern void T1439f84(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.reset_validity_checked */
extern void T1438f87(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.reset_validity_checked */
extern void T1437f85(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.reset_validity_checked */
extern void T361f81(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.reset_validity_checked */
extern void T359f85(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.reset_validity_checked */
extern void T357f84(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.reset_validity_checked */
extern void T328f84(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.reset_validity_checked */
extern void T246f93(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.set_frozen_keyword */
extern void T1439f90(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_frozen_keyword */
extern void T1438f93(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_frozen_keyword */
extern void T1437f91(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTRIBUTE.set_frozen_keyword */
extern void T361f87(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_frozen_keyword */
extern void T359f91(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.set_frozen_keyword */
extern void T357f90(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_frozen_keyword */
extern void T328f90(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_frozen_keyword */
extern void T246f99(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.set_object_tests */
extern void T1439f88(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_object_tests */
extern void T1438f91(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_object_tests */
extern void T1437f89(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTRIBUTE.set_object_tests */
extern void T361f85(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_object_tests */
extern void T359f89(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.set_object_tests */
extern void T357f88(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_object_tests */
extern void T328f88(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_object_tests */
extern void T246f97(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.set_across_components */
extern void T1439f89(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_across_components */
extern void T1438f92(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_across_components */
extern void T1437f90(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTRIBUTE.set_across_components */
extern void T361f86(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_across_components */
extern void T359f90(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.set_across_components */
extern void T357f89(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_across_components */
extern void T328f89(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_across_components */
extern void T246f98(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.reset */
extern void T1439f85(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.reset */
extern void T1439f85p1(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.reset */
extern void T1438f88(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.reset */
extern void T1438f88p1(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.reset */
extern void T1437f86(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.reset */
extern void T1437f86p1(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.reset */
extern void T361f82(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.reset */
extern void T361f82p1(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.reset */
extern void T359f86(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.reset */
extern void T359f86p1(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.reset */
extern void T357f85(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.reset */
extern void T357f85p1(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.reset */
extern void T328f85(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.reset */
extern void T328f85p1(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.reset */
extern void T246f94(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.reset */
extern void T246f94p1(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.reset_after_features_flattened */
extern void T1439f86(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1439f105(GE_context* ac, T0* C);
/* detachable ET_FORMAL_ARGUMENT_LIST.reset_qualified_anchored_types */
extern void T248f15(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T1438f89(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1438f111(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.reset_after_features_flattened */
extern void T1437f87(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1437f108(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.reset_after_features_flattened */
extern void T361f83(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T361f96(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.reset_after_features_flattened */
extern void T359f87(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T359f103(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.reset_after_features_flattened */
extern void T357f86(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T357f100(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.reset_after_features_flattened */
extern void T328f86(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T328f106(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.reset_after_features_flattened */
extern void T246f95(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.reset_signature_qualified_anchored_types */
extern void T246f115(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.reset_after_interface_checked */
extern void T1439f87(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T1438f90(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T1438f90p1(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.reset_after_interface_checked */
extern void T1437f88(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.reset_after_interface_checked */
extern void T1437f88p1(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.reset_after_interface_checked */
extern void T361f84(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.reset_after_interface_checked */
extern void T359f88(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.reset_after_interface_checked */
extern void T357f87(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T328f87(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T328f87p1(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.reset_after_interface_checked */
extern void T246f96(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.reset_validity_checked */
extern void T1442f91(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.reset_validity_checked */
extern void T1441f86(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.reset_validity_checked */
extern void T458f82(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.reset_validity_checked */
extern void T456f83(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.set_frozen_keyword */
extern void T1442f97(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_frozen_keyword */
extern void T1441f92(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_frozen_keyword */
extern void T458f88(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.set_frozen_keyword */
extern void T456f89(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.set_object_tests */
extern void T1442f95(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_object_tests */
extern void T1441f90(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_object_tests */
extern void T458f86(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.set_object_tests */
extern void T456f87(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.set_across_components */
extern void T1442f96(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_across_components */
extern void T1441f91(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_across_components */
extern void T458f87(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.set_across_components */
extern void T456f88(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.reset */
extern void T1442f92(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.reset */
extern void T1441f87(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.reset */
extern void T458f83(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.reset */
extern void T456f84(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.reset_after_features_flattened */
extern void T1442f93(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T1442f112(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T1441f88(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T1441f109(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.reset_after_features_flattened */
extern void T458f84(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T458f102(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T456f85(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T456f105(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.reset_after_interface_checked */
extern void T1442f94(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T1441f89(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T1441f89p1(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.reset_after_interface_checked */
extern void T458f85(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T456f86(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T456f86p1(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.add_creation_clients_to */
extern void T1442f120(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_CREATOR_LIST.add_creation_clients_to */
extern void T1067f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CREATOR.add_creation_clients_to */
extern void T1064f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLIENT_LIST.append_first */
extern void T390f19(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.add_creation_clients_to */
extern void T1441f117(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DEFERRED_PROCEDURE.add_creation_clients_to */
extern void T458f110(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DO_PROCEDURE.add_creation_clients_to */
extern void T456f113(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_INFIX_NAME.reset */
extern void T1445f103(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.reset */
extern void T1444f71(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.reset */
extern void T1443f89(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.reset */
extern void T849f71(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.reset */
extern void T179f120(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.set_seed */
extern void T1445f104(GE_context* ac, T0* C, T6 a1);
/* detachable ET_PREFIX_FREE_NAME.set_seed */
extern void T1444f72(GE_context* ac, T0* C, T6 a1);
/* detachable ET_PREFIX_NAME.set_seed */
extern void T1443f90(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_INFIX_FREE_NAME.set_seed */
extern void T849f72(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_IDENTIFIER.set_seed */
extern void T179f110(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.set_id */
extern void T434f64(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.set_id */
extern void T433f64(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.set_id */
extern void T310f66(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.set_id */
extern void T293f66(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.set_id */
extern void T218f65(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.set_attached_type */
extern void T434f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.set_attached_type */
extern void T433f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.set_attached_type */
extern void T310f57(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.set_attached_type */
extern void T293f57(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.set_attached_type */
extern void T218f56(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.set_hash_code */
extern void T434f61(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.set_hash_code */
extern void T433f61(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.set_hash_code */
extern void T310f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.set_hash_code */
extern void T293f59(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.set_hash_code */
extern void T218f58(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.set_next_type */
extern void T434f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.set_next_type */
extern void T433f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.set_next_type */
extern void T310f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.set_next_type */
extern void T293f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.set_next_type */
extern void T218f59(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.set_attribute_position */
extern void T434f65(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_DYNAMIC_FEATURE_LIST.put */
extern void T219f12(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_DYNAMIC_FEATURE_LIST.index_of */
extern T6 T219f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.set_attribute_position */
extern void T433f65(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.set_attribute_position */
extern void T310f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.set_attribute_position */
extern void T293f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.set_attribute_position */
extern void T218f66(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.set_alive */
extern void T434f58(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.set_alive */
extern void T433f58(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.set_alive */
extern void T310f56(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.set_alive */
extern void T293f56(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.set_alive */
extern void T218f55(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.use_all_attributes */
extern void T434f67(GE_context* ac, T0* C, T0* a1);
extern T1 T434f67ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.use_all_attributes */
extern void T433f67(GE_context* ac, T0* C, T0* a1);
extern T1 T433f67ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.use_all_attributes */
extern void T310f68(GE_context* ac, T0* C, T0* a1);
extern T1 T310f68ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.use_all_attributes */
extern void T293f68(GE_context* ac, T0* C, T0* a1);
extern T1 T293f68ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.use_all_attributes */
extern void T218f67(GE_context* ac, T0* C, T0* a1);
extern T1 T218f67ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.put_equality_expression */
extern void T434f76(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_EQUALITY_EXPRESSION.set_next */
extern void T1967f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.put_equality_expression */
extern void T433f76(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.put_equality_expression */
extern void T310f73(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.put_equality_expression */
extern void T293f73(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.put_equality_expression */
extern void T218f71(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.put_object_equality_expression */
extern void T434f77(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.set_next */
extern void T1968f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.put_object_equality_expression */
extern void T433f77(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.put_object_equality_expression */
extern void T310f74(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.put_object_equality_expression */
extern void T293f74(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.put_object_equality_expression */
extern void T218f72(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.put_query_call */
extern void T434f73(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.put_query_call */
extern void T433f73(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.put_query_call */
extern void T310f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.put_query_call */
extern void T293f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.put_query_call */
extern void T218f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.put_procedure_call */
extern void T434f75(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.put_procedure_call */
extern void T433f75(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.put_procedure_call */
extern void T310f72(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.put_procedure_call */
extern void T293f72(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.put_procedure_call */
extern void T218f70(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.set_static */
extern void T434f78(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.set_static */
extern void T433f78(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.set_static */
extern void T310f75(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.set_static */
extern void T293f75(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.set_static */
extern void T218f73(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ECF_LIBRARY.set_ecf_namespace */
extern void T182f118(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_CONFIG.set_ecf_namespace */
extern void T180f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_ecf_namespace */
extern void T55f158(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.set_ecf_version */
extern void T182f119(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_CONFIG.set_ecf_version */
extern void T180f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_ecf_version */
extern void T55f159(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.set_description */
extern void T182f120(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_CONFIG.set_description */
extern void T180f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_description */
extern void T55f160(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.set_notes */
extern void T182f121(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_CONFIG.set_notes */
extern void T180f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_notes */
extern void T55f161(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.set_targets */
extern void T182f122(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_CONFIG.set_targets */
extern void T180f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_targets */
extern void T55f162(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.set_read_only */
extern void T182f123(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ECF_SYSTEM_CONFIG.set_read_only */
extern void T180f18(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ECF_SYSTEM.set_read_only */
extern void T55f163(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_ECF_LIBRARY.set_uuid */
extern void T182f124(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_CONFIG.set_uuid */
extern void T180f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_uuid */
extern void T55f164(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.set_library_target */
extern void T182f125(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM_CONFIG.set_library_target */
extern void T180f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.set_library_target */
extern void T55f165(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_NAMESPACE_RESOLVER.on_start */
extern void T542f28(GE_context* ac, T0* C);
/* [detachable] XM_CALLBACKS_NULL.on_start */
extern void T503f2(GE_context* ac, T0* C);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_start */
extern void T190f9(GE_context* ac, T0* C);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_start */
extern void T190f9p1(GE_context* ac, T0* C);
/* [detachable] XM_CALLBACKS_TO_TREE_FILTER.on_start */
extern void T177f14(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.on_finish */
extern void T542f29(GE_context* ac, T0* C);
/* [detachable] XM_CALLBACKS_NULL.on_finish */
extern void T503f3(GE_context* ac, T0* C);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T190f10(GE_context* ac, T0* C);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T190f10p1(GE_context* ac, T0* C);
/* [detachable] XM_CALLBACKS_TO_TREE_FILTER.on_finish */
extern void T177f15(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.on_comment */
extern void T542f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_CALLBACKS_NULL.on_comment */
extern void T503f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T190f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T190f11p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_CALLBACKS_TO_TREE_FILTER.on_comment */
extern void T177f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_CALLBACKS_TO_TREE_FILTER.handle_position */
extern void T177f24(GE_context* ac, T0* C, T0* a1);
/* detachable XM_POSITION_TABLE.put */
extern void T164f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].put_last */
extern void T859f9(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].put_right */
extern void T1733f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].make */
extern T0* T1733c3(GE_context* ac, T0* a1);
/* [detachable] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE].make */
extern T0* T860c3(GE_context* ac, T0* a1, T0* a2);
/* [detachable] XM_COMMENT.make_last_in_document */
extern T0* T1396c4(GE_context* ac, T0* a1, T0* a2);
/* [detachable] XM_COMMENT.make_last */
extern T0* T1396c3(GE_context* ac, T0* a1, T0* a2);
/* [detachable] XM_ELEMENT.force_last */
extern void T163f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].force_last */
extern void T854f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].force_last */
extern void T854f13p1(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] XM_ELEMENT_NODE].make */
extern T0* T1677c3(GE_context* ac, T0* a1);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].before_addition */
extern void T854f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_ELEMENT.before_addition */
extern void T163f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_ELEMENT.last */
extern T0* T163f13(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].last */
extern T0* T854f8(GE_context* ac, T0* C);
/* [detachable] XM_ELEMENT.is_empty */
extern T1 T163f12(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].is_empty */
extern T1 T854f7(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.on_processing_instruction */
extern void T542f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_CALLBACKS_NULL.on_processing_instruction */
extern void T503f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T190f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T190f12p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_CALLBACKS_TO_TREE_FILTER.on_processing_instruction */
extern void T177f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_PROCESSING_INSTRUCTION.make_last_in_document */
extern T0* T1397c5(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] XM_PROCESSING_INSTRUCTION.make_last */
extern T0* T1397c4(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] XM_NAMESPACE_RESOLVER.on_content */
extern void T542f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_CALLBACKS_NULL.on_content */
extern void T503f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_content */
extern void T190f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_content */
extern void T190f13p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_CALLBACKS_TO_TREE_FILTER.on_content */
extern void T177f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_CHARACTER_DATA.make_last */
extern T0* T1398c3(GE_context* ac, T0* a1, T0* a2);
/* [detachable] XM_NAMESPACE_RESOLVER.on_start_tag */
extern void T542f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] XM_NAMESPACE_RESOLVER_CONTEXT.push */
extern void T1322f12(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].force_last */
extern void T1649f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].put_right */
extern void T1865f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].attach_left */
extern void T1865f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].make */
extern T0* T1865c4(GE_context* ac, T0* a1);
/* [detachable] XM_NAMESPACE_RESOLVER_CONTEXT.new_string_string_table */
extern T0* T1322f8(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].set_equality_tester */
extern void T211f94(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_NAMESPACE_RESOLVER_CONTEXT.string_equality_tester */
extern T0* T1322f9(GE_context* ac, T0* C);
/* [detachable] XM_CALLBACKS_NULL.on_start_tag */
extern void T503f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T190f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T190f14p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] XM_CALLBACKS_TO_TREE_FILTER.on_start_tag */
extern void T177f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] XM_ELEMENT.make_root */
extern T0* T163c19(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] XM_DOCUMENT.set_root_element */
extern void T187f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_DOCUMENT.remove_previous_root_element */
extern void T187f16(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].go_after */
extern void T868f14(GE_context* ac, T0* C);
/* [detachable] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].cursor_go_after */
extern void T561f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_ELEMENT.make_last */
extern T0* T163c18(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [detachable] XM_CALLBACKS_TO_TREE_FILTER.new_namespace */
extern T0* T177f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].force_last */
extern void T545f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].slots_put */
extern void T545f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].clashes_put */
extern void T545f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].slots_item */
extern T6 T545f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].hash_position */
extern T6 T545f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_NAMESPACE.hash_code */
extern T6 T429f6(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].resize */
extern void T545f42(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].clashes_resize */
extern void T545f48(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].special_integer_ */
extern T0* T545f29(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].key_storage_resize */
extern void T545f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].item_storage_resize */
extern void T545f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE].aliased_resized_area */
extern T0* T1329f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] XM_NAMESPACE].aliased_resized_area */
extern T0* T1330f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].key_storage_item */
extern T0* T545f28(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].item_storage_item */
extern T0* T545f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].clashes_item */
extern T6 T545f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].slots_resize */
extern void T545f45(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].new_capacity */
extern T6 T545f19(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].item_storage_put */
extern void T545f41(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE].force */
extern void T1329f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] XM_NAMESPACE].fill_with */
extern void T1330f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] XM_NAMESPACE].extend */
extern void T1330f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].search_position */
extern void T545f40(GE_context* ac, T0* C, T0* a1);
/* detachable KL_EQUALITY_TESTER [[attached] XM_NAMESPACE].test */
extern T1 T1327f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_NAMESPACE.is_equal */
extern T1 T429f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_NAMESPACE.string_ */
extern T0* T429f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].key_equality_tester */
extern T0* T545f25(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE.same_prefix */
extern T1 T429f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].item */
extern T0* T545f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] XM_NAMESPACE].has */
extern T1 T545f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T542f33(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T542f33p1(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER_CONTEXT.resolve_default */
extern T0* T1322f3(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER_CONTEXT.default_pseudo_prefix */
extern T0* T1322f7(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.string_ */
extern T0* T542f14(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.on_delayed_attributes */
extern void T542f40(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.attributes_remove */
extern void T542f44(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_QUEUE [[attached] STRING_8].remove */
extern void T1326f7(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_QUEUE [[attached] STRING_8].wipe_out */
extern void T1326f8(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_QUEUE [detachable STRING_8].remove */
extern void T1325f8(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_QUEUE [detachable STRING_8].wipe_out */
extern void T1325f9(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.unprefixed_attribute_namespace */
extern T0* T542f19(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.default_namespace */
extern T0* T542f25(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.xmlns_namespace */
extern T0* T542f18(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.is_xmlns */
extern T1 T542f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_NAMESPACE_RESOLVER.same_string */
extern T1 T542f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] XM_NAMESPACE_RESOLVER.string_equality_tester */
extern T0* T542f26(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.xmlns */
extern T0* T542f22(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.xml_prefix_namespace */
extern T0* T542f17(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.is_xml */
extern T1 T542f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_NAMESPACE_RESOLVER.xml_prefix */
extern T0* T542f24(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_QUEUE [[attached] STRING_8].item */
extern T0* T1326f4(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_QUEUE [detachable STRING_8].item */
extern T0* T1325f5(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.attributes_is_empty */
extern T1 T542f12(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_QUEUE [detachable STRING_8].is_empty */
extern T1 T1325f4(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER_CONTEXT.resolve */
extern T0* T1322f2(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].back */
extern void T1650f11(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].cursor_back */
extern void T1649f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].add_traversing_cursor */
extern void T1649f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].set_next_cursor */
extern void T1650f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].remove_traversing_cursor */
extern void T1649f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].set */
extern void T1650f14(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].go_before */
extern void T1650f10(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].cursor_go_before */
extern void T1649f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].set_before */
extern void T1650f15(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].cursor_off */
extern T1 T1649f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].off */
extern T1 T1650f7(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].item */
extern T0* T1650f6(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].finish */
extern void T1650f9(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].cursor_finish */
extern void T1649f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_NAMESPACE_RESOLVER_CONTEXT.default_namespace */
extern T0* T1322f6(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER_CONTEXT.has */
extern T1 T1322f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_NAMESPACE_RESOLVER.has_prefix */
extern T1 T542f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_CALLBACKS_NULL.on_start_tag_finish */
extern void T503f7(GE_context* ac, T0* C);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T190f15(GE_context* ac, T0* C);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T190f15p1(GE_context* ac, T0* C);
/* [detachable] XM_CALLBACKS_TO_TREE_FILTER.on_start_tag_finish */
extern void T177f20(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T542f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] XM_NAMESPACE_RESOLVER_CONTEXT.pop */
extern void T1322f11(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].remove_last */
extern void T1649f9(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].set_last_cell */
extern void T1649f14(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].forget_right */
extern void T1865f7(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].move_last_cursors_after */
extern void T1649f13(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].set_after */
extern void T1650f12(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].wipe_out */
extern void T1649f12(GE_context* ac, T0* C);
/* [detachable] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].move_all_cursors_after */
extern void T1649f15(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T542f34p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] XM_CALLBACKS_NULL.on_end_tag */
extern void T503f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T190f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T190f16p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] XM_CALLBACKS_TO_TREE_FILTER.on_end_tag */
extern void T177f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] XM_ELEMENT.parent_element */
extern T0* T163f10(GE_context* ac, T0* C);
extern T1 T163f10ot1(T0* a1, T0** a2);
/* [detachable] XM_ELEMENT.is_root_node */
extern T1 T163f11(GE_context* ac, T0* C);
/* [detachable] XM_DOCUMENT.is_root_node */
extern T1 T187f8(GE_context* ac, T0* C);
/* [detachable] XM_DOCUMENT.parent */
extern T0* T187f9(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER.on_error */
extern void T542f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_CALLBACKS_NULL.on_error */
extern void T503f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_error */
extern void T190f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_error */
extern void T190f17p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_CALLBACKS_TO_TREE_FILTER.on_error */
extern void T177f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_NAMESPACE_RESOLVER.on_attribute */
extern void T542f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] XM_NAMESPACE_RESOLVER_CONTEXT.add */
extern void T1322f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].force_new */
extern void T211f95(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].last */
extern T0* T1649f5(GE_context* ac, T0* C);
/* [detachable] XM_NAMESPACE_RESOLVER_CONTEXT.shallow_has */
extern T1 T1322f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_NAMESPACE_RESOLVER.attributes_force */
extern void T542f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] DS_LINKED_QUEUE [[attached] STRING_8].force */
extern void T1326f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_QUEUE [detachable STRING_8].force */
extern void T1325f7(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [detachable STRING_8].put_right */
extern void T1651f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [detachable STRING_8].make */
extern T0* T1651c3(GE_context* ac, T0* a1);
/* [detachable] XM_NAMESPACE_RESOLVER_CONTEXT.add_default */
extern void T1322f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_CALLBACKS_NULL.on_attribute */
extern void T503f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T190f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T190f18p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] XM_CALLBACKS_TO_TREE_FILTER.on_attribute */
extern void T177f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable XM_ATTRIBUTE.make_last */
extern T0* T191c5(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] XM_NAMESPACE_RESOLVER.on_xml_declaration */
extern void T542f45(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] XM_CALLBACKS_NULL.on_xml_declaration */
extern void T503f12(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] XM_STOP_ON_ERROR_FILTER.on_xml_declaration */
extern void T190f19(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] XM_CALLBACKS_TO_TREE_FILTER.on_xml_declaration */
extern void T177f25(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [detachable] XM_NAMESPACE_RESOLVER.set_next */
extern void T542f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_STOP_ON_ERROR_FILTER.set_next */
extern void T190f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_CALLBACKS_TO_TREE_FILTER.set_next */
extern void T177f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_TEXT_OUTPUT_FILE.put_line */
extern void T292f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_STRING_OUTPUT_STREAM.put_line */
extern void T255f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_NULL_TEXT_OUTPUT_STREAM.put_line */
extern void T156f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_TEXT_OUTPUT_FILE.append */
extern void T292f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_TEXT_OUTPUT_FILE.append */
extern void T292f37p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_STRING_OUTPUT_STREAM.append */
extern void T255f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_STRING_OUTPUT_STREAM.append */
extern void T255f10p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T156f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T156f9p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_TEXT_OUTPUT_FILE.put_string */
extern void T292f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_TEXT_OUTPUT_FILE.old_put_string */
extern void T292f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_TEXT_OUTPUT_FILE.file_ps */
extern void T292f49(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* [detachable] KL_STRING_OUTPUT_STREAM.put_string */
extern void T255f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_STRING_OUTPUT_STREAM.string_ */
extern T0* T255f3(GE_context* ac, T0* C);
/* [detachable] KL_NULL_TEXT_OUTPUT_STREAM.put_string */
extern void T156f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_TEXT_OUTPUT_FILE.put_new_line */
extern void T292f33(GE_context* ac, T0* C);
/* [detachable] KL_STRING_OUTPUT_STREAM.put_new_line */
extern void T255f5(GE_context* ac, T0* C);
/* [detachable] KL_NULL_TEXT_OUTPUT_STREAM.put_new_line */
extern void T156f7(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_OUTPUT_FILE.put_character */
extern void T292f31(GE_context* ac, T0* C, T2 a1);
/* [detachable] KL_TEXT_OUTPUT_FILE.old_put_character */
extern void T292f43(GE_context* ac, T0* C, T2 a1);
/* [detachable] KL_TEXT_OUTPUT_FILE.file_pc */
extern void T292f50(GE_context* ac, T0* C, T14 a1, T2 a2);
/* [detachable] KL_STRING_OUTPUT_STREAM.put_character */
extern void T255f7(GE_context* ac, T0* C, T2 a1);
/* [detachable] KL_NULL_TEXT_OUTPUT_STREAM.put_character */
extern void T156f8(GE_context* ac, T0* C, T2 a1);
/* [detachable] KL_TEXT_OUTPUT_FILE.put_integer */
extern void T292f36(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_TEXT_OUTPUT_FILE.put_integer_64 */
extern void T292f45(GE_context* ac, T0* C, T7 a1);
/* [detachable] KL_STRING_OUTPUT_STREAM.put_integer */
extern void T255f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_STRING_OUTPUT_STREAM.put_integer_64 */
extern void T255f11(GE_context* ac, T0* C, T7 a1);
/* [detachable] KL_NULL_TEXT_OUTPUT_STREAM.put_integer */
extern void T156f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_NULL_TEXT_OUTPUT_STREAM.put_integer_64 */
extern void T156f10(GE_context* ac, T0* C, T7 a1);
/* [detachable] ET_TUPLE_TYPE.append_runtime_name_to_string */
extern void T247f118(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.append_runtime_name_to_string */
extern void T72f263(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.append_runtime_name_to_string */
extern void T70f124(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.process */
extern void T247f121(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.process */
extern void T72f259(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.process */
extern void T70f128(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.context_add_adapted_base_classes_to_list */
extern void T247f125(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.context_add_adapted_base_classes_to_list */
extern void T72f322(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.context_add_adapted_base_classes_to_list */
extern void T70f135(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.add_adapted_base_classes_to_list */
extern void T247f124(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.add_adapted_base_classes_to_list */
extern void T72f323(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS_TYPE.add_adapted_base_classes_to_list */
extern void T70f133(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TUPLE_TYPE.append_to_string */
extern void T247f120(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.append_to_string */
extern void T72f264(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.append_to_string */
extern void T70f127(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_DISPLAY_HELP_FLAG.reset */
extern void T139f24(GE_context* ac, T0* C);
/* [detachable] AP_INTEGER_OPTION.reset */
extern void T46f28(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] INTEGER_32].make */
extern T0* T155c8(GE_context* ac);
/* [detachable] DS_LINKED_LIST [[attached] INTEGER_32].set_internal_cursor */
extern void T155f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] INTEGER_32].new_cursor */
extern T0* T155f5(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] INTEGER_32].make */
extern T0* T486c3(GE_context* ac, T0* a1);
/* [detachable] AP_BOOLEAN_OPTION.reset */
extern void T45f31(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] BOOLEAN].make */
extern T0* T152c8(GE_context* ac);
/* [detachable] DS_LINKED_LIST [[attached] BOOLEAN].set_internal_cursor */
extern void T152f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] BOOLEAN].new_cursor */
extern T0* T152f5(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST_CURSOR [[attached] BOOLEAN].make */
extern T0* T484c3(GE_context* ac, T0* a1);
/* [detachable] AP_ENUMERATION_OPTION.reset */
extern void T44f31(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [detachable STRING_8].make */
extern T0* T145c13(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [detachable STRING_8].set_internal_cursor */
extern void T145f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable STRING_8].make */
extern T0* T480f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable STRING_8].default_create */
extern T0* T480c3(GE_context* ac);
/* [detachable] AP_FLAG.reset */
extern void T42f22(GE_context* ac, T0* C);
/* [detachable] AP_STRING_OPTION.reset */
extern void T40f30(GE_context* ac, T0* C);
/* [detachable] AP_DISPLAY_HELP_FLAG.record_occurrence */
extern void T139f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_DISPLAY_HELP_FLAG.display_help */
extern void T139f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_DISPLAY_HELP_FLAG.exceptions */
extern T0* T139f17(GE_context* ac, T0* C);
/* [detachable] AP_ERROR_HANDLER.report_info_message */
extern void T143f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_DISPLAY_HELP_FLAG.full_help_text */
extern T0* T139f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_PARSER.full_help_text */
extern T0* T38f35(GE_context* ac, T0* C);
/* [detachable] AP_PARSER.option_help_text */
extern T0* T38f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_QUICK_SORTER [[attached] AP_OPTION].sort */
extern void T1870f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_QUICK_SORTER [[attached] AP_OPTION].sort_with_comparator */
extern void T1870f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] DS_QUICK_SORTER [[attached] AP_OPTION].subsort_with_comparator */
extern void T1870f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].swap */
extern void T140f28(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].replace */
extern void T140f27(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] AP_OPTION_COMPARATOR.less_than */
extern T1 T1869f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] KL_STRING_ROUTINES.three_way_comparison */
extern T6 T83f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] AP_OPTION_COMPARATOR.string_ */
extern T0* T1869f2(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] AP_OPTION].item */
extern T0* T140f16(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_QUICK_SORTER [[attached] AP_OPTION].make */
extern T0* T1870c2(GE_context* ac, T0* a1);
/* [detachable] AP_OPTION_COMPARATOR.default_create */
extern T0* T1869c3(GE_context* ac);
/* [detachable] AP_INTEGER_OPTION.record_occurrence */
extern void T46f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] INTEGER_32].force_last */
extern void T155f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] AP_BOOLEAN_OPTION.record_occurrence */
extern void T45f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_BOOLEAN_OPTION.false_strings */
extern T0* T45f22(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].set_equality_tester */
extern void T142f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_BOOLEAN_OPTION.case_insensitive_string_equality_tester */
extern T0* T45f23(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] STRING_8].has */
extern T1 T142f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_BOOLEAN_OPTION.true_strings */
extern T0* T45f21(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] BOOLEAN].force_last */
extern void T152f10(GE_context* ac, T0* C, T1 a1);
/* detachable DS_LINKABLE [[attached] BOOLEAN].put_right */
extern void T483f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] BOOLEAN].make */
extern T0* T483c3(GE_context* ac, T1 a1);
/* [detachable] AP_ENUMERATION_OPTION.record_occurrence */
extern void T44f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].has */
extern T1 T147f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [detachable STRING_8].force_last */
extern void T145f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable STRING_8].force */
extern void T480f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] DS_ARRAYED_LIST [detachable STRING_8].resize */
extern void T145f20(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable STRING_8].aliased_resized_area */
extern T0* T480f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [detachable STRING_8].new_capacity */
extern T6 T145f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [detachable STRING_8].extendible */
extern T1 T145f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] AP_FLAG.record_occurrence */
extern void T42f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_STRING_OPTION.record_occurrence */
extern void T40f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_STRING_INPUT_STREAM.close */
extern void T1404f10(GE_context* ac, T0* C);
/* [detachable] KL_STDIN_FILE.close */
extern void T897f13(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_INPUT_STREAM.close */
extern void T863f38(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.close */
extern void T31f62(GE_context* ac, T0* C);
/* [detachable] KL_STRING_INPUT_STREAM.read_character */
extern void T1404f11(GE_context* ac, T0* C);
/* [detachable] KL_STDIN_FILE.read_character */
extern void T897f14(GE_context* ac, T0* C);
/* [detachable] CONSOLE.read_character */
extern void T884f30(GE_context* ac, T0* C);
/* [detachable] CONSOLE.console_readchar */
extern T2 T884f14(GE_context* ac, T0* C, T14 a1);
/* [detachable] CONSOLE.end_of_file */
extern T1 T884f11(GE_context* ac, T0* C);
/* [detachable] CONSOLE.console_eof */
extern T1 T884f13(GE_context* ac, T0* C, T14 a1);
/* [detachable] KL_STDIN_FILE.console */
extern T0* T897f7(GE_context* ac, T0* C);
/* [detachable] STD_FILES.input */
extern T0* T351f5(GE_context* ac, T0* C);
/* [detachable] CONSOLE.make_open_stdin */
extern T0* T884c29(GE_context* ac, T0* a1);
/* [detachable] CONSOLE.set_read_mode */
extern void T884f32(GE_context* ac, T0* C);
/* [detachable] KL_STDIN_FILE.io */
extern T0* T897f9(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_INPUT_STREAM.read_character */
extern void T863f32(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_QUEUE [[attached] CHARACTER_8].remove */
extern void T1551f6(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_QUEUE [[attached] CHARACTER_8].wipe_out */
extern void T1551f8(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_INPUT_STREAM.noqueue_read_character */
extern void T863f34(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_INPUT_STREAM.utf16_read_character */
extern void T863f36(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_INPUT_STREAM.append_character */
extern void T863f37(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_LINKED_QUEUE [[attached] CHARACTER_8].force */
extern void T1551f7(GE_context* ac, T0* C, T2 a1);
/* detachable DS_LINKABLE [[attached] CHARACTER_8].put_right */
extern void T1825f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] CHARACTER_8].make */
extern T0* T1825c3(GE_context* ac, T2 a1);
/* [detachable] XM_EIFFEL_INPUT_STREAM.utf8 */
extern T0* T863f22(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_INPUT_STREAM.utf8_buffer */
extern T0* T863f25(GE_context* ac, T0* C);
/* [detachable] UC_UTF16_ROUTINES.surrogate */
extern T6 T1552f7(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] UC_UTF16_ROUTINES.is_low_surrogate */
extern T1 T1552f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF16_ROUTINES.least_10_bits */
extern T6 T1552f5(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] UC_UTF16_ROUTINES.is_high_surrogate */
extern T1 T1552f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF16_ROUTINES.is_surrogate */
extern T1 T1552f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] XM_EIFFEL_INPUT_STREAM.utf16 */
extern T0* T863f20(GE_context* ac, T0* C);
/* [detachable] UC_UTF16_ROUTINES.default_create */
extern T0* T1552c16(GE_context* ac);
/* [detachable] XM_EIFFEL_INPUT_STREAM.least_significant */
extern T6 T863f24(GE_context* ac, T0* C, T2 a1, T2 a2);
/* [detachable] XM_EIFFEL_INPUT_STREAM.most_significant */
extern T6 T863f23(GE_context* ac, T0* C, T2 a1, T2 a2);
/* [detachable] XM_EIFFEL_INPUT_STREAM.latin1_read_character */
extern void T863f35(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_INPUT_STREAM.utf16_detect_read_character */
extern void T863f33(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_ROUTINES.is_endian_detection_character */
extern T1 T861f31(GE_context* ac, T0* C, T2 a1, T2 a2, T2 a3);
/* [detachable] UC_UTF8_ROUTINES.is_endian_detection_character_start */
extern T1 T861f30(GE_context* ac, T0* C, T2 a1, T2 a2);
/* [detachable] UC_UTF16_ROUTINES.is_endian_detection_character_least_first */
extern T1 T1552f2(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] UC_UTF16_ROUTINES.is_endian_detection_character_most_first */
extern T1 T1552f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] KL_TEXT_INPUT_FILE.read_character */
extern void T31f67(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.old_read_character */
extern void T31f71(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.file_gc */
extern T2 T31f26(GE_context* ac, T0* C, T14 a1);
/* [detachable] SERIALIZATION_FAILURE.set_throwing_exception */
extern void T120f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ADDRESS_APPLIED_TO_MELTED_FEATURE.set_throwing_exception */
extern void T119f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DEVELOPER_EXCEPTION.set_throwing_exception */
extern void T118f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] MISMATCH_FAILURE.set_throwing_exception */
extern void T117f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_throwing_exception */
extern void T116f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] VOID_ASSIGNED_TO_EXPANDED.set_throwing_exception */
extern void T115f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] EXTERNAL_FAILURE.set_throwing_exception */
extern void T114f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] CREATE_ON_DEFERRED.set_throwing_exception */
extern void T113f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] RESUMPTION_FAILURE.set_throwing_exception */
extern void T112f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] RESCUE_FAILURE.set_throwing_exception */
extern void T111f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] LOOP_INVARIANT_VIOLATION.set_throwing_exception */
extern void T110f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] VARIANT_VIOLATION.set_throwing_exception */
extern void T109f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] BAD_INSPECT_VALUE.set_throwing_exception */
extern void T108f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] CHECK_VIOLATION.set_throwing_exception */
extern void T107f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] FLOATING_POINT_FAILURE.set_throwing_exception */
extern void T106f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] POSTCONDITION_VIOLATION.set_throwing_exception */
extern void T105f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] PRECONDITION_VIOLATION.set_throwing_exception */
extern void T104f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] EIFFEL_RUNTIME_PANIC.set_throwing_exception */
extern void T102f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] COM_FAILURE.set_throwing_exception */
extern void T101f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] OPERATING_SYSTEM_FAILURE.set_throwing_exception */
extern void T100f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] IO_FAILURE.set_throwing_exception */
extern void T99f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] OPERATING_SYSTEM_SIGNAL_FAILURE.set_throwing_exception */
extern void T98f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] INVARIANT_VIOLATION.set_throwing_exception */
extern void T97f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] NO_MORE_MEMORY.set_throwing_exception */
extern void T96f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] OLD_VIOLATION.set_throwing_exception */
extern void T94f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ROUTINE_FAILURE.set_throwing_exception */
extern void T92f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] VOID_TARGET.set_throwing_exception */
extern void T90f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] SERIALIZATION_FAILURE.set_exception_trace */
extern void T120f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ADDRESS_APPLIED_TO_MELTED_FEATURE.set_exception_trace */
extern void T119f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DEVELOPER_EXCEPTION.set_exception_trace */
extern void T118f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] MISMATCH_FAILURE.set_exception_trace */
extern void T117f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_exception_trace */
extern void T116f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] VOID_ASSIGNED_TO_EXPANDED.set_exception_trace */
extern void T115f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] EXTERNAL_FAILURE.set_exception_trace */
extern void T114f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] CREATE_ON_DEFERRED.set_exception_trace */
extern void T113f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] RESUMPTION_FAILURE.set_exception_trace */
extern void T112f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] RESCUE_FAILURE.set_exception_trace */
extern void T111f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] LOOP_INVARIANT_VIOLATION.set_exception_trace */
extern void T110f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] VARIANT_VIOLATION.set_exception_trace */
extern void T109f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] BAD_INSPECT_VALUE.set_exception_trace */
extern void T108f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] CHECK_VIOLATION.set_exception_trace */
extern void T107f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] FLOATING_POINT_FAILURE.set_exception_trace */
extern void T106f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] POSTCONDITION_VIOLATION.set_exception_trace */
extern void T105f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] PRECONDITION_VIOLATION.set_exception_trace */
extern void T104f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] EIFFEL_RUNTIME_PANIC.set_exception_trace */
extern void T102f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] COM_FAILURE.set_exception_trace */
extern void T101f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] OPERATING_SYSTEM_FAILURE.set_exception_trace */
extern void T100f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] IO_FAILURE.set_exception_trace */
extern void T99f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] OPERATING_SYSTEM_SIGNAL_FAILURE.set_exception_trace */
extern void T98f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] INVARIANT_VIOLATION.set_exception_trace */
extern void T97f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] NO_MORE_MEMORY.set_exception_trace */
extern void T96f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] OLD_VIOLATION.set_exception_trace */
extern void T94f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ROUTINE_FAILURE.set_exception_trace */
extern void T92f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] VOID_TARGET.set_exception_trace */
extern void T90f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] SERIALIZATION_FAILURE.set_description */
extern void T120f9(GE_context* ac, T0* C, T0* a1);
/* detachable C_STRING.set_count */
extern void T29f8(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.utf_32_string_into_utf_8_0_pointer */
extern void T462f12(GE_context* ac, T462* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* [detachable] ADDRESS_APPLIED_TO_MELTED_FEATURE.set_description */
extern void T119f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] DEVELOPER_EXCEPTION.set_description */
extern void T118f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] MISMATCH_FAILURE.set_description */
extern void T117f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_description */
extern void T116f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] VOID_ASSIGNED_TO_EXPANDED.set_description */
extern void T115f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] EXTERNAL_FAILURE.set_description */
extern void T114f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] CREATE_ON_DEFERRED.set_description */
extern void T113f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] RESUMPTION_FAILURE.set_description */
extern void T112f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] RESCUE_FAILURE.set_description */
extern void T111f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] LOOP_INVARIANT_VIOLATION.set_description */
extern void T110f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] VARIANT_VIOLATION.set_description */
extern void T109f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] BAD_INSPECT_VALUE.set_description */
extern void T108f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] CHECK_VIOLATION.set_description */
extern void T107f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] FLOATING_POINT_FAILURE.set_description */
extern void T106f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] POSTCONDITION_VIOLATION.set_description */
extern void T105f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] PRECONDITION_VIOLATION.set_description */
extern void T104f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] EIFFEL_RUNTIME_PANIC.set_description */
extern void T102f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] COM_FAILURE.set_description */
extern void T101f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] OPERATING_SYSTEM_FAILURE.set_description */
extern void T100f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] IO_FAILURE.set_description */
extern void T99f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] OPERATING_SYSTEM_SIGNAL_FAILURE.set_description */
extern void T98f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] INVARIANT_VIOLATION.set_description */
extern void T97f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] NO_MORE_MEMORY.set_description */
extern void T96f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] OLD_VIOLATION.set_description */
extern void T94f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ROUTINE_FAILURE.set_description */
extern void T92f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] VOID_TARGET.set_description */
extern void T90f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] SERIALIZATION_FAILURE.set_recipient_name */
extern void T120f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ADDRESS_APPLIED_TO_MELTED_FEATURE.set_recipient_name */
extern void T119f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DEVELOPER_EXCEPTION.set_recipient_name */
extern void T118f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] MISMATCH_FAILURE.set_recipient_name */
extern void T117f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_recipient_name */
extern void T116f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] VOID_ASSIGNED_TO_EXPANDED.set_recipient_name */
extern void T115f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] EXTERNAL_FAILURE.set_recipient_name */
extern void T114f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] CREATE_ON_DEFERRED.set_recipient_name */
extern void T113f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] RESUMPTION_FAILURE.set_recipient_name */
extern void T112f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] RESCUE_FAILURE.set_recipient_name */
extern void T111f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] LOOP_INVARIANT_VIOLATION.set_recipient_name */
extern void T110f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] VARIANT_VIOLATION.set_recipient_name */
extern void T109f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] BAD_INSPECT_VALUE.set_recipient_name */
extern void T108f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] CHECK_VIOLATION.set_recipient_name */
extern void T107f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] FLOATING_POINT_FAILURE.set_recipient_name */
extern void T106f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] POSTCONDITION_VIOLATION.set_recipient_name */
extern void T105f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] PRECONDITION_VIOLATION.set_recipient_name */
extern void T104f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] EIFFEL_RUNTIME_PANIC.set_recipient_name */
extern void T102f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] COM_FAILURE.set_recipient_name */
extern void T101f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] OPERATING_SYSTEM_FAILURE.set_recipient_name */
extern void T100f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] IO_FAILURE.set_recipient_name */
extern void T99f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] OPERATING_SYSTEM_SIGNAL_FAILURE.set_recipient_name */
extern void T98f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] INVARIANT_VIOLATION.set_recipient_name */
extern void T97f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] NO_MORE_MEMORY.set_recipient_name */
extern void T96f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] OLD_VIOLATION.set_recipient_name */
extern void T94f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ROUTINE_FAILURE.set_recipient_name */
extern void T92f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] VOID_TARGET.set_recipient_name */
extern void T90f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] SERIALIZATION_FAILURE.set_type_name */
extern void T120f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ADDRESS_APPLIED_TO_MELTED_FEATURE.set_type_name */
extern void T119f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] DEVELOPER_EXCEPTION.set_type_name */
extern void T118f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] MISMATCH_FAILURE.set_type_name */
extern void T117f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_type_name */
extern void T116f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] VOID_ASSIGNED_TO_EXPANDED.set_type_name */
extern void T115f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] EXTERNAL_FAILURE.set_type_name */
extern void T114f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] CREATE_ON_DEFERRED.set_type_name */
extern void T113f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] RESUMPTION_FAILURE.set_type_name */
extern void T112f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] RESCUE_FAILURE.set_type_name */
extern void T111f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] LOOP_INVARIANT_VIOLATION.set_type_name */
extern void T110f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] VARIANT_VIOLATION.set_type_name */
extern void T109f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] BAD_INSPECT_VALUE.set_type_name */
extern void T108f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] CHECK_VIOLATION.set_type_name */
extern void T107f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] FLOATING_POINT_FAILURE.set_type_name */
extern void T106f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] POSTCONDITION_VIOLATION.set_type_name */
extern void T105f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] PRECONDITION_VIOLATION.set_type_name */
extern void T104f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] EIFFEL_RUNTIME_PANIC.set_type_name */
extern void T102f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] COM_FAILURE.set_type_name */
extern void T101f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] OPERATING_SYSTEM_FAILURE.set_type_name */
extern void T100f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] IO_FAILURE.set_type_name */
extern void T99f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] OPERATING_SYSTEM_SIGNAL_FAILURE.set_type_name */
extern void T98f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] INVARIANT_VIOLATION.set_type_name */
extern void T97f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] NO_MORE_MEMORY.set_type_name */
extern void T96f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] OLD_VIOLATION.set_type_name */
extern void T94f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ROUTINE_FAILURE.set_type_name */
extern void T92f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] VOID_TARGET.set_type_name */
extern void T90f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_SYMBOL_TRANSITION [[attached] LX_NFA_STATE].labeled */
extern T1 T2081f3(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_EPSILON_TRANSITION [[attached] LX_NFA_STATE].labeled */
extern T1 T2079f2(GE_context* ac, T0* C, T6 a1);
/* [detachable] LX_SYMBOL_CLASS_TRANSITION [[attached] LX_NFA_STATE].labeled */
extern T1 T2077f3(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CREATE_INSTRUCTION.position */
extern T0* T1462f9(GE_context* ac, T0* C);
/* detachable ET_BANG_INSTRUCTION.position */
extern T0* T1461f8(GE_context* ac, T0* C);
/* detachable ET_UNQUALIFIED_CALL_INSTRUCTION.target */
extern T0* T1682f5(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.target */
extern T0* T278f16(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_FROM_EXPRESSION.arguments */
extern T0* T1972f14(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_INSTRUCTION.name */
extern T0* T1466f7(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.name */
extern T0* T1217f11(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL.name */
extern T0* T320f3(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.name */
extern T0* T1455f39(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.name */
extern T0* T1454f35(GE_context* ac, T0* C);
/* detachable ET_ASSIGNER_INSTRUCTION.target */
extern T0* T1456f7(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infix_freeop */
extern T1 T1447f13(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_infix_freeop */
extern T1 T1444f29(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_infix_freeop */
extern T1 T938f25(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.operator_name */
extern T0* T1447f14(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.operator_name */
extern T0* T1444f17(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.operator_name */
extern T0* T849f8(GE_context* ac, T0* C);
/* detachable ET_AGENT_KEYWORD.position */
extern T0* T917f9(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.kind_lower_name */
extern T0* T809f94(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.kind_lower_name */
extern T0* T759f65(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.kind_lower_name */
extern T0* T182f103(GE_context* ac, T0* C);
/* [detachable] ET_NONE_GROUP.full_name */
extern T0* T844f17(GE_context* ac, T0* C, T2 a1);
/* [detachable] ET_NONE_GROUP.relative_name */
extern T0* T844f21(GE_context* ac, T0* C, T0* a1, T2 a2);
/* [detachable] ET_NONE_GROUP.string_ */
extern T0* T844f15(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.relative_name */
extern T0* T35f128(GE_context* ac, T0* C, T0* a1, T2 a2);
/* detachable ET_SYSTEM.string_ */
extern T0* T35f121(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].is_empty */
extern T1 T870f10(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.relative_name */
extern T0* T55f153(GE_context* ac, T0* C, T0* a1, T2 a2);
/* [detachable] ET_ECF_SYSTEM.string_ */
extern T0* T55f149(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.full_name */
extern T0* T759f62(GE_context* ac, T0* C, T2 a1);
/* detachable ET_ECF_CLUSTER.relative_name */
extern T0* T759f66(GE_context* ac, T0* C, T0* a1, T2 a2);
/* detachable ET_ECF_CLUSTER.relative_name */
extern T0* T759f66p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* [detachable] ET_ECF_LIBRARY.relative_name */
extern T0* T182f111(GE_context* ac, T0* C, T0* a1, T2 a2);
/* [detachable] ET_ECF_LIBRARY.string_ */
extern T0* T182f114(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.full_name */
extern T0* T399f18(GE_context* ac, T0* C, T2 a1);
/* [detachable] ET_UNKNOWN_GROUP.relative_name */
extern T0* T399f22(GE_context* ac, T0* C, T0* a1, T2 a2);
/* [detachable] ET_UNKNOWN_GROUP.string_ */
extern T0* T399f17(GE_context* ac, T0* C);
/* [detachable] ET_NONE_GROUP.parent */
extern T0* T844f18(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.parent */
extern T0* T399f19(GE_context* ac, T0* C);
/* [detachable] ET_NONE_GROUP.absolute_pathname */
extern T0* T844f19(GE_context* ac, T0* C);
/* [detachable] ET_NONE_GROUP.file_system */
extern T0* T844f25(GE_context* ac, T0* C);
/* [detachable] ET_NONE_GROUP.unix_file_system */
extern T0* T844f29(GE_context* ac, T0* C);
/* [detachable] ET_NONE_GROUP.windows_file_system */
extern T0* T844f28(GE_context* ac, T0* C);
/* [detachable] ET_NONE_GROUP.operating_system */
extern T0* T844f27(GE_context* ac, T0* C);
/* [detachable] ET_NONE_GROUP.full_pathname */
extern T0* T844f24(GE_context* ac, T0* C);
/* [detachable] ET_NONE_GROUP.pathname */
extern T0* T844f26(GE_context* ac, T0* C);
/* [detachable] ET_NONE_GROUP.execution_environment */
extern T0* T844f23(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.absolute_pathname */
extern T0* T759f63(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.execution_environment */
extern T0* T759f68(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.absolute_pathname */
extern T0* T399f20(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.file_system */
extern T0* T399f26(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.unix_file_system */
extern T0* T399f30(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.windows_file_system */
extern T0* T399f29(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.operating_system */
extern T0* T399f28(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.full_pathname */
extern T0* T399f25(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.pathname */
extern T0* T399f27(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.execution_environment */
extern T0* T399f24(GE_context* ac, T0* C);
/* [detachable] ET_AST_NULL_LEAF.last_position */
extern T0* T2018f4(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.last_position */
extern T0* T1422f41(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.last_position */
extern T0* T1421f41(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.last_position */
extern T0* T1420f38(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.last_position */
extern T0* T1419f38(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.last_position */
extern T0* T1417f40(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.last_position */
extern T0* T1416f40(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.last_position */
extern T0* T1415f62(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.last_position */
extern T0* T1414f62(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.last_position */
extern T0* T1413f62(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.last_position */
extern T0* T1412f62(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.last_position */
extern T0* T1411f31(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.last_position */
extern T0* T1410f35(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.last_position */
extern T0* T1409f42(GE_context* ac, T0* C);
/* detachable ET_VOID.last_position */
extern T0* T962f28(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_KEYWORD.last_position */
extern T0* T920f20(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.last_position */
extern T0* T848f31(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.last_position */
extern T0* T602f107(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.last_position */
extern T0* T402f41(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.last_position */
extern T0* T360f62(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.last_position */
extern T0* T342f41(GE_context* ac, T0* C);
/* [detachable] ET_RESULT.last_position */
extern T0* T300f29(GE_context* ac, T0* C);
/* [detachable] ET_CURRENT.last_position */
extern T0* T272f28(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.last_position */
extern T0* T179f99(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.is_once_per_process */
extern T1 T1484f24(GE_context* ac, T0* C);
/* [detachable] ET_STANDARD_ONCE_KEYS.has_process_key */
extern T1 T1780f1(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.is_once_per_process */
extern T1 T1483f22(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.is_once_per_process */
extern T1 T1481f25(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.is_once_per_process */
extern T1 T1480f23(GE_context* ac, T0* C);
/* [detachable] ET_REDECLARED_FEATURE.selected_count */
extern T6 T1497f25(GE_context* ac, T0* C);
/* [detachable] ET_INHERITED_FEATURE.selected_count */
extern T6 T1290f27(GE_context* ac, T0* C);
/* [detachable] ET_REDECLARED_FEATURE.has_replication */
extern T1 T1497f22(GE_context* ac, T0* C);
/* [detachable] ET_INHERITED_FEATURE.has_replication */
extern T1 T1290f24(GE_context* ac, T0* C);
/* [detachable] ET_REPLICATED_FEATURE.replicated_feature */
extern T0* T1611f4(GE_context* ac, T0* C);
/* [detachable] ET_REDECLARED_FEATURE.replicated_feature */
extern T0* T1497f23(GE_context* ac, T0* C);
/* [detachable] ET_INHERITED_FEATURE.replicated_feature */
extern T0* T1290f25(GE_context* ac, T0* C);
/* [detachable] ET_REPLICATED_FEATURE.first_feature */
extern T0* T1611f5(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].first */
extern T0* T1612f8(GE_context* ac, T0* C);
/* [detachable] ET_REDECLARED_FEATURE.first_feature */
extern T0* T1497f24(GE_context* ac, T0* C);
/* [detachable] ET_INHERITED_FEATURE.first_feature */
extern T0* T1290f26(GE_context* ac, T0* C);
/* detachable ET_TAGGED_ASSERTION.position */
extern T0* T1490f6(GE_context* ac, T0* C);
/* detachable ET_CLASS_ASSERTION.position */
extern T0* T1450f6(GE_context* ac, T0* C);
/* detachable ET_TAGGED_ASSERTION.assertion */
extern T0* T1490f3(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1485f21(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1484f26(GE_context* ac, T0* C);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1483f24(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1482f22(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1481f27(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1480f25(GE_context* ac, T0* C);
/* detachable ET_ONCE_MANIFEST_STRING.assertion */
extern T0* T1479f12(GE_context* ac, T0* C);
/* detachable ET_OLD_OBJECT_TEST.assertion */
extern T0* T1478f17(GE_context* ac, T0* C);
/* detachable ET_OLD_EXPRESSION.assertion */
extern T0* T1477f10(GE_context* ac, T0* C);
/* detachable ET_PREFIX_EXPRESSION.assertion */
extern T0* T1476f12(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_TYPE.assertion */
extern T0* T1475f11(GE_context* ac, T0* C);
/* detachable ET_INFIX_EXPRESSION.assertion */
extern T0* T1472f12(GE_context* ac, T0* C);
/* detachable ET_EXPRESSION_ADDRESS.assertion */
extern T0* T1471f10(GE_context* ac, T0* C);
/* detachable ET_RESULT_ADDRESS.assertion */
extern T0* T1470f10(GE_context* ac, T0* C);
/* detachable ET_CURRENT_ADDRESS.assertion */
extern T0* T1469f10(GE_context* ac, T0* C);
/* detachable ET_FEATURE_ADDRESS.assertion */
extern T0* T1468f10(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_EXPRESSION.assertion */
extern T0* T1467f14(GE_context* ac, T0* C);
/* detachable ET_CLASS_ASSERTION.assertion */
extern T0* T1450f3(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.assertion */
extern T0* T1422f20(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.assertion */
extern T0* T1421f20(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.assertion */
extern T0* T1420f21(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.assertion */
extern T0* T1419f21(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.assertion */
extern T0* T1417f22(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.assertion */
extern T0* T1416f22(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.assertion */
extern T0* T1415f34(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.assertion */
extern T0* T1414f34(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.assertion */
extern T0* T1413f34(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.assertion */
extern T0* T1412f34(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.assertion */
extern T0* T1411f11(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.assertion */
extern T0* T1410f11(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.assertion */
extern T0* T1409f9(GE_context* ac, T0* C);
/* detachable ET_STRIP_EXPRESSION.assertion */
extern T0* T1220f16(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.assertion */
extern T0* T1217f14(GE_context* ac, T0* C);
/* detachable ET_PARENTHESIZED_EXPRESSION.assertion */
extern T0* T1188f12(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_ARRAY.assertion */
extern T0* T1174f17(GE_context* ac, T0* C);
/* detachable ET_IF_EXPRESSION.assertion */
extern T0* T1127f16(GE_context* ac, T0* C);
/* detachable ET_CALL_AGENT.assertion */
extern T0* T1003f15(GE_context* ac, T0* C);
/* detachable ET_BRACKET_EXPRESSION.assertion */
extern T0* T1000f12(GE_context* ac, T0* C);
/* detachable ET_ACROSS_EXPRESSION.assertion */
extern T0* T973f21(GE_context* ac, T0* C);
/* detachable ET_VOID.assertion */
extern T0* T962f18(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.assertion */
extern T0* T848f21(GE_context* ac, T0* C);
/* [detachable] ET_NAMED_OBJECT_TEST.assertion */
extern T0* T709f14(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.assertion */
extern T0* T360f36(GE_context* ac, T0* C);
/* [detachable] ET_CREATE_EXPRESSION.assertion */
extern T0* T319f14(GE_context* ac, T0* C);
/* [detachable] ET_EQUALITY_EXPRESSION.assertion */
extern T0* T309f10(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.assertion */
extern T0* T308f10(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST.assertion */
extern T0* T307f11(GE_context* ac, T0* C);
/* [detachable] ET_RESULT.assertion */
extern T0* T300f19(GE_context* ac, T0* C);
/* [detachable] ET_MANIFEST_TUPLE.assertion */
extern T0* T280f17(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T278f10(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T277f14(GE_context* ac, T0* C);
/* [detachable] ET_CURRENT.assertion */
extern T0* T272f19(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.assertion */
extern T0* T179f78(GE_context* ac, T0* C);
/* [detachable] ET_BASE_TYPE_RENAME_CONSTRAINT.base_type_index_of_label */
extern T6 T1772f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TUPLE_TYPE.adapted_class_base_type_index_of_label */
extern T6 T247f113(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.adapted_class_base_type_index_of_label */
extern T6 T72f242(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_NESTED_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T236f49(GE_context* ac, T0* C, T0* a1);
extern T1 T236f49ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS_TYPE.adapted_class_base_type_index_of_label */
extern T6 T70f113(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_BASE_TYPE_RENAME_CONSTRAINT.named_procedure */
extern T0* T1772f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.named_procedure */
extern T0* T247f114(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.named_procedure */
extern T0* T72f88(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PROCEDURE_LIST.named_feature */
extern T0* T253f5(GE_context* ac, T0* C, T0* a1);
extern T1 T253f5ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS_TYPE.named_procedure */
extern T0* T70f103(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BASE_TYPE_RENAME_CONSTRAINT.named_query */
extern T0* T1772f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.named_query */
extern T0* T247f112(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.named_query */
extern T0* T72f87(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_QUERY_LIST.named_feature */
extern T0* T252f6(GE_context* ac, T0* C, T0* a1);
extern T1 T252f6ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS_TYPE.named_query */
extern T0* T70f100(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REDECLARED_FEATURE.immediate_feature */
extern T0* T1497f10(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.flattened_immediate_feature */
extern T0* T1442f57(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.flattened_immediate_feature */
extern T0* T1441f52(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.flattened_immediate_feature */
extern T0* T1439f55(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.flattened_immediate_feature */
extern T0* T1438f59(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.flattened_immediate_feature */
extern T0* T1437f57(GE_context* ac, T0* C);
/* [detachable] ET_INHERITED_FEATURE.immediate_feature */
extern T0* T1290f11(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.flattened_immediate_feature */
extern T0* T458f48(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.flattened_immediate_feature */
extern T0* T456f51(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.flattened_immediate_feature */
extern T0* T361f34(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.flattened_immediate_feature */
extern T0* T359f36(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.flattened_immediate_feature */
extern T0* T357f35(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.flattened_immediate_feature */
extern T0* T328f37(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.flattened_immediate_feature */
extern T0* T246f37(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.flattened_feature */
extern T0* T1442f55(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.flattened_feature */
extern T0* T1441f50(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.flattened_feature */
extern T0* T1439f53(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.flattened_feature */
extern T0* T1438f57(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.flattened_feature */
extern T0* T1437f55(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.flattened_feature */
extern T0* T458f46(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.flattened_feature */
extern T0* T456f49(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.flattened_feature */
extern T0* T361f32(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.flattened_feature */
extern T0* T359f34(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.flattened_feature */
extern T0* T357f33(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.flattened_feature */
extern T0* T328f35(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.flattened_feature */
extern T0* T246f35(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_flattened_redeclared */
extern T1 T1442f59(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.is_flattened_redeclared */
extern T1 T1441f54(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.is_flattened_redeclared */
extern T1 T1439f57(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.is_flattened_redeclared */
extern T1 T1438f61(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.is_flattened_redeclared */
extern T1 T1437f59(GE_context* ac, T0* C);
/* [detachable] ET_INHERITED_FEATURE.is_redeclared */
extern T1 T1290f13(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.is_flattened_redeclared */
extern T1 T458f50(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.is_flattened_redeclared */
extern T1 T456f53(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.is_flattened_redeclared */
extern T1 T361f36(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_flattened_redeclared */
extern T1 T359f38(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_flattened_redeclared */
extern T1 T357f37(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.is_flattened_redeclared */
extern T1 T328f39(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_flattened_redeclared */
extern T1 T246f39(GE_context* ac, T0* C);
/* [detachable] ET_REDECLARED_FEATURE.redeclared_feature */
extern T0* T1497f13(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.flattened_redeclared_feature */
extern T0* T1442f60(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.flattened_redeclared_feature */
extern T0* T1441f55(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.flattened_redeclared_feature */
extern T0* T1439f58(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.flattened_redeclared_feature */
extern T0* T1438f62(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.flattened_redeclared_feature */
extern T0* T1437f60(GE_context* ac, T0* C);
/* [detachable] ET_INHERITED_FEATURE.redeclared_feature */
extern T0* T1290f14(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.flattened_redeclared_feature */
extern T0* T458f51(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.flattened_redeclared_feature */
extern T0* T456f54(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T361f37(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T359f39(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T357f38(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T328f40(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.flattened_redeclared_feature */
extern T0* T246f40(GE_context* ac, T0* C);
/* [detachable] ET_REDECLARED_FEATURE.is_inherited */
extern T1 T1497f14(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_flattened_inherited */
extern T1 T1442f61(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.is_flattened_inherited */
extern T1 T1441f56(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.is_flattened_inherited */
extern T1 T1439f59(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.is_flattened_inherited */
extern T1 T1438f63(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.is_flattened_inherited */
extern T1 T1437f61(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.is_flattened_inherited */
extern T1 T458f52(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.is_flattened_inherited */
extern T1 T456f55(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.is_flattened_inherited */
extern T1 T361f38(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_flattened_inherited */
extern T1 T359f40(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_flattened_inherited */
extern T1 T357f39(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.is_flattened_inherited */
extern T1 T328f41(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_flattened_inherited */
extern T1 T246f41(GE_context* ac, T0* C);
/* [detachable] ET_REDECLARED_FEATURE.inherited_feature */
extern T0* T1497f15(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.flattened_inherited_feature */
extern T0* T1442f62(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.flattened_inherited_feature */
extern T0* T1441f57(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.flattened_inherited_feature */
extern T0* T1439f60(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.flattened_inherited_feature */
extern T0* T1438f64(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.flattened_inherited_feature */
extern T0* T1437f62(GE_context* ac, T0* C);
/* [detachable] ET_INHERITED_FEATURE.inherited_feature */
extern T0* T1290f16(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.flattened_inherited_feature */
extern T0* T458f53(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.flattened_inherited_feature */
extern T0* T456f56(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.flattened_inherited_feature */
extern T0* T361f39(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.flattened_inherited_feature */
extern T0* T359f41(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.flattened_inherited_feature */
extern T0* T357f40(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.flattened_inherited_feature */
extern T0* T328f42(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.flattened_inherited_feature */
extern T0* T246f42(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_flattened_adapted */
extern T1 T1442f63(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.is_flattened_adapted */
extern T1 T1441f58(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.is_flattened_adapted */
extern T1 T1439f61(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.is_flattened_adapted */
extern T1 T1438f65(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.is_flattened_adapted */
extern T1 T1437f63(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.is_flattened_adapted */
extern T1 T458f54(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.is_flattened_adapted */
extern T1 T456f57(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.is_flattened_adapted */
extern T1 T361f40(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_flattened_adapted */
extern T1 T359f42(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_flattened_adapted */
extern T1 T357f41(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.is_flattened_adapted */
extern T1 T328f43(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_flattened_adapted */
extern T1 T246f43(GE_context* ac, T0* C);
/* [detachable] ET_REDECLARED_FEATURE.adapted_feature */
extern T0* T1497f11(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.flattened_adapted_feature */
extern T0* T1442f58(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.flattened_adapted_feature */
extern T0* T1441f53(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.flattened_adapted_feature */
extern T0* T1439f56(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.flattened_adapted_feature */
extern T0* T1438f60(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.flattened_adapted_feature */
extern T0* T1437f58(GE_context* ac, T0* C);
/* [detachable] ET_INHERITED_FEATURE.adapted_feature */
extern T0* T1290f12(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.flattened_adapted_feature */
extern T0* T458f49(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.flattened_adapted_feature */
extern T0* T456f52(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.flattened_adapted_feature */
extern T0* T361f35(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.flattened_adapted_feature */
extern T0* T359f37(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.flattened_adapted_feature */
extern T0* T357f36(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.flattened_adapted_feature */
extern T0* T328f38(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.flattened_adapted_feature */
extern T0* T246f38(GE_context* ac, T0* C);
/* [detachable] ET_BASE_TYPE_RENAME_CONSTRAINT.named_feature */
extern T0* T1772f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.named_feature */
extern T0* T247f111(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.named_feature */
extern T0* T72f175(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.named_feature */
extern T0* T70f99(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BASE_TYPE_RENAME_CONSTRAINT.base_class */
extern T0* T1772f7(GE_context* ac, T0* C);
/* [detachable] ET_BASE_TYPE_RENAME_CONSTRAINT.types_to_text */
extern T0* T1772f5(GE_context* ac, T0* C);
/* [detachable] ET_BASE_TYPE_RENAME_CONSTRAINT.append_types_to_string */
extern void T1772f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BASE_TYPE_CONSTRAINT_LIST.types_to_text */
extern T0* T1587f8(GE_context* ac, T0* C);
/* [detachable] ET_BASE_TYPE_CONSTRAINT_LIST.append_types_to_string */
extern void T1587f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BASE_TYPE_RENAME_CONSTRAINT.conforms_to_type_with_type_marks */
extern T1 T1772f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_BASE_TYPE_CONSTRAINT_LIST.conforms_to_type_with_type_marks */
extern T1 T1587f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_BASE_TYPE_RENAME_CONSTRAINT.type_constraint */
extern T0* T1772f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_BASE_TYPE_CONSTRAINT_LIST.type_constraint */
extern T0* T1587f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_BASE_TYPE_CONSTRAINT_LIST.item */
extern T0* T1587f10(GE_context* ac, T0* C, T6 a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.types_to_text */
extern T0* T1455f73(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.append_types_to_string */
extern void T1455f90(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.types_to_text */
extern T0* T1454f76(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.append_types_to_string */
extern void T1454f96(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.types_to_text */
extern T0* T1453f74(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.append_types_to_string */
extern void T1453f96(GE_context* ac, T0* C, T0* a1);
/* detachable ET_TYPE_RENAME_CONSTRAINT.types_to_text */
extern T0* T1428f5(GE_context* ac, T0* C);
/* detachable ET_TYPE_RENAME_CONSTRAINT.append_types_to_string */
extern void T1428f12(GE_context* ac, T0* C, T0* a1);
/* detachable ET_TYPE_CONSTRAINT_LIST.types_to_text */
extern T0* T1231f9(GE_context* ac, T0* C);
/* detachable ET_TYPE_CONSTRAINT_LIST.append_types_to_string */
extern void T1231f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIKE_CURRENT.types_to_text */
extern T0* T432f71(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_CURRENT.append_types_to_string */
extern void T432f88(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.types_to_text */
extern T0* T247f105(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.append_types_to_string */
extern void T247f127(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.types_to_text */
extern T0* T245f70(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.append_types_to_string */
extern void T245f84(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.types_to_text */
extern T0* T72f243(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.append_types_to_string */
extern void T72f325(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.types_to_text */
extern T0* T70f94(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.append_types_to_string */
extern void T70f134(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.type_constraint */
extern T0* T1455f72(GE_context* ac, T0* C, T6 a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.type_constraint */
extern T0* T1454f75(GE_context* ac, T0* C, T6 a1);
/* detachable ET_LIKE_FEATURE.type_constraint */
extern T0* T1453f73(GE_context* ac, T0* C, T6 a1);
/* detachable ET_TYPE_RENAME_CONSTRAINT.type_constraint */
extern T0* T1428f4(GE_context* ac, T0* C, T6 a1);
/* detachable ET_TYPE_CONSTRAINT_LIST.type_constraint */
extern T0* T1231f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_LIKE_CURRENT.type_constraint */
extern T0* T432f70(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TUPLE_TYPE.type_constraint */
extern T0* T247f104(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.type_constraint */
extern T0* T245f69(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLASS.type_constraint */
extern T0* T72f219(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLASS_TYPE.type_constraint */
extern T0* T70f86(GE_context* ac, T0* C, T6 a1);
/* detachable ET_TYPE_RENAME_CONSTRAINT.last_leaf */
extern T0* T1428f7(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINT_RENAME_LIST.last_leaf */
extern T0* T1044f11(GE_context* ac, T0* C);
/* detachable ET_TYPE_CONSTRAINT_LIST.last_leaf */
extern T0* T1231f10(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.current_type_constraint */
extern T0* T1455f69(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.current_type_constraint */
extern T0* T1454f72(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.current_type_constraint */
extern T0* T1453f70(GE_context* ac, T0* C);
/* detachable ET_TYPE_RENAME_CONSTRAINT.current_type_constraint */
extern T0* T1428f6(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_CURRENT.current_type_constraint */
extern T0* T432f67(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.current_type_constraint */
extern T0* T247f101(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.current_type_constraint */
extern T0* T245f66(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.current_type_constraint */
extern T0* T72f244(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.current_type_constraint */
extern T0* T70f114(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.renames */
extern T0* T1455f75(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.renames */
extern T0* T1454f78(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.renames */
extern T0* T1453f77(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_CURRENT.renames */
extern T0* T432f74(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.renames */
extern T0* T247f109(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.renames */
extern T0* T245f72(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.renames */
extern T0* T72f223(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.renames */
extern T0* T70f96(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.type_constraint_type */
extern T0* T1455f70(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.type_constraint_type */
extern T0* T1454f73(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.type_constraint_type */
extern T0* T1453f71(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_CURRENT.type_constraint_type */
extern T0* T432f68(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.type_constraint_type */
extern T0* T247f102(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.type_constraint_type */
extern T0* T245f67(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.type_constraint_type */
extern T0* T72f210(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.type_constraint_type */
extern T0* T70f95(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.like_keyword */
extern T0* T1455f34(GE_context* ac, T0* C);
/* detachable ET_CUSTOM_ATTRIBUTE.indexing_term */
extern T0* T1426f7(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.indexing_term */
extern T0* T1422f31(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.indexing_term */
extern T0* T1421f31(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.indexing_term */
extern T0* T1420f31(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.indexing_term */
extern T0* T1419f31(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.indexing_term */
extern T0* T1417f33(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.indexing_term */
extern T0* T1416f33(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.indexing_term */
extern T0* T1415f50(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.indexing_term */
extern T0* T1414f50(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.indexing_term */
extern T0* T1413f50(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.indexing_term */
extern T0* T1412f50(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.indexing_term */
extern T0* T1411f34(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.indexing_term */
extern T0* T1410f38(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.indexing_term */
extern T0* T1409f32(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.indexing_term */
extern T0* T848f34(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.indexing_term */
extern T0* T360f51(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.indexing_term */
extern T0* T179f96(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.manifest_string */
extern T0* T1411f13(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.manifest_string */
extern T0* T1410f13(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.manifest_string */
extern T0* T848f15(GE_context* ac, T0* C);
/* detachable ET_CONVERT_FUNCTION.is_convert_from */
extern T1 T1434f7(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_CONVERT_FEATURE.is_convert_from */
extern T1 T551f4(GE_context* ac, T0* C);
/* detachable ET_CONVERT_PROCEDURE.is_convert_to */
extern T1 T1435f7(GE_context* ac, T0* C);
/* [detachable] ET_BUILTIN_CONVERT_FEATURE.is_convert_to */
extern T1 T551f5(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T1681f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_EIFFEL_PARSER.resolved_constraint_generic_named_type */
extern T0* T439f980(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T439f980ot1(T0* a1, T0** a2);
/* detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.resolved_syntactical_constraint */
extern T0* T1038f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_EIFFEL_PARSER.resolved_constraint_actual_parameter_list */
extern T0* T439f981(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.item */
extern T0* T1038f11(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.position */
extern T0* T1038f9(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint */
extern T0* T1455f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint */
extern T0* T1454f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_LIKE_FEATURE.resolved_syntactical_constraint */
extern T0* T1453f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T1429f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_EIFFEL_PARSER.resolved_constraint_named_type */
extern T0* T439f977(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T439f977ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.resolved_syntactical_constraint */
extern T0* T432f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_CONSTRAINT_GENERIC_NAMED_TYPE.position */
extern T0* T1681f6(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T1431f4(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.position */
extern T0* T1430f4(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINT_NAMED_TYPE.position */
extern T0* T1429f5(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINT_GENERIC_NAMED_TYPE.type */
extern T0* T1681f5(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINT_NAMED_TYPE.type */
extern T0* T1429f4(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1681f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1455f78(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1454f81(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_LIKE_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T1453f81(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T1431f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.resolved_constraint_labeled_comma_actual_parameter */
extern T0* T439f983(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T1430f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.resolved_constraint_labeled_actual_parameter */
extern T0* T439f982(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1429f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_LIKE_CURRENT.resolved_syntactical_constraint_with_type */
extern T0* T432f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_KEYWORD_EXPRESSION.position */
extern T0* T1697f3(GE_context* ac, T0* C);
/* detachable ET_CHOICE_RANGE.choice */
extern T0* T1463f5(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.choice */
extern T0* T1422f36(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.choice */
extern T0* T1421f36(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.choice */
extern T0* T1415f57(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.choice */
extern T0* T1414f57(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.choice */
extern T0* T1413f57(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.choice */
extern T0* T1412f57(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.choice */
extern T0* T1409f37(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.choice */
extern T0* T1217f23(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.choice */
extern T0* T360f57(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.choice */
extern T0* T278f21(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.choice */
extern T0* T179f102(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.lower */
extern T0* T1422f38(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.lower */
extern T0* T1421f38(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.lower */
extern T0* T1415f59(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.lower */
extern T0* T1414f59(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.lower */
extern T0* T1413f59(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.lower */
extern T0* T1412f59(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.lower */
extern T0* T1409f39(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.lower */
extern T0* T1217f25(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.lower */
extern T0* T360f60(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.lower */
extern T0* T278f25(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.lower */
extern T0* T179f105(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.is_range */
extern T1 T1422f37(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.is_range */
extern T1 T1421f37(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.is_range */
extern T1 T1415f58(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_range */
extern T1 T1414f58(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.is_range */
extern T1 T1413f58(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_range */
extern T1 T1412f58(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.is_range */
extern T1 T1409f38(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.is_range */
extern T1 T1217f24(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_range */
extern T1 T360f59(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.is_range */
extern T1 T278f24(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_range */
extern T1 T179f104(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.upper */
extern T0* T1422f39(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.upper */
extern T0* T1421f39(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.upper */
extern T0* T1415f60(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.upper */
extern T0* T1414f60(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.upper */
extern T0* T1413f60(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.upper */
extern T0* T1412f60(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.upper */
extern T0* T1409f40(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.upper */
extern T0* T1217f26(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.upper */
extern T0* T360f61(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.upper */
extern T0* T278f26(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.upper */
extern T0* T179f106(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_TO_EXPRESSION.agent_actual_argument */
extern T0* T1973f13(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_FROM_EXPRESSION.agent_actual_argument */
extern T0* T1972f13(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_BUILTIN_EXPRESSION.agent_actual_argument */
extern T0* T1971f12(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_CAST_EXPRESSION.agent_actual_argument */
extern T0* T1905f13(GE_context* ac, T0* C);
/* detachable ET_AGENT_TYPED_OPEN_ARGUMENT.agent_actual_argument */
extern T0* T1487f6(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1485f25(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1484f32(GE_context* ac, T0* C);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1483f28(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1482f26(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1481f33(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1480f29(GE_context* ac, T0* C);
/* detachable ET_ONCE_MANIFEST_STRING.agent_actual_argument */
extern T0* T1479f15(GE_context* ac, T0* C);
/* detachable ET_OLD_OBJECT_TEST.agent_actual_argument */
extern T0* T1478f20(GE_context* ac, T0* C);
/* detachable ET_OLD_EXPRESSION.agent_actual_argument */
extern T0* T1477f13(GE_context* ac, T0* C);
/* detachable ET_PREFIX_EXPRESSION.agent_actual_argument */
extern T0* T1476f16(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_TYPE.agent_actual_argument */
extern T0* T1475f14(GE_context* ac, T0* C);
/* detachable ET_INFIX_EXPRESSION.agent_actual_argument */
extern T0* T1472f16(GE_context* ac, T0* C);
/* detachable ET_EXPRESSION_ADDRESS.agent_actual_argument */
extern T0* T1471f13(GE_context* ac, T0* C);
/* detachable ET_RESULT_ADDRESS.agent_actual_argument */
extern T0* T1470f13(GE_context* ac, T0* C);
/* detachable ET_CURRENT_ADDRESS.agent_actual_argument */
extern T0* T1469f13(GE_context* ac, T0* C);
/* detachable ET_FEATURE_ADDRESS.agent_actual_argument */
extern T0* T1468f13(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_EXPRESSION.agent_actual_argument */
extern T0* T1467f17(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1422f24(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1421f24(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.agent_actual_argument */
extern T0* T1420f24(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.agent_actual_argument */
extern T0* T1419f24(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.agent_actual_argument */
extern T0* T1417f26(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.agent_actual_argument */
extern T0* T1416f26(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1415f42(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1414f42(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1413f42(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1412f42(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.agent_actual_argument */
extern T0* T1411f26(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.agent_actual_argument */
extern T0* T1410f30(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1409f25(GE_context* ac, T0* C);
/* detachable ET_STRIP_EXPRESSION.agent_actual_argument */
extern T0* T1220f19(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.agent_actual_argument */
extern T0* T1217f17(GE_context* ac, T0* C);
/* detachable ET_PARENTHESIZED_EXPRESSION.agent_actual_argument */
extern T0* T1188f15(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_ARRAY.agent_actual_argument */
extern T0* T1174f20(GE_context* ac, T0* C);
/* detachable ET_IF_EXPRESSION.agent_actual_argument */
extern T0* T1127f19(GE_context* ac, T0* C);
/* detachable ET_CALL_AGENT.agent_actual_argument */
extern T0* T1003f18(GE_context* ac, T0* C);
/* detachable ET_BRACKET_EXPRESSION.agent_actual_argument */
extern T0* T1000f15(GE_context* ac, T0* C);
/* detachable ET_ACROSS_EXPRESSION.agent_actual_argument */
extern T0* T973f24(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.agent_actual_argument */
extern T0* T970f35(GE_context* ac, T0* C);
/* detachable ET_VOID.agent_actual_argument */
extern T0* T962f21(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.agent_actual_argument */
extern T0* T848f24(GE_context* ac, T0* C);
/* [detachable] ET_NAMED_OBJECT_TEST.agent_actual_argument */
extern T0* T709f17(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T360f39(GE_context* ac, T0* C);
/* [detachable] ET_CREATE_EXPRESSION.agent_actual_argument */
extern T0* T319f17(GE_context* ac, T0* C);
/* [detachable] ET_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T309f13(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T308f13(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST.agent_actual_argument */
extern T0* T307f14(GE_context* ac, T0* C);
/* [detachable] ET_RESULT.agent_actual_argument */
extern T0* T300f22(GE_context* ac, T0* C);
/* [detachable] ET_MANIFEST_TUPLE.agent_actual_argument */
extern T0* T280f20(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T278f13(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T277f17(GE_context* ac, T0* C);
/* [detachable] ET_CURRENT.agent_actual_argument */
extern T0* T272f22(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.agent_actual_argument */
extern T0* T179f81(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1415f23(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1415f35(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1414f23(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1414f35(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1413f23(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1413f35(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1412f23(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1412f35(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_integer_8 */
extern T1 T360f25(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T360f40(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1415f24(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1415f36(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1414f24(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1414f36(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1413f24(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1413f36(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1412f24(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1412f36(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_integer_16 */
extern T1 T360f26(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T360f41(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1415f27(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1414f27(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1413f27(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1412f27(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_natural_8 */
extern T1 T360f29(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1415f28(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1414f28(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1413f28(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1412f28(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_natural_16 */
extern T1 T360f30(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1415f29(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1414f29(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1413f29(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1412f29(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_natural_32 */
extern T1 T360f31(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1415f25(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1415f37(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1414f25(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1414f37(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1413f25(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1413f37(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1412f25(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1412f37(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_integer_32 */
extern T1 T360f27(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T360f15(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1415f26(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1415f38(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1414f26(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1414f38(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1413f26(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1413f38(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1412f26(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1412f38(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_integer_64 */
extern T1 T360f28(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T360f42(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1415f32(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1414f32(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1412f32(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T360f34(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_binary */
extern T1 T1414f33(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.is_binary */
extern T1 T1413f33(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_binary */
extern T1 T1412f33(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_binary */
extern T1 T360f35(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1415f30(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1414f30(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1413f30(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1412f30(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_natural_64 */
extern T1 T360f32(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.value_position */
extern T0* T1415f45(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.value_position */
extern T0* T1414f45(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.value_position */
extern T0* T1413f45(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.value_position */
extern T0* T1412f45(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.value_position */
extern T0* T360f47(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1415f55(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1414f55(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1413f55(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1412f55(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.to_integer_32 */
extern T6 T360f22(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.is_negative */
extern T1 T1415f20(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_negative */
extern T1 T1414f20(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.is_negative */
extern T1 T1413f20(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_negative */
extern T1 T1412f20(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_negative */
extern T1 T360f13(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infixable */
extern T1 T1447f20(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_infixable */
extern T1 T874f11(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_prefixable */
extern T1 T1447f17(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_prefixable */
extern T1 T874f10(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.alias_lower_name */
extern T0* T1447f43(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.alias_name */
extern T0* T1447f18(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.alias_lower_name */
extern T0* T1445f70(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.alias_name */
extern T0* T1445f72(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.alias_lower_name */
extern T0* T1444f59(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.alias_name */
extern T0* T1444f61(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.alias_lower_name */
extern T0* T1443f56(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.alias_name */
extern T0* T1443f58(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.alias_lower_name */
extern T0* T874f37(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.alias_name */
extern T0* T874f63(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.alias_lower_name */
extern T0* T849f59(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.alias_name */
extern T0* T849f60(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.same_alias_name */
extern T1 T1447f45(GE_context* ac, T0* C, T0* a1);
extern T1 T1447f45ot1(T0* a1, T0** a2);
/* detachable ET_INFIX_NAME.same_alias_name */
extern T1 T1445f79(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PREFIX_FREE_NAME.same_alias_name */
extern T1 T1444f63(GE_context* ac, T0* C, T0* a1);
extern T1 T1444f63ot1(T0* a1, T0** a2);
/* detachable ET_PREFIX_NAME.same_alias_name */
extern T1 T1443f79(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ALIAS_NAME.same_alias_name */
extern T1 T874f64(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INFIX_FREE_NAME.same_alias_name */
extern T1 T849f63(GE_context* ac, T0* C, T0* a1);
extern T1 T849f63ot1(T0* a1, T0** a2);
/* [detachable] ET_DOTNET_ASSEMBLY.lower_name */
extern T0* T578f94(GE_context* ac, T0* C);
/* [detachable] ET_ECF_ADAPTED_DOTNET_ASSEMBLY.lower_name */
extern T0* T208f23(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.lower_name */
extern T0* T206f93(GE_context* ac, T0* C);
/* [detachable] ET_ECF_ADAPTED_LIBRARY.lower_name */
extern T0* T202f21(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_TO_EXPRESSION.arguments_count */
extern T6 T1973f20(GE_context* ac, T0* C);
/* detachable ET_PREFIX_EXPRESSION.arguments_count */
extern T6 T1476f19(GE_context* ac, T0* C);
/* detachable ET_INFIX_EXPRESSION.arguments_count */
extern T6 T1472f19(GE_context* ac, T0* C);
/* detachable ET_BRACKET_EXPRESSION.arguments_count */
extern T6 T1000f18(GE_context* ac, T0* C);
/* detachable ET_PARENTHESIS_EXPRESSION.arguments_count */
extern T6 T845f8(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.arguments_count */
extern T6 T277f20(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_TO_EXPRESSION.parenthesis_call */
extern T0* T1973f19(GE_context* ac, T0* C);
/* detachable ET_PREFIX_EXPRESSION.parenthesis_call */
extern T0* T1476f17(GE_context* ac, T0* C);
/* detachable ET_INFIX_EXPRESSION.parenthesis_call */
extern T0* T1472f17(GE_context* ac, T0* C);
/* detachable ET_BRACKET_EXPRESSION.parenthesis_call */
extern T0* T1000f16(GE_context* ac, T0* C);
/* detachable ET_PARENTHESIS_EXPRESSION.parenthesis_call */
extern T0* T845f7(GE_context* ac, T0* C);
/* [detachable] ET_ECF_MSIL_CLR_VERSION_CONDITION.is_capability_aware */
extern T1 T788f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_COMPILER_VERSION_CONDITION.is_capability_aware */
extern T1 T787f3(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_PLATFORM_CONDITION.is_capability_aware */
extern T1 T785f3(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_capability_aware */
extern T1 T784f2(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_DOTNET_CONDITION.is_capability_aware */
extern T1 T783f2(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CUSTOM_CONDITION.is_capability_aware */
extern T1 T782f5(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.is_capability_aware */
extern T1 T781f3(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.string_ */
extern T0* T781f6(GE_context* ac, T0* C);
/* detachable ET_ECF_CONCURRENCY_CONDITION.is_capability_aware */
extern T1 T780f3(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CONCURRENCY_CONDITION.string_ */
extern T0* T780f6(GE_context* ac, T0* C);
/* detachable ET_ECF_BUILD_CONDITION.is_capability_aware */
extern T1 T779f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_MSIL_CLR_VERSION_CONDITION.is_capability_supported */
extern T1 T788f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_COMPILER_VERSION_CONDITION.is_capability_supported */
extern T1 T787f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ECF_PLATFORM_CONDITION.is_capability_supported */
extern T1 T785f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_capability_supported */
extern T1 T784f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ECF_DOTNET_CONDITION.is_capability_supported */
extern T1 T783f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ECF_CUSTOM_CONDITION.is_capability_supported */
extern T1 T782f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.is_capability_supported */
extern T1 T781f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature detachable ET_ECF_VOID_SAFETY_CONDITION.is_capability_supported */
extern T0* T781f4ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature detachable ET_ECF_VOID_SAFETY_CONDITION.is_capability_supported */
extern T0* T781f4ac2(GE_context* ac, T0* a1);
/* detachable DS_HASH_SET [[attached] STRING_8].go_after */
extern void T68f80(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [[attached] STRING_8].cursor_go_after */
extern void T68f83(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [[attached] STRING_8].put_last */
extern void T68f79(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [[attached] STRING_8].compress */
extern void T68f82(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [[attached] STRING_8].move_all_cursors */
extern void T68f84(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].do_all */
extern void T147f27(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [[attached] STRING_8].append_last */
extern void T68f78(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [[attached] STRING_8].extend_last */
extern void T68f81(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [[attached] STRING_8].extendible */
extern T1 T68f37(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.supported_void_safety_capability_values */
extern T0* T781f8(GE_context* ac, T0* C);
/* Creation of agent #1 in feature detachable ET_ECF_VOID_SAFETY_CONDITION.supported_void_safety_capability_values */
extern T0* T781f8ac1(GE_context* ac, T0* a1);
/* detachable DS_HASH_SET [[attached] STRING_8].set_hash_function */
extern void T68f77(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.case_insensitive_string_equality_tester */
extern T0* T781f7(GE_context* ac, T0* C);
/* detachable ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T1 T780f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature detachable ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T0* T780f4ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature detachable ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T0* T780f4ac2(GE_context* ac, T0* a1);
/* detachable ET_ECF_CONCURRENCY_CONDITION.supported_concurrency_capability_values */
extern T0* T780f8(GE_context* ac, T0* C);
/* Creation of agent #1 in feature detachable ET_ECF_CONCURRENCY_CONDITION.supported_concurrency_capability_values */
extern T0* T780f8ac1(GE_context* ac, T0* a1);
/* detachable ET_ECF_CONCURRENCY_CONDITION.case_insensitive_string_equality_tester */
extern T0* T780f7(GE_context* ac, T0* C);
/* detachable ET_ECF_BUILD_CONDITION.is_capability_supported */
extern T1 T779f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ECF_MSIL_CLR_VERSION_CONDITION.is_enabled */
extern T1 T788f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_MSIL_CLR_VERSION_CONDITION.is_included */
extern T1 T788f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_COMPILER_VERSION_CONDITION.is_enabled */
extern T1 T787f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_COMPILER_VERSION_CONDITION.is_included */
extern T1 T787f6(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T1 T785f5(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature detachable ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T0* T785f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [detachable] DS_LINKED_LIST [[attached] STRING_8].there_exists */
extern T1 T147f16(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_PLATFORM_CONDITION.string_ */
extern T0* T785f7(GE_context* ac, T0* C);
/* detachable ET_ECF_PLATFORM_CONDITION.operating_system */
extern T0* T785f6(GE_context* ac, T0* C);
/* detachable ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_enabled */
extern T1 T784f4(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_DOTNET_CONDITION.is_enabled */
extern T1 T783f4(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CUSTOM_CONDITION.is_enabled */
extern T1 T782f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_DFA_WILDCARD.compile_case_sensitive */
extern T0* T1993c16(GE_context* ac, T0* a1);
/* detachable ET_ECF_CUSTOM_CONDITION.string_ */
extern T0* T782f8(GE_context* ac, T0* C);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.is_enabled */
extern T1 T781f5(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature detachable ET_ECF_VOID_SAFETY_CONDITION.is_enabled */
extern T0* T781f5ac1(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.default_capabilities */
extern T0* T781f9(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.default_capabilities_1_0_0 */
extern T0* T781f16(GE_context* ac, T0* C);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_1_0_0 */
extern void T781f22(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_1_11_0 */
extern void T781f21(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_1_13_0 */
extern void T781f20(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_1_16_0 */
extern void T781f19(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_latest */
extern void T781f23(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.default_capabilities_1_11_0 */
extern T0* T781f15(GE_context* ac, T0* C);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.ecf_1_11_0 */
extern T0* T781f14(GE_context* ac, T0* C);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.default_capabilities_1_13_0 */
extern T0* T781f13(GE_context* ac, T0* C);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.ecf_1_13_0 */
extern T0* T781f12(GE_context* ac, T0* C);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.default_capabilities_1_16_0 */
extern T0* T781f11(GE_context* ac, T0* C);
/* detachable ET_ECF_VOID_SAFETY_CONDITION.ecf_1_16_0 */
extern T0* T781f10(GE_context* ac, T0* C);
/* detachable ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T1 T780f5(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature detachable ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T0* T780f5ac1(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_ECF_CONCURRENCY_CONDITION.default_capabilities */
extern T0* T780f9(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CONCURRENCY_CONDITION.default_capabilities_1_0_0 */
extern T0* T780f16(GE_context* ac, T0* C);
/* detachable ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_1_0_0 */
extern void T780f22(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_1_11_0 */
extern void T780f21(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_1_13_0 */
extern void T780f20(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_1_16_0 */
extern void T780f19(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_latest */
extern void T780f23(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ECF_CONCURRENCY_CONDITION.default_capabilities_1_11_0 */
extern T0* T780f15(GE_context* ac, T0* C);
/* detachable ET_ECF_CONCURRENCY_CONDITION.ecf_1_11_0 */
extern T0* T780f14(GE_context* ac, T0* C);
/* detachable ET_ECF_CONCURRENCY_CONDITION.default_capabilities_1_13_0 */
extern T0* T780f13(GE_context* ac, T0* C);
/* detachable ET_ECF_CONCURRENCY_CONDITION.ecf_1_13_0 */
extern T0* T780f12(GE_context* ac, T0* C);
/* detachable ET_ECF_CONCURRENCY_CONDITION.default_capabilities_1_16_0 */
extern T0* T780f11(GE_context* ac, T0* C);
/* detachable ET_ECF_CONCURRENCY_CONDITION.ecf_1_16_0 */
extern T0* T780f10(GE_context* ac, T0* C);
/* detachable ET_ECF_BUILD_CONDITION.is_enabled */
extern T1 T779f5(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature detachable ET_ECF_BUILD_CONDITION.is_enabled */
extern T0* T779f5ac1(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_ECF_BUILD_CONDITION.string_ */
extern T0* T779f6(GE_context* ac, T0* C);
/* detachable ET_CUSTOM_ATTRIBUTE.has_indexing_term_value */
extern T1 T1426f5(GE_context* ac, T0* C, T0* a1);
/* detachable ET_C2_CHARACTER_CONSTANT.has_indexing_term_value */
extern T1 T1422f29(GE_context* ac, T0* C, T0* a1);
/* CHARACTER_32.as_lower */
extern T3 T3f5(GE_context* ac, T3* C);
/* [detachable] CHARACTER_PROPERTY.to_lower */
extern T3 T2008f1(GE_context* ac, T0* C, T3 a1);
/* [detachable] CHARACTER_PROPERTY.to_lower_table_15 */
extern T0* T2008f17(GE_context* ac, T0* C);
/* [detachable] CHARACTER_PROPERTY.to_lower_table_14 */
extern T0* T2008f16(GE_context* ac, T0* C);
/* [detachable] CHARACTER_PROPERTY.to_lower_table_13 */
extern T0* T2008f15(GE_context* ac, T0* C);
/* [detachable] CHARACTER_PROPERTY.to_lower_table_12 */
extern T0* T2008f14(GE_context* ac, T0* C);
/* [detachable] CHARACTER_PROPERTY.to_lower_table_11 */
extern T0* T2008f13(GE_context* ac, T0* C);
/* [detachable] CHARACTER_PROPERTY.to_lower_table_10 */
extern T0* T2008f12(GE_context* ac, T0* C);
/* [detachable] CHARACTER_PROPERTY.to_lower_table_9 */
extern T0* T2008f11(GE_context* ac, T0* C);
/* [detachable] CHARACTER_PROPERTY.to_lower_table_8 */
extern T0* T2008f10(GE_context* ac, T0* C);
/* [detachable] CHARACTER_PROPERTY.to_lower_table_7 */
extern T0* T2008f9(GE_context* ac, T0* C);
/* [detachable] CHARACTER_PROPERTY.to_lower_table_6 */
extern T0* T2008f8(GE_context* ac, T0* C);
/* [detachable] CHARACTER_PROPERTY.to_lower_table_5 */
extern T0* T2008f7(GE_context* ac, T0* C);
/* [detachable] CHARACTER_PROPERTY.to_lower_table_4 */
extern T0* T2008f6(GE_context* ac, T0* C);
/* [detachable] CHARACTER_PROPERTY.to_lower_table_3 */
extern T0* T2008f5(GE_context* ac, T0* C);
/* [detachable] CHARACTER_PROPERTY.to_lower_table_2 */
extern T0* T2008f4(GE_context* ac, T0* C);
/* [detachable] CHARACTER_PROPERTY.to_lower_table_1 */
extern T0* T2008f3(GE_context* ac, T0* C);
/* CHARACTER_32.plus */
extern T3 T3f10(GE_context* ac, T3* C, T10 a1);
/* CHARACTER_32.is_less_equal */
extern T1 T3f9(GE_context* ac, T3* C, T3 a1);
/* CHARACTER_32.is_less */
extern T1 T3f11(GE_context* ac, T3* C, T3 a1);
/* CHARACTER_32.properties */
extern T0* T3f6(GE_context* ac, T3* C);
/* [detachable] CHARACTER_PROPERTY.make */
extern T0* T2008c18(GE_context* ac);
/* detachable ET_C1_CHARACTER_CONSTANT.has_indexing_term_value */
extern T1 T1421f29(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FALSE_CONSTANT.has_indexing_term_value */
extern T1 T1420f29(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FALSE_CONSTANT.string_ */
extern T0* T1420f32(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.has_indexing_term_value */
extern T1 T1419f29(GE_context* ac, T0* C, T0* a1);
/* detachable ET_TRUE_CONSTANT.string_ */
extern T0* T1419f32(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.has_indexing_term_value */
extern T1 T1417f31(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYMBOL_OPERATOR.is_plus */
extern T1 T959f57(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.string_ */
extern T0* T1417f34(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.has_indexing_term_value */
extern T1 T1416f31(GE_context* ac, T0* C, T0* a1);
/* detachable ET_REGULAR_REAL_CONSTANT.string_ */
extern T0* T1416f34(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.has_indexing_term_value */
extern T1 T1415f48(GE_context* ac, T0* C, T0* a1);
/* detachable ET_BINARY_INTEGER_CONSTANT.string_ */
extern T0* T1415f51(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.has_indexing_term_value */
extern T1 T1414f48(GE_context* ac, T0* C, T0* a1);
/* detachable ET_OCTAL_INTEGER_CONSTANT.string_ */
extern T0* T1414f51(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.has_indexing_term_value */
extern T1 T1413f48(GE_context* ac, T0* C, T0* a1);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.string_ */
extern T0* T1413f51(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.has_indexing_term_value */
extern T1 T1412f48(GE_context* ac, T0* C, T0* a1);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.string_ */
extern T0* T1412f51(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.has_indexing_term_value */
extern T1 T1411f32(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SPECIAL_MANIFEST_STRING.string_ */
extern T0* T1411f36(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.has_indexing_term_value */
extern T1 T1410f36(GE_context* ac, T0* C, T0* a1);
/* detachable ET_VERBATIM_STRING.string_ */
extern T0* T1410f40(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.has_indexing_term_value */
extern T1 T1409f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REGULAR_MANIFEST_STRING.has_indexing_term_value */
extern T1 T848f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REGULAR_MANIFEST_STRING.string_ */
extern T0* T848f35(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.has_indexing_term_value */
extern T1 T360f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.string_ */
extern T0* T360f52(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.has_indexing_term_value */
extern T1 T179f95(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CUSTOM_ATTRIBUTE.position */
extern T0* T1426f6(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.indexing_term_value */
extern T0* T1422f33(GE_context* ac, T0* C);
/* CHARACTER_32.out */
extern T0* T3f8(GE_context* ac, T3* C);
/* NATURAL_32.to_hex_string */
extern T0* T10f28(GE_context* ac, T10* C);
/* NATURAL_32.to_hex_character */
extern T2 T10f29(GE_context* ac, T10* C);
/* detachable ET_C1_CHARACTER_CONSTANT.indexing_term_value */
extern T0* T1421f33(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.indexing_term_value */
extern T0* T1420f34(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.indexing_term_value */
extern T0* T1419f34(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.indexing_term_value */
extern T0* T1417f36(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.text */
extern T0* T959f59(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.indexing_term_value */
extern T0* T1416f36(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.indexing_term_value */
extern T0* T1415f53(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.indexing_term_value */
extern T0* T1414f53(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.indexing_term_value */
extern T0* T1413f53(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.indexing_term_value */
extern T0* T1412f53(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.indexing_term_value */
extern T0* T1411f38(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.indexing_term_value */
extern T0* T1410f42(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.indexing_term_value */
extern T0* T1409f34(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.indexing_term_value */
extern T0* T848f36(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.indexing_term_value */
extern T0* T360f54(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.indexing_term_value */
extern T0* T179f100(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.locals */
extern T0* T1485f27(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.locals */
extern T0* T1482f28(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.type */
extern T0* T1485f24(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.type */
extern T0* T1484f31(GE_context* ac, T0* C);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.type */
extern T0* T1483f27(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.type */
extern T0* T1482f25(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.type */
extern T0* T1481f32(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.type */
extern T0* T1480f28(GE_context* ac, T0* C);
/* [detachable] ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1695f4(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.named_parameter_with_type */
extern T0* T1455f31(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.named_parameter_with_type */
extern T0* T1454f27(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.named_parameter_with_type */
extern T0* T1453f21(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LABELED_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1451f4(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T1427f69(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T852f71(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIKE_CURRENT.named_parameter_with_type */
extern T0* T432f23(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.named_parameter_with_type */
extern T0* T247f52(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.named_parameter_with_type */
extern T0* T245f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.named_parameter_with_type */
extern T0* T72f141(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.named_parameter_with_type */
extern T0* T70f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T1695f8(GE_context* ac, T0* C);
/* detachable ET_LABELED_ACTUAL_PARAMETER.position */
extern T0* T1451f8(GE_context* ac, T0* C);
/* [detachable] ET_LABELED_COMMA_ACTUAL_PARAMETER.label */
extern T0* T1695f5(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.label */
extern T0* T1455f32(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.label */
extern T0* T1454f28(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.label */
extern T0* T1453f22(GE_context* ac, T0* C);
/* detachable ET_LABELED_ACTUAL_PARAMETER.label */
extern T0* T1451f5(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.label */
extern T0* T1427f68(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER.label */
extern T0* T852f70(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_CURRENT.label */
extern T0* T432f24(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.label */
extern T0* T247f53(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.label */
extern T0* T245f42(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.label */
extern T0* T72f142(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.label */
extern T0* T70f49(GE_context* ac, T0* C);
/* [detachable] ET_LABELED_COMMA_ACTUAL_PARAMETER.last_leaf */
extern T0* T1695f9(GE_context* ac, T0* C);
/* detachable ET_LABELED_ACTUAL_PARAMETER.last_leaf */
extern T0* T1451f9(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.last_leaf */
extern T0* T1427f75(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.renames */
extern T0* T1427f76(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINT_CREATOR.last_leaf */
extern T0* T1041f11(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER.last_leaf */
extern T0* T852f77(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.error_position */
extern T0* T541f60(GE_context* ac, T0* C);
/* [detachable] XM_DEFAULT_POSITION.make */
extern T0* T499c5(GE_context* ac, T0* a1, T6 a2, T6 a3, T6 a4);
/* [detachable] XM_EIFFEL_SCANNER_DTD.error_position */
extern T0* T539f56(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.error_position */
extern T0* T538f58(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.error_position */
extern T0* T498f66(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.end_of_file */
extern T1 T541f62(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.end_of_file */
extern T1 T539f63(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.end_of_file */
extern T1 T538f60(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.end_of_file */
extern T1 T498f68(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.is_applicable_encoding */
extern T1 T541f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_INPUT_STREAM.is_applicable_encoding */
extern T1 T863f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_INPUT_STREAM.is_valid_encoding */
extern T1 T863f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER_DTD.is_applicable_encoding */
extern T1 T539f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_ENTITY_DEF.is_applicable_encoding */
extern T1 T538f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T498f69(GE_context* ac, T0* C, T0* a1);
/* [detachable] XM_EIFFEL_PE_ENTITY_DEF.start_condition */
extern T6 T541f64(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER_DTD.start_condition */
extern T6 T539f51(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_ENTITY_DEF.start_condition */
extern T6 T538f62(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_SCANNER.start_condition */
extern T6 T498f44(GE_context* ac, T0* C);
/* detachable ET_ALIASED_FEATURE_NAME.same_extended_feature_name */
extern T1 T1446f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_ANY_ROUTINES.same_objects */
extern T1 T418f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ALIASED_FEATURE_NAME.any_ */
extern T0* T1446f5(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.same_extended_feature_name */
extern T1 T1445f83(GE_context* ac, T0* C, T0* a1);
/* detachable ET_INFIX_NAME.any_ */
extern T0* T1445f42(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.same_extended_feature_name */
extern T1 T1444f67(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PREFIX_FREE_NAME.any_ */
extern T0* T1444f19(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.same_extended_feature_name */
extern T1 T1443f83(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PREFIX_NAME.any_ */
extern T0* T1443f28(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.same_extended_feature_name */
extern T1 T849f67(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INFIX_FREE_NAME.any_ */
extern T0* T849f31(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.same_extended_feature_name */
extern T1 T179f88(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER.any_ */
extern T0* T179f90(GE_context* ac, T0* C);
/* detachable ET_ALIASED_FEATURE_NAME.position */
extern T0* T1446f3(GE_context* ac, T0* C);
/* detachable ET_ALIASED_FEATURE_NAME.same_call_name */
extern T1 T1446f6(GE_context* ac, T0* C, T0* a1);
/* detachable ET_INFIX_NAME.feature_alias_name */
extern T0* T1445f22(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.feature_alias_name */
extern T0* T1444f10(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.feature_alias_name */
extern T0* T1443f22(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.feature_alias_name */
extern T0* T849f10(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.alias_name */
extern T0* T179f49(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.is_none */
extern T1 T759f41(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.is_none */
extern T1 T399f11(GE_context* ac, T0* C);
/* [detachable] ET_NONE_GROUP.is_unknown */
extern T1 T844f10(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.is_unknown */
extern T1 T759f42(GE_context* ac, T0* C);
/* [detachable] ET_NONE_GROUP.is_dotnet_assembly */
extern T1 T844f22(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.is_dotnet_assembly */
extern T1 T759f43(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.is_dotnet_assembly */
extern T1 T399f5(GE_context* ac, T0* C);
/* [detachable] ET_NONE_GROUP.dotnet_assembly */
extern T0* T844f6(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.dotnet_assembly */
extern T0* T759f47(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.dotnet_assembly */
extern T0* T399f8(GE_context* ac, T0* C);
/* [detachable] ET_NONE_GROUP.cluster */
extern T0* T844f5(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.cluster */
extern T0* T759f46(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.cluster */
extern T0* T399f7(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.universe */
extern T0* T399f23(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.tokens */
extern T0* T399f6(GE_context* ac, T0* C);
/* [detachable] ET_NONE_GROUP.current_system */
extern T0* T844f11(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.current_system */
extern T0* T759f45(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.current_system */
extern T0* T399f12(GE_context* ac, T0* C);
/* [detachable] ET_NONE_GROUP.is_cluster */
extern T1 T844f8(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.is_cluster */
extern T1 T399f9(GE_context* ac, T0* C);
/* [detachable] ET_NONE_GROUP.is_hidden */
extern T1 T844f16(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.is_hidden */
extern T1 T399f14(GE_context* ac, T0* C);
/* [detachable] ET_NONE_GROUP.full_lower_name */
extern T0* T844f12(GE_context* ac, T0* C, T2 a1);
/* detachable ET_ECF_CLUSTER.full_lower_name */
extern T0* T759f48(GE_context* ac, T0* C, T2 a1);
/* [detachable] ET_UNKNOWN_GROUP.full_lower_name */
extern T0* T399f13(GE_context* ac, T0* C, T2 a1);
/* [detachable] ET_NONE_GROUP.kind_name */
extern T0* T844f20(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.kind_name */
extern T0* T759f64(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.kind_name */
extern T0* T399f21(GE_context* ac, T0* C);
/* [detachable] ET_NONE_GROUP.relative_lower_name */
extern T0* T844f13(GE_context* ac, T0* C, T0* a1, T2 a2);
/* detachable ET_SYSTEM.relative_lower_name */
extern T0* T35f116(GE_context* ac, T0* C, T0* a1, T2 a2);
/* detachable ET_SYSTEM.lower_name */
extern T0* T35f117(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.relative_lower_name */
extern T0* T55f146(GE_context* ac, T0* C, T0* a1, T2 a2);
/* [detachable] ET_ECF_SYSTEM.lower_name */
extern T0* T55f148(GE_context* ac, T0* C);
/* [detachable] ET_NONE_GROUP.lower_name */
extern T0* T844f14(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.relative_lower_name */
extern T0* T759f58(GE_context* ac, T0* C, T0* a1, T2 a2);
/* detachable ET_ECF_CLUSTER.relative_lower_name */
extern T0* T759f58p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* [detachable] ET_ECF_LIBRARY.relative_lower_name */
extern T0* T182f109(GE_context* ac, T0* C, T0* a1, T2 a2);
/* [detachable] ET_ECF_LIBRARY.lower_name */
extern T0* T182f113(GE_context* ac, T0* C);
/* detachable ET_ECF_CLUSTER.lower_name */
extern T0* T759f60(GE_context* ac, T0* C);
/* [detachable] ET_UNKNOWN_GROUP.relative_lower_name */
extern T0* T399f15(GE_context* ac, T0* C, T0* a1, T2 a2);
/* [detachable] ET_UNKNOWN_GROUP.lower_name */
extern T0* T399f16(GE_context* ac, T0* C);
/* detachable ET_TAGGED_ASSERTION.is_class_assertion */
extern T1 T1490f5(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T1485f23(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T1484f30(GE_context* ac, T0* C);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T1483f26(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T1482f24(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T1481f31(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T1480f27(GE_context* ac, T0* C);
/* detachable ET_ONCE_MANIFEST_STRING.is_class_assertion */
extern T1 T1479f14(GE_context* ac, T0* C);
/* detachable ET_OLD_OBJECT_TEST.is_class_assertion */
extern T1 T1478f19(GE_context* ac, T0* C);
/* detachable ET_OLD_EXPRESSION.is_class_assertion */
extern T1 T1477f12(GE_context* ac, T0* C);
/* detachable ET_PREFIX_EXPRESSION.is_class_assertion */
extern T1 T1476f14(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_TYPE.is_class_assertion */
extern T1 T1475f13(GE_context* ac, T0* C);
/* detachable ET_INFIX_EXPRESSION.is_class_assertion */
extern T1 T1472f13(GE_context* ac, T0* C);
/* detachable ET_EXPRESSION_ADDRESS.is_class_assertion */
extern T1 T1471f11(GE_context* ac, T0* C);
/* detachable ET_RESULT_ADDRESS.is_class_assertion */
extern T1 T1470f11(GE_context* ac, T0* C);
/* detachable ET_CURRENT_ADDRESS.is_class_assertion */
extern T1 T1469f11(GE_context* ac, T0* C);
/* detachable ET_FEATURE_ADDRESS.is_class_assertion */
extern T1 T1468f11(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_EXPRESSION.is_class_assertion */
extern T1 T1467f15(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T1422f21(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T1421f21(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.is_class_assertion */
extern T1 T1420f22(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.is_class_assertion */
extern T1 T1419f22(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.is_class_assertion */
extern T1 T1417f23(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.is_class_assertion */
extern T1 T1416f23(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.is_class_assertion */
extern T1 T1415f39(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_class_assertion */
extern T1 T1414f39(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.is_class_assertion */
extern T1 T1413f39(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_class_assertion */
extern T1 T1412f39(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.is_class_assertion */
extern T1 T1411f17(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.is_class_assertion */
extern T1 T1410f17(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T1409f15(GE_context* ac, T0* C);
/* detachable ET_STRIP_EXPRESSION.is_class_assertion */
extern T1 T1220f17(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.is_class_assertion */
extern T1 T1217f15(GE_context* ac, T0* C);
/* detachable ET_PARENTHESIZED_EXPRESSION.is_class_assertion */
extern T1 T1188f13(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_ARRAY.is_class_assertion */
extern T1 T1174f18(GE_context* ac, T0* C);
/* detachable ET_IF_EXPRESSION.is_class_assertion */
extern T1 T1127f18(GE_context* ac, T0* C);
/* detachable ET_CALL_AGENT.is_class_assertion */
extern T1 T1003f17(GE_context* ac, T0* C);
/* detachable ET_BRACKET_EXPRESSION.is_class_assertion */
extern T1 T1000f14(GE_context* ac, T0* C);
/* detachable ET_ACROSS_EXPRESSION.is_class_assertion */
extern T1 T973f23(GE_context* ac, T0* C);
/* detachable ET_VOID.is_class_assertion */
extern T1 T962f20(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.is_class_assertion */
extern T1 T848f23(GE_context* ac, T0* C);
/* [detachable] ET_NAMED_OBJECT_TEST.is_class_assertion */
extern T1 T709f16(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_class_assertion */
extern T1 T360f38(GE_context* ac, T0* C);
/* [detachable] ET_CREATE_EXPRESSION.is_class_assertion */
extern T1 T319f16(GE_context* ac, T0* C);
/* [detachable] ET_EQUALITY_EXPRESSION.is_class_assertion */
extern T1 T309f12(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.is_class_assertion */
extern T1 T308f12(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST.is_class_assertion */
extern T1 T307f13(GE_context* ac, T0* C);
/* [detachable] ET_RESULT.is_class_assertion */
extern T1 T300f21(GE_context* ac, T0* C);
/* [detachable] ET_MANIFEST_TUPLE.is_class_assertion */
extern T1 T280f19(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.is_class_assertion */
extern T1 T278f12(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.is_class_assertion */
extern T1 T277f16(GE_context* ac, T0* C);
/* [detachable] ET_CURRENT.is_class_assertion */
extern T1 T272f21(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_class_assertion */
extern T1 T179f80(GE_context* ac, T0* C);
/* detachable ET_TAGGED_ASSERTION.expression */
extern T0* T1490f4(GE_context* ac, T0* C);
extern T1 T1490f4ot1(T0* a1, T0** a2);
/* detachable ET_CLASS_ASSERTION.expression */
extern T0* T1450f4(GE_context* ac, T0* C);
/* detachable ET_INVARIANTS.type */
extern T0* T1155f18(GE_context* ac, T0* C);
/* detachable ET_INVARIANTS.arguments */
extern T0* T1155f16(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.locals */
extern T0* T1442f79(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.locals */
extern T0* T1439f72(GE_context* ac, T0* C);
/* detachable ET_INVARIANTS.locals */
extern T0* T1155f17(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.locals */
extern T0* T458f70(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.locals */
extern T0* T361f69(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.locals */
extern T0* T359f73(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.locals */
extern T0* T357f72(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.locals */
extern T0* T246f81(GE_context* ac, T0* C);
/* detachable ET_INVARIANTS.clients */
extern T0* T1155f19(GE_context* ac, T0* C);
/* detachable ET_INVARIANTS.preconditions */
extern T0* T1155f23(GE_context* ac, T0* C);
/* detachable ET_INVARIANTS.postconditions */
extern T0* T1155f24(GE_context* ac, T0* C);
/* detachable ET_INVARIANTS.implementation_feature */
extern T0* T1155f22(GE_context* ac, T0* C);
/* detachable ET_INVARIANTS.first_precursor */
extern T0* T1155f13(GE_context* ac, T0* C);
/* detachable ET_INVARIANTS.is_feature */
extern T1 T1155f14(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.as_feature */
extern T0* T1442f78(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.as_feature */
extern T0* T1441f74(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.as_feature */
extern T0* T1439f71(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.as_feature */
extern T0* T1438f75(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.as_feature */
extern T0* T1437f73(GE_context* ac, T0* C);
/* detachable ET_INVARIANTS.as_feature */
extern T0* T1155f15(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.as_feature */
extern T0* T458f69(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.as_feature */
extern T0* T456f71(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.as_feature */
extern T0* T361f68(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.as_feature */
extern T0* T359f72(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.as_feature */
extern T0* T357f71(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.as_feature */
extern T0* T328f72(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.as_feature */
extern T0* T246f80(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_invariants */
extern T1 T1442f80(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.is_invariants */
extern T1 T1441f75(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.is_invariants */
extern T1 T1439f73(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.is_invariants */
extern T1 T1438f76(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.is_invariants */
extern T1 T1437f74(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.is_invariants */
extern T1 T458f71(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.is_invariants */
extern T1 T456f72(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.is_invariants */
extern T1 T361f70(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_invariants */
extern T1 T359f74(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_invariants */
extern T1 T357f73(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.is_invariants */
extern T1 T328f73(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_invariants */
extern T1 T246f82(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.as_invariants */
extern T0* T1442f81(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.as_invariants */
extern T0* T1441f76(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.as_invariants */
extern T0* T1439f74(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.as_invariants */
extern T0* T1438f77(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.as_invariants */
extern T0* T1437f75(GE_context* ac, T0* C);
/* detachable ET_INVARIANTS.as_invariants */
extern T0* T1155f21(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.as_invariants */
extern T0* T458f72(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.as_invariants */
extern T0* T456f73(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.as_invariants */
extern T0* T361f71(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.as_invariants */
extern T0* T359f75(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.as_invariants */
extern T0* T357f74(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.as_invariants */
extern T0* T328f74(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.as_invariants */
extern T0* T246f83(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.has_type */
extern T1 T259f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.index_of */
extern T6 T434f52(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.index_of */
extern T6 T433f52(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.index_of */
extern T6 T314f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.index_of */
extern T6 T310f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.index_of */
extern T6 T293f50(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.index_of */
extern T6 T259f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.index_of */
extern T6 T218f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.dynamic_type */
extern T0* T259f6(GE_context* ac, T0* C, T6 a1);
/* detachable ET_AGENT_TYPED_OPEN_ARGUMENT.is_instance_free */
extern T1 T1487f9(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.is_instance_free */
extern T1 T970f40(GE_context* ac, T0* C);
/* [detachable] ET_AGENT_IMPLICIT_CURRENT_TARGET.position */
extern T0* T1738f3(GE_context* ac, T0* C);
/* detachable ET_AGENT_OPEN_TARGET.position */
extern T0* T1486f5(GE_context* ac, T0* C);
/* [detachable] ET_AGENT_IMPLICIT_CURRENT_TARGET.is_instance_free */
extern T1 T1738f5(GE_context* ac, T0* C);
/* detachable ET_AGENT_OPEN_TARGET.is_instance_free */
extern T1 T1486f8(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_TO_EXPRESSION.is_open_operand */
extern T1 T1973f18(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_FROM_EXPRESSION.is_open_operand */
extern T1 T1972f16(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_BUILTIN_EXPRESSION.is_open_operand */
extern T1 T1971f14(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_CAST_EXPRESSION.is_open_operand */
extern T1 T1905f14(GE_context* ac, T0* C);
/* [detachable] ET_AGENT_IMPLICIT_CURRENT_TARGET.is_open_operand */
extern T1 T1738f4(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1485f30(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1484f36(GE_context* ac, T0* C);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1483f32(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1482f31(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1481f37(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1480f33(GE_context* ac, T0* C);
/* detachable ET_ONCE_MANIFEST_STRING.is_open_operand */
extern T1 T1479f19(GE_context* ac, T0* C);
/* detachable ET_OLD_OBJECT_TEST.is_open_operand */
extern T1 T1478f23(GE_context* ac, T0* C);
/* detachable ET_OLD_EXPRESSION.is_open_operand */
extern T1 T1477f16(GE_context* ac, T0* C);
/* detachable ET_PREFIX_EXPRESSION.is_open_operand */
extern T1 T1476f21(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_TYPE.is_open_operand */
extern T1 T1475f17(GE_context* ac, T0* C);
/* detachable ET_INFIX_EXPRESSION.is_open_operand */
extern T1 T1472f21(GE_context* ac, T0* C);
/* detachable ET_EXPRESSION_ADDRESS.is_open_operand */
extern T1 T1471f16(GE_context* ac, T0* C);
/* detachable ET_RESULT_ADDRESS.is_open_operand */
extern T1 T1470f16(GE_context* ac, T0* C);
/* detachable ET_CURRENT_ADDRESS.is_open_operand */
extern T1 T1469f16(GE_context* ac, T0* C);
/* detachable ET_FEATURE_ADDRESS.is_open_operand */
extern T1 T1468f16(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_EXPRESSION.is_open_operand */
extern T1 T1467f20(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1422f27(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1421f27(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.is_open_operand */
extern T1 T1420f27(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.is_open_operand */
extern T1 T1419f27(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.is_open_operand */
extern T1 T1417f29(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.is_open_operand */
extern T1 T1416f29(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.is_open_operand */
extern T1 T1415f46(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T1414f46(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T1413f46(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_open_operand */
extern T1 T1412f46(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.is_open_operand */
extern T1 T1411f29(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.is_open_operand */
extern T1 T1410f33(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1409f28(GE_context* ac, T0* C);
/* detachable ET_STRIP_EXPRESSION.is_open_operand */
extern T1 T1220f23(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.is_open_operand */
extern T1 T1217f20(GE_context* ac, T0* C);
/* detachable ET_PARENTHESIZED_EXPRESSION.is_open_operand */
extern T1 T1188f11(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_ARRAY.is_open_operand */
extern T1 T1174f23(GE_context* ac, T0* C);
/* detachable ET_IF_EXPRESSION.is_open_operand */
extern T1 T1127f22(GE_context* ac, T0* C);
/* detachable ET_CALL_AGENT.is_open_operand */
extern T1 T1003f23(GE_context* ac, T0* C);
/* detachable ET_BRACKET_EXPRESSION.is_open_operand */
extern T1 T1000f20(GE_context* ac, T0* C);
/* detachable ET_ACROSS_EXPRESSION.is_open_operand */
extern T1 T973f27(GE_context* ac, T0* C);
/* detachable ET_VOID.is_open_operand */
extern T1 T962f24(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.is_open_operand */
extern T1 T848f27(GE_context* ac, T0* C);
/* [detachable] ET_NAMED_OBJECT_TEST.is_open_operand */
extern T1 T709f20(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_open_operand */
extern T1 T360f43(GE_context* ac, T0* C);
/* [detachable] ET_CREATE_EXPRESSION.is_open_operand */
extern T1 T319f18(GE_context* ac, T0* C);
/* [detachable] ET_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T309f14(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T308f14(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST.is_open_operand */
extern T1 T307f17(GE_context* ac, T0* C);
/* [detachable] ET_RESULT.is_open_operand */
extern T1 T300f18(GE_context* ac, T0* C);
/* [detachable] ET_MANIFEST_TUPLE.is_open_operand */
extern T1 T280f21(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T278f9(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T277f18(GE_context* ac, T0* C);
/* [detachable] ET_CURRENT.is_open_operand */
extern T1 T272f18(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_open_operand */
extern T1 T179f74(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_TO_EXPRESSION.expression_item */
extern T0* T1973f9(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_FROM_EXPRESSION.expression_item */
extern T0* T1972f9(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_BUILTIN_EXPRESSION.expression_item */
extern T0* T1971f8(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_CAST_EXPRESSION.expression_item */
extern T0* T1905f12(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1485f16(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1484f18(GE_context* ac, T0* C);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1483f34(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1482f33(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1481f40(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1480f18(GE_context* ac, T0* C);
/* detachable ET_ONCE_MANIFEST_STRING.expression_item */
extern T0* T1479f5(GE_context* ac, T0* C);
/* detachable ET_OLD_OBJECT_TEST.expression_item */
extern T0* T1478f10(GE_context* ac, T0* C);
/* detachable ET_OLD_EXPRESSION.expression_item */
extern T0* T1477f5(GE_context* ac, T0* C);
/* detachable ET_PREFIX_EXPRESSION.expression_item */
extern T0* T1476f6(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_TYPE.expression_item */
extern T0* T1475f5(GE_context* ac, T0* C);
/* detachable ET_INFIX_EXPRESSION.expression_item */
extern T0* T1472f6(GE_context* ac, T0* C);
/* detachable ET_EXPRESSION_ADDRESS.expression_item */
extern T0* T1471f7(GE_context* ac, T0* C);
/* detachable ET_RESULT_ADDRESS.expression_item */
extern T0* T1470f7(GE_context* ac, T0* C);
/* detachable ET_CURRENT_ADDRESS.expression_item */
extern T0* T1469f7(GE_context* ac, T0* C);
/* detachable ET_FEATURE_ADDRESS.expression_item */
extern T0* T1468f7(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_EXPRESSION.expression_item */
extern T0* T1467f8(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.expression_item */
extern T0* T1422f9(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.expression_item */
extern T0* T1421f9(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.expression_item */
extern T0* T1420f10(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.expression_item */
extern T0* T1419f10(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.expression_item */
extern T0* T1417f10(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.expression_item */
extern T0* T1416f10(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.expression_item */
extern T0* T1415f10(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.expression_item */
extern T0* T1414f10(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.expression_item */
extern T0* T1413f10(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.expression_item */
extern T0* T1412f10(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.expression_item */
extern T0* T1411f19(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.expression_item */
extern T0* T1410f19(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.expression_item */
extern T0* T1409f11(GE_context* ac, T0* C);
/* detachable ET_STRIP_EXPRESSION.expression_item */
extern T0* T1220f10(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.expression_item */
extern T0* T1217f8(GE_context* ac, T0* C);
/* detachable ET_PARENTHESIZED_EXPRESSION.expression_item */
extern T0* T1188f5(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_ARRAY.expression_item */
extern T0* T1174f10(GE_context* ac, T0* C);
/* detachable ET_IF_EXPRESSION.expression_item */
extern T0* T1127f10(GE_context* ac, T0* C);
/* detachable ET_CALL_AGENT.expression_item */
extern T0* T1003f10(GE_context* ac, T0* C);
/* detachable ET_BRACKET_EXPRESSION.expression_item */
extern T0* T1000f6(GE_context* ac, T0* C);
/* detachable ET_ACROSS_EXPRESSION.expression_item */
extern T0* T973f18(GE_context* ac, T0* C);
/* detachable ET_VOID.expression_item */
extern T0* T962f10(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.expression_item */
extern T0* T848f28(GE_context* ac, T0* C);
/* [detachable] ET_NAMED_OBJECT_TEST.expression_item */
extern T0* T709f9(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.expression_item */
extern T0* T360f14(GE_context* ac, T0* C);
/* [detachable] ET_CREATE_EXPRESSION.expression_item */
extern T0* T319f9(GE_context* ac, T0* C);
/* [detachable] ET_EQUALITY_EXPRESSION.expression_item */
extern T0* T309f8(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.expression_item */
extern T0* T308f8(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST.expression_item */
extern T0* T307f7(GE_context* ac, T0* C);
/* [detachable] ET_RESULT.expression_item */
extern T0* T300f7(GE_context* ac, T0* C);
/* [detachable] ET_MANIFEST_TUPLE.expression_item */
extern T0* T280f14(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T278f5(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T277f11(GE_context* ac, T0* C);
/* [detachable] ET_CURRENT.expression_item */
extern T0* T272f7(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.expression_item */
extern T0* T179f44(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_TO_EXPRESSION.is_empty_actual_argument */
extern T1 T1973f12(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_FROM_EXPRESSION.is_empty_actual_argument */
extern T1 T1972f12(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_BUILTIN_EXPRESSION.is_empty_actual_argument */
extern T1 T1971f11(GE_context* ac, T0* C);
/* [detachable] ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_empty */
extern T1 T1952f3(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_CAST_EXPRESSION.is_empty_actual_argument */
extern T1 T1905f11(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T1903f9(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1485f28(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1484f34(GE_context* ac, T0* C);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1483f30(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1482f29(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1481f35(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1480f31(GE_context* ac, T0* C);
/* detachable ET_ONCE_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1479f17(GE_context* ac, T0* C);
/* detachable ET_OLD_OBJECT_TEST.is_empty_actual_argument */
extern T1 T1478f21(GE_context* ac, T0* C);
/* detachable ET_OLD_EXPRESSION.is_empty_actual_argument */
extern T1 T1477f14(GE_context* ac, T0* C);
/* detachable ET_PREFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T1476f18(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_TYPE.is_empty_actual_argument */
extern T1 T1475f15(GE_context* ac, T0* C);
/* detachable ET_INFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T1472f18(GE_context* ac, T0* C);
/* detachable ET_EXPRESSION_ADDRESS.is_empty_actual_argument */
extern T1 T1471f14(GE_context* ac, T0* C);
/* detachable ET_RESULT_ADDRESS.is_empty_actual_argument */
extern T1 T1470f14(GE_context* ac, T0* C);
/* detachable ET_CURRENT_ADDRESS.is_empty_actual_argument */
extern T1 T1469f14(GE_context* ac, T0* C);
/* detachable ET_FEATURE_ADDRESS.is_empty_actual_argument */
extern T1 T1468f14(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_EXPRESSION.is_empty_actual_argument */
extern T1 T1467f18(GE_context* ac, T0* C);
/* detachable ET_ASSIGNER_INSTRUCTION.is_empty */
extern T1 T1456f14(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1422f25(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1421f25(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.is_empty_actual_argument */
extern T1 T1420f25(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.is_empty_actual_argument */
extern T1 T1419f25(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T1417f27(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T1416f27(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1415f43(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1414f43(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1413f43(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1412f43(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1411f27(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.is_empty_actual_argument */
extern T1 T1410f31(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1409f26(GE_context* ac, T0* C);
/* detachable ET_STRIP_EXPRESSION.is_empty_actual_argument */
extern T1 T1220f21(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T1217f18(GE_context* ac, T0* C);
/* detachable ET_PARENTHESIZED_EXPRESSION.is_empty_actual_argument */
extern T1 T1188f16(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_ARRAY.is_empty_actual_argument */
extern T1 T1174f21(GE_context* ac, T0* C);
/* detachable ET_IF_EXPRESSION.is_empty_actual_argument */
extern T1 T1127f20(GE_context* ac, T0* C);
/* detachable ET_CALL_AGENT.is_empty_actual_argument */
extern T1 T1003f20(GE_context* ac, T0* C);
/* detachable ET_BRACKET_EXPRESSION.is_empty_actual_argument */
extern T1 T1000f17(GE_context* ac, T0* C);
/* detachable ET_AGENT_ARGUMENT_OPERAND_LIST.is_empty */
extern T1 T990f9(GE_context* ac, T0* C);
/* detachable ET_ACROSS_EXPRESSION.is_empty_actual_argument */
extern T1 T973f25(GE_context* ac, T0* C);
/* detachable ET_VOID.is_empty_actual_argument */
extern T1 T962f22(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T848f25(GE_context* ac, T0* C);
/* [detachable] ET_NAMED_OBJECT_TEST.is_empty_actual_argument */
extern T1 T709f18(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T360f45(GE_context* ac, T0* C);
/* [detachable] ET_CREATE_EXPRESSION.is_empty_actual_argument */
extern T1 T319f20(GE_context* ac, T0* C);
/* [detachable] ET_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T309f15(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T308f16(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST.is_empty_actual_argument */
extern T1 T307f18(GE_context* ac, T0* C);
/* [detachable] ET_RESULT.is_empty_actual_argument */
extern T1 T300f23(GE_context* ac, T0* C);
/* [detachable] ET_MANIFEST_TUPLE.is_empty_actual_argument */
extern T1 T280f22(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T278f17(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T277f19(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T273f10(GE_context* ac, T0* C);
/* [detachable] ET_CURRENT.is_empty_actual_argument */
extern T1 T272f23(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_empty_actual_argument */
extern T1 T179f83(GE_context* ac, T0* C);
/* detachable ET_ASSIGNER_INSTRUCTION.count */
extern T6 T1456f12(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_TO_EXPRESSION.actual_argument */
extern T0* T1973f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CONVERT_FROM_EXPRESSION.actual_argument */
extern T0* T1972f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CONVERT_BUILTIN_EXPRESSION.actual_argument */
extern T0* T1971f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.actual_argument */
extern T0* T1952f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_INFIX_CAST_EXPRESSION.actual_argument */
extern T0* T1905f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T1903f8(GE_context* ac, T0* C, T6 a1);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1485f18(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1484f20(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1483f19(GE_context* ac, T0* C, T6 a1);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1482f20(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1481f22(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1480f21(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ONCE_MANIFEST_STRING.actual_argument */
extern T0* T1479f9(GE_context* ac, T0* C, T6 a1);
/* detachable ET_OLD_OBJECT_TEST.actual_argument */
extern T0* T1478f16(GE_context* ac, T0* C, T6 a1);
/* detachable ET_OLD_EXPRESSION.actual_argument */
extern T0* T1477f9(GE_context* ac, T0* C, T6 a1);
/* detachable ET_PREFIX_EXPRESSION.actual_argument */
extern T0* T1476f8(GE_context* ac, T0* C, T6 a1);
/* detachable ET_MANIFEST_TYPE.actual_argument */
extern T0* T1475f10(GE_context* ac, T0* C, T6 a1);
/* detachable ET_INFIX_EXPRESSION.actual_argument */
extern T0* T1472f9(GE_context* ac, T0* C, T6 a1);
/* detachable ET_EXPRESSION_ADDRESS.actual_argument */
extern T0* T1471f9(GE_context* ac, T0* C, T6 a1);
/* detachable ET_RESULT_ADDRESS.actual_argument */
extern T0* T1470f9(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CURRENT_ADDRESS.actual_argument */
extern T0* T1469f9(GE_context* ac, T0* C, T6 a1);
/* detachable ET_FEATURE_ADDRESS.actual_argument */
extern T0* T1468f9(GE_context* ac, T0* C, T6 a1);
/* detachable ET_PRECURSOR_EXPRESSION.actual_argument */
extern T0* T1467f13(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ASSIGNER_INSTRUCTION.actual_argument */
extern T0* T1456f13(GE_context* ac, T0* C, T6 a1);
/* detachable ET_C2_CHARACTER_CONSTANT.actual_argument */
extern T0* T1422f16(GE_context* ac, T0* C, T6 a1);
/* detachable ET_C1_CHARACTER_CONSTANT.actual_argument */
extern T0* T1421f16(GE_context* ac, T0* C, T6 a1);
/* detachable ET_FALSE_CONSTANT.actual_argument */
extern T0* T1420f17(GE_context* ac, T0* C, T6 a1);
/* detachable ET_TRUE_CONSTANT.actual_argument */
extern T0* T1419f17(GE_context* ac, T0* C, T6 a1);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.actual_argument */
extern T0* T1417f18(GE_context* ac, T0* C, T6 a1);
/* detachable ET_REGULAR_REAL_CONSTANT.actual_argument */
extern T0* T1416f18(GE_context* ac, T0* C, T6 a1);
/* detachable ET_BINARY_INTEGER_CONSTANT.actual_argument */
extern T0* T1415f19(GE_context* ac, T0* C, T6 a1);
/* detachable ET_OCTAL_INTEGER_CONSTANT.actual_argument */
extern T0* T1414f19(GE_context* ac, T0* C, T6 a1);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument */
extern T0* T1413f19(GE_context* ac, T0* C, T6 a1);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument */
extern T0* T1412f19(GE_context* ac, T0* C, T6 a1);
/* detachable ET_SPECIAL_MANIFEST_STRING.actual_argument */
extern T0* T1411f7(GE_context* ac, T0* C, T6 a1);
/* detachable ET_VERBATIM_STRING.actual_argument */
extern T0* T1410f23(GE_context* ac, T0* C, T6 a1);
/* detachable ET_C3_CHARACTER_CONSTANT.actual_argument */
extern T0* T1409f20(GE_context* ac, T0* C, T6 a1);
/* detachable ET_STRIP_EXPRESSION.actual_argument */
extern T0* T1220f15(GE_context* ac, T0* C, T6 a1);
/* detachable ET_STATIC_CALL_EXPRESSION.actual_argument */
extern T0* T1217f13(GE_context* ac, T0* C, T6 a1);
/* detachable ET_PARENTHESIZED_EXPRESSION.actual_argument */
extern T0* T1188f10(GE_context* ac, T0* C, T6 a1);
/* detachable ET_MANIFEST_ARRAY.actual_argument */
extern T0* T1174f16(GE_context* ac, T0* C, T6 a1);
/* detachable ET_IF_EXPRESSION.actual_argument */
extern T0* T1127f15(GE_context* ac, T0* C, T6 a1);
/* detachable ET_CALL_AGENT.actual_argument */
extern T0* T1003f13(GE_context* ac, T0* C, T6 a1);
/* detachable ET_BRACKET_EXPRESSION.actual_argument */
extern T0* T1000f11(GE_context* ac, T0* C, T6 a1);
/* detachable ET_AGENT_ARGUMENT_OPERAND_LIST.actual_argument */
extern T0* T990f7(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ACROSS_EXPRESSION.actual_argument */
extern T0* T973f20(GE_context* ac, T0* C, T6 a1);
/* detachable ET_VOID.actual_argument */
extern T0* T962f17(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_REGULAR_MANIFEST_STRING.actual_argument */
extern T0* T848f17(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NAMED_OBJECT_TEST.actual_argument */
extern T0* T709f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.actual_argument */
extern T0* T360f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CREATE_EXPRESSION.actual_argument */
extern T0* T319f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EQUALITY_EXPRESSION.actual_argument */
extern T0* T309f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.actual_argument */
extern T0* T308f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_OBJECT_TEST.actual_argument */
extern T0* T307f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_RESULT.actual_argument */
extern T0* T300f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_MANIFEST_TUPLE.actual_argument */
extern T0* T280f11(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T278f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T277f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T273f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CURRENT.actual_argument */
extern T0* T272f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_IDENTIFIER.actual_argument */
extern T0* T179f72(GE_context* ac, T0* C, T6 a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.last_leaf */
extern T0* T1455f77(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.last_leaf */
extern T0* T1454f80(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.last_leaf */
extern T0* T1453f80(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_CURRENT.last_leaf */
extern T0* T432f73(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.last_leaf */
extern T0* T247f110(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.last_leaf */
extern T0* T245f73(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.last_leaf */
extern T0* T72f249(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.last_leaf */
extern T0* T70f121(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1422f17(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1421f17(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.is_boolean_constant */
extern T1 T1417f19(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.is_boolean_constant */
extern T1 T1416f19(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1415f21(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1414f21(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1413f21(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1412f21(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.is_boolean_constant */
extern T1 T1411f8(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.is_boolean_constant */
extern T1 T1410f24(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1409f24(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.is_boolean_constant */
extern T1 T848f18(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T360f23(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.is_string_constant */
extern T1 T1422f19(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.is_string_constant */
extern T1 T1421f19(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.is_string_constant */
extern T1 T1420f20(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.is_string_constant */
extern T1 T1419f20(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.is_string_constant */
extern T1 T1417f21(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.is_string_constant */
extern T1 T1416f21(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.is_string_constant */
extern T1 T1415f31(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T1414f31(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T1413f31(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_string_constant */
extern T1 T1412f31(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.is_string_constant */
extern T1 T1409f8(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_string_constant */
extern T1 T360f33(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.is_character_constant */
extern T1 T1420f19(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.is_character_constant */
extern T1 T1419f19(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.is_character_constant */
extern T1 T1417f20(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.is_character_constant */
extern T1 T1416f20(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.is_character_constant */
extern T1 T1415f22(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T1414f22(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T1413f22(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_character_constant */
extern T1 T1412f22(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.is_character_constant */
extern T1 T1411f9(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.is_character_constant */
extern T1 T1410f25(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.is_character_constant */
extern T1 T848f19(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_character_constant */
extern T1 T360f24(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1422f35(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1421f35(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.is_integer_constant */
extern T1 T1420f36(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.is_integer_constant */
extern T1 T1419f36(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.is_integer_constant */
extern T1 T1417f38(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.is_integer_constant */
extern T1 T1416f38(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.is_integer_constant */
extern T1 T1411f40(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.is_integer_constant */
extern T1 T1410f44(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1409f36(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.is_integer_constant */
extern T1 T848f39(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST.name */
extern T0* T307f15(GE_context* ac, T0* C);
/* detachable ET_OLD_OBJECT_TEST.type */
extern T0* T1478f14(GE_context* ac, T0* C);
/* [detachable] ET_NAMED_OBJECT_TEST.type */
extern T0* T709f11(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST.type */
extern T0* T307f16(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1485f20(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1484f23(GE_context* ac, T0* C);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1483f21(GE_context* ac, T0* C);
/* detachable ET_CALL_AGENT.is_qualified_call */
extern T1 T1003f14(GE_context* ac, T0* C);
extern T1 T1003f14ot1(T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1485f26(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1485f31(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1484f33(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1484f37(GE_context* ac, T0* C);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1483f29(GE_context* ac, T0* C);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1483f33(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1482f27(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1482f32(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1481f34(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1481f38(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1480f30(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1480f34(GE_context* ac, T0* C);
/* detachable ET_CALL_AGENT.implicit_target_position */
extern T0* T1003f19(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_prefix */
extern T1 T1447f7(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_prefix */
extern T1 T874f13(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infix */
extern T1 T1447f47(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_infix */
extern T1 T874f12(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.feature_name */
extern T0* T1447f46(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.feature_name */
extern T0* T874f65(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.same_call_name */
extern T1 T1447f8(GE_context* ac, T0* C, T0* a1);
extern T1 T1447f8ot1(T0* a1, T0** a2);
/* detachable ET_INFIX_NAME.same_call_name */
extern T1 T1445f17(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PREFIX_FREE_NAME.same_call_name */
extern T1 T1444f20(GE_context* ac, T0* C, T0* a1);
extern T1 T1444f20ot1(T0* a1, T0** a2);
/* detachable ET_PREFIX_NAME.same_call_name */
extern T1 T1443f17(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ALIAS_NAME.same_call_name */
extern T1 T874f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INFIX_FREE_NAME.same_call_name */
extern T1 T849f24(GE_context* ac, T0* C, T0* a1);
extern T1 T849f24ot1(T0* a1, T0** a2);
/* [detachable] ET_IDENTIFIER.same_call_name */
extern T1 T179f73(GE_context* ac, T0* C, T0* a1);
extern T1 T179f73ot1(T0* a1, T0** a2);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_bracket */
extern T1 T1946f23(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_bracket */
extern T1 T1474f28(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_bracket */
extern T1 T1473f28(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_bracket */
extern T1 T1447f9(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_bracket */
extern T1 T1445f18(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_bracket */
extern T1 T1444f23(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_bracket */
extern T1 T1443f18(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_bracket */
extern T1 T959f37(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_bracket */
extern T1 T946f37(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_bracket */
extern T1 T938f40(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_bracket */
extern T1 T874f8(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_bracket */
extern T1 T849f25(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_bracket */
extern T1 T179f75(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_parenthesis */
extern T1 T1474f29(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_parenthesis */
extern T1 T1473f29(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_parenthesis */
extern T1 T1447f11(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_parenthesis */
extern T1 T1445f19(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_parenthesis */
extern T1 T1444f24(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_parenthesis */
extern T1 T1443f19(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_parenthesis */
extern T1 T959f38(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_parenthesis */
extern T1 T946f38(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_parenthesis */
extern T1 T938f41(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_parenthesis */
extern T1 T874f9(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_parenthesis */
extern T1 T849f26(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_parenthesis */
extern T1 T602f63(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_parenthesis */
extern T1 T179f76(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_infix_and */
extern T1 T1946f6(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_infix_and */
extern T1 T1474f7(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_infix_and */
extern T1 T1473f7(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infix_and */
extern T1 T1447f25(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_infix_and */
extern T1 T1445f15(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_infix_and */
extern T1 T1444f15(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_infix_and */
extern T1 T1443f15(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_infix_and */
extern T1 T959f12(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_infix_and */
extern T1 T946f16(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_infix_and */
extern T1 T938f15(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_infix_and */
extern T1 T874f19(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_infix_and */
extern T1 T849f22(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_infix_and */
extern T1 T602f36(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_infix_and */
extern T1 T179f40(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_infix_div */
extern T1 T1946f8(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_infix_div */
extern T1 T1474f16(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_infix_div */
extern T1 T1473f16(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infix_div */
extern T1 T1447f27(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_infix_div */
extern T1 T1445f50(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_infix_div */
extern T1 T1444f39(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_infix_div */
extern T1 T1443f36(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_infix_div */
extern T1 T959f25(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_infix_div */
extern T1 T946f25(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_infix_div */
extern T1 T938f28(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_infix_div */
extern T1 T874f21(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_infix_div */
extern T1 T849f39(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_infix_div */
extern T1 T602f50(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_infix_div */
extern T1 T179f53(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_infix_divide */
extern T1 T1946f9(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_infix_divide */
extern T1 T1474f17(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_infix_divide */
extern T1 T1473f17(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infix_divide */
extern T1 T1447f28(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_infix_divide */
extern T1 T1445f51(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_infix_divide */
extern T1 T1444f40(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_infix_divide */
extern T1 T1443f37(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_infix_divide */
extern T1 T959f26(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_infix_divide */
extern T1 T946f26(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_infix_divide */
extern T1 T938f29(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_infix_divide */
extern T1 T874f22(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_infix_divide */
extern T1 T849f40(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_infix_divide */
extern T1 T602f51(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_infix_divide */
extern T1 T179f54(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_infix_ge */
extern T1 T1946f10(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_infix_ge */
extern T1 T1474f18(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_infix_ge */
extern T1 T1473f18(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infix_ge */
extern T1 T1447f29(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_infix_ge */
extern T1 T1445f52(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_infix_ge */
extern T1 T1444f41(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_infix_ge */
extern T1 T1443f38(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_infix_ge */
extern T1 T959f27(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_infix_ge */
extern T1 T946f27(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_infix_ge */
extern T1 T938f30(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_infix_ge */
extern T1 T874f23(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_infix_ge */
extern T1 T849f41(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_infix_ge */
extern T1 T602f52(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_infix_ge */
extern T1 T179f55(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_infix_gt */
extern T1 T1946f11(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_infix_gt */
extern T1 T1474f19(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_infix_gt */
extern T1 T1473f19(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infix_gt */
extern T1 T1447f30(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_infix_gt */
extern T1 T1445f53(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_infix_gt */
extern T1 T1444f42(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_infix_gt */
extern T1 T1443f39(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_infix_gt */
extern T1 T959f28(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_infix_gt */
extern T1 T946f28(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_infix_gt */
extern T1 T938f31(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_infix_gt */
extern T1 T874f24(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_infix_gt */
extern T1 T849f42(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_infix_gt */
extern T1 T602f53(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_infix_gt */
extern T1 T179f56(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_infix_le */
extern T1 T1946f13(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_infix_le */
extern T1 T1474f20(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_infix_le */
extern T1 T1473f20(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infix_le */
extern T1 T1447f32(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_infix_le */
extern T1 T1445f54(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_infix_le */
extern T1 T1444f43(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_infix_le */
extern T1 T1443f40(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_infix_le */
extern T1 T959f29(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_infix_le */
extern T1 T946f29(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_infix_le */
extern T1 T938f32(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_infix_le */
extern T1 T874f26(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_infix_le */
extern T1 T849f43(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_infix_le */
extern T1 T602f54(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_infix_le */
extern T1 T179f57(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_infix_lt */
extern T1 T1946f14(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_infix_lt */
extern T1 T1474f21(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_infix_lt */
extern T1 T1473f21(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infix_lt */
extern T1 T1447f33(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_infix_lt */
extern T1 T1445f55(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_infix_lt */
extern T1 T1444f44(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_infix_lt */
extern T1 T1443f41(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_infix_lt */
extern T1 T959f30(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_infix_lt */
extern T1 T946f30(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_infix_lt */
extern T1 T938f33(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_infix_lt */
extern T1 T874f27(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_infix_lt */
extern T1 T849f44(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_infix_lt */
extern T1 T602f55(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_infix_lt */
extern T1 T179f58(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_infix_minus */
extern T1 T1946f15(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_infix_minus */
extern T1 T1474f22(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_infix_minus */
extern T1 T1473f22(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infix_minus */
extern T1 T1447f34(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_infix_minus */
extern T1 T1445f56(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_infix_minus */
extern T1 T1444f45(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_infix_minus */
extern T1 T1443f42(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_infix_minus */
extern T1 T959f31(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_infix_minus */
extern T1 T946f31(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_infix_minus */
extern T1 T938f34(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_infix_minus */
extern T1 T874f28(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_infix_minus */
extern T1 T849f45(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_infix_minus */
extern T1 T602f56(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_infix_minus */
extern T1 T179f59(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_infix_mod */
extern T1 T1946f16(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_infix_mod */
extern T1 T1474f23(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_infix_mod */
extern T1 T1473f23(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infix_mod */
extern T1 T1447f35(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_infix_mod */
extern T1 T1445f57(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_infix_mod */
extern T1 T1444f46(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_infix_mod */
extern T1 T1443f43(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_infix_mod */
extern T1 T959f32(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_infix_mod */
extern T1 T946f32(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_infix_mod */
extern T1 T938f35(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_infix_mod */
extern T1 T874f29(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_infix_mod */
extern T1 T849f46(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_infix_mod */
extern T1 T602f57(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_infix_mod */
extern T1 T179f60(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_infix_or */
extern T1 T1946f17(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_infix_or */
extern T1 T1474f8(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_infix_or */
extern T1 T1473f8(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infix_or */
extern T1 T1447f36(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_infix_or */
extern T1 T1445f16(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_infix_or */
extern T1 T1444f16(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_infix_or */
extern T1 T1443f16(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_infix_or */
extern T1 T959f13(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_infix_or */
extern T1 T946f17(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_infix_or */
extern T1 T938f16(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_infix_or */
extern T1 T874f30(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_infix_or */
extern T1 T849f23(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_infix_or */
extern T1 T602f37(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_infix_or */
extern T1 T179f41(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_infix_plus */
extern T1 T1946f19(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_infix_plus */
extern T1 T1474f24(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_infix_plus */
extern T1 T1473f24(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infix_plus */
extern T1 T1447f38(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_infix_plus */
extern T1 T1445f58(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_infix_plus */
extern T1 T1444f47(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_infix_plus */
extern T1 T1443f44(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_infix_plus */
extern T1 T959f33(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_infix_plus */
extern T1 T946f33(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_infix_plus */
extern T1 T938f36(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_infix_plus */
extern T1 T874f32(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_infix_plus */
extern T1 T849f47(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_infix_plus */
extern T1 T602f58(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_infix_plus */
extern T1 T179f61(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_infix_power */
extern T1 T1946f20(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_infix_power */
extern T1 T1474f25(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_infix_power */
extern T1 T1473f25(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infix_power */
extern T1 T1447f39(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_infix_power */
extern T1 T1445f59(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_infix_power */
extern T1 T1444f48(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_infix_power */
extern T1 T1443f45(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_infix_power */
extern T1 T959f34(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_infix_power */
extern T1 T946f34(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_infix_power */
extern T1 T938f37(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_infix_power */
extern T1 T874f33(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_infix_power */
extern T1 T849f48(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_infix_power */
extern T1 T602f59(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_infix_power */
extern T1 T179f62(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_infix_times */
extern T1 T1946f21(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_infix_times */
extern T1 T1474f26(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_infix_times */
extern T1 T1473f26(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infix_times */
extern T1 T1447f40(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_infix_times */
extern T1 T1445f60(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_infix_times */
extern T1 T1444f49(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_infix_times */
extern T1 T1443f46(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_infix_times */
extern T1 T959f35(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_infix_times */
extern T1 T946f35(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_infix_times */
extern T1 T938f38(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_infix_times */
extern T1 T874f34(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_infix_times */
extern T1 T849f49(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_infix_times */
extern T1 T602f60(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_infix_times */
extern T1 T179f63(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_infix_xor */
extern T1 T1946f22(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor */
extern T1 T1474f27(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_infix_xor */
extern T1 T1473f27(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infix_xor */
extern T1 T1447f41(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_infix_xor */
extern T1 T1445f61(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_infix_xor */
extern T1 T1444f50(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_infix_xor */
extern T1 T1443f47(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_infix_xor */
extern T1 T959f36(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_infix_xor */
extern T1 T946f36(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_infix_xor */
extern T1 T938f39(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_infix_xor */
extern T1 T874f35(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_infix_xor */
extern T1 T849f50(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_infix_xor */
extern T1 T602f61(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_infix_xor */
extern T1 T179f64(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_infix_dotdot */
extern T1 T1946f25(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_infix_dotdot */
extern T1 T1474f30(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_infix_dotdot */
extern T1 T1473f30(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infix_dotdot */
extern T1 T1447f44(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_infix_dotdot */
extern T1 T1445f71(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_infix_dotdot */
extern T1 T1444f60(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_infix_dotdot */
extern T1 T1443f57(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_infix_dotdot */
extern T1 T959f39(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_infix_dotdot */
extern T1 T946f39(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_infix_dotdot */
extern T1 T938f42(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_infix_dotdot */
extern T1 T874f61(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_infix_dotdot */
extern T1 T849f62(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_infix_dotdot */
extern T1 T602f64(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_infix_dotdot */
extern T1 T179f77(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_prefix_minus */
extern T1 T1946f37(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_prefix_minus */
extern T1 T1474f13(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_prefix_minus */
extern T1 T1473f13(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_prefix_minus */
extern T1 T1447f22(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_prefix_minus */
extern T1 T1445f47(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_prefix_minus */
extern T1 T1444f36(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_prefix_minus */
extern T1 T1443f33(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_prefix_minus */
extern T1 T959f23(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_prefix_minus */
extern T1 T946f23(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_prefix_minus */
extern T1 T938f26(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_prefix_minus */
extern T1 T874f16(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_prefix_minus */
extern T1 T849f36(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_prefix_minus */
extern T1 T602f47(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_prefix_minus */
extern T1 T179f50(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_prefix_plus */
extern T1 T1946f4(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_prefix_plus */
extern T1 T1474f14(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_prefix_plus */
extern T1 T1473f14(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_prefix_plus */
extern T1 T1447f23(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_prefix_plus */
extern T1 T1445f48(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_prefix_plus */
extern T1 T1444f37(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_prefix_plus */
extern T1 T1443f34(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_prefix_plus */
extern T1 T959f24(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_prefix_plus */
extern T1 T946f24(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_prefix_plus */
extern T1 T938f27(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_prefix_plus */
extern T1 T874f17(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_prefix_plus */
extern T1 T849f37(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_prefix_plus */
extern T1 T602f48(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_prefix_plus */
extern T1 T179f51(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_prefix_not */
extern T1 T1946f5(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not */
extern T1 T1474f15(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_prefix_not */
extern T1 T1473f15(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_prefix_not */
extern T1 T1447f24(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_prefix_not */
extern T1 T1445f49(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_prefix_not */
extern T1 T1444f38(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_prefix_not */
extern T1 T1443f35(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_prefix_not */
extern T1 T959f22(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_prefix_not */
extern T1 T946f22(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_prefix_not */
extern T1 T938f24(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_prefix_not */
extern T1 T874f18(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_prefix_not */
extern T1 T849f38(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_prefix_not */
extern T1 T602f49(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_prefix_not */
extern T1 T179f52(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.hash_code */
extern T6 T874f14(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_precursor */
extern T1 T1946f28(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_precursor */
extern T1 T1474f11(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_precursor */
extern T1 T1473f11(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_precursor */
extern T1 T1445f80(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_precursor */
extern T1 T1444f64(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_precursor */
extern T1 T1443f80(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_precursor */
extern T1 T959f20(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_precursor */
extern T1 T946f20(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_precursor */
extern T1 T938f22(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_KEYWORD.is_precursor */
extern T1 T920f14(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_precursor */
extern T1 T849f64(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_precursor */
extern T1 T602f44(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_precursor */
extern T1 T179f84(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.precursor_keyword */
extern T0* T1946f29(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.precursor_keyword */
extern T0* T1474f12(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.precursor_keyword */
extern T0* T1473f12(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.precursor_keyword */
extern T0* T1445f81(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.precursor_keyword */
extern T0* T1444f65(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.precursor_keyword */
extern T0* T1443f81(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.precursor_keyword */
extern T0* T959f21(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.precursor_keyword */
extern T0* T946f21(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.precursor_keyword */
extern T0* T938f23(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_KEYWORD.precursor_keyword */
extern T0* T920f15(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.precursor_keyword */
extern T0* T849f65(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.precursor_keyword */
extern T0* T602f45(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.precursor_keyword */
extern T0* T179f85(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_infix_and_then */
extern T1 T1946f7(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then */
extern T1 T1474f4(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infix_and_then */
extern T1 T1447f26(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_infix_and_then */
extern T1 T1445f12(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_infix_and_then */
extern T1 T1444f12(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_infix_and_then */
extern T1 T1443f12(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_infix_and_then */
extern T1 T959f9(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_infix_and_then */
extern T1 T946f13(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_infix_and_then */
extern T1 T938f12(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_KEYWORD.is_infix_and_then */
extern T1 T920f16(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_infix_and_then */
extern T1 T874f20(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_infix_and_then */
extern T1 T849f19(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_infix_and_then */
extern T1 T602f33(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_infix_and_then */
extern T1 T179f37(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_infix_implies */
extern T1 T1946f12(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies */
extern T1 T1474f6(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_infix_implies */
extern T1 T1473f6(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infix_implies */
extern T1 T1447f31(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_infix_implies */
extern T1 T1445f14(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_infix_implies */
extern T1 T1444f14(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_infix_implies */
extern T1 T1443f14(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_infix_implies */
extern T1 T959f11(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_infix_implies */
extern T1 T946f15(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_infix_implies */
extern T1 T938f14(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_KEYWORD.is_infix_implies */
extern T1 T920f17(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_infix_implies */
extern T1 T874f25(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_infix_implies */
extern T1 T849f21(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_infix_implies */
extern T1 T602f35(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_infix_implies */
extern T1 T179f39(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_infix_or_else */
extern T1 T1946f18(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else */
extern T1 T1473f5(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.is_infix_or_else */
extern T1 T1447f37(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_infix_or_else */
extern T1 T1445f13(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_infix_or_else */
extern T1 T1444f13(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_infix_or_else */
extern T1 T1443f13(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_infix_or_else */
extern T1 T959f10(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_infix_or_else */
extern T1 T946f14(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_infix_or_else */
extern T1 T938f13(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_KEYWORD.is_infix_or_else */
extern T1 T920f18(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.is_infix_or_else */
extern T1 T874f31(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_infix_or_else */
extern T1 T849f20(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_infix_or_else */
extern T1 T602f34(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_infix_or_else */
extern T1 T179f38(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.lower_name */
extern T0* T1946f27(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.name */
extern T0* T1946f33(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.lower_name */
extern T0* T1474f32(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.name */
extern T0* T1474f33(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.lower_name */
extern T0* T1473f32(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.name */
extern T0* T1473f33(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.lower_name */
extern T0* T1447f10(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.name */
extern T0* T1447f16(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.lower_name */
extern T0* T959f40(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.name */
extern T0* T959f41(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.lower_name */
extern T0* T946f40(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.name */
extern T0* T946f41(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.lower_name */
extern T0* T938f43(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.name */
extern T0* T938f44(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_KEYWORD.lower_name */
extern T0* T920f19(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.lower_name */
extern T0* T874f15(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.name */
extern T0* T874f62(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.lower_name */
extern T0* T602f65(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.name */
extern T0* T602f67(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_tuple_label */
extern T1 T1946f34(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.is_tuple_label */
extern T1 T1474f10(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.is_tuple_label */
extern T1 T1473f10(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_tuple_label */
extern T1 T959f15(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_tuple_label */
extern T1 T946f19(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_tuple_label */
extern T1 T938f18(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_tuple_label */
extern T1 T602f39(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.position */
extern T0* T1946f26(GE_context* ac, T0* C);
/* detachable ET_INFIX_OR_ELSE_OPERATOR.position */
extern T0* T1474f31(GE_context* ac, T0* C);
/* detachable ET_INFIX_AND_THEN_OPERATOR.position */
extern T0* T1473f31(GE_context* ac, T0* C);
/* detachable ET_ALIAS_FREE_NAME.position */
extern T0* T1447f42(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.position */
extern T0* T959f8(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.position */
extern T0* T946f5(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.position */
extern T0* T938f11(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_KEYWORD.position */
extern T0* T920f9(GE_context* ac, T0* C);
/* detachable ET_ALIAS_NAME.position */
extern T0* T874f36(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_TO_EXPRESSION.is_call_agent */
extern T1 T1973f16(GE_context* ac, T0* C);
/* detachable ET_PARENTHESIS_INSTRUCTION.is_call_agent */
extern T1 T1926f5(GE_context* ac, T0* C);
/* detachable ET_PREFIX_EXPRESSION.is_call_agent */
extern T1 T1476f11(GE_context* ac, T0* C);
/* detachable ET_INFIX_EXPRESSION.is_call_agent */
extern T1 T1472f11(GE_context* ac, T0* C);
/* detachable ET_ASSIGNER_INSTRUCTION.is_call_agent */
extern T1 T1456f10(GE_context* ac, T0* C);
/* detachable ET_BRACKET_EXPRESSION.is_call_agent */
extern T1 T1000f9(GE_context* ac, T0* C);
/* detachable ET_PARENTHESIS_EXPRESSION.is_call_agent */
extern T1 T845f6(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T277f8(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T274f6(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_TO_EXPRESSION.is_tuple_label */
extern T1 T1973f15(GE_context* ac, T0* C);
/* detachable ET_PARENTHESIS_INSTRUCTION.is_tuple_label */
extern T1 T1926f4(GE_context* ac, T0* C);
/* detachable ET_PREFIX_EXPRESSION.is_tuple_label */
extern T1 T1476f10(GE_context* ac, T0* C);
/* detachable ET_INFIX_EXPRESSION.is_tuple_label */
extern T1 T1472f10(GE_context* ac, T0* C);
/* detachable ET_ASSIGNER_INSTRUCTION.is_tuple_label */
extern T1 T1456f9(GE_context* ac, T0* C);
/* detachable ET_CALL_AGENT.is_tuple_label */
extern T1 T1003f24(GE_context* ac, T0* C);
/* detachable ET_BRACKET_EXPRESSION.is_tuple_label */
extern T1 T1000f8(GE_context* ac, T0* C);
/* detachable ET_PARENTHESIS_EXPRESSION.is_tuple_label */
extern T1 T845f5(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.is_tuple_label */
extern T1 T277f7(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_INSTRUCTION.is_tuple_label */
extern T1 T274f5(GE_context* ac, T0* C);
/* detachable ET_PARENTHESIS_INSTRUCTION.position */
extern T0* T1926f7(GE_context* ac, T0* C);
/* detachable ET_ASSIGNER_INSTRUCTION.position */
extern T0* T1456f11(GE_context* ac, T0* C);
/* detachable ET_PARENTHESIS_EXPRESSION.position */
extern T0* T845f9(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_INSTRUCTION.position */
extern T0* T274f8(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_TO_EXPRESSION.arguments */
extern T0* T1973f14(GE_context* ac, T0* C);
/* detachable ET_PREFIX_EXPRESSION.arguments */
extern T0* T1476f9(GE_context* ac, T0* C);
/* detachable ET_ASSIGNER_INSTRUCTION.arguments */
extern T0* T1456f8(GE_context* ac, T0* C);
/* detachable ET_CALL_AGENT.name */
extern T0* T1003f11(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.name */
extern T0* T277f6(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_INSTRUCTION.name */
extern T0* T274f7(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.feature_name */
extern T0* T1445f10(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.feature_name */
extern T0* T1444f27(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.feature_name */
extern T0* T1443f10(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.feature_name */
extern T0* T849f9(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.feature_name */
extern T0* T179f24(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_once */
extern T1 T1442f65(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.is_once */
extern T1 T458f56(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.is_once */
extern T1 T456f30(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_query */
extern T1 T1442f66(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.is_query */
extern T1 T1441f61(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.is_query */
extern T1 T1439f63(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.is_query */
extern T1 T1438f67(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.is_query */
extern T1 T1437f65(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.is_query */
extern T1 T458f57(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.is_query */
extern T1 T456f59(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.is_query */
extern T1 T361f42(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_query */
extern T1 T359f44(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_query */
extern T1 T357f43(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.is_query */
extern T1 T328f45(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_query */
extern T1 T246f45(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_dotnet */
extern T1 T1442f75(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.is_dotnet */
extern T1 T1441f71(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.is_dotnet */
extern T1 T1439f68(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.is_dotnet */
extern T1 T1438f72(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.is_dotnet */
extern T1 T1437f70(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.is_dotnet */
extern T1 T458f66(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.is_dotnet */
extern T1 T456f68(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.is_dotnet */
extern T1 T361f64(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_dotnet */
extern T1 T359f68(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_dotnet */
extern T1 T357f67(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.is_dotnet */
extern T1 T328f69(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_dotnet */
extern T1 T246f75(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.same_version */
extern T1 T1442f76(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.same_version */
extern T1 T1441f72(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.same_version */
extern T1 T1439f69(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.same_version */
extern T1 T1438f73(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.same_version */
extern T1 T1437f71(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.same_version */
extern T1 T458f67(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.same_version */
extern T1 T456f69(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTRIBUTE.same_version */
extern T1 T361f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.same_version */
extern T1 T359f69(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.same_version */
extern T1 T357f68(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.same_version */
extern T1 T328f70(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.same_version */
extern T1 T246f76(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.undefined_feature */
extern T0* T1442f73(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_feature_clause */
extern void T458f98(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_semicolon */
extern void T458f97(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_end_keyword */
extern void T458f96(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.undefined_feature */
extern T0* T1441f67(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.undefined_feature */
extern T0* T1439f64(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.set_feature_clause */
extern void T1439f101(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.set_semicolon */
extern void T1439f100(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.set_end_keyword */
extern void T1439f99(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.undefined_feature */
extern T0* T1438f68(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.undefined_feature */
extern T0* T1437f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.undefined_feature */
extern T0* T458f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.undefined_feature */
extern T0* T456f64(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTRIBUTE.undefined_feature */
extern T0* T361f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTRIBUTE.obsolete_message */
extern T0* T361f66(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.undefined_feature */
extern T0* T359f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.obsolete_message */
extern T0* T359f70(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.undefined_feature */
extern T0* T357f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.obsolete_message */
extern T0* T357f69(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.undefined_feature */
extern T0* T328f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.undefined_feature */
extern T0* T246f73(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.renamed_feature */
extern T0* T1442f74(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.set_feature_clause */
extern void T1442f107(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.set_semicolon */
extern void T1442f106(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.set_end_keyword */
extern void T1442f105(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.renamed_feature */
extern T0* T1441f68(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_feature_clause */
extern void T1441f105(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_semicolon */
extern void T1441f104(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_end_keyword */
extern void T1441f103(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.renamed_feature */
extern T0* T1439f65(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.set_deferred_keyword */
extern void T1439f98(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.renamed_feature */
extern T0* T1438f69(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_feature_clause */
extern void T1438f107(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_semicolon */
extern void T1438f106(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_end_keyword */
extern void T1438f105(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.renamed_feature */
extern T0* T1437f67(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_feature_clause */
extern void T1437f104(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_semicolon */
extern void T1437f103(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_end_keyword */
extern void T1437f102(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.renamed_feature */
extern T0* T458f63(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_deferred_keyword */
extern void T458f95(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.renamed_feature */
extern T0* T456f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.set_feature_clause */
extern void T456f101(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.set_semicolon */
extern void T456f100(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.set_end_keyword */
extern void T456f99(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTRIBUTE.renamed_feature */
extern T0* T361f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTRIBUTE.set_first_indexing */
extern void T361f92(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTRIBUTE.set_feature_clause */
extern void T361f91(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTRIBUTE.set_semicolon */
extern void T361f90(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.renamed_feature */
extern T0* T359f67(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_constant */
extern void T359f99(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_first_indexing */
extern void T359f98(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_feature_clause */
extern void T359f97(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_semicolon */
extern void T359f96(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_unique_keyword */
extern void T359f95(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_is_keyword */
extern void T359f94(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.renamed_feature */
extern T0* T357f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.set_first_indexing */
extern void T357f96(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.set_feature_clause */
extern void T357f95(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.set_semicolon */
extern void T357f94(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.set_is_keyword */
extern void T357f93(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.renamed_feature */
extern T0* T328f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_feature_clause */
extern void T328f102(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_semicolon */
extern void T328f101(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_end_keyword */
extern void T328f100(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.renamed_feature */
extern T0* T246f74(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_feature_clause */
extern void T246f110(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_semicolon */
extern void T246f109(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_end_keyword */
extern void T246f108(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.is_bracketable */
extern T1 T1442f72(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.is_bracketable */
extern T1 T1441f66(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.is_bracketable */
extern T1 T458f61(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.is_bracketable */
extern T1 T456f63(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_prefixable */
extern T1 T1442f71(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.is_prefixable */
extern T1 T1441f65(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.is_prefixable */
extern T1 T458f60(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.is_prefixable */
extern T1 T456f62(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_infixable */
extern T1 T1442f70(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.is_infixable */
extern T1 T1441f64(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.is_infixable */
extern T1 T458f59(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.is_infixable */
extern T1 T456f61(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_once_per_process */
extern T1 T1442f33(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.is_once_per_process */
extern T1 T1441f37(GE_context* ac, T0* C);
/* detachable ET_INDEXING_LIST.has_tagged_indexing_term_value */
extern T1 T1133f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_INDEXING_TERM_LIST.has_indexing_term_value */
extern T1 T1144f4(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.is_once_per_process */
extern T1 T1439f39(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.is_once_per_process */
extern T1 T1438f41(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.standard_once_keys */
extern T0* T1438f36(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.is_once_per_process */
extern T1 T1437f39(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.is_once_per_process */
extern T1 T458f40(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.is_once_per_process */
extern T1 T456f43(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.is_once_per_process */
extern T1 T361f43(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_once_per_process */
extern T1 T359f45(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_once_per_process */
extern T1 T357f44(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.is_once_per_process */
extern T1 T328f46(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_once_per_process */
extern T1 T246f51(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_attribute */
extern T1 T1442f37(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.is_attribute */
extern T1 T1441f40(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.is_attribute */
extern T1 T458f43(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.is_attribute */
extern T1 T456f41(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_unique_attribute */
extern T1 T1442f36(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.is_unique_attribute */
extern T1 T1441f36(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.is_unique_attribute */
extern T1 T458f37(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.is_unique_attribute */
extern T1 T456f48(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.has_class_postcondition_recursive */
extern T1 T1442f48(GE_context* ac, T0* C);
/* detachable ET_POSTCONDITIONS.has_class_assertion */
extern T1 T1200f7(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.has_class_postcondition_recursive */
extern T1 T1441f44(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.has_class_postcondition_recursive */
extern T1 T1439f46(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.has_class_postcondition_recursive */
extern T1 T1438f51(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.has_class_postcondition_recursive */
extern T1 T1437f48(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.has_class_postcondition_recursive */
extern T1 T458f45(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.has_class_postcondition_recursive */
extern T1 T456f46(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T361f53(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T359f60(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T357f58(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T328f58(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.has_class_postcondition_recursive */
extern T1 T246f66(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.type */
extern T0* T1442f31(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.type */
extern T0* T1441f33(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.type */
extern T0* T458f29(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.type */
extern T0* T456f44(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_procedure */
extern T1 T1442f64(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.is_procedure */
extern T1 T1441f59(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.is_procedure */
extern T1 T1439f62(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.is_procedure */
extern T1 T1438f66(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.is_procedure */
extern T1 T1437f64(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.is_procedure */
extern T1 T458f55(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.is_procedure */
extern T1 T456f58(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.is_procedure */
extern T1 T361f41(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_procedure */
extern T1 T359f43(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_procedure */
extern T1 T357f42(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.is_procedure */
extern T1 T328f44(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_procedure */
extern T1 T246f44(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_constant_attribute */
extern T1 T1442f35(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.is_constant_attribute */
extern T1 T1441f35(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.is_constant_attribute */
extern T1 T458f30(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.is_constant_attribute */
extern T1 T456f47(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T1442f46(GE_context* ac, T0* C);
/* detachable ET_PRECONDITIONS.is_instance_free */
extern T1 T394f8(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T1441f69(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T1439f66(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T1438f70(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T1437f68(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T458f64(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T456f66(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T361f62(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T359f58(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T357f56(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T328f67(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T246f64(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T1442f47(GE_context* ac, T0* C);
/* detachable ET_POSTCONDITIONS.is_instance_free */
extern T1 T1200f12(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T1441f70(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T1439f67(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T1438f71(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T1437f69(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T458f65(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T456f67(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T361f63(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T359f59(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T357f57(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T328f68(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T246f65(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_TO_EXPRESSION.is_never_void */
extern T1 T1973f5(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_BUILTIN_EXPRESSION.is_never_void */
extern T1 T1971f15(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_CAST_EXPRESSION.is_never_void */
extern T1 T1905f7(GE_context* ac, T0* C);
/* detachable ET_OLD_OBJECT_TEST.is_never_void */
extern T1 T1478f13(GE_context* ac, T0* C);
/* detachable ET_OLD_EXPRESSION.is_never_void */
extern T1 T1477f6(GE_context* ac, T0* C);
/* detachable ET_PREFIX_EXPRESSION.is_never_void */
extern T1 T1476f5(GE_context* ac, T0* C);
/* detachable ET_INFIX_EXPRESSION.is_never_void */
extern T1 T1472f15(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_EXPRESSION.is_never_void */
extern T1 T1467f11(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.is_never_void */
extern T1 T1217f9(GE_context* ac, T0* C);
/* detachable ET_PARENTHESIZED_EXPRESSION.is_never_void */
extern T1 T1188f6(GE_context* ac, T0* C);
/* detachable ET_IF_EXPRESSION.is_never_void */
extern T1 T1127f9(GE_context* ac, T0* C);
/* detachable ET_BRACKET_EXPRESSION.is_never_void */
extern T1 T1000f5(GE_context* ac, T0* C);
/* detachable ET_ACROSS_EXPRESSION.is_never_void */
extern T1 T973f17(GE_context* ac, T0* C);
/* detachable ET_VOID.is_never_void */
extern T1 T962f7(GE_context* ac, T0* C);
/* [detachable] ET_NAMED_OBJECT_TEST.is_never_void */
extern T1 T709f8(GE_context* ac, T0* C);
/* [detachable] ET_EQUALITY_EXPRESSION.is_never_void */
extern T1 T309f7(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.is_never_void */
extern T1 T308f7(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST.is_never_void */
extern T1 T307f9(GE_context* ac, T0* C);
/* [detachable] ET_RESULT.is_never_void */
extern T1 T300f5(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T278f8(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T277f9(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_never_void */
extern T1 T179f8(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_TO_EXPRESSION.unparenthesized_expression */
extern T0* T1973f7(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_FROM_EXPRESSION.unparenthesized_expression */
extern T0* T1972f7(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_BUILTIN_EXPRESSION.unparenthesized_expression */
extern T0* T1971f6(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_CAST_EXPRESSION.unparenthesized_expression */
extern T0* T1905f8(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1485f29(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1484f35(GE_context* ac, T0* C);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1483f31(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1482f30(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1481f36(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1480f32(GE_context* ac, T0* C);
/* detachable ET_ONCE_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1479f18(GE_context* ac, T0* C);
/* detachable ET_OLD_OBJECT_TEST.unparenthesized_expression */
extern T0* T1478f22(GE_context* ac, T0* C);
/* detachable ET_OLD_EXPRESSION.unparenthesized_expression */
extern T0* T1477f15(GE_context* ac, T0* C);
/* detachable ET_PREFIX_EXPRESSION.unparenthesized_expression */
extern T0* T1476f20(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_TYPE.unparenthesized_expression */
extern T0* T1475f16(GE_context* ac, T0* C);
/* detachable ET_INFIX_EXPRESSION.unparenthesized_expression */
extern T0* T1472f20(GE_context* ac, T0* C);
/* detachable ET_EXPRESSION_ADDRESS.unparenthesized_expression */
extern T0* T1471f15(GE_context* ac, T0* C);
/* detachable ET_RESULT_ADDRESS.unparenthesized_expression */
extern T0* T1470f15(GE_context* ac, T0* C);
/* detachable ET_CURRENT_ADDRESS.unparenthesized_expression */
extern T0* T1469f15(GE_context* ac, T0* C);
/* detachable ET_FEATURE_ADDRESS.unparenthesized_expression */
extern T0* T1468f15(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_EXPRESSION.unparenthesized_expression */
extern T0* T1467f19(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1422f26(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1421f26(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.unparenthesized_expression */
extern T0* T1420f26(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.unparenthesized_expression */
extern T0* T1419f26(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.unparenthesized_expression */
extern T0* T1417f28(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.unparenthesized_expression */
extern T0* T1416f28(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1415f44(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1414f44(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1413f44(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1412f44(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1411f28(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.unparenthesized_expression */
extern T0* T1410f32(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1409f27(GE_context* ac, T0* C);
/* detachable ET_STRIP_EXPRESSION.unparenthesized_expression */
extern T0* T1220f22(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T1217f19(GE_context* ac, T0* C);
/* detachable ET_PARENTHESIZED_EXPRESSION.unparenthesized_expression */
extern T0* T1188f17(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_ARRAY.unparenthesized_expression */
extern T0* T1174f22(GE_context* ac, T0* C);
/* detachable ET_IF_EXPRESSION.unparenthesized_expression */
extern T0* T1127f21(GE_context* ac, T0* C);
/* detachable ET_CALL_AGENT.unparenthesized_expression */
extern T0* T1003f22(GE_context* ac, T0* C);
/* detachable ET_BRACKET_EXPRESSION.unparenthesized_expression */
extern T0* T1000f19(GE_context* ac, T0* C);
/* detachable ET_ACROSS_EXPRESSION.unparenthesized_expression */
extern T0* T973f26(GE_context* ac, T0* C);
/* detachable ET_VOID.unparenthesized_expression */
extern T0* T962f23(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.unparenthesized_expression */
extern T0* T848f26(GE_context* ac, T0* C);
/* [detachable] ET_NAMED_OBJECT_TEST.unparenthesized_expression */
extern T0* T709f19(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T360f46(GE_context* ac, T0* C);
/* [detachable] ET_CREATE_EXPRESSION.unparenthesized_expression */
extern T0* T319f23(GE_context* ac, T0* C);
/* [detachable] ET_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T309f16(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T308f17(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST.unparenthesized_expression */
extern T0* T307f19(GE_context* ac, T0* C);
/* [detachable] ET_RESULT.unparenthesized_expression */
extern T0* T300f24(GE_context* ac, T0* C);
/* [detachable] ET_MANIFEST_TUPLE.unparenthesized_expression */
extern T0* T280f23(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T278f18(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T277f21(GE_context* ac, T0* C);
/* [detachable] ET_CURRENT.unparenthesized_expression */
extern T0* T272f24(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.unparenthesized_expression */
extern T0* T179f86(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_TO_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1973f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_CONVERT_FROM_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1972f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_CONVERT_BUILTIN_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1971f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_INFIX_CAST_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1905f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1485f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1484f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1483f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1482f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1481f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1480f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ONCE_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1479f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_OLD_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T1478f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_OLD_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1477f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_PREFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1476f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_MANIFEST_TYPE.manifest_constant_convert_feature */
extern T0* T1475f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_INFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1472f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_EXPRESSION_ADDRESS.manifest_constant_convert_feature */
extern T0* T1471f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_RESULT_ADDRESS.manifest_constant_convert_feature */
extern T0* T1470f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_CURRENT_ADDRESS.manifest_constant_convert_feature */
extern T0* T1469f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_FEATURE_ADDRESS.manifest_constant_convert_feature */
extern T0* T1468f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_PRECURSOR_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1467f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_C2_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1422f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_C1_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1421f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_FALSE_CONSTANT.manifest_constant_convert_feature */
extern T0* T1420f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_TRUE_CONSTANT.manifest_constant_convert_feature */
extern T0* T1419f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T1417f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_REGULAR_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T1416f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_BINARY_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1415f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_OCTAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1414f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1413f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1412f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_SPECIAL_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1411f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_SPECIAL_MANIFEST_STRING.tokens */
extern T0* T1411f35(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.manifest_constant_convert_feature */
extern T0* T1410f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_VERBATIM_STRING.tokens */
extern T0* T1410f39(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1409f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_STRIP_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1220f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_STATIC_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1217f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_PARENTHESIZED_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1188f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_MANIFEST_ARRAY.manifest_constant_convert_feature */
extern T0* T1174f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_IF_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1127f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_CALL_AGENT.manifest_constant_convert_feature */
extern T0* T1003f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_BRACKET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1000f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ACROSS_EXPRESSION.manifest_constant_convert_feature */
extern T0* T973f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_VOID.manifest_constant_convert_feature */
extern T0* T962f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_REGULAR_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T848f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_REGULAR_MANIFEST_STRING.tokens */
extern T0* T848f30(GE_context* ac, T0* C);
/* [detachable] ET_NAMED_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T709f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T360f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_CREATE_EXPRESSION.manifest_constant_convert_feature */
extern T0* T319f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T309f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T308f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T307f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_RESULT.manifest_constant_convert_feature */
extern T0* T300f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_MANIFEST_TUPLE.manifest_constant_convert_feature */
extern T0* T280f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T278f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T277f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_CURRENT.manifest_constant_convert_feature */
extern T0* T272f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_IDENTIFIER.manifest_constant_convert_feature */
extern T0* T179f94(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1485f35(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1484f41(GE_context* ac, T0* C);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1483f37(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1482f36(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1481f42(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1480f38(GE_context* ac, T0* C);
/* detachable ET_ONCE_MANIFEST_STRING.is_false */
extern T1 T1479f21(GE_context* ac, T0* C);
/* detachable ET_OLD_OBJECT_TEST.is_false */
extern T1 T1478f26(GE_context* ac, T0* C);
/* detachable ET_OLD_EXPRESSION.is_false */
extern T1 T1477f18(GE_context* ac, T0* C);
/* detachable ET_PREFIX_EXPRESSION.is_false */
extern T1 T1476f23(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_TYPE.is_false */
extern T1 T1475f19(GE_context* ac, T0* C);
/* detachable ET_INFIX_EXPRESSION.is_false */
extern T1 T1472f23(GE_context* ac, T0* C);
/* detachable ET_EXPRESSION_ADDRESS.is_false */
extern T1 T1471f18(GE_context* ac, T0* C);
/* detachable ET_RESULT_ADDRESS.is_false */
extern T1 T1470f18(GE_context* ac, T0* C);
/* detachable ET_CURRENT_ADDRESS.is_false */
extern T1 T1469f18(GE_context* ac, T0* C);
/* detachable ET_FEATURE_ADDRESS.is_false */
extern T1 T1468f18(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_EXPRESSION.is_false */
extern T1 T1467f22(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.is_false */
extern T1 T1422f34(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.is_false */
extern T1 T1421f34(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.is_false */
extern T1 T1420f35(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.is_false */
extern T1 T1419f35(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.is_false */
extern T1 T1417f37(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.is_false */
extern T1 T1416f37(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.is_false */
extern T1 T1415f54(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_false */
extern T1 T1414f54(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.is_false */
extern T1 T1413f54(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_false */
extern T1 T1412f54(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.is_false */
extern T1 T1411f39(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.is_false */
extern T1 T1410f43(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.is_false */
extern T1 T1409f35(GE_context* ac, T0* C);
/* detachable ET_STRIP_EXPRESSION.is_false */
extern T1 T1220f25(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.is_false */
extern T1 T1217f22(GE_context* ac, T0* C);
/* detachable ET_PARENTHESIZED_EXPRESSION.is_false */
extern T1 T1188f19(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_ARRAY.is_false */
extern T1 T1174f25(GE_context* ac, T0* C);
/* detachable ET_IF_EXPRESSION.is_false */
extern T1 T1127f24(GE_context* ac, T0* C);
/* detachable ET_CALL_AGENT.is_false */
extern T1 T1003f27(GE_context* ac, T0* C);
/* detachable ET_BRACKET_EXPRESSION.is_false */
extern T1 T1000f22(GE_context* ac, T0* C);
/* detachable ET_ACROSS_EXPRESSION.is_false */
extern T1 T973f30(GE_context* ac, T0* C);
/* detachable ET_VOID.is_false */
extern T1 T962f26(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.is_false */
extern T1 T848f38(GE_context* ac, T0* C);
/* [detachable] ET_NAMED_OBJECT_TEST.is_false */
extern T1 T709f23(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_false */
extern T1 T360f55(GE_context* ac, T0* C);
/* [detachable] ET_CREATE_EXPRESSION.is_false */
extern T1 T319f26(GE_context* ac, T0* C);
/* [detachable] ET_EQUALITY_EXPRESSION.is_false */
extern T1 T309f18(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.is_false */
extern T1 T308f20(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST.is_false */
extern T1 T307f21(GE_context* ac, T0* C);
/* [detachable] ET_RESULT.is_false */
extern T1 T300f27(GE_context* ac, T0* C);
/* [detachable] ET_MANIFEST_TUPLE.is_false */
extern T1 T280f25(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T278f20(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T277f23(GE_context* ac, T0* C);
/* [detachable] ET_CURRENT.is_false */
extern T1 T272f29(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_false */
extern T1 T179f101(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_TO_EXPRESSION.is_instance_free */
extern T1 T1973f17(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_FROM_EXPRESSION.is_instance_free */
extern T1 T1972f15(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_BUILTIN_EXPRESSION.is_instance_free */
extern T1 T1971f13(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_CAST_EXPRESSION.is_instance_free */
extern T1 T1905f5(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T1485f22(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T1484f27(GE_context* ac, T0* C);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T1483f25(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T1482f23(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T1481f28(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T1480f26(GE_context* ac, T0* C);
/* detachable ET_ONCE_MANIFEST_STRING.is_instance_free */
extern T1 T1479f13(GE_context* ac, T0* C);
/* detachable ET_OLD_OBJECT_TEST.is_instance_free */
extern T1 T1478f18(GE_context* ac, T0* C);
/* detachable ET_OLD_EXPRESSION.is_instance_free */
extern T1 T1477f11(GE_context* ac, T0* C);
/* detachable ET_PREFIX_EXPRESSION.is_instance_free */
extern T1 T1476f13(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_TYPE.is_instance_free */
extern T1 T1475f12(GE_context* ac, T0* C);
/* detachable ET_INFIX_EXPRESSION.is_instance_free */
extern T1 T1472f14(GE_context* ac, T0* C);
/* detachable ET_EXPRESSION_ADDRESS.is_instance_free */
extern T1 T1471f12(GE_context* ac, T0* C);
/* detachable ET_RESULT_ADDRESS.is_instance_free */
extern T1 T1470f12(GE_context* ac, T0* C);
/* detachable ET_CURRENT_ADDRESS.is_instance_free */
extern T1 T1469f12(GE_context* ac, T0* C);
/* detachable ET_FEATURE_ADDRESS.is_instance_free */
extern T1 T1468f12(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_EXPRESSION.is_instance_free */
extern T1 T1467f16(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.is_instance_free */
extern T1 T1422f22(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.is_instance_free */
extern T1 T1421f22(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.is_instance_free */
extern T1 T1420f23(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.is_instance_free */
extern T1 T1419f23(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.is_instance_free */
extern T1 T1417f24(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.is_instance_free */
extern T1 T1416f24(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.is_instance_free */
extern T1 T1415f40(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_instance_free */
extern T1 T1414f40(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.is_instance_free */
extern T1 T1413f40(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_instance_free */
extern T1 T1412f40(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.is_instance_free */
extern T1 T1411f18(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.is_instance_free */
extern T1 T1410f18(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.is_instance_free */
extern T1 T1409f16(GE_context* ac, T0* C);
/* detachable ET_STRIP_EXPRESSION.is_instance_free */
extern T1 T1220f18(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.is_instance_free */
extern T1 T1217f16(GE_context* ac, T0* C);
/* detachable ET_PARENTHESIZED_EXPRESSION.is_instance_free */
extern T1 T1188f14(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_ARRAY.is_instance_free */
extern T1 T1174f19(GE_context* ac, T0* C);
/* detachable ET_IF_EXPRESSION.is_instance_free */
extern T1 T1127f17(GE_context* ac, T0* C);
/* detachable ET_ELSEIF_EXPRESSION_LIST.is_instance_free */
extern T1 T1076f5(GE_context* ac, T0* C);
/* detachable ET_ELSEIF_EXPRESSION.is_instance_free */
extern T1 T1073f6(GE_context* ac, T0* C);
/* detachable ET_CALL_AGENT.is_instance_free */
extern T1 T1003f16(GE_context* ac, T0* C);
/* [detachable] ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_instance_free */
extern T1 T1952f4(GE_context* ac, T0* C);
/* detachable ET_AGENT_ARGUMENT_OPERAND_LIST.is_instance_free */
extern T1 T990f10(GE_context* ac, T0* C);
/* detachable ET_BRACKET_EXPRESSION.is_instance_free */
extern T1 T1000f13(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.is_instance_free */
extern T1 T1903f6(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_ARGUMENT_LIST.is_instance_free */
extern T1 T273f11(GE_context* ac, T0* C);
/* detachable ET_ACROSS_EXPRESSION.is_instance_free */
extern T1 T973f22(GE_context* ac, T0* C);
/* detachable ET_LOOP_INVARIANTS.is_instance_free */
extern T1 T1171f7(GE_context* ac, T0* C);
/* detachable ET_VOID.is_instance_free */
extern T1 T962f19(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.is_instance_free */
extern T1 T848f22(GE_context* ac, T0* C);
/* [detachable] ET_NAMED_OBJECT_TEST.is_instance_free */
extern T1 T709f15(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_instance_free */
extern T1 T360f37(GE_context* ac, T0* C);
/* [detachable] ET_CREATE_EXPRESSION.is_instance_free */
extern T1 T319f15(GE_context* ac, T0* C);
/* [detachable] ET_EQUALITY_EXPRESSION.is_instance_free */
extern T1 T309f11(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.is_instance_free */
extern T1 T308f11(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST.is_instance_free */
extern T1 T307f12(GE_context* ac, T0* C);
/* [detachable] ET_RESULT.is_instance_free */
extern T1 T300f20(GE_context* ac, T0* C);
/* [detachable] ET_MANIFEST_TUPLE.is_instance_free */
extern T1 T280f18(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.is_instance_free */
extern T1 T278f11(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.is_instance_free */
extern T1 T277f15(GE_context* ac, T0* C);
/* [detachable] ET_CURRENT.is_instance_free */
extern T1 T272f20(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_instance_free */
extern T1 T179f79(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_feature_name */
extern T1 T179f82(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_TO_EXPRESSION.position */
extern T0* T1973f8(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_FROM_EXPRESSION.position */
extern T0* T1972f8(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_BUILTIN_EXPRESSION.position */
extern T0* T1971f7(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_CAST_EXPRESSION.position */
extern T0* T1905f4(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.position */
extern T0* T1485f32(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.position */
extern T0* T1484f38(GE_context* ac, T0* C);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.position */
extern T0* T1483f35(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.position */
extern T0* T1482f17(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.position */
extern T0* T1481f19(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.position */
extern T0* T1480f19(GE_context* ac, T0* C);
/* detachable ET_ONCE_MANIFEST_STRING.position */
extern T0* T1479f10(GE_context* ac, T0* C);
/* detachable ET_OLD_OBJECT_TEST.position */
extern T0* T1478f11(GE_context* ac, T0* C);
/* detachable ET_OLD_EXPRESSION.position */
extern T0* T1477f4(GE_context* ac, T0* C);
/* detachable ET_PREFIX_EXPRESSION.position */
extern T0* T1476f15(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_TYPE.position */
extern T0* T1475f8(GE_context* ac, T0* C);
/* detachable ET_INFIX_EXPRESSION.position */
extern T0* T1472f7(GE_context* ac, T0* C);
/* detachable ET_EXPRESSION_ADDRESS.position */
extern T0* T1471f4(GE_context* ac, T0* C);
/* detachable ET_RESULT_ADDRESS.position */
extern T0* T1470f4(GE_context* ac, T0* C);
/* detachable ET_CURRENT_ADDRESS.position */
extern T0* T1469f4(GE_context* ac, T0* C);
/* detachable ET_FEATURE_ADDRESS.position */
extern T0* T1468f4(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_EXPRESSION.position */
extern T0* T1467f10(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.position */
extern T0* T1422f11(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.position */
extern T0* T1421f11(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.position */
extern T0* T1420f8(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.position */
extern T0* T1419f8(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.position */
extern T0* T1417f12(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.position */
extern T0* T1416f12(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.position */
extern T0* T1415f12(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.position */
extern T0* T1414f12(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.position */
extern T0* T1413f12(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.position */
extern T0* T1412f12(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.position */
extern T0* T1411f21(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.position */
extern T0* T1410f21(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.position */
extern T0* T1409f17(GE_context* ac, T0* C);
/* detachable ET_STRIP_EXPRESSION.position */
extern T0* T1220f9(GE_context* ac, T0* C);
/* detachable ET_STRIP_EXPRESSION.is_empty */
extern T1 T1220f12(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.position */
extern T0* T1217f7(GE_context* ac, T0* C);
/* detachable ET_PARENTHESIZED_EXPRESSION.position */
extern T0* T1188f8(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_ARRAY.position */
extern T0* T1174f9(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_ARRAY.position */
extern T0* T1174f9p1(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_ARRAY.is_empty */
extern T1 T1174f12(GE_context* ac, T0* C);
/* detachable ET_IF_EXPRESSION.position */
extern T0* T1127f12(GE_context* ac, T0* C);
/* detachable ET_CALL_AGENT.position */
extern T0* T1003f8(GE_context* ac, T0* C);
/* detachable ET_BRACKET_EXPRESSION.position */
extern T0* T1000f7(GE_context* ac, T0* C);
/* detachable ET_ACROSS_EXPRESSION.position */
extern T0* T973f15(GE_context* ac, T0* C);
/* detachable ET_VOID.position */
extern T0* T962f8(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.position */
extern T0* T848f6(GE_context* ac, T0* C);
/* [detachable] ET_NAMED_OBJECT_TEST.position */
extern T0* T709f7(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.position */
extern T0* T360f44(GE_context* ac, T0* C);
/* [detachable] ET_CREATE_EXPRESSION.position */
extern T0* T319f8(GE_context* ac, T0* C);
/* [detachable] ET_EQUALITY_EXPRESSION.position */
extern T0* T309f6(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.position */
extern T0* T308f6(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST.position */
extern T0* T307f6(GE_context* ac, T0* C);
/* [detachable] ET_RESULT.position */
extern T0* T300f8(GE_context* ac, T0* C);
/* [detachable] ET_MANIFEST_TUPLE.position */
extern T0* T280f15(GE_context* ac, T0* C);
/* [detachable] ET_MANIFEST_TUPLE.is_empty */
extern T1 T280f16(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.position */
extern T0* T278f14(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.position */
extern T0* T277f10(GE_context* ac, T0* C);
/* [detachable] ET_CURRENT.position */
extern T0* T272f8(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_TO_EXPRESSION.last_leaf */
extern T0* T1973f21(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_FROM_EXPRESSION.last_leaf */
extern T0* T1972f21(GE_context* ac, T0* C);
/* [detachable] ET_CONVERT_BUILTIN_EXPRESSION.last_leaf */
extern T0* T1971f16(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_CAST_EXPRESSION.last_leaf */
extern T0* T1905f15(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1485f36(GE_context* ac, T0* C);
extern T1 T1485f36ot1(T0* a1, T0** a2);
/* detachable ET_AGENT_ARGUMENT_OPERAND_LIST.last_leaf */
extern T0* T990f11(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1484f42(GE_context* ac, T0* C);
extern T1 T1484f42ot1(T0* a1, T0** a2);
/* detachable ET_DO_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1483f38(GE_context* ac, T0* C);
extern T1 T1483f38ot1(T0* a1, T0** a2);
/* detachable ET_EXTERNAL_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T1482f37(GE_context* ac, T0* C);
extern T1 T1482f37ot1(T0* a1, T0** a2);
/* detachable ET_ONCE_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T1481f43(GE_context* ac, T0* C);
extern T1 T1481f43ot1(T0* a1, T0** a2);
/* detachable ET_DO_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T1480f39(GE_context* ac, T0* C);
extern T1 T1480f39ot1(T0* a1, T0** a2);
/* detachable ET_ONCE_MANIFEST_STRING.last_leaf */
extern T0* T1479f22(GE_context* ac, T0* C);
/* detachable ET_OLD_OBJECT_TEST.last_leaf */
extern T0* T1478f27(GE_context* ac, T0* C);
/* detachable ET_OLD_EXPRESSION.last_leaf */
extern T0* T1477f19(GE_context* ac, T0* C);
/* detachable ET_PREFIX_EXPRESSION.last_leaf */
extern T0* T1476f24(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_TYPE.last_leaf */
extern T0* T1475f20(GE_context* ac, T0* C);
/* detachable ET_INFIX_EXPRESSION.last_leaf */
extern T0* T1472f24(GE_context* ac, T0* C);
/* detachable ET_EXPRESSION_ADDRESS.last_leaf */
extern T0* T1471f19(GE_context* ac, T0* C);
/* detachable ET_RESULT_ADDRESS.last_leaf */
extern T0* T1470f19(GE_context* ac, T0* C);
/* detachable ET_CURRENT_ADDRESS.last_leaf */
extern T0* T1469f19(GE_context* ac, T0* C);
/* detachable ET_FEATURE_ADDRESS.last_leaf */
extern T0* T1468f19(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_EXPRESSION.last_leaf */
extern T0* T1467f23(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.last_leaf */
extern T0* T1422f40(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.last_leaf */
extern T0* T1421f40(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.last_leaf */
extern T0* T1420f37(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.last_leaf */
extern T0* T1419f37(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.last_leaf */
extern T0* T1417f39(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.last_leaf */
extern T0* T1416f39(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.last_leaf */
extern T0* T1415f61(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.last_leaf */
extern T0* T1414f61(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.last_leaf */
extern T0* T1413f61(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.last_leaf */
extern T0* T1412f61(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.last_leaf */
extern T0* T1411f41(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.last_leaf */
extern T0* T1410f45(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.last_leaf */
extern T0* T1409f41(GE_context* ac, T0* C);
/* detachable ET_STRIP_EXPRESSION.last_leaf */
extern T0* T1220f26(GE_context* ac, T0* C);
/* detachable ET_STATIC_CALL_EXPRESSION.last_leaf */
extern T0* T1217f27(GE_context* ac, T0* C);
/* detachable ET_PARENTHESIZED_EXPRESSION.last_leaf */
extern T0* T1188f20(GE_context* ac, T0* C);
/* detachable ET_MANIFEST_ARRAY.last_leaf */
extern T0* T1174f26(GE_context* ac, T0* C);
/* detachable ET_IF_EXPRESSION.last_leaf */
extern T0* T1127f25(GE_context* ac, T0* C);
/* detachable ET_CALL_AGENT.last_leaf */
extern T0* T1003f28(GE_context* ac, T0* C);
extern T1 T1003f28ot1(T0* a1, T0** a2);
/* detachable ET_BRACKET_EXPRESSION.last_leaf */
extern T0* T1000f23(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.last_leaf */
extern T0* T602f106(GE_context* ac, T0* C);
/* detachable ET_ACROSS_EXPRESSION.last_leaf */
extern T0* T973f31(GE_context* ac, T0* C);
/* detachable ET_VOID.last_leaf */
extern T0* T962f27(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.last_leaf */
extern T0* T848f40(GE_context* ac, T0* C);
/* [detachable] ET_NAMED_OBJECT_TEST.last_leaf */
extern T0* T709f24(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.last_leaf */
extern T0* T360f58(GE_context* ac, T0* C);
/* [detachable] ET_CREATE_EXPRESSION.last_leaf */
extern T0* T319f24(GE_context* ac, T0* C);
/* [detachable] ET_EQUALITY_EXPRESSION.last_leaf */
extern T0* T309f19(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_EQUALITY_EXPRESSION.last_leaf */
extern T0* T308f21(GE_context* ac, T0* C);
/* [detachable] ET_OBJECT_TEST.last_leaf */
extern T0* T307f22(GE_context* ac, T0* C);
/* [detachable] ET_RESULT.last_leaf */
extern T0* T300f28(GE_context* ac, T0* C);
/* [detachable] ET_MANIFEST_TUPLE.last_leaf */
extern T0* T280f26(GE_context* ac, T0* C);
/* [detachable] ET_UNQUALIFIED_CALL_EXPRESSION.last_leaf */
extern T0* T278f23(GE_context* ac, T0* C);
/* [detachable] ET_QUALIFIED_CALL_EXPRESSION.last_leaf */
extern T0* T277f24(GE_context* ac, T0* C);
/* [detachable] ET_CURRENT.last_leaf */
extern T0* T272f30(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T1427f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T852f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T245f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.type_id */
extern T6 T434f29(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.type_id */
extern T6 T433f29(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.type_id */
extern T6 T314f9(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.type_id */
extern T6 T310f28(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.type_id */
extern T6 T293f29(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.type_id */
extern T6 T218f38(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.is_generic */
extern T1 T314f6(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.base_type */
extern T0* T314f8(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.base_class */
extern T0* T314f10(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.conforms_to_type */
extern T1 T434f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_type */
extern T1 T433f48(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.conforms_to_type */
extern T1 T314f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.conforms_to_type */
extern T1 T310f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.conforms_to_type */
extern T1 T293f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.conforms_to_type */
extern T1 T218f34(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.hash_code */
extern T6 T314f21(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.is_basic */
extern T1 T314f20(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T1393f7(GE_context* ac, T0* C, T0* a1);
extern T1 T1393f7ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T1393f7p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T1393f11(GE_context* ac, T0* C, T0* a1);
extern T1 T1393f11ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T1393f11p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T459f11(GE_context* ac, T0* C, T0* a1);
extern T1 T459f11ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T459f11p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T459f13(GE_context* ac, T0* C, T0* a1);
extern T1 T459f13ot1(T0* a1, T0** a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T459f13p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.has_type */
extern T1 T434f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.has_type */
extern T1 T433f33(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.has_type */
extern T1 T314f19(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.has_type */
extern T1 T310f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.has_type */
extern T1 T293f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T260f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T260f7p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T260f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T260f8p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.has_type */
extern T1 T218f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.dynamic_types */
extern T0* T434f51(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.dynamic_types */
extern T0* T433f51(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.dynamic_types */
extern T0* T314f16(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.dynamic_types */
extern T0* T310f49(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.dynamic_types */
extern T0* T293f49(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.dynamic_types */
extern T0* T218f48(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.special_type */
extern T0* T1393f14(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET.special_type */
extern T0* T459f14(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.special_type */
extern T0* T434f53(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.special_type */
extern T0* T433f53(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.special_type */
extern T0* T314f23(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.special_type */
extern T0* T310f51(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.special_type */
extern T0* T293f51(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.special_type */
extern T0* T260f12(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.special_type */
extern T0* T218f50(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_empty */
extern T1 T1393f8(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET.is_empty */
extern T1 T459f7(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.is_empty */
extern T1 T434f56(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.is_empty */
extern T1 T433f24(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.is_empty */
extern T1 T314f12(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.is_empty */
extern T1 T310f43(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.is_empty */
extern T1 T293f43(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.is_empty */
extern T1 T260f10(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.is_empty */
extern T1 T218f26(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_expanded */
extern T1 T1393f9(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET.is_expanded */
extern T1 T459f10(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.is_expanded */
extern T1 T314f5(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.is_expanded */
extern T1 T260f11(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_expanded */
extern T1 T1393f12(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET.has_expanded */
extern T1 T459f12(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.has_expanded */
extern T1 T434f31(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.has_expanded */
extern T1 T433f31(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.has_expanded */
extern T1 T314f18(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.has_expanded */
extern T1 T310f41(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.has_expanded */
extern T1 T293f41(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.has_expanded */
extern T1 T260f6(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.has_expanded */
extern T1 T218f24(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.count */
extern T6 T434f25(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.count */
extern T6 T433f25(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.count */
extern T6 T314f13(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.count */
extern T6 T310f36(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.count */
extern T6 T293f36(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.count */
extern T6 T218f53(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.dynamic_type */
extern T0* T1393f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET.dynamic_type */
extern T0* T459f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.dynamic_type */
extern T0* T434f26(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.dynamic_type */
extern T0* T433f26(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.dynamic_type */
extern T0* T314f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.dynamic_type */
extern T0* T310f37(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.dynamic_type */
extern T0* T293f37(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.dynamic_type */
extern T0* T260f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.dynamic_type */
extern T0* T218f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.can_be_void */
extern T1 T1393f10(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET.can_be_void */
extern T1 T459f8(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.can_be_void */
extern T1 T434f49(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.can_be_void */
extern T1 T433f55(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.can_be_void */
extern T1 T314f11(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.can_be_void */
extern T1 T310f39(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.can_be_void */
extern T1 T293f39(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_STANDALONE_TYPE_SET.can_be_void */
extern T1 T260f9(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.can_be_void */
extern T1 T218f23(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.is_never_void */
extern T1 T434f32(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.is_never_void */
extern T1 T433f32(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.is_never_void */
extern T1 T314f15(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.is_never_void */
extern T1 T310f38(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.is_never_void */
extern T1 T293f38(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.is_never_void */
extern T1 T218f52(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.static_type */
extern T0* T434f44(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.static_type */
extern T0* T433f46(GE_context* ac, T0* C);
/* detachable ET_DYNAMIC_SECONDARY_TYPE.static_type */
extern T0* T314f7(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.static_type */
extern T0* T310f44(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.static_type */
extern T0* T293f45(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.static_type */
extern T0* T218f45(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.named_types */
extern T0* T1881f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T1880f9(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FORMAL_PARAMETER_LIST.named_types */
extern T0* T585f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T559f2(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.named_types */
extern T0* T235f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.conforms_to_types */
extern T1 T1881f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T1880f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_FORMAL_PARAMETER_LIST.conforms_to_types */
extern T1 T585f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T559f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.conforms_to_types */
extern T1 T235f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.has_unqualified_anchored_type */
extern T1 T1881f7(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_unqualified_anchored_type */
extern T1 T1880f7(GE_context* ac, T0* C);
/* detachable ET_FORMAL_PARAMETER_LIST.has_unqualified_anchored_type */
extern T1 T585f15(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_unqualified_anchored_type */
extern T1 T559f8(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.has_unqualified_anchored_type */
extern T1 T235f16(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.has_formal_types */
extern T1 T1881f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T1880f8(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FORMAL_PARAMETER_LIST.has_formal_types */
extern T1 T585f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T559f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.has_formal_types */
extern T1 T235f17(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.depends_on_qualified_anchored_type */
extern T1 T1881f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T1880f10(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FORMAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T585f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T559f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T235f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.has_identifier_anchored_type */
extern T1 T1881f11(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T1880f11(GE_context* ac, T0* C);
/* detachable ET_FORMAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T585f21(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T559f11(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T235f19(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.resolved_formal_parameters */
extern T0* T1881f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T1880f12(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FORMAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T585f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T559f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T235f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.same_syntactical_types */
extern T1 T1881f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T1880f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_FORMAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T585f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T559f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T235f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.actual_parameter */
extern T0* T1881f16(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T1880f16(GE_context* ac, T0* C, T6 a1);
/* detachable ET_FORMAL_PARAMETER_LIST.actual_parameter */
extern T0* T585f19(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T559f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.actual_parameter */
extern T0* T235f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.item */
extern T0* T235f6(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.index_of_label */
extern T6 T1881f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T1880f17(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FORMAL_PARAMETER_LIST.index_of_label */
extern T6 T585f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T559f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.index_of_label */
extern T6 T235f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.same_named_types */
extern T1 T1881f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T1880f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_FORMAL_PARAMETER_LIST.same_named_types */
extern T1 T585f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T559f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.same_named_types */
extern T1 T235f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.is_empty */
extern T1 T1881f4(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T1880f15(GE_context* ac, T0* C);
/* detachable ET_FORMAL_PARAMETER_LIST.is_empty */
extern T1 T585f11(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T559f5(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T235f10(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.count */
extern T6 T1881f17(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.type */
extern T0* T1881f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T1880f14(GE_context* ac, T0* C, T6 a1);
/* detachable ET_FORMAL_PARAMETER_LIST.type */
extern T0* T585f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T559f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.type */
extern T0* T235f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.last_leaf */
extern T0* T1881f21(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.null_leaf */
extern T0* T71f1524(GE_context* ac, T0* C);
/* [detachable] ET_AST_NULL_LEAF.make */
extern T0* T2018c5(GE_context* ac);
/* [detachable] ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T1880f18(GE_context* ac, T0* C);
/* detachable ET_FORMAL_PARAMETER_LIST.last_leaf */
extern T0* T585f25(GE_context* ac, T0* C);
/* [detachable] ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T559f16(GE_context* ac, T0* C);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.last_leaf */
extern T0* T235f25(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.is_reference_mark */
extern T1 T970f6(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_reference_mark */
extern T1 T602f14(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_reference_mark */
extern T1 T553f4(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_reference_mark */
extern T1 T402f9(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_reference_mark */
extern T1 T342f10(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.is_separate_mark */
extern T1 T970f7(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_separate_mark */
extern T1 T602f15(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_separate_mark */
extern T1 T553f5(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_separate_mark */
extern T1 T402f10(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_separate_mark */
extern T1 T342f11(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.is_explicit_attachment_mark */
extern T1 T970f10(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.is_question_mark */
extern T1 T970f14(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.is_bang */
extern T1 T970f12(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.is_detachable */
extern T1 T970f13(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.is_attached */
extern T1 T970f11(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_explicit_attachment_mark */
extern T1 T602f18(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_question_mark */
extern T1 T602f22(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_bang */
extern T1 T602f20(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_detachable */
extern T1 T602f21(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_attached */
extern T1 T602f19(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_explicit_attachment_mark */
extern T1 T402f24(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_question_mark */
extern T1 T402f17(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_bang */
extern T1 T402f15(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_detachable */
extern T1 T402f16(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_attached */
extern T1 T402f14(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_explicit_attachment_mark */
extern T1 T342f14(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_question_mark */
extern T1 T342f19(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_bang */
extern T1 T342f17(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_detachable */
extern T1 T342f18(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_attached */
extern T1 T342f16(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.is_explicit_attachment_mark */
extern T1 T341f12(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.is_question_mark */
extern T1 T341f19(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.is_bang */
extern T1 T341f18(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.is_detachable */
extern T1 T341f17(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.is_attached */
extern T1 T341f16(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.overridden_type_mark */
extern T0* T970f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TOKEN_CONSTANTS.implicit_type_mark */
extern T0* T71f44(GE_context* ac, T0* C, T1 a1, T1 a2, T1 a3, T1 a4, T1 a5);
/* [detachable] ET_TOKEN_CONSTANTS.implicit_no_type_mark */
extern T0* T71f82(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.implicit_reference_type_mark */
extern T0* T71f81(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.set_reference_mark */
extern void T341f31(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_TOKEN_CONSTANTS.implicit_expanded_type_mark */
extern T0* T71f80(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.set_expanded_mark */
extern void T341f30(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_TOKEN_CONSTANTS.implicit_separate_type_mark */
extern T0* T71f79(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.set_separate_mark */
extern void T341f29(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_TOKEN_CONSTANTS.implicit_separate_reference_type_mark */
extern T0* T71f78(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.implicit_separate_expanded_type_mark */
extern T0* T71f77(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.implicit_detachable_reference_type_mark */
extern T0* T71f76(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.implicit_detachable_expanded_type_mark */
extern T0* T71f75(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.implicit_detachable_separate_type_mark */
extern T0* T71f74(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.implicit_detachable_separate_reference_type_mark */
extern T0* T71f73(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.implicit_detachable_separate_expanded_type_mark */
extern T0* T71f72(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.implicit_attached_reference_type_mark */
extern T0* T71f71(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.implicit_attached_expanded_type_mark */
extern T0* T71f70(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.implicit_attached_separate_type_mark */
extern T0* T71f69(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.implicit_attached_separate_reference_type_mark */
extern T0* T71f68(GE_context* ac, T0* C);
/* [detachable] ET_TOKEN_CONSTANTS.implicit_attached_separate_expanded_type_mark */
extern T0* T71f67(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.overridden_type_mark */
extern T0* T602f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.overridden_type_mark */
extern T0* T553f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_KEYWORD.overridden_type_mark */
extern T0* T402f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYMBOL.overridden_type_mark */
extern T0* T342f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IMPLICIT_TYPE_MARK.overridden_type_mark */
extern T0* T341f23(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUESTION_MARK_SYMBOL.is_expanded_mark */
extern T1 T970f5(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_expanded_mark */
extern T1 T602f13(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_expanded_mark */
extern T1 T553f3(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_expanded_mark */
extern T1 T402f8(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_expanded_mark */
extern T1 T342f9(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.is_separateness_mark */
extern T1 T970f9(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_separateness_mark */
extern T1 T602f17(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_separateness_mark */
extern T1 T553f7(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_separateness_mark */
extern T1 T402f12(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_separateness_mark */
extern T1 T342f13(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.is_separateness_mark */
extern T1 T341f6(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.is_implicit_mark */
extern T1 T970f28(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_implicit_mark */
extern T1 T602f32(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_implicit_mark */
extern T1 T553f21(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_implicit_mark */
extern T1 T402f30(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_implicit_mark */
extern T1 T342f15(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.is_implicit_mark */
extern T1 T341f24(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.is_attachment_mark */
extern T1 T970f19(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_attachment_mark */
extern T1 T602f9(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_attachment_mark */
extern T1 T553f8(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_attachment_mark */
extern T1 T402f13(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_attachment_mark */
extern T1 T342f4(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.is_attachment_mark */
extern T1 T341f7(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.is_expandedness_mark */
extern T1 T970f8(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_expandedness_mark */
extern T1 T602f16(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_expandedness_mark */
extern T1 T553f6(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_expandedness_mark */
extern T1 T402f11(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_expandedness_mark */
extern T1 T342f12(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.is_expandedness_mark */
extern T1 T341f8(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.position */
extern T0* T970f29(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.position */
extern T0* T602f5(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.position */
extern T0* T553f22(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.position */
extern T0* T402f27(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.position */
extern T0* T342f7(GE_context* ac, T0* C);
/* [detachable] ET_IMPLICIT_TYPE_MARK.position */
extern T0* T341f25(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.is_attached_mark */
extern T1 T970f24(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_attached_mark */
extern T1 T602f10(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_attached_mark */
extern T1 T553f9(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_attached_mark */
extern T1 T402f6(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_attached_mark */
extern T1 T342f5(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.is_detachable_mark */
extern T1 T970f37(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_detachable_mark */
extern T1 T602f11(GE_context* ac, T0* C);
/* [detachable] ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_detachable_mark */
extern T1 T553f12(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_detachable_mark */
extern T1 T402f7(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_detachable_mark */
extern T1 T342f6(GE_context* ac, T0* C);
/* [detachable] ET_LABELED_COMMA_ACTUAL_PARAMETER.actual_parameter */
extern T0* T1695f6(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.actual_parameter */
extern T0* T1455f38(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.actual_parameter */
extern T0* T1454f31(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.actual_parameter */
extern T0* T1453f25(GE_context* ac, T0* C);
/* detachable ET_LABELED_ACTUAL_PARAMETER.actual_parameter */
extern T0* T1451f6(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.actual_parameter */
extern T0* T1427f37(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER.actual_parameter */
extern T0* T852f38(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_CURRENT.actual_parameter */
extern T0* T432f14(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.actual_parameter */
extern T0* T247f44(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.actual_parameter */
extern T0* T245f20(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.actual_parameter */
extern T0* T72f114(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.actual_parameter */
extern T0* T70f43(GE_context* ac, T0* C);
/* [detachable] ET_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T1695f3(GE_context* ac, T0* C);
/* detachable ET_LABELED_ACTUAL_PARAMETER.type */
extern T0* T1451f3(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.type */
extern T0* T1427f27(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER.type */
extern T0* T852f25(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.type */
extern T0* T72f113(GE_context* ac, T0* C);
/* [detachable] ET_LABELED_COMMA_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1695f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type */
extern T0* T1455f63(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type */
extern T0* T1454f66(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.resolved_formal_parameters_with_type */
extern T0* T1453f64(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LABELED_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1451f7(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1427f70(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T852f72(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIKE_CURRENT.resolved_formal_parameters_with_type */
extern T0* T432f59(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.resolved_formal_parameters_with_type */
extern T0* T247f92(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type */
extern T0* T245f59(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.resolved_formal_parameters_with_type */
extern T0* T72f226(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T70f104(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.hash_code */
extern T6 T809f91(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.hash_code */
extern T6 T578f90(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.hash_code */
extern T6 T206f90(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.hash_code */
extern T6 T182f101(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.hash_code */
extern T6 T55f137(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.hash_code */
extern T6 T35f119(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.classes_in_group */
extern T0* T182f115(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_LIBRARY.classes_in_group */
extern T0* T182f115ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature [detachable] ET_ECF_LIBRARY.classes_in_group */
extern T0* T182f115ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature [detachable] ET_ECF_LIBRARY.classes_in_group */
extern T0* T182f115ac3(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ECF_LIBRARY.initial_classes_in_group_capacity */
extern T6 T182f116(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.classes_in_group */
extern T0* T55f154(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM.classes_in_group */
extern T0* T55f154ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature [detachable] ET_ECF_SYSTEM.classes_in_group */
extern T0* T55f154ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature [detachable] ET_ECF_SYSTEM.classes_in_group */
extern T0* T55f154ac3(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ECF_SYSTEM.initial_classes_in_group_capacity */
extern T6 T55f155(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.classes_in_group */
extern T0* T35f130(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature detachable ET_SYSTEM.classes_in_group */
extern T0* T35f130ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature detachable ET_SYSTEM.classes_in_group */
extern T0* T35f130ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature detachable ET_SYSTEM.classes_in_group */
extern T0* T35f130ac3(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_SYSTEM.initial_classes_in_group_capacity */
extern T6 T35f131(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.full_name */
extern T0* T809f96(GE_context* ac, T0* C, T2 a1);
/* [detachable] ET_LIBRARY.relative_name */
extern T0* T809f99(GE_context* ac, T0* C, T0* a1, T2 a2);
/* [detachable] ET_LIBRARY.string_ */
extern T0* T809f101(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.full_name */
extern T0* T578f95(GE_context* ac, T0* C, T2 a1);
/* [detachable] ET_DOTNET_ASSEMBLY.relative_name */
extern T0* T578f97(GE_context* ac, T0* C, T0* a1, T2 a2);
/* [detachable] ET_DOTNET_ASSEMBLY.string_ */
extern T0* T578f99(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.full_name */
extern T0* T206f95(GE_context* ac, T0* C, T2 a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.relative_name */
extern T0* T206f99(GE_context* ac, T0* C, T0* a1, T2 a2);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.string_ */
extern T0* T206f102(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.full_name */
extern T0* T182f107(GE_context* ac, T0* C, T2 a1);
/* [detachable] ET_ECF_SYSTEM.full_name */
extern T0* T55f150(GE_context* ac, T0* C, T2 a1);
/* detachable ET_SYSTEM.full_name */
extern T0* T35f125(GE_context* ac, T0* C, T2 a1);
/* [detachable] ET_ECF_LIBRARY.has_master_class */
extern T1 T182f106(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.has_master_class */
extern T1 T55f138(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYSTEM.has_master_class */
extern T1 T35f124(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.master_class */
extern T0* T809f90(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_LIBRARY.master_class */
extern T0* T182f98(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_SYSTEM.master_class */
extern T0* T55f145(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYSTEM.master_class */
extern T0* T35f115(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIBRARY.kind_name */
extern T0* T809f97(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.kind_name */
extern T0* T578f100(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.kind_name */
extern T0* T206f97(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.kind_name */
extern T0* T182f110(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.kind_name */
extern T0* T55f151(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.kind_name */
extern T0* T35f126(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.full_lower_name */
extern T0* T809f95(GE_context* ac, T0* C, T2 a1);
/* [detachable] ET_LIBRARY.relative_lower_name */
extern T0* T809f98(GE_context* ac, T0* C, T0* a1, T2 a2);
/* [detachable] ET_LIBRARY.lower_name */
extern T0* T809f100(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T578f96(GE_context* ac, T0* C, T2 a1);
/* [detachable] ET_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T578f98(GE_context* ac, T0* C, T0* a1, T2 a2);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T206f96(GE_context* ac, T0* C, T2 a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T206f100(GE_context* ac, T0* C, T0* a1, T2 a2);
/* [detachable] ET_ECF_LIBRARY.full_lower_name */
extern T0* T182f104(GE_context* ac, T0* C, T2 a1);
/* [detachable] ET_ECF_SYSTEM.full_lower_name */
extern T0* T55f152(GE_context* ac, T0* C, T2 a1);
/* detachable ET_SYSTEM.full_lower_name */
extern T0* T35f127(GE_context* ac, T0* C, T2 a1);
/* [detachable] ET_LIBRARY.shortest_path */
extern T0* T809f102(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_LIBRARY.shortest_path */
extern T0* T809f102ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature [detachable] ET_LIBRARY.shortest_path */
extern T0* T809f102ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature [detachable] ET_LIBRARY.shortest_path */
extern T0* T809f102ac3(GE_context* ac, T0* a1, T0* a2);
/* [detachable] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE].negated */
extern T1 T1385f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]].set_rout_disp_final */
extern void T1386f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [detachable] ET_LIBRARY.insert_in_hash_table */
extern void T809f182(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].force_first */
extern void T870f12(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].put */
extern void T870f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].move_cursors_right */
extern void T870f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_UNIVERSE].set_position */
extern void T1559f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].move_right */
extern void T870f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE].force */
extern void T1558f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ADAPTED_UNIVERSE].fill_with */
extern void T1557f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_ADAPTED_UNIVERSE].extend */
extern void T1557f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].put_last */
extern void T870f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].resize */
extern void T870f14(GE_context* ac, T0* C, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T1558f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T1557f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].new_capacity */
extern T6 T870f8(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].extendible */
extern T1 T870f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].before */
extern T1 T1383f4(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].back */
extern void T1383f16(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_back */
extern void T1382f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].add_traversing_cursor */
extern void T1382f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].set_next_cursor */
extern void T1383f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].set_position */
extern void T1383f18(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].remove_traversing_cursor */
extern void T1382f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].set_before */
extern void T1383f19(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].clashes_item */
extern T6 T1382f25(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].finish */
extern void T1383f15(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_finish */
extern void T1382f59(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_off */
extern T1 T1382f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].off */
extern T1 T1383f10(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].is_empty */
extern T1 T1382f34(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].forth */
extern void T1383f14(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_forth */
extern void T1382f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].set_after */
extern void T1383f17(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].go_after */
extern void T1383f13(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_go_after */
extern void T1382f57(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].has */
extern T1 T1382f20(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].search_position */
extern void T1382f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].hash_position */
extern T6 T1382f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].key_storage_item */
extern T0* T1382f27(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].slots_item */
extern T6 T1382f32(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_LIBRARY.universe_actions */
extern T0* T809f103(GE_context* ac, T0* C);
/* [detachable] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE].default_create */
extern T0* T1385c2(GE_context* ac);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].item */
extern T6 T1383f9(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_item */
extern T6 T1382f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].item_storage_item */
extern T6 T1382f33(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].key */
extern T0* T1383f7(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_key */
extern T0* T1382f30(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].after */
extern T1 T1383f5(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].start */
extern void T1383f12(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_start */
extern void T1382f56(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].new_cursor */
extern T0* T1382f21(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].make */
extern T0* T1383c11(GE_context* ac, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].force_last */
extern void T1382f37(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].key_storage_put */
extern void T1382f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].slots_put */
extern void T1382f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].clashes_put */
extern void T1382f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].resize */
extern void T1382f42(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].clashes_resize */
extern void T1382f50(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].special_integer_ */
extern T0* T1382f28(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].key_storage_resize */
extern void T1382f49(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].item_storage_resize */
extern void T1382f48(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].slots_resize */
extern void T1382f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].new_modulus */
extern T6 T1382f22(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].new_capacity */
extern T6 T1382f23(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].item_storage_put */
extern void T1382f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].unset_found_item */
extern void T1382f40(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_map */
extern T0* T1382c36(GE_context* ac, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_with_equality_testers */
extern void T1382f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_sparse_container */
extern void T1382f46(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].set_internal_cursor */
extern void T1382f55(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_slots */
extern void T1382f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_clashes */
extern void T1382f53(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_key_storage */
extern void T1382f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_item_storage */
extern void T1382f51(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].make */
extern T0* T870c11(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].set_internal_cursor */
extern void T870f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].new_cursor */
extern T0* T870f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_UNIVERSE].make */
extern T0* T1559c4(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE].make */
extern T0* T1558f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ADAPTED_UNIVERSE].make_empty */
extern T0* T1557c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE].default_create */
extern T0* T1558c3(GE_context* ac);
/* [detachable] ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T578f101(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T578f101ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature [detachable] ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T578f101ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature [detachable] ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T578f101ac3(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T578f180(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* [detachable] ET_DOTNET_ASSEMBLY.universe_actions */
extern T0* T578f102(GE_context* ac, T0* C);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T206f98(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T206f98ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature [detachable] ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T206f98ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature [detachable] ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T206f98ac3(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T206f180(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.universe_actions */
extern T0* T206f101(GE_context* ac, T0* C);
/* [detachable] ET_ECF_LIBRARY.shortest_path */
extern T0* T182f108(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_LIBRARY.shortest_path */
extern T0* T182f108ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature [detachable] ET_ECF_LIBRARY.shortest_path */
extern T0* T182f108ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature [detachable] ET_ECF_LIBRARY.shortest_path */
extern T0* T182f108ac3(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ECF_LIBRARY.insert_in_hash_table */
extern void T182f207(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* [detachable] ET_ECF_LIBRARY.universe_actions */
extern T0* T182f112(GE_context* ac, T0* C);
/* [detachable] ET_ECF_SYSTEM.shortest_path */
extern T0* T55f133(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature [detachable] ET_ECF_SYSTEM.shortest_path */
extern T0* T55f133ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature [detachable] ET_ECF_SYSTEM.shortest_path */
extern T0* T55f133ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature [detachable] ET_ECF_SYSTEM.shortest_path */
extern T0* T55f133ac3(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ECF_SYSTEM.insert_in_hash_table */
extern void T55f250(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* [detachable] ET_ECF_SYSTEM.universe_actions */
extern T0* T55f135(GE_context* ac, T0* C);
/* detachable ET_SYSTEM.shortest_path */
extern T0* T35f120(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature detachable ET_SYSTEM.shortest_path */
extern T0* T35f120ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature detachable ET_SYSTEM.shortest_path */
extern T0* T35f120ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature detachable ET_SYSTEM.shortest_path */
extern T0* T35f120ac3(GE_context* ac, T0* a1, T0* a2);
/* detachable ET_SYSTEM.insert_in_hash_table */
extern void T35f212(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* detachable ET_SYSTEM.universe_actions */
extern T0* T35f122(GE_context* ac, T0* C);
/* [detachable] ET_LIBRARY.adapted_universe */
extern T0* T809f92(GE_context* ac, T0* C, T0* a1);
extern T1 T809f92ot1(T0* a1, T0** a2);
extern T1 T809f92ot2(T0* a1, T0** a2);
/* [detachable] ET_ADAPTED_DOTNET_ASSEMBLIES.adapted_dotnet_assembly */
extern T0* T205f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ADAPTED_LIBRARIES.adapted_library */
extern T0* T183f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T578f92(GE_context* ac, T0* C, T0* a1);
extern T1 T578f92ot1(T0* a1, T0** a2);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].has */
extern T1 T1345f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ECF_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T206f92(GE_context* ac, T0* C, T0* a1);
extern T1 T206f92ot1(T0* a1, T0** a2);
/* [detachable] ET_ECF_LIBRARY.adapted_universe */
extern T0* T182f102(GE_context* ac, T0* C, T0* a1);
extern T1 T182f102ot1(T0* a1, T0** a2);
extern T1 T182f102ot2(T0* a1, T0** a2);
/* [detachable] ET_ECF_SYSTEM.adapted_universe */
extern T0* T55f147(GE_context* ac, T0* C, T0* a1);
extern T1 T55f147ot1(T0* a1, T0** a2);
extern T1 T55f147ot2(T0* a1, T0** a2);
/* detachable ET_SYSTEM.adapted_universe */
extern T0* T35f118(GE_context* ac, T0* C, T0* a1);
extern T1 T35f118ot1(T0* a1, T0** a2);
extern T1 T35f118ot2(T0* a1, T0** a2);
/* [detachable] ET_TUPLE_TYPE.context_base_type_with_type_mark */
extern T0* T247f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T236f29(GE_context* ac, T0* C, T0* a1);
extern T1 T236f29ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.context_base_type_with_type_mark */
extern T0* T72f96(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.context_base_type_with_type_mark */
extern T0* T70f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.named_base_class */
extern T0* T236f27(GE_context* ac, T0* C);
extern T1 T236f27ot1(T0* a1, T0** a2);
/* [detachable] ET_TUPLE_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T247f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T236f33(GE_context* ac, T0* C, T0* a1);
extern T1 T236f33ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.context_is_type_expanded_with_type_mark */
extern T1 T72f97(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T70f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T247f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T236f34(GE_context* ac, T0* C, T0* a1);
extern T1 T236f34ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.context_is_type_detachable_with_type_mark */
extern T1 T72f98(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T70f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T247f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NESTED_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T236f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T236f30ot1(T0* a1, T0** a2);
/* [detachable] ET_NESTED_TYPE_CONTEXT.cloned_type_context */
extern T0* T236f9(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.context_conforms_from_class_type_with_type_marks */
extern T1 T72f149(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T70f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_TUPLE_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T247f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NESTED_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T236f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T236f32ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.context_conforms_from_tuple_type_with_type_marks */
extern T1 T72f150(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T70f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_TUPLE_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T247f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NESTED_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T236f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T236f23ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.context_same_named_class_type_with_type_marks */
extern T1 T72f151(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_CLASS_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T70f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_TUPLE_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T247f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NESTED_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T236f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T236f24ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.context_same_named_tuple_type_with_type_marks */
extern T1 T72f152(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_CLASS_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T70f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_TUPLE_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T247f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NESTED_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T236f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T236f25ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.context_conforms_to_type_with_type_marks */
extern T1 T72f153(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T70f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_TUPLE_TYPE.context_same_named_type_with_type_marks */
extern T1 T247f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NESTED_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T236f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T236f15ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.context_same_named_type_with_type_marks */
extern T1 T72f154(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_CLASS_TYPE.context_same_named_type_with_type_marks */
extern T1 T70f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_TUPLE_TYPE.context_named_type_with_type_mark */
extern T0* T247f62(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T236f16(GE_context* ac, T0* C, T0* a1);
extern T1 T236f16ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.context_named_type_with_type_mark */
extern T0* T72f156(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.context_named_type_with_type_mark */
extern T0* T70f60(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T247f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NESTED_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T236f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T236f26ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T72f157(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_CLASS_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T70f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_TUPLE_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T247f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NESTED_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T236f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T236f31ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T72f189(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T70f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_NESTED_TYPE_CONTEXT.adapted_base_class_with_named_feature */
extern T0* T236f38(GE_context* ac, T0* C, T0* a1);
extern T1 T236f38ot1(T0* a1, T0** a2);
/* [detachable] ET_NESTED_TYPE_CONTEXT.adapted_base_class_with_seeded_feature */
extern T0* T236f39(GE_context* ac, T0* C, T6 a1);
extern T1 T236f39ot1(T0* a1, T0** a2);
/* [detachable] ET_TUPLE_TYPE.context_is_type_reference_with_type_mark */
extern T1 T247f83(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T236f40(GE_context* ac, T0* C, T0* a1);
extern T1 T236f40ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.context_is_type_reference_with_type_mark */
extern T1 T72f213(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.context_is_type_reference_with_type_mark */
extern T1 T70f89(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.context_is_type_attached_with_type_mark */
extern T1 T247f98(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T236f42(GE_context* ac, T0* C, T0* a1);
extern T1 T236f42ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.context_is_type_attached_with_type_mark */
extern T1 T72f239(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.context_is_type_attached_with_type_mark */
extern T1 T70f110(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.context_same_base_type_with_type_marks */
extern T1 T247f100(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NESTED_TYPE_CONTEXT.same_base_type_with_type_marks */
extern T1 T236f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T236f48ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.context_same_base_type_with_type_marks */
extern T1 T72f241(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_CLASS_TYPE.context_same_base_type_with_type_marks */
extern T1 T70f112(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_NESTED_TYPE_CONTEXT.named_type */
extern T0* T236f14(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.context_named_type */
extern T0* T72f235(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.context_named_type */
extern T0* T70f108(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.attachment_type_conformance_mode */
extern T1 T247f32(GE_context* ac, T0* C);
/* [detachable] ET_NESTED_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T236f5(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.attachment_type_conformance_mode */
extern T1 T72f67(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.attachment_type_conformance_mode */
extern T1 T70f31(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.scoop_mode */
extern T1 T247f33(GE_context* ac, T0* C);
/* [detachable] ET_NESTED_TYPE_CONTEXT.scoop_mode */
extern T1 T236f6(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.scoop_mode */
extern T1 T72f68(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.scoop_mode */
extern T1 T70f32(GE_context* ac, T0* C);
/* [detachable] ET_NESTED_TYPE_CONTEXT.base_class */
extern T0* T236f20(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.context_base_type_actual_count */
extern T6 T247f46(GE_context* ac, T0* C);
/* [detachable] ET_NESTED_TYPE_CONTEXT.base_type_actual_count */
extern T6 T236f21(GE_context* ac, T0* C);
extern T1 T236f21ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.context_base_type_actual_count */
extern T6 T72f147(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.context_base_type_actual_count */
extern T6 T70f51(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.context_base_type_actual */
extern T0* T247f47(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_NESTED_TYPE_CONTEXT.base_type_actual */
extern T0* T236f22(GE_context* ac, T0* C, T6 a1);
extern T1 T236f22ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.context_base_type_actual */
extern T0* T72f148(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLASS_TYPE.context_base_type_actual */
extern T0* T70f52(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TUPLE_TYPE.is_root_context */
extern T1 T247f14(GE_context* ac, T0* C);
/* [detachable] ET_NESTED_TYPE_CONTEXT.is_root_context */
extern T1 T236f19(GE_context* ac, T0* C);
extern T1 T236f19ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.is_root_context */
extern T1 T72f112(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.is_root_context */
extern T1 T70f20(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.root_context */
extern T0* T247f15(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.root_context */
extern T0* T72f159(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.root_context */
extern T0* T70f21(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.as_nested_type_context */
extern T0* T247f34(GE_context* ac, T0* C);
/* [detachable] ET_NESTED_TYPE_CONTEXT.as_nested_type_context */
extern T0* T236f7(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.as_nested_type_context */
extern T0* T72f69(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.as_nested_type_context */
extern T0* T70f34(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.to_nested_type_context */
extern T0* T247f35(GE_context* ac, T0* C);
/* [detachable] ET_NESTED_TYPE_CONTEXT.to_nested_type_context */
extern T0* T236f8(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.to_nested_type_context */
extern T0* T72f70(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.to_nested_type_context */
extern T0* T70f35(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.type */
extern T0* T1455f35(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.type */
extern T0* T1454f30(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.type */
extern T0* T1453f24(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_CURRENT.type */
extern T0* T432f13(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.type */
extern T0* T247f30(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T245f19(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.type */
extern T0* T70f28(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.shallow_base_type */
extern T0* T1455f42(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type */
extern T0* T1454f45(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.shallow_base_type */
extern T0* T1453f43(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type */
extern T0* T1427f54(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.shallow_base_type */
extern T0* T852f52(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIKE_CURRENT.shallow_base_type */
extern T0* T432f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.shallow_base_type */
extern T0* T247f71(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.shallow_base_type */
extern T0* T245f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.shallow_base_type */
extern T0* T72f196(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.shallow_base_type */
extern T0* T70f70(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.is_type_reference */
extern T1 T1455f49(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference */
extern T1 T1454f52(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.is_type_reference */
extern T1 T1453f50(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference */
extern T1 T1427f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.is_type_reference */
extern T1 T852f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIKE_CURRENT.is_type_reference */
extern T1 T432f46(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.is_type_reference */
extern T1 T247f79(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T245f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.is_type_reference */
extern T1 T72f208(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.is_type_reference */
extern T1 T70f81(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.conforms_to_constraint */
extern T1 T1455f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_QUALIFIED_LIKE_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T1455f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_constraint */
extern T1 T1454f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T1454f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* detachable ET_LIKE_FEATURE.conforms_to_constraint */
extern T1 T1453f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_LIKE_FEATURE.conforms_to_constraint_with_type_marks */
extern T1 T1453f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_constraint */
extern T1 T1427f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_constraint_with_type_marks */
extern T1 T1427f71(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_FORMAL_PARAMETER.conforms_to_constraint */
extern T1 T852f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_FORMAL_PARAMETER.conforms_to_constraint_with_type_marks */
extern T1 T852f73(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_LIKE_CURRENT.conforms_to_constraint */
extern T1 T432f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_LIKE_CURRENT.conforms_to_constraint_with_type_marks */
extern T1 T432f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_TUPLE_TYPE.conforms_to_constraint */
extern T1 T247f80(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_TUPLE_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T247f94(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.conforms_to_constraint */
extern T1 T245f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T245f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_CLASS.conforms_to_constraint */
extern T1 T72f209(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_CLASS.conforms_to_constraint_with_type_marks */
extern T1 T72f221(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_CLASS_TYPE.conforms_to_constraint */
extern T1 T70f82(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_CLASS_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T70f98(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* detachable ET_QUALIFIED_LIKE_TYPE.base_class */
extern T0* T1455f19(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.base_class */
extern T0* T1454f37(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.base_class */
extern T0* T1453f38(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.base_class */
extern T0* T1427f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.base_class */
extern T0* T852f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIKE_CURRENT.base_class */
extern T0* T432f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.base_class_in_context */
extern T0* T247f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.base_class */
extern T0* T245f26(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.base_class_in_context */
extern T0* T72f132(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.base_class_in_context */
extern T0* T70f75(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.named_type_with_type_mark */
extern T0* T1455f8(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1455f8ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.overridden_type_mark */
extern T0* T1455f40(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.named_type_with_type_mark */
extern T0* T1454f26(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1454f26ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.overridden_type_mark */
extern T0* T1454f36(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.named_type_with_type_mark */
extern T0* T1453f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_LIKE_FEATURE.overridden_type_mark */
extern T0* T1453f32(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T1427f12(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f12ot1(T0* a1, T0** a2);
extern T1 T1427f12ot2(T0* a1, T0** a2);
extern T1 T1427f12ot3(T0* a1, T0** a2);
/* [detachable] ET_LIKE_N.named_type_with_type_mark */
extern T0* T1401f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_LIKE_N.overridden_type_mark */
extern T0* T1401f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T852f10(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T852f10ot1(T0* a1, T0** a2);
extern T1 T852f10ot2(T0* a1, T0** a2);
extern T1 T852f10ot3(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.named_type_with_type_mark */
extern T0* T432f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_LIKE_CURRENT.overridden_type_mark */
extern T0* T432f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.named_type_with_type_mark */
extern T0* T245f6(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T245f6ot1(T0* a1, T0** a2);
extern T1 T245f6ot2(T0* a1, T0** a2);
extern T1 T245f6ot3(T0* a1, T0** a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.base_type_actual_count */
extern T6 T1455f9(GE_context* ac, T0* C, T0* a1);
extern T1 T1455f9ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual_count */
extern T6 T1454f9(GE_context* ac, T0* C, T0* a1);
extern T1 T1454f9ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.base_type_actual_count */
extern T6 T1453f9(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T1427f13(GE_context* ac, T0* C, T0* a1);
extern T1 T1427f13ot1(T0* a1, T0** a2);
extern T1 T1427f13ot2(T0* a1, T0** a2);
extern T1 T1427f13ot3(T0* a1, T0** a2);
/* [detachable] ET_LIKE_N.base_type_actual_count */
extern T6 T1401f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T852f11(GE_context* ac, T0* C, T0* a1);
extern T1 T852f11ot1(T0* a1, T0** a2);
extern T1 T852f11ot2(T0* a1, T0** a2);
extern T1 T852f11ot3(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.base_type_actual_count */
extern T6 T432f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.base_type_actual_count */
extern T6 T245f9(GE_context* ac, T0* C, T0* a1);
extern T1 T245f9ot1(T0* a1, T0** a2);
extern T1 T245f9ot2(T0* a1, T0** a2);
extern T1 T245f9ot3(T0* a1, T0** a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.base_type_actual */
extern T0* T1455f10(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1455f10ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual */
extern T0* T1454f40(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1454f40ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.base_type_actual */
extern T0* T1453f41(GE_context* ac, T0* C, T6 a1, T0* a2);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual */
extern T0* T1427f14(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1427f14ot1(T0* a1, T0** a2);
extern T1 T1427f14ot2(T0* a1, T0** a2);
extern T1 T1427f14ot3(T0* a1, T0** a2);
/* [detachable] ET_LIKE_N.base_type_actual */
extern T0* T1401f6(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER.base_type_actual */
extern T0* T852f12(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T852f12ot1(T0* a1, T0** a2);
extern T1 T852f12ot2(T0* a1, T0** a2);
extern T1 T852f12ot3(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.base_type_actual */
extern T0* T432f37(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.base_type_actual */
extern T0* T245f10(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T245f10ot1(T0* a1, T0** a2);
extern T1 T245f10ot2(T0* a1, T0** a2);
extern T1 T245f10ot3(T0* a1, T0** a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.same_named_class_type_with_type_marks */
extern T1 T1455f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1455f11ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_class_type_with_type_marks */
extern T1 T1454f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1454f14ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.same_named_class_type_with_type_marks */
extern T1 T1453f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T1427f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f15ot1(T0* a1);
/* [detachable] ET_LIKE_N.same_named_class_type_with_type_marks */
extern T1 T1401f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T852f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T852f13ot1(T0* a1);
/* [detachable] ET_LIKE_CURRENT.same_named_class_type_with_type_marks */
extern T1 T432f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.same_named_class_type_with_type_marks */
extern T1 T245f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T245f11ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1455f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1455f12ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1454f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1454f15ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.same_named_tuple_type_with_type_marks */
extern T1 T1453f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T1427f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f16ot1(T0* a1);
/* [detachable] ET_LIKE_N.same_named_tuple_type_with_type_marks */
extern T1 T1401f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T852f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T852f14ot1(T0* a1);
/* [detachable] ET_LIKE_CURRENT.same_named_tuple_type_with_type_marks */
extern T1 T432f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T245f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T245f12ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.conforms_to_type_with_type_marks */
extern T1 T1455f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1455f13ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type_with_type_marks */
extern T1 T1454f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1454f24ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.conforms_to_type_with_type_marks */
extern T1 T1453f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T1427f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1427f17ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_N.conforms_to_type_with_type_marks */
extern T1 T1401f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T852f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T852f15ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.conforms_to_type_with_type_marks */
extern T1 T432f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.conforms_to_type_with_type_marks */
extern T1 T245f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T245f13ot1(T0* a1, T0** a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1455f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1455f14ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1454f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1454f16ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1453f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T1427f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f18ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_N.same_named_formal_parameter_type_with_type_marks */
extern T1 T1401f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T852f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T852f16ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.same_named_formal_parameter_type_with_type_marks */
extern T1 T432f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T245f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T245f14ot1(T0* a1, T0** a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.named_base_class */
extern T0* T1455f15(GE_context* ac, T0* C, T0* a1);
extern T1 T1455f15ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.named_base_class */
extern T0* T1454f21(GE_context* ac, T0* C, T0* a1);
extern T1 T1454f21ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.named_base_class */
extern T0* T1453f26(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.named_base_class */
extern T0* T1427f19(GE_context* ac, T0* C, T0* a1);
extern T1 T1427f19ot1(T0* a1, T0** a2);
extern T1 T1427f19ot2(T0* a1, T0** a2);
extern T1 T1427f19ot3(T0* a1, T0** a2);
/* [detachable] ET_LIKE_N.named_base_class */
extern T0* T1401f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.named_base_class */
extern T0* T852f17(GE_context* ac, T0* C, T0* a1);
extern T1 T852f17ot1(T0* a1, T0** a2);
extern T1 T852f17ot2(T0* a1, T0** a2);
extern T1 T852f17ot3(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.named_base_class */
extern T0* T432f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.named_base_class_in_context */
extern T0* T247f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.named_base_class */
extern T0* T245f15(GE_context* ac, T0* C, T0* a1);
extern T1 T245f15ot1(T0* a1, T0** a2);
extern T1 T245f15ot2(T0* a1, T0** a2);
extern T1 T245f15ot3(T0* a1, T0** a2);
/* [detachable] ET_CLASS.named_base_class_in_context */
extern T0* T72f143(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.named_base_class_in_context */
extern T0* T70f8(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.base_type_with_type_mark */
extern T0* T1455f21(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1455f21ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_with_type_mark */
extern T0* T1454f43(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1454f43ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.base_type_with_type_mark */
extern T0* T1453f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T1427f20(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f20ot1(T0* a1, T0** a2);
extern T1 T1427f20ot2(T0* a1, T0** a2);
extern T1 T1427f20ot3(T0* a1, T0** a2);
/* [detachable] ET_LIKE_N.base_type_with_type_mark */
extern T0* T1401f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T852f18(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T852f18ot1(T0* a1, T0** a2);
extern T1 T852f18ot2(T0* a1, T0** a2);
extern T1 T852f18ot3(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.base_type_with_type_mark */
extern T0* T432f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.base_type_with_type_mark */
extern T0* T245f28(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T245f28ot1(T0* a1, T0** a2);
extern T1 T245f28ot2(T0* a1, T0** a2);
extern T1 T245f28ot3(T0* a1, T0** a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1455f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1455f23ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1454f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1454f10ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.conforms_from_class_type_with_type_marks */
extern T1 T1453f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T1427f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1427f21ot1(T0* a1);
/* [detachable] ET_LIKE_N.conforms_from_class_type_with_type_marks */
extern T1 T1401f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T852f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T852f19ot1(T0* a1);
/* [detachable] ET_LIKE_CURRENT.conforms_from_class_type_with_type_marks */
extern T1 T432f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T245f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T245f30ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1455f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1455f25ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1454f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1454f12ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1453f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1427f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1427f22ot1(T0* a1, T0** a2);
/* [detachable] ET_FORMAL_PARAMETER.recursive_formal_constraints */
extern T0* T852f31(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_N.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1401f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T852f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T852f20ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T432f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T245f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T245f31ot1(T0* a1, T0** a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1455f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1455f24ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1454f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1454f11ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.conforms_from_tuple_type_with_type_marks */
extern T1 T1453f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T1427f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1427f23ot1(T0* a1);
/* [detachable] ET_LIKE_N.conforms_from_tuple_type_with_type_marks */
extern T1 T1401f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T852f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T852f21ot1(T0* a1);
/* [detachable] ET_LIKE_CURRENT.conforms_from_tuple_type_with_type_marks */
extern T1 T432f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T245f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T245f32ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.is_type_expanded_with_type_mark */
extern T1 T1455f29(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1455f29ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded_with_type_mark */
extern T1 T1454f22(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1454f22ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.is_type_expanded_with_type_mark */
extern T1 T1453f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T1427f24(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f24ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_N.is_type_expanded_with_type_mark */
extern T1 T1401f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T852f22(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T852f22ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.is_type_expanded_with_type_mark */
extern T1 T432f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.is_type_expanded_with_type_mark */
extern T1 T245f33(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T245f33ot1(T0* a1, T0** a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.is_type_detachable_with_type_mark */
extern T1 T1455f30(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1455f30ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable_with_type_mark */
extern T1 T1454f23(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1454f23ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.is_type_detachable_with_type_mark */
extern T1 T1453f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T1427f25(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f25ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_N.is_type_detachable_with_type_mark */
extern T1 T1401f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T852f23(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T852f23ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.is_type_detachable_with_type_mark */
extern T1 T432f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T245f17(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T245f17ot1(T0* a1, T0** a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.is_type_attached_with_type_mark */
extern T1 T1455f51(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1455f51ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_attached_with_type_mark */
extern T1 T1454f54(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1454f54ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.is_type_attached_with_type_mark */
extern T1 T1453f52(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T1427f31(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f31ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_N.is_type_attached_with_type_mark */
extern T1 T1401f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T852f32(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T852f32ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.is_type_attached_with_type_mark */
extern T1 T432f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T245f16(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T245f16ot1(T0* a1, T0** a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.is_type_reference_with_type_mark */
extern T1 T1455f52(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1455f52ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference_with_type_mark */
extern T1 T1454f55(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1454f55ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.is_type_reference_with_type_mark */
extern T1 T1453f53(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T1427f35(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f35ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_N.is_type_reference_with_type_mark */
extern T1 T1401f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T852f36(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T852f36ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.is_type_reference_with_type_mark */
extern T1 T432f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.is_type_reference_with_type_mark */
extern T1 T245f43(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T245f43ot1(T0* a1, T0** a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.shallow_named_type_with_type_mark */
extern T0* T1455f46(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1455f46ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type_with_type_mark */
extern T0* T1454f49(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1454f49ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.shallow_named_type_with_type_mark */
extern T0* T1453f47(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T1427f38(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f38ot1(T0* a1, T0** a2);
extern T1 T1427f38ot2(T0* a1, T0** a2);
extern T1 T1427f38ot3(T0* a1, T0** a2);
/* [detachable] ET_LIKE_N.shallow_named_type_with_type_mark */
extern T0* T1401f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T852f56(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T852f56ot1(T0* a1, T0** a2);
extern T1 T852f56ot2(T0* a1, T0** a2);
extern T1 T852f56ot3(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.shallow_named_type_with_type_mark */
extern T0* T432f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.shallow_named_type_with_type_mark */
extern T0* T245f45(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T245f45ot1(T0* a1, T0** a2);
extern T1 T245f45ot2(T0* a1, T0** a2);
extern T1 T245f45ot3(T0* a1, T0** a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1455f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1454f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_LIKE_FEATURE.same_syntactical_type_with_type_marks */
extern T1 T1453f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T1427f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f44ot1(T0* a1, T0** a2);
/* [detachable] ET_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T852f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T852f45ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.same_syntactical_type_with_type_marks */
extern T1 T432f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_TUPLE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T247f86(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_TUPLE_TYPE.is_generic */
extern T1 T247f24(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.same_syntactical_type_with_type_marks */
extern T1 T245f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T245f53ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.same_syntactical_type_with_type_marks */
extern T1 T72f231(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS_TYPE.same_syntactical_type_with_type_marks */
extern T1 T70f91(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1455f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1454f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_LIKE_FEATURE.same_syntactical_like_feature_with_type_marks */
extern T1 T1453f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_LIKE_FEATURE.same_attachment_marks_with_default */
extern T1 T1453f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T1427f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f45ot1(T0* a1);
/* [detachable] ET_LIKE_N.same_syntactical_like_feature_with_type_marks */
extern T1 T1401f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T852f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T852f46ot1(T0* a1);
/* [detachable] ET_LIKE_CURRENT.same_syntactical_like_feature_with_type_marks */
extern T1 T432f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_TUPLE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T247f87(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T245f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T245f54ot1(T0* a1);
/* [detachable] ET_CLASS.same_syntactical_like_feature_with_type_marks */
extern T1 T72f229(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T70f92(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_QUALIFIED_LIKE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1455f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_QUALIFIED_LIKE_TYPE.same_attachment_marks_with_default */
extern T1 T1455f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1454f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.same_attachment_marks_with_default */
extern T1 T1454f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_LIKE_FEATURE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1453f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1427f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f46ot1(T0* a1);
/* [detachable] ET_LIKE_N.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1401f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T852f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T852f47ot1(T0* a1);
/* [detachable] ET_LIKE_CURRENT.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T432f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_TUPLE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T247f88(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T245f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T245f55ot1(T0* a1);
/* [detachable] ET_CLASS.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T72f230(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T70f93(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_QUALIFIED_LIKE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1455f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1454f67(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_LIKE_FEATURE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1453f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1427f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f49ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_N.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1401f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T852f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T852f50ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T432f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_TUPLE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T247f93(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T245f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T245f61ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T72f232(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T70f105(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_QUALIFIED_LIKE_TYPE.shallow_base_type_with_type_mark */
extern T0* T1455f45(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1455f45ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type_with_type_mark */
extern T0* T1454f48(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1454f48ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.shallow_base_type_with_type_mark */
extern T0* T1453f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T1427f56(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f56ot1(T0* a1, T0** a2);
extern T1 T1427f56ot2(T0* a1, T0** a2);
extern T1 T1427f56ot3(T0* a1, T0** a2);
/* [detachable] ET_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T852f55(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T852f55ot1(T0* a1, T0** a2);
extern T1 T852f55ot2(T0* a1, T0** a2);
extern T1 T852f55ot3(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.shallow_base_type_with_type_mark */
extern T0* T432f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.shallow_base_type_with_type_mark */
extern T0* T245f44(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T245f44ot1(T0* a1, T0** a2);
extern T1 T245f44ot2(T0* a1, T0** a2);
extern T1 T245f44ot3(T0* a1, T0** a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.type_with_type_mark */
extern T0* T1455f65(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.type_with_type_mark */
extern T0* T1454f68(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.set_right_brace */
extern void T1454f95(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.set_left_brace */
extern void T1454f94(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.type_with_type_mark */
extern T0* T1453f66(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.set_type_mark */
extern void T1453f95(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.twin */
extern T0* T1453f76(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.copy */
extern void T1453f97(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T1427f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T852f44(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIKE_CURRENT.type_with_type_mark */
extern T0* T432f61(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIKE_CURRENT.set_current_keyword */
extern void T432f86(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.type_with_type_mark */
extern T0* T245f36(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.has_unqualified_anchored_type */
extern T1 T1455f17(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.has_unqualified_anchored_type */
extern T1 T1454f19(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.has_unqualified_anchored_type */
extern T1 T1453f19(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.has_unqualified_anchored_type */
extern T1 T1427f62(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER.has_unqualified_anchored_type */
extern T1 T852f62(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_CURRENT.has_unqualified_anchored_type */
extern T1 T432f33(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.has_unqualified_anchored_type */
extern T1 T247f67(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.has_unqualified_anchored_type */
extern T1 T245f24(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.has_unqualified_anchored_type */
extern T1 T72f202(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.has_unqualified_anchored_type */
extern T1 T70f66(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.has_formal_types */
extern T1 T1455f18(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.has_formal_types */
extern T1 T1454f20(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.has_formal_types */
extern T1 T1453f20(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.has_formal_types */
extern T1 T1427f52(GE_context* ac, T0* C, T0* a1);
extern T1 T1427f52ot1(T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.has_formal_types */
extern T1 T852f54(GE_context* ac, T0* C, T0* a1);
extern T1 T852f54ot1(T0* a1);
/* [detachable] ET_LIKE_CURRENT.has_formal_types */
extern T1 T432f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.has_formal_types */
extern T1 T247f68(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.has_formal_types */
extern T1 T245f25(GE_context* ac, T0* C, T0* a1);
extern T1 T245f25ot1(T0* a1);
/* [detachable] ET_CLASS.has_formal_types */
extern T1 T72f203(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.has_formal_types */
extern T1 T70f67(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.depends_on_qualified_anchored_type */
extern T1 T1455f48(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.depends_on_qualified_anchored_type */
extern T1 T1454f51(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.depends_on_qualified_anchored_type */
extern T1 T1453f49(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T1427f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T852f67(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIKE_CURRENT.depends_on_qualified_anchored_type */
extern T1 T432f45(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.depends_on_qualified_anchored_type */
extern T1 T247f78(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.depends_on_qualified_anchored_type */
extern T1 T245f48(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.depends_on_qualified_anchored_type */
extern T1 T72f224(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.depends_on_qualified_anchored_type */
extern T1 T70f79(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.has_identifier_anchored_type */
extern T1 T1455f53(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.has_identifier_anchored_type */
extern T1 T1454f56(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.has_identifier_anchored_type */
extern T1 T1453f54(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T1427f63(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T852f63(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_CURRENT.has_identifier_anchored_type */
extern T1 T432f51(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.has_identifier_anchored_type */
extern T1 T247f84(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.has_identifier_anchored_type */
extern T1 T245f51(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.has_identifier_anchored_type */
extern T1 T72f216(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.has_identifier_anchored_type */
extern T1 T70f90(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters */
extern T0* T1455f62(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1455f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters */
extern T0* T1454f65(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1454f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_LIKE_FEATURE.resolved_formal_parameters */
extern T0* T1453f63(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.resolved_formal_parameters_with_type_mark */
extern T0* T1453f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T1427f67(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T1427f72(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f72ot1(T0* a1, T0** a2);
/* [detachable] ET_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T852f69(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T852f74(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T852f74ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.resolved_formal_parameters */
extern T0* T432f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIKE_CURRENT.resolved_formal_parameters_with_type_mark */
extern T0* T432f65(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TUPLE_TYPE.resolved_formal_parameters */
extern T0* T247f91(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T247f96(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TUPLE_TYPE.overridden_type_mark */
extern T0* T247f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.is_separate */
extern T1 T72f81(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.has_separate_mark */
extern T1 T72f93(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.is_separate */
extern T1 T247f21(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters */
extern T0* T245f58(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T245f62(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T245f62ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.resolved_formal_parameters */
extern T0* T72f225(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.resolved_formal_parameters_with_type_mark */
extern T0* T72f247(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.overridden_type_mark */
extern T0* T72f73(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.resolved_formal_parameters */
extern T0* T70f88(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T70f101(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS_TYPE.overridden_type_mark */
extern T0* T70f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.is_separate */
extern T1 T70f15(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.same_syntactical_type */
extern T1 T1455f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type */
extern T1 T1454f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_LIKE_FEATURE.same_syntactical_type */
extern T1 T1453f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T1427f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T852f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_LIKE_CURRENT.same_syntactical_type */
extern T1 T432f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_TUPLE_TYPE.same_syntactical_type */
extern T1 T247f85(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.same_syntactical_type */
extern T1 T245f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_CLASS.same_syntactical_type */
extern T1 T72f228(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_CLASS_TYPE.same_syntactical_type */
extern T1 T70f87(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_QUALIFIED_LIKE_TYPE.is_type_expanded */
extern T1 T1455f20(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded */
extern T1 T1454f42(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.is_type_expanded */
extern T1 T1453f6(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded */
extern T1 T1427f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.is_type_expanded */
extern T1 T852f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIKE_CURRENT.is_type_expanded */
extern T1 T432f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.is_type_expanded */
extern T1 T247f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.is_type_expanded */
extern T1 T245f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.is_type_expanded */
extern T1 T72f133(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.is_type_expanded */
extern T1 T70f76(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.is_named_type */
extern T1 T1455f47(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.is_named_type */
extern T1 T1454f50(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.is_named_type */
extern T1 T1453f48(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.is_named_type */
extern T1 T1427f64(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER.is_named_type */
extern T1 T852f64(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_CURRENT.is_named_type */
extern T1 T432f44(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.is_named_type */
extern T1 T247f77(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.is_named_type */
extern T1 T245f47(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.is_named_type */
extern T1 T70f78(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.same_named_type */
extern T1 T1455f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type */
extern T1 T1454f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_LIKE_FEATURE.same_named_type */
extern T1 T1453f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type */
extern T1 T1427f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FORMAL_PARAMETER.same_named_type */
extern T1 T852f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_LIKE_CURRENT.same_named_type */
extern T1 T432f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.same_named_type */
extern T1 T245f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_QUALIFIED_LIKE_TYPE.conforms_to_type */
extern T1 T1455f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type */
extern T1 T1454f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_LIKE_FEATURE.conforms_to_type */
extern T1 T1453f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type */
extern T1 T1427f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_FORMAL_PARAMETER.conforms_to_type */
extern T1 T852f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_LIKE_CURRENT.conforms_to_type */
extern T1 T432f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_TUPLE_TYPE.conforms_to_type */
extern T1 T247f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.conforms_to_type */
extern T1 T245f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_CLASS.conforms_to_type */
extern T1 T72f137(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_CLASS_TYPE.conforms_to_type */
extern T1 T70f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ET_QUALIFIED_LIKE_TYPE.named_type */
extern T0* T1455f28(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.named_type */
extern T0* T1454f18(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.named_type */
extern T0* T1453f18(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.named_type */
extern T0* T1427f53(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.named_type */
extern T0* T852f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIKE_CURRENT.named_type */
extern T0* T432f22(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.named_type */
extern T0* T247f51(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.named_type */
extern T0* T245f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.named_type */
extern T0* T72f140(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.named_type */
extern T0* T70f47(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.is_like_current */
extern T1 T1455f44(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.is_like_current */
extern T1 T1454f47(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.is_like_current */
extern T1 T1453f45(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.is_like_current */
extern T1 T1427f55(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_N.is_like_current */
extern T1 T1401f30(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER.is_like_current */
extern T1 T852f53(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.is_like_current */
extern T1 T247f73(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.is_like_current */
extern T1 T245f40(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_like_current */
extern T1 T72f198(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.is_like_current */
extern T1 T70f74(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1455f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1454f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_LIKE_FEATURE.same_syntactical_class_type_with_type_marks */
extern T1 T1453f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T1427f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f48ot1(T0* a1);
/* [detachable] ET_LIKE_N.same_syntactical_class_type_with_type_marks */
extern T1 T1401f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T852f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T852f49ot1(T0* a1);
/* [detachable] ET_LIKE_CURRENT.same_syntactical_class_type_with_type_marks */
extern T1 T432f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_TUPLE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T247f90(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T245f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T245f57ot1(T0* a1);
/* [detachable] ET_CLASS.same_syntactical_class_type_with_type_marks */
extern T1 T72f227(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS_TYPE.is_type_separate_with_type_mark */
extern T1 T70f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.is_type_separate_with_type_mark */
extern T1 T72f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T70f102(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_QUALIFIED_LIKE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1455f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1454f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_LIKE_FEATURE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1453f67(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T1427f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f50ot1(T0* a1);
/* [detachable] ET_LIKE_N.same_syntactical_tuple_type_with_type_marks */
extern T1 T1401f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T852f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T852f65ot1(T0* a1);
/* [detachable] ET_LIKE_CURRENT.same_syntactical_tuple_type_with_type_marks */
extern T1 T432f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_TUPLE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T247f95(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_TUPLE_TYPE.is_type_separate_with_type_mark */
extern T1 T247f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T245f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T245f63ot1(T0* a1);
/* [detachable] ET_CLASS.same_syntactical_tuple_type_with_type_marks */
extern T1 T72f234(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T70f106(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1455f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1454f71(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_LIKE_FEATURE.same_syntactical_like_current_with_type_marks */
extern T1 T1453f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T1427f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f51ot1(T0* a1);
/* [detachable] ET_LIKE_N.same_syntactical_like_current_with_type_marks */
extern T1 T1401f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T852f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T852f66ot1(T0* a1);
/* [detachable] ET_LIKE_CURRENT.same_syntactical_like_current_with_type_marks */
extern T1 T432f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_LIKE_CURRENT.same_attachment_marks_with_default */
extern T1 T432f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_TUPLE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T247f99(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T245f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T245f65ot1(T0* a1);
/* [detachable] ET_CLASS.same_syntactical_like_current_with_type_marks */
extern T1 T72f240(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T70f111(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_QUALIFIED_LIKE_TYPE.is_base_type */
extern T1 T1455f67(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.is_base_type */
extern T1 T1454f70(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.is_base_type */
extern T1 T1453f68(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.is_base_type */
extern T1 T1427f73(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER.is_base_type */
extern T1 T852f75(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_CURRENT.is_base_type */
extern T1 T432f63(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.is_base_type */
extern T1 T247f97(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.is_base_type */
extern T1 T245f64(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_base_type */
extern T1 T72f246(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.is_base_type */
extern T1 T70f107(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.to_text */
extern T0* T1455f16(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.to_text */
extern T0* T1454f41(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.to_text */
extern T0* T1453f42(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.to_text */
extern T0* T1427f26(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_N.to_text */
extern T0* T1401f12(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_N.append_to_string */
extern void T1401f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.to_text */
extern T0* T852f24(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_CURRENT.to_text */
extern T0* T432f38(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.to_text */
extern T0* T245f18(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_TYPE.same_named_type_with_type_marks */
extern T1 T1455f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1455f7ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type_with_type_marks */
extern T1 T1454f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1454f25ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.same_named_type_with_type_marks */
extern T1 T1453f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T1427f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f11ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_N.same_named_type_with_type_marks */
extern T1 T1401f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T852f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T852f9ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.same_named_type_with_type_marks */
extern T1 T432f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.same_named_type_with_type_marks */
extern T1 T245f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T245f5ot1(T0* a1, T0** a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.same_base_type_with_type_marks */
extern T1 T1455f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1455f60ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_type_with_type_marks */
extern T1 T1454f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1454f63ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.same_base_type_with_type_marks */
extern T1 T1453f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.same_base_type_with_type_marks */
extern T1 T1427f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1427f47ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS_TYPE.same_base_formal_parameter_type_with_type_marks */
extern T1 T70f118(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_LIKE_N.same_base_type_with_type_marks */
extern T1 T1401f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER.same_base_type_with_type_marks */
extern T1 T852f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T852f48ot1(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.same_base_type_with_type_marks */
extern T1 T432f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.same_base_type_with_type_marks */
extern T1 T245f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T245f56ot1(T0* a1, T0** a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.adapted_base_class_with_named_feature */
extern T0* T1455f5(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1455f5ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.adapted_base_class_with_named_feature */
extern T0* T1454f38(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1454f38ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.adapted_base_class_with_named_feature */
extern T0* T1453f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.adapted_base_class_with_named_feature */
extern T0* T1427f33(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f33ot1(T0* a1, T0** a2);
extern T1 T1427f33ot2(T0* a1, T0** a2);
extern T1 T1427f33ot3(T0* a1, T0** a2);
/* [detachable] ET_LIKE_N.adapted_base_class_with_named_feature */
extern T0* T1401f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER.adapted_base_class_with_named_feature */
extern T0* T852f34(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T852f34ot1(T0* a1, T0** a2);
extern T1 T852f34ot2(T0* a1, T0** a2);
extern T1 T852f34ot3(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.adapted_base_class_with_named_feature */
extern T0* T432f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.adapted_base_class_with_named_feature */
extern T0* T245f22(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T245f22ot1(T0* a1, T0** a2);
extern T1 T245f22ot2(T0* a1, T0** a2);
extern T1 T245f22ot3(T0* a1, T0** a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T1455f6(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1455f6ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T1454f39(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1454f39ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.adapted_base_class_with_seeded_feature */
extern T0* T1453f40(GE_context* ac, T0* C, T6 a1, T0* a2);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.adapted_base_class_with_seeded_feature */
extern T0* T1427f34(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1427f34ot1(T0* a1, T0** a2);
extern T1 T1427f34ot2(T0* a1, T0** a2);
extern T1 T1427f34ot3(T0* a1, T0** a2);
/* [detachable] ET_LIKE_N.adapted_base_class_with_seeded_feature */
extern T0* T1401f25(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER.adapted_base_class_with_seeded_feature */
extern T0* T852f35(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T852f35ot1(T0* a1, T0** a2);
extern T1 T852f35ot2(T0* a1, T0** a2);
extern T1 T852f35ot3(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.adapted_base_class_with_seeded_feature */
extern T0* T432f36(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T245f23(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T245f23ot1(T0* a1, T0** a2);
extern T1 T245f23ot2(T0* a1, T0** a2);
extern T1 T245f23ot3(T0* a1, T0** a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.base_type_index_of_label */
extern T6 T1455f76(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1455f76ot1(T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_index_of_label */
extern T6 T1454f79(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1454f79ot1(T0* a1);
/* detachable ET_LIKE_FEATURE.base_type_index_of_label */
extern T6 T1453f79(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T1427f74(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1427f74ot1(T0* a1, T0** a2);
extern T1 T1427f74ot2(T0* a1, T0** a2);
extern T1 T1427f74ot3(T0* a1, T0** a2);
/* [detachable] ET_LIKE_N.base_type_index_of_label */
extern T6 T1401f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T852f76(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T852f76ot1(T0* a1, T0** a2);
extern T1 T852f76ot2(T0* a1, T0** a2);
extern T1 T852f76ot3(T0* a1, T0** a2);
/* [detachable] ET_LIKE_CURRENT.base_type_index_of_label */
extern T6 T432f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.base_type_index_of_label */
extern T6 T245f71(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T245f71ot1(T0* a1, T0** a2);
extern T1 T245f71ot2(T0* a1, T0** a2);
extern T1 T245f71ot3(T0* a1, T0** a2);
/* detachable ET_QUALIFIED_LIKE_TYPE.is_type_attached */
extern T1 T1455f79(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_attached */
extern T1 T1454f82(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.is_type_attached */
extern T1 T1453f82(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIKE_CURRENT.is_type_attached */
extern T1 T432f76(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.is_type_attached */
extern T1 T247f115(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.is_type_attached */
extern T1 T245f74(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.is_type_attached */
extern T1 T70f122(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.shallow_named_type */
extern T0* T1455f43(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type */
extern T0* T1454f46(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.shallow_named_type */
extern T0* T1453f44(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type */
extern T0* T1427f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIKE_N.shallow_named_type */
extern T0* T1401f28(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.shallow_named_type */
extern T0* T852f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIKE_CURRENT.shallow_named_type */
extern T0* T432f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.shallow_named_type */
extern T0* T247f72(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.shallow_named_type */
extern T0* T245f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.shallow_named_type */
extern T0* T72f197(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.shallow_named_type */
extern T0* T70f71(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.is_type_detachable */
extern T1 T1455f22(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable */
extern T1 T1454f8(GE_context* ac, T0* C, T0* a1);
/* detachable ET_LIKE_FEATURE.is_type_detachable */
extern T1 T1453f8(GE_context* ac, T0* C, T0* a1);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable */
extern T1 T1427f42(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER.is_type_detachable */
extern T1 T852f43(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_LIKE_CURRENT.is_type_detachable */
extern T1 T432f4(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.is_type_detachable */
extern T1 T247f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.is_type_detachable */
extern T1 T245f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.is_type_detachable */
extern T1 T72f135(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.is_type_detachable */
extern T1 T70f40(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUALIFIED_LIKE_TYPE.position */
extern T0* T1455f41(GE_context* ac, T0* C);
/* detachable ET_QUALIFIED_LIKE_BRACED_TYPE.position */
extern T0* T1454f34(GE_context* ac, T0* C);
/* detachable ET_LIKE_FEATURE.position */
extern T0* T1453f28(GE_context* ac, T0* C);
/* detachable ET_CONSTRAINED_FORMAL_PARAMETER.position */
extern T0* T1427f57(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER.position */
extern T0* T852f57(GE_context* ac, T0* C);
/* [detachable] ET_LIKE_CURRENT.position */
extern T0* T432f32(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.position */
extern T0* T247f66(GE_context* ac, T0* C);
/* [detachable] ET_FORMAL_PARAMETER_TYPE.position */
extern T0* T245f21(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.position */
extern T0* T72f207(GE_context* ac, T0* C);
/* detachable ET_INDEXING_LIST.position */
extern T0* T1133f8(GE_context* ac, T0* C);
/* detachable ET_INDEXING.position */
extern T0* T1425f3(GE_context* ac, T0* C);
/* detachable ET_INDEXING_TERM_LIST.position */
extern T0* T1144f5(GE_context* ac, T0* C);
/* detachable ET_INDEXING_TERM_LIST.tokens */
extern T0* T1144f8(GE_context* ac, T0* C);
/* detachable ET_INDEXING_TERM_LIST.first */
extern T0* T1144f7(GE_context* ac, T0* C);
/* detachable ET_INDEXING_TERM_LIST.is_empty */
extern T1 T1144f6(GE_context* ac, T0* C);
/* detachable ET_TAGGED_INDEXING.position */
extern T0* T1424f4(GE_context* ac, T0* C);
/* detachable ET_INDEXING_LIST.first */
extern T0* T1133f10(GE_context* ac, T0* C);
/* detachable ET_INDEXING_LIST.is_empty */
extern T1 T1133f9(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.position */
extern T0* T70f65(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.preconditions */
extern T0* T361f47(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.preconditions */
extern T0* T359f50(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.preconditions */
extern T0* T357f49(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.postconditions */
extern T0* T361f57(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.postconditions */
extern T0* T359f62(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.postconditions */
extern T0* T357f61(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.is_deferred */
extern T1 T1438f44(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.is_deferred */
extern T1 T1437f42(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.is_deferred */
extern T1 T361f58(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_deferred */
extern T1 T359f63(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_deferred */
extern T1 T357f62(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.is_deferred */
extern T1 T328f57(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_deferred */
extern T1 T246f59(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.is_frozen */
extern T1 T1439f43(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.is_frozen */
extern T1 T1438f45(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.is_frozen */
extern T1 T1437f43(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.is_frozen */
extern T1 T361f59(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_frozen */
extern T1 T359f64(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_frozen */
extern T1 T357f63(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.is_frozen */
extern T1 T328f60(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_frozen */
extern T1 T246f60(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.is_bracketable */
extern T1 T1439f49(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.is_bracketable */
extern T1 T1438f49(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.is_bracketable */
extern T1 T1437f47(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.is_bracketable */
extern T1 T361f26(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_bracketable */
extern T1 T359f28(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_bracketable */
extern T1 T357f27(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.is_bracketable */
extern T1 T328f64(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_bracketable */
extern T1 T246f69(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.is_parenthesisable */
extern T1 T1439f50(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.is_parenthesisable */
extern T1 T1438f50(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.is_parenthesisable */
extern T1 T1437f50(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.is_parenthesisable */
extern T1 T361f27(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_parenthesisable */
extern T1 T359f29(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_parenthesisable */
extern T1 T357f28(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.is_parenthesisable */
extern T1 T328f30(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_parenthesisable */
extern T1 T246f70(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.is_once */
extern T1 T1439f51(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.is_once */
extern T1 T1437f51(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.is_once */
extern T1 T361f28(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_once */
extern T1 T359f30(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_once */
extern T1 T357f29(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.is_once */
extern T1 T328f31(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_once */
extern T1 T246f71(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.is_once_per_object */
extern T1 T1439f52(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.is_once_per_object */
extern T1 T1438f53(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.is_once_per_object */
extern T1 T1437f52(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.is_once_per_object */
extern T1 T361f29(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_once_per_object */
extern T1 T359f31(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_once_per_object */
extern T1 T357f30(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.is_once_per_object */
extern T1 T328f32(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_once_per_object */
extern T1 T246f72(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.is_infixable */
extern T1 T1439f48(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.is_infixable */
extern T1 T1438f48(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.is_infixable */
extern T1 T1437f46(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.is_infixable */
extern T1 T361f25(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_infixable */
extern T1 T359f27(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_infixable */
extern T1 T357f26(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.is_infixable */
extern T1 T328f63(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_infixable */
extern T1 T246f68(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.is_prefixable */
extern T1 T1439f45(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.is_prefixable */
extern T1 T1438f47(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.is_prefixable */
extern T1 T1437f45(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_prefixable */
extern T1 T246f62(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.new_synonym */
extern T0* T1439f31(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.set_synonym */
extern void T1439f102(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.new_synonym */
extern T0* T1438f55(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_FUNCTION.set_synonym */
extern void T1438f108(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.new_synonym */
extern T0* T1437f54(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DO_FUNCTION.set_synonym */
extern void T1437f105(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTRIBUTE.new_synonym */
extern T0* T361f31(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_ATTRIBUTE.set_synonym */
extern void T361f93(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.new_synonym */
extern T0* T359f33(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.set_synonym */
extern void T359f100(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.new_synonym */
extern T0* T357f32(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.set_synonym */
extern void T357f97(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.new_synonym */
extern T0* T328f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.set_synonym */
extern void T328f103(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.new_synonym */
extern T0* T246f34(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EXTERNAL_FUNCTION.set_synonym */
extern void T246f111(GE_context* ac, T0* C, T0* a1);
/* detachable ET_DEFERRED_FUNCTION.is_constant_attribute */
extern T1 T1439f37(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.is_constant_attribute */
extern T1 T1438f39(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.is_constant_attribute */
extern T1 T1437f37(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.is_constant_attribute */
extern T1 T361f51(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_constant_attribute */
extern T1 T359f54(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.is_constant_attribute */
extern T1 T328f52(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_constant_attribute */
extern T1 T246f53(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.is_unique_attribute */
extern T1 T1439f38(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.is_unique_attribute */
extern T1 T1438f40(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.is_unique_attribute */
extern T1 T1437f38(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.is_unique_attribute */
extern T1 T361f52(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_unique_attribute */
extern T1 T357f54(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.is_unique_attribute */
extern T1 T328f53(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_unique_attribute */
extern T1 T246f54(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.has_seed */
extern T1 T1439f40(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ONCE_FUNCTION.has_seed */
extern T1 T1438f42(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DO_FUNCTION.has_seed */
extern T1 T1437f40(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_ATTRIBUTE.has_seed */
extern T1 T361f56(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_UNIQUE_ATTRIBUTE.has_seed */
extern T1 T359f57(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CONSTANT_ATTRIBUTE.has_seed */
extern T1 T357f60(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EXTENDED_ATTRIBUTE.has_seed */
extern T1 T328f55(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_EXTERNAL_FUNCTION.has_seed */
extern T1 T246f56(GE_context* ac, T0* C, T6 a1);
/* detachable ET_DEFERRED_FUNCTION.arguments_count */
extern T6 T1439f32(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.arguments_count */
extern T6 T1438f56(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.arguments_count */
extern T6 T1437f32(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.arguments_count */
extern T6 T361f48(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.arguments_count */
extern T6 T359f51(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.arguments_count */
extern T6 T357f31(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.arguments_count */
extern T6 T328f56(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.arguments_count */
extern T6 T246f58(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.is_static */
extern T1 T1439f36(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.has_static_mark */
extern T1 T1439f34(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.is_static */
extern T1 T1438f37(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.has_static_mark */
extern T1 T1438f34(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.is_static */
extern T1 T1437f36(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.has_static_mark */
extern T1 T1437f34(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.is_static */
extern T1 T361f50(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.has_static_mark */
extern T1 T361f44(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_static */
extern T1 T359f53(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_static */
extern T1 T359f53p1(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.has_static_mark */
extern T1 T359f47(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_static */
extern T1 T357f52(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_static */
extern T1 T357f52p1(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.has_static_mark */
extern T1 T357f47(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.is_static */
extern T1 T328f51(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.has_static_mark */
extern T1 T328f47(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_static */
extern T1 T246f50(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_static */
extern T1 T246f50p1(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.has_static_mark */
extern T1 T246f48(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.is_exported_to */
extern T1 T1439f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ONCE_FUNCTION.is_exported_to */
extern T1 T1438f78(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_DO_FUNCTION.is_exported_to */
extern T1 T1437f76(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ATTRIBUTE.is_exported_to */
extern T1 T361f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_exported_to */
extern T1 T359f76(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_exported_to */
extern T1 T357f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EXTENDED_ATTRIBUTE.is_exported_to */
extern T1 T328f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EXTERNAL_FUNCTION.is_exported_to */
extern T1 T246f84(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_ATTRIBUTE.arguments */
extern T0* T361f55(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.arguments */
extern T0* T359f56(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.arguments */
extern T0* T357f55(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.arguments */
extern T0* T328f54(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.name */
extern T0* T1439f33(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.name */
extern T0* T1438f33(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.name */
extern T0* T1437f33(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.name */
extern T0* T361f30(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.name */
extern T0* T359f32(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.name */
extern T0* T357f48(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.name */
extern T0* T328f33(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.name */
extern T0* T246f33(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.overloaded_name */
extern T0* T1439f76(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.overloaded_extended_name */
extern T0* T1439f78(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.overloaded_name */
extern T0* T1438f79(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.overloaded_extended_name */
extern T0* T1438f81(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.overloaded_name */
extern T0* T1437f77(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.overloaded_extended_name */
extern T0* T1437f79(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.overloaded_name */
extern T0* T361f73(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.overloaded_extended_name */
extern T0* T361f75(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.overloaded_name */
extern T0* T359f77(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.overloaded_extended_name */
extern T0* T359f79(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.overloaded_name */
extern T0* T357f76(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.overloaded_extended_name */
extern T0* T357f78(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.overloaded_name */
extern T0* T328f76(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.overloaded_extended_name */
extern T0* T328f78(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.overloaded_name */
extern T0* T246f85(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.overloaded_extended_name */
extern T0* T246f87(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.alias_name */
extern T0* T1439f44(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.alias_name */
extern T0* T1438f46(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.alias_name */
extern T0* T1437f44(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.alias_name */
extern T0* T361f23(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.alias_name */
extern T0* T359f65(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.alias_name */
extern T0* T357f64(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.alias_name */
extern T0* T328f61(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.alias_name */
extern T0* T246f61(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.overloaded_alias_name */
extern T0* T1439f77(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.overloaded_alias_name */
extern T0* T1438f80(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.overloaded_alias_name */
extern T0* T1437f78(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.overloaded_alias_name */
extern T0* T361f74(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.overloaded_alias_name */
extern T0* T359f78(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.overloaded_alias_name */
extern T0* T357f77(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.overloaded_alias_name */
extern T0* T328f77(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.overloaded_alias_name */
extern T0* T246f86(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.is_attribute */
extern T1 T1439f30(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.is_attribute */
extern T1 T1438f54(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.is_attribute */
extern T1 T1437f53(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.is_attribute */
extern T1 T359f49(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.is_attribute */
extern T1 T357f45(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.is_attribute */
extern T1 T246f55(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.type */
extern T0* T1439f35(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.type */
extern T0* T1438f35(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.type */
extern T0* T1437f35(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.type */
extern T0* T361f49(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.type */
extern T0* T359f52(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.type */
extern T0* T357f51(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.type */
extern T0* T328f50(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.type */
extern T0* T246f46(GE_context* ac, T0* C);
/* detachable ET_DEFERRED_FUNCTION.lower_name */
extern T0* T1439f41(GE_context* ac, T0* C);
/* detachable ET_ONCE_FUNCTION.lower_name */
extern T0* T1438f43(GE_context* ac, T0* C);
/* detachable ET_DO_FUNCTION.lower_name */
extern T0* T1437f41(GE_context* ac, T0* C);
/* [detachable] ET_ATTRIBUTE.lower_name */
extern T0* T361f45(GE_context* ac, T0* C);
/* [detachable] ET_UNIQUE_ATTRIBUTE.lower_name */
extern T0* T359f48(GE_context* ac, T0* C);
/* [detachable] ET_CONSTANT_ATTRIBUTE.lower_name */
extern T0* T357f50(GE_context* ac, T0* C);
/* [detachable] ET_EXTENDED_ATTRIBUTE.lower_name */
extern T0* T328f48(GE_context* ac, T0* C);
/* [detachable] ET_EXTERNAL_FUNCTION.lower_name */
extern T0* T246f52(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_deferred */
extern T1 T1442f41(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.is_deferred */
extern T1 T1441f41(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.is_deferred */
extern T1 T456f36(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_frozen */
extern T1 T1442f42(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.is_frozen */
extern T1 T1441f42(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.is_frozen */
extern T1 T458f34(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.is_frozen */
extern T1 T456f37(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_parenthesisable */
extern T1 T1442f50(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.is_parenthesisable */
extern T1 T1441f43(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.is_parenthesisable */
extern T1 T458f35(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.is_parenthesisable */
extern T1 T456f38(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.has_seed */
extern T1 T1442f38(GE_context* ac, T0* C, T6 a1);
/* detachable ET_ONCE_PROCEDURE.has_seed */
extern T1 T1441f38(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DEFERRED_PROCEDURE.has_seed */
extern T1 T458f31(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DO_PROCEDURE.has_seed */
extern T1 T456f34(GE_context* ac, T0* C, T6 a1);
/* detachable ET_EXTERNAL_PROCEDURE.new_synonym */
extern T0* T1442f51(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.set_synonym */
extern void T1442f108(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.new_synonym */
extern T0* T1441f45(GE_context* ac, T0* C, T0* a1);
/* detachable ET_ONCE_PROCEDURE.set_synonym */
extern void T1441f106(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.new_synonym */
extern T0* T458f36(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DEFERRED_PROCEDURE.set_synonym */
extern void T458f99(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.new_synonym */
extern T0* T456f39(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DO_PROCEDURE.set_synonym */
extern void T456f102(GE_context* ac, T0* C, T0* a1);
/* detachable ET_EXTERNAL_PROCEDURE.is_creation_exported_to */
extern T1 T1442f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_CLASS.is_creation_exported_to */
extern T1 T72f214(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_CREATOR_LIST.is_exported_to */
extern T1 T1067f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_CREATOR.is_exported_to */
extern T1 T1064f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_ONCE_PROCEDURE.is_creation_exported_to */
extern T1 T1441f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DEFERRED_PROCEDURE.is_creation_exported_to */
extern T1 T458f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_DO_PROCEDURE.is_creation_exported_to */
extern T1 T456f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* detachable ET_EXTERNAL_PROCEDURE.lower_name */
extern T0* T1442f34(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.lower_name */
extern T0* T1441f31(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.lower_name */
extern T0* T458f38(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.lower_name */
extern T0* T456f32(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.name */
extern T0* T1442f52(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.name */
extern T0* T1441f46(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.name */
extern T0* T458f42(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.name */
extern T0* T456f33(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.overloaded_name */
extern T0* T1442f83(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.overloaded_extended_name */
extern T0* T1442f85(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.overloaded_name */
extern T0* T1441f78(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.overloaded_extended_name */
extern T0* T1441f80(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.overloaded_name */
extern T0* T458f74(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.overloaded_extended_name */
extern T0* T458f76(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.overloaded_name */
extern T0* T456f75(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.overloaded_extended_name */
extern T0* T456f77(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.alias_name */
extern T0* T1442f39(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.alias_name */
extern T0* T1441f39(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.alias_name */
extern T0* T458f32(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.alias_name */
extern T0* T456f35(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.overloaded_alias_name */
extern T0* T1442f84(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.overloaded_alias_name */
extern T0* T1441f79(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.overloaded_alias_name */
extern T0* T458f75(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.overloaded_alias_name */
extern T0* T456f76(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.arguments_count */
extern T6 T1442f40(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.arguments_count */
extern T6 T1441f48(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.arguments_count */
extern T6 T458f39(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.arguments_count */
extern T6 T456f40(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_exported_to */
extern T1 T1442f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_ONCE_PROCEDURE.is_exported_to */
extern T1 T1441f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DEFERRED_PROCEDURE.is_exported_to */
extern T1 T458f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DO_PROCEDURE.is_exported_to */
extern T1 T456f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_EXTERNAL_PROCEDURE.is_static */
extern T1 T1442f32(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.is_static */
extern T1 T1442f32p1(GE_context* ac, T0* C);
/* detachable ET_EXTERNAL_PROCEDURE.has_static_mark */
extern T1 T1442f54(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.is_static */
extern T1 T1441f34(GE_context* ac, T0* C);
/* detachable ET_ONCE_PROCEDURE.has_static_mark */
extern T1 T1441f47(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.is_static */
extern T1 T458f41(GE_context* ac, T0* C);
/* [detachable] ET_DEFERRED_PROCEDURE.has_static_mark */
extern T1 T458f44(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.is_static */
extern T1 T456f42(GE_context* ac, T0* C);
/* [detachable] ET_DO_PROCEDURE.has_static_mark */
extern T1 T456f45(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_infix */
extern T1 T1444f9(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_infix */
extern T1 T1443f9(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_infix */
extern T1 T179f48(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_prefix */
extern T1 T1445f8(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_prefix */
extern T1 T849f15(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_prefix */
extern T1 T179f47(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.first_leaf */
extern T0* T1445f82(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.first_leaf */
extern T0* T1444f66(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.first_leaf */
extern T0* T1443f82(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.first_leaf */
extern T0* T849f66(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.first_leaf */
extern T0* T179f87(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.hash_code */
extern T6 T1445f44(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.hash_code */
extern T6 T1443f30(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_argument */
extern T1 T1445f62(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_argument */
extern T1 T1444f51(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_argument */
extern T1 T1443f48(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_argument */
extern T1 T849f51(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_argument */
extern T1 T179f25(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.argument_name */
extern T0* T1445f63(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.argument_name */
extern T0* T1444f52(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.argument_name */
extern T0* T1443f49(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.argument_name */
extern T0* T849f52(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.argument_name */
extern T0* T179f65(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_local */
extern T1 T1445f64(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_local */
extern T1 T1444f53(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_local */
extern T1 T1443f50(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_local */
extern T1 T849f53(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_local */
extern T1 T179f27(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.local_name */
extern T0* T1445f65(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.local_name */
extern T0* T1444f54(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.local_name */
extern T0* T1443f51(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.local_name */
extern T0* T849f54(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.local_name */
extern T0* T179f66(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_object_test_local */
extern T1 T1445f66(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_object_test_local */
extern T1 T1444f55(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_object_test_local */
extern T1 T1443f52(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_object_test_local */
extern T1 T849f55(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_object_test_local */
extern T1 T179f7(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.object_test_local_name */
extern T0* T1445f67(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.object_test_local_name */
extern T0* T1444f56(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.object_test_local_name */
extern T0* T1443f53(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.object_test_local_name */
extern T0* T849f56(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.object_test_local_name */
extern T0* T179f67(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_across_cursor */
extern T1 T1445f68(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_across_cursor */
extern T1 T1444f57(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_across_cursor */
extern T1 T1443f54(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_across_cursor */
extern T1 T849f57(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_across_cursor */
extern T1 T179f28(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.across_cursor_name */
extern T0* T1445f69(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.across_cursor_name */
extern T0* T1444f58(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.across_cursor_name */
extern T0* T1443f55(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.across_cursor_name */
extern T0* T849f58(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.across_cursor_name */
extern T0* T179f68(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.is_tuple_label */
extern T1 T1445f11(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.is_tuple_label */
extern T1 T1444f11(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.is_tuple_label */
extern T1 T1443f11(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.is_tuple_label */
extern T1 T849f18(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_tuple_label */
extern T1 T179f36(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.same_feature_name */
extern T1 T1445f6(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PREFIX_FREE_NAME.same_feature_name */
extern T1 T1444f32(GE_context* ac, T0* C, T0* a1);
/* detachable ET_PREFIX_NAME.same_feature_name */
extern T1 T1443f6(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INFIX_FREE_NAME.same_feature_name */
extern T1 T849f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER.same_feature_name */
extern T1 T179f35(GE_context* ac, T0* C, T0* a1);
extern T1 T179f35ot1(T0* a1, T0** a2);
/* detachable ET_INFIX_NAME.position */
extern T0* T1445f7(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.position */
extern T0* T1444f7(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.position */
extern T0* T1443f7(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.position */
extern T0* T849f14(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.position */
extern T0* T179f23(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.lower_name */
extern T0* T1445f43(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.lower_name */
extern T0* T1444f22(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.lower_name */
extern T0* T1443f29(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.lower_name */
extern T0* T849f12(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.lower_name */
extern T0* T179f18(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.name */
extern T0* T1445f23(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.name */
extern T0* T1444f21(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.name */
extern T0* T1443f23(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.name */
extern T0* T849f11(GE_context* ac, T0* C);
/* detachable ET_INFIX_NAME.last_leaf */
extern T0* T1445f84(GE_context* ac, T0* C);
/* detachable ET_PREFIX_FREE_NAME.last_leaf */
extern T0* T1444f68(GE_context* ac, T0* C);
/* detachable ET_PREFIX_NAME.last_leaf */
extern T0* T1443f84(GE_context* ac, T0* C);
/* [detachable] ET_INFIX_FREE_NAME.last_leaf */
extern T0* T849f68(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.last_leaf */
extern T0* T179f93(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.is_tuple */
extern T1 T434f37(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.is_tuple */
extern T1 T433f37(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.is_tuple */
extern T1 T310f48(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.is_tuple */
extern T1 T218f47(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.type_mark */
extern T0* T434f41(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.tokens */
extern T0* T434f48(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.type_mark */
extern T0* T433f43(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.tokens */
extern T0* T433f42(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.type_mark */
extern T0* T310f33(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.tokens */
extern T0* T310f25(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.type_mark */
extern T0* T293f33(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.tokens */
extern T0* T293f25(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.type_mark */
extern T0* T218f43(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.tokens */
extern T0* T218f33(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.has_nested_reference_attributes */
extern T1 T434f55(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.has_nested_reference_attributes */
extern T1 T433f56(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.has_nested_reference_attributes */
extern T1 T310f45(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.has_nested_reference_attributes */
extern T1 T293f44(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.has_nested_reference_attributes */
extern T1 T218f44(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.is_generic */
extern T1 T434f42(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.is_generic */
extern T1 T433f45(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.is_generic */
extern T1 T310f34(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.is_generic */
extern T1 T293f34(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.is_generic */
extern T1 T218f27(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.primary_type */
extern T0* T434f35(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.primary_type */
extern T0* T433f35(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.primary_type */
extern T0* T310f30(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.primary_type */
extern T0* T293f30(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.primary_type */
extern T0* T218f39(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.is_builtin_attribute */
extern T1 T434f34(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.is_builtin_attribute */
extern T1 T433f34(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.is_builtin_attribute */
extern T1 T310f29(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.is_builtin_attribute */
extern T1 T293f28(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.is_builtin_attribute */
extern T1 T218f42(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.is_special */
extern T1 T434f36(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.is_special */
extern T1 T433f36(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.is_special */
extern T1 T293f47(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.is_special */
extern T1 T218f46(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_procedure */
extern T0* T434f47(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_DYNAMIC_FEATURE_LIST.force_last */
extern void T219f11(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_FEATURE_LIST.resize */
extern void T219f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_FEATURE_LIST.new_capacity */
extern T6 T219f7(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_FEATURE_LIST.capacity */
extern T6 T219f6(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.register_feature_seeds */
extern void T434f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].force_last */
extern void T584f34(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].key_storage_put */
extern void T584f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].slots_put */
extern void T584f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].clashes_put */
extern void T584f40(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].slots_item */
extern T6 T584f23(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].hash_position */
extern T6 T584f26(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].resize */
extern void T584f39(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].clashes_resize */
extern void T584f47(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].special_integer_ */
extern T0* T584f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].key_storage_resize */
extern void T584f46(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].item_storage_resize */
extern void T584f45(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].key_storage_item */
extern T6 T584f28(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].clashes_item */
extern T6 T584f29(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].slots_resize */
extern void T584f44(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].new_modulus */
extern T6 T584f27(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].new_capacity */
extern T6 T584f32(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].item_storage_put */
extern void T584f38(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].search_position */
extern void T584f37(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].unset_found_item */
extern void T584f36(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T434f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].value */
extern T0* T584f22(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].item_storage_item */
extern T0* T584f21(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].position_of_key */
extern T6 T584f24(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].make_map */
extern T0* T584c33(GE_context* ac, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].make_with_equality_testers */
extern void T584f35(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].make_sparse_container */
extern void T584f43(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].set_internal_cursor */
extern void T584f52(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].new_cursor */
extern T0* T584f30(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].make */
extern T0* T1347c4(GE_context* ac, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].make_slots */
extern void T584f51(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].make_clashes */
extern void T584f50(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].make_key_storage */
extern void T584f49(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_FEATURE, [attached] INTEGER_32].make_item_storage */
extern void T584f48(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_DYNAMIC_FEATURE_LIST.make_with_capacity */
extern T0* T219c10(GE_context* ac, T6 a1);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_procedure */
extern T0* T433f49(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.register_feature_seeds */
extern void T433f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T433f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_agent_call */
extern void T225f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_agent_call */
extern void T69f129(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.make */
extern T0* T1393c15(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T433f44p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_procedure */
extern T0* T310f53(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.register_feature_seeds */
extern void T310f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T310f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T310f23p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_procedure */
extern T0* T293f53(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.register_feature_seeds */
extern void T293f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T293f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_put */
extern void T225f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_put */
extern void T69f126(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T293f23p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.seeded_dynamic_procedure */
extern T0* T218f28(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.register_feature_seeds */
extern void T218f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.new_dynamic_procedure */
extern T0* T218f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.dynamic_query */
extern T0* T434f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.put_attribute */
extern void T434f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T434f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable ET_DYNAMIC_FEATURE.set_result_type_set */
extern void T231f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T434f46p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.dynamic_query */
extern T0* T433f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.put_attribute */
extern void T433f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_query */
extern T0* T433f47(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.dynamic_query */
extern T0* T310f54(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.put_attribute */
extern void T310f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T310f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T310f27p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.dynamic_query */
extern T0* T293f54(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.put_attribute */
extern void T293f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T293f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_item */
extern void T225f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_item */
extern void T69f127(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TOKEN_CONSTANTS.infix_at_feature_name */
extern T0* T71f92(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T293f27p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.dynamic_query */
extern T0* T218f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.put_attribute */
extern void T218f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.new_dynamic_query */
extern T0* T218f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.is_agent_type */
extern T1 T310f52(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.is_agent_type */
extern T1 T293f52(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.is_agent_type */
extern T1 T218f51(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.dynamic_procedure */
extern T0* T434f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.dynamic_procedure */
extern T0* T433f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.dynamic_procedure */
extern T0* T310f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.dynamic_procedure */
extern T0* T293f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.dynamic_procedure */
extern T0* T218f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.is_expanded */
extern T1 T434f40(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.is_expanded */
extern T1 T433f41(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.is_expanded */
extern T1 T310f32(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.is_expanded */
extern T1 T293f32(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.is_expanded */
extern T1 T218f31(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.is_basic */
extern T1 T434f28(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.is_basic */
extern T1 T433f28(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.is_basic */
extern T1 T310f26(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.is_basic */
extern T1 T293f26(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.is_basic */
extern T1 T218f36(GE_context* ac, T0* C);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_query */
extern T0* T434f30(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_query */
extern T0* T433f30(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_query */
extern T0* T310f40(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_query */
extern T0* T293f40(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.seeded_dynamic_query */
extern T0* T218f41(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_DYNAMIC_FUNCTION_TYPE.conforms_to_primary_type */
extern T1 T434f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_SET [[attached] ET_DYNAMIC_PRIMARY_TYPE].has */
extern T1 T265f29(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_primary_type */
extern T1 T433f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_SPECIAL_TYPE.conforms_to_primary_type */
extern T1 T310f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_TUPLE_TYPE.conforms_to_primary_type */
extern T1 T293f24(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DYNAMIC_PRIMARY_TYPE.conforms_to_primary_type */
extern T1 T218f35(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_PARENTHESIS_SYMBOL.is_null_position */
extern T1 T1946f32(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.is_null_position */
extern T1 T1422f7(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.is_null_position */
extern T1 T1421f7(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.is_null_position */
extern T1 T1420f6(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.is_null_position */
extern T1 T1419f6(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.is_null_position */
extern T1 T1417f8(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.is_null_position */
extern T1 T1416f8(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.is_null_position */
extern T1 T1415f41(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.is_null_position */
extern T1 T1414f41(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.is_null_position */
extern T1 T1413f41(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.is_null_position */
extern T1 T1412f41(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.is_null_position */
extern T1 T1411f16(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.is_null_position */
extern T1 T1410f16(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.is_null_position */
extern T1 T1409f14(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.is_null_position */
extern T1 T970f32(GE_context* ac, T0* C);
/* detachable ET_VOID.is_null_position */
extern T1 T962f6(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.is_null_position */
extern T1 T959f19(GE_context* ac, T0* C);
/* detachable ET_RETRY_INSTRUCTION.is_null_position */
extern T1 T956f12(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.is_null_position */
extern T1 T946f6(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.is_null_position */
extern T1 T938f21(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_KEYWORD.is_null_position */
extern T1 T920f13(GE_context* ac, T0* C);
/* detachable ET_AGENT_KEYWORD.is_null_position */
extern T1 T917f12(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.is_null_position */
extern T1 T848f9(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.is_null_position */
extern T1 T602f4(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.is_null_position */
extern T1 T402f32(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.is_null_position */
extern T1 T360f11(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.is_null_position */
extern T1 T342f20(GE_context* ac, T0* C);
/* [detachable] ET_RESULT.is_null_position */
extern T1 T300f11(GE_context* ac, T0* C);
/* [detachable] ET_CURRENT.is_null_position */
extern T1 T272f11(GE_context* ac, T0* C);
/* [detachable] ET_COMPRESSED_POSITION.is_null */
extern T1 T188f8(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.is_null_position */
extern T1 T179f46(GE_context* ac, T0* C);
/* [detachable] ET_FILE_POSITION.to_text */
extern T0* T1492f10(GE_context* ac, T0* C);
/* [detachable] ET_FILE_POSITION.append_to_string */
extern void T1492f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_FILE_POSITION.append_to_string_with_filename */
extern void T1492f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FILE_POSITION.append_context_to_string */
extern void T1492f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FILE_POSITION.append_line_to_string */
extern void T1492f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_FILE_POSITION.skip_lines */
extern void T1492f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] ET_FILE_POSITION.integer_ */
extern T0* T1492f11(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.position_to_text */
extern T0* T1422f30(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.append_position_to_string */
extern void T1422f50(GE_context* ac, T0* C, T0* a1);
/* detachable ET_C2_CHARACTER_CONSTANT.integer_ */
extern T0* T1422f32(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.position_to_text */
extern T0* T1421f30(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.append_position_to_string */
extern void T1421f50(GE_context* ac, T0* C, T0* a1);
/* detachable ET_C1_CHARACTER_CONSTANT.integer_ */
extern T0* T1421f32(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.position_to_text */
extern T0* T1420f30(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.append_position_to_string */
extern void T1420f46(GE_context* ac, T0* C, T0* a1);
/* detachable ET_FALSE_CONSTANT.integer_ */
extern T0* T1420f33(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.position_to_text */
extern T0* T1419f30(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.append_position_to_string */
extern void T1419f46(GE_context* ac, T0* C, T0* a1);
/* detachable ET_TRUE_CONSTANT.integer_ */
extern T0* T1419f33(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.position_to_text */
extern T0* T1417f32(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.append_position_to_string */
extern void T1417f50(GE_context* ac, T0* C, T0* a1);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.integer_ */
extern T0* T1417f35(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.position_to_text */
extern T0* T1416f32(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.append_position_to_string */
extern void T1416f50(GE_context* ac, T0* C, T0* a1);
/* detachable ET_REGULAR_REAL_CONSTANT.integer_ */
extern T0* T1416f35(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.position_to_text */
extern T0* T1415f49(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.append_position_to_string */
extern void T1415f73(GE_context* ac, T0* C, T0* a1);
/* detachable ET_BINARY_INTEGER_CONSTANT.integer_ */
extern T0* T1415f52(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.position_to_text */
extern T0* T1414f49(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.append_position_to_string */
extern void T1414f73(GE_context* ac, T0* C, T0* a1);
/* detachable ET_OCTAL_INTEGER_CONSTANT.integer_ */
extern T0* T1414f52(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.position_to_text */
extern T0* T1413f49(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.append_position_to_string */
extern void T1413f73(GE_context* ac, T0* C, T0* a1);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.integer_ */
extern T0* T1413f52(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.position_to_text */
extern T0* T1412f49(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.append_position_to_string */
extern void T1412f73(GE_context* ac, T0* C, T0* a1);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.integer_ */
extern T0* T1412f52(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.position_to_text */
extern T0* T1411f33(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.append_position_to_string */
extern void T1411f50(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SPECIAL_MANIFEST_STRING.integer_ */
extern T0* T1411f37(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.position_to_text */
extern T0* T1410f37(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.append_position_to_string */
extern void T1410f54(GE_context* ac, T0* C, T0* a1);
/* detachable ET_VERBATIM_STRING.integer_ */
extern T0* T1410f41(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.position_to_text */
extern T0* T1409f31(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.append_position_to_string */
extern void T1409f51(GE_context* ac, T0* C, T0* a1);
/* detachable ET_C3_CHARACTER_CONSTANT.integer_ */
extern T0* T1409f33(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.position_to_text */
extern T0* T970f38(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.append_position_to_string */
extern void T970f47(GE_context* ac, T0* C, T0* a1);
/* detachable ET_QUESTION_MARK_SYMBOL.integer_ */
extern T0* T970f39(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.position_to_text */
extern T0* T959f56(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.append_position_to_string */
extern void T959f102(GE_context* ac, T0* C, T0* a1);
/* detachable ET_SYMBOL_OPERATOR.integer_ */
extern T0* T959f58(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.position_to_text */
extern T0* T848f33(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.append_position_to_string */
extern void T848f49(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REGULAR_MANIFEST_STRING.integer_ */
extern T0* T848f37(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.position_to_text */
extern T0* T602f66(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.append_position_to_string */
extern void T602f114(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_BRACKET_SYMBOL.integer_ */
extern T0* T602f68(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.position_to_text */
extern T0* T402f39(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.append_position_to_string */
extern void T402f102(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_KEYWORD.integer_ */
extern T0* T402f40(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.position_to_text */
extern T0* T360f50(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.append_position_to_string */
extern void T360f74(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.integer_ */
extern T0* T360f53(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.position_to_text */
extern T0* T342f38(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.append_position_to_string */
extern void T342f101(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYMBOL.integer_ */
extern T0* T342f39(GE_context* ac, T0* C);
/* [detachable] ET_CURRENT.position_to_text */
extern T0* T272f25(GE_context* ac, T0* C);
/* [detachable] ET_CURRENT.append_position_to_string */
extern void T272f38(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CURRENT.integer_ */
extern T0* T272f26(GE_context* ac, T0* C);
/* [detachable] ET_COMPRESSED_POSITION.to_text */
extern T0* T188f9(GE_context* ac, T0* C);
/* [detachable] ET_COMPRESSED_POSITION.append_to_string */
extern void T188f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_COMPRESSED_POSITION.integer_ */
extern T0* T188f10(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.position_to_text */
extern T0* T179f89(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.append_position_to_string */
extern void T179f125(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_IDENTIFIER.integer_ */
extern T0* T179f91(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.line */
extern T6 T1946f30(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.line */
extern T6 T1422f23(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.line */
extern T6 T1421f23(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.line */
extern T6 T1420f15(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.line */
extern T6 T1419f15(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.line */
extern T6 T1417f25(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.line */
extern T6 T1416f25(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.line */
extern T6 T1415f16(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.line */
extern T6 T1414f16(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.line */
extern T6 T1413f16(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.line */
extern T6 T1412f16(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.line */
extern T6 T1411f14(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.line */
extern T6 T1410f14(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.line */
extern T6 T1409f12(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.line */
extern T6 T970f33(GE_context* ac, T0* C);
/* detachable ET_VOID.line */
extern T6 T962f15(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.line */
extern T6 T959f17(GE_context* ac, T0* C);
/* detachable ET_RETRY_INSTRUCTION.line */
extern T6 T956f10(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.line */
extern T6 T946f11(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.line */
extern T6 T938f19(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_KEYWORD.line */
extern T6 T920f11(GE_context* ac, T0* C);
/* detachable ET_AGENT_KEYWORD.line */
extern T6 T917f10(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.line */
extern T6 T848f7(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.line */
extern T6 T602f7(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.line */
extern T6 T402f33(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.line */
extern T6 T360f9(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.line */
extern T6 T342f21(GE_context* ac, T0* C);
/* [detachable] ET_RESULT.line */
extern T6 T300f9(GE_context* ac, T0* C);
/* [detachable] ET_CURRENT.line */
extern T6 T272f9(GE_context* ac, T0* C);
/* [detachable] ET_COMPRESSED_POSITION.line */
extern T6 T188f6(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.line */
extern T6 T179f31(GE_context* ac, T0* C);
/* [detachable] ET_PARENTHESIS_SYMBOL.column */
extern T6 T1946f31(GE_context* ac, T0* C);
/* detachable ET_C2_CHARACTER_CONSTANT.column */
extern T6 T1422f6(GE_context* ac, T0* C);
/* detachable ET_C1_CHARACTER_CONSTANT.column */
extern T6 T1421f6(GE_context* ac, T0* C);
/* detachable ET_FALSE_CONSTANT.column */
extern T6 T1420f5(GE_context* ac, T0* C);
/* detachable ET_TRUE_CONSTANT.column */
extern T6 T1419f5(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_REAL_CONSTANT.column */
extern T6 T1417f7(GE_context* ac, T0* C);
/* detachable ET_REGULAR_REAL_CONSTANT.column */
extern T6 T1416f7(GE_context* ac, T0* C);
/* detachable ET_BINARY_INTEGER_CONSTANT.column */
extern T6 T1415f17(GE_context* ac, T0* C);
/* detachable ET_OCTAL_INTEGER_CONSTANT.column */
extern T6 T1414f17(GE_context* ac, T0* C);
/* detachable ET_HEXADECIMAL_INTEGER_CONSTANT.column */
extern T6 T1413f17(GE_context* ac, T0* C);
/* detachable ET_UNDERSCORED_INTEGER_CONSTANT.column */
extern T6 T1412f17(GE_context* ac, T0* C);
/* detachable ET_SPECIAL_MANIFEST_STRING.column */
extern T6 T1411f15(GE_context* ac, T0* C);
/* detachable ET_VERBATIM_STRING.column */
extern T6 T1410f15(GE_context* ac, T0* C);
/* detachable ET_C3_CHARACTER_CONSTANT.column */
extern T6 T1409f13(GE_context* ac, T0* C);
/* detachable ET_QUESTION_MARK_SYMBOL.column */
extern T6 T970f34(GE_context* ac, T0* C);
/* detachable ET_VOID.column */
extern T6 T962f5(GE_context* ac, T0* C);
/* detachable ET_SYMBOL_OPERATOR.column */
extern T6 T959f18(GE_context* ac, T0* C);
/* detachable ET_RETRY_INSTRUCTION.column */
extern T6 T956f11(GE_context* ac, T0* C);
/* detachable ET_KEYWORD_OPERATOR.column */
extern T6 T946f12(GE_context* ac, T0* C);
/* detachable ET_FREE_OPERATOR.column */
extern T6 T938f20(GE_context* ac, T0* C);
/* detachable ET_PRECURSOR_KEYWORD.column */
extern T6 T920f12(GE_context* ac, T0* C);
/* detachable ET_AGENT_KEYWORD.column */
extern T6 T917f11(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_MANIFEST_STRING.column */
extern T6 T848f8(GE_context* ac, T0* C);
/* [detachable] ET_BRACKET_SYMBOL.column */
extern T6 T602f38(GE_context* ac, T0* C);
/* [detachable] ET_KEYWORD.column */
extern T6 T402f34(GE_context* ac, T0* C);
/* [detachable] ET_REGULAR_INTEGER_CONSTANT.column */
extern T6 T360f10(GE_context* ac, T0* C);
/* [detachable] ET_SYMBOL.column */
extern T6 T342f22(GE_context* ac, T0* C);
/* [detachable] ET_RESULT.column */
extern T6 T300f10(GE_context* ac, T0* C);
/* [detachable] ET_CURRENT.column */
extern T6 T272f10(GE_context* ac, T0* C);
/* [detachable] ET_COMPRESSED_POSITION.column */
extern T6 T188f7(GE_context* ac, T0* C);
/* [detachable] ET_IDENTIFIER.column */
extern T6 T179f32(GE_context* ac, T0* C);
/* [detachable] UC_STRING_EQUALITY_TESTER.test */
extern T1 T856f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] UC_STRING_EQUALITY_TESTER.string_ */
extern T0* T856f2(GE_context* ac, T0* C);
/* [detachable] KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.test */
extern T1 T170f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.string_ */
extern T0* T170f2(GE_context* ac, T0* C);
/* detachable KL_EQUALITY_TESTER [[attached] STRING_8].test */
extern T1 T149f1(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T149f1oe1(GE_context* ac, T0* a1, T0* a2);
/* [detachable] UC_UTF8_STRING.is_equal */
extern T1 T862f8(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_STRING_EQUALITY_TESTER.test */
extern T1 T148f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.default_message */
extern T0* T2068f5(GE_context* ac, T0* C);
/* [detachable] LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.message */
extern T0* T2068f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.arguments */
extern T0* T2068f6(GE_context* ac, T0* C);
/* [detachable] LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.string_ */
extern T0* T2068f4(GE_context* ac, T0* C);
/* [detachable] LX_CHARACTER_OUT_OF_RANGE_ERROR.default_message */
extern T0* T2053f3(GE_context* ac, T0* C);
/* [detachable] LX_CHARACTER_OUT_OF_RANGE_ERROR.message */
extern T0* T2053f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_CHARACTER_OUT_OF_RANGE_ERROR.arguments */
extern T0* T2053f7(GE_context* ac, T0* C);
/* [detachable] LX_CHARACTER_OUT_OF_RANGE_ERROR.string_ */
extern T0* T2053f6(GE_context* ac, T0* C);
/* [detachable] LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.default_message */
extern T0* T2052f3(GE_context* ac, T0* C);
/* [detachable] LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.message */
extern T0* T2052f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.arguments */
extern T0* T2052f7(GE_context* ac, T0* C);
/* [detachable] LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.string_ */
extern T0* T2052f6(GE_context* ac, T0* C);
/* [detachable] LX_FULL_AND_REJECT_ERROR.default_message */
extern T0* T2051f3(GE_context* ac, T0* C);
/* [detachable] LX_FULL_AND_REJECT_ERROR.message */
extern T0* T2051f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_FULL_AND_REJECT_ERROR.arguments */
extern T0* T2051f7(GE_context* ac, T0* C);
/* [detachable] LX_FULL_AND_REJECT_ERROR.string_ */
extern T0* T2051f6(GE_context* ac, T0* C);
/* [detachable] LX_FULL_AND_META_ERROR.default_message */
extern T0* T2050f3(GE_context* ac, T0* C);
/* [detachable] LX_FULL_AND_META_ERROR.message */
extern T0* T2050f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_FULL_AND_META_ERROR.arguments */
extern T0* T2050f7(GE_context* ac, T0* C);
/* [detachable] LX_FULL_AND_META_ERROR.string_ */
extern T0* T2050f6(GE_context* ac, T0* C);
/* [detachable] LX_BAD_CHARACTER_ERROR.default_message */
extern T0* T2049f3(GE_context* ac, T0* C);
/* [detachable] LX_BAD_CHARACTER_ERROR.message */
extern T0* T2049f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_BAD_CHARACTER_ERROR.arguments */
extern T0* T2049f7(GE_context* ac, T0* C);
/* [detachable] LX_BAD_CHARACTER_ERROR.string_ */
extern T0* T2049f6(GE_context* ac, T0* C);
/* [detachable] LX_BAD_CHARACTER_CLASS_ERROR.default_message */
extern T0* T2048f3(GE_context* ac, T0* C);
/* [detachable] LX_BAD_CHARACTER_CLASS_ERROR.message */
extern T0* T2048f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_BAD_CHARACTER_CLASS_ERROR.arguments */
extern T0* T2048f7(GE_context* ac, T0* C);
/* [detachable] LX_BAD_CHARACTER_CLASS_ERROR.string_ */
extern T0* T2048f6(GE_context* ac, T0* C);
/* [detachable] LX_MISSING_QUOTE_ERROR.default_message */
extern T0* T2047f3(GE_context* ac, T0* C);
/* [detachable] LX_MISSING_QUOTE_ERROR.message */
extern T0* T2047f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_MISSING_QUOTE_ERROR.arguments */
extern T0* T2047f7(GE_context* ac, T0* C);
/* [detachable] LX_MISSING_QUOTE_ERROR.string_ */
extern T0* T2047f6(GE_context* ac, T0* C);
/* [detachable] LX_UNRECOGNIZED_RULE_ERROR.default_message */
extern T0* T2046f3(GE_context* ac, T0* C);
/* [detachable] LX_UNRECOGNIZED_RULE_ERROR.message */
extern T0* T2046f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] LX_UNRECOGNIZED_RULE_ERROR.arguments */
extern T0* T2046f7(GE_context* ac, T0* C);
/* [detachable] LX_UNRECOGNIZED_RULE_ERROR.string_ */
extern T0* T2046f6(GE_context* ac, T0* C);
/* [detachable] ET_UNIVERSE_ERROR.default_message */
extern T0* T1924f12(GE_context* ac, T0* C);
/* [detachable] ET_UNIVERSE_ERROR.message */
extern T0* T1924f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_UNIVERSE_ERROR.arguments */
extern T0* T1924f6(GE_context* ac, T0* C);
/* [detachable] ET_UNIVERSE_ERROR.string_ */
extern T0* T1924f9(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY_ERROR.default_message */
extern T0* T1868f12(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY_ERROR.message */
extern T0* T1868f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_DOTNET_ASSEMBLY_ERROR.arguments */
extern T0* T1868f6(GE_context* ac, T0* C);
/* [detachable] ET_DOTNET_ASSEMBLY_ERROR.string_ */
extern T0* T1868f9(GE_context* ac, T0* C);
/* [detachable] ET_SYNTAX_ERROR.default_message */
extern T0* T1867f11(GE_context* ac, T0* C);
/* [detachable] ET_SYNTAX_ERROR.message */
extern T0* T1867f14(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYNTAX_ERROR.arguments */
extern T0* T1867f12(GE_context* ac, T0* C);
/* [detachable] ET_SYNTAX_ERROR.string_ */
extern T0* T1867f16(GE_context* ac, T0* C);
/* [detachable] ET_CLUSTER_ERROR.default_message */
extern T0* T1866f12(GE_context* ac, T0* C);
/* [detachable] ET_CLUSTER_ERROR.message */
extern T0* T1866f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLUSTER_ERROR.arguments */
extern T0* T1866f6(GE_context* ac, T0* C);
/* [detachable] ET_CLUSTER_ERROR.string_ */
extern T0* T1866f9(GE_context* ac, T0* C);
/* [detachable] UT_TOO_MANY_INCLUDES_ERROR.default_message */
extern T0* T1296f5(GE_context* ac, T0* C);
/* [detachable] UT_TOO_MANY_INCLUDES_ERROR.message */
extern T0* T1296f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_TOO_MANY_INCLUDES_ERROR.arguments */
extern T0* T1296f6(GE_context* ac, T0* C);
/* [detachable] UT_TOO_MANY_INCLUDES_ERROR.string_ */
extern T0* T1296f4(GE_context* ac, T0* C);
/* [detachable] UT_SYNTAX_ERROR.default_message */
extern T0* T1295f5(GE_context* ac, T0* C);
/* [detachable] UT_SYNTAX_ERROR.message */
extern T0* T1295f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_SYNTAX_ERROR.arguments */
extern T0* T1295f6(GE_context* ac, T0* C);
/* [detachable] UT_SYNTAX_ERROR.string_ */
extern T0* T1295f4(GE_context* ac, T0* C);
/* [detachable] ET_VALIDITY_ERROR.default_message */
extern T0* T742f38(GE_context* ac, T0* C);
/* [detachable] ET_VALIDITY_ERROR.message */
extern T0* T742f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_VALIDITY_ERROR.arguments */
extern T0* T742f13(GE_context* ac, T0* C);
/* [detachable] ET_VALIDITY_ERROR.string_ */
extern T0* T742f37(GE_context* ac, T0* C);
/* [detachable] ET_INTERNAL_ERROR.default_message */
extern T0* T741f5(GE_context* ac, T0* C);
/* [detachable] ET_INTERNAL_ERROR.message */
extern T0* T741f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_INTERNAL_ERROR.arguments */
extern T0* T741f6(GE_context* ac, T0* C);
/* [detachable] ET_INTERNAL_ERROR.string_ */
extern T0* T741f9(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_ERROR.default_message */
extern T0* T740f5(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_ERROR.message */
extern T0* T740f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_SYSTEM_ERROR.arguments */
extern T0* T740f6(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_ERROR.string_ */
extern T0* T740f9(GE_context* ac, T0* C);
/* [detachable] UT_CANNOT_WRITE_TO_FILE_ERROR.default_message */
extern T0* T296f5(GE_context* ac, T0* C);
/* [detachable] UT_CANNOT_WRITE_TO_FILE_ERROR.message */
extern T0* T296f3(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_CANNOT_WRITE_TO_FILE_ERROR.arguments */
extern T0* T296f6(GE_context* ac, T0* C);
/* [detachable] UT_CANNOT_WRITE_TO_FILE_ERROR.string_ */
extern T0* T296f4(GE_context* ac, T0* C);
/* [detachable] AP_ERROR.default_message */
extern T0* T87f17(GE_context* ac, T0* C);
/* [detachable] AP_ERROR.message */
extern T0* T87f18(GE_context* ac, T0* C, T0* a1);
/* [detachable] AP_ERROR.arguments */
extern T0* T87f20(GE_context* ac, T0* C);
/* [detachable] AP_ERROR.string_ */
extern T0* T87f19(GE_context* ac, T0* C);
/* [detachable] UT_MESSAGE.default_message */
extern T0* T81f3(GE_context* ac, T0* C);
/* [detachable] UT_MESSAGE.message */
extern T0* T81f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_MESSAGE.arguments */
extern T0* T81f7(GE_context* ac, T0* C);
/* [detachable] UT_MESSAGE.string_ */
extern T0* T81f6(GE_context* ac, T0* C);
/* [detachable] UT_VERSION_NUMBER.default_message */
extern T0* T80f3(GE_context* ac, T0* C);
/* [detachable] UT_VERSION_NUMBER.message */
extern T0* T80f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_VERSION_NUMBER.arguments */
extern T0* T80f7(GE_context* ac, T0* C);
/* [detachable] UT_VERSION_NUMBER.string_ */
extern T0* T80f6(GE_context* ac, T0* C);
/* [detachable] UT_CANNOT_READ_FILE_ERROR.default_message */
extern T0* T78f3(GE_context* ac, T0* C);
/* [detachable] UT_CANNOT_READ_FILE_ERROR.message */
extern T0* T78f5(GE_context* ac, T0* C, T0* a1);
/* [detachable] UT_CANNOT_READ_FILE_ERROR.arguments */
extern T0* T78f7(GE_context* ac, T0* C);
/* [detachable] UT_CANNOT_READ_FILE_ERROR.string_ */
extern T0* T78f6(GE_context* ac, T0* C);
/* [detachable] UC_UTF8_STRING.character_32_item */
extern T3 T862f30(GE_context* ac, T0* C, T6 a1);
/* [detachable] STRING_32.item */
extern T3 T18f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] STRING_8.character_32_item */
extern T3 T17f35(GE_context* ac, T0* C, T6 a1);
/* [detachable] UC_UTF8_STRING.substring */
extern T0* T862f12(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] UC_UTF8_STRING.make_from_substring */
extern T0* T862c74(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [detachable] UC_UTF8_STRING.make_from_substring_general */
extern void T862f94(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] STRING_32.substring */
extern T0* T18f11(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] STRING_32.new_string */
extern T0* T18f13(GE_context* ac, T0* C, T6 a1);
/* [detachable] STRING_8.substring */
extern T0* T17f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [detachable] UC_UTF8_STRING.code */
extern T10 T862f54(GE_context* ac, T0* C, T6 a1);
/* [detachable] STRING_32.code */
extern T10 T18f9(GE_context* ac, T0* C, T6 a1);
/* [detachable] STRING_8.code */
extern T10 T17f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TUPLE_TYPE.runtime_name_to_text */
extern T0* T247f20(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.runtime_name_to_text */
extern T0* T72f55(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.runtime_name_to_text */
extern T0* T70f13(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.same_as_base_class */
extern T1 T247f12(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.same_as_base_class */
extern T1 T72f57(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.same_as_base_class */
extern T1 T70f12(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.upper_name */
extern T0* T247f106(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.upper_name */
extern T0* T72f173(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.upper_name */
extern T0* T70f80(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.same_named_type_with_type_marks */
extern T1 T247f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS.same_named_type_with_type_marks */
extern T1 T72f76(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS_TYPE.same_named_type_with_type_marks */
extern T1 T70f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_TUPLE_TYPE.named_type_with_type_mark */
extern T0* T247f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.named_type_with_type_mark */
extern T0* T72f145(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS_TYPE.named_type_with_type_mark */
extern T0* T70f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TUPLE_TYPE.base_type_actual_count */
extern T6 T247f40(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.base_type_actual_count */
extern T6 T72f136(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.base_type_actual_count */
extern T6 T70f41(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.same_named_class_type_with_type_marks */
extern T1 T247f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS.same_named_class_type_with_type_marks */
extern T1 T72f138(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS_TYPE.same_named_class_type_with_type_marks */
extern T1 T70f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_TUPLE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T247f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS.same_named_tuple_type_with_type_marks */
extern T1 T72f139(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T70f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_TUPLE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T247f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS.same_named_formal_parameter_type_with_type_marks */
extern T1 T72f155(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T70f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_TUPLE_TYPE.unaliased_to_text */
extern T0* T247f13(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.unaliased_to_text */
extern T0* T72f111(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.unaliased_to_text */
extern T0* T70f19(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.same_named_type */
extern T1 T247f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_CLASS.same_named_type */
extern T1 T72f184(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_CLASS_TYPE.same_named_type */
extern T1 T70f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [detachable] ET_TUPLE_TYPE.shallow_base_type_with_type_mark */
extern T0* T247f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.shallow_base_type_with_type_mark */
extern T0* T72f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS_TYPE.shallow_base_type_with_type_mark */
extern T0* T70f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TUPLE_TYPE.base_type_with_type_mark */
extern T0* T247f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.base_type_with_type_mark */
extern T0* T72f134(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS_TYPE.base_type_with_type_mark */
extern T0* T70f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TUPLE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T247f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_CLASS.conforms_from_class_type_with_type_marks */
extern T1 T72f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_CLASS.conforming_ancestor */
extern T0* T72f90(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T70f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_TUPLE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T247f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_CLASS.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T72f188(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_CLASS_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T70f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_TUPLE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T247f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_ACTUAL_PARAMETER_SUBLIST.tuple_conforms_to_types */
extern T1 T1881f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_ACTUAL_PARAMETER_LIST.tuple_conforms_to_types */
extern T1 T235f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [detachable] ET_CLASS.conforms_from_tuple_type_with_type_marks */
extern T1 T72f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_CLASS_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T70f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_TUPLE_TYPE.is_type_expanded_with_type_mark */
extern T1 T247f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.is_type_expanded_with_type_mark */
extern T1 T72f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS_TYPE.is_type_expanded_with_type_mark */
extern T1 T70f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TUPLE_TYPE.is_type_detachable_with_type_mark */
extern T1 T247f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.is_type_detachable_with_type_mark */
extern T1 T72f129(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS_TYPE.is_type_detachable_with_type_mark */
extern T1 T70f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TUPLE_TYPE.is_attached */
extern T1 T247f22(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_attached */
extern T1 T72f75(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.is_attached */
extern T1 T70f16(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.is_expanded */
extern T1 T72f169(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.has_expanded_mark */
extern T1 T72f74(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.is_expanded */
extern T1 T70f14(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.context_adapted_base_class_with_named_feature */
extern T0* T247f81(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.context_adapted_base_class_with_named_feature */
extern T0* T72f211(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.context_adapted_base_class_with_named_feature */
extern T0* T70f83(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.context_adapted_base_class_with_seeded_feature */
extern T0* T247f82(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLASS.context_adapted_base_class_with_seeded_feature */
extern T0* T72f212(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_CLASS_TYPE.context_adapted_base_class_with_seeded_feature */
extern T0* T70f84(GE_context* ac, T0* C, T6 a1);
/* [detachable] ET_TUPLE_TYPE.is_type_reference_with_type_mark */
extern T1 T247f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.is_type_reference_with_type_mark */
extern T1 T72f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS_TYPE.is_type_reference_with_type_mark */
extern T1 T70f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TUPLE_TYPE.shallow_named_type_with_type_mark */
extern T0* T247f76(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.shallow_named_type_with_type_mark */
extern T0* T72f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS_TYPE.shallow_named_type_with_type_mark */
extern T0* T70f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TUPLE_TYPE.actual_parameter_count */
extern T6 T247f49(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.formal_parameter_count */
extern T6 T72f144(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.actual_parameter_count */
extern T6 T70f46(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.base_type_actual */
extern T0* T247f54(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T247f54ot1(T0* a1, T0** a2);
/* [detachable] ET_CLASS.base_type_actual */
extern T0* T72f176(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_CLASS_TYPE.base_type_actual */
extern T0* T70f62(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T70f62ot1(T0* a1, T0** a2);
/* [detachable] ET_TUPLE_TYPE.is_type_attached_with_type_mark */
extern T1 T247f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.is_type_attached_with_type_mark */
extern T1 T72f172(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS_TYPE.is_type_attached_with_type_mark */
extern T1 T70f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TUPLE_TYPE.adapted_base_class_with_named_feature */
extern T0* T247f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.adapted_base_class_with_named_feature */
extern T0* T72f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS_TYPE.adapted_base_class_with_named_feature */
extern T0* T70f68(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TUPLE_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T247f70(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_CLASS.adapted_base_class_with_seeded_feature */
extern T0* T72f205(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_CLASS_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T70f69(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [detachable] ET_TUPLE_TYPE.type_with_type_mark */
extern T0* T247f27(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.type_with_type_mark */
extern T0* T72f185(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.type_with_type_mark */
extern T0* T70f25(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.to_text */
extern T0* T247f28(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.to_text */
extern T0* T72f58(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.to_text */
extern T0* T70f26(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.same_base_type_with_type_marks */
extern T1 T247f89(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T70f117(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS.same_base_type_with_type_marks */
extern T1 T72f233(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS_TYPE.same_base_class_type_with_type_marks */
extern T1 T70f116(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_CLASS_TYPE.same_base_type_with_type_marks */
extern T1 T70f97(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [detachable] ET_TUPLE_TYPE.base_type_index_of_label */
extern T6 T247f108(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS.base_type_index_of_label */
extern T6 T72f248(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_CLASS_TYPE.base_type_index_of_label */
extern T6 T70f120(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_TUPLE_TYPE.index_of_label */
extern T6 T247f107(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS.index_of_label */
extern T6 T72f245(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_CLASS_TYPE.index_of_label */
extern T6 T70f115(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_TUPLE_TYPE.base_class */
extern T0* T247f11(GE_context* ac, T0* C);
/* [detachable] ET_CLASS.base_class */
extern T0* T72f56(GE_context* ac, T0* C);
/* [detachable] ET_CLASS_TYPE.base_class */
extern T0* T70f11(GE_context* ac, T0* C);
/* [detachable] ET_TUPLE_TYPE.conforms_to_type_with_type_marks */
extern T1 T247f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_CLASS.conforms_to_type_with_type_marks */
extern T1 T72f163(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] ET_CLASS_TYPE.conforms_to_type_with_type_marks */
extern T1 T70f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* [detachable] AP_DISPLAY_HELP_FLAG.example */
extern T0* T139f11(GE_context* ac, T0* C);
/* [detachable] AP_INTEGER_OPTION.example */
extern T0* T46f15(GE_context* ac, T0* C);
/* [detachable] AP_BOOLEAN_OPTION.example */
extern T0* T45f17(GE_context* ac, T0* C);
/* [detachable] AP_ENUMERATION_OPTION.example */
extern T0* T44f13(GE_context* ac, T0* C);
/* [detachable] AP_FLAG.example */
extern T0* T42f11(GE_context* ac, T0* C);
/* [detachable] AP_STRING_OPTION.example */
extern T0* T40f18(GE_context* ac, T0* C);
/* [detachable] AP_DISPLAY_HELP_FLAG.was_found */
extern T1 T139f12(GE_context* ac, T0* C);
/* [detachable] AP_INTEGER_OPTION.was_found */
extern T1 T46f13(GE_context* ac, T0* C);
/* [detachable] AP_BOOLEAN_OPTION.was_found */
extern T1 T45f16(GE_context* ac, T0* C);
/* [detachable] AP_ENUMERATION_OPTION.was_found */
extern T1 T44f18(GE_context* ac, T0* C);
/* [detachable] AP_FLAG.was_found */
extern T1 T42f9(GE_context* ac, T0* C);
/* [detachable] AP_STRING_OPTION.was_found */
extern T1 T40f13(GE_context* ac, T0* C);
/* [detachable] AP_INTEGER_OPTION.occurrences */
extern T6 T46f16(GE_context* ac, T0* C);
/* [detachable] AP_BOOLEAN_OPTION.occurrences */
extern T6 T45f14(GE_context* ac, T0* C);
/* [detachable] AP_ENUMERATION_OPTION.occurrences */
extern T6 T44f16(GE_context* ac, T0* C);
/* [detachable] AP_STRING_OPTION.occurrences */
extern T6 T40f17(GE_context* ac, T0* C);
/* [detachable] AP_DISPLAY_HELP_FLAG.allows_parameter */
extern T1 T139f10(GE_context* ac, T0* C);
/* [detachable] AP_INTEGER_OPTION.allows_parameter */
extern T1 T46f18(GE_context* ac, T0* C);
/* [detachable] AP_BOOLEAN_OPTION.allows_parameter */
extern T1 T45f15(GE_context* ac, T0* C);
/* [detachable] AP_ENUMERATION_OPTION.allows_parameter */
extern T1 T44f17(GE_context* ac, T0* C);
/* [detachable] AP_FLAG.allows_parameter */
extern T1 T42f13(GE_context* ac, T0* C);
/* [detachable] AP_STRING_OPTION.allows_parameter */
extern T1 T40f16(GE_context* ac, T0* C);
/* [detachable] AP_DISPLAY_HELP_FLAG.needs_parameter */
extern T1 T139f13(GE_context* ac, T0* C);
/* [detachable] AP_FLAG.needs_parameter */
extern T1 T42f12(GE_context* ac, T0* C);
/* [detachable] AP_DISPLAY_HELP_FLAG.name */
extern T0* T139f9(GE_context* ac, T0* C);
/* [detachable] AP_INTEGER_OPTION.name */
extern T0* T46f17(GE_context* ac, T0* C);
/* [detachable] AP_BOOLEAN_OPTION.name */
extern T0* T45f13(GE_context* ac, T0* C);
/* [detachable] AP_ENUMERATION_OPTION.name */
extern T0* T44f15(GE_context* ac, T0* C);
/* [detachable] AP_FLAG.name */
extern T0* T42f10(GE_context* ac, T0* C);
/* [detachable] AP_STRING_OPTION.name */
extern T0* T40f14(GE_context* ac, T0* C);
/* [detachable] AP_DISPLAY_HELP_FLAG.names */
extern T0* T139f18(GE_context* ac, T0* C);
/* [detachable] AP_INTEGER_OPTION.names */
extern T0* T46f21(GE_context* ac, T0* C);
/* [detachable] AP_INTEGER_OPTION.has_long_form */
extern T1 T46f22(GE_context* ac, T0* C);
/* [detachable] AP_INTEGER_OPTION.names */
extern T0* T46f21p1(GE_context* ac, T0* C);
/* [detachable] AP_BOOLEAN_OPTION.names */
extern T0* T45f24(GE_context* ac, T0* C);
/* [detachable] AP_BOOLEAN_OPTION.has_long_form */
extern T1 T45f25(GE_context* ac, T0* C);
/* [detachable] AP_BOOLEAN_OPTION.names */
extern T0* T45f24p1(GE_context* ac, T0* C);
/* [detachable] AP_ENUMERATION_OPTION.names */
extern T0* T44f23(GE_context* ac, T0* C);
/* [detachable] AP_ENUMERATION_OPTION.has_long_form */
extern T1 T44f24(GE_context* ac, T0* C);
/* [detachable] AP_ENUMERATION_OPTION.names */
extern T0* T44f23p1(GE_context* ac, T0* C);
/* [detachable] AP_FLAG.names */
extern T0* T42f16(GE_context* ac, T0* C);
/* [detachable] AP_STRING_OPTION.names */
extern T0* T40f22(GE_context* ac, T0* C);
/* [detachable] AP_STRING_OPTION.has_long_form */
extern T1 T40f23(GE_context* ac, T0* C);
/* [detachable] AP_STRING_OPTION.names */
extern T0* T40f22p1(GE_context* ac, T0* C);
/* [detachable] KL_STRING_INPUT_STREAM.is_closable */
extern T1 T1404f6(GE_context* ac, T0* C);
/* [detachable] KL_STDIN_FILE.is_closable */
extern T1 T897f5(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_INPUT_STREAM.is_closable */
extern T1 T863f27(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.is_closable */
extern T1 T31f38(GE_context* ac, T0* C);
/* [detachable] KL_STRING_INPUT_STREAM.name */
extern T0* T1404f7(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_INPUT_STREAM.name */
extern T0* T863f26(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_INPUT_STREAM.last_character */
extern T2 T863f19(GE_context* ac, T0* C);
/* [detachable] DS_LINKED_QUEUE [[attached] CHARACTER_8].item */
extern T2 T1551f4(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_INPUT_STREAM.end_of_input */
extern T1 T863f18(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.end_of_input */
extern T1 T31f33(GE_context* ac, T0* C);
/* [detachable] KL_STRING_INPUT_STREAM.read_to_string */
extern T6 T1404f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] KL_STDIN_FILE.read_to_string */
extern T6 T897f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] CONSOLE.read_stream */
extern void T884f31(GE_context* ac, T0* C, T6 a1);
/* [detachable] CONSOLE.read_stream_thread_aware */
extern void T884f33(GE_context* ac, T0* C, T6 a1);
/* detachable C_STRING.read_string_into */
extern void T29f15(GE_context* ac, T0* C, T0* a1);
/* [detachable] CONSOLE.console_readstream */
extern T6 T884f17(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* [detachable] CONSOLE.read_data_buffer */
extern T0* T884f16(GE_context* ac, T0* C);
/* [detachable] KL_STDIN_FILE.any_ */
extern T0* T897f10(GE_context* ac, T0* C);
/* [detachable] XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T863f28(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T863f28p1(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] KL_TEXT_INPUT_FILE.read_to_string */
extern T6 T31f37(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] KL_TEXT_INPUT_FILE.dummy_kl_character_buffer */
extern T0* T31f47(GE_context* ac, T0* C);
/* [detachable] KL_TEXT_INPUT_FILE.any_ */
extern T0* T31f45(GE_context* ac, T0* C);
/* [detachable] UT_SHARED_ECF_VERSIONS.ecf_last_known */
extern T0* T1992s1(GE_context* ac);
/* [detachable] UT_SHARED_ECF_VERSIONS.ecf_1_18_0 */
extern T0* T1992s2(GE_context* ac);
/* [detachable] KL_ANY_ROUTINES.same_objects */
extern T1 T418s2(GE_context* ac, T0* a1, T0* a2);
/* [detachable] ET_ADAPTED_BASE_CLASS_CHECKER.reset_context_if_multiple_constraints */
extern void T393s11(GE_context* ac, T1 a1, T0* a2, T0* a3);
/* [detachable] ET_ADAPTED_BASE_CLASS_CHECKER.tokens */
extern T0* T393s7(GE_context* ac);
/* [detachable] ET_ECF_OPTION_DEFAULTS.valid_assertions_latest */
extern T0* T1667s2(GE_context* ac);
/* Creation of agent #1 in feature [detachable] ET_ECF_OPTION_DEFAULTS.valid_assertions_latest */
extern T0* T1667s2ac1(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_OPTION_DEFAULTS.boolean_option_value_regexp */
extern T0* T1667s8(GE_context* ac);
/* [detachable] ET_ECF_OPTION_DEFAULTS.string_ */
extern T0* T1667s7(GE_context* ac);
/* [detachable] ET_ECF_OPTION_DEFAULTS.case_insensitive_string_equality_tester */
extern T0* T1667s6(GE_context* ac);
/* [detachable] ET_ECF_OPTION_DEFAULTS.valid_assertions */
extern T0* T1667s1(GE_context* ac, T0* a1);
/* [detachable] ET_ECF_OPTION_DEFAULTS.valid_assertions_1_0_0 */
extern T0* T1667s5(GE_context* ac);
/* [detachable] ET_ECF_OPTION_DEFAULTS.valid_assertions_1_2_0 */
extern T0* T1667s4(GE_context* ac);
/* [detachable] ET_ECF_OPTION_DEFAULTS.ecf_1_2_0 */
extern T0* T1667s3(GE_context* ac);
/* [detachable] EXECUTION_ENVIRONMENT.available_cpu_count */
extern T10 T121s7(GE_context* ac);
/* [detachable] PLATFORM.is_thread_capable */
extern T1 T47s1(GE_context* ac);
/* [detachable] THREAD_CONTROL.join_all */
extern void T675s1(GE_context* ac);
/* [detachable] ISE_RUNTIME.check_assert */
extern T1 T1550s1(GE_context* ac, T1 a1);
/* [detachable] ET_SYSTEM_PROCESSOR_FACTORY.new_system_processor */
extern T0* T67s1(GE_context* ac, T6 a1);
/* [detachable] PLATFORM.is_windows */
extern T1 T47s2(GE_context* ac);
/* [detachable] ET_SYSTEM_PROCESSOR.make */
extern T0* T61c47(GE_context* ac);
/* [detachable] ET_TOKEN_CONSTANTS.standard_error_handler */
extern T0* T71f123(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.make */
extern T0* T439c984(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.make_parser_skeleton */
extern void T439f986(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_build_parser_tables */
extern void T439f989(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template */
extern T0* T439f647(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yyfixed_array */
extern T0* T439f707(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_37 */
extern void T439f1090(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yyarray_subcopy */
extern void T439f1154(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* [detachable] ET_EIFFEL_PARSER.integer_array_ */
extern T0* T439f713(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_36 */
extern void T439f1089(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_35 */
extern void T439f1088(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_34 */
extern void T439f1087(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_33 */
extern void T439f1086(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_32 */
extern void T439f1085(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_31 */
extern void T439f1084(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_30 */
extern void T439f1083(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_29 */
extern void T439f1082(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_28 */
extern void T439f1081(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_27 */
extern void T439f1080(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_26 */
extern void T439f1079(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_25 */
extern void T439f1078(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_24 */
extern void T439f1077(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_23 */
extern void T439f1076(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_22 */
extern void T439f1075(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_21 */
extern void T439f1074(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_20 */
extern void T439f1073(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_19 */
extern void T439f1072(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_18 */
extern void T439f1071(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_17 */
extern void T439f1070(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_16 */
extern void T439f1069(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_15 */
extern void T439f1068(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_14 */
extern void T439f1067(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_13 */
extern void T439f1066(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_12 */
extern void T439f1065(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_11 */
extern void T439f1064(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_10 */
extern void T439f1063(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_9 */
extern void T439f1062(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_8 */
extern void T439f1061(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_7 */
extern void T439f1060(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_6 */
extern void T439f1059(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_5 */
extern void T439f1058(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_4 */
extern void T439f1057(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_3 */
extern void T439f1056(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_2 */
extern void T439f1055(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yycheck_template_1 */
extern void T439f1054(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template */
extern T0* T439f642(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_37 */
extern void T439f1053(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_36 */
extern void T439f1052(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_35 */
extern void T439f1051(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_34 */
extern void T439f1050(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_33 */
extern void T439f1049(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_32 */
extern void T439f1048(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_31 */
extern void T439f1047(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_30 */
extern void T439f1046(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_29 */
extern void T439f1045(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_28 */
extern void T439f1044(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_27 */
extern void T439f1043(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_26 */
extern void T439f1042(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_25 */
extern void T439f1041(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_24 */
extern void T439f1040(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_23 */
extern void T439f1039(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_22 */
extern void T439f1038(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_21 */
extern void T439f1037(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_20 */
extern void T439f1036(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_19 */
extern void T439f1035(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_18 */
extern void T439f1034(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_17 */
extern void T439f1033(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_16 */
extern void T439f1032(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_15 */
extern void T439f1031(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_14 */
extern void T439f1030(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_13 */
extern void T439f1029(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_12 */
extern void T439f1028(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_11 */
extern void T439f1027(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_10 */
extern void T439f1026(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_9 */
extern void T439f1025(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_8 */
extern void T439f1024(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_7 */
extern void T439f1023(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_6 */
extern void T439f1022(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_5 */
extern void T439f1021(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_4 */
extern void T439f1020(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_3 */
extern void T439f1019(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_2 */
extern void T439f1018(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytable_template_1 */
extern void T439f1017(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yypgoto_template */
extern T0* T439f638(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yypgoto_template_2 */
extern void T439f1016(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yypgoto_template_1 */
extern void T439f1015(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yypact_template */
extern T0* T439f636(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yypact_template_9 */
extern void T439f1014(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yypact_template_8 */
extern void T439f1013(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yypact_template_7 */
extern void T439f1012(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yypact_template_6 */
extern void T439f1011(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yypact_template_5 */
extern void T439f1010(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yypact_template_4 */
extern void T439f1009(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yypact_template_3 */
extern void T439f1008(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yypact_template_2 */
extern void T439f1007(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yypact_template_1 */
extern void T439f1006(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yydefgoto_template */
extern T0* T439f721(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yydefgoto_template_2 */
extern void T439f1005(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yydefgoto_template_1 */
extern void T439f1004(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yydefact_template */
extern T0* T439f717(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yydefact_template_9 */
extern void T439f1003(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yydefact_template_8 */
extern void T439f1002(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yydefact_template_7 */
extern void T439f1001(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yydefact_template_6 */
extern void T439f1000(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yydefact_template_5 */
extern void T439f999(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yydefact_template_4 */
extern void T439f998(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yydefact_template_3 */
extern void T439f997(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yydefact_template_2 */
extern void T439f996(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yydefact_template_1 */
extern void T439f995(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytypes2_template */
extern T0* T439f714(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yytypes1_template */
extern T0* T439f704(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yytypes1_template_9 */
extern void T439f1150(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytypes1_template_8 */
extern void T439f1149(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytypes1_template_7 */
extern void T439f1148(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytypes1_template_6 */
extern void T439f1147(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytypes1_template_5 */
extern void T439f1146(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytypes1_template_4 */
extern void T439f1145(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytypes1_template_3 */
extern void T439f1144(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytypes1_template_2 */
extern void T439f1143(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytypes1_template_1 */
extern void T439f1142(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yyr1_template */
extern T0* T439f700(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yyr1_template_5 */
extern void T439f1135(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yyr1_template_4 */
extern void T439f1134(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yyr1_template_3 */
extern void T439f1133(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yyr1_template_2 */
extern void T439f1132(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yyr1_template_1 */
extern void T439f1131(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytranslate_template */
extern T0* T439f696(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yytranslate_template_2 */
extern void T439f1128(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yytranslate_template_1 */
extern void T439f1127(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_create_value_stacks */
extern void T439f988(GE_context* ac, T0* C);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].make */
extern T0* T1248f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_WRITABLE].make_empty */
extern T0* T1249c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].default_create */
extern T0* T1248c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].make */
extern T0* T1245f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_WHEN_PART_LIST].make_empty */
extern T0* T1247c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].default_create */
extern T0* T1245c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].make */
extern T0* T1242f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_WHEN_PART].make_empty */
extern T0* T1244c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].default_create */
extern T0* T1242c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_VARIANT].make */
extern T0* T1239f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_VARIANT].make_empty */
extern T0* T1241c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_VARIANT].default_create */
extern T0* T1239c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].make */
extern T0* T1236f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_TYPE_LIST].make_empty */
extern T0* T1238c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].default_create */
extern T0* T1236c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].make */
extern T0* T1233f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_TYPE_ITEM].make_empty */
extern T0* T1235c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].default_create */
extern T0* T1233c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST].make */
extern T0* T1230f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].make_empty */
extern T0* T1232c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST].default_create */
extern T0* T1230c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM].make */
extern T0* T1227f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].make_empty */
extern T0* T1229c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM].default_create */
extern T0* T1227c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT].make */
extern T0* T1224f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_TYPE_CONSTRAINT].make_empty */
extern T0* T1226c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT].default_create */
extern T0* T1224c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE].make */
extern T0* T1222f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_TYPE].make_empty */
extern T0* T1223c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_TYPE].default_create */
extern T0* T1222c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].make */
extern T0* T1219f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_STRIP_EXPRESSION].make_empty */
extern T0* T1221c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].default_create */
extern T0* T1219c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].make */
extern T0* T1216f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].make_empty */
extern T0* T1218c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].default_create */
extern T0* T1216c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].make */
extern T0* T1214f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_RENAME_LIST].make_empty */
extern T0* T1215c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].default_create */
extern T0* T1214c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].make */
extern T0* T1211f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_RENAME_ITEM].make_empty */
extern T0* T1213c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].default_create */
extern T0* T1211c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUERY].make */
extern T0* T1209f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_QUERY].make_empty */
extern T0* T1210c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUERY].default_create */
extern T0* T1209c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make */
extern T0* T1206f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make_empty */
extern T0* T1208c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].default_create */
extern T0* T1206c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].make */
extern T0* T1204f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PROCEDURE].make_empty */
extern T0* T1205c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].default_create */
extern T0* T1204c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].make */
extern T0* T1202f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PRECONDITIONS].make_empty */
extern T0* T1203c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].default_create */
extern T0* T1202c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].make */
extern T0* T1199f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_POSTCONDITIONS].make_empty */
extern T0* T1201c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].default_create */
extern T0* T1199c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].make */
extern T0* T1197f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PARENT_LIST].make_empty */
extern T0* T1198c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].default_create */
extern T0* T1197c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].make */
extern T0* T1195f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PARENT_ITEM].make_empty */
extern T0* T1196c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].default_create */
extern T0* T1195c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].make */
extern T0* T1192f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PARENT_CLAUSE_LIST].make_empty */
extern T0* T1194c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].default_create */
extern T0* T1192c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT].make */
extern T0* T1190f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PARENT].make_empty */
extern T0* T1191c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENT].default_create */
extern T0* T1190c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T1187f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].make_empty */
extern T0* T1189c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].default_create */
extern T0* T1187c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].make */
extern T0* T1184f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_OBSOLETE].make_empty */
extern T0* T1186c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].default_create */
extern T0* T1184c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].make */
extern T0* T1182f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_MANIFEST_TUPLE].make_empty */
extern T0* T1183c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].default_create */
extern T0* T1182c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].make */
extern T0* T1179f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING_LIST].make_empty */
extern T0* T1181c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].default_create */
extern T0* T1179c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].make */
extern T0* T1176f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING_ITEM].make_empty */
extern T0* T1178c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T1176c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].make */
extern T0* T1173f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_MANIFEST_ARRAY].make_empty */
extern T0* T1175c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].default_create */
extern T0* T1173c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].make */
extern T0* T1170f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_LOOP_INVARIANTS].make_empty */
extern T0* T1172c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].default_create */
extern T0* T1170c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T1168f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].make_empty */
extern T0* T1169c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].default_create */
extern T0* T1168c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T1165f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].make_empty */
extern T0* T1167c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T1165c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].make */
extern T0* T1162f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_LOCAL_VARIABLE].make_empty */
extern T0* T1164c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].default_create */
extern T0* T1162c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].make */
extern T0* T1159f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_LIKE_TYPE].make_empty */
extern T0* T1161c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].default_create */
extern T0* T1159c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T1157f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].make_empty */
extern T0* T1158c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].default_create */
extern T0* T1157c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].make */
extern T0* T1154f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INVARIANTS].make_empty */
extern T0* T1156c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].default_create */
extern T0* T1154c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].make */
extern T0* T1151f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INSTRUCTION].make_empty */
extern T0* T1153c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].default_create */
extern T0* T1151c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].make */
extern T0* T1148f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INSPECT_INSTRUCTION].make_empty */
extern T0* T1150c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].default_create */
extern T0* T1148c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].make */
extern T0* T1146f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INLINE_AGENT].make_empty */
extern T0* T1147c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].default_create */
extern T0* T1146c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].make */
extern T0* T1143f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INDEXING_TERM_LIST].make_empty */
extern T0* T1145c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].default_create */
extern T0* T1143c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].make */
extern T0* T1140f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INDEXING_TERM_ITEM].make_empty */
extern T0* T1142c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].default_create */
extern T0* T1140c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].make */
extern T0* T1138f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INDEXING_TERM].make_empty */
extern T0* T1139c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].default_create */
extern T0* T1138c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].make */
extern T0* T1135f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INDEXING_ITEM].make_empty */
extern T0* T1137c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].default_create */
extern T0* T1135c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].make */
extern T0* T1132f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INDEXING_LIST].make_empty */
extern T0* T1134c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].default_create */
extern T0* T1132c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].make */
extern T0* T1129f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_IF_INSTRUCTION].make_empty */
extern T0* T1131c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].default_create */
extern T0* T1129c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].make */
extern T0* T1126f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_IF_EXPRESSION].make_empty */
extern T0* T1128c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].default_create */
extern T0* T1126c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].make */
extern T0* T1124f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].make_empty */
extern T0* T1125c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].default_create */
extern T0* T1124c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T1121f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].make_empty */
extern T0* T1123c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T1121c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].make */
extern T0* T1119f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FORMAL_PARAMETER].make_empty */
extern T0* T1120c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].default_create */
extern T0* T1119c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T1117f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].make_empty */
extern T0* T1118c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].default_create */
extern T0* T1117c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T1114f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].make_empty */
extern T0* T1116c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T1114c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].make */
extern T0* T1112f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FORMAL_ARGUMENT].make_empty */
extern T0* T1113c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].default_create */
extern T0* T1112c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].make */
extern T0* T1109f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FEATURE_NAME_ITEM].make_empty */
extern T0* T1111c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].default_create */
extern T0* T1109c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].make */
extern T0* T1107f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FEATURE_NAME].make_empty */
extern T0* T1108c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].default_create */
extern T0* T1107c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].make */
extern T0* T1104f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FEATURE_EXPORT].make_empty */
extern T0* T1106c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].default_create */
extern T0* T1104c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].make */
extern T0* T1101f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].make_empty */
extern T0* T1103c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].default_create */
extern T0* T1101c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].make */
extern T0* T1098f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FEATURE_CLAUSE].make_empty */
extern T0* T1100c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].default_create */
extern T0* T1098c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].make */
extern T0* T1095f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_EXTERNAL_ALIAS].make_empty */
extern T0* T1097c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].default_create */
extern T0* T1095c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].make */
extern T0* T1093f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].make_empty */
extern T0* T1094c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].default_create */
extern T0* T1093c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].make */
extern T0* T1091f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_EXPRESSION_ITEM].make_empty */
extern T0* T1092c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].default_create */
extern T0* T1091c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].make */
extern T0* T1089f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_EXPRESSION].make_empty */
extern T0* T1090c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].default_create */
extern T0* T1089c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].make */
extern T0* T1087f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_EXPORT_LIST].make_empty */
extern T0* T1088c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].default_create */
extern T0* T1087c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPORT].make */
extern T0* T1084f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_EXPORT].make_empty */
extern T0* T1086c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_EXPORT].default_create */
extern T0* T1084c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].make */
extern T0* T1081f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ELSEIF_PART_LIST].make_empty */
extern T0* T1083c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].default_create */
extern T0* T1081c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].make */
extern T0* T1078f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ELSEIF_PART].make_empty */
extern T0* T1080c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].default_create */
extern T0* T1078c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].make */
extern T0* T1075f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].make_empty */
extern T0* T1077c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].default_create */
extern T0* T1075c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].make */
extern T0* T1072f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ELSEIF_EXPRESSION].make_empty */
extern T0* T1074c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].default_create */
extern T0* T1072c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].make */
extern T0* T1069f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_DEBUG_INSTRUCTION].make_empty */
extern T0* T1071c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].default_create */
extern T0* T1069c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].make */
extern T0* T1066f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CREATOR_LIST].make_empty */
extern T0* T1068c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].default_create */
extern T0* T1066c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATOR].make */
extern T0* T1063f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CREATOR].make_empty */
extern T0* T1065c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATOR].default_create */
extern T0* T1063c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].make */
extern T0* T1060f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CREATION_REGION].make_empty */
extern T0* T1062c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].default_create */
extern T0* T1060c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].make */
extern T0* T1058f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CREATE_EXPRESSION].make_empty */
extern T0* T1059c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].default_create */
extern T0* T1058c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].make */
extern T0* T1055f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE_LIST].make_empty */
extern T0* T1057c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].default_create */
extern T0* T1055c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].make */
extern T0* T1052f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].make_empty */
extern T0* T1054c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T1052c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].make */
extern T0* T1049f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONVERT_FEATURE].make_empty */
extern T0* T1051c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].default_create */
extern T0* T1049c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T1046f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_TYPE].make_empty */
extern T0* T1048c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].default_create */
extern T0* T1046c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST].make */
extern T0* T1043f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].make_empty */
extern T0* T1045c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST].default_create */
extern T0* T1043c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].make */
extern T0* T1040f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_CREATOR].make_empty */
extern T0* T1042c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].default_create */
extern T0* T1040c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T1037f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T1039c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T1037c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T1034f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T1036c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T1034c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].make */
extern T0* T1032f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONSTANT].make_empty */
extern T0* T1033c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].default_create */
extern T0* T1032c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].make */
extern T0* T1029f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CONDITIONAL].make_empty */
extern T0* T1031c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].default_create */
extern T0* T1029c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].make */
extern T0* T1027f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_COMPOUND].make_empty */
extern T0* T1028c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].default_create */
extern T0* T1027c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].make */
extern T0* T1024f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CLIENTS].make_empty */
extern T0* T1026c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].default_create */
extern T0* T1024c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].make */
extern T0* T1022f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CLIENT_ITEM].make_empty */
extern T0* T1023c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].default_create */
extern T0* T1022c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLASS].make */
extern T0* T1020f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CLASS].make_empty */
extern T0* T1021c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CLASS].default_create */
extern T0* T1020c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].make */
extern T0* T1017f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CHOICE_LIST].make_empty */
extern T0* T1019c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].default_create */
extern T0* T1017c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].make */
extern T0* T1014f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CHOICE_ITEM].make_empty */
extern T0* T1016c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].default_create */
extern T0* T1014c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].make */
extern T0* T1011f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CHOICE_CONSTANT].make_empty */
extern T0* T1013c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].default_create */
extern T0* T1011c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE].make */
extern T0* T1008f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CHOICE].make_empty */
extern T0* T1010c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHOICE].default_create */
extern T0* T1008c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].make */
extern T0* T1005f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CHECK_INSTRUCTION].make_empty */
extern T0* T1007c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].default_create */
extern T0* T1005c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].make */
extern T0* T1002f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CALL_AGENT].make_empty */
extern T0* T1004c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].default_create */
extern T0* T1002c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].make */
extern T0* T999f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_BRACKET_EXPRESSION].make_empty */
extern T0* T1001c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].default_create */
extern T0* T999c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].make */
extern T0* T996f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ASSIGNER].make_empty */
extern T0* T998c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].default_create */
extern T0* T996c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].make */
extern T0* T994f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ALIAS_NAME].make_empty */
extern T0* T995c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].default_create */
extern T0* T994c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].make */
extern T0* T992f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_AGENT_TARGET].make_empty */
extern T0* T993c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].default_create */
extern T0* T992c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T989f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make_empty */
extern T0* T991c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].default_create */
extern T0* T989c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T986f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make_empty */
extern T0* T988c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T986c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T984f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].make_empty */
extern T0* T985c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].default_create */
extern T0* T984c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T982f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T983c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T982c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T980f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T981c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T980c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T978f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].make_empty */
extern T0* T979c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T978c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].make */
extern T0* T975f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ACROSS_INSTRUCTION].make_empty */
extern T0* T977c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].default_create */
extern T0* T975c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].make */
extern T0* T972f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ACROSS_EXPRESSION].make_empty */
extern T0* T974c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].default_create */
extern T0* T972c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].make */
extern T0* T969f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].make_empty */
extern T0* T971c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].default_create */
extern T0* T969c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].make */
extern T0* T967f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_BRACKET_SYMBOL].make_empty */
extern T0* T968c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].default_create */
extern T0* T967c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].make */
extern T0* T964f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_SEMICOLON_SYMBOL].make_empty */
extern T0* T966c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].default_create */
extern T0* T964c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_VOID].make */
extern T0* T961f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_VOID].make_empty */
extern T0* T963c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_VOID].default_create */
extern T0* T961c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].make */
extern T0* T958f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_SYMBOL_OPERATOR].make_empty */
extern T0* T960c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].default_create */
extern T0* T958c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].make */
extern T0* T955f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_RETRY_INSTRUCTION].make_empty */
extern T0* T957c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].default_create */
extern T0* T955c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_RESULT].make */
extern T0* T953f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_RESULT].make_empty */
extern T0* T954c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_RESULT].default_create */
extern T0* T953c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].make */
extern T0* T950f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_REAL_CONSTANT].make_empty */
extern T0* T952c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].default_create */
extern T0* T950c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].make */
extern T0* T948f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_MANIFEST_STRING].make_empty */
extern T0* T949c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].default_create */
extern T0* T948c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].make */
extern T0* T945f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_KEYWORD_OPERATOR].make_empty */
extern T0* T947c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].default_create */
extern T0* T945c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].make */
extern T0* T942f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_INTEGER_CONSTANT].make_empty */
extern T0* T944c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].default_create */
extern T0* T942c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].make */
extern T0* T940f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_IDENTIFIER].make_empty */
extern T0* T941c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].default_create */
extern T0* T940c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].make */
extern T0* T937f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_FREE_OPERATOR].make_empty */
extern T0* T939c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].default_create */
extern T0* T937c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CURRENT].make */
extern T0* T935f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CURRENT].make_empty */
extern T0* T936c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CURRENT].default_create */
extern T0* T935c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].make */
extern T0* T932f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_CHARACTER_CONSTANT].make_empty */
extern T0* T934c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].default_create */
extern T0* T932c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_BREAK].make */
extern T0* T929f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_BREAK].make_empty */
extern T0* T931c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_BREAK].default_create */
extern T0* T929c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].make */
extern T0* T926f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_BOOLEAN_CONSTANT].make_empty */
extern T0* T928c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].default_create */
extern T0* T926c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_POSITION].make */
extern T0* T924f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_POSITION].make_empty */
extern T0* T925c4(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_POSITION].default_create */
extern T0* T924c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].make */
extern T0* T922f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_SYMBOL].make_empty */
extern T0* T923c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].default_create */
extern T0* T922c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].make */
extern T0* T919f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_PRECURSOR_KEYWORD].make_empty */
extern T0* T921c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].default_create */
extern T0* T919c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].make */
extern T0* T916f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_AGENT_KEYWORD].make_empty */
extern T0* T918c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].default_create */
extern T0* T916c3(GE_context* ac);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].make */
extern T0* T914f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_KEYWORD].make_empty */
extern T0* T915c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].default_create */
extern T0* T914c3(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.make_eiffel_scanner */
extern void T439f985(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PARSER.make_with_buffer */
extern void T439f987(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_initialize */
extern void T439f990(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_initialize */
extern void T439f990p1(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_build_tables */
extern void T439f992(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_acclist_template */
extern T0* T439f703(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_fixed_array */
extern T0* T439f708(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_acclist_template_3 */
extern void T439f1141(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_array_subcopy */
extern void T439f1155(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* [detachable] ET_EIFFEL_PARSER.yy_acclist_template_2 */
extern void T439f1140(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_acclist_template_1 */
extern void T439f1139(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_accept_template */
extern T0* T439f701(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_accept_template_3 */
extern void T439f1138(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_accept_template_2 */
extern void T439f1137(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_accept_template_1 */
extern void T439f1136(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_meta_template */
extern T0* T439f699(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_ec_template */
extern T0* T439f697(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_ec_template_2 */
extern void T439f1130(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_ec_template_1 */
extern void T439f1129(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_def_template */
extern T0* T439f695(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_def_template_3 */
extern void T439f1126(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_def_template_2 */
extern void T439f1125(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_def_template_1 */
extern void T439f1124(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_base_template */
extern T0* T439f693(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_base_template_3 */
extern void T439f1123(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_base_template_2 */
extern void T439f1122(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_base_template_1 */
extern void T439f1121(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_chk_template */
extern T0* T439f691(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_chk_template_15 */
extern void T439f1120(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_chk_template_14 */
extern void T439f1119(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_chk_template_13 */
extern void T439f1118(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_chk_template_12 */
extern void T439f1117(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_chk_template_11 */
extern void T439f1116(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_chk_template_10 */
extern void T439f1115(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_chk_template_9 */
extern void T439f1114(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_chk_template_8 */
extern void T439f1113(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_chk_template_7 */
extern void T439f1112(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_chk_template_6 */
extern void T439f1111(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_chk_template_5 */
extern void T439f1110(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_chk_template_4 */
extern void T439f1109(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_chk_template_3 */
extern void T439f1108(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_chk_template_2 */
extern void T439f1107(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_chk_template_1 */
extern void T439f1106(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_nxt_template */
extern T0* T439f689(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.yy_nxt_template_15 */
extern void T439f1105(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_nxt_template_14 */
extern void T439f1104(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_nxt_template_13 */
extern void T439f1103(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_nxt_template_12 */
extern void T439f1102(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_nxt_template_11 */
extern void T439f1101(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_nxt_template_10 */
extern void T439f1100(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_nxt_template_9 */
extern void T439f1099(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_nxt_template_8 */
extern void T439f1098(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_nxt_template_7 */
extern void T439f1097(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_nxt_template_6 */
extern void T439f1096(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_nxt_template_5 */
extern void T439f1095(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_nxt_template_4 */
extern void T439f1094(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_nxt_template_3 */
extern void T439f1093(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_nxt_template_2 */
extern void T439f1092(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.yy_nxt_template_1 */
extern void T439f1091(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PARSER.empty_buffer */
extern T0* T439f664(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T912c10(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].set_internal_cursor */
extern void T912f13(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_cursor */
extern T0* T912f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T1575c5(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].make */
extern T0* T911c11(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].set_internal_cursor */
extern void T911f16(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].new_cursor */
extern T0* T911f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_ASSERTION_ITEM].make */
extern T0* T1574c5(GE_context* ac, T0* a1);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST].make */
extern T0* T910c9(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT_LIST].make */
extern T0* T1570f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_ACROSS_COMPONENT_LIST].make_empty */
extern T0* T1571c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT_LIST].default_create */
extern T0* T1570c3(GE_context* ac);
/* [detachable] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].make */
extern T0* T909c10(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].make */
extern T0* T1569f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].make_empty */
extern T0* T1568c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].default_create */
extern T0* T1569c3(GE_context* ac);
/* [detachable] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST].make */
extern T0* T908c9(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST_LIST].make */
extern T0* T1566f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_OBJECT_TEST_LIST].make_empty */
extern T0* T1567c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST_LIST].default_create */
extern T0* T1566c3(GE_context* ac);
/* [detachable] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T907c10(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T1565f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable ET_OBJECT_TEST_LIST].make_empty */
extern T0* T1564c5(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].default_create */
extern T0* T1565c3(GE_context* ac);
/* [detachable] DS_ARRAYED_STACK [detachable ET_SYMBOL].make */
extern T0* T906c8(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_KEYWORD].make */
extern T0* T905c8(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T904c9(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T903c9(GE_context* ac, T6 a1);
/* [detachable] KL_STANDARD_FILES.input */
extern T0* T134f3(GE_context* ac, T0* C);
/* [detachable] KL_STDIN_FILE.make */
extern T0* T897c12(GE_context* ac);
/* [detachable] ET_EIFFEL_PARSER.std */
extern T0* T439f705(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PARSER.make */
extern void T439f984p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_MASTER_CLASS_CHECKER.make */
extern T0* T438c7(GE_context* ac, T0* a1);
/* [detachable] ET_MASTER_CLASS_CHECKER.tokens */
extern T0* T438f4(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.make */
extern T0* T437c134(GE_context* ac, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.make_eiffel_scanner */
extern void T437f135(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [detachable] ET_EIFFEL_PREPARSER.make_with_buffer */
extern void T437f136(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_initialize */
extern void T437f137(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.yy_initialize */
extern void T437f137p1(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.yy_build_tables */
extern void T437f139(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.yy_acclist_template */
extern T0* T437f88(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.yy_fixed_array */
extern T0* T437f91(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_acclist_template_4 */
extern void T437f165(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_array_subcopy */
extern void T437f176(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* [detachable] ET_EIFFEL_PREPARSER.integer_array_ */
extern T0* T437f97(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.yy_acclist_template_3 */
extern void T437f164(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_acclist_template_2 */
extern void T437f163(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_acclist_template_1 */
extern void T437f162(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_accept_template */
extern T0* T437f81(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.yy_accept_template_3 */
extern void T437f161(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_accept_template_2 */
extern void T437f160(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_accept_template_1 */
extern void T437f159(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_meta_template */
extern T0* T437f78(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.yy_ec_template */
extern T0* T437f72(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.yy_ec_template_2 */
extern void T437f158(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_ec_template_1 */
extern void T437f157(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_def_template */
extern T0* T437f70(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.yy_def_template_3 */
extern void T437f156(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_def_template_2 */
extern void T437f155(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_def_template_1 */
extern void T437f154(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_base_template */
extern T0* T437f68(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.yy_base_template_3 */
extern void T437f153(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_base_template_2 */
extern void T437f152(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_base_template_1 */
extern void T437f151(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_chk_template */
extern T0* T437f58(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.yy_chk_template_10 */
extern void T437f150(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_chk_template_9 */
extern void T437f149(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_chk_template_8 */
extern void T437f148(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_chk_template_7 */
extern void T437f147(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_chk_template_6 */
extern void T437f146(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_chk_template_5 */
extern void T437f145(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_chk_template_4 */
extern void T437f144(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_chk_template_3 */
extern void T437f143(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_chk_template_2 */
extern void T437f142(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_chk_template_1 */
extern void T437f141(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_nxt_template */
extern T0* T437f90(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.yy_nxt_template_10 */
extern void T437f175(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_nxt_template_9 */
extern void T437f174(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_nxt_template_8 */
extern void T437f173(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_nxt_template_7 */
extern void T437f172(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_nxt_template_6 */
extern void T437f171(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_nxt_template_5 */
extern void T437f170(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_nxt_template_4 */
extern void T437f169(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_nxt_template_3 */
extern void T437f168(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_nxt_template_2 */
extern void T437f167(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.yy_nxt_template_1 */
extern void T437f166(GE_context* ac, T0* C, T0* a1);
/* [detachable] ET_EIFFEL_PREPARSER.empty_buffer */
extern T0* T437f82(GE_context* ac, T0* C);
/* [detachable] ET_EIFFEL_PREPARSER.std */
extern T0* T437f71(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.make */
extern T0* T364c49(GE_context* ac, T6 a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.make_single */
extern void T364f61(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.make_null_single */
extern void T364f73(GE_context* ac, T0* C);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_qualified_anchored_types_cycle_detection_enabled_only */
extern void T364f86(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_unknown_builtin_reported_only */
extern void T364f85(GE_context* ac, T0* C, T1 a1);
/* [detachable] ET_SYSTEM_MULTIPROCESSOR.set_preparse_shallow_mode_only */
extern void T364f84(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_SYSTEM_PROCESSOR].put_last */
extern void T672f9(GE_context* ac, T0* C, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_SYSTEM_PROCESSOR].force */
extern void T1354f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_SYSTEM_PROCESSOR].fill_with */
extern void T1353f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] ET_SYSTEM_PROCESSOR].extend */
extern void T1353f7(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_SYSTEM_PROCESSOR].make */
extern T0* T672c8(GE_context* ac, T6 a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_SYSTEM_PROCESSOR].set_internal_cursor */
extern void T672f10(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_ARRAYED_LIST [[attached] ET_SYSTEM_PROCESSOR].new_cursor */
extern T0* T672f6(GE_context* ac, T0* C);
/* [detachable] DS_ARRAYED_LIST_CURSOR [[attached] ET_SYSTEM_PROCESSOR].make */
extern T0* T1355c3(GE_context* ac, T0* a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_SYSTEM_PROCESSOR].make */
extern T0* T1354f1(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] ET_SYSTEM_PROCESSOR].make_empty */
extern T0* T1353c4(GE_context* ac, T6 a1);
/* [detachable] KL_SPECIAL_ROUTINES [[attached] ET_SYSTEM_PROCESSOR].default_create */
extern T0* T1354c2(GE_context* ac);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].remove */
extern void T199f65(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].remove_position */
extern void T199f67(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].key_storage_keep_head */
extern void T199f77(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].item_storage_keep_head */
extern void T199f76(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable RX_REGULAR_EXPRESSION].keep_head */
extern void T575f10(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable RX_REGULAR_EXPRESSION].set_count */
extern void T575f12(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].move_cursors_forth */
extern void T199f75(GE_context* ac, T0* C, T6 a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].internal_set_key_equality_tester */
extern void T199f74(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].twin */
extern T0* T199f36(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].copy */
extern void T199f66(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].copy */
extern void T199f66p1(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].clone_clashes */
extern void T199f73(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].clone_slots */
extern void T199f72(GE_context* ac, T0* C);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].clone_key_storage */
extern void T199f71(GE_context* ac, T0* C);
/* [detachable] SPECIAL [[attached] STRING_8].resized_area */
extern T0* T324f5(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [[attached] STRING_8].copy_data */
extern void T324f13(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [detachable] SPECIAL [[attached] STRING_8].force */
extern void T324f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [[attached] STRING_8].move_data */
extern void T324f14(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] STRING_8].overlapping_move */
extern void T324f17(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [[attached] STRING_8].non_overlapping_move */
extern void T324f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].clone_item_storage */
extern void T199f70(GE_context* ac, T0* C);
/* [detachable] SPECIAL [detachable RX_REGULAR_EXPRESSION].resized_area */
extern T0* T575f4(GE_context* ac, T0* C, T6 a1);
/* [detachable] SPECIAL [detachable RX_REGULAR_EXPRESSION].copy_data */
extern void T575f11(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [detachable] SPECIAL [detachable RX_REGULAR_EXPRESSION].force */
extern void T575f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [detachable] SPECIAL [detachable RX_REGULAR_EXPRESSION].move_data */
extern void T575f13(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable RX_REGULAR_EXPRESSION].overlapping_move */
extern void T575f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] SPECIAL [detachable RX_REGULAR_EXPRESSION].non_overlapping_move */
extern void T575f15(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].valid_cursor */
extern T1 T199f37(GE_context* ac, T0* C, T0* a1);
/* [detachable] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].move_all_cursors_after */
extern void T199f68(GE_context* ac, T0* C);
extern T0* GE_ma415(T6 c, T6 n, ...);
extern T0* GE_ma323(T6 c, T6 n, ...);
extern T0* GE_ma283(T6 c, T6 n, ...);
extern T0* GE_ma249(T6 c, T6 n, ...);
extern T0* GE_ma543(T6 c, T6 n, ...);
extern T0* GE_ma2032(T6 c, T6 n, ...);
extern T0* GE_ma2031(T6 c, T6 n, ...);
extern void GE_bma2031(T0* C, T6 s, T6 n, ...);
extern T0* GE_mt161(void);
extern T0* GE_mt814(T0* a1);
extern T0* GE_mt30(T6 a1, T6 a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T6 a10, T1 a11);
extern T0* GE_mt1904(T0* a1, T0* a2, T8 a3);
extern T0* GE_mt700(T0* a1, T0* a2, T0* a3);
extern T0* ge391ov5865479;
extern T0* ge916ov15269890;
extern T0* ge390ov5980161;
extern T0* ge346ov5668897;
extern T0* ge701ov11485190;
extern T0* ge476ov7798827;
extern T0* ge466ov7635004;
extern T0* ge392ov5980161;
extern T0* ge1451ov23773702;
extern T0* ge1451ov23773706;
extern T0* ge376ov6160392;
extern T0* ge1451ov23773698;
extern T0* ge1451ov23773705;
extern T0* ge1451ov23773703;
extern T0* ge1451ov23773704;
extern T0* ge377ov6176784;
extern T0* ge1451ov23773699;
extern T0* ge1451ov23773701;
extern T0* ge1451ov23773340;
extern T0* ge1451ov23773640;
extern T0* ge1451ov23773653;
extern T0* ge375ov6144019;
extern T0* ge375ov6144020;
extern T0* ge757ov12402726;
extern T0* ge757ov12402711;
extern T0* ge757ov12402704;
extern T0* ge757ov12402689;
extern T0* ge757ov12402714;
extern T0* ge757ov12402707;
extern T0* ge757ov12402715;
extern T0* ge757ov12402724;
extern T0* ge757ov12402717;
extern T0* ge757ov12402713;
extern T0* ge757ov12402701;
extern T0* ge757ov12402702;
extern T0* ge757ov12402716;
extern T0* ge757ov12402703;
extern T0* ge757ov12402690;
extern T0* ge757ov12402691;
extern T0* ge757ov12402692;
extern T0* ge757ov12402698;
extern T0* ge757ov12402700;
extern T0* ge757ov12402695;
extern T0* ge757ov12402720;
extern T0* ge757ov12402719;
extern T0* ge757ov12402696;
extern T0* ge757ov12402697;
extern T0* ge757ov12402694;
extern T0* ge757ov12402693;
extern T0* ge753ov12337169;
extern T0* ge1451ov23773707;
extern T0* ge1451ov23773700;
extern T0* ge1451ov23773638;
extern T0* ge1451ov23773374;
extern T0* ge1451ov23773348;
extern T0* ge1451ov23773633;
extern T0* ge1451ov23773637;
extern T0* ge1451ov23773634;
extern T0* ge1451ov23773636;
extern T0* ge1451ov23773635;
extern T0* ge1451ov23773641;
extern T0* ge1451ov23773643;
extern T0* ge1451ov23773642;
extern T0* ge1451ov23773644;
extern T0* ge1445ov23674883;
extern T0* ge1445ov23674882;
extern T0* ge1445ov23674881;
extern T0* ge1227ov20104092;
extern T0* ge397ov5816351;
extern T0* ge397ov5816352;
extern T0* ge383ov6275084;
extern T0* ge383ov6275083;
extern T0* ge400ov5816351;
extern T0* ge400ov5816352;
extern T0* ge376ov6160394;
extern T0* ge1451ov23773419;
extern T0* ge1451ov23773683;
extern T0* ge1451ov23773425;
extern T0* ge1451ov23773329;
extern T0* ge1451ov23773684;
extern T0* ge1451ov23773510;
extern T0* ge1451ov23773509;
extern T0* ge1451ov23773448;
extern T0* ge1451ov23773479;
extern T0* ge1451ov23773525;
extern T0* ge1451ov23773582;
extern T0* ge1451ov23773609;
extern T0* ge1451ov23773649;
extern T0* ge1451ov23773382;
extern T0* ge1451ov23773677;
extern T0* ge1451ov23773427;
extern T0* ge1451ov23773404;
extern T0* ge1451ov23773331;
extern T0* ge1451ov23773645;
extern T0* ge1451ov23773400;
extern T0* ge1227ov20104063;
extern T0* ge1227ov20104083;
extern T0* ge1451ov23773607;
extern T0* ge1451ov23773376;
extern T0* ge1451ov23773630;
extern T0* ge1451ov23773349;
extern T0* ge1451ov23773375;
extern T0* ge1451ov23773671;
extern T0* ge1451ov23773629;
extern T0* ge1451ov23773627;
extern T0* ge1451ov23773628;
extern T0* ge1451ov23773623;
extern T0* ge1451ov23773610;
extern T0* ge1451ov23773611;
extern T0* ge1451ov23773612;
extern T0* ge1451ov23773615;
extern T0* ge1451ov23773616;
extern T0* ge1451ov23773617;
extern T0* ge1451ov23773618;
extern T0* ge1451ov23773619;
extern T0* ge1451ov23773620;
extern T0* ge1451ov23773621;
extern T0* ge1451ov23773622;
extern T0* ge1451ov23773624;
extern T0* ge1451ov23773625;
extern T0* ge1451ov23773626;
extern T0* ge1451ov23773614;
extern T0* ge1451ov23773613;
extern T0* ge1451ov23773678;
extern T0* ge1227ov20103913;
extern T0* ge1451ov23773388;
extern T0* ge1451ov23773377;
extern T0* ge1451ov23773694;
extern T0* ge1451ov23773447;
extern T0* ge1451ov23773423;
extern T0* ge1451ov23773422;
extern T0* ge1451ov23773682;
extern T0* ge1451ov23773336;
extern T0* ge1451ov23773424;
extern T0* ge1451ov23773648;
extern T0* ge1451ov23773381;
extern T0* ge1451ov23773647;
extern T0* ge1451ov23773663;
extern T0* ge1451ov23773650;
extern T0* ge1451ov23773485;
extern T0* ge1451ov23773486;
extern T0* ge1451ov23773664;
extern T0* ge1451ov23773392;
extern T0* ge1227ov20104066;
extern T0* ge1451ov23773493;
extern T0* ge1451ov23773397;
extern T0* ge1451ov23773482;
extern T0* ge1451ov23773333;
extern T0* ge1451ov23773339;
extern T0* ge1451ov23773532;
extern T0* ge1451ov23773434;
extern T0* ge1451ov23773360;
extern T0* ge1451ov23773632;
extern T0* ge1451ov23773631;
extern T0* ge1451ov23773606;
extern T0* ge1451ov23773605;
extern T0* ge1451ov23773604;
extern T0* ge1451ov23773603;
extern T0* ge1451ov23773602;
extern T0* ge1451ov23773601;
extern T0* ge1451ov23773600;
extern T0* ge1451ov23773599;
extern T0* ge1451ov23773598;
extern T0* ge1451ov23773597;
extern T0* ge1451ov23773596;
extern T0* ge1451ov23773595;
extern T0* ge1451ov23773594;
extern T0* ge1451ov23773593;
extern T0* ge1451ov23773592;
extern T0* ge1451ov23773591;
extern T0* ge1451ov23773590;
extern T0* ge1451ov23773589;
extern T0* ge1451ov23773588;
extern T0* ge1451ov23773587;
extern T0* ge1451ov23773586;
extern T0* ge1451ov23773585;
extern T0* ge1451ov23773584;
extern T0* ge1451ov23773583;
extern T0* ge1451ov23773581;
extern T0* ge1451ov23773580;
extern T0* ge1451ov23773579;
extern T0* ge1451ov23773578;
extern T0* ge1451ov23773577;
extern T0* ge1451ov23773576;
extern T0* ge1451ov23773487;
extern T0* ge1451ov23773481;
extern T0* ge1451ov23773426;
extern T0* ge1451ov23773523;
extern T0* ge1451ov23773410;
extern T0* ge1451ov23773393;
extern T0* ge1451ov23773680;
extern T0* ge1451ov23773442;
extern T0* ge1451ov23773687;
extern T0* ge1451ov23773465;
extern T0* ge1451ov23773462;
extern T0* ge1451ov23773553;
extern T0* ge1451ov23773570;
extern T0* ge1451ov23773552;
extern T0* ge1451ov23773569;
extern T0* ge1451ov23773551;
extern T0* ge1451ov23773568;
extern T0* ge1451ov23773529;
extern T0* ge1451ov23773341;
extern T0* ge1451ov23773550;
extern T0* ge1451ov23773567;
extern T0* ge1451ov23773549;
extern T0* ge1451ov23773566;
extern T0* ge1451ov23773548;
extern T0* ge1451ov23773565;
extern T0* ge1451ov23773547;
extern T0* ge1451ov23773564;
extern T0* ge1451ov23773545;
extern T0* ge1451ov23773562;
extern T0* ge1451ov23773544;
extern T0* ge1451ov23773561;
extern T0* ge1451ov23773543;
extern T0* ge1451ov23773560;
extern T0* ge1451ov23773542;
extern T0* ge1451ov23773559;
extern T0* ge1451ov23773541;
extern T0* ge1451ov23773558;
extern T0* ge1451ov23773540;
extern T0* ge1451ov23773557;
extern T0* ge1451ov23773539;
extern T0* ge1451ov23773556;
extern T0* ge1451ov23773441;
extern T0* ge1451ov23773412;
extern T0* ge1451ov23773337;
extern T0* ge1451ov23773346;
extern T0* ge1451ov23773370;
extern T0* ge1451ov23773368;
extern T0* ge1451ov23773359;
extern T0* ge1451ov23773358;
extern T0* ge1451ov23773357;
extern T0* ge1451ov23773356;
extern T0* ge1451ov23773355;
extern T0* ge1451ov23773461;
extern T0* ge1451ov23773353;
extern T0* ge1451ov23773371;
extern T0* ge1451ov23773345;
extern T0* ge1451ov23773343;
extern T0* ge1451ov23773389;
extern T0* ge1451ov23773429;
extern T0* ge1451ov23773428;
extern T0* ge1451ov23773608;
extern T0* ge1451ov23773519;
extern T0* ge1451ov23773572;
extern T0* ge1451ov23773571;
extern T0* ge1451ov23773555;
extern T0* ge1451ov23773554;
extern T0* ge1451ov23773538;
extern T0* ge1451ov23773537;
extern T0* ge1451ov23773534;
extern T0* ge1451ov23773535;
extern T0* ge1451ov23773528;
extern T0* ge1451ov23773527;
extern T0* ge1451ov23773526;
extern T0* ge1451ov23773672;
extern T0* ge1451ov23773524;
extern T0* ge1451ov23773517;
extern T0* ge1451ov23773516;
extern T0* ge1451ov23773513;
extern T0* ge1451ov23773511;
extern T0* ge1451ov23773508;
extern T0* ge1451ov23773507;
extern T0* ge1451ov23773506;
extern T0* ge1451ov23773505;
extern T0* ge1451ov23773504;
extern T0* ge1451ov23773503;
extern T0* ge1451ov23773502;
extern T0* ge1451ov23773501;
extern T0* ge1451ov23773475;
extern T0* ge1451ov23773476;
extern T0* ge1451ov23773472;
extern T0* ge1451ov23773474;
extern T0* ge1451ov23773473;
extern T0* ge1451ov23773471;
extern T0* ge1451ov23773469;
extern T0* ge1451ov23773470;
extern T0* ge1451ov23773468;
extern T0* ge1451ov23773467;
extern T0* ge1451ov23773466;
extern T0* ge1451ov23773464;
extern T0* ge1451ov23773463;
extern T0* ge1451ov23773460;
extern T0* ge1451ov23773459;
extern T0* ge1451ov23773458;
extern T0* ge1451ov23773457;
extern T0* ge1451ov23773456;
extern T0* ge1451ov23773455;
extern T0* ge1451ov23773454;
extern T0* ge1451ov23773453;
extern T0* ge1451ov23773445;
extern T0* ge1451ov23773443;
extern T0* ge1451ov23773440;
extern T0* ge1451ov23773439;
extern T0* ge1451ov23773438;
extern T0* ge1451ov23773437;
extern T0* ge1451ov23773436;
extern T0* ge1451ov23773444;
extern T0* ge1451ov23773521;
extern T0* ge1451ov23773520;
extern T0* ge1451ov23773518;
extern T0* ge1451ov23773418;
extern T0* ge1451ov23773417;
extern T0* ge1451ov23773416;
extern T0* ge1451ov23773415;
extern T0* ge1451ov23773414;
extern T0* ge1451ov23773413;
extern T0* ge1451ov23773399;
extern T0* ge1451ov23773398;
extern T0* ge1451ov23773396;
extern T0* ge1451ov23773522;
extern T0* ge1451ov23773446;
extern T0* ge1451ov23773406;
extern T0* ge1451ov23773405;
extern T0* ge1451ov23773409;
extern T0* ge1451ov23773408;
extern T0* ge1451ov23773407;
extern T0* ge1451ov23773411;
extern T0* ge1451ov23773477;
extern T0* ge1451ov23773395;
extern T0* ge1451ov23773394;
extern T0* ge1451ov23773546;
extern T0* ge1451ov23773563;
extern T0* ge1451ov23773662;
extern T0* ge1451ov23773490;
extern T0* ge1451ov23773673;
extern T0* ge1451ov23773666;
extern T0* ge1451ov23773667;
extern T0* ge1451ov23773330;
extern T0* ge1451ov23773668;
extern T0* ge1451ov23773383;
extern T0* ge1451ov23773378;
extern T0* ge1451ov23773401;
extern T0* ge1227ov20103710;
extern T0* ge1227ov20103734;
extern T0* ge1227ov20103776;
extern T0* ge1451ov23773334;
extern T0* ge1451ov23773335;
extern T0* ge1227ov20103745;
extern T0* ge1451ov23773654;
extern T0* ge1451ov23773483;
extern T0* ge1451ov23773484;
extern T0* ge1451ov23773536;
extern T0* ge1451ov23773512;
extern T0* ge1451ov23773515;
extern T0* ge1451ov23773514;
extern T0* ge1451ov23773342;
extern T0* ge1451ov23773681;
extern T0* ge1451ov23773689;
extern T0* ge1451ov23773390;
extern T0* ge1451ov23773690;
extern T0* ge1451ov23773670;
extern T0* ge1451ov23773688;
extern T0* ge1451ov23773366;
extern T0* ge1451ov23773365;
extern T0* ge1451ov23773364;
extern T0* ge1451ov23773363;
extern T0* ge1451ov23773354;
extern T0* ge1451ov23773352;
extern T0* ge1451ov23773351;
extern T0* ge1451ov23773347;
extern T0* ge1227ov20103706;
extern T0* ge1451ov23773369;
extern T0* ge1227ov20103735;
extern T0* ge1451ov23773362;
extern T0* ge1227ov20103725;
extern T0* ge1451ov23773350;
extern T0* ge1227ov20103713;
extern T0* ge1451ov23773379;
extern T0* ge1227ov20103748;
extern T0* ge1451ov23773344;
extern T0* ge1227ov20103701;
extern T0* ge1227ov20103722;
extern T0* ge1227ov20103721;
extern T0* ge1227ov20103705;
extern T0* ge1227ov20103743;
extern T0* ge1227ov20103697;
extern T0* ge1227ov20103699;
extern T0* ge1227ov20103747;
extern T0* ge1227ov20103746;
extern T0* ge1227ov20103739;
extern T0* ge1227ov20103738;
extern T0* ge1227ov20103733;
extern T0* ge1227ov20103732;
extern T0* ge1227ov20103737;
extern T0* ge1227ov20103736;
extern T0* ge1227ov20103729;
extern T0* ge1227ov20103728;
extern T0* ge1227ov20103727;
extern T0* ge1227ov20103726;
extern T0* ge1227ov20103717;
extern T0* ge1227ov20103716;
extern T0* ge1227ov20103715;
extern T0* ge1227ov20103714;
extern T0* ge1227ov20103703;
extern T0* ge1227ov20103702;
extern T0* ge1227ov20103700;
extern T0* ge1227ov20104081;
extern T0* ge1227ov20103749;
extern T0* ge1450ov23757575;
extern T0* ge1450ov23757258;
extern T0* ge1450ov23757082;
extern T0* ge1448ov23724049;
extern T0* ge1448ov23724043;
extern T0* ge1448ov23724037;
extern T0* ge1448ov23724045;
extern T0* ge1448ov23724039;
extern T0* ge1448ov23724033;
extern T0* ge1448ov23724048;
extern T0* ge1448ov23724042;
extern T0* ge1448ov23724036;
extern T0* ge1448ov23724050;
extern T0* ge1448ov23724044;
extern T0* ge1448ov23724038;
extern T0* ge1227ov20103805;
extern T0* ge1448ov23724047;
extern T0* ge1448ov23724041;
extern T0* ge1448ov23724035;
extern T0* ge1227ov20104005;
extern T0* ge1227ov20103951;
extern T0* ge1227ov20103915;
extern T0* ge1227ov20103861;
extern T0* ge1450ov23757600;
extern T0* ge1450ov23757279;
extern T0* ge1450ov23757107;
extern T0* ge1450ov23757598;
extern T0* ge1450ov23757277;
extern T0* ge1450ov23757105;
extern T0* ge1227ov20104035;
extern T0* ge1227ov20103995;
extern T0* ge1227ov20103793;
extern T0* ge1227ov20104046;
extern T0* ge1227ov20103959;
extern T0* ge1227ov20104061;
extern T0* ge1227ov20103918;
extern T0* ge1227ov20104109;
extern T0* ge1227ov20104078;
extern T0* ge1227ov20103752;
extern T0* ge1227ov20103777;
extern T0* ge1450ov23757597;
extern T0* ge1450ov23757276;
extern T0* ge1450ov23757104;
extern T0* ge1450ov23757595;
extern T0* ge1450ov23757274;
extern T0* ge1450ov23757102;
extern T0* ge1450ov23757596;
extern T0* ge1450ov23757275;
extern T0* ge1450ov23757103;
extern T0* ge1227ov20103800;
extern T0* ge1448ov23724046;
extern T0* ge1448ov23724040;
extern T0* ge1448ov23724034;
extern T0* ge1449ov23740426;
extern T0* ge1449ov23740422;
extern T0* ge1449ov23740421;
extern T0* ge1449ov23740425;
extern T0* ge1449ov23740420;
extern T0* ge1449ov23740424;
extern T0* ge1449ov23740419;
extern T0* ge1449ov23740423;
extern T0* ge1449ov23740418;
extern T0* ge1227ov20103724;
extern T0* ge1613ov26427409;
extern T0* ge520ov8519684;
extern T0* ge1440ov23592972;
extern T0* ge1440ov23592967;
extern T0* ge1440ov23592962;
extern T0* ge1126ov18448435;
extern T0* ge1126ov18448436;
extern T0* ge1440ov23592973;
extern T0* ge1440ov23592968;
extern T0* ge1440ov23592963;
extern T0* ge1462ov23953446;
extern T0* ge1447ov23707651;
extern T0* ge1447ov23707650;
extern T0* ge1227ov20104185;
extern T0* ge1227ov20104186;
extern T0* ge1227ov20104187;
extern T0* ge1227ov20104188;
extern T0* ge1227ov20104189;
extern T0* ge1227ov20104190;
extern T0* ge1227ov20104191;
extern T0* ge1227ov20104192;
extern T0* ge1227ov20104193;
extern T0* ge1227ov20104194;
extern T0* ge1227ov20104195;
extern T0* ge1227ov20104196;
extern T0* ge1227ov20104197;
extern T0* ge1227ov20104198;
extern T0* ge1227ov20104199;
extern T0* ge1227ov20104200;
extern T0* ge1227ov20104201;
extern T0* ge1227ov20104202;
extern T0* ge1227ov20104203;
extern T0* ge1227ov20104204;
extern T0* ge1227ov20104247;
extern T0* ge1227ov20104248;
extern T0* ge1227ov20104249;
extern T0* ge1227ov20103698;
extern T0* ge1227ov20103704;
extern T0* ge1227ov20103707;
extern T0* ge1227ov20103708;
extern T0* ge1227ov20103709;
extern T0* ge1227ov20103711;
extern T0* ge1227ov20103712;
extern T0* ge1227ov20103718;
extern T0* ge1227ov20103719;
extern T0* ge1227ov20103720;
extern T0* ge1227ov20103723;
extern T0* ge1227ov20103730;
extern T0* ge1227ov20103731;
extern T0* ge1227ov20103740;
extern T0* ge1227ov20103741;
extern T0* ge1227ov20103742;
extern T0* ge1227ov20103744;
extern T0* ge1227ov20103750;
extern T0* ge1227ov20103751;
extern T0* ge1227ov20103753;
extern T0* ge1227ov20103754;
extern T0* ge1227ov20103755;
extern T0* ge1227ov20103756;
extern T0* ge1227ov20103757;
extern T0* ge1227ov20103758;
extern T0* ge1227ov20103759;
extern T0* ge1227ov20103760;
extern T0* ge1227ov20103761;
extern T0* ge1227ov20103762;
extern T0* ge1227ov20103763;
extern T0* ge1227ov20103764;
extern T0* ge1227ov20103765;
extern T0* ge1227ov20103766;
extern T0* ge1227ov20103767;
extern T0* ge1227ov20103768;
extern T0* ge1227ov20103769;
extern T0* ge1227ov20103770;
extern T0* ge1227ov20103771;
extern T0* ge1227ov20103772;
extern T0* ge1227ov20103773;
extern T0* ge1227ov20103774;
extern T0* ge1227ov20103775;
extern T0* ge1227ov20103778;
extern T0* ge1227ov20103779;
extern T0* ge1227ov20103780;
extern T0* ge1227ov20103781;
extern T0* ge1227ov20103782;
extern T0* ge1227ov20103783;
extern T0* ge1227ov20103784;
extern T0* ge1227ov20103785;
extern T0* ge1227ov20103786;
extern T0* ge1227ov20103787;
extern T0* ge1227ov20103788;
extern T0* ge1227ov20103789;
extern T0* ge1227ov20103790;
extern T0* ge1227ov20103791;
extern T0* ge1227ov20103792;
extern T0* ge1227ov20103794;
extern T0* ge1227ov20103795;
extern T0* ge1227ov20103796;
extern T0* ge1227ov20103797;
extern T0* ge1227ov20103798;
extern T0* ge1227ov20103799;
extern T0* ge1227ov20103801;
extern T0* ge1227ov20103802;
extern T0* ge1227ov20103803;
extern T0* ge1227ov20103804;
extern T0* ge1227ov20103806;
extern T0* ge1227ov20103807;
extern T0* ge1227ov20103808;
extern T0* ge1227ov20103809;
extern T0* ge1227ov20103810;
extern T0* ge1227ov20103811;
extern T0* ge1227ov20103812;
extern T0* ge1227ov20103813;
extern T0* ge1227ov20103814;
extern T0* ge1227ov20103815;
extern T0* ge1227ov20103816;
extern T0* ge1227ov20103817;
extern T0* ge1227ov20103818;
extern T0* ge1227ov20103819;
extern T0* ge1227ov20103820;
extern T0* ge1227ov20103821;
extern T0* ge1227ov20103822;
extern T0* ge1227ov20103823;
extern T0* ge1227ov20103824;
extern T0* ge1227ov20103825;
extern T0* ge1227ov20103826;
extern T0* ge1227ov20103827;
extern T0* ge1227ov20103828;
extern T0* ge1227ov20103829;
extern T0* ge1227ov20103830;
extern T0* ge1227ov20103831;
extern T0* ge1227ov20103832;
extern T0* ge1227ov20103833;
extern T0* ge1227ov20103834;
extern T0* ge1227ov20103835;
extern T0* ge1227ov20103836;
extern T0* ge1227ov20103837;
extern T0* ge1227ov20103838;
extern T0* ge1227ov20103839;
extern T0* ge1227ov20103840;
extern T0* ge1227ov20103841;
extern T0* ge1227ov20103842;
extern T0* ge1227ov20103843;
extern T0* ge1227ov20103844;
extern T0* ge1227ov20103845;
extern T0* ge1227ov20103846;
extern T0* ge1227ov20103847;
extern T0* ge1227ov20103848;
extern T0* ge1227ov20103849;
extern T0* ge1227ov20103850;
extern T0* ge1227ov20103851;
extern T0* ge1227ov20103852;
extern T0* ge1227ov20103853;
extern T0* ge1227ov20103854;
extern T0* ge1227ov20103855;
extern T0* ge1227ov20103856;
extern T0* ge1227ov20103857;
extern T0* ge1227ov20103858;
extern T0* ge1227ov20103859;
extern T0* ge1227ov20103860;
extern T0* ge1227ov20103862;
extern T0* ge1227ov20103863;
extern T0* ge1227ov20103864;
extern T0* ge1227ov20103865;
extern T0* ge1227ov20103866;
extern T0* ge1227ov20103867;
extern T0* ge1227ov20103868;
extern T0* ge1227ov20103869;
extern T0* ge1227ov20103870;
extern T0* ge1227ov20103871;
extern T0* ge1227ov20103872;
extern T0* ge1227ov20103873;
extern T0* ge1227ov20103874;
extern T0* ge1227ov20103875;
extern T0* ge1227ov20103876;
extern T0* ge1227ov20103877;
extern T0* ge1227ov20103878;
extern T0* ge1227ov20103879;
extern T0* ge1227ov20103880;
extern T0* ge1227ov20103881;
extern T0* ge1227ov20103882;
extern T0* ge1227ov20103883;
extern T0* ge1227ov20103884;
extern T0* ge1227ov20103885;
extern T0* ge1227ov20103886;
extern T0* ge1227ov20103887;
extern T0* ge1227ov20103888;
extern T0* ge1227ov20103889;
extern T0* ge1227ov20103890;
extern T0* ge1227ov20103891;
extern T0* ge1227ov20103892;
extern T0* ge1227ov20103893;
extern T0* ge1227ov20103894;
extern T0* ge1227ov20103895;
extern T0* ge1227ov20103896;
extern T0* ge1227ov20103897;
extern T0* ge1227ov20103898;
extern T0* ge1227ov20103899;
extern T0* ge1227ov20103900;
extern T0* ge1227ov20103901;
extern T0* ge1227ov20103902;
extern T0* ge1227ov20103903;
extern T0* ge1227ov20103904;
extern T0* ge1227ov20103905;
extern T0* ge1227ov20103906;
extern T0* ge1227ov20103907;
extern T0* ge1227ov20103908;
extern T0* ge1227ov20103909;
extern T0* ge1227ov20103910;
extern T0* ge1227ov20103911;
extern T0* ge1227ov20103912;
extern T0* ge1227ov20103914;
extern T0* ge1227ov20103916;
extern T0* ge1227ov20103917;
extern T0* ge1227ov20103919;
extern T0* ge1227ov20103920;
extern T0* ge1227ov20103921;
extern T0* ge1227ov20103922;
extern T0* ge1227ov20103923;
extern T0* ge1227ov20103924;
extern T0* ge1227ov20103925;
extern T0* ge1227ov20103926;
extern T0* ge1227ov20103927;
extern T0* ge1227ov20103928;
extern T0* ge1227ov20103929;
extern T0* ge1227ov20103930;
extern T0* ge1227ov20103931;
extern T0* ge1227ov20103932;
extern T0* ge1227ov20103933;
extern T0* ge1227ov20103934;
extern T0* ge1227ov20103935;
extern T0* ge1227ov20103936;
extern T0* ge1227ov20103937;
extern T0* ge1227ov20103938;
extern T0* ge1227ov20103939;
extern T0* ge1227ov20103940;
extern T0* ge1227ov20103941;
extern T0* ge1227ov20103942;
extern T0* ge1227ov20103943;
extern T0* ge1227ov20103944;
extern T0* ge1227ov20103945;
extern T0* ge1227ov20103946;
extern T0* ge1227ov20103947;
extern T0* ge1227ov20103948;
extern T0* ge1227ov20103949;
extern T0* ge1227ov20103950;
extern T0* ge1227ov20103952;
extern T0* ge1227ov20103953;
extern T0* ge1227ov20103954;
extern T0* ge1227ov20103955;
extern T0* ge1227ov20103956;
extern T0* ge1227ov20103957;
extern T0* ge1227ov20103958;
extern T0* ge1227ov20103960;
extern T0* ge1227ov20103961;
extern T0* ge1227ov20103962;
extern T0* ge1227ov20103963;
extern T0* ge1227ov20103964;
extern T0* ge1227ov20103965;
extern T0* ge1227ov20103966;
extern T0* ge1227ov20103967;
extern T0* ge1227ov20103968;
extern T0* ge1227ov20103969;
extern T0* ge1227ov20103970;
extern T0* ge1227ov20103971;
extern T0* ge1227ov20103972;
extern T0* ge1227ov20103973;
extern T0* ge1227ov20103974;
extern T0* ge1227ov20103975;
extern T0* ge1227ov20103976;
extern T0* ge1227ov20103977;
extern T0* ge1227ov20103978;
extern T0* ge1227ov20103979;
extern T0* ge1227ov20103980;
extern T0* ge1227ov20103981;
extern T0* ge1227ov20103982;
extern T0* ge1227ov20103983;
extern T0* ge1227ov20103984;
extern T0* ge1227ov20103985;
extern T0* ge1227ov20103986;
extern T0* ge1227ov20103987;
extern T0* ge1227ov20103988;
extern T0* ge1227ov20103989;
extern T0* ge1227ov20103990;
extern T0* ge1227ov20103991;
extern T0* ge1227ov20103992;
extern T0* ge1227ov20103993;
extern T0* ge1227ov20103994;
extern T0* ge1227ov20103996;
extern T0* ge1227ov20103997;
extern T0* ge1227ov20103998;
extern T0* ge1227ov20103999;
extern T0* ge1227ov20104000;
extern T0* ge1227ov20104001;
extern T0* ge1227ov20104002;
extern T0* ge1227ov20104003;
extern T0* ge1227ov20104004;
extern T0* ge1227ov20104006;
extern T0* ge1227ov20104007;
extern T0* ge1227ov20104008;
extern T0* ge1227ov20104009;
extern T0* ge1227ov20104010;
extern T0* ge1227ov20104011;
extern T0* ge1227ov20104012;
extern T0* ge1227ov20104013;
extern T0* ge1227ov20104014;
extern T0* ge1227ov20104015;
extern T0* ge1227ov20104016;
extern T0* ge1227ov20104017;
extern T0* ge1227ov20104018;
extern T0* ge1227ov20104019;
extern T0* ge1227ov20104020;
extern T0* ge1227ov20104021;
extern T0* ge1227ov20104022;
extern T0* ge1227ov20104023;
extern T0* ge1227ov20104024;
extern T0* ge1227ov20104025;
extern T0* ge1227ov20104026;
extern T0* ge1227ov20104027;
extern T0* ge1227ov20104028;
extern T0* ge1227ov20104029;
extern T0* ge1227ov20104030;
extern T0* ge1227ov20104031;
extern T0* ge1227ov20104032;
extern T0* ge1227ov20104033;
extern T0* ge1227ov20104034;
extern T0* ge1227ov20104036;
extern T0* ge1227ov20104037;
extern T0* ge1227ov20104038;
extern T0* ge1227ov20104039;
extern T0* ge1227ov20104040;
extern T0* ge1227ov20104041;
extern T0* ge1227ov20104042;
extern T0* ge1227ov20104043;
extern T0* ge1227ov20104044;
extern T0* ge1227ov20104045;
extern T0* ge1227ov20104047;
extern T0* ge1227ov20104048;
extern T0* ge1227ov20104049;
extern T0* ge1227ov20104050;
extern T0* ge1227ov20104051;
extern T0* ge1227ov20104052;
extern T0* ge1227ov20104053;
extern T0* ge1227ov20104054;
extern T0* ge1227ov20104055;
extern T0* ge1227ov20104056;
extern T0* ge1227ov20104057;
extern T0* ge1227ov20104058;
extern T0* ge1227ov20104059;
extern T0* ge1227ov20104060;
extern T0* ge1227ov20104062;
extern T0* ge1227ov20104064;
extern T0* ge1227ov20104065;
extern T0* ge1227ov20104067;
extern T0* ge1227ov20104068;
extern T0* ge1227ov20104069;
extern T0* ge1227ov20104070;
extern T0* ge1227ov20104071;
extern T0* ge1227ov20104072;
extern T0* ge1227ov20104073;
extern T0* ge1227ov20104074;
extern T0* ge1227ov20104076;
extern T0* ge1227ov20104077;
extern T0* ge1227ov20104079;
extern T0* ge1227ov20104080;
extern T0* ge1227ov20104082;
extern T0* ge1227ov20104084;
extern T0* ge1227ov20104085;
extern T0* ge1227ov20104086;
extern T0* ge1227ov20104087;
extern T0* ge1227ov20104088;
extern T0* ge1227ov20104089;
extern T0* ge1227ov20104090;
extern T0* ge1227ov20104091;
extern T0* ge1227ov20104093;
extern T0* ge1227ov20104094;
extern T0* ge1227ov20104095;
extern T0* ge1227ov20104096;
extern T0* ge1227ov20104097;
extern T0* ge1227ov20104098;
extern T0* ge1227ov20104099;
extern T0* ge1227ov20104100;
extern T0* ge1227ov20104101;
extern T0* ge1227ov20104102;
extern T0* ge1227ov20104103;
extern T0* ge1227ov20104104;
extern T0* ge1227ov20104105;
extern T0* ge1227ov20104106;
extern T0* ge1227ov20104107;
extern T0* ge1227ov20104108;
extern T0* ge1227ov20104110;
extern T0* ge1227ov20104111;
extern T0* ge1227ov20104112;
extern T0* ge1227ov20104113;
extern T0* ge1227ov20104114;
extern T0* ge1227ov20104115;
extern T0* ge1227ov20104116;
extern T0* ge1227ov20104117;
extern T0* ge1227ov20104119;
extern T0* ge1227ov20104120;
extern T0* ge1227ov20104121;
extern T0* ge1227ov20104122;
extern T0* ge1227ov20104123;
extern T0* ge1227ov20104124;
extern T0* ge1227ov20104125;
extern T0* ge1227ov20104126;
extern T0* ge1227ov20104127;
extern T0* ge1227ov20104128;
extern T0* ge1227ov20104129;
extern T0* ge1227ov20104130;
extern T0* ge1227ov20104131;
extern T0* ge1227ov20104132;
extern T0* ge1227ov20104133;
extern T0* ge1227ov20104134;
extern T0* ge1227ov20104135;
extern T0* ge1227ov20104136;
extern T0* ge1227ov20104137;
extern T0* ge1227ov20104138;
extern T0* ge1227ov20104139;
extern T0* ge1227ov20104140;
extern T0* ge1227ov20104147;
extern T0* ge1227ov20104148;
extern T0* ge1227ov20104149;
extern T0* ge1227ov20104150;
extern T0* ge1227ov20104151;
extern T0* ge1227ov20104153;
extern T0* ge1227ov20104154;
extern T0* ge1227ov20104155;
extern T0* ge1227ov20104156;
extern T0* ge1227ov20104157;
extern T0* ge1227ov20104158;
extern T0* ge1227ov20104159;
extern T0* ge1227ov20104160;
extern T0* ge1227ov20104161;
extern T0* ge1227ov20104162;
extern T0* ge1227ov20104163;
extern T0* ge1227ov20104164;
extern T0* ge1227ov20104165;
extern T0* ge1227ov20104166;
extern T0* ge1227ov20104167;
extern T0* ge1227ov20104168;
extern T0* ge1227ov20104169;
extern T0* ge1227ov20104170;
extern T0* ge1227ov20104171;
extern T0* ge1227ov20104174;
extern T0* ge1227ov20104175;
extern T0* ge1227ov20104176;
extern T0* ge1227ov20104177;
extern T0* ge1227ov20104178;
extern T0* ge1227ov20104179;
extern T0* ge1227ov20104180;
extern T0* ge1227ov20104181;
extern T0* ge1227ov20104182;
extern T0* ge1227ov20104183;
extern T0* ge350ov5734405;
extern T0* ge1462ov23953466;
extern T0* ge827ov13549593;
extern T0* ge1441ov23609350;
extern T0* ge1441ov23609348;
extern T0* ge1441ov23609346;
extern T0* ge827ov13549586;
extern T0* ge827ov13549627;
extern T0* ge819ov13418506;
extern T0* ge819ov13418507;
extern T0* ge819ov13418516;
extern T0* ge776ov12713986;
extern T0* ge776ov12713993;
extern T0* ge776ov12713992;
extern T0* ge776ov12713987;
extern T0* ge776ov12713991;
extern T0* ge776ov12713988;
extern T0* ge776ov12713994;
extern T0* ge827ov13549578;
extern T0* ge827ov13549583;
extern T0* ge827ov13549610;
extern T0* ge843ov13811797;
extern T0* ge843ov13811767;
extern T0* ge843ov13811735;
extern T0* ge843ov13811769;
extern T0* ge843ov13811791;
extern T0* ge843ov13811758;
extern T0* ge843ov13811781;
extern T0* ge839ov13746242;
extern T0* ge839ov13746207;
extern T0* ge839ov13746251;
extern T0* ge839ov13746216;
extern T0* ge839ov13746234;
extern T0* ge839ov13746199;
extern T0* ge846ov13860932;
extern T0* ge846ov13860931;
extern T0* ge843ov13811742;
extern T0* ge843ov13811743;
extern T0* ge843ov13811715;
extern T0* ge843ov13811722;
extern T0* ge843ov13811726;
extern T0* ge843ov13811744;
extern T0* ge843ov13811745;
extern T0* ge843ov13811746;
extern T0* ge843ov13811747;
extern T0* ge843ov13811748;
extern T0* ge843ov13811749;
extern T0* ge843ov13811750;
extern T0* ge843ov13811753;
extern T0* ge843ov13811773;
extern T0* ge843ov13811757;
extern T0* ge843ov13811760;
extern T0* ge843ov13811772;
extern T0* ge843ov13811776;
extern T0* ge843ov13811777;
extern T0* ge843ov13811778;
extern T0* ge843ov13811786;
extern T0* ge843ov13811787;
extern T0* ge843ov13811799;
extern T0* ge843ov13811800;
extern T0* ge843ov13811713;
extern T0* ge827ov13549588;
extern T0* ge819ov13418505;
extern T0* ge819ov13418515;
extern T0* ge819ov13418514;
extern T0* ge819ov13418540;
extern T0* ge819ov13418543;
extern T0* ge819ov13418542;
extern T0* ge819ov13418517;
extern T0* ge819ov13418533;
extern T0* ge819ov13418508;
extern T0* ge819ov13418503;
extern T0* ge776ov12713985;
extern T0* ge827ov13549577;
extern T0* ge827ov13549605;
extern T0* ge843ov13811759;
extern T0* ge843ov13811764;
extern T0* ge843ov13811784;
extern T0* ge843ov13811721;
extern T0* ge843ov13811780;
extern T0* ge843ov13811728;
extern T0* ge843ov13811732;
extern T0* ge843ov13811792;
extern T0* ge839ov13746240;
extern T0* ge839ov13746205;
extern T0* ge839ov13746237;
extern T0* ge839ov13746202;
extern T0* ge843ov13811798;
extern T0* ge827ov13549579;
extern T0* ge827ov13549617;
extern T0* ge827ov13549623;
extern T0* ge827ov13549618;
extern T0* ge843ov13811714;
extern T0* ge843ov13811723;
extern T0* ge843ov13811751;
extern T0* ge843ov13811770;
extern T0* ge843ov13811731;
extern T0* ge843ov13811724;
extern T0* ge843ov13811785;
extern T0* ge843ov13811801;
extern T0* ge843ov13811738;
extern T0* ge843ov13811779;
extern T0* ge843ov13811795;
extern T0* ge843ov13811725;
extern T0* ge843ov13811752;
extern T0* ge843ov13811771;
extern T0* ge843ov13811768;
extern T0* ge839ov13746235;
extern T0* ge839ov13746200;
extern T0* ge843ov13811730;
extern T0* ge843ov13811802;
extern T0* ge843ov13811733;
extern T0* ge843ov13811736;
extern T0* ge843ov13811737;
extern T0* ge843ov13811766;
extern T0* ge843ov13811775;
extern T0* ge843ov13811763;
extern T0* ge843ov13811762;
extern T0* ge843ov13811793;
extern T0* ge843ov13811729;
extern T0* ge843ov13811765;
extern T0* ge839ov13746224;
extern T0* ge839ov13746189;
extern T0* ge839ov13746223;
extern T0* ge839ov13746188;
extern T0* ge839ov13746222;
extern T0* ge839ov13746187;
extern T0* ge839ov13746221;
extern T0* ge839ov13746186;
extern T0* ge839ov13746220;
extern T0* ge839ov13746185;
extern T0* ge843ov13811741;
extern T0* ge839ov13746239;
extern T0* ge839ov13746204;
extern T0* ge839ov13746241;
extern T0* ge839ov13746206;
extern T0* ge843ov13811761;
extern T0* ge843ov13811727;
extern T0* ge843ov13811788;
extern T0* ge843ov13811804;
extern T0* ge843ov13811720;
extern T0* ge843ov13811734;
extern T0* ge843ov13811803;
extern T0* ge843ov13811739;
extern T0* ge843ov13811774;
extern T0* ge843ov13811796;
extern T0* ge843ov13811755;
extern T0* ge843ov13811782;
extern T0* ge843ov13811754;
extern T0* ge843ov13811740;
extern T0* ge843ov13811756;
extern T0* ge843ov13811789;
extern T0* ge843ov13811794;
extern T0* ge843ov13811716;
extern T0* ge843ov13811717;
extern T0* ge843ov13811718;
extern T0* ge843ov13811719;
extern T0* ge819ov13418535;
extern T0* ge819ov13418544;
extern T0* ge819ov13418509;
extern T0* ge819ov13418538;
extern T0* ge819ov13418520;
extern T0* ge819ov13418504;
extern T0* ge819ov13418510;
extern T0* ge819ov13418512;
extern T0* ge819ov13418513;
extern T0* ge819ov13418518;
extern T0* ge819ov13418497;
extern T0* ge819ov13418498;
extern T0* ge819ov13418499;
extern T0* ge819ov13418500;
extern T0* ge819ov13418501;
extern T0* ge819ov13418502;
extern T0* ge819ov13418519;
extern T0* ge819ov13418521;
extern T0* ge819ov13418522;
extern T0* ge819ov13418523;
extern T0* ge819ov13418524;
extern T0* ge819ov13418525;
extern T0* ge819ov13418526;
extern T0* ge819ov13418527;
extern T0* ge819ov13418528;
extern T0* ge819ov13418529;
extern T0* ge819ov13418530;
extern T0* ge819ov13418531;
extern T0* ge819ov13418532;
extern T0* ge827ov13549569;
extern T0* ge827ov13549570;
extern T0* ge827ov13549571;
extern T0* ge827ov13549572;
extern T0* ge827ov13549573;
extern T0* ge827ov13549574;
extern T0* ge827ov13549575;
extern T0* ge827ov13549576;
extern T0* ge827ov13549613;
extern T0* ge827ov13549580;
extern T0* ge827ov13549581;
extern T0* ge827ov13549582;
extern T0* ge827ov13549587;
extern T0* ge827ov13549589;
extern T0* ge827ov13549590;
extern T0* ge827ov13549591;
extern T0* ge827ov13549592;
extern T0* ge827ov13549594;
extern T0* ge827ov13549595;
extern T0* ge827ov13549614;
extern T0* ge827ov13549601;
extern T0* ge827ov13549602;
extern T0* ge827ov13549616;
extern T0* ge827ov13549604;
extern T0* ge827ov13549606;
extern T0* ge827ov13549607;
extern T0* ge827ov13549611;
extern T0* ge827ov13549612;
extern T0* ge839ov13746236;
extern T0* ge839ov13746201;
extern T0* ge839ov13746238;
extern T0* ge839ov13746203;
extern T0* ge839ov13746232;
extern T0* ge839ov13746197;
extern T0* ge776ov12713989;
extern T0* ge776ov12713990;
extern T0* ge839ov13746226;
extern T0* ge839ov13746191;
extern T0* ge839ov13746225;
extern T0* ge839ov13746190;
extern T0* ge839ov13746243;
extern T0* ge839ov13746208;
extern T0* ge839ov13746244;
extern T0* ge839ov13746209;
extern T0* ge839ov13746245;
extern T0* ge839ov13746210;
extern T0* ge839ov13746233;
extern T0* ge839ov13746198;
extern T0* ge839ov13746246;
extern T0* ge839ov13746211;
extern T0* ge839ov13746219;
extern T0* ge839ov13746184;
extern T0* ge839ov13746248;
extern T0* ge839ov13746213;
extern T0* ge839ov13746249;
extern T0* ge839ov13746214;
extern T0* ge839ov13746250;
extern T0* ge839ov13746215;
extern T0* ge839ov13746247;
extern T0* ge839ov13746212;
extern T0* ge843ov13811790;
extern T0* ge843ov13811783;
extern T0* ge839ov13746218;
extern T0* ge839ov13746183;
extern T0* ge839ov13746227;
extern T0* ge839ov13746192;
extern T0* ge839ov13746228;
extern T0* ge839ov13746193;
extern T0* ge839ov13746231;
extern T0* ge839ov13746196;
extern T0* ge839ov13746230;
extern T0* ge839ov13746195;
extern T0* ge839ov13746229;
extern T0* ge839ov13746194;
extern T0* ge1717ov28131370;
extern T0* ge1717ov28131332;
extern T0* ge1717ov28131330;
extern T0* ge1717ov28131371;
extern T0* ge1717ov28131343;
extern T0* ge1717ov28131342;
extern T0* ge1717ov28131353;
extern T0* ge1717ov28131347;
extern T0* ge1717ov28131346;
extern T0* ge1717ov28131345;
extern T0* ge1717ov28131351;
extern T0* ge1717ov28131350;
extern T0* ge1717ov28131352;
extern T0* ge1717ov28131329;
extern T0* ge1717ov28131355;
extern T0* ge1717ov28131364;
extern T0* ge1720ov28180507;
extern T0* ge1720ov28180505;
extern T0* ge1720ov28180506;
extern T0* ge1717ov28131365;
extern T0* ge1717ov28131366;
extern T0* ge1717ov28131369;
extern T0* ge1717ov28131367;
extern T0* ge1717ov28131368;
extern T0* ge1717ov28131362;
extern T0* ge1713ov28065793;
extern T0* ge1713ov28065794;
extern T0* ge1717ov28131335;
extern T0* ge1717ov28131358;
extern T0* ge1728ov28311569;
extern T0* ge1728ov28311568;
extern T0* ge1717ov28131378;
extern T0* ge1717ov28131379;
extern T0* ge1717ov28131380;
extern T0* ge1717ov28131373;
extern T0* ge1717ov28131356;
extern T0* ge1717ov28131357;
extern T0* ge1717ov28131359;
extern T0* ge1717ov28131363;
extern T0* ge1772ov29032449;
extern T0* ge318ov5210114;
extern T0* ge318ov5210121;
extern T0* ge313ov5128214;
extern T0* ge418ov6848513;
extern T0* ge315ov5160967;
extern T0* ge318ov5210117;
extern T0* ge318ov5210124;
extern T0* ge318ov5210115;
extern T0* ge318ov5210122;
extern T0* ge318ov5210116;
extern T0* ge318ov5210123;
extern T0* ge318ov5210118;
extern T0* ge318ov5210125;
extern T0* ge318ov5210119;
extern T0* ge318ov5210126;
extern T0* ge315ov5160962;
extern T0* ge315ov5160961;
extern T0* ge315ov5160969;
extern T0* ge315ov5160968;
extern T0* ge1502ov24608771;
extern T0* ge1502ov24608769;
extern T0* ge1724ov28246035;
extern T0* ge1724ov28246036;
extern T0* ge1715ov28098564;
extern T0* ge1715ov28098566;
extern T0* ge1227ov20104143;
extern T0* ge1227ov20104144;
extern T0* ge1227ov20104146;
extern T0* ge1227ov20104145;
extern T0* ge1227ov20104141;
extern T0* ge1227ov20104142;
extern T0* ge1324ov21692443;
extern T0* ge1317ov21577736;
extern T0* ge1313ov21512232;
extern T0* ge1450ov23757323;
extern T0* ge1450ov23757151;
extern T0* ge1450ov23756835;
extern T0* ge1450ov23757324;
extern T0* ge1450ov23756836;
extern T0* ge1450ov23757307;
extern T0* ge1450ov23757144;
extern T0* ge1450ov23756819;
extern T0* ge1450ov23757306;
extern T0* ge1450ov23756818;
extern T0* ge1450ov23757308;
extern T0* ge1450ov23756820;
extern T0* ge1450ov23757332;
extern T0* ge1450ov23757155;
extern T0* ge1450ov23756844;
extern T0* ge1450ov23757321;
extern T0* ge1450ov23756833;
extern T0* ge1450ov23757322;
extern T0* ge1450ov23756834;
extern T0* ge1450ov23757469;
extern T0* ge1450ov23757208;
extern T0* ge1450ov23756978;
extern T0* ge1450ov23757468;
extern T0* ge1450ov23756977;
extern T0* ge1450ov23757470;
extern T0* ge1450ov23757209;
extern T0* ge1450ov23756979;
extern T0* ge1450ov23757336;
extern T0* ge1450ov23757157;
extern T0* ge1450ov23756848;
extern T0* ge1450ov23757342;
extern T0* ge1450ov23757161;
extern T0* ge1450ov23756854;
extern T0* ge1450ov23757461;
extern T0* ge1450ov23757204;
extern T0* ge1450ov23756970;
extern T0* ge1450ov23757448;
extern T0* ge1450ov23757196;
extern T0* ge1450ov23756957;
extern T0* ge1450ov23757471;
extern T0* ge1450ov23757210;
extern T0* ge1450ov23756980;
extern T0* ge1450ov23757339;
extern T0* ge1450ov23757159;
extern T0* ge1450ov23756851;
extern T0* ge1450ov23757346;
extern T0* ge1450ov23757164;
extern T0* ge1450ov23756858;
extern T0* ge1450ov23757462;
extern T0* ge1450ov23757205;
extern T0* ge1450ov23756971;
extern T0* ge1450ov23757460;
extern T0* ge1450ov23757203;
extern T0* ge1450ov23756969;
extern T0* ge1450ov23757449;
extern T0* ge1450ov23757197;
extern T0* ge1450ov23756958;
extern T0* ge1450ov23757463;
extern T0* ge1450ov23757206;
extern T0* ge1450ov23756972;
extern T0* ge1450ov23757433;
extern T0* ge1450ov23757192;
extern T0* ge1450ov23756942;
extern T0* ge1450ov23757432;
extern T0* ge1450ov23756941;
extern T0* ge1450ov23757434;
extern T0* ge1450ov23756943;
extern T0* ge1450ov23757435;
extern T0* ge1450ov23756944;
extern T0* ge1450ov23757423;
extern T0* ge1450ov23757189;
extern T0* ge1450ov23756933;
extern T0* ge1450ov23757403;
extern T0* ge1450ov23757176;
extern T0* ge1450ov23756915;
extern T0* ge1450ov23757396;
extern T0* ge1450ov23757175;
extern T0* ge1450ov23756908;
extern T0* ge1450ov23757430;
extern T0* ge1450ov23757191;
extern T0* ge1450ov23756940;
extern T0* ge1450ov23757389;
extern T0* ge1450ov23757174;
extern T0* ge1450ov23756901;
extern T0* ge1450ov23757388;
extern T0* ge1450ov23756900;
extern T0* ge1450ov23757402;
extern T0* ge1450ov23756914;
extern T0* ge1450ov23757395;
extern T0* ge1450ov23756907;
extern T0* ge1450ov23757429;
extern T0* ge1450ov23756939;
extern T0* ge1450ov23757387;
extern T0* ge1450ov23756899;
extern T0* ge1450ov23757386;
extern T0* ge1450ov23756898;
extern T0* ge1450ov23757404;
extern T0* ge1450ov23757177;
extern T0* ge1450ov23756916;
extern T0* ge1450ov23757385;
extern T0* ge1450ov23756897;
extern T0* ge1450ov23757383;
extern T0* ge1450ov23756895;
extern T0* ge1450ov23757382;
extern T0* ge1450ov23756894;
extern T0* ge1450ov23757401;
extern T0* ge1450ov23756913;
extern T0* ge1450ov23757394;
extern T0* ge1450ov23756906;
extern T0* ge1450ov23757381;
extern T0* ge1450ov23756893;
extern T0* ge1450ov23757384;
extern T0* ge1450ov23756896;
extern T0* ge1450ov23757425;
extern T0* ge1450ov23756935;
extern T0* ge1450ov23757428;
extern T0* ge1450ov23756938;
extern T0* ge1450ov23757427;
extern T0* ge1450ov23756937;
extern T0* ge1450ov23757426;
extern T0* ge1450ov23756936;
extern T0* ge1450ov23757599;
extern T0* ge1450ov23757278;
extern T0* ge1450ov23757106;
extern T0* ge1450ov23757419;
extern T0* ge1450ov23757188;
extern T0* ge1450ov23756929;
extern T0* ge1450ov23757420;
extern T0* ge1450ov23756930;
extern T0* ge1450ov23757413;
extern T0* ge1450ov23757185;
extern T0* ge1450ov23756923;
extern T0* ge1450ov23757422;
extern T0* ge1450ov23756932;
extern T0* ge1450ov23757421;
extern T0* ge1450ov23756931;
extern T0* ge1450ov23757418;
extern T0* ge1450ov23757187;
extern T0* ge1450ov23756928;
extern T0* ge1450ov23757369;
extern T0* ge1450ov23757173;
extern T0* ge1450ov23756881;
extern T0* ge1450ov23757368;
extern T0* ge1450ov23757172;
extern T0* ge1450ov23756880;
extern T0* ge1450ov23757367;
extern T0* ge1450ov23757171;
extern T0* ge1450ov23756879;
extern T0* ge1450ov23757366;
extern T0* ge1450ov23757170;
extern T0* ge1450ov23756878;
extern T0* ge1450ov23757365;
extern T0* ge1450ov23756877;
extern T0* ge1450ov23757303;
extern T0* ge1450ov23757141;
extern T0* ge1450ov23756815;
extern T0* ge1450ov23757301;
extern T0* ge1450ov23757140;
extern T0* ge1450ov23756813;
extern T0* ge1450ov23757375;
extern T0* ge1450ov23756887;
extern T0* ge1450ov23757372;
extern T0* ge1450ov23756884;
extern T0* ge1450ov23757398;
extern T0* ge1450ov23756910;
extern T0* ge1450ov23757391;
extern T0* ge1450ov23756903;
extern T0* ge1450ov23757376;
extern T0* ge1450ov23756888;
extern T0* ge1450ov23757373;
extern T0* ge1450ov23756885;
extern T0* ge1450ov23757399;
extern T0* ge1450ov23756911;
extern T0* ge1450ov23757392;
extern T0* ge1450ov23756904;
extern T0* ge1450ov23757377;
extern T0* ge1450ov23756889;
extern T0* ge1450ov23757374;
extern T0* ge1450ov23756886;
extern T0* ge1450ov23757400;
extern T0* ge1450ov23756912;
extern T0* ge1450ov23757393;
extern T0* ge1450ov23756905;
extern T0* ge1450ov23757525;
extern T0* ge1450ov23757238;
extern T0* ge1450ov23757034;
extern T0* ge1450ov23757409;
extern T0* ge1450ov23757179;
extern T0* ge1450ov23756919;
extern T0* ge1450ov23757408;
extern T0* ge1450ov23756918;
extern T0* ge1450ov23757380;
extern T0* ge1450ov23756892;
extern T0* ge1450ov23757371;
extern T0* ge1450ov23756883;
extern T0* ge1450ov23757370;
extern T0* ge1450ov23756882;
extern T0* ge1450ov23757397;
extern T0* ge1450ov23756909;
extern T0* ge1450ov23757390;
extern T0* ge1450ov23756902;
extern T0* ge1450ov23757379;
extern T0* ge1450ov23756891;
extern T0* ge1450ov23757378;
extern T0* ge1450ov23756890;
extern T0* ge1450ov23757405;
extern T0* ge1450ov23757178;
extern T0* ge1450ov23756917;
extern T0* ge1450ov23757514;
extern T0* ge1450ov23757232;
extern T0* ge1450ov23757023;
extern T0* ge1450ov23757512;
extern T0* ge1450ov23757231;
extern T0* ge1450ov23757021;
extern T0* ge1450ov23757310;
extern T0* ge1450ov23757145;
extern T0* ge1450ov23756822;
extern T0* ge1450ov23757467;
extern T0* ge1450ov23757207;
extern T0* ge1450ov23756976;
extern T0* ge1450ov23757309;
extern T0* ge1450ov23756821;
extern T0* ge1450ov23757466;
extern T0* ge1450ov23756975;
extern T0* ge1450ov23757465;
extern T0* ge1450ov23756974;
extern T0* ge1450ov23757340;
extern T0* ge1450ov23757160;
extern T0* ge1450ov23756852;
extern T0* ge1450ov23757338;
extern T0* ge1450ov23757158;
extern T0* ge1450ov23756850;
extern T0* ge1450ov23757337;
extern T0* ge1450ov23756849;
extern T0* ge1450ov23757344;
extern T0* ge1450ov23757162;
extern T0* ge1450ov23756856;
extern T0* ge1450ov23757343;
extern T0* ge1450ov23756855;
extern T0* ge1450ov23757345;
extern T0* ge1450ov23757163;
extern T0* ge1450ov23756857;
extern T0* ge1450ov23757326;
extern T0* ge1450ov23757152;
extern T0* ge1450ov23756838;
extern T0* ge1450ov23757325;
extern T0* ge1450ov23756837;
extern T0* ge1450ov23757331;
extern T0* ge1450ov23756843;
extern T0* ge1450ov23757328;
extern T0* ge1450ov23757153;
extern T0* ge1450ov23756840;
extern T0* ge1450ov23757329;
extern T0* ge1450ov23756841;
extern T0* ge1450ov23757464;
extern T0* ge1450ov23756973;
extern T0* ge1450ov23757327;
extern T0* ge1450ov23756839;
extern T0* ge1450ov23757341;
extern T0* ge1450ov23756853;
extern T0* ge1450ov23757330;
extern T0* ge1450ov23757154;
extern T0* ge1450ov23756842;
extern T0* ge1450ov23757335;
extern T0* ge1450ov23757156;
extern T0* ge1450ov23756847;
extern T0* ge1450ov23757333;
extern T0* ge1450ov23756845;
extern T0* ge1450ov23757334;
extern T0* ge1450ov23756846;
extern T0* ge1450ov23757472;
extern T0* ge1450ov23757211;
extern T0* ge1450ov23756981;
extern T0* ge1450ov23757444;
extern T0* ge1450ov23757180;
extern T0* ge1450ov23756953;
extern T0* ge1450ov23757305;
extern T0* ge1450ov23757143;
extern T0* ge1450ov23756817;
extern T0* ge1450ov23757304;
extern T0* ge1450ov23757142;
extern T0* ge1450ov23756816;
extern T0* ge1450ov23757589;
extern T0* ge1450ov23757267;
extern T0* ge1450ov23757096;
extern T0* ge1450ov23757446;
extern T0* ge1450ov23757181;
extern T0* ge1450ov23756955;
extern T0* ge1450ov23757592;
extern T0* ge1450ov23757271;
extern T0* ge1450ov23757099;
extern T0* ge1450ov23757530;
extern T0* ge1450ov23757241;
extern T0* ge1450ov23757039;
extern T0* ge1450ov23757591;
extern T0* ge1450ov23757270;
extern T0* ge1450ov23757098;
extern T0* ge1450ov23757443;
extern T0* ge1450ov23757194;
extern T0* ge1450ov23756952;
extern T0* ge1450ov23757445;
extern T0* ge1450ov23756954;
extern T0* ge1440ov23592974;
extern T0* ge1440ov23592969;
extern T0* ge1440ov23592964;
extern T0* ge1440ov23592975;
extern T0* ge1440ov23592970;
extern T0* ge1440ov23592965;
extern T0* ge1450ov23757602;
extern T0* ge1450ov23757280;
extern T0* ge1450ov23757109;
extern T0* ge1450ov23757601;
extern T0* ge1450ov23757108;
extern T0* ge1450ov23757359;
extern T0* ge1450ov23757168;
extern T0* ge1450ov23756871;
extern T0* ge1450ov23757358;
extern T0* ge1450ov23756870;
extern T0* ge1450ov23757357;
extern T0* ge1450ov23757167;
extern T0* ge1450ov23756869;
extern T0* ge1450ov23757356;
extern T0* ge1450ov23756868;
extern T0* ge1450ov23757360;
extern T0* ge1450ov23757169;
extern T0* ge1450ov23756872;
extern T0* ge1450ov23757351;
extern T0* ge1450ov23757166;
extern T0* ge1450ov23756863;
extern T0* ge1450ov23757353;
extern T0* ge1450ov23756865;
extern T0* ge1450ov23757547;
extern T0* ge1450ov23757247;
extern T0* ge1450ov23757054;
extern T0* ge1450ov23757441;
extern T0* ge1450ov23757193;
extern T0* ge1450ov23756950;
extern T0* ge1450ov23757440;
extern T0* ge1450ov23756949;
extern T0* ge1450ov23757553;
extern T0* ge1450ov23757249;
extern T0* ge1450ov23757060;
extern T0* ge1450ov23757538;
extern T0* ge1450ov23757244;
extern T0* ge1450ov23757045;
extern T0* ge1450ov23757569;
extern T0* ge1450ov23757255;
extern T0* ge1450ov23757076;
extern T0* ge1450ov23757455;
extern T0* ge1450ov23757201;
extern T0* ge1450ov23756964;
extern T0* ge1450ov23757540;
extern T0* ge1450ov23757245;
extern T0* ge1450ov23757047;
extern T0* ge1450ov23757539;
extern T0* ge1450ov23757046;
extern T0* ge1450ov23757320;
extern T0* ge1450ov23757150;
extern T0* ge1450ov23756832;
extern T0* ge1450ov23757296;
extern T0* ge1450ov23757136;
extern T0* ge1450ov23756808;
extern T0* ge1450ov23757537;
extern T0* ge1450ov23757044;
extern T0* ge1450ov23757536;
extern T0* ge1450ov23757043;
extern T0* ge1450ov23757319;
extern T0* ge1450ov23757149;
extern T0* ge1450ov23756831;
extern T0* ge1450ov23757295;
extern T0* ge1450ov23757135;
extern T0* ge1450ov23756807;
extern T0* ge1450ov23757554;
extern T0* ge1450ov23757061;
extern T0* ge1450ov23757568;
extern T0* ge1450ov23757075;
extern T0* ge1450ov23757458;
extern T0* ge1450ov23757202;
extern T0* ge1450ov23756967;
extern T0* ge1450ov23757294;
extern T0* ge1450ov23756806;
extern T0* ge1450ov23757545;
extern T0* ge1450ov23757052;
extern T0* ge1450ov23757436;
extern T0* ge1450ov23756945;
extern T0* ge1450ov23757439;
extern T0* ge1450ov23756948;
extern T0* ge1450ov23757438;
extern T0* ge1450ov23756947;
extern T0* ge1450ov23757437;
extern T0* ge1450ov23756946;
extern T0* ge1450ov23757361;
extern T0* ge1450ov23756873;
extern T0* ge1450ov23757349;
extern T0* ge1450ov23756861;
extern T0* ge1450ov23757355;
extern T0* ge1450ov23756867;
extern T0* ge1450ov23757352;
extern T0* ge1450ov23756864;
extern T0* ge1450ov23757350;
extern T0* ge1450ov23756862;
extern T0* ge1451ov23773531;
extern T0* ge1451ov23773685;
extern T0* ge1451ov23773693;
extern T0* ge1450ov23757528;
extern T0* ge1450ov23757240;
extern T0* ge1450ov23757037;
extern T0* ge1450ov23757529;
extern T0* ge1450ov23757038;
extern T0* ge1450ov23757516;
extern T0* ge1450ov23757233;
extern T0* ge1450ov23757025;
extern T0* ge1450ov23757517;
extern T0* ge1450ov23757234;
extern T0* ge1450ov23757026;
extern T0* ge1450ov23757513;
extern T0* ge1450ov23757022;
extern T0* ge1450ov23757564;
extern T0* ge1450ov23757253;
extern T0* ge1450ov23757071;
extern T0* ge1451ov23773420;
extern T0* ge1451ov23773669;
extern T0* ge1451ov23773573;
extern T0* ge1451ov23773686;
extern T0* ge1451ov23773652;
extern T0* ge1451ov23773575;
extern T0* ge1451ov23773432;
extern T0* ge1451ov23773478;
extern T0* ge1451ov23773574;
extern T0* ge1451ov23773675;
extern T0* ge1451ov23773661;
extern T0* ge1451ov23773695;
extern T0* ge1451ov23773480;
extern T0* ge1451ov23773386;
extern T0* ge1451ov23773679;
extern T0* ge1451ov23773676;
extern T0* ge1451ov23773496;
extern T0* ge1451ov23773530;
extern T0* ge1451ov23773665;
extern T0* ge1451ov23773494;
extern T0* ge1451ov23773495;
extern T0* ge1451ov23773533;
extern T0* ge1450ov23757563;
extern T0* ge1450ov23757252;
extern T0* ge1450ov23757070;
extern T0* ge1450ov23757567;
extern T0* ge1450ov23757254;
extern T0* ge1450ov23757074;
extern T0* ge1450ov23757566;
extern T0* ge1450ov23757073;
extern T0* ge1450ov23757562;
extern T0* ge1450ov23757069;
extern T0* ge1450ov23757561;
extern T0* ge1450ov23757068;
extern T0* ge1450ov23757560;
extern T0* ge1450ov23757067;
extern T0* ge1450ov23757559;
extern T0* ge1450ov23757066;
extern T0* ge1450ov23757558;
extern T0* ge1450ov23757065;
extern T0* ge1450ov23757584;
extern T0* ge1450ov23757263;
extern T0* ge1450ov23757091;
extern T0* ge1451ov23773491;
extern T0* ge1451ov23773492;
extern T0* ge1450ov23757298;
extern T0* ge1450ov23757137;
extern T0* ge1450ov23756810;
extern T0* ge1450ov23757456;
extern T0* ge1450ov23756965;
extern T0* ge1450ov23757478;
extern T0* ge1450ov23757213;
extern T0* ge1450ov23756987;
extern T0* ge1450ov23757477;
extern T0* ge1450ov23756986;
extern T0* ge1450ov23757476;
extern T0* ge1450ov23756985;
extern T0* ge1450ov23757475;
extern T0* ge1450ov23756984;
extern T0* ge1450ov23757474;
extern T0* ge1450ov23756983;
extern T0* ge1450ov23757473;
extern T0* ge1450ov23757212;
extern T0* ge1450ov23756982;
extern T0* ge1451ov23773696;
extern T0* ge1450ov23757442;
extern T0* ge1450ov23756951;
extern T0* ge1450ov23757483;
extern T0* ge1450ov23757216;
extern T0* ge1450ov23756992;
extern T0* ge1450ov23757490;
extern T0* ge1450ov23757220;
extern T0* ge1450ov23756999;
extern T0* ge1450ov23757489;
extern T0* ge1450ov23756998;
extern T0* ge1450ov23757488;
extern T0* ge1450ov23757219;
extern T0* ge1450ov23756997;
extern T0* ge1450ov23757487;
extern T0* ge1450ov23756996;
extern T0* ge1450ov23757486;
extern T0* ge1450ov23757218;
extern T0* ge1450ov23756995;
extern T0* ge1450ov23757485;
extern T0* ge1450ov23756994;
extern T0* ge1450ov23757484;
extern T0* ge1450ov23757217;
extern T0* ge1450ov23756993;
extern T0* ge1450ov23757482;
extern T0* ge1450ov23756991;
extern T0* ge1450ov23757551;
extern T0* ge1450ov23757058;
extern T0* ge1450ov23757580;
extern T0* ge1450ov23757262;
extern T0* ge1450ov23757087;
extern T0* ge1450ov23757579;
extern T0* ge1450ov23757261;
extern T0* ge1450ov23757086;
extern T0* ge1451ov23773655;
extern T0* ge1450ov23757556;
extern T0* ge1450ov23757251;
extern T0* ge1450ov23757063;
extern T0* ge1450ov23757557;
extern T0* ge1450ov23757064;
extern T0* ge1450ov23757555;
extern T0* ge1450ov23757250;
extern T0* ge1450ov23757062;
extern T0* ge1450ov23757587;
extern T0* ge1450ov23757265;
extern T0* ge1450ov23757094;
extern T0* ge1450ov23757585;
extern T0* ge1450ov23757264;
extern T0* ge1450ov23757092;
extern T0* ge1450ov23757625;
extern T0* ge1450ov23757290;
extern T0* ge1450ov23757132;
extern T0* ge1450ov23757581;
extern T0* ge1450ov23757088;
extern T0* ge1451ov23773449;
extern T0* ge1451ov23773450;
extern T0* ge1451ov23773488;
extern T0* ge1451ov23773451;
extern T0* ge1451ov23773402;
extern T0* ge1451ov23773489;
extern T0* ge1451ov23773452;
extern T0* ge1451ov23773497;
extern T0* ge1451ov23773498;
extern T0* ge1451ov23773499;
extern T0* ge1451ov23773403;
extern T0* ge1451ov23773500;
extern T0* ge1450ov23757582;
extern T0* ge1450ov23757089;
extern T0* ge1450ov23757583;
extern T0* ge1450ov23757090;
extern T0* ge1450ov23757362;
extern T0* ge1450ov23756874;
extern T0* ge1450ov23757543;
extern T0* ge1450ov23757050;
extern T0* ge1227ov20104251;
extern T0* ge1227ov20104253;
extern T0* ge1227ov20104254;
extern T0* ge1450ov23757573;
extern T0* ge1450ov23757257;
extern T0* ge1450ov23757080;
extern T0* ge1220ov19988490;
extern T0* ge1220ov19988489;
extern T0* ge1450ov23757571;
extern T0* ge1450ov23757256;
extern T0* ge1450ov23757078;
extern T0* ge1450ov23757570;
extern T0* ge1450ov23757077;
extern T0* ge1220ov19988491;
extern T0* ge1450ov23757574;
extern T0* ge1450ov23757081;
extern T0* ge1450ov23757572;
extern T0* ge1450ov23757079;
extern T0* ge1450ov23757594;
extern T0* ge1450ov23757273;
extern T0* ge1450ov23757101;
extern T0* ge1450ov23757593;
extern T0* ge1450ov23757272;
extern T0* ge1450ov23757100;
extern T0* ge1451ov23773373;
extern T0* ge1451ov23773361;
extern T0* ge1451ov23773674;
extern T0* ge1451ov23773385;
extern T0* ge1451ov23773651;
extern T0* ge1450ov23757526;
extern T0* ge1450ov23757035;
extern T0* ge1450ov23757522;
extern T0* ge1450ov23757237;
extern T0* ge1450ov23757031;
extern T0* ge1450ov23757523;
extern T0* ge1450ov23757032;
extern T0* ge1450ov23757424;
extern T0* ge1450ov23757190;
extern T0* ge1450ov23756934;
extern T0* ge1450ov23757447;
extern T0* ge1450ov23757195;
extern T0* ge1450ov23756956;
extern T0* ge1450ov23757524;
extern T0* ge1450ov23757033;
extern T0* ge1450ov23757315;
extern T0* ge1450ov23757148;
extern T0* ge1450ov23756827;
extern T0* ge1450ov23757314;
extern T0* ge1450ov23756826;
extern T0* ge1450ov23757313;
extern T0* ge1450ov23757147;
extern T0* ge1450ov23756825;
extern T0* ge1450ov23757549;
extern T0* ge1450ov23757056;
extern T0* ge1450ov23757317;
extern T0* ge1450ov23756829;
extern T0* ge1450ov23757318;
extern T0* ge1450ov23756830;
extern T0* ge1450ov23757312;
extern T0* ge1450ov23757146;
extern T0* ge1450ov23756824;
extern T0* ge1450ov23757541;
extern T0* ge1450ov23757246;
extern T0* ge1450ov23757048;
extern T0* ge1450ov23757546;
extern T0* ge1450ov23757053;
extern T0* ge1451ov23773660;
extern T0* ge1450ov23757548;
extern T0* ge1450ov23757055;
extern T0* ge1450ov23756866;
extern T0* ge1450ov23757293;
extern T0* ge1450ov23757134;
extern T0* ge1450ov23756805;
extern T0* ge1450ov23757363;
extern T0* ge1450ov23756875;
extern T0* ge1450ov23757498;
extern T0* ge1450ov23757221;
extern T0* ge1450ov23757007;
extern T0* ge1450ov23757496;
extern T0* ge1450ov23757005;
extern T0* ge1450ov23757494;
extern T0* ge1450ov23757003;
extern T0* ge1450ov23757493;
extern T0* ge1450ov23757002;
extern T0* ge1450ov23757519;
extern T0* ge1450ov23757235;
extern T0* ge1450ov23757028;
extern T0* ge1450ov23757521;
extern T0* ge1450ov23757236;
extern T0* ge1450ov23757030;
extern T0* ge1450ov23757511;
extern T0* ge1450ov23757230;
extern T0* ge1450ov23757020;
extern T0* ge1450ov23757565;
extern T0* ge1450ov23757072;
extern T0* ge1450ov23757497;
extern T0* ge1450ov23757006;
extern T0* ge1450ov23757495;
extern T0* ge1450ov23757004;
extern T0* ge1450ov23757492;
extern T0* ge1450ov23757001;
extern T0* ge1450ov23757491;
extern T0* ge1450ov23757000;
extern T0* ge1450ov23757515;
extern T0* ge1450ov23757024;
extern T0* ge1450ov23757510;
extern T0* ge1450ov23757019;
extern T0* ge1450ov23757550;
extern T0* ge1450ov23757057;
extern T0* ge1450ov23757499;
extern T0* ge1450ov23757222;
extern T0* ge1450ov23757008;
extern T0* ge1450ov23757500;
extern T0* ge1450ov23757009;
extern T0* ge1450ov23757527;
extern T0* ge1450ov23757239;
extern T0* ge1450ov23757036;
extern T0* ge1450ov23757603;
extern T0* ge1450ov23757281;
extern T0* ge1450ov23757110;
extern T0* ge1450ov23757604;
extern T0* ge1450ov23757111;
extern T0* ge1450ov23757535;
extern T0* ge1450ov23757243;
extern T0* ge1450ov23757042;
extern T0* ge1450ov23757534;
extern T0* ge1450ov23757242;
extern T0* ge1450ov23757041;
extern T0* ge1450ov23757590;
extern T0* ge1450ov23757269;
extern T0* ge1450ov23757097;
extern T0* ge1450ov23757552;
extern T0* ge1450ov23757248;
extern T0* ge1450ov23757059;
extern T0* ge1450ov23757459;
extern T0* ge1450ov23756968;
extern T0* ge1450ov23757614;
extern T0* ge1450ov23757285;
extern T0* ge1450ov23757121;
extern T0* ge1450ov23757612;
extern T0* ge1450ov23757119;
extern T0* ge1450ov23757613;
extern T0* ge1450ov23757120;
extern T0* ge1450ov23757609;
extern T0* ge1450ov23757283;
extern T0* ge1450ov23757116;
extern T0* ge1450ov23757607;
extern T0* ge1450ov23757114;
extern T0* ge1450ov23757608;
extern T0* ge1450ov23757115;
extern T0* ge1450ov23757610;
extern T0* ge1450ov23757284;
extern T0* ge1450ov23757117;
extern T0* ge1450ov23757611;
extern T0* ge1450ov23757118;
extern T0* ge1450ov23757605;
extern T0* ge1450ov23757282;
extern T0* ge1450ov23757112;
extern T0* ge1450ov23757606;
extern T0* ge1450ov23757113;
extern T0* ge1450ov23757578;
extern T0* ge1450ov23757260;
extern T0* ge1450ov23757085;
extern T0* ge1227ov20104172;
extern T0* ge1227ov20104184;
extern T0* ge1450ov23757577;
extern T0* ge1450ov23757084;
extern T0* ge1450ov23757414;
extern T0* ge1450ov23756924;
extern T0* ge1450ov23757415;
extern T0* ge1450ov23756925;
extern T0* ge1450ov23757297;
extern T0* ge1450ov23756809;
extern T0* ge1450ov23757417;
extern T0* ge1450ov23757186;
extern T0* ge1450ov23756927;
extern T0* ge1450ov23757410;
extern T0* ge1450ov23757182;
extern T0* ge1450ov23756920;
extern T0* ge1450ov23757412;
extern T0* ge1450ov23757184;
extern T0* ge1450ov23756922;
extern T0* ge1450ov23757542;
extern T0* ge1450ov23757049;
extern T0* ge1450ov23757364;
extern T0* ge1450ov23756876;
extern T0* ge1450ov23757506;
extern T0* ge1450ov23757227;
extern T0* ge1450ov23757015;
extern T0* ge1450ov23757505;
extern T0* ge1450ov23757226;
extern T0* ge1450ov23757014;
extern T0* ge1450ov23757503;
extern T0* ge1450ov23757225;
extern T0* ge1450ov23757012;
extern T0* ge1450ov23757504;
extern T0* ge1450ov23757013;
extern T0* ge1450ov23757502;
extern T0* ge1450ov23757224;
extern T0* ge1450ov23757011;
extern T0* ge1450ov23757501;
extern T0* ge1450ov23757223;
extern T0* ge1450ov23757010;
extern T0* ge1450ov23757507;
extern T0* ge1450ov23757229;
extern T0* ge1450ov23757016;
extern T0* ge1450ov23757588;
extern T0* ge1450ov23757266;
extern T0* ge1450ov23757095;
extern T0* ge1451ov23773384;
extern T0* ge1451ov23773387;
extern T0* ge1451ov23773646;
extern T0* ge1451ov23773431;
extern T0* ge1450ov23757480;
extern T0* ge1450ov23757215;
extern T0* ge1450ov23756989;
extern T0* ge1450ov23757481;
extern T0* ge1450ov23756990;
extern T0* ge1450ov23757479;
extern T0* ge1450ov23757214;
extern T0* ge1450ov23756988;
extern T0* ge1451ov23773435;
extern T0* ge1450ov23757299;
extern T0* ge1450ov23757138;
extern T0* ge1450ov23756811;
extern T0* ge1450ov23757300;
extern T0* ge1450ov23757139;
extern T0* ge1450ov23756812;
extern T0* ge1450ov23757450;
extern T0* ge1450ov23757198;
extern T0* ge1450ov23756959;
extern T0* ge1450ov23757347;
extern T0* ge1450ov23757165;
extern T0* ge1450ov23756859;
extern T0* ge1450ov23757348;
extern T0* ge1450ov23756860;
extern T0* ge1450ov23757452;
extern T0* ge1450ov23757199;
extern T0* ge1450ov23756961;
extern T0* ge1450ov23757453;
extern T0* ge1450ov23756962;
extern T0* ge1450ov23757544;
extern T0* ge1450ov23757051;
extern T0* ge1450ov23757451;
extern T0* ge1450ov23756960;
extern T0* ge1450ov23757454;
extern T0* ge1450ov23757200;
extern T0* ge1450ov23756963;
extern T0* ge1450ov23757416;
extern T0* ge1450ov23756926;
extern T0* ge1450ov23757411;
extern T0* ge1450ov23757183;
extern T0* ge1450ov23756921;
extern T0* ge1450ov23757311;
extern T0* ge1450ov23756823;
extern T0* ge1450ov23757457;
extern T0* ge1450ov23756966;
extern T0* ge1450ov23757624;
extern T0* ge1450ov23757289;
extern T0* ge1450ov23757131;
extern T0* ge1450ov23757622;
extern T0* ge1450ov23757129;
extern T0* ge1450ov23757623;
extern T0* ge1450ov23757130;
extern T0* ge1450ov23757619;
extern T0* ge1450ov23757287;
extern T0* ge1450ov23757126;
extern T0* ge1450ov23757617;
extern T0* ge1450ov23757124;
extern T0* ge1450ov23757618;
extern T0* ge1450ov23757125;
extern T0* ge1450ov23757620;
extern T0* ge1450ov23757288;
extern T0* ge1450ov23757127;
extern T0* ge1450ov23757621;
extern T0* ge1450ov23757128;
extern T0* ge1450ov23757615;
extern T0* ge1450ov23757286;
extern T0* ge1450ov23757122;
extern T0* ge1450ov23757616;
extern T0* ge1450ov23757123;
extern T0* ge1684ov27590668;
extern T0* ge1684ov27590669;
extern T0* ge396ov5980161;
extern T0* ge394ov5980161;
extern T0* ge381ov5980161;
extern T0* ge313ov5128215;
extern T0* ge313ov5128216;
extern T0* ge313ov5128217;
extern T0* ge1230ov20152331;
extern T0* ge1227ov20104245;
extern T0* ge1227ov20104246;
extern T0* ge1227ov20104226;
extern T0* ge1227ov20104242;
extern T0* ge1227ov20104230;
extern T0* ge1227ov20104231;
extern T0* ge1227ov20104232;
extern T0* ge1227ov20104233;
extern T0* ge1227ov20104227;
extern T0* ge1227ov20104234;
extern T0* ge1227ov20104235;
extern T0* ge1227ov20104236;
extern T0* ge1227ov20104237;
extern T0* ge1227ov20104228;
extern T0* ge1227ov20104243;
extern T0* ge1227ov20104238;
extern T0* ge1227ov20104239;
extern T0* ge1227ov20104240;
extern T0* ge1227ov20104229;
extern T0* ge1227ov20104241;
extern T0* ge1227ov20104244;
extern T0* ge776ov12713996;
extern T0* ge827ov13549630;
extern T0* ge827ov13549628;
extern T0* ge785ov12861445;
extern T0* ge785ov12861446;
extern T0* ge785ov12861447;
extern T0* ge827ov13549619;
extern T0* ge827ov13549631;
extern T0* ge1715ov28098563;
extern T0* ge1715ov28098565;
extern T0* ge1252ov20512775;
extern T0* ge1227ov20104205;
extern T0* ge1227ov20104221;
extern T0* ge1227ov20104209;
extern T0* ge1227ov20104210;
extern T0* ge1227ov20104211;
extern T0* ge1227ov20104212;
extern T0* ge1227ov20104206;
extern T0* ge1227ov20104213;
extern T0* ge1227ov20104214;
extern T0* ge1227ov20104215;
extern T0* ge1227ov20104216;
extern T0* ge1227ov20104207;
extern T0* ge1227ov20104222;
extern T0* ge1227ov20104217;
extern T0* ge1227ov20104218;
extern T0* ge1227ov20104219;
extern T0* ge1227ov20104208;
extern T0* ge1271ov20824067;
extern T0* ge1227ov20104224;
extern T0* ge1227ov20104225;
extern T0* ge1227ov20104223;
extern T0* ge1259ov20627459;
extern T0* ge1598ov11485188;
extern T0* ge1584ov11485188;
extern T0* ge1590ov11485188;
extern T0* ge1589ov11485188;
extern T0* ge1588ov11485188;
extern T0* ge1579ov11485188;
extern T0* ge1578ov11485188;
extern T0* ge1595ov11485188;
extern T0* ge1608ov11485188;
extern T0* ge707ov11485188;
extern T0* ge706ov11485188;
extern T0* ge700ov11485188;
extern T0* ge704ov11485188;
extern T0* ge711ov11485188;
extern T0* ge699ov11485188;
extern T0* ge391ov6406154;
extern T0* ge378ov6193162;
extern T0* geic23773185;
extern T0* geic23773186;
extern T0* geic23773187;
extern T0* geic12730369;
extern void GE_init_const1(void);
extern void GE_init_const2(void);
extern void GE_init_const3(void);
extern void GE_init_const4(void);
extern void GE_init_const5(void);
extern void GE_init_const6(void);
extern void GE_init_const7(void);
extern void GE_init_const8(void);
extern void GE_init_const9(void);
extern void GE_init_const10(void);
extern void GE_init_const11(void);
extern void GE_init_const12(void);
extern void GE_init_const13(void);
extern void GE_init_const14(void);
extern void GE_init_const15(void);
extern void GE_init_const16(void);
extern void GE_init_const17(void);
extern void GE_init_const18(void);
extern void GE_init_const19(void);
extern void GE_init_const20(void);
extern void GE_init_const21(void);
extern void GE_init_const22(void);
extern void GE_init_const(void);

#ifdef __cplusplus
}
#endif


/*
	description:

		"C functions used to implement class C_DATE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_TIME_H
#define GE_TIME_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#if defined _XOPEN_UNIX || defined __USE_XOPEN || defined __USE_BSD
#define HAS_GETTIMEOFDAY
#else
#ifndef WIN32
#define HAS_GETTIMEOFDAY
#endif
#endif

#ifdef HAS_GETTIMEOFDAY
/*
	OpenBSD does not support 'ftime' unless -lcompat is specified.
	Use the recommended XSI (X/Open System Interface) extension instead.
*/
#include <sys/time.h>
#include <sys/types.h>
#define GE_ftime(p) gettimeofday((struct timeval*)(p),((void*)0))
#define GE_timebsz sizeof(struct timeval)
#define GE_timebmillitm(p) (((struct timeval*)(p))->tv_usec/1000)
#define GE_timebtime(p) ((struct timeval*)(p))->tv_sec
#else
#include <sys/timeb.h>
extern void ftime(struct timeb *); /* Needed for lcc-win32 */
#define GE_ftime(p) ftime((struct timeb*)(p))
#define GE_timebsz sizeof(struct timeb)
#define GE_timebmillitm(p) ((struct timeb*)(p))->millitm
#define GE_timebtime(p) ((struct timeb*)(p))->time
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CECIL_H
#define EIF_CECIL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void (*EIF_PROCEDURE)(EIF_REFERENCE, ...);
#define EIF_PROC EIF_PROCEDURE
typedef EIF_INTEGER_32 (*EIF_INTEGER_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Integer 32 bits */
#define EIF_INTEGER_FUNCTION EIF_INTEGER_32_FUNCTION
typedef EIF_REFERENCE (*EIF_REFERENCE_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Reference */
typedef EIF_POINTER (*EIF_POINTER_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Pointer */
typedef EIF_BOOLEAN (*EIF_BOOLEAN_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Boolean */
typedef EIF_CHARACTER_8 (*EIF_CHARACTER_8_FUNCTION)(EIF_REFERENCE, ...); /* Returns char */
#define EIF_CHARACTER_FUNCTION EIF_CHARACTER_8_FUNCTION
typedef EIF_REAL_64 (*EIF_REAL_64_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Double */
#define EIF_DOUBLE_FUNCTION EIF_REAL_64_FUNCTION
typedef EIF_REAL_32 (*EIF_REAL_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Real */
#define EIF_REAL_FUNCTION EIF_REAL_32_FUNCTION

extern EIF_PROCEDURE eif_procedure(char* rout, EIF_TYPE_ID cid);
#define eif_proc eif_procedure /* Use `eif_procedure' instead */
extern EIF_INTEGER_FUNCTION eif_integer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REFERENCE_FUNCTION eif_reference_function(char* rout, EIF_TYPE_ID cid);
extern EIF_POINTER_FUNCTION eif_pointer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_BOOLEAN_FUNCTION eif_boolean_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REAL_64_FUNCTION eif_real_64_function(char* rout, EIF_TYPE_ID cid);
#define eif_double_function(rout,cid) eif_real_64_function((rout),(cid))
extern EIF_REAL_32_FUNCTION eif_real_32_function(char* rout, EIF_TYPE_ID cid);
#define eif_real_function(rout,cid) eif_real_32_function((rout),(cid))
extern EIF_CHARACTER_8_FUNCTION eif_character_8_function(char* rout, EIF_TYPE_ID cid);
#define eif_character_function(rout,cid) eif_character_8_function((rout),(cid))
extern EIF_OBJECT eif_create(EIF_TYPE_ID cid);
extern EIF_TYPE_ID eif_type_id(char* type_string);
extern EIF_INTEGER eifaddr_offset(EIF_REFERENCE object, char *name, int * const ret);
#define eif_string(s) RTMS(s)
#define makestr(s,c) RTMS_EX((s),(c))
#define eifaddr(object,name,ret) ((void *) ((char *) object + eifaddr_offset (object, name, ret)))
#define eif_field(object,name,type) *(type *)(eifaddr(object,name, NULL)) /* Obsolete. Use "eif_attribute" instead. */
#define eif_attribute(object,name,type,ret) *(type *)(eifaddr(object,name,ret)) /* Returns the attribute of an object. Return status in "ret".*/

/* Miscellaneous useful functions. */

/* Make an Eiffel array from a C array:
 * `eif_array' is the direct reference to the Eiffel array.
 * `c_array' is the C array.
 * `nelts' the number of elements to copy in the eiffel array, it has to
 * be equal to `eif_array.count'.
 * type is an Eiffel type.
 */
#define eif_make_from_c(eif_array, c_array, nelts, type) \
	{ \
		EIF_REFERENCE area = eif_field(eif_array, "area", EIF_REFERENCE); \
		memcpy((type *)area, c_array, nelts * sizeof(type));\
	}

#define eif_type eiftype /* Dynamic type ID */
extern EIF_TYPE_ID eiftype(EIF_OBJECT object); /* Give dynamic type of EIF_OBJECT. Obsolete, use "eif_type_by_object". */
extern EIF_TYPE_ID eif_type_by_reference(EIF_REFERENCE object);
extern EIF_TYPE_INDEX eif_gen_param_id(EIF_TYPE_INDEX dftype, uint32_t pos);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_PLUG_H
#define EIF_PLUG_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int nstcall;	/* Nested call global variable: signals a nested call and
					 * trigger an invariant check in generated C routines  */

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement Thread support"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_THREADS_H
#define EIF_THREADS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef EIF_CECIL_H
#include "eif_cecil.h"
#endif
#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifdef GE_USE_THREADS
#ifndef GE_THREAD_H
#include "ge_thread.h"
#endif
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifndef GE_USE_THREADS

/*
 * Empty stubs for EiffelThread library so that it may be compiled against a non-multithreaded run-time.
 */

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() NULL

/* THREAD_CONTROL */
#define eif_thr_yield()
#define eif_thr_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj, init_func, set_terminated_func, attr)
#define eif_thr_wait(obj,get_terminated)
#define eif_thr_wait_with_timeout(obj,get_terminated,tms) EIF_TRUE
#define eif_thr_last_thread() NULL
#define eif_thr_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() 0
#define eif_thr_min_priority() 0
#define eif_thr_max_priority() 0

/* MUTEX */
#define eif_thr_mutex_create() NULL
#define eif_thr_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) EIF_TRUE
#define eif_thr_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() NULL
#define eif_thr_cond_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr)
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) 1
#define eif_thr_cond_destroy(a_cond_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(a_count) NULL
#define eif_thr_sem_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) EIF_TRUE
#define eif_thr_sem_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() NULL
#define eif_thr_rwl_rdlock(a_read_write_lock_pointer)
#define eif_thr_rwl_unlock(a_read_write_lock_pointer)
#define eif_thr_rwl_wrlock(a_read_write_lock_pointer)
#define eif_thr_rwl_destroy(a_read_write_lock_pointer)

#else

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() GE_thread_id()

/* THREAD_CONTROL */
#define eif_thr_yield() GE_thread_yield()
#define eif_thr_join_all() GE_thread_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj,init_func,set_terminated_func,attr) GE_thread_create_with_attr((current_obj),(void (*)(EIF_REFERENCE))(init_func),(void (*)(EIF_REFERENCE,EIF_BOOLEAN))(set_terminated_func),(EIF_THR_ATTR_TYPE*)(attr))
#define eif_thr_wait(obj,get_terminated) GE_thread_wait((obj),(EIF_BOOLEAN (*)(EIF_REFERENCE))(get_terminated))
#define eif_thr_wait_with_timeout(obj,get_terminated,tms) GE_thread_wait_with_timeout((obj),(EIF_BOOLEAN (*)(EIF_REFERENCE))(get_terminated),(tms))
#define eif_thr_last_thread() GE_last_thread_created()
#define eif_thr_exit() GE_thread_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() GE_thread_default_priority()
#define eif_thr_min_priority() GE_thread_min_priority()
#define eif_thr_max_priority() GE_thread_max_priority()

/* MUTEX */
#define eif_thr_mutex_create() GE_mutex_create()
#define eif_thr_mutex_lock(a_mutex_pointer) GE_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) GE_mutex_try_lock(a_mutex_pointer)
#define eif_thr_mutex_unlock(a_mutex_pointer) GE_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer) GE_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() GE_condition_variable_create()
#define eif_thr_cond_broadcast(a_cond_ptr) GE_condition_variable_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr) GE_condition_variable_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr) GE_condition_variable_wait((a_cond_ptr),(a_mutex_ptr))
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) GE_condition_variable_wait_with_timeout((a_cond_ptr),(a_mutex_ptr),(a_timeout))
#define eif_thr_cond_destroy(a_cond_ptr) GE_condition_variable_destroy(a_cond_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(a_count) GE_semaphore_create(a_count)
#define eif_thr_sem_wait(a_sem_pointer) GE_semaphore_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer) GE_semaphore_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) GE_semaphore_try_wait(a_sem_pointer)
#define eif_thr_sem_destroy(a_sem_pointer) GE_semaphore_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() GE_read_write_lock_create()
#define eif_thr_rwl_rdlock(a_read_write_lock_pointer) GE_read_write_lock_read_lock(a_read_write_lock_pointer)
#define eif_thr_rwl_unlock(a_read_write_lock_pointer) GE_read_write_lock_unlock(a_read_write_lock_pointer)
#define eif_thr_rwl_wrlock(a_read_write_lock_pointer) GE_read_write_lock_write_lock(a_read_write_lock_pointer)
#define eif_thr_rwl_destroy(a_read_write_lock_pointer) GE_read_write_lock_destroy(a_read_write_lock_pointer)

/* WEL */
#ifdef EIF_WINDOWS
#define eif_thr_create_wel_per_thread_data(a_size) GE_thread_create_wel_per_thread_data(a_size)
#endif

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CONSOLE_H
#define EIF_CONSOLE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER console_def(EIF_INTEGER file);
extern EIF_BOOLEAN console_eof(FILE* fp);
extern EIF_CHARACTER_8 console_separator(FILE* f);
extern void console_ps(FILE* f, char* str, EIF_INTEGER len);
extern void console_pr(FILE* f, EIF_REAL_32 number);
extern void console_pc(FILE* f, EIF_CHARACTER_8 c);
extern void console_pd(FILE* f, EIF_REAL_64 val);
extern void console_pi(FILE* f, EIF_INTEGER number);
extern void console_tnwl(FILE* f);
extern EIF_CHARACTER_8 console_readchar(FILE* f);
extern EIF_REAL_32 console_readreal(FILE* f);
extern EIF_INTEGER console_readint(FILE* f);
extern EIF_REAL_64 console_readdouble(FILE* f);
extern EIF_INTEGER console_readword(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER console_readline(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern void console_next_line(FILE* f);
extern EIF_INTEGER console_readstream(FILE* f, char* s, EIF_INTEGER bound);
extern void console_file_close (FILE* f);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class FILE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_FILE_H
#define EIF_FILE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <time.h>
#include <sys/stat.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Let's define the stat structure for our platforms. */
/* The definition is the same for both ANSI and Unicode versions on Windows. */
#ifdef EIF_WINDOWS
#	ifdef __LCC__
#		define rt_stat_buf	struct stat
#	elif defined EIF_64_BITS
#		define rt_stat_buf	struct _stat64
#	else
#		define rt_stat_buf	struct _stat64i32
#	endif
#else
#	define rt_stat_buf		struct stat
#endif

/*
 * Create directory `dirname'.
 */
extern void eif_file_mkdir(EIF_FILENAME dirname);

/*
 * Rename file `from' into `to'.
 */
extern void eif_file_rename(EIF_FILENAME from, EIF_FILENAME  to);

/*
 * Link file `from' into `to'.
 */
extern void eif_file_link(EIF_FILENAME from, EIF_FILENAME to);

/*
 * Delete file or directory `name'.
 */
extern void eif_file_unlink(EIF_FILENAME name);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_reopen(EIF_FILENAME name, int how, FILE *old);

/*
 * Close the file.
 */
extern void eif_file_close(FILE *fp);

/*
 * Flush data held in stdio buffer.
 */
extern void eif_file_flush(FILE *fp);

/*
 * Return the associated file descriptor.
 */
extern EIF_INTEGER eif_file_fd(FILE *f);

/*
 * Get a character from `f'.
 */
extern EIF_CHARACTER_8 eif_file_gc(FILE *f);

/*
 * Get a string from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters.
 */
extern EIF_INTEGER eif_file_gs(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Read min (bound, remaining bytes in file) characters into `s' and
 * return the number of characters read.
 */
extern EIF_INTEGER eif_file_gss(FILE *f, char *s, EIF_INTEGER bound);

/*
 * Get a word from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters. Any leading
 * spaces are skipped.
 */
extern EIF_INTEGER eif_file_gw(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Look ahead one character. If EOF, return 0.
 */
extern EIF_CHARACTER_8 eif_file_lh(FILE *f);

/*
 * Size of file `fp'.
 */
extern EIF_INTEGER eif_file_size(FILE *fp);

/*
 * Read upto next input line.
 */
extern void eif_file_tnil(FILE *f);

/*
 * Current position within file.
 */
extern EIF_INTEGER eif_file_tell(FILE *f);

/*
 * Touch file `name' by setting both access and modification time to the
 * current time stamp. This external function exists only because there
 * is no way within UNIX_FILE to get the current time stamp. Otherwise,
 * we could simply call file_utime.
 */
extern void eif_file_touch(EIF_FILENAME name);

/*
 * Modify the modification and/or the access time stored in the file's
 * inode. The 'how' parameter tells which attributes should be set.
 */
extern void eif_file_utime(EIF_FILENAME name, time_t stamp, int how);

/*
 * This is an encapsulation of the stat() system call. The routine either
 * succeeds and returns or fails and raises the appropriate exception.
 */
extern int eif_file_stat(EIF_FILENAME path, rt_stat_buf *buf, int follow);

/*
 * Change permissions of file `name', using an interface like chmod(1).
 * The flag is true if permissions are to be added, 0 to remove them.
 */
extern void eif_file_perm(EIF_FILENAME name, char *who, char *what, int flag);

/*
 * Change permission mode on file `path'.
 */
extern void eif_file_chmod(EIF_FILENAME path, int mode);

/*
 * Change the owner of the file to `uid'.
 */
extern void eif_file_chown(EIF_FILENAME name, int uid);

/*
 * Change the group of the file to `gid'.
 */
extern void eif_file_chgrp(EIF_FILENAME name, int gid);

/*
 * Put new_line onto `f'.
 */
extern void eif_file_tnwl(FILE *f);

/*
 * Append a copy of `other' to `f'.
 */
extern void eif_file_append(FILE *f, FILE *other, EIF_INTEGER l);

/*
 * Write string `str' on `f'.
 */
extern void eif_file_ps(FILE *f, char *str, EIF_INTEGER len);

/*
 * Write character `c' on `f'.
 */
extern void eif_file_pc(FILE *f, char c);

/*
 * Go to absolute position `pos' counted from start.
 */
extern void eif_file_go(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from end.
 */
extern void eif_file_recede(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from current position.
 */
extern void eif_file_move(FILE *f, EIF_INTEGER pos);

/*
 * End of file.
 */
extern EIF_BOOLEAN eif_file_feof(FILE *fp);

/*
 * Test whether file exists or not. If `name' represents a symbolic link,
 * it will check that pointed file does exist.
 */
extern EIF_BOOLEAN eif_file_exists(EIF_FILENAME name);

/*
 * Test whether file exists or not without following the symbolic link
 * if `name' represents one.
 */
extern EIF_BOOLEAN eif_file_path_exists(EIF_FILENAME name);

/*
 * Check whether access permission `op' are possible on file `name' using
 * real UID and real GID. This is probably only useful to setuid or setgid
 * programs.
 */
extern EIF_BOOLEAN eif_file_access(EIF_FILENAME name, EIF_INTEGER op);

/*
 * Check whether the file `path' may be created: we need write permissions
 * in the parent directory and there must not be any file bearing that name
 * with no write permissions...
 */
extern EIF_BOOLEAN eif_file_creatable(EIF_FILENAME path, EIF_INTEGER nbytes);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gi(FILE *f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_gr(FILE *f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gd(FILE *f);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pi(FILE *f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pr(FILE *f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pd(FILE *f, EIF_REAL_64 val);

/*
 * Size of the stat structure. This is used by the Eiffel side to create
 * the area (special object) which will play the role of a stat buffer
 * structure.
 */
extern EIF_INTEGER stat_size(void);

/*
 * Check file permissions using effective UID and effective GID. The
 * current permission mode is held in the st_mode field of the stat()
 * buffer structure `buf'.
 */
extern EIF_BOOLEAN eif_file_eaccess(rt_stat_buf *buf, int op);

/*
 * Perform the field dereferencing from the appropriate stat structure,
 * which Eiffel cannot do directly.
 */
extern EIF_INTEGER eif_file_info(rt_stat_buf *buf, int op);

/*
 * Return the Eiffel string filled in with the name associated with `uid'
 * if found in /etc/passwd. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_owner(int uid);

/*
 * Return the Eiffel string filled in with the name associated with `gid'
 * if found in /etc/group. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_group(int gid);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gib(FILE* f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_grb(FILE* f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gdb(FILE* f);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_binary_reopen(EIF_FILENAME name, int how, FILE* old);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pib(FILE* f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_prb(FILE* f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pdb(FILE* f, EIF_REAL_64 val);

/*
 * Modification time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_date(EIF_FILENAME  name);

/*
 * Access time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_access_date(EIF_FILENAME  name);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXCEPTIONS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EXCEPT_H
#define EIF_EXCEPT_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#include <errno.h>

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define EN_VOID		GE_EX_VOID			/* Feature applied to void reference */
#define EN_MEM		GE_EX_MEM			/* No more memory */
#define EN_PRE		GE_EX_PRE			/* Pre-condition violated */
#define EN_POST		GE_EX_POST			/* Post-condition violated */
#define EN_FLOAT	GE_EX_FLOAT			/* Floating point exception (signal SIGFPE) */
#define EN_CINV		GE_EX_CINV			/* Class invariant violated */
#define EN_CHECK	GE_EX_CHECK			/* Assertion violated */
#define EN_FAIL		GE_EX_FAIL			/* Routine failure */
#define EN_WHEN		GE_EX_WHEN			/* Unmatched inspect value */
#define EN_VAR		GE_EX_VAR			/* Non-decreasing loop variant */
#define EN_LINV		GE_EX_LINV			/* Loop invariant violated */
#define EN_SIG		GE_EX_SIG			/* Operating system signal */
#define EN_BYE		GE_EX_BYE			/* Eiffel run-time panic */
#define EN_RESC		GE_EX_RESC			/* Exception in rescue clause */
#define EN_OMEM		GE_EX_OMEM			/* Out of memory (cannot be ignored) */
#define EN_RES		GE_EX_RES			/* Resumption failed (retry did not succeed) */
#define EN_CDEF		GE_EX_CDEF			/* Create on deferred */
#define EN_EXT		GE_EX_EXT			/* External event */
#define EN_VEXP		GE_EX_VEXP			/* Void assigned to expanded */
#define EN_HDLR		GE_EX_HDLR			/* Exception in signal handler */
#define EN_IO		GE_EX_IO			/* I/O error */
#define EN_SYS		GE_EX_SYS			/* Operating system error */
#define EN_RETR		GE_EX_RETR			/* Retrieval error */
#define EN_PROG		GE_EX_PROG			/* Developer exception */
#define EN_FATAL	GE_EX_FATAL			/* Eiffel run-time fatal error */
#define EN_DOL		GE_EX_DOL			/* $ applied to melted feature */
#define EN_ISE_IO	GE_EX_ISE_IO		/* I/O error raised by the ISE Eiffel runtime */
#define EN_COM		GE_EX_COM			/* COM error raised by EiffelCOM runtime */
#define EN_RT_CHECK	GE_EX_RT_CHECK		/* Runtime check error such as out-of-bound array access */
#define EN_OLD		GE_EX_OLD			/* Old violation */
#define EN_SEL		GE_EX_SEL			/* Serialization failure */
#define EN_DIRTY	GE_EX_DIRTY			/* SCOOP processor dirty exception. */
#define EN_NEX		GE_EX_NEX			/* Number of internal exceptions */

/*
 * Raise an Eiffel exception.
 */
extern void eraise(const char* name, long code);

/*
 * Raise an Eiffel exception of the given code with no associated tag.
 */
extern void xraise(int code);

/*
 * Raise an "Operating system error" exception.
 */
extern void esys(void);

/*
 * As a special case, an I/O error is raised when a system call which is I/O bound fails.
 */
extern void eise_io(const char* tag);

/*
 * Raise a "No more memory" exception.
 */
extern void enomem(void);

/*
 * Raise EiffelCOM exception.
 */
extern void com_eraise(const char* tag, long num);

/*
 * Terminate execution with exit status `code',
 * without triggering an exception.
 */
extern void esdie(int code);

/*
 * Exception tag associated with `code'.
 * This is a duplication from Eiffel classes, but still used for trace printing and in EiffelCom.
 */
extern EIF_REFERENCE eename(long except);

/*
 * Is exception `ex' defined?
 * Used in EiffelCOM.
 */
extern char eedefined(long ex);

/*
 * Enable/diable printing of the exception trace.
 * Per thead information.
 */
extern void eetrace(char b);

/*
 * Is current execution during rescue?
 */
extern EIF_BOOLEAN eif_is_in_rescue(void);

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void set_windows_exception_filter(void);
#endif

/*
 * Used in EiffelCOM.
 */
#define echval GE_current_context()->exception_code
#define echtg GE_current_context()->exception_tag

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class REAL"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2019, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_REAL_H
#define GE_REAL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <math.h>

#ifndef GE_power
#define GE_power(x,y) pow((x),(y))
#endif
#define GE_ceiling(x) ceil(x)
#define GE_floor(x) floor(x)

extern EIF_NATURAL_32 GE_real_32_to_bits (EIF_REAL_32 v);
extern EIF_NATURAL_64 GE_real_64_to_bits (EIF_REAL_64 v);
extern EIF_REAL_32 GE_real_32_from_bits (EIF_NATURAL_32 v);
extern EIF_REAL_64 GE_real_64_from_bits (EIF_NATURAL_64 v);

#define GE_real_32_is_nan(v) ((v) != (v) ? EIF_TRUE : ((GE_real_32_to_bits(v) & ~GE_nat32(0x80000000)) > GE_nat32(0x7FF00000)))
#define GE_real_64_is_nan(v) ((v) != (v) ? EIF_TRUE : ((GE_real_64_to_bits(v) & ~GE_nat64(0x8000000000000000)) > GE_nat64(0x7FF0000000000000)))
#define GE_real_32_is_negative_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0xFF800000))
#define GE_real_64_is_negative_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0xFFF0000000000000))
#define GE_real_32_is_positive_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0x7F800000))
#define GE_real_64_is_positive_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0x7FF0000000000000))
#define GE_real_32_nan GE_real_32_from_bits(GE_nat32(0x7FC00000))
#define GE_real_64_nan GE_real_64_from_bits(GE_nat64(0x7FF8000000000000))
#define GE_real_32_negative_infinity GE_real_32_from_bits(GE_nat32(0xFF800000))
#define GE_real_64_negative_infinity GE_real_64_from_bits(GE_nat64(0xFFF0000000000000))
#define GE_real_32_positive_infinity GE_real_32_from_bits(GE_nat32(0x7F800000))
#define GE_real_64_positive_infinity GE_real_64_from_bits(GE_nat64(0x7FF0000000000000))
#define GE_real_32_is_equal(v1,v2) ((v1) == (v1) ? (v1) == (v2) : (v2) != (v2))
#define GE_real_64_is_equal(v1,v2) ((v1) == (v1) ? (v1) == (v2) : (v2) != (v2))
#define GE_real_32_is_less(v1,v2) ((v1) == (v1) ? (v1) < (v2) : (v2) == (v2))
#define GE_real_64_is_less(v1,v2) ((v1) == (v1) ? (v1) < (v2) : (v2) == (v2))
#define GE_real_32_ieee_is_equal(v1,v2) (v1) == (v2)
#define GE_real_64_ieee_is_equal(v1,v2) (v1) == (v2)
#define GE_real_32_ieee_is_greater(v1,v2) isgreater(v1,v2)
#define GE_real_64_ieee_is_greater(v1,v2) isgreater(v1,v2)
#define GE_real_32_ieee_is_greater_equal(v1,v2) isgreaterequal(v1,v2)
#define GE_real_64_ieee_is_greater_equal(v1,v2) isgreaterequal(v1,v2)
#define GE_real_32_ieee_is_less(v1,v2) isless(v1,v2)
#define GE_real_64_ieee_is_less(v1,v2) isless(v1,v2)
#define GE_real_32_ieee_is_less_equal(v1,v2) islessequal(v1,v2)
#define GE_real_64_ieee_is_less_equal(v1,v2) islessequal(v1,v2)
#define GE_real_32_ieee_maximum_number(v1,v2) fmaxf(v1,v2)
#define GE_real_64_ieee_maximum_number(v1,v2) fmax(v1,v2)
#define GE_real_32_ieee_minimum_number(v1,v2) fminf(v1,v2)
#define GE_real_64_ieee_minimum_number(v1,v2) fmin(v1,v2)

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_GLOBALS_H
#define EIF_GLOBALS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif
#ifndef EIF_THREADS_H
#include "eif_threads.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef GE_USE_THREADS
#define EIF_GET_CONTEXT \
	GE_context* eif_globals = GE_current_context();
#else
#define EIF_GET_CONTEXT
#endif

#define GTCX EIF_GET_CONTEXT

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C declarations for the ISE Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EIFFEL_H
#define EIF_EIFFEL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_STRING_H
#include "ge_string.h"
#endif
#ifndef EIF_GLOBALS_H
#include "eif_globals.h"
#endif
#ifndef EIF_EXCEPT_H
#include "eif_except.h"
#endif

#endif
/*
	description:

		"C functions used to access DLLs"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_DLL_H
#define GE_DLL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

#include <windows.h>

/* DLL declarations */
#define GE_load_dll(name) LoadLibraryA((LPCSTR)(name))

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_MISC_H
#define EIF_MISC_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_DLL_H
#include "ge_dll.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER eif_system(EIF_NATIVE_CHAR* s);
extern void eif_system_asynchronous(EIF_NATIVE_CHAR* cmd);
extern void eif_sleep(EIF_INTEGER_64);

#ifdef EIF_WINDOWS
/* DLL declarations */
#define eif_load_dll(name) GE_load_dll(name)
#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class DIRECTORY"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_DIR_H
#define EIF_DIR_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER eif_dir_open(EIF_FILENAME dirname);
extern EIF_POINTER eif_dir_next(EIF_POINTER dir);
extern EIF_POINTER eif_dir_rewind(EIF_POINTER d, EIF_FILENAME dir_name);
extern void eif_dir_close(EIF_POINTER dir);
extern EIF_BOOLEAN eif_dir_exists(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_readable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_writable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_executable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_deletable(EIF_FILENAME name);
extern EIF_CHARACTER_8 eif_dir_separator(void);
extern EIF_INTEGER eif_dir_current(EIF_FILENAME a_buffer, EIF_INTEGER a_count);
extern EIF_INTEGER eif_chdir(EIF_FILENAME path);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class COM_FAILURE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_COM_FAILURE_H
#define GE_COM_FAILURE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER GE_ccom_hresult(EIF_POINTER an_exception_code);

extern EIF_INTEGER GE_ccom_hresult_code(EIF_INTEGER an_hresult);

extern EIF_INTEGER GE_ccom_hresult_facility(EIF_INTEGER an_hresult);

/*
 * Get text from error `a_code'. It is up to the caller to free
 * the returned buffer using `GE_ccom_local_free'.
 */
extern EIF_POINTER GE_ccom_error_text(EIF_INTEGER a_code);

/*
 * Number of characters in `ptr'.
 */
extern EIF_INTEGER_32 GE_ccom_strlen(EIF_POINTER ptr);

/*
 * Number of bytes occupied by a TCHAR.
 */
extern EIF_INTEGER_32 GE_ccom_character_size(void);

/*
 * Free `a_ptr' using LocalFree.
 */
extern void GE_ccom_local_free(EIF_POINTER a_ptr);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		""Part of ISE Eiffel runtime. Needed to compile class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_SYSTEM_H
#define EIF_SYSTEM_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef EIF_WINDOWS
#include "Winbase.h"
#elif defined(EIF_VMS) || defined(EIF_MACOSX)
#include "sysctl.conf"
#else
#include <unistd.h>
#endif

#endif
#include <string.h>
#include <stdlib.h>
#include <time.h>
