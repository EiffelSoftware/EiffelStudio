
system

	tutorial

root

	tutorial (main): "make"

default

--	precompiled ("$ISE_LIBRARY/precomp/spec/$ISE_PLATFORM/vision2")
--	precompiled ("$ISE_LIBRARY/precomp/spec/$ISE_PLATFORM/base")
	assertion (all)

cluster

-- set this to point to the directory containing library and examples from cvs
dev:						"/home/king/local"

--------------- Tutorial clusters

tutorial(dev):					"$/examples/vision2/tutorial"
main (tutorial):				"$/main"
demo_items (tutorial):				"$/demo_items"
demo_windows (tutorial):			"$/demo_windows"
demo_tab (tutorial):				"$/demo_tabs"

-- EiffelBase:

base:						"$ISE_LIBRARY/library/base";
structures(base):				"$/structures";

kernel(base):					"$/kernel";
support(base):					"$/support";
access(structures):				"$/access";
cursors(structures):				"$/cursors";
cursor_tree(structures):			"$/cursor_tree";
dispenser(structures):				"$/dispenser";
iteration(structures):				"$/iteration";
list(structures):				"$/list";
set(structures):				"$/set";
sort(structures):				"$/sort";
storage(structures):				"$/storage";
table(structures):     				"$/table";
traversing(structures):				"$/traversing";
tree(structures):             			"$/tree";

                        
-- EiffelVision

vision(dev):					"$/library/vision2"

all components(vision):				"$/components";

	-- Interface
vision_i(vision):				"$/interface";
vision_support (vision_i):			"$/support";
vision_kernel (vision_i): 	       		"$/kernel";
vision_properties (vision_i):			"$/properties";
vision_items (vision_i):			"$/items";
vision_pnd (vision_i):				"$/pick_and_drop";
vision_figure (vision_i):			"$/figures";
vision_widgets (vision_i):        		"$/widgets";
vision_primitives (vision_widgets):     	"$/primitives";
vision_containers (vision_widgets):     	"$/containers";
vision_common_dialog (vision_widgets):		"$/common_dialogs";
vision_uncommon_widgets (vision_widgets):	"$/uncommon_widgets";

	-- Implementation Interface
vision_ii(vision):				"$/implementation/implementation_interface";
vision_ii_kernel (vision_ii):			"$/kernel";
vision_ii_support (vision_ii):			"$/support";
vision_ii_properties (vision_ii):   		"$/properties";
vision_ii_items (vision_ii):			"$/items";
vision_ii_pnd (vision_ii):			"$/pick_and_drop";
vision_ii_widgets (vision_ii):			"$/widgets";
vision_ii_primitives (vision_ii_widgets):	"$/primitives";
vision_ii_containers (vision_ii_widgets):	"$/containers";
vision_ii_common_dialog (vision_ii_widgets):    "$/common_dialogs";   
vision_ii_uncommon_widgets (vision_ii_widgets): "$/uncommon_widgets";


	-- Implementation clusters for x/GTK
vision_imp(vision):				"$/implementation/gtk";
vision_imp_kernel (vision_imp): 	       	"$/kernel";
vision_imp_support (vision_imp):		"$/support";
vision_imp_properties (vision_imp):		"$/properties";
vision_imp_items (vision_imp):			"$/items";
vision_imp_pnd (vision_imp):			"$/pick_and_drop";
vision_imp_widgets (vision_imp):        	"$/widgets";
vision_imp_primitives (vision_imp_widgets):     "$/primitives";
vision_imp_containers (vision_imp_widgets):     "$/containers";
vision_imp_common_dialog (vision_imp_widgets):	"$/common_dialogs";
vision_imp_uncommon_widgets (vision_imp_widgets):"$/uncommon_widgets";

external

	include_path:
		"$ISE_LIBRARY/library/vision2/implementation/gtk/Clib", "`gtk-config --cflags`";
	object:
		"$(ISE_LIBRARY)/library/vision2/implementation/gtk/spec/$(ISE_PLATFORM)/gtk_eiffel.o",
		"`gtk-config --libs`"

end
