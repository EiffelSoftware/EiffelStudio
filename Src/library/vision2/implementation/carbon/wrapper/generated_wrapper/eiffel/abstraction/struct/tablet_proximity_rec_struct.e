-- This file has been generated by EWG. Do not edit. Changes will be lost!

class TABLET_PROXIMITY_REC_STRUCT

inherit

	EWG_STRUCT

	TABLET_PROXIMITY_REC_STRUCT_EXTERNAL
		export
			{NONE} all
		end

create

	make_new_unshared,
	make_new_shared,
	make_unshared,
	make_shared

feature {ANY} -- Access

	sizeof: INTEGER is
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	vendorid: INTEGER is
			-- Access member `vendorID'
		require
			exists: exists
		do
			Result := get_vendorid_external (item)
		ensure
			result_correct: Result = get_vendorid_external (item)
		end

	set_vendorid (a_value: INTEGER) is
			-- Set member `vendorID'
		require
			exists: exists
		do
			set_vendorid_external (item, a_value)
		ensure
			a_value_set: a_value = vendorid
		end

	tabletid: INTEGER is
			-- Access member `tabletID'
		require
			exists: exists
		do
			Result := get_tabletid_external (item)
		ensure
			result_correct: Result = get_tabletid_external (item)
		end

	set_tabletid (a_value: INTEGER) is
			-- Set member `tabletID'
		require
			exists: exists
		do
			set_tabletid_external (item, a_value)
		ensure
			a_value_set: a_value = tabletid
		end

	pointerid: INTEGER is
			-- Access member `pointerID'
		require
			exists: exists
		do
			Result := get_pointerid_external (item)
		ensure
			result_correct: Result = get_pointerid_external (item)
		end

	set_pointerid (a_value: INTEGER) is
			-- Set member `pointerID'
		require
			exists: exists
		do
			set_pointerid_external (item, a_value)
		ensure
			a_value_set: a_value = pointerid
		end

	deviceid: INTEGER is
			-- Access member `deviceID'
		require
			exists: exists
		do
			Result := get_deviceid_external (item)
		ensure
			result_correct: Result = get_deviceid_external (item)
		end

	set_deviceid (a_value: INTEGER) is
			-- Set member `deviceID'
		require
			exists: exists
		do
			set_deviceid_external (item, a_value)
		ensure
			a_value_set: a_value = deviceid
		end

	systemtabletid: INTEGER is
			-- Access member `systemTabletID'
		require
			exists: exists
		do
			Result := get_systemtabletid_external (item)
		ensure
			result_correct: Result = get_systemtabletid_external (item)
		end

	set_systemtabletid (a_value: INTEGER) is
			-- Set member `systemTabletID'
		require
			exists: exists
		do
			set_systemtabletid_external (item, a_value)
		ensure
			a_value_set: a_value = systemtabletid
		end

	vendorpointertype: INTEGER is
			-- Access member `vendorPointerType'
		require
			exists: exists
		do
			Result := get_vendorpointertype_external (item)
		ensure
			result_correct: Result = get_vendorpointertype_external (item)
		end

	set_vendorpointertype (a_value: INTEGER) is
			-- Set member `vendorPointerType'
		require
			exists: exists
		do
			set_vendorpointertype_external (item, a_value)
		ensure
			a_value_set: a_value = vendorpointertype
		end

	pointerserialnumber: INTEGER is
			-- Access member `pointerSerialNumber'
		require
			exists: exists
		do
			Result := get_pointerserialnumber_external (item)
		ensure
			result_correct: Result = get_pointerserialnumber_external (item)
		end

	set_pointerserialnumber (a_value: INTEGER) is
			-- Set member `pointerSerialNumber'
		require
			exists: exists
		do
			set_pointerserialnumber_external (item, a_value)
		ensure
			a_value_set: a_value = pointerserialnumber
		end

	uniqueid: INTEGER is
			-- Access member `uniqueID'
		require
			exists: exists
		do
			Result := get_uniqueid_external (item)
		ensure
			result_correct: Result = get_uniqueid_external (item)
		end

	set_uniqueid (a_value: INTEGER) is
			-- Set member `uniqueID'
		require
			exists: exists
		do
			set_uniqueid_external (item, a_value)
		ensure
			a_value_set: a_value = uniqueid
		end

	capabilitymask: INTEGER is
			-- Access member `capabilityMask'
		require
			exists: exists
		do
			Result := get_capabilitymask_external (item)
		ensure
			result_correct: Result = get_capabilitymask_external (item)
		end

	set_capabilitymask (a_value: INTEGER) is
			-- Set member `capabilityMask'
		require
			exists: exists
		do
			set_capabilitymask_external (item, a_value)
		ensure
			a_value_set: a_value = capabilitymask
		end

	pointertype: INTEGER is
			-- Access member `pointerType'
		require
			exists: exists
		do
			Result := get_pointertype_external (item)
		ensure
			result_correct: Result = get_pointertype_external (item)
		end

	set_pointertype (a_value: INTEGER) is
			-- Set member `pointerType'
		require
			exists: exists
		do
			set_pointertype_external (item, a_value)
		ensure
			a_value_set: a_value = pointertype
		end

	enterproximity: INTEGER is
			-- Access member `enterProximity'
		require
			exists: exists
		do
			Result := get_enterproximity_external (item)
		ensure
			result_correct: Result = get_enterproximity_external (item)
		end

	set_enterproximity (a_value: INTEGER) is
			-- Set member `enterProximity'
		require
			exists: exists
		do
			set_enterproximity_external (item, a_value)
		ensure
			a_value_set: a_value = enterproximity
		end

end
