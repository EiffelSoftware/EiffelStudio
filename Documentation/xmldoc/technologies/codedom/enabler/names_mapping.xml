<document output="codedom" title="Names Mappings">
	<meta_data/>
	<paragraph>
		Maybe the most striking difference when writing pages in Eiffel comes from the name of the .NET types and methods. 
		Because of different naming conventions, overloading and differences in identifier validity rules, .NET identifiers cannot 
		be mapped directly to Eiffel identifiers. As a consequence, the Eiffel compiler creates XML mapping files in the 
		<italic>Eiffel Metadata Cache</italic>. These files are created only once for each referenced assembly.
		
		<note>
			<bold>Note:</bold> The ASP.NET installation program pre-generates the Eiffel Metadata Cache for all 
			assemblies required by ASP.NET by default.
		</note>
		
		The name mapping algorithm is quite complex but it is possible to guess the Eiffel identifier from the .NET identifier in 
		most cases. The following simple steps can be followed to retrieve the Eiffel identifier corresponding to a .NET type:
		
		<list ordered="true">
			<item>
				Only the simple type name is used, the namespace isn't used by the 
				Eiffel identifier:<code_block>System.Xml.NameTable -> NameTable</code_block>
			</item>
			<item>
				Underscores are introduced in between words (prior to upper case letters other than the first 
				character):<code_block>NameTable -> Name_Table</code_block>
			</item>
			<item>
				Eiffel class names are always upper case: 
				<code_block>Name_Table -> NAME_TABLE</code_block>
			</item>
			<item>
				If the assembly containing the type is associated with a prefix in the Eiffel system then the 
				prefix gets prepended to the name:
				<code_block>NAME_TABLE -> XML_NAME_TABLE</code_block>
			</item>
		</list>
		
		The steps to follow to retrieve the Eiffel identifier corresponding to a .NET member are simpler:
		
		<list ordered="true">
			<item>
				For property getters, the "get_" prefix is removed: 
				<code_block>get_MaxOccursString -> MaxOccursString</code_block>
			</item>
			<item>
				Underscores are introduced in between words (prior to upper case letters other than the first 
				character):<code_block>MaxOccursString -> Max_Occurs_String</code_block>
			</item>
			<item>
				Eiffel feature names are always lower case: 
				<code_block>Max_Occurs_String -> max_occurs_string</code_block>
			</item>
		</list>
		
		Although these simplified steps will work in most cases there are certain .NET identifiers that require additional 
		manipulation to be translated into Eiffel. The 
		<link><label>Name Mapper</label><url>../tools/name_mapper.xml</url></link> 
		utility should be used when such cases arise.

		<seealso>
			<bold>See also:</bold> 
			<link>
				<url>../tools/name_mapper.xml</url>
				<label>Name Mapper</label>
			</link>
		</seealso>
	</paragraph>
</document>
