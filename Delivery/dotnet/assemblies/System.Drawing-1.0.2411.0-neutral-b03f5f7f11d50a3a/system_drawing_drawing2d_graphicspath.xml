<!DOCTYPE type SYSTEM "../type.dtd">
<class>
	<header>
		<modified>False</modified>
		<frozen>True</frozen>
		<expanded>False</expanded>
		<deferred>False</deferred>
		<generic>False</generic>
		<class_eiffel_name>SYSTEM_DRAWING_DRAWING2D_GRAPHICSPATH</class_eiffel_name>
		<alias>
			<simple_name>GraphicsPath</simple_name>
			<namespace>System.Drawing.Drawing2D</namespace>
			<assembly_name>System.Drawing</assembly_name>
			<assembly_version>1.0.2411.0</assembly_version>
			<assembly_culture>neutral</assembly_culture>
			<assembly_public_key>b03f5f7f11d50a3a</assembly_public_key>
		</alias>
		<inherit>
			<parent>
				<parent_name>SYSTEM_IDISPOSABLE</parent_name>
			</parent>
			<parent>
				<parent_name>SYSTEM_ICLONEABLE</parent_name>
			</parent>
			<parent>
				<parent_name>SYSTEM_MARSHALBYREFOBJECT</parent_name>
				<redefine>finalize</redefine>
			</parent>
		</inherit>
		<create_none>False</create_none>
	</header>
	<body>
		<initialization>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>False</method>
				<field>False</field>
				<creation_routine>True</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>make_graphicspath_2</feature_eiffel_name>
				<arguments>
					<argument>
						<argument_eiffel_name>pts</argument_eiffel_name>
						<argument_external_name>pts</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINTF]</argument_type>
						<argument_type_full_name>System.Drawing.PointF[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>types</argument_eiffel_name>
						<argument_external_name>types</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
				</arguments>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>False</method>
				<field>False</field>
				<creation_routine>True</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>make_graphicspath_3</feature_eiffel_name>
				<arguments>
					<argument>
						<argument_eiffel_name>pts</argument_eiffel_name>
						<argument_external_name>pts</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINTF]</argument_type>
						<argument_type_full_name>System.Drawing.PointF[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>types</argument_eiffel_name>
						<argument_external_name>types</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>fill_mode</argument_eiffel_name>
						<argument_external_name>fillMode</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_FILLMODE</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.FillMode</argument_type_full_name>
					</argument>
				</arguments>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>False</method>
				<field>False</field>
				<creation_routine>True</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>make_graphicspath_4</feature_eiffel_name>
				<arguments>
					<argument>
						<argument_eiffel_name>pts</argument_eiffel_name>
						<argument_external_name>pts</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINT]</argument_type>
						<argument_type_full_name>System.Drawing.Point[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>types</argument_eiffel_name>
						<argument_external_name>types</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
				</arguments>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>False</method>
				<field>False</field>
				<creation_routine>True</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>make_graphicspath</feature_eiffel_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>False</method>
				<field>False</field>
				<creation_routine>True</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>make_graphicspath_5</feature_eiffel_name>
				<arguments>
					<argument>
						<argument_eiffel_name>pts</argument_eiffel_name>
						<argument_external_name>pts</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINT]</argument_type>
						<argument_type_full_name>System.Drawing.Point[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>types</argument_eiffel_name>
						<argument_external_name>types</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>fill_mode</argument_eiffel_name>
						<argument_external_name>fillMode</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_FILLMODE</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.FillMode</argument_type_full_name>
					</argument>
				</arguments>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>False</method>
				<field>False</field>
				<creation_routine>True</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>make_graphicspath_1</feature_eiffel_name>
				<arguments>
					<argument>
						<argument_eiffel_name>fill_mode</argument_eiffel_name>
						<argument_external_name>fillMode</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_FILLMODE</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.FillMode</argument_type_full_name>
					</argument>
				</arguments>
			</feature>
		</initialization>
		<access>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_point_count</feature_eiffel_name>
				<feature_external_name>get_PointCount</feature_external_name>
				<return_type>INTEGER</return_type>
				<return_type_full_name>System.Int32</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_path_types</feature_eiffel_name>
				<feature_external_name>get_PathTypes</feature_external_name>
				<return_type>ARRAY [INTEGER_8]</return_type>
				<return_type_full_name>System.Byte[]</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_path_data</feature_eiffel_name>
				<feature_external_name>get_PathData</feature_external_name>
				<return_type>SYSTEM_DRAWING_DRAWING2D_PATHDATA</return_type>
				<return_type_full_name>System.Drawing.Drawing2D.PathData</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_path_points</feature_eiffel_name>
				<feature_external_name>get_PathPoints</feature_external_name>
				<return_type>ARRAY [SYSTEM_DRAWING_POINTF]</return_type>
				<return_type_full_name>System.Drawing.PointF[]</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_fill_mode</feature_eiffel_name>
				<feature_external_name>get_FillMode</feature_external_name>
				<return_type>SYSTEM_DRAWING_DRAWING2D_FILLMODE</return_type>
				<return_type_full_name>System.Drawing.Drawing2D.FillMode</return_type_full_name>
			</feature>
		</access>
		<element_change>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_fill_mode</feature_eiffel_name>
				<feature_external_name>set_FillMode</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_FILLMODE</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.FillMode</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
		</element_change>
		<basic_operations>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>warp_array_point_f_rectangle_f_matrix</feature_eiffel_name>
				<feature_external_name>Warp</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>dest_points</argument_eiffel_name>
						<argument_external_name>destPoints</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINTF]</argument_type>
						<argument_type_full_name>System.Drawing.PointF[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>src_rect</argument_eiffel_name>
						<argument_external_name>srcRect</argument_external_name>
						<argument_type>SYSTEM_DRAWING_RECTANGLEF</argument_type>
						<argument_type_full_name>System.Drawing.RectangleF</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>matrix</argument_eiffel_name>
						<argument_external_name>matrix</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_MATRIX</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.Matrix</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_curve_array_point_single</feature_eiffel_name>
				<feature_external_name>AddCurve</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINT]</argument_type>
						<argument_type_full_name>System.Drawing.Point[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>tension</argument_eiffel_name>
						<argument_external_name>tension</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>transform</feature_eiffel_name>
				<feature_external_name>Transform</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>matrix</argument_eiffel_name>
						<argument_external_name>matrix</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_MATRIX</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.Matrix</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_outline_visible_int32_int32_pen</feature_eiffel_name>
				<feature_external_name>IsOutlineVisible</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>x</argument_eiffel_name>
						<argument_external_name>x</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y</argument_eiffel_name>
						<argument_external_name>y</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pen</argument_eiffel_name>
						<argument_external_name>pen</argument_external_name>
						<argument_type>SYSTEM_DRAWING_PEN</argument_type>
						<argument_type_full_name>System.Drawing.Pen</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_rectangle_rectangle_f</feature_eiffel_name>
				<feature_external_name>AddRectangle</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>rect</argument_eiffel_name>
						<argument_external_name>rect</argument_external_name>
						<argument_type>SYSTEM_DRAWING_RECTANGLEF</argument_type>
						<argument_type_full_name>System.Drawing.RectangleF</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_visible_int32_int32_graphics</feature_eiffel_name>
				<feature_external_name>IsVisible</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>x</argument_eiffel_name>
						<argument_external_name>x</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y</argument_eiffel_name>
						<argument_external_name>y</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>graphics</argument_eiffel_name>
						<argument_external_name>graphics</argument_external_name>
						<argument_type>SYSTEM_DRAWING_GRAPHICS</argument_type>
						<argument_type_full_name>System.Drawing.Graphics</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>flatten</feature_eiffel_name>
				<feature_external_name>Flatten</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_string_string_font_family_int32_single_rectangle</feature_eiffel_name>
				<feature_external_name>AddString</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>s</argument_eiffel_name>
						<argument_external_name>s</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>family</argument_eiffel_name>
						<argument_external_name>family</argument_external_name>
						<argument_type>SYSTEM_DRAWING_FONTFAMILY</argument_type>
						<argument_type_full_name>System.Drawing.FontFamily</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>style</argument_eiffel_name>
						<argument_external_name>style</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>em_size</argument_eiffel_name>
						<argument_external_name>emSize</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>layout_rect</argument_eiffel_name>
						<argument_external_name>layoutRect</argument_external_name>
						<argument_type>SYSTEM_DRAWING_RECTANGLE</argument_type>
						<argument_type_full_name>System.Drawing.Rectangle</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>format</argument_eiffel_name>
						<argument_external_name>format</argument_external_name>
						<argument_type>SYSTEM_DRAWING_STRINGFORMAT</argument_type>
						<argument_type_full_name>System.Drawing.StringFormat</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_beziers</feature_eiffel_name>
				<feature_external_name>AddBeziers</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINT]</argument_type>
						<argument_type_full_name>System.Drawing.Point[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_outline_visible_point_f_pen_graphics</feature_eiffel_name>
				<feature_external_name>IsOutlineVisible</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>pt</argument_eiffel_name>
						<argument_external_name>pt</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINTF</argument_type>
						<argument_type_full_name>System.Drawing.PointF</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pen</argument_eiffel_name>
						<argument_external_name>pen</argument_external_name>
						<argument_type>SYSTEM_DRAWING_PEN</argument_type>
						<argument_type_full_name>System.Drawing.Pen</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>graphics</argument_eiffel_name>
						<argument_external_name>graphics</argument_external_name>
						<argument_type>SYSTEM_DRAWING_GRAPHICS</argument_type>
						<argument_type_full_name>System.Drawing.Graphics</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_markers</feature_eiffel_name>
				<feature_external_name>SetMarkers</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_pie_single</feature_eiffel_name>
				<feature_external_name>AddPie</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>x</argument_eiffel_name>
						<argument_external_name>x</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y</argument_eiffel_name>
						<argument_external_name>y</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>width</argument_eiffel_name>
						<argument_external_name>width</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>height</argument_eiffel_name>
						<argument_external_name>height</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>start_angle</argument_eiffel_name>
						<argument_external_name>startAngle</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>sweep_angle</argument_eiffel_name>
						<argument_external_name>sweepAngle</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_outline_visible_point_f_pen</feature_eiffel_name>
				<feature_external_name>IsOutlineVisible</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>point</argument_eiffel_name>
						<argument_external_name>point</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINTF</argument_type>
						<argument_type_full_name>System.Drawing.PointF</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pen</argument_eiffel_name>
						<argument_external_name>pen</argument_external_name>
						<argument_type>SYSTEM_DRAWING_PEN</argument_type>
						<argument_type_full_name>System.Drawing.Pen</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_curve</feature_eiffel_name>
				<feature_external_name>AddCurve</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINT]</argument_type>
						<argument_type_full_name>System.Drawing.Point[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_pie</feature_eiffel_name>
				<feature_external_name>AddPie</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>rect</argument_eiffel_name>
						<argument_external_name>rect</argument_external_name>
						<argument_type>SYSTEM_DRAWING_RECTANGLE</argument_type>
						<argument_type_full_name>System.Drawing.Rectangle</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>start_angle</argument_eiffel_name>
						<argument_external_name>startAngle</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>sweep_angle</argument_eiffel_name>
						<argument_external_name>sweepAngle</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>clear_markers</feature_eiffel_name>
				<feature_external_name>ClearMarkers</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_line_int32</feature_eiffel_name>
				<feature_external_name>AddLine</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>x1</argument_eiffel_name>
						<argument_external_name>x1</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y1</argument_eiffel_name>
						<argument_external_name>y1</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>x2</argument_eiffel_name>
						<argument_external_name>x2</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y2</argument_eiffel_name>
						<argument_external_name>y2</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_visible_single_single_graphics</feature_eiffel_name>
				<feature_external_name>IsVisible</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>x</argument_eiffel_name>
						<argument_external_name>x</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y</argument_eiffel_name>
						<argument_external_name>y</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>graphics</argument_eiffel_name>
						<argument_external_name>graphics</argument_external_name>
						<argument_type>SYSTEM_DRAWING_GRAPHICS</argument_type>
						<argument_type_full_name>System.Drawing.Graphics</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_closed_curve_array_point_f_single</feature_eiffel_name>
				<feature_external_name>AddClosedCurve</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINTF]</argument_type>
						<argument_type_full_name>System.Drawing.PointF[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>tension</argument_eiffel_name>
						<argument_external_name>tension</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>widen_pen_matrix_single</feature_eiffel_name>
				<feature_external_name>Widen</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>pen</argument_eiffel_name>
						<argument_external_name>pen</argument_external_name>
						<argument_type>SYSTEM_DRAWING_PEN</argument_type>
						<argument_type_full_name>System.Drawing.Pen</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>matrix</argument_eiffel_name>
						<argument_external_name>matrix</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_MATRIX</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.Matrix</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>flatness</argument_eiffel_name>
						<argument_external_name>flatness</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_ellipse</feature_eiffel_name>
				<feature_external_name>AddEllipse</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>rect</argument_eiffel_name>
						<argument_external_name>rect</argument_external_name>
						<argument_type>SYSTEM_DRAWING_RECTANGLE</argument_type>
						<argument_type_full_name>System.Drawing.Rectangle</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_bezier_int32</feature_eiffel_name>
				<feature_external_name>AddBezier</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>x1</argument_eiffel_name>
						<argument_external_name>x1</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y1</argument_eiffel_name>
						<argument_external_name>y1</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>x2</argument_eiffel_name>
						<argument_external_name>x2</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y2</argument_eiffel_name>
						<argument_external_name>y2</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>x3</argument_eiffel_name>
						<argument_external_name>x3</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y3</argument_eiffel_name>
						<argument_external_name>y3</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>x4</argument_eiffel_name>
						<argument_external_name>x4</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y4</argument_eiffel_name>
						<argument_external_name>y4</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>warp</feature_eiffel_name>
				<feature_external_name>Warp</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>dest_points</argument_eiffel_name>
						<argument_external_name>destPoints</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINTF]</argument_type>
						<argument_type_full_name>System.Drawing.PointF[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>src_rect</argument_eiffel_name>
						<argument_external_name>srcRect</argument_external_name>
						<argument_type>SYSTEM_DRAWING_RECTANGLEF</argument_type>
						<argument_type_full_name>System.Drawing.RectangleF</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_arc</feature_eiffel_name>
				<feature_external_name>AddArc</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>rect</argument_eiffel_name>
						<argument_external_name>rect</argument_external_name>
						<argument_type>SYSTEM_DRAWING_RECTANGLE</argument_type>
						<argument_type_full_name>System.Drawing.Rectangle</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>start_angle</argument_eiffel_name>
						<argument_external_name>startAngle</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>sweep_angle</argument_eiffel_name>
						<argument_external_name>sweepAngle</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_polygon_array_point_f</feature_eiffel_name>
				<feature_external_name>AddPolygon</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINTF]</argument_type>
						<argument_type_full_name>System.Drawing.PointF[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>close_figure</feature_eiffel_name>
				<feature_external_name>CloseFigure</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_arc_single</feature_eiffel_name>
				<feature_external_name>AddArc</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>x</argument_eiffel_name>
						<argument_external_name>x</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y</argument_eiffel_name>
						<argument_external_name>y</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>width</argument_eiffel_name>
						<argument_external_name>width</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>height</argument_eiffel_name>
						<argument_external_name>height</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>start_angle</argument_eiffel_name>
						<argument_external_name>startAngle</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>sweep_angle</argument_eiffel_name>
						<argument_external_name>sweepAngle</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_visible</feature_eiffel_name>
				<feature_external_name>IsVisible</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>point</argument_eiffel_name>
						<argument_external_name>point</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINT</argument_type>
						<argument_type_full_name>System.Drawing.Point</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_closed_curve_array_point_single</feature_eiffel_name>
				<feature_external_name>AddClosedCurve</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINT]</argument_type>
						<argument_type_full_name>System.Drawing.Point[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>tension</argument_eiffel_name>
						<argument_external_name>tension</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_rectangles_array_rectangle_f</feature_eiffel_name>
				<feature_external_name>AddRectangles</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>rects</argument_eiffel_name>
						<argument_external_name>rects</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_RECTANGLEF]</argument_type>
						<argument_type_full_name>System.Drawing.RectangleF[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_lines</feature_eiffel_name>
				<feature_external_name>AddLines</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINT]</argument_type>
						<argument_type_full_name>System.Drawing.Point[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_curve_array_point_f_int32_int32_single</feature_eiffel_name>
				<feature_external_name>AddCurve</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINTF]</argument_type>
						<argument_type_full_name>System.Drawing.PointF[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>offset</argument_eiffel_name>
						<argument_external_name>offset</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>number_of_segments</argument_eiffel_name>
						<argument_external_name>numberOfSegments</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>tension</argument_eiffel_name>
						<argument_external_name>tension</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_outline_visible_single_single_pen_graphics</feature_eiffel_name>
				<feature_external_name>IsOutlineVisible</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>x</argument_eiffel_name>
						<argument_external_name>x</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y</argument_eiffel_name>
						<argument_external_name>y</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pen</argument_eiffel_name>
						<argument_external_name>pen</argument_external_name>
						<argument_type>SYSTEM_DRAWING_PEN</argument_type>
						<argument_type_full_name>System.Drawing.Pen</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>graphics</argument_eiffel_name>
						<argument_external_name>graphics</argument_external_name>
						<argument_type>SYSTEM_DRAWING_GRAPHICS</argument_type>
						<argument_type_full_name>System.Drawing.Graphics</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_ellipse_single</feature_eiffel_name>
				<feature_external_name>AddEllipse</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>x</argument_eiffel_name>
						<argument_external_name>x</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y</argument_eiffel_name>
						<argument_external_name>y</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>width</argument_eiffel_name>
						<argument_external_name>width</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>height</argument_eiffel_name>
						<argument_external_name>height</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_bounds_matrix</feature_eiffel_name>
				<feature_external_name>GetBounds</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>matrix</argument_eiffel_name>
						<argument_external_name>matrix</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_MATRIX</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.Matrix</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_DRAWING_RECTANGLEF</return_type>
				<return_type_full_name>System.Drawing.RectangleF</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_pie_int32</feature_eiffel_name>
				<feature_external_name>AddPie</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>x</argument_eiffel_name>
						<argument_external_name>x</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y</argument_eiffel_name>
						<argument_external_name>y</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>width</argument_eiffel_name>
						<argument_external_name>width</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>height</argument_eiffel_name>
						<argument_external_name>height</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>start_angle</argument_eiffel_name>
						<argument_external_name>startAngle</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>sweep_angle</argument_eiffel_name>
						<argument_external_name>sweepAngle</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_string_string_font_family_int32_single_point</feature_eiffel_name>
				<feature_external_name>AddString</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>s</argument_eiffel_name>
						<argument_external_name>s</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>family</argument_eiffel_name>
						<argument_external_name>family</argument_external_name>
						<argument_type>SYSTEM_DRAWING_FONTFAMILY</argument_type>
						<argument_type_full_name>System.Drawing.FontFamily</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>style</argument_eiffel_name>
						<argument_external_name>style</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>em_size</argument_eiffel_name>
						<argument_external_name>emSize</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>origin</argument_eiffel_name>
						<argument_external_name>origin</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINT</argument_type>
						<argument_type_full_name>System.Drawing.Point</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>format</argument_eiffel_name>
						<argument_external_name>format</argument_external_name>
						<argument_type>SYSTEM_DRAWING_STRINGFORMAT</argument_type>
						<argument_type_full_name>System.Drawing.StringFormat</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_outline_visible</feature_eiffel_name>
				<feature_external_name>IsOutlineVisible</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>point</argument_eiffel_name>
						<argument_external_name>point</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINT</argument_type>
						<argument_type_full_name>System.Drawing.Point</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pen</argument_eiffel_name>
						<argument_external_name>pen</argument_external_name>
						<argument_type>SYSTEM_DRAWING_PEN</argument_type>
						<argument_type_full_name>System.Drawing.Pen</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_path</feature_eiffel_name>
				<feature_external_name>AddPath</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>adding_path</argument_eiffel_name>
						<argument_external_name>addingPath</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_GRAPHICSPATH</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.GraphicsPath</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>connect</argument_eiffel_name>
						<argument_external_name>connect</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_visible_int32_int32</feature_eiffel_name>
				<feature_external_name>IsVisible</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>x</argument_eiffel_name>
						<argument_external_name>x</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y</argument_eiffel_name>
						<argument_external_name>y</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_visible_point_f</feature_eiffel_name>
				<feature_external_name>IsVisible</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>point</argument_eiffel_name>
						<argument_external_name>point</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINTF</argument_type>
						<argument_type_full_name>System.Drawing.PointF</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_line_point_f</feature_eiffel_name>
				<feature_external_name>AddLine</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>pt1</argument_eiffel_name>
						<argument_external_name>pt1</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINTF</argument_type>
						<argument_type_full_name>System.Drawing.PointF</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pt2</argument_eiffel_name>
						<argument_external_name>pt2</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINTF</argument_type>
						<argument_type_full_name>System.Drawing.PointF</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_arc_rectangle_f</feature_eiffel_name>
				<feature_external_name>AddArc</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>rect</argument_eiffel_name>
						<argument_external_name>rect</argument_external_name>
						<argument_type>SYSTEM_DRAWING_RECTANGLEF</argument_type>
						<argument_type_full_name>System.Drawing.RectangleF</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>start_angle</argument_eiffel_name>
						<argument_external_name>startAngle</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>sweep_angle</argument_eiffel_name>
						<argument_external_name>sweepAngle</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_curve_array_point_f_single</feature_eiffel_name>
				<feature_external_name>AddCurve</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINTF]</argument_type>
						<argument_type_full_name>System.Drawing.PointF[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>tension</argument_eiffel_name>
						<argument_external_name>tension</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>reverse</feature_eiffel_name>
				<feature_external_name>Reverse</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_visible_point_graphics</feature_eiffel_name>
				<feature_external_name>IsVisible</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>pt</argument_eiffel_name>
						<argument_external_name>pt</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINT</argument_type>
						<argument_type_full_name>System.Drawing.Point</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>graphics</argument_eiffel_name>
						<argument_external_name>graphics</argument_external_name>
						<argument_type>SYSTEM_DRAWING_GRAPHICS</argument_type>
						<argument_type_full_name>System.Drawing.Graphics</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_rectangles</feature_eiffel_name>
				<feature_external_name>AddRectangles</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>rects</argument_eiffel_name>
						<argument_external_name>rects</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_RECTANGLE]</argument_type>
						<argument_type_full_name>System.Drawing.Rectangle[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>clone</feature_eiffel_name>
				<feature_external_name>Clone</feature_external_name>
				<return_type>ANY</return_type>
				<return_type_full_name>System.Object</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_bounds_matrix_pen</feature_eiffel_name>
				<feature_external_name>GetBounds</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>matrix</argument_eiffel_name>
						<argument_external_name>matrix</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_MATRIX</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.Matrix</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pen</argument_eiffel_name>
						<argument_external_name>pen</argument_external_name>
						<argument_type>SYSTEM_DRAWING_PEN</argument_type>
						<argument_type_full_name>System.Drawing.Pen</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_DRAWING_RECTANGLEF</return_type>
				<return_type_full_name>System.Drawing.RectangleF</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>close_all_figures</feature_eiffel_name>
				<feature_external_name>CloseAllFigures</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>widen_pen_matrix</feature_eiffel_name>
				<feature_external_name>Widen</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>pen</argument_eiffel_name>
						<argument_external_name>pen</argument_external_name>
						<argument_type>SYSTEM_DRAWING_PEN</argument_type>
						<argument_type_full_name>System.Drawing.Pen</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>matrix</argument_eiffel_name>
						<argument_external_name>matrix</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_MATRIX</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.Matrix</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_string</feature_eiffel_name>
				<feature_external_name>AddString</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>s</argument_eiffel_name>
						<argument_external_name>s</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>family</argument_eiffel_name>
						<argument_external_name>family</argument_external_name>
						<argument_type>SYSTEM_DRAWING_FONTFAMILY</argument_type>
						<argument_type_full_name>System.Drawing.FontFamily</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>style</argument_eiffel_name>
						<argument_external_name>style</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>em_size</argument_eiffel_name>
						<argument_external_name>emSize</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>layout_rect</argument_eiffel_name>
						<argument_external_name>layoutRect</argument_external_name>
						<argument_type>SYSTEM_DRAWING_RECTANGLEF</argument_type>
						<argument_type_full_name>System.Drawing.RectangleF</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>format</argument_eiffel_name>
						<argument_external_name>format</argument_external_name>
						<argument_type>SYSTEM_DRAWING_STRINGFORMAT</argument_type>
						<argument_type_full_name>System.Drawing.StringFormat</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_line_single</feature_eiffel_name>
				<feature_external_name>AddLine</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>x1</argument_eiffel_name>
						<argument_external_name>x1</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y1</argument_eiffel_name>
						<argument_external_name>y1</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>x2</argument_eiffel_name>
						<argument_external_name>x2</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y2</argument_eiffel_name>
						<argument_external_name>y2</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_beziers_array_point_f</feature_eiffel_name>
				<feature_external_name>AddBeziers</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINTF]</argument_type>
						<argument_type_full_name>System.Drawing.PointF[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_rectangle</feature_eiffel_name>
				<feature_external_name>AddRectangle</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>rect</argument_eiffel_name>
						<argument_external_name>rect</argument_external_name>
						<argument_type>SYSTEM_DRAWING_RECTANGLE</argument_type>
						<argument_type_full_name>System.Drawing.Rectangle</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_ellipse_int32</feature_eiffel_name>
				<feature_external_name>AddEllipse</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>x</argument_eiffel_name>
						<argument_external_name>x</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y</argument_eiffel_name>
						<argument_external_name>y</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>width</argument_eiffel_name>
						<argument_external_name>width</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>height</argument_eiffel_name>
						<argument_external_name>height</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_outline_visible_single_single_pen</feature_eiffel_name>
				<feature_external_name>IsOutlineVisible</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>x</argument_eiffel_name>
						<argument_external_name>x</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y</argument_eiffel_name>
						<argument_external_name>y</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pen</argument_eiffel_name>
						<argument_external_name>pen</argument_external_name>
						<argument_type>SYSTEM_DRAWING_PEN</argument_type>
						<argument_type_full_name>System.Drawing.Pen</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_arc_int32</feature_eiffel_name>
				<feature_external_name>AddArc</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>x</argument_eiffel_name>
						<argument_external_name>x</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y</argument_eiffel_name>
						<argument_external_name>y</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>width</argument_eiffel_name>
						<argument_external_name>width</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>height</argument_eiffel_name>
						<argument_external_name>height</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>start_angle</argument_eiffel_name>
						<argument_external_name>startAngle</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>sweep_angle</argument_eiffel_name>
						<argument_external_name>sweepAngle</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_visible_single_single</feature_eiffel_name>
				<feature_external_name>IsVisible</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>x</argument_eiffel_name>
						<argument_external_name>x</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y</argument_eiffel_name>
						<argument_external_name>y</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_outline_visible_point_pen_graphics</feature_eiffel_name>
				<feature_external_name>IsOutlineVisible</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>pt</argument_eiffel_name>
						<argument_external_name>pt</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINT</argument_type>
						<argument_type_full_name>System.Drawing.Point</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pen</argument_eiffel_name>
						<argument_external_name>pen</argument_external_name>
						<argument_type>SYSTEM_DRAWING_PEN</argument_type>
						<argument_type_full_name>System.Drawing.Pen</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>graphics</argument_eiffel_name>
						<argument_external_name>graphics</argument_external_name>
						<argument_type>SYSTEM_DRAWING_GRAPHICS</argument_type>
						<argument_type_full_name>System.Drawing.Graphics</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_line</feature_eiffel_name>
				<feature_external_name>AddLine</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>pt1</argument_eiffel_name>
						<argument_external_name>pt1</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINT</argument_type>
						<argument_type_full_name>System.Drawing.Point</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pt2</argument_eiffel_name>
						<argument_external_name>pt2</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINT</argument_type>
						<argument_type_full_name>System.Drawing.Point</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>widen</feature_eiffel_name>
				<feature_external_name>Widen</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>pen</argument_eiffel_name>
						<argument_external_name>pen</argument_external_name>
						<argument_type>SYSTEM_DRAWING_PEN</argument_type>
						<argument_type_full_name>System.Drawing.Pen</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>flatten_matrix</feature_eiffel_name>
				<feature_external_name>Flatten</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>matrix</argument_eiffel_name>
						<argument_external_name>matrix</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_MATRIX</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.Matrix</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_closed_curve_array_point_f</feature_eiffel_name>
				<feature_external_name>AddClosedCurve</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINTF]</argument_type>
						<argument_type_full_name>System.Drawing.PointF[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_bezier_point_f</feature_eiffel_name>
				<feature_external_name>AddBezier</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>pt1</argument_eiffel_name>
						<argument_external_name>pt1</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINTF</argument_type>
						<argument_type_full_name>System.Drawing.PointF</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pt2</argument_eiffel_name>
						<argument_external_name>pt2</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINTF</argument_type>
						<argument_type_full_name>System.Drawing.PointF</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pt3</argument_eiffel_name>
						<argument_external_name>pt3</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINTF</argument_type>
						<argument_type_full_name>System.Drawing.PointF</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pt4</argument_eiffel_name>
						<argument_external_name>pt4</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINTF</argument_type>
						<argument_type_full_name>System.Drawing.PointF</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_last_point</feature_eiffel_name>
				<feature_external_name>GetLastPoint</feature_external_name>
				<return_type>SYSTEM_DRAWING_POINTF</return_type>
				<return_type_full_name>System.Drawing.PointF</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>start_figure</feature_eiffel_name>
				<feature_external_name>StartFigure</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>warp_array_point_f_rectangle_f_matrix_warp_mode</feature_eiffel_name>
				<feature_external_name>Warp</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>dest_points</argument_eiffel_name>
						<argument_external_name>destPoints</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINTF]</argument_type>
						<argument_type_full_name>System.Drawing.PointF[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>src_rect</argument_eiffel_name>
						<argument_external_name>srcRect</argument_external_name>
						<argument_type>SYSTEM_DRAWING_RECTANGLEF</argument_type>
						<argument_type_full_name>System.Drawing.RectangleF</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>matrix</argument_eiffel_name>
						<argument_external_name>matrix</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_MATRIX</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.Matrix</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>warp_mode</argument_eiffel_name>
						<argument_external_name>warpMode</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_WARPMODE</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.WarpMode</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_closed_curve</feature_eiffel_name>
				<feature_external_name>AddClosedCurve</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINT]</argument_type>
						<argument_type_full_name>System.Drawing.Point[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_lines_array_point_f</feature_eiffel_name>
				<feature_external_name>AddLines</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINTF]</argument_type>
						<argument_type_full_name>System.Drawing.PointF[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>reset</feature_eiffel_name>
				<feature_external_name>Reset</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_curve_array_point_f</feature_eiffel_name>
				<feature_external_name>AddCurve</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINTF]</argument_type>
						<argument_type_full_name>System.Drawing.PointF[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_ellipse_rectangle_f</feature_eiffel_name>
				<feature_external_name>AddEllipse</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>rect</argument_eiffel_name>
						<argument_external_name>rect</argument_external_name>
						<argument_type>SYSTEM_DRAWING_RECTANGLEF</argument_type>
						<argument_type_full_name>System.Drawing.RectangleF</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_bounds</feature_eiffel_name>
				<feature_external_name>GetBounds</feature_external_name>
				<return_type>SYSTEM_DRAWING_RECTANGLEF</return_type>
				<return_type_full_name>System.Drawing.RectangleF</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_bezier_single</feature_eiffel_name>
				<feature_external_name>AddBezier</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>x1</argument_eiffel_name>
						<argument_external_name>x1</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y1</argument_eiffel_name>
						<argument_external_name>y1</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>x2</argument_eiffel_name>
						<argument_external_name>x2</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y2</argument_eiffel_name>
						<argument_external_name>y2</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>x3</argument_eiffel_name>
						<argument_external_name>x3</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y3</argument_eiffel_name>
						<argument_external_name>y3</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>x4</argument_eiffel_name>
						<argument_external_name>x4</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y4</argument_eiffel_name>
						<argument_external_name>y4</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>dispose</feature_eiffel_name>
				<feature_external_name>Dispose</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>flatten_matrix_single</feature_eiffel_name>
				<feature_external_name>Flatten</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>matrix</argument_eiffel_name>
						<argument_external_name>matrix</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_MATRIX</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.Matrix</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>flatness</argument_eiffel_name>
						<argument_external_name>flatness</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_bezier</feature_eiffel_name>
				<feature_external_name>AddBezier</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>pt1</argument_eiffel_name>
						<argument_external_name>pt1</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINT</argument_type>
						<argument_type_full_name>System.Drawing.Point</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pt2</argument_eiffel_name>
						<argument_external_name>pt2</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINT</argument_type>
						<argument_type_full_name>System.Drawing.Point</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pt3</argument_eiffel_name>
						<argument_external_name>pt3</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINT</argument_type>
						<argument_type_full_name>System.Drawing.Point</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pt4</argument_eiffel_name>
						<argument_external_name>pt4</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINT</argument_type>
						<argument_type_full_name>System.Drawing.Point</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_outline_visible_int32_int32_pen_graphics</feature_eiffel_name>
				<feature_external_name>IsOutlineVisible</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>x</argument_eiffel_name>
						<argument_external_name>x</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>y</argument_eiffel_name>
						<argument_external_name>y</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pen</argument_eiffel_name>
						<argument_external_name>pen</argument_external_name>
						<argument_type>SYSTEM_DRAWING_PEN</argument_type>
						<argument_type_full_name>System.Drawing.Pen</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>graphics</argument_eiffel_name>
						<argument_external_name>graphics</argument_external_name>
						<argument_type>SYSTEM_DRAWING_GRAPHICS</argument_type>
						<argument_type_full_name>System.Drawing.Graphics</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_polygon</feature_eiffel_name>
				<feature_external_name>AddPolygon</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINT]</argument_type>
						<argument_type_full_name>System.Drawing.Point[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>warp_array_point_f_rectangle_f_matrix_warp_mode_single</feature_eiffel_name>
				<feature_external_name>Warp</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>dest_points</argument_eiffel_name>
						<argument_external_name>destPoints</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINTF]</argument_type>
						<argument_type_full_name>System.Drawing.PointF[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>src_rect</argument_eiffel_name>
						<argument_external_name>srcRect</argument_external_name>
						<argument_type>SYSTEM_DRAWING_RECTANGLEF</argument_type>
						<argument_type_full_name>System.Drawing.RectangleF</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>matrix</argument_eiffel_name>
						<argument_external_name>matrix</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_MATRIX</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.Matrix</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>warp_mode</argument_eiffel_name>
						<argument_external_name>warpMode</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_WARPMODE</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.WarpMode</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>flatness</argument_eiffel_name>
						<argument_external_name>flatness</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_string_string_font_family_int32_single_point_f</feature_eiffel_name>
				<feature_external_name>AddString</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>s</argument_eiffel_name>
						<argument_external_name>s</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>family</argument_eiffel_name>
						<argument_external_name>family</argument_external_name>
						<argument_type>SYSTEM_DRAWING_FONTFAMILY</argument_type>
						<argument_type_full_name>System.Drawing.FontFamily</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>style</argument_eiffel_name>
						<argument_external_name>style</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>em_size</argument_eiffel_name>
						<argument_external_name>emSize</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>origin</argument_eiffel_name>
						<argument_external_name>origin</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINTF</argument_type>
						<argument_type_full_name>System.Drawing.PointF</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>format</argument_eiffel_name>
						<argument_external_name>format</argument_external_name>
						<argument_type>SYSTEM_DRAWING_STRINGFORMAT</argument_type>
						<argument_type_full_name>System.Drawing.StringFormat</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_curve_array_point_int32_int32_single</feature_eiffel_name>
				<feature_external_name>AddCurve</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINT]</argument_type>
						<argument_type_full_name>System.Drawing.Point[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>offset</argument_eiffel_name>
						<argument_external_name>offset</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>number_of_segments</argument_eiffel_name>
						<argument_external_name>numberOfSegments</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>tension</argument_eiffel_name>
						<argument_external_name>tension</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_visible_point_f_graphics</feature_eiffel_name>
				<feature_external_name>IsVisible</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>pt</argument_eiffel_name>
						<argument_external_name>pt</argument_external_name>
						<argument_type>SYSTEM_DRAWING_POINTF</argument_type>
						<argument_type_full_name>System.Drawing.PointF</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>graphics</argument_eiffel_name>
						<argument_external_name>graphics</argument_external_name>
						<argument_type>SYSTEM_DRAWING_GRAPHICS</argument_type>
						<argument_type_full_name>System.Drawing.Graphics</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
		</basic_operations>
		<implementation>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>finalize</feature_eiffel_name>
				<feature_external_name>Finalize</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
		</implementation>
		<bit_or_infix>False</bit_or_infix>
	</body>
</class>