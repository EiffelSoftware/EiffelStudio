/*
 * Jmakefile for Lace C library
 */

RUN_TIME = $(EIFFEL)/files
SHARED_CLIB = ../../Clib
CFLAGS = -I$(SHARED_CLIB) -I$(RUN_TIME)
YFLAGS = -dv

OBJS = 	lace_l.o lace_y.o lace_c.o eif_l.o eif_c.o lac_err.o keyword.o

;# Files generated by yacc and lex
CTMP = lace_y.c lace_y.h lace_l.c lex.yy.c eif_l.c

NormalLibraryTarget(lace,/**/,$(OBJS))
DependTarget()

local_clean::
	$(RM) $(CTMP) y.output

keyword.c: lace.gperf
	@if test -s keyword.c; then \
		touch $@; \
	else \
		echo "	gperf -p -t -l -k 1,'$$',4 lace.gperf > $@"; \
		gperf -p -t -l -k 1,'$$',4 lace.gperf > $@ ; \
	fi

eiffel.c: es.y.tab.h

lace_y.h: lace_y.y
	yacc $(YFLAGS) lace_y.y
	sed -f deyy2.sed <y.tab.c> lace_y.c
	mv y.tab.h lace_y.h

lace_l.c: lace_l.l lace_y.h lace_c.h
	lex lace_l.l
	sed -f deyy2.sed <lex.yy.c> lace_l.c

eif_l.c: eif_l.l
	lex eif_l.l
	sed -f deyy1.sed < lex.yy.c > eif_l.c

lace_l.o: lace_l.c lace_y.h
eif_l.o: eif_l.c 

>MV		/* This will be fixed one day */

lac_err.o: lac_err.c lace_y.h
	sed -f deyy2.sed < lac_err.c> temp.c
	 $(CC) $(JCFLAGS) -c temp.c
	 $(MV) temp.o lac_err.o

lace_y.c: lace_y.h
lace_y.o: lace_y.h

eif_c.o: eif_c.c
	sed -f deyy1.sed <eif_c.c> temp
	mv temp eif_c.c
	$(CC) $(JCFLAGS) -c eif_c.c

