note
	description: "Implemented `IOleInPlaceActiveObject' Interface."
	legal: "See notice at end of class."
	status: "See notice at end of class."
	Note: "Automatically generated by the EiffelCOM Wizard."

class
	IOLE_IN_PLACE_ACTIVE_OBJECT_IMPL_PROXY

inherit
	IOLE_IN_PLACE_ACTIVE_OBJECT_INTERFACE

	ECOM_QUERIABLE

create
	make_from_other,
	make_from_pointer

feature {NONE}  -- Initialization

	make_from_pointer (cpp_obj: POINTER)
			-- Make from pointer
		do
			initializer := ccom_create_iole_in_place_active_object_impl_proxy_from_pointer(cpp_obj)
			item := ccom_item (initializer)
		end

feature -- Basic Operations

	get_window (phwnd: CELL [POINTER])
			-- No description available.
			-- `phwnd' [out].  
		do
			ccom_get_window (initializer, phwnd)
		end

	context_sensitive_help (f_enter_mode: INTEGER)
			-- No description available.
			-- `f_enter_mode' [in].  
		do
			ccom_context_sensitive_help (initializer, f_enter_mode)
		end

	translate_accelerator (lpmsg: TAG_MSG_RECORD)
			-- Processes menu accelerator-key messages 
			-- from the container's message queue. 
			-- This method should only be used for 
			-- objects created by a DLL object application. 
			-- `lpmsg' [in] Pointer to the message that might 
			-- need to be translated.
		do
			ccom_translate_accelerator (initializer, lpmsg.item)
		end

	on_frame_window_activate (f_activate: INTEGER)
			-- No description available.
			-- `f_activate' [in].  
		do
			ccom_on_frame_window_activate (initializer, f_activate)
		end

	on_doc_window_activate (f_activate: INTEGER)
			-- No description available.
			-- `f_activate' [in].  
		do
			ccom_on_doc_window_activate (initializer, f_activate)
		end

	resize_border (prc_border: TAG_RECT_RECORD; p_uiwindow: IOLE_IN_PLACE_UIWINDOW_INTERFACE; f_frame_window: INTEGER)
			-- No description available.
			-- `prc_border' [in].  
			-- `p_uiwindow' [in].  
			-- `f_frame_window' [in].  
		local
			p_uiwindow_item: POINTER
			a_stub: ECOM_STUB
		do
			if p_uiwindow /= Void then
				if (p_uiwindow.item = default_pointer) then
					a_stub ?= p_uiwindow
					if a_stub /= Void then
						a_stub.create_item
					end
				end
				p_uiwindow_item := p_uiwindow.item
			end
			ccom_resize_border (initializer, prc_border.item, p_uiwindow_item, f_frame_window)
		end

	enable_modeless (f_enable: INTEGER)
			-- No description available.
			-- `f_enable' [in].  
		do
			ccom_enable_modeless (initializer, f_enable)
		end

feature {NONE}  -- Implementation

	delete_wrapper
			-- Delete wrapper
		do
			ccom_delete_iole_in_place_active_object_impl_proxy(initializer)
		end

feature {NONE}  -- Externals

	ccom_get_window (cpp_obj: POINTER; phwnd: CELL [POINTER])
			-- No description available.
		external
			"C++ [ecom_control_library::IOleInPlaceActiveObject_impl_proxy %"ecom_control_library_IOleInPlaceActiveObject_impl_proxy_s.h%"](EIF_OBJECT)"
		end

	ccom_context_sensitive_help (cpp_obj: POINTER; f_enter_mode: INTEGER)
			-- No description available.
		external
			"C++ [ecom_control_library::IOleInPlaceActiveObject_impl_proxy %"ecom_control_library_IOleInPlaceActiveObject_impl_proxy_s.h%"](EIF_INTEGER)"
		end

	ccom_translate_accelerator (cpp_obj: POINTER; lpmsg: POINTER)
			-- No description available.
		external
			"C++ [ecom_control_library::IOleInPlaceActiveObject_impl_proxy %"ecom_control_library_IOleInPlaceActiveObject_impl_proxy_s.h%"](MSG *)"
		end

	ccom_on_frame_window_activate (cpp_obj: POINTER; f_activate: INTEGER)
			-- No description available.
		external
			"C++ [ecom_control_library::IOleInPlaceActiveObject_impl_proxy %"ecom_control_library_IOleInPlaceActiveObject_impl_proxy_s.h%"](EIF_INTEGER)"
		end

	ccom_on_doc_window_activate (cpp_obj: POINTER; f_activate: INTEGER)
			-- No description available.
		external
			"C++ [ecom_control_library::IOleInPlaceActiveObject_impl_proxy %"ecom_control_library_IOleInPlaceActiveObject_impl_proxy_s.h%"](EIF_INTEGER)"
		end

	ccom_resize_border (cpp_obj: POINTER; prc_border: POINTER; p_uiwindow: POINTER; f_frame_window: INTEGER)
			-- No description available.
		external
			"C++ [ecom_control_library::IOleInPlaceActiveObject_impl_proxy %"ecom_control_library_IOleInPlaceActiveObject_impl_proxy_s.h%"](ecom_control_library::tagRECT *,::IOleInPlaceUIWindow *,EIF_INTEGER)"
		end

	ccom_enable_modeless (cpp_obj: POINTER; f_enable: INTEGER)
			-- No description available.
		external
			"C++ [ecom_control_library::IOleInPlaceActiveObject_impl_proxy %"ecom_control_library_IOleInPlaceActiveObject_impl_proxy_s.h%"](EIF_INTEGER)"
		end

	ccom_delete_iole_in_place_active_object_impl_proxy (a_pointer: POINTER)
			-- Release resource
		external
			"C++ [delete ecom_control_library::IOleInPlaceActiveObject_impl_proxy %"ecom_control_library_IOleInPlaceActiveObject_impl_proxy_s.h%"]()"
		end

	ccom_create_iole_in_place_active_object_impl_proxy_from_pointer (a_pointer: POINTER): POINTER
			-- Create from pointer
		external
			"C++ [new ecom_control_library::IOleInPlaceActiveObject_impl_proxy %"ecom_control_library_IOleInPlaceActiveObject_impl_proxy_s.h%"](IUnknown *)"
		end

	ccom_item (cpp_obj: POINTER): POINTER
			-- Item
		external
			"C++ [ecom_control_library::IOleInPlaceActiveObject_impl_proxy %"ecom_control_library_IOleInPlaceActiveObject_impl_proxy_s.h%"]():EIF_POINTER"
		end

note
	copyright:	"Copyright (c) 1984-2006, Eiffel Software and others"
	license:	"Eiffel Forum License v2 (see http://www.eiffel.com/licensing/forum.txt)"
	source: "[
			 Eiffel Software
			 356 Storke Road, Goleta, CA 93117 USA
			 Telephone 805-685-1006, Fax 805-685-6869
			 Website http://www.eiffel.com
			 Customer support http://support.eiffel.com
		]"




end -- IOLE_IN_PLACE_ACTIVE_OBJECT_IMPL_PROXY

