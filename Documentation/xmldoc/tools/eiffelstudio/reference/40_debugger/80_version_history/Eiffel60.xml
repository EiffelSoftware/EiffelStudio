<document title="Release notes for EiffelStudio 6.0 related to the debugger" output="studio">
	<meta_data>
		<help></help>
	</meta_data>
	<paragraph>
		<heading><size>2</size>Graphical environment</heading>
			<list ordered="false">
				<item>Added auto expressions on watch tools, it suffices to toggle the auto button in any of the watch tool's toolbar.</item>
				<item>Enhanced breakpoint mechanism by adding print message, hit count (condition), and provide <bold>Is True</bold> and <bold>Has Changed</bold> condition.</item>
				<item>Improved the debugging options dialog with the ability to define the environment variables passed down to the debugged application.</item>
				<item>Added some configuration of the Objects tool grid. It is now possible to change the order of 'Current, arguments, locals, ...'.</item>
				<item>Added start workbench and finalized system on Debugging option dialogs.</item>
				<item>Added a new way to look at objects with the object viewer.</item>
				<item>Added a <code><keyword>rescue</keyword></code> clause indicator in call stack tool's grid.</item>
				<item>One can decide to stay in debugging mode even when compiling.</item>
				<item>Added possibility to continue on conditional breakpoint evaluation failure.</item>
				<item>Removed useless <italic>Attributes</italic> row in debugger's objects tree.</item>
				<item>The once routines node now shows states of once procedures in addition of the state of once functions.</item>
				<item>Improved cosmetic of debugger's exception handling dialog.</item>
			</list>
		<heading><size>2</size>Debugger engine</heading>
			<list ordered="false">
				<item>Added support for creation of instance of class (including generic).</item>
				<item>Added support for manifest TUPLE, and manifest ARRAY.</item>
				<item>Added support for static routine evaluation.</item>
				<item>Added ability to disable/restore assertion checking during debugging.</item>
				<item>Added evaluation of instructions with the debugger (i.e: procedure call).</item>
				<item>Fixed bug#12934 where the debugger would cause a memory corruption in a running multithreaded program.</item>
				<item>Fixed bug#12750 where the stack overflow detection was not working on Linux.</item>
				<item>Fixed bug#11755 where empty strings with a large capacity were slow to be displayed.</item>
			</list>
			
		<heading><size>2</size>Current restrictions and known issues</heading>
	<paragraph>
		<paragraph>General  limitations:</paragraph>
		<list ordered="false" >
			<item>Watch expression: Agent are not supported (for instance "agent my_function" is not supported".</item>
			<item>You cannot yet create an instance of SPECIAL.</item>
			<item>The debugger is not very helpful when the execution is stopped in an invariant.</item>
		</list>
		<paragraph>Limitations or known bugs for the Classic debugger:</paragraph>
		<list ordered="false" >
			<item>Evaluate <code><keyword>Precursor</keyword></code> will result the current feature's result (not the precursor)</item>
			<item>If you use any of the previous non supported expression in a breakpoint condition, the condition will always return True, and the debugger will stop on such condition breakpoint</item>
		</list>
		<paragraph>Limitations or known bugs for the .Net debugger:</paragraph>
		<list ordered="false" >
			<item>When stepping through disabled assertions or disabled debug clauses, the debugger may show incorrect current line.</item>
			<item>When stepping through an inspect code, the debugger may show incorrect current line (especially if the inspect is not ordered)</item>
			<item>Under dotnet v2.0 beta, the debugger may have difficulties to fetch the stack values, especially during first chance exception events</item>
		</list>
		
		<paragraph>Various known bugs for classic system :</paragraph>
		<list ordered="false" >
			<item>Wrong assertion tag shown in debugger for precondition violation if violated during an exception rescue, indeed the tag remains the one from the exception</item>
			<item>"Disable Assertion Handling" may be cancel if used in an exception rescue context</item>
		</list>		
	</paragraph>
			
	</paragraph>
</document>
