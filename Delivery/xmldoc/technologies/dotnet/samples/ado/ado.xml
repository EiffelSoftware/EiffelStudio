<document title="ADO.NET Sample">
	<meta_data>
		<help>
			<toc>
				<envision_location>Samples\.NET Framework Samples</envision_location>
				<envision_title>ADO.NET</envision_title>
			</toc>
		</help>
	</meta_data>
	<paragraph>
		<paragraph>This sample consist of a command line showing how to interact with a database.</paragraph>
		<paragraph>The DataReader object is somewhat synonymous with a read-only/forward-only cursor over data. The DataReader API supports flat as well as hierarchical data. A DataReader object is returned after executing a command against a database. The format of the returned DataReader object is different from a recordset. For example, you might use the DataReader to show the results of a search list in a web page.</paragraph>
		<heading>
			<size>2</size>Compiling
		</heading>
		<paragraph>To compile the example:
			<output output="envision">
				<list ordered="true">
					<item>Start Visual Studio .NET</item>
					<item>Choose Open Project from the File menu.</item>
					<item>Navigate to <italic>&lt;Eiffel_ENViSioN!_installation_path&gt;\compiler\examples\(.net version)\ado</italic> and select <italic>ado.eifp</italic></item>
					<item>Clicking open loads the selected project</item>
				</list>
			</output>
			<output output="studio">
				<list ordered="true">
					<item>Launch EiffelStudio.</item>
					<item>Select <bold>Use existing Ace (control file)</bold> and click <bold>OK</bold></item>
					<item>Browse to <italic>$ISE_EIFFEL\examples\dotnet\ado\ado3\</italic></item>
					<item>Choose the Ace file for the version of the .net framework you are running</item>
					<item>Choose the directory where the project will be compiled, by default the same directory containing the Ace file.</item>
					<item>Click <bold>OK</bold>.</item>
				</list>
			</output>
		</paragraph>
		<heading>
			<size>2</size>Running
		</heading>
		<paragraph>After you launch the sample, the following output appears:</paragraph>
		<code_block>
Customer ID    Company Name
ALFKI    Alfreds Futterkiste
ANATR    Ana Trujillo Emparedados y helados
ANTON    Antonio Moreno Taquera
AROUT    Around the Horn
BERGS    Berglunds snabbkp
BLAUS    Blauer See Delikatessen
BLONP    Blondesddsl p`re et fils
BOLID    Blido Comidas preparadas
BONAP    Bon app'
BOTTM    Bottom-Dollar Markets
BSBEV    B's Beverages
CACTU    Cactus Comidas para llevar
CENTC    Centro comercial Moctezuma
CHOPS    Chop-suey Chinese
COMMI    Comrcio Mineiro
CONSH    Consolidated Holdings
DRACD    Drachenblut Delikatessen
DUMON    Du monde entier
EASTC    Eastern Connection
...	...	...
WILMK    Wilman Kala
WOLZA    Wolski  Zajazd
</code_block>
		<paragraph>When the display is finished, the application wait for you to pressed the return key to finish the application.</paragraph>
		<heading>
			<size>2</size>Under the Hood
		</heading>
		<paragraph>This application shows how to interact with a database. First the connection to the database is open (
			<code>
				<keyword>create</keyword>
			</code>
			<code> 
				<local_variable>my_sql_connection</local_variable>
			</code>. 
			<feature_name>make_from_connection_string </feature_name> ( 
			<italic>my_database</italic>)), then a request to the database is made (create my_sql_command. 
			<feature_name>make_from_cmd_text_and_connection </feature_name>( 
			<italic>my_command</italic>, 
			<code>
				<local_variable>my_sql_connection</local_variable>
			</code>)). Finally,  the result of the request is displayed.
		</paragraph>
		<paragraph>This sample contains the following class: </paragraph>
		<list ordered="false">
			<item>
				<class_name>SQL_DATA_READER</class_name>
			</item>
			<item>
				<class_name>SQL_CONNECTION</class_name>
			</item>
			<item>
				<class_name>SQL_COMMAND</class_name>
			</item>
		</list>
		<heading>
			<size>2</size>Notes
		</heading>
		<paragraph>This sample is translated from the example located in the QuickStart\howto\samples\adoplus subdirectory of the .NET Framework SDK samples directory of Microsoft Visual Studio .NET.</paragraph>
	</paragraph></document>
