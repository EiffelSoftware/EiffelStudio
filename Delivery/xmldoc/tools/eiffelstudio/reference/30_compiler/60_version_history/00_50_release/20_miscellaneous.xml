<document output="studio" title="Compiler differences from 4.5 to 5.0">
	<meta_data/>
	<paragraph>
		<heading>
			<size>2</size>What's new
		</heading>                                
		<list ordered="false">
			<item>Implementation of new external syntax.</item>
			<item>Implementation of verbatim strings.</item>
			<item>Implementation of agents.</item> 
			<item>Implementation of agent creations on `Result' and `Current' object.</item>
			<item>Improved incrementality of the C compilation: fewer directories will have their C files changed after a freeze.</item>
			<item>New MSIL generation.</item> 
			<item>Introduction of 4 new basic classes: INTEGER_8, INTEGER_16, INTEGER_64, WIDE_CHARACTER.</item>
			<item>Changed the storable mechanism so that we do not store POINTER objects with their value, instead we store a NULL value. As a consequence it is safe to store on disk objects that have references to C objects. Upon retrieval those references will be equal to `default_pointer'. This is now the default behavior, if someone wants to have the previous behavior, simply call `set_keep_pointer_value' from STORABLE.</item>
		</list>
		<heading>
			<size>2</size>Improvements
		</heading>
		<list ordered="false">
			<item>New run-time speed improvement (between 30 to 100% faster than the 4.5 release).  </item>              		
		<item>Compiler that is much faster (between 200 and 300% faster than 4.5).</item>
		<item>Compiler now detects unused local variables (at freeze/finalize time only)</item>
		</list>
		<heading>
			<size>2</size>Bug fixes
		</heading>
		<list ordered="false">
			<item>Compiler now fixes incrementality issues with frozen/melted code.</item>
			<item>Degree 4/Degree 3 crash on *_SERVER when doing an incremental recompilation has been fixed.</item>
			<item>Fixed crash when using creation expression that includes a feature call.</item>
			<item>Fixed creation of an ARRAY of BIT type.</item>  
			<item>CHARACTER has been extended to support the extended ASCII which means that the following expressions are now True instead of being False as it was in our previous version:        
				<list ordered="false">
					<item>'%/127/' &lt; '%/128/'</item>
					<item>'%/127/' &lt; '%/128/'</item>
					<item>When using `independent_store', in case of retrieval error due to a name  change in one of the class attributes we will display the original attribute name that was used to make the storable file. This will help when managing many storable files.</item>
				</list>
			</item>
		</list>
	</paragraph></document>
