-- This file has been generated by EWG. Do not edit. Changes will be lost!

class CGDATA_PROVIDER_DIRECT_ACCESS_CALLBACKS_STRUCT

inherit

	EWG_STRUCT

	CGDATA_PROVIDER_DIRECT_ACCESS_CALLBACKS_STRUCT_EXTERNAL
		export
			{NONE} all
		end

create

	make_new_unshared,
	make_new_shared,
	make_unshared,
	make_shared

feature {ANY} -- Access

	sizeof: INTEGER is
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	getbytepointer: POINTER is
			-- Access member `getBytePointer'
		require
			exists: exists
		do
			Result := get_getbytepointer_external (item)
		ensure
			result_correct: Result = get_getbytepointer_external (item)
		end

	set_getbytepointer (a_value: POINTER) is
			-- Set member `getBytePointer'
		require
			exists: exists
		do
			set_getbytepointer_external (item, a_value)
		ensure
			a_value_set: a_value = getbytepointer
		end

-- TODO: function pointers not yet callable from
--		struct, use corresponding callback class instead
	releasebytepointer: POINTER is
			-- Access member `releaseBytePointer'
		require
			exists: exists
		do
			Result := get_releasebytepointer_external (item)
		ensure
			result_correct: Result = get_releasebytepointer_external (item)
		end

	set_releasebytepointer (a_value: POINTER) is
			-- Set member `releaseBytePointer'
		require
			exists: exists
		do
			set_releasebytepointer_external (item, a_value)
		ensure
			a_value_set: a_value = releasebytepointer
		end

-- TODO: function pointers not yet callable from
--		struct, use corresponding callback class instead
	getbytes: POINTER is
			-- Access member `getBytes'
		require
			exists: exists
		do
			Result := get_getbytes_external (item)
		ensure
			result_correct: Result = get_getbytes_external (item)
		end

	set_getbytes (a_value: POINTER) is
			-- Set member `getBytes'
		require
			exists: exists
		do
			set_getbytes_external (item, a_value)
		ensure
			a_value_set: a_value = getbytes
		end

-- TODO: function pointers not yet callable from
--		struct, use corresponding callback class instead
	releaseprovider: POINTER is
			-- Access member `releaseProvider'
		require
			exists: exists
		do
			Result := get_releaseprovider_external (item)
		ensure
			result_correct: Result = get_releaseprovider_external (item)
		end

	set_releaseprovider (a_value: POINTER) is
			-- Set member `releaseProvider'
		require
			exists: exists
		do
			set_releaseprovider_external (item, a_value)
		ensure
			a_value_set: a_value = releaseprovider
		end

-- TODO: function pointers not yet callable from
--		struct, use corresponding callback class instead
end
