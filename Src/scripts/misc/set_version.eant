<?xml version="1.0"?>

<project name="set_version" default="help">
	<description>
		description: "set version in CONSTANTS class for EiffelStudio"
		author: "Jocelyn Fiat and others"
		note: "This script could be split into severals scripts, one for each product"
	</description>
	<inherit>
		<parent location="${EIFFEL_SRC}/scripts/misc/_common_.eant">
			<redefine target="help"/>
		</parent>
	</inherit>

	<target name="help">
		<echo message="usage:"/>
		<echo message=" geant  set_version" />
	</target>	

	<!-- end of set_version -->
	<target name="set_version">
		<echo message="Set version of ec" />

		<exec executable="sed --version"  accept_errors="true" exit_code_variable="return_code" if="${is_windows}"/>
		<exec executable="sed -n -f /dev/null &lt; /dev/null"  accept_errors="true" exit_code_variable="return_code" unless="${is_windows}" />		
		<echo message="Warning: sed is not found, thus the revision number won't be updated." unless="${return_code}=0" />
		<set name="sed_available" value="true" if="${return_code}=0" />
		<geant target="internal_set_version" if="$sed_available" />
	</target>

	<target name="internal_set_version">
		<geant target="set_version_windows" if="$is_windows" />
		<geant target="set_version_unix" unless="$is_windows" />
	</target>

	<target name="set_version_windows" depend="init" if="${is_windows}" >
		<set name="set_version_fn" value="${cwd}\tmp_b_set_version.bat" />
		<set name="tmp_target_dirname" value="${EIFFEL_SRC}\Eiffel\API\constants" />
		<echo to_file="${set_version_fn}" append="false" >
@echo off
rem Set Version
rem %1 : svn wc path
rem %2 : pattern to transform
rem %3 : filename.e
setlocal
set SVNWCT=%1
set EFILE=%3
set EFILE_TMP=%EFILE%.tmp

svn info %SVNWCT% &gt; %EFILE_TMP%
For /f &quot;tokens=1-4 delims=/ &quot; %%a in ('findstr /L /B /C:&quot;Last Changed Rev&quot; %EFILE_TMP%') do (set LASTREV=%%d)
del %EFILE_TMP%
svn revert %EFILE%

For /f &quot;tokens=2-4 delims=/ &quot; %%a in ('date /t') do (set TODAYDATE=%%c-%%a-%%b)

sed -e &quot;s/:= 0000/:= %LASTREV%/&quot; %EFILE% &gt; %EFILE_TMP%
move %EFILE_TMP% %EFILE%

rem update the version_info ...
sed -e &quot;s/Version_info:\ STRING\ is\ \&quot;[0-9a-zA-Z_\,\ \/\:()\.\=\-]*\&quot;/Version_info:\ STRING\ is\ \&quot;Revision:\ %LASTREV% , Compilation:\ %TODAYDATE%\ %TIME%\&quot;/g&quot; %EFILE% &gt; %EFILE_TMP%
move %EFILE_TMP% %EFILE%

endlocal
@echo on
		</echo>
		<exec executable="${set_version_fn} ${EIFFEL_SRC} 0000 system_constants.e" dir="${tmp_target_dirname}"
			accept_errors="true" />
		<unset name="tmp_target_dirname" />
		<delete file="${set_version_fn}" />
	</target>

	<target name="set_version_unix" depend="init" unless="${is_windows}" >
		<set name="set_version_fn" value="${cwd}/tmp_b_set_version.sh" />
		<set name="tmp_target_dirname" value="${EIFFEL_SRC}/Eiffel/API/constants" />
		<echo to_file="${set_version_fn}" append="false" >
#!/bin/sh

# set version number in $2 to the latest SVN repository version number.
# $1 = SVN repository
# $2 = file to process if any, otherwise display version on output

computed_svn_revision=`until svn info $1; do echo &quot;&quot;; done | grep &quot;Last Changed Rev&quot; | sed -e &quot;s/Last Changed Rev: //&quot;`
if [ '$2' = '' ]; then
	echo $computed_svn_revision
else
	svn revert $2 #revert in case it was modification
	sed -e "s/:= 0000/:= $computed_svn_revision/" $2 &gt; tmp
	mv tmp $2
fi
		</echo>
		<exec executable="/bin/sh ${set_version_fn} ${EIFFEL_SRC} system_constants.e" dir="${tmp_target_dirname}" 
			accept_errors="true" />
		<unset name="tmp_target_dirname" />
	</target>

	<!-- end of set_version -->
</project>
