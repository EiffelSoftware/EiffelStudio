system
	"build"

root
	GB: execute

default
	il_verifiable (yes)
	cls_compliant (yes)
	dotnet_naming_convention (yes)
	msil_generation_type ("exe")
	msil_assembly_compatibility ("None")
	assertion (no)
	disabled_debug (yes)
	disabled_debug ("dlg_dispatcher")
	disabled_debug ("vision2_windows")
	disabled_debug ("vision2_windows_gdi")
	disabled_debug ("wel")
	disabled_debug ("wel_gdi_count")
	disabled_debug ("wel_gdi_references")
	disabled_debug ("win_dispatcher")
	debug (no)
	line_generation (no)
	profile (no)
	trace (no)
	override_cluster ("preferences")
	check_vape (no)
	console_application (no)
	syntax_warning (no)
	array_optimization (yes)
	dead_code_removal (yes)
	exception_trace (yes)
	inlining (no)


-- Note that we exclude EV_WIDGET, as we have a new version for build, which allows
-- you to query whether the minimum_size and minimum_height were set by the user.
-- Same for EV_PIXMAPABLE.

cluster
	all build2:		"$EIFFEL_SRC\build2"
		exclude
			"object_editor"; "eifgen"; "EIFGEN"; "templates"; "Gtk"; "hact"; "se"; "ve"; "base"; "test"; "CVS"; "demo_version"; "gobo_16"; "exml"; 
		default
			assertion (no)
		end

	all gobo:		"$EIFFEL_SRC\library\gobo\library"
		exclude
			"hact"; "se"; "ve"; "base"; "CVS"; "other"; "gelint"; "test"; 
		default
			assertion (no)
		end

	all wel:		"$EIFFEL_SRC\library\wel"

	all vision2:	"$EIFFEL_SRC\library\vision2"
		include
			"ev_button"; 
		exclude
			"new_figures"; "gtk"; "gtk2"; "components"; "obsolete"; "release"; "ev_widget.e"; "ev_pixmapable.e"; "ev_sensitive.e"; "ev_sensitive_i.e"; "ev_widget_projector.e"; "ev_pixmap.e"; "ev_notebook.e";
		end

	all base:		"$EIFFEL_SRC\library\base"
		exclude
			"table_eiffel3"; "desc"; 
		default
			assertion (no)
		end

	all preferences:		"$EIFFEL_SRC\library\preferences"
		exclude
			"xml_implementation"; 
		end
		
	all eifp_reader: "$EIFFEL_SRC\dotnet\VisualStudio\tools\eifp_reader"
		exclude
			"cvs"
		end

	all patterns: "$EIFFEL_SRC\library\patterns"

	all ast:		"$EIFFEL_SRC\Eiffel\common"

	eiffel_parser_errors (ast):		"$EIFFEL_SRC\Eiffel\API\error\common"
		exclude
			"error_handler.e"; "syntax_error.e"; 
		end

external

	include_path:
		"$(EIFFEL_SRC)\library\wel\spec\windows\include",
		"$(EIFFEL_SRC)\library\vision2\spec\include"

	object:
		"$(EIFFEL_SRC)\library\wel\spec\$(ISE_C_COMPILER)\lib\wel.lib",
		"$(EIFFEL_SRC)\library\vision2\spec\$(ISE_C_COMPILER)\lib\vision2.lib",
		"$(EIFFEL_SRC)\library\vision2\spec\$(ISE_C_COMPILER)\lib\zlib.lib",
		"$(EIFFEL_SRC)\library\vision2\spec\$(ISE_C_COMPILER)\lib\libpng.lib"

end
