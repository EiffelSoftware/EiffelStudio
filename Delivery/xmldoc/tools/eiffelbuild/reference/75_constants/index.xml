<document title="Constants">
	<meta_data>
		<help>
			<toc>
				<envision_pseudo_name>75</envision_pseudo_name>
				<envision_location>Eiffel ENViSioN!\Developing with Eiffel ENViSioN!\Adding a New Project\Advanced GUI Project Wizard\Interface Construction Page\Reference</envision_location>
			</toc>
		</help>
	</meta_data>
	<paragraph>
		<paragraph>The wizardsupports the use of constants, permitting you to define a particular value and use it comprehensively throughout your system. If a constant is in use, any changes are reflected immediately in all clients, providing a quick way of globally changing object properties. The Eiffel code generated by the wizard, generates all constants as actual Eiffel constants for use in your system.</paragraph>
		<paragraph>The following constant types are supported by the wizard: 
			<list ordered="false">
				<item>
					<bold>String</bold> - Representing the Eiffel STRING type.
				</item>
				<item>
					<bold>Integer</bold> - Representing the Eiffel INTEGER type.
				</item>
				<item>
					<bold>Directory</bold> - Representing a directory location, of type STRING.
				</item>
				<item>
					<bold>Pixmap</bold> - Representing an EV_PIXMAP, and either absolute, or built from a  directory constant.
				</item>
			</list>
			<heading>
				<size>2</size>Constants Dialog
			</heading>
			<paragraph>Modification to all constant types is performed from the constants dialog, accessible from the 
				<link>
					<url>/10_Developing/10_Getting_Started/10_Using_ENViSioN/10_Adding_A_New_Project/interactive_gui_project/interface_construction.xml#main_toolbar</url>
					<label>main toolbar</label>
				</link> via the 
				<image> 
					<url>/images/eiffelbuild/icons/icon_format_onces_color.png</url>
				</image> button. The constants dialog has the following appearance:
			</paragraph>
			<paragraph>
				<image> 
					<url>/images/eiffelbuild/screenshots/constants_dialog.png</url>
				</image>
			</paragraph>
			<paragraph>The screenshot above, shows the constants dialog displayed for a project containing eight constants, a few of each available type. Each of the constants in the project are displayed in the multi column list occupying most of the dialog. </paragraph>
			<paragraph>The "Type", "Name" and "Value" fields displayed along the bottom of the dialog are used to permit addition and modification of constants. The "OK" button displayed in the top right hand corner of the dialog closes the dialog when modifications to the constants are complete. 
				<heading>
					<size>3</size>Adding a new constant
				</heading>
				<paragraph>To add a new constant to your project, select the type of the constant that you wish to add from the "Type" combo box. Depending on the type of constant selected, the remaining fields, and associated buttons will be modified appropriately, and the steps required to add the constant differ: 
					<list ordered="false">
						<item>
							<bold>String</bold> and 
							<bold>Integer</bold> - Enter the name in the "Name" field, and value in the "Value" field. The "New"  button is only enabled when the name is valid, and a valid entry is set, and  clicking it adds the new constant.
						</item>
						<item>
							<bold>Directory</bold> - Enter a name for the directory in the "Name" field, and then select "New"  which displays a choose directory dialog. Selecting a directory from this  dialog and pressing "OK" adds the new directory constant to the project.
						</item>
						<item>
							<bold>Pixmap</bold> - Select the "New" button, which brings up the Pixmap Constant  Dialog enabling you to select a constant. The use of this dialog is described  further down this page.
						</item>
					</list>
					<note>
						<bold>Note</bold>: After adding a new constant, it is immediately displayed with all constants in the dialog.
					</note>
					<heading>
						<size>3</size>Modifying an existing constant
					</heading>
					<paragraph>To modify a constant that already exists, select the constant in the multi column list, and depending on the type of the constant, perform the following: 
						<list ordered="false">
							<item>
								<bold>String</bold> and 
								<bold>Integer</bold> - Modify the value, which in turn, enables the "Modify" button, which must be  selected for the value to change. Note that if you change the name, the "New"  button is enabled as this will now add a new constant.
							</item>
							<item>
								<bold>Directory</bold> - Select the "Modify" button which displays a directory dialog, permitting  selection of the new value.
							</item>
							<item>
								<bold>Pixmap</bold> - Select the "Modify" button which displays the Pixmap Constant  Dialog, in a mode which permits you to select the new pixmap you wish to use.
							</item>
						</list>
						<heading>
							<size>3</size>Removing constants
						</heading>
						<paragraph>To remove a constant from the project, select it in the multi column list, and select the "Remove" button, or press the delete key. If the constant is not in use within the system, it will be removed, otherwise the following dialog is displayed:</paragraph>
						<paragraph>
							<image> 
								<url>/images/eiffelbuild/screenshots/constant_in_use.png</url>
							</image>
						</paragraph>
						<paragraph>As objects are reliant on the constant you are removing, you must confirm that you really wish to remove it from the system. If you select "OK", the constant is removed, and the object property relying on that constant is converted to a manifest value. For example, if you are using an Integer constant with a value fo 100, and you remove the constant, the property no longer references the constant, but is set explicitly to 100.</paragraph>
						<note>
							<bold>Note</bold>: You may sort the constants displayed in the dialog, by clicking the associated column header.
						</note>
						<heading>
							<size>2</size>String constant
						</heading>
						<paragraph>A String constant represents an Eiffel STRING, and may be any valid STRING. For example, in the generated constants file, for a String constant named `modify_button_text', the following code is generated:</paragraph>
						<code_block>
						</code_block>
						<heading>
							<size>2</size>Integer constant
						</heading>
						<paragraph>A Integer constant represents an Eiffel INTEGER, and may be any valid INTEGER value. For example, in the generated constants file, for an Integer constant named `medium_padding', the following code is generated:</paragraph>
						<code_block>
						</code_block>
						<heading>
							<size>2</size>Directory constant
						</heading>
						<paragraph>A Directory constant is an Eiffel representation of a directory, as a STRING value. For example, in the generated constants file, for a Directory constant named `pixmap_location', the following code is generated:</paragraph>
						<code_block>
						</code_block>
						<heading>
							<size>2</size>Pixmap constant
						</heading>
						<paragraph>A pixmap constant is a representation of a pixmap image, and two types are available:</paragraph>
						<list ordered="false">
							<item>
								<bold>Absolute</bold> - The generated code contains a constant of type EV_PIXMAP,  built from a single, absolute path, based on the location of the original  pixmap on disk as follows:
								<code_block>															</code_block>
							</item>
							<item>
								<bold>Relative</bold> - The generated code contains a constant of type EV_PIXMAP,  built from a file name and a directory constant. This type of pixmap constant  is the most frequently used, as it is more flexible. By redefining the value of  the directory constant on which it is based, your systems may easily account  for the intallation location of the pixmap. A relative Pixmap constant is  generated as follows: 
								<code_block>
								</code_block>
								<paragraph>Where `pixmap_location' is the name of the Directory constant to which the  pixmap is relative.</paragraph>
							</item>
						</list>
						<heading>
							<size>3</size>Pixmap constant dialog
						</heading>
						<paragraph>The Pixmap Constant dialog is used to select pixmaps for addition to the project, and is displayed from the Constants dialog when necessary. The Pixmap Constant dialog has the following appearance:</paragraph>
						<paragraph>
							<image> 
								<url>/images/eiffelbuild/screenshots/pixmap_selection_dialog.png</url>
							</image>
						</paragraph>
						<paragraph> An individual pixmap may be selected, or a whole directory of pixmaps may be selected from this dialog for addition. In the screenshot above, a directory containing two pixmaps was selected. The "Build from" option at the bottom of the dialog permits you to select if you wish to add an absolute or relative pixmap, and if multiple pixmaps are being added, the currently selected pixmap from the list above is active. The relative "DIRECTORY" for relative pixmaps is filled in automatically ifthe wizardfinds a directory constant in the system that matches the path chosen. If not, you may enter a name in this field to create a new directory matching the required path. If you do not enter a directory name for one or more relative pixmaps, upon closing the dialog, you will be prompted to enter a name for a directory constant used for these pixmaps. 
							<note>
								<bold>Note</bold>: If you are selecting new pixmaps, and they appear in the dialog as unchecked, it means that an equivalent pixmap already exists in the project.
							</note>
							<heading>
								<size>2</size>Using constants
							</heading>
							<paragraph>Constants may be associated to properties of your 
								<link>
									<url>/10_Developing/10_Getting_Started/10_Using_ENViSioN/10_Adding_A_New_Project/interactive_gui_project/eiffelbuild/reference/02_notation.xml#object</url>
									<label>objects</label>
								</link> via an 
								<link>
									<url>../40_object_editor/40_object_editor/index.xml</url>
									<label> object editor</label>
								</link> targeted to that 
								<link>
									<url>/10_Developing/10_Getting_Started/10_Using_ENViSioN/10_Adding_A_New_Project/interactive_gui_project/eiffelbuild/reference/02_notation.xml#object</url>
									<label>object</label>
								</link>. The 
								<image> 
									<url>/images/eiffelbuild/icons/icon_format_onces_color.png</url>
								</image> button denotes the use of a constant value. For more information regarding using constants, in 
								<link>
									<url>../40_object_editor/index.xml</url>
									<label> object editors</label>
								</link>, see 
								<link>
									<url>../40_object_editor/index.xml</url>
									<label> object editor</label>
								</link>. 
							</paragraph>
							<paragraph>Whenthewizardproject is generated, all constants are added to a class, inherited by each window class. There is an "_IMP" and interface versions of these classes as with each window.
								<note>
									<bold>Note</bold>: To modify pixmap constants based on the current installation of a projectinterface generated from the wizard, simply redefine the Directory constant used to access the pixmaps within the interface constants class (not "_IMP"), which is not re-generated if it already exists.
								</note>
								<seealso>
									<bold>See also</bold>: 
									<line_break/>
									<link>
										<url>../40_object_editor/index.xml</url>
										<label>Object editor</label>
									</link>
									<line_break/>
								</seealso>
							</paragraph>
						</paragraph>
					</paragraph>
				</paragraph>
			</paragraph>
		</paragraph>
	</paragraph></document>