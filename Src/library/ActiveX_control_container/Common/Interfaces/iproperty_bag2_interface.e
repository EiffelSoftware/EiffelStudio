indexing
	description: "Control interfaces. Help file: "
	Note: "Automatically generated by the EiffelCOM Wizard."

deferred class
	IPROPERTY_BAG2_INTERFACE

inherit
	ECOM_INTERFACE

feature -- Status Report

	read_user_precondition (c_properties: INTEGER; p_prop_bag: TAG_PROPBAG2_RECORD; p_err_log: IERROR_LOG_INTERFACE; pvar_value: ECOM_VARIANT; phr_error: ECOM_HRESULT): BOOLEAN is
			-- User-defined preconditions for `read'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	write_user_precondition (c_properties: INTEGER; p_prop_bag: TAG_PROPBAG2_RECORD; pvar_value: ECOM_VARIANT): BOOLEAN is
			-- User-defined preconditions for `write'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	count_properties_user_precondition (pc_properties: INTEGER_REF): BOOLEAN is
			-- User-defined preconditions for `count_properties'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	get_property_info_user_precondition (i_property: INTEGER; c_properties: INTEGER; p_prop_bag: TAG_PROPBAG2_RECORD; pc_properties: INTEGER_REF): BOOLEAN is
			-- User-defined preconditions for `get_property_info'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	load_object_user_precondition (pstr_name: STRING; dw_hint: INTEGER; punk_object: ECOM_INTERFACE; p_err_log: IERROR_LOG_INTERFACE): BOOLEAN is
			-- User-defined preconditions for `load_object'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

feature -- Basic Operations

	read (c_properties: INTEGER; p_prop_bag: TAG_PROPBAG2_RECORD; p_err_log: IERROR_LOG_INTERFACE; pvar_value: ECOM_VARIANT; phr_error: ECOM_HRESULT) is
			-- No description available.
			-- `c_properties' [in].  
			-- `p_prop_bag' [in].  
			-- `p_err_log' [in].  
			-- `pvar_value' [out].  
			-- `phr_error' [out].  
		require
			non_void_p_prop_bag: p_prop_bag /= Void
			valid_p_prop_bag: p_prop_bag.item /= default_pointer
			non_void_pvar_value: pvar_value /= Void
			valid_pvar_value: pvar_value.item /= default_pointer
			non_void_phr_error: phr_error /= Void
			read_user_precondition: read_user_precondition (c_properties, p_prop_bag, p_err_log, pvar_value, phr_error)
		deferred

		ensure
			valid_phr_error: phr_error.item /= Void
		end

	write (c_properties: INTEGER; p_prop_bag: TAG_PROPBAG2_RECORD; pvar_value: ECOM_VARIANT) is
			-- No description available.
			-- `c_properties' [in].  
			-- `p_prop_bag' [in].  
			-- `pvar_value' [in].  
		require
			non_void_p_prop_bag: p_prop_bag /= Void
			valid_p_prop_bag: p_prop_bag.item /= default_pointer
			non_void_pvar_value: pvar_value /= Void
			valid_pvar_value: pvar_value.item /= default_pointer
			write_user_precondition: write_user_precondition (c_properties, p_prop_bag, pvar_value)
		deferred

		end

	count_properties (pc_properties: INTEGER_REF) is
			-- No description available.
			-- `pc_properties' [out].  
		require
			non_void_pc_properties: pc_properties /= Void
			count_properties_user_precondition: count_properties_user_precondition (pc_properties)
		deferred

		end

	get_property_info (i_property: INTEGER; c_properties: INTEGER; p_prop_bag: TAG_PROPBAG2_RECORD; pc_properties: INTEGER_REF) is
			-- No description available.
			-- `i_property' [in].  
			-- `c_properties' [in].  
			-- `p_prop_bag' [out].  
			-- `pc_properties' [out].  
		require
			non_void_p_prop_bag: p_prop_bag /= Void
			valid_p_prop_bag: p_prop_bag.item /= default_pointer
			non_void_pc_properties: pc_properties /= Void
			get_property_info_user_precondition: get_property_info_user_precondition (i_property, c_properties, p_prop_bag, pc_properties)
		deferred

		end

	load_object (pstr_name: STRING; dw_hint: INTEGER; punk_object: ECOM_INTERFACE; p_err_log: IERROR_LOG_INTERFACE) is
			-- No description available.
			-- `pstr_name' [in].  
			-- `dw_hint' [in].  
			-- `punk_object' [in].  
			-- `p_err_log' [in].  
		require
			load_object_user_precondition: load_object_user_precondition (pstr_name, dw_hint, punk_object, p_err_log)
		deferred

		end

end -- IPROPERTY_BAG2_INTERFACE

