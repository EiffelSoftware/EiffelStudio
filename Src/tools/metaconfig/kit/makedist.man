.rn '' }`
''' $Id: makedist.man 78389 2004-11-30 00:17:17Z manus $
'''
'''  Copyright (c) 1991-1993, Raphael Manfredi
'''  
'''  You may redistribute only under the terms of the Artistic Licence,
'''  as specified in the README file that comes with the distribution.
'''  You may reuse parts of this distribution only within the terms of
'''  that same Artistic Licence; a copy of which may be found at the root
'''  of the source tree for dist 3.0.
'''
''' $Log$
''' Revision 1.1  2004/11/30 00:17:18  manus
''' Initial revision
'''
''' Revision 3.0.1.2  1995/05/12  11:58:16  ram
''' patch54: updated my e-mail address
'''
''' Revision 3.0.1.1  1994/05/06  14:00:50  ram
''' patch23: now mentions kitpost and kitsend
'''
''' Revision 3.0  1993/08/18  12:04:31  ram
''' Baseline for dist 3.0 netwide release.
'''
''' 
.de Sh
.br
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.ie n \{\
.tr \(*W-\*(Tr
.ds -- \(*W-
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
.ds L' '
.ds R' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds L' `
.ds R' '
'br\}
.TH MAKEDIST 1 LOCAL
.SH NAME
makedist \- a distribution kit maker
.SH SYNOPSIS
.B makedist
[ \fB\-dhqvV\fR ] [ \fB\-c\fI dir\fR ]
[ \fB\-s\fI size\fR ] [\fB\-f \fImanifest\fR ]
.SH DESCRIPTION
.I Makedist
is a rather simpleminded shar program that knows how to pack files
into multiple kits of approximately 50000 bytes each.
The shar scripts produced assume very little about the target machine;
there is correspondingly little error checking done compared to other
shar programs. Alternatively, with the \fB\-c\fR option, you can
create a directory containing the whole source tree, and then pack it
up using your own shell archiver.
.PP
If you are using the copyright expansion feature (as determined by
\fIpackinit\fR), then you have to pack your distribution using this
program to ensure the copyright is correctly set.
.PP
In order to run \fImakedist\fR you have to do two things:
.IP 1) 4
Create a .package file in the package's top-level directory by running
\fIpackinit\fR.
This program will ask you about your package and remember what you tell
it so that all the \fIdist\fR programs can be smart.
.IP 2) 4
Create a MANIFEST.new file in your top-level directory that lists all the
files in your package.
The filename should be the first field on each line.
After some whitespace you can add a comment describing your file (briefly).
.PP
After running \fImakedist\fR,
you will have a set of kits in your top-level directory.
If your package name is "foo", they will be named foo.kit1, foo.kit2, etc.
The file created PACKLIST file is automatically added to the distribution and
tells which files come with which kits.
If you used the \fB\-c\fR option, you will end-up with a single directory
instead, containing the whole distribution, ready to be sent to the end-user.
.PP
If a file is too large to be packed as-is in one archive, it will be
automatically split in smaller parts. Only the first 11 characters of the file
will be kept though, and \fImakedist\fR will abort if two distinct files are
to be split and have the same 11 first characters in their names. The split
files will automatically be reconstructed at the end of the archive extraction
by runnning a script generated in PACKNOTES.
.PP
You may then mail your kits via \fIkitsend\fR or post them with \fIkitpost\fR.
.SH OPTIONS
The following options are handled by \fImakedist\fR:
.TP 10
.B \-c \fIdir\fR
Tell \fImakedist\fR that the distribution should be copied (mirrored) in
the specified directory, instead of producing shell archives. Compatible with
the \fB\-q\fR option.
.TP
.B \-d
Turn on debug mode. Probably not useful.
.TP
\fB-f\fI file\fR
Use \fIfile\fR as manifest. By default, MANIFEST.new is used.
.TP
.B \-h
Print help message and exit.
.TP
.B \-q
Quick production of the kits: the checked-out version of the files is used,
instead of using the RCS file to actually get the latest checked-in version.
This will save some considerable time, but you have to be sure the checked-out
version is up-to-date or you might end up with an inconsistent package.
.TP
\fB\-s\fI size\fR
Set maximum kit size to \fIsize\fR bytes.
.TP
.B \-v
Verbose mode: trace kit building process or tree mirroring.
.TP
.B \-V
Print version number and exit.
.SH AUTHORS
Larry Wall <lwall@netlabs.com> (version 2.0)
.br
Raphael Manfredi <ram@hptnos02.grenoble.hp.com>
.SH FILES
Creates ./$package.kit* unless \fB\-c\fR option is used.
.br
PACKLIST and PACKNOTES are also temporarily created.
.SH "SEE ALSO"
kitsend(1), kitpost(1), metaconfig(1), patcol(1)
.rn }` ''
