system eifbench

root

	ANY

cluster

		kernel:				"$EIFFEL3/library/base/kernel";
		support:			"$EIFFEL3/library/base/support";
		access:				"$EIFFEL3/library/base/structures/access";
		cursors:			"$EIFFEL3/library/base/structures/cursors";
		dispenser:			"$EIFFEL3/library/base/structures/dispenser";
		list:				"$EIFFEL3/library/base/structures/list";
		set:				"$EIFFEL3/library/base/structures/set";
		sort:				"$EIFFEL3/library/base/structures/sort";
		storage:			"$EIFFEL3/library/base/structures/storage";
		table:				"$EIFFEL3/library/base/structures/table";
		traversing:			"$EIFFEL3/library/base/structures/traversing";
		tree:				"$EIFFEL3/library/base/structures/tree";
		lex:				"$EIFFEL3/library/lex";
	
	-- ES3 SPECIFIC CLUSTERS
		--liman_common:		"$BENCH/Eiffel/limand/common";
		--liman_bench:		"$BENCH/Eiffel/limand/bench";
		beurk:				"$BENCH/Eiffel/beurk";
		replication:		"$BENCH/Eiffel/eiffel/replication";
	
	-- Debugger
		debugclas:			"$BENCH/Eiffel/debug";
		ipc:				"$BENCH/Eiffel/ipc";

	-- API for compiled info
		api_constants:		"$BENCH/Eiffel/API/constants";
		api_shared:			"$BENCH/Eiffel/API/shared";
		--api_queries:		"$BENCH/Eiffel/API/queries";
		api_interface:	  	"$BENCH/Eiffel/API/interface";
		api_common:	  		"$BENCH/Eiffel/API/common";
		api_debug:	  		"$BENCH/Eiffel/API/debug";
		api_output:	  		"$BENCH/Eiffel/API/output";

	-- Flat short
		flat_short:			"$BENCH/Eiffel/flat_short/abstract";
		flat_short_b:		"$BENCH/Eiffel/flat_short/bench";
		struct_text:		"$BENCH/Eiffel/structured_text";
	
	-- Lace compilation:
		lace_AST:			"$BENCH/Eiffel/lace/AST";
		env:				"$BENCH/Eiffel/lace/env";
		lace_error:			"$BENCH/Eiffel/lace/error";
		lace_compile:		"$BENCH/Eiffel/lace/lace_compile";
		lace_shared:		"$BENCH/Eiffel/lace/shared";

	-- Eiffel compilation:
	-- abstract
		instructions:		"$BENCH/Eiffel/eiffel/AST/abstract/instructions";
		expressions:		"$BENCH/Eiffel/eiffel/AST/abstract/expressions";
		ast_skeleton:		"$BENCH/Eiffel/eiffel/AST/abstract/skeleton";
		ast_stonables:		"$BENCH/Eiffel/eiffel/AST/abstract/stonables";
	-- bench
		instructions_b:		"$BENCH/Eiffel/eiffel/AST/bench/instructions";
		expressions_b:		"$BENCH/Eiffel/eiffel/AST/bench/expressions";
		ast_skeleton_b:		"$BENCH/Eiffel/eiffel/AST/bench/skeleton";
		ast_stonables_b:	"$BENCH/Eiffel/eiffel/AST/bench/stonables";

	-- Compiler
		yacc:				"$BENCH/Eiffel/yacc";
		const:				"$BENCH/Eiffel/const";
		error:				"$BENCH/Eiffel/error";

		actual_type:		"$BENCH/Eiffel/eiffel/actual_type";
		byte_code:			"$BENCH/Eiffel/eiffel/byte_code";
		cecil:				"$BENCH/Eiffel/eiffel/cecil";
		compiler:			"$BENCH/Eiffel/eiffel/compiler";
		eiffel_const:		"$BENCH/Eiffel/eiffel/const";
		eiffel_error_feature:			"$BENCH/Eiffel/eiffel/error/feature";
		eiffel_error_parents:			"$BENCH/Eiffel/eiffel/error/parents";
		eiffel_error_redefined:			"$BENCH/Eiffel/eiffel/error/redefined";
		eiffel_error_unredefined:		"$BENCH/Eiffel/eiffel/error/unredefined";
		generation:			"$BENCH/Eiffel/eiffel/generation";
		genericity:			"$BENCH/Eiffel/eiffel/genericity";
		inheritance:		"$BENCH/Eiffel/eiffel/inheritance";
		interface:			"$BENCH/Eiffel/eiffel/interface";
		polymorphism:		"$BENCH/Eiffel/eiffel/polymorphism";
		server:				"$BENCH/Eiffel/eiffel/server";
		eiffel_shared:		"$BENCH/Eiffel/eiffel/shared";
		skeleton:			"$BENCH/Eiffel/eiffel/skeleton";
		structures:			"$BENCH/Eiffel/eiffel/structures";
		tables:				"$BENCH/Eiffel/eiffel/tables";
		descriptor:			"$BENCH/Eiffel/eiffel/descriptor";


	-- Switch:

		switch:			 	"$BENCH/Eiffel/batch_bench/bench"
			exclude 
				"windows.e"
			end;
		melt_only_switch:   "$BENCH/Eiffel/batch_bench/professional"
			exclude 
				"shared_batch_compiler.e"
			end;
		dle:				"$BENCH/Eiffel/dle/no_dle"
			exclude 
				"dle_license.e"
			end;

	-- Case
		case_common:		"$BENCH/Eiffel/case_storage/common";
		case_bench:		 	"$BENCH/Eiffel/case_storage/bench";

	-- Resources
		resources_common:   "$BENCH/Eiffel/resources/common";
		resources_bench:	"$BENCH/Eiffel/resources/bench";

	-- Profiling
		--converter:		  "$BENCH/Eiffel/profiler/converter";
		--profiling:		  "$BENCH/Eiffel/profiler/profiling";
		--querying:		   "$BENCH/Eiffel/profiler/querying";
		--filters:			"$BENCH/Eiffel/profiler/querying/filters";
		--matching:		   "$BENCH/Eiffel/profiler/matching";

external

	object:
		"$(BENCH)/C/parsing/eiffel/libweiffel.a";
		"$(BENCH)/C/parsing/lace/liblace.a";
		"$(BENCH)/C/parsing/shared/libparsing.a";
		"$(BENCH)/C/platform/libplatform.a";
		"$(BENCH)/C/ipc/ewb/libewb.a";
		"$(BENCH)/C/ipc/shared/libipc.a";
		"$(BENCH)/C/liman/client/libliman.a";
		"$(BENCH)/C/liman/shared/libshared.a";
		"$(BENCH)/C/idrs/libidr.a";
		"$(EIFFEL3)/library/lex/spec/$(PLATFORM)/lib/lex.a"

end
