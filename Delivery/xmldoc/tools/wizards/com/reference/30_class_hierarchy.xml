<document title="Class Hierarchy" output="studio">
	<meta_data></meta_data>
	<paragraph>
		<paragraph>
			The generated Eiffel code reflects the architecture of the component described in the definition file. Each interface corresponds to 
			a deferred Eiffel class that includes one deferred feature per interface function. The deferred features are implemented in the heir 
			inheriting from all interfaces.
		</paragraph>
		<image>
			<url>../images/interface_inheritance.png</url>
		</image>
		<paragraph>In a project accessing an existing component, the Eiffel classes corresponding to component coclasses inherit from the class 
			<link>
				<url>../../../../libraries/com/reference/Interfaces/ecom_queriable_chart.xml</url>
				<label>
					<class_name>ECOM_QUERIABLE</class_name>
				</label>
			</link>, which is part of the EiffelCOM library. This class includes the feature 
			<feature_name>make_from_other</feature_name> which allows initializing the component from another instance of 
			<link>
				<url>../../../../libraries/com/reference/Interfaces/ecom_interface_chart.xml</url>
				<label>
					<class_name>ECOM_INTERFACE</class_name>
				</label>
			</link>.
		</paragraph>
		<image>
			<url>../images/interface_inheritance_server.png</url>
		</image>
		<paragraph>In a project implementing a new component, the Eiffel classes corresponding to component coclasses inherit from the class 
			<link>
				<url>../../../../libraries/com/reference/Interfaces/ecom_stub_chart.xml</url>
				<label>
					<class_name>ECOM_STUB</class_name>
				</label>
			</link>, which is part of the EiffelCOM library. This class includes the feature 
			<link>
				<url>../../../../libraries/com/reference/Interfaces/ecom_stub_chart.xml</url><anchor_name>f_create_item</anchor_name>
				<label><feature_name>create_item</feature_name></label>
			</link> which allows initializing the component.
		</paragraph>
		<paragraph>
			The  <bold>Interface_proxy</bold> folder includes Eiffel classes wrapping interfaces that may be returned by functions on other interfaces. 
			These classes inherit from both the deferred interface class located in <bold>Common\Interfaces</bold> and 
			<link>
				<url>../../../../libraries/com/reference/Interfaces/ecom_queriable_chart.xml</url>
				<label>
					<class_name>ECOM_QUERIABLE</class_name>
				</label>
			</link>.
		</paragraph>
		<image>
			<url>../images/implemented_interface.png</url>
		</image>
		<paragraph>
			The  <bold>Interface_stub</bold> folder includes Eiffel classes implementing interfaces that may be given to the component as an argument. 
			These classes inherit from both the deferred interface class and 
			<link>
				<url>../../../../libraries/com/reference/Interfaces/ecom_stub_chart.xml</url>
				<label>
					<class_name>ECOM_STUB</class_name>
				</label>
			</link>.
		</paragraph>
		<image>
			<url>../images/implemented_interface_server.png</url>
		</image>
		<paragraph> For both Eiffel coclass and Implemented interfaces, the 
			<class_name>INTERFACE</class_name> class contains no implementation; it only defines the signatures of the functions that are part of the interface.
		</paragraph>
		<seealso>
			<bold>See Also</bold>: <link><url>10_how_wizard_works.xml</url><label>How the EiffelCOM Wizard Works</label></link>, 
			<link><url>20_generated_files.xml</url><label>Generated Files</label></link>, 
			<link><url>30_class_hierarchy.xml</url><label>Class Hierarchy</label></link>, 
			<link><url>40_eiffel_project.xml</url><label>Adding a COM Interface to an Eiffel Project</label></link>,
			<link><url>50_accessing.xml</url><label>Accessing a COM Component</label></link>,
			<link><url>60_reusing.xml</url><label>Reusing a COM Component</label></link>,
			<link><url>70_options.xml</url><label>Command Line Options</label></link>
		</seealso>
	</paragraph></document>
