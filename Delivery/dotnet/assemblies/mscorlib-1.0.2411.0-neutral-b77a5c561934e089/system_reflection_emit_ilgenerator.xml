<!DOCTYPE type SYSTEM "../type.dtd">
<class>
	<header>
		<modified>False</modified>
		<frozen>False</frozen>
		<expanded>False</expanded>
		<deferred>False</deferred>
		<generic>False</generic>
		<class_eiffel_name>SYSTEM_REFLECTION_EMIT_ILGENERATOR</class_eiffel_name>
		<alias>
			<simple_name>ILGenerator</simple_name>
			<namespace>System.Reflection.Emit</namespace>
			<assembly_name>mscorlib</assembly_name>
			<assembly_version>1.0.2411.0</assembly_version>
			<assembly_culture>neutral</assembly_culture>
			<assembly_public_key>b77a5c561934e089</assembly_public_key>
		</alias>
		<create_none>True</create_none>
	</header>
	<body>
		<basic_operations>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_label</feature_eiffel_name>
				<feature_external_name>DefineLabel</feature_external_name>
				<return_type>SYSTEM_REFLECTION_EMIT_LABEL</return_type>
				<return_type_full_name>System.Reflection.Emit.Label</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit</feature_eiffel_name>
				<feature_external_name>Emit</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>opcode</argument_eiffel_name>
						<argument_external_name>opcode</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_OPCODE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.OpCode</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit_write_line</feature_eiffel_name>
				<feature_external_name>EmitWriteLine</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit_op_code_type</feature_eiffel_name>
				<feature_external_name>Emit</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>opcode</argument_eiffel_name>
						<argument_external_name>opcode</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_OPCODE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.OpCode</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>cls</argument_eiffel_name>
						<argument_external_name>cls</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>begin_except_filter_block</feature_eiffel_name>
				<feature_external_name>BeginExceptFilterBlock</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit_call</feature_eiffel_name>
				<feature_external_name>EmitCall</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>opcode</argument_eiffel_name>
						<argument_external_name>opcode</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_OPCODE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.OpCode</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>method_info</argument_eiffel_name>
						<argument_external_name>methodInfo</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_METHODINFO</argument_type>
						<argument_type_full_name>System.Reflection.MethodInfo</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>optional_parameter_types</argument_eiffel_name>
						<argument_external_name>optionalParameterTypes</argument_external_name>
						<argument_type>ARRAY [SYSTEM_TYPE]</argument_type>
						<argument_type_full_name>System.Type[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>begin_scope</feature_eiffel_name>
				<feature_external_name>BeginScope</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit_op_code_method_info</feature_eiffel_name>
				<feature_external_name>Emit</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>opcode</argument_eiffel_name>
						<argument_external_name>opcode</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_OPCODE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.OpCode</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>meth</argument_eiffel_name>
						<argument_external_name>meth</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_METHODINFO</argument_type>
						<argument_type_full_name>System.Reflection.MethodInfo</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>throw_exception</feature_eiffel_name>
				<feature_external_name>ThrowException</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>exc_type</argument_eiffel_name>
						<argument_external_name>excType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>declare_local</feature_eiffel_name>
				<feature_external_name>DeclareLocal</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>local_type</argument_eiffel_name>
						<argument_external_name>localType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_LOCALBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.LocalBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit_op_code_single</feature_eiffel_name>
				<feature_external_name>Emit</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>opcode</argument_eiffel_name>
						<argument_external_name>opcode</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_OPCODE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.OpCode</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>arg</argument_eiffel_name>
						<argument_external_name>arg</argument_external_name>
						<argument_type>REAL</argument_type>
						<argument_type_full_name>System.Single</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>begin_exception_block</feature_eiffel_name>
				<feature_external_name>BeginExceptionBlock</feature_external_name>
				<return_type>SYSTEM_REFLECTION_EMIT_LABEL</return_type>
				<return_type_full_name>System.Reflection.Emit.Label</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>using_namespace</feature_eiffel_name>
				<feature_external_name>UsingNamespace</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>using_namespace2</argument_eiffel_name>
						<argument_external_name>usingNamespace</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>begin_fault_block</feature_eiffel_name>
				<feature_external_name>BeginFaultBlock</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>end_scope</feature_eiffel_name>
				<feature_external_name>EndScope</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit_op_code_array_label</feature_eiffel_name>
				<feature_external_name>Emit</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>opcode</argument_eiffel_name>
						<argument_external_name>opcode</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_OPCODE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.OpCode</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>labels</argument_eiffel_name>
						<argument_external_name>labels</argument_external_name>
						<argument_type>ARRAY [SYSTEM_REFLECTION_EMIT_LABEL]</argument_type>
						<argument_type_full_name>System.Reflection.Emit.Label[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>end_exception_block</feature_eiffel_name>
				<feature_external_name>EndExceptionBlock</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>mark_label</feature_eiffel_name>
				<feature_external_name>MarkLabel</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>loc</argument_eiffel_name>
						<argument_external_name>loc</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_LABEL</argument_type>
						<argument_type_full_name>System.Reflection.Emit.Label</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit_op_code_int32</feature_eiffel_name>
				<feature_external_name>Emit</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>opcode</argument_eiffel_name>
						<argument_external_name>opcode</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_OPCODE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.OpCode</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>arg</argument_eiffel_name>
						<argument_external_name>arg</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit_op_code_int64</feature_eiffel_name>
				<feature_external_name>Emit</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>opcode</argument_eiffel_name>
						<argument_external_name>opcode</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_OPCODE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.OpCode</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>arg</argument_eiffel_name>
						<argument_external_name>arg</argument_external_name>
						<argument_type>INTEGER_64</argument_type>
						<argument_type_full_name>System.Int64</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit_op_code_string</feature_eiffel_name>
				<feature_external_name>Emit</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>opcode</argument_eiffel_name>
						<argument_external_name>opcode</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_OPCODE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.OpCode</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>str</argument_eiffel_name>
						<argument_external_name>str</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>mark_sequence_point</feature_eiffel_name>
				<feature_external_name>MarkSequencePoint</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>document</argument_eiffel_name>
						<argument_external_name>document</argument_external_name>
						<argument_type>SYSTEM_DIAGNOSTICS_SYMBOLSTORE_ISYMBOLDOCUMENTWRITER</argument_type>
						<argument_type_full_name>System.Diagnostics.SymbolStore.ISymbolDocumentWriter</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>start_line</argument_eiffel_name>
						<argument_external_name>startLine</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>start_column</argument_eiffel_name>
						<argument_external_name>startColumn</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>end_line</argument_eiffel_name>
						<argument_external_name>endLine</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>end_column</argument_eiffel_name>
						<argument_external_name>endColumn</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit_op_code_byte</feature_eiffel_name>
				<feature_external_name>Emit</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>opcode</argument_eiffel_name>
						<argument_external_name>opcode</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_OPCODE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.OpCode</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>arg</argument_eiffel_name>
						<argument_external_name>arg</argument_external_name>
						<argument_type>INTEGER_8</argument_type>
						<argument_type_full_name>System.Byte</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>begin_finally_block</feature_eiffel_name>
				<feature_external_name>BeginFinallyBlock</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit_op_code_double</feature_eiffel_name>
				<feature_external_name>Emit</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>opcode</argument_eiffel_name>
						<argument_external_name>opcode</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_OPCODE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.OpCode</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>arg</argument_eiffel_name>
						<argument_external_name>arg</argument_external_name>
						<argument_type>DOUBLE</argument_type>
						<argument_type_full_name>System.Double</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit_write_line_field_info</feature_eiffel_name>
				<feature_external_name>EmitWriteLine</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>fld</argument_eiffel_name>
						<argument_external_name>fld</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_FIELDINFO</argument_type>
						<argument_type_full_name>System.Reflection.FieldInfo</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit_write_line_local_builder</feature_eiffel_name>
				<feature_external_name>EmitWriteLine</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>local_builder</argument_eiffel_name>
						<argument_external_name>localBuilder</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_LOCALBUILDER</argument_type>
						<argument_type_full_name>System.Reflection.Emit.LocalBuilder</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit_op_code_constructor_info</feature_eiffel_name>
				<feature_external_name>Emit</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>opcode</argument_eiffel_name>
						<argument_external_name>opcode</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_OPCODE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.OpCode</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>con</argument_eiffel_name>
						<argument_external_name>con</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_CONSTRUCTORINFO</argument_type>
						<argument_type_full_name>System.Reflection.ConstructorInfo</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit_op_code_signature_helper</feature_eiffel_name>
				<feature_external_name>Emit</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>opcode</argument_eiffel_name>
						<argument_external_name>opcode</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_OPCODE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.OpCode</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>signature</argument_eiffel_name>
						<argument_external_name>signature</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_SIGNATUREHELPER</argument_type>
						<argument_type_full_name>System.Reflection.Emit.SignatureHelper</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>begin_catch_block</feature_eiffel_name>
				<feature_external_name>BeginCatchBlock</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>exception_type</argument_eiffel_name>
						<argument_external_name>exceptionType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit_op_code_int16</feature_eiffel_name>
				<feature_external_name>Emit</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>opcode</argument_eiffel_name>
						<argument_external_name>opcode</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_OPCODE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.OpCode</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>arg</argument_eiffel_name>
						<argument_external_name>arg</argument_external_name>
						<argument_type>INTEGER_16</argument_type>
						<argument_type_full_name>System.Int16</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit_op_code_local_builder</feature_eiffel_name>
				<feature_external_name>Emit</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>opcode</argument_eiffel_name>
						<argument_external_name>opcode</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_OPCODE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.OpCode</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>local_</argument_eiffel_name>
						<argument_external_name>local</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_LOCALBUILDER</argument_type>
						<argument_type_full_name>System.Reflection.Emit.LocalBuilder</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit_calli</feature_eiffel_name>
				<feature_external_name>EmitCalli</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>opcode</argument_eiffel_name>
						<argument_external_name>opcode</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_OPCODE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.OpCode</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>calling_convention</argument_eiffel_name>
						<argument_external_name>callingConvention</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_CALLINGCONVENTIONS</argument_type>
						<argument_type_full_name>System.Reflection.CallingConventions</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>return_type</argument_eiffel_name>
						<argument_external_name>returnType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parameter_types</argument_eiffel_name>
						<argument_external_name>parameterTypes</argument_external_name>
						<argument_type>ARRAY [SYSTEM_TYPE]</argument_type>
						<argument_type_full_name>System.Type[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>optional_parameter_types</argument_eiffel_name>
						<argument_external_name>optionalParameterTypes</argument_external_name>
						<argument_type>ARRAY [SYSTEM_TYPE]</argument_type>
						<argument_type_full_name>System.Type[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit_op_code_field_info</feature_eiffel_name>
				<feature_external_name>Emit</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>opcode</argument_eiffel_name>
						<argument_external_name>opcode</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_OPCODE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.OpCode</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>field</argument_eiffel_name>
						<argument_external_name>field</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_FIELDINFO</argument_type>
						<argument_type_full_name>System.Reflection.FieldInfo</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>emit_op_code_label</feature_eiffel_name>
				<feature_external_name>Emit</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>opcode</argument_eiffel_name>
						<argument_external_name>opcode</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_OPCODE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.OpCode</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>label</argument_eiffel_name>
						<argument_external_name>label</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_LABEL</argument_type>
						<argument_type_full_name>System.Reflection.Emit.Label</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
		</basic_operations>
		<bit_or_infix>False</bit_or_infix>
	</body>
</class>