system
	help_interface

root
	HELP_INTERFACE (root_cluster): "make"

default
	assertion (all);
	dead_code_removal (yes)
	array_optimization (yes)
	inlining_size ("4")

cluster
	
	root_cluster: 		".";
	help_system: 			"d:\help\help_system";
	commands: 			".\commands";
	document_elements:	".\document_elements";

--------------- eXML
	eXML: 				"$EXML\main";
	eXML_tree_parser: 	"$EXML\main\tree_parser";
	eXML_ise: 			"$EXML\compiler_specific\ise";

--------------- EiffelBase
	base:				"$EIFFEL4\library\base";
	structures(base):		"$\structures";
	
	kernel(base):				"$\kernel";
	support(base):			"$\support";
	access(structures):		"$\access";
	cursors(structures):		"$\cursors";
	cursor_tree(structures):	"$\cursor_tree";
	dispenser(structures):		"$\dispenser";
	iteration(structures):		"$\iteration";
	list(structures):			"$\list";
	set(structures):			"$\set";
	sort(structures):			"$\sort";
	storage(structures):		"$\storage";
	table(structures):		"$\table";
	traversing(structures):	"$\traversing";
	tree(structures):			"$\tree";


------------------------ Wel:

	wel:						"$EIFFEL4\library\wel";
	wel_constants(wel):		"$\consts";
	wel_controls(wel):		"$\controls";
	wel_gdi(wel):				"$\gdi";
	wel_gdi_stocks(wel):		"$\gdistock";
	wel_standard_dialogs(wel):	"$\stddlgs";
	wel_structures(wel):		"$\structs";
	wel_support(wel):			"$\support";
	wel_windows(wel):			"$\windows";
	wel_messages(wel):		"$\messages";

                        
------------------------ EiffelVision

  	vision:				         		        	"$EIFFEL4\library\vision2\interface";
	vision_support (vision):						"$\support";
	vision_kernel (vision): 	     	  			"$\kernel";
	vision_properties (vision):					"$\properties";
	vision_items (vision):							"$\items";
	vision_pnd (vision):							"$\pick_and_drop";
	vision_figures (vision):						"$\figures";
	vision_widgets (vision):        				"$\widgets";
	vision_primitives (vision_widgets):     			"$\primitives";
	vision_containers (vision_widgets):     			"$\containers";
	vision_common_dialog (vision_widgets):			"$\common_dialogs";
	vision_uncommon_widgets (vision_widgets):		"$\uncommon_widgets";

	-- Implementation Interface
	vision_ii:									"$EIFFEL4\library\vision2\implementation\implementation_interface";
	vision_ii_kernel (vision_ii): 	       			"$\kernel";
	vision_ii_support (vision_ii):					"$\support";
	vision_ii_properties (vision_ii):				"$\properties";
	vision_ii_items (vision_ii):					"$\items";
	vision_ii_pnd (vision_ii):						"$\pick_and_drop";
	vision_ii_widgets (vision_ii): 	   				"$\widgets";
	vision_ii_primitives (vision_ii_widgets):    	"$\primitives";
	vision_ii_containers (vision_ii_widgets):    	"$\containers";
	vision_ii_common_dialog (vision_ii_widgets):		"$\common_dialogs";
	vision_ii_uncommon_widgets (vision_ii_widgets):	"$\uncommon_widgets";

	-- Implementation clusters for MS Windows
	vision_imp:									"$EIFFEL4\library\vision2\implementation\mswin";
	vision_imp_kernel (vision_imp): 	 	    		"$\kernel";
	vision_imp_support (vision_imp):				"$\support";
	vision_imp_properties (vision_imp):				"$\properties";
	vision_imp_items (vision_imp):					"$\items";
	vision_imp_pnd (vision_imp):					"$\pick_and_drop";
	vision_imp_widgets (vision_imp):       			"$\widgets";
	vision_imp_primitives (vision_imp_widgets):		"$\primitives";
	vision_imp_containers (vision_imp_widgets):		"$\containers";
	vision_imp_common_dialog (vision_imp_widgets):	"$\common_dialogs";
	vision_imp_uncommon_widgets (vision_imp_widgets):	"$\uncommon_widgets";

--------------- Gobo Eiffel


		-- Gobo Eiffel Kernel Library
	kl_kernel:			"$GOBO\library\kernel";
	kl_kernel_spec:		"$GOBO\library\kernel\spec\ise";

		-- Gobo Eiffel Structure Library
	ds_container:			"$GOBO\library\structure\container";
	ds_cursor:			"$GOBO\library\structure\cursor";
	ds_list:				"$GOBO\library\structure\list";
	ds_search:			"$GOBO\library\structure\search";
	ds_sort:				"$GOBO\library\structure\sort";
	ds_stack:			"$GOBO\library\structure\stack";
	ds_support:			"$GOBO\library\structure\support";
	ds_table:			"$GOBO\library\structure\table";
	gobo_ext:			"$GOBO\gobo_ext";

external
	include_path:		"$EXML\expat\xmlparse",
							"$EXML\compiler_specific\ise\clib",
						           	"$EIFFEL4\library\wel\spec\windows\include";
	object:				"$EXML\compiler_specific\ise\clib\msc\exml.lib",
							"$EXML\expat\lib\xmlparse.lib",
								"$EIFFEL4\library\wel\spec\$(COMPILER)\lib\wel.lib";
end
