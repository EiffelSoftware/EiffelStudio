WIDGET     : Check box
DESCRIPTION: Area which enables alternate way of choosing a setting. 

CLIENT INTERFACE:
-----------------

class interface
	CHECK_BOX

creation 
	make,
	make_unmanaged

feature  -- Color

	foreground_color: COLOR
			-- Foreground color of manager widget
			-- (from MANAGER)
		require -- from MANAGER
			exists: not destroyed
		ensure -- from MANAGER
			valid_result: Result /= void
		
	set_foreground (new_color: COLOR)
			-- Set foreground color to new_color.
			-- (from MANAGER)
		require -- from MANAGER
			exists: not destroyed;
			color_not_void: new_color /= void
		ensure -- from MANAGER
			foreground_color = new_color
		
	set_foreground_color (new_color: COLOR)
			-- Set foreground color to new_color.
			-- (from MANAGER)
		require -- from MANAGER
			exists: not destroyed;
			color_not_void: new_color /= void
		ensure -- from MANAGER
			foreground_color = new_color
		
feature  -- Parent composite

	parent: COMPOSITE
			-- Parent of manager widget
			-- (from MANAGER)
		require -- from STACKABLE
			exists: not destroyed
		
feature  -- Widget hierarchy

	children: ARRAYED_LIST [WIDGET]
			-- List of children for Current composite
			-- (from COMPOSITE)
		require -- from COMPOSITE
			exists: not destroyed
		ensure -- from COMPOSITE
			valid_result: Result /= void
		
	children_count: INTEGER
			-- Number of children
			-- (from COMPOSITE)
		require -- from COMPOSITE
			exists: not destroyed
		ensure -- from COMPOSITE
			positive_result: Result >= 0
		
	descendents: ARRAYED_LIST [WIDGET]
			-- List of descendents for Current composite
			-- (from COMPOSITE)
		require -- from COMPOSITE
			exists: not destroyed
		ensure -- from COMPOSITE
			valid_result: Result /= void
		
end -- class CHECK_BOX
