system
	"web_demo"

root
	sample: make

default
	assertion (check)
	assertion (require)
	assertion (ensure)
	assertion (loop)
	assertion (invariant)
	arguments (" ")
	disabled_debug (yes)
	debug (no)
	line_generation (no)
	profile (no)
	trace (no)
	il_verifiable (yes)
	cls_compliant (yes)
	dotnet_naming_convention (yes)
	msil_generation_type ("exe")
	msil_assembly_compatibility ("None")
	check_vape (yes)
	console_application (yes)
	array_optimization (no)
	dead_code_removal (yes)
	exception_trace (yes)
	inlining (no)


--precompiled ("$EIFFEL4/precomp/spec/$PLATFORM/base");
-- EiffelBase
-- EiffelTime
-- Gobo
-- eXML

cluster
	all root_cluster:		"$ISE_EIFFEL\examples\web\basic"
		exclude
			"_vti_cnf"; "EIFGEN"; 
		end

	all base:		"$ISE_EIFFEL/library/base"
		exclude
			"desc"; "table_eiffel3"; 
		end

	time:		"$ISE_EIFFEL/library/time"

	time_format (time):		"$/format"

	all time_english (time):		"$/format/english"

	all gobo_library:		"$ISE_EIFFEL/library/gobo"
		exclude
			"base"; "test"; "eiffel_scanner.e"; "eiffel_token.e"; "eiffel_tokens.e"; "eiffel_parser.e"; "hact"; "se"; "ve"; "CVS"; 
		end

	exml_parser:		"$ISE_EIFFEL/library/exml/main"

	exml_tree_parser:		"$ISE_EIFFEL/library/exml/main/tree_parser"

	exml_ise:		"$ISE_EIFFEL/library/exml/compiler_specific/ise"
		exclude
			"character_array.e"; "CVS"; 
		end

	library web:		"$ISE_EIFFEL\library\web"

end
