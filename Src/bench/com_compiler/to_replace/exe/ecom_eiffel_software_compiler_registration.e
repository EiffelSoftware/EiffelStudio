indexing
	description: "Objects of this class set the registry keys necessary for COM to access the component%
				   %and activate a new instance of the component whenever COM asks for if.%
				   %User may inherit from this class and redifine `main_window'."
	Note: "Automatically generated by the EiffelCOM Wizard."

class
	ECOM_EIFFEL_SOFTWARE_COMPILER_REGISTRATION

inherit
	ARGUMENTS

	ES
		rename
			make as es_make
		end

	WEL_APPLICATION
		rename
			make as wel_make
		redefine
			default_show_command
		end

	WEL_SW_CONSTANTS
		export
			{NONE} all
		end
		
	EB_SHARED_PREFERENCES
		export
			{NONE} all
		end

creation
	make

feature {NONE}  -- Initialization

	make is
			-- Initialize server.
		local
			l_string: STRING
			l_preferences: PREFERENCES
		do
				-- Initialize preferences
			create l_preferences.make_with_defaults_and_location (<< general_preferences, platform_preferences >>, eiffel_preferences)
			initialize_preferences (l_preferences, False)
		
			default_show_cmd := Sw_shownormal
			if argument_count > 0 then
				l_string := argument (1).as_lower
			end
			if l_string /= Void and (l_string.is_equal ("-regserver") or l_string.is_equal ("/regserver")) then
				register_server
			elseif l_string /= Void and (l_string.is_equal ("-unregserver") or l_string.is_equal ("/unregserver")) then
				unregister_server
			elseif l_string /= Void and (l_string.is_equal ("-embedding") or l_string.is_equal ("/embedding")) then
				default_show_cmd := Sw_hide
				initialize_com
				wel_make
				cleanup_com
			elseif l_string /= Void then
				es_make
			else
				initialize_com
				wel_make
				cleanup_com
			end
		end
	
feature -- Access

	main_window: MAIN_WINDOW is
			-- Server main window
		once
			create Result.make_top ("Should not see me!")
		end

	default_show_command: INTEGER is
			-- Default command used to show `main_window'.
		once
			Result := default_show_cmd
		end

feature {NONE}  -- Implementation

	default_show_cmd: INTEGER
			-- Default command used to show `main_window'.

	initialize_com is
			-- Initialize COM 
		do
			ccom_initialize_com
		end

	cleanup_com is
			-- Clean up COM 
		do
			ccom_cleanup_com
		end

	register_server is
			-- Register Server
		do
			ccom_register_server
		end

	unregister_server is
			-- Unregister Server
		do
			ccom_unregister_server
		end

feature {NONE}  -- Externals

	ccom_initialize_com is
			-- Initialize COM.
		external
			"C++[macro %"server_registration.h%"]"
		end

	ccom_cleanup_com is
			-- Clean up COM.
		external
			"C++[macro %"server_registration.h%"]"
		end

	ccom_register_server is
			-- Register server.
		external
			"C++[macro %"server_registration.h%"]"
		end

	ccom_unregister_server is
			-- Unregister server.
		external
			"C++[macro %"server_registration.h%"]"
		end

end -- ECOM_EIFFEL_SOFTWARE_COMPILER_REGISTRATION
