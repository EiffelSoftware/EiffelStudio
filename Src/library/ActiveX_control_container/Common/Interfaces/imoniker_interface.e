indexing
	description: "Control interfaces. Help file: "
	Note: "Automatically generated by the EiffelCOM Wizard."

deferred class
	IMONIKER_INTERFACE

inherit
	IPERSIST_STREAM_INTERFACE

feature -- Status Report

	remote_bind_to_object_user_precondition (pbc: IBIND_CTX_INTERFACE; pmk_to_left: IMONIKER_INTERFACE; riid_result: ECOM_GUID; ppv_result: CELL [ECOM_INTERFACE]): BOOLEAN is
			-- User-defined preconditions for `remote_bind_to_object'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	remote_bind_to_storage_user_precondition (pbc: IBIND_CTX_INTERFACE; pmk_to_left: IMONIKER_INTERFACE; riid: ECOM_GUID; ppv_obj: CELL [ECOM_INTERFACE]): BOOLEAN is
			-- User-defined preconditions for `remote_bind_to_storage'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	reduce_user_precondition (pbc: IBIND_CTX_INTERFACE; dw_reduce_how_far: INTEGER; ppmk_to_left: CELL [IMONIKER_INTERFACE]; ppmk_reduced: CELL [IMONIKER_INTERFACE]): BOOLEAN is
			-- User-defined preconditions for `reduce'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	compose_with_user_precondition (pmk_right: IMONIKER_INTERFACE; f_only_if_not_generic: INTEGER; ppmk_composite: CELL [IMONIKER_INTERFACE]): BOOLEAN is
			-- User-defined preconditions for `compose_with'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	enum_user_precondition (f_forward: INTEGER; ppenum_moniker: CELL [IENUM_MONIKER_INTERFACE]): BOOLEAN is
			-- User-defined preconditions for `enum'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	is_equal1_user_precondition (pmk_other_moniker: IMONIKER_INTERFACE): BOOLEAN is
			-- User-defined preconditions for `is_equal1'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	hash_user_precondition (pdw_hash: INTEGER_REF): BOOLEAN is
			-- User-defined preconditions for `hash'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	is_running_user_precondition (pbc: IBIND_CTX_INTERFACE; pmk_to_left: IMONIKER_INTERFACE; pmk_newly_running: IMONIKER_INTERFACE): BOOLEAN is
			-- User-defined preconditions for `is_running'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	get_time_of_last_change_user_precondition (pbc: IBIND_CTX_INTERFACE; pmk_to_left: IMONIKER_INTERFACE; pfiletime: X_FILETIME_RECORD): BOOLEAN is
			-- User-defined preconditions for `get_time_of_last_change'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	inverse_user_precondition (ppmk: CELL [IMONIKER_INTERFACE]): BOOLEAN is
			-- User-defined preconditions for `inverse'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	common_prefix_with_user_precondition (pmk_other: IMONIKER_INTERFACE; ppmk_prefix: CELL [IMONIKER_INTERFACE]): BOOLEAN is
			-- User-defined preconditions for `common_prefix_with'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	relative_path_to_user_precondition (pmk_other: IMONIKER_INTERFACE; ppmk_rel_path: CELL [IMONIKER_INTERFACE]): BOOLEAN is
			-- User-defined preconditions for `relative_path_to'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	get_display_name_user_precondition (pbc: IBIND_CTX_INTERFACE; pmk_to_left: IMONIKER_INTERFACE; ppsz_display_name: CELL [STRING]): BOOLEAN is
			-- User-defined preconditions for `get_display_name'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	parse_display_name_user_precondition (pbc: IBIND_CTX_INTERFACE; pmk_to_left: IMONIKER_INTERFACE; psz_display_name: STRING; pch_eaten: INTEGER_REF; ppmk_out: CELL [IMONIKER_INTERFACE]): BOOLEAN is
			-- User-defined preconditions for `parse_display_name'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	is_system_moniker_user_precondition (pdw_mksys: INTEGER_REF): BOOLEAN is
			-- User-defined preconditions for `is_system_moniker'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

feature -- Basic Operations

	remote_bind_to_object (pbc: IBIND_CTX_INTERFACE; pmk_to_left: IMONIKER_INTERFACE; riid_result: ECOM_GUID; ppv_result: CELL [ECOM_INTERFACE]) is
			-- No description available.
			-- `pbc' [in].  
			-- `pmk_to_left' [in].  
			-- `riid_result' [in].  
			-- `ppv_result' [out].  
		require
			non_void_riid_result: riid_result /= Void
			valid_riid_result: riid_result.item /= default_pointer
			non_void_ppv_result: ppv_result /= Void
			remote_bind_to_object_user_precondition: remote_bind_to_object_user_precondition (pbc, pmk_to_left, riid_result, ppv_result)
		deferred

		ensure
			valid_ppv_result: ppv_result.item /= Void
		end

	remote_bind_to_storage (pbc: IBIND_CTX_INTERFACE; pmk_to_left: IMONIKER_INTERFACE; riid: ECOM_GUID; ppv_obj: CELL [ECOM_INTERFACE]) is
			-- No description available.
			-- `pbc' [in].  
			-- `pmk_to_left' [in].  
			-- `riid' [in].  
			-- `ppv_obj' [out].  
		require
			non_void_riid: riid /= Void
			valid_riid: riid.item /= default_pointer
			non_void_ppv_obj: ppv_obj /= Void
			remote_bind_to_storage_user_precondition: remote_bind_to_storage_user_precondition (pbc, pmk_to_left, riid, ppv_obj)
		deferred

		ensure
			valid_ppv_obj: ppv_obj.item /= Void
		end

	reduce (pbc: IBIND_CTX_INTERFACE; dw_reduce_how_far: INTEGER; ppmk_to_left: CELL [IMONIKER_INTERFACE]; ppmk_reduced: CELL [IMONIKER_INTERFACE]) is
			-- No description available.
			-- `pbc' [in].  
			-- `dw_reduce_how_far' [in].  
			-- `ppmk_to_left' [in, out].  
			-- `ppmk_reduced' [out].  
		require
			non_void_ppmk_to_left: ppmk_to_left /= Void
			valid_ppmk_to_left: ppmk_to_left.item /= Void
			non_void_ppmk_reduced: ppmk_reduced /= Void
			reduce_user_precondition: reduce_user_precondition (pbc, dw_reduce_how_far, ppmk_to_left, ppmk_reduced)
		deferred

		ensure
			valid_ppmk_to_left: ppmk_to_left.item /= Void
			valid_ppmk_reduced: ppmk_reduced.item /= Void
		end

	compose_with (pmk_right: IMONIKER_INTERFACE; f_only_if_not_generic: INTEGER; ppmk_composite: CELL [IMONIKER_INTERFACE]) is
			-- No description available.
			-- `pmk_right' [in].  
			-- `f_only_if_not_generic' [in].  
			-- `ppmk_composite' [out].  
		require
			non_void_ppmk_composite: ppmk_composite /= Void
			compose_with_user_precondition: compose_with_user_precondition (pmk_right, f_only_if_not_generic, ppmk_composite)
		deferred

		ensure
			valid_ppmk_composite: ppmk_composite.item /= Void
		end

	enum (f_forward: INTEGER; ppenum_moniker: CELL [IENUM_MONIKER_INTERFACE]) is
			-- No description available.
			-- `f_forward' [in].  
			-- `ppenum_moniker' [out].  
		require
			non_void_ppenum_moniker: ppenum_moniker /= Void
			enum_user_precondition: enum_user_precondition (f_forward, ppenum_moniker)
		deferred

		ensure
			valid_ppenum_moniker: ppenum_moniker.item /= Void
		end

	is_equal1 (pmk_other_moniker: IMONIKER_INTERFACE) is
			-- No description available.
			-- `pmk_other_moniker' [in].  
		require
			is_equal1_user_precondition: is_equal1_user_precondition (pmk_other_moniker)
		deferred

		end

	hash (pdw_hash: INTEGER_REF) is
			-- No description available.
			-- `pdw_hash' [out].  
		require
			non_void_pdw_hash: pdw_hash /= Void
			hash_user_precondition: hash_user_precondition (pdw_hash)
		deferred

		end

	is_running (pbc: IBIND_CTX_INTERFACE; pmk_to_left: IMONIKER_INTERFACE; pmk_newly_running: IMONIKER_INTERFACE) is
			-- No description available.
			-- `pbc' [in].  
			-- `pmk_to_left' [in].  
			-- `pmk_newly_running' [in].  
		require
			is_running_user_precondition: is_running_user_precondition (pbc, pmk_to_left, pmk_newly_running)
		deferred

		end

	get_time_of_last_change (pbc: IBIND_CTX_INTERFACE; pmk_to_left: IMONIKER_INTERFACE; pfiletime: X_FILETIME_RECORD) is
			-- No description available.
			-- `pbc' [in].  
			-- `pmk_to_left' [in].  
			-- `pfiletime' [out].  
		require
			non_void_pfiletime: pfiletime /= Void
			valid_pfiletime: pfiletime.item /= default_pointer
			get_time_of_last_change_user_precondition: get_time_of_last_change_user_precondition (pbc, pmk_to_left, pfiletime)
		deferred

		end

	inverse (ppmk: CELL [IMONIKER_INTERFACE]) is
			-- No description available.
			-- `ppmk' [out].  
		require
			non_void_ppmk: ppmk /= Void
			inverse_user_precondition: inverse_user_precondition (ppmk)
		deferred

		ensure
			valid_ppmk: ppmk.item /= Void
		end

	common_prefix_with (pmk_other: IMONIKER_INTERFACE; ppmk_prefix: CELL [IMONIKER_INTERFACE]) is
			-- No description available.
			-- `pmk_other' [in].  
			-- `ppmk_prefix' [out].  
		require
			non_void_ppmk_prefix: ppmk_prefix /= Void
			common_prefix_with_user_precondition: common_prefix_with_user_precondition (pmk_other, ppmk_prefix)
		deferred

		ensure
			valid_ppmk_prefix: ppmk_prefix.item /= Void
		end

	relative_path_to (pmk_other: IMONIKER_INTERFACE; ppmk_rel_path: CELL [IMONIKER_INTERFACE]) is
			-- No description available.
			-- `pmk_other' [in].  
			-- `ppmk_rel_path' [out].  
		require
			non_void_ppmk_rel_path: ppmk_rel_path /= Void
			relative_path_to_user_precondition: relative_path_to_user_precondition (pmk_other, ppmk_rel_path)
		deferred

		ensure
			valid_ppmk_rel_path: ppmk_rel_path.item /= Void
		end

	get_display_name (pbc: IBIND_CTX_INTERFACE; pmk_to_left: IMONIKER_INTERFACE; ppsz_display_name: CELL [STRING]) is
			-- No description available.
			-- `pbc' [in].  
			-- `pmk_to_left' [in].  
			-- `ppsz_display_name' [out].  
		require
			non_void_ppsz_display_name: ppsz_display_name /= Void
			get_display_name_user_precondition: get_display_name_user_precondition (pbc, pmk_to_left, ppsz_display_name)
		deferred

		ensure
			valid_ppsz_display_name: ppsz_display_name.item /= Void
		end

	parse_display_name (pbc: IBIND_CTX_INTERFACE; pmk_to_left: IMONIKER_INTERFACE; psz_display_name: STRING; pch_eaten: INTEGER_REF; ppmk_out: CELL [IMONIKER_INTERFACE]) is
			-- No description available.
			-- `pbc' [in].  
			-- `pmk_to_left' [in].  
			-- `psz_display_name' [in].  
			-- `pch_eaten' [out].  
			-- `ppmk_out' [out].  
		require
			non_void_pch_eaten: pch_eaten /= Void
			non_void_ppmk_out: ppmk_out /= Void
			parse_display_name_user_precondition: parse_display_name_user_precondition (pbc, pmk_to_left, psz_display_name, pch_eaten, ppmk_out)
		deferred

		ensure
			valid_ppmk_out: ppmk_out.item /= Void
		end

	is_system_moniker (pdw_mksys: INTEGER_REF) is
			-- No description available.
			-- `pdw_mksys' [out].  
		require
			non_void_pdw_mksys: pdw_mksys /= Void
			is_system_moniker_user_precondition: is_system_moniker_user_precondition (pdw_mksys)
		deferred

		end

end -- IMONIKER_INTERFACE

