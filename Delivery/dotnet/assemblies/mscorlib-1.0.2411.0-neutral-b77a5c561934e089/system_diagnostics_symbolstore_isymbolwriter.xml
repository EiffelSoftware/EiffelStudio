<!DOCTYPE type SYSTEM "../type.dtd">
<class>
	<header>
		<modified>False</modified>
		<frozen>False</frozen>
		<expanded>False</expanded>
		<deferred>True</deferred>
		<generic>False</generic>
		<class_eiffel_name>SYSTEM_DIAGNOSTICS_SYMBOLSTORE_ISYMBOLWRITER</class_eiffel_name>
		<alias>
			<simple_name>ISymbolWriter</simple_name>
			<namespace>System.Diagnostics.SymbolStore</namespace>
			<assembly_name>mscorlib</assembly_name>
			<assembly_version>1.0.2411.0</assembly_version>
			<assembly_culture>neutral</assembly_culture>
			<assembly_public_key>b77a5c561934e089</assembly_public_key>
		</alias>
		<inherit>
			<parent>
				<parent_name>ANY</parent_name>
				<undefine>finalize, get_hash_code, equals, to_string</undefine>
			</parent>
		</inherit>
		<create_none>False</create_none>
	</header>
	<body>
		<basic_operations>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_parameter</feature_eiffel_name>
				<feature_external_name>DefineParameter</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_PARAMETERATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.ParameterAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>sequence</argument_eiffel_name>
						<argument_external_name>sequence</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>addr_kind</argument_eiffel_name>
						<argument_external_name>addrKind</argument_external_name>
						<argument_type>SYSTEM_DIAGNOSTICS_SYMBOLSTORE_SYMADDRESSKIND</argument_type>
						<argument_type_full_name>System.Diagnostics.SymbolStore.SymAddressKind</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>addr1</argument_eiffel_name>
						<argument_external_name>addr1</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>addr2</argument_eiffel_name>
						<argument_external_name>addr2</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>addr3</argument_eiffel_name>
						<argument_external_name>addr3</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_method_source_range</feature_eiffel_name>
				<feature_external_name>SetMethodSourceRange</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>start_doc</argument_eiffel_name>
						<argument_external_name>startDoc</argument_external_name>
						<argument_type>SYSTEM_DIAGNOSTICS_SYMBOLSTORE_ISYMBOLDOCUMENTWRITER</argument_type>
						<argument_type_full_name>System.Diagnostics.SymbolStore.ISymbolDocumentWriter</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>start_line</argument_eiffel_name>
						<argument_external_name>startLine</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>start_column</argument_eiffel_name>
						<argument_external_name>startColumn</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>end_doc</argument_eiffel_name>
						<argument_external_name>endDoc</argument_external_name>
						<argument_type>SYSTEM_DIAGNOSTICS_SYMBOLSTORE_ISYMBOLDOCUMENTWRITER</argument_type>
						<argument_type_full_name>System.Diagnostics.SymbolStore.ISymbolDocumentWriter</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>end_line</argument_eiffel_name>
						<argument_external_name>endLine</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>end_column</argument_eiffel_name>
						<argument_external_name>endColumn</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_field</feature_eiffel_name>
				<feature_external_name>DefineField</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>parent</argument_eiffel_name>
						<argument_external_name>parent</argument_external_name>
						<argument_type>SYSTEM_DIAGNOSTICS_SYMBOLSTORE_SYMBOLTOKEN</argument_type>
						<argument_type_full_name>System.Diagnostics.SymbolStore.SymbolToken</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_FIELDATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.FieldAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>signature</argument_eiffel_name>
						<argument_external_name>signature</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>addr_kind</argument_eiffel_name>
						<argument_external_name>addrKind</argument_external_name>
						<argument_type>SYSTEM_DIAGNOSTICS_SYMBOLSTORE_SYMADDRESSKIND</argument_type>
						<argument_type_full_name>System.Diagnostics.SymbolStore.SymAddressKind</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>addr1</argument_eiffel_name>
						<argument_external_name>addr1</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>addr2</argument_eiffel_name>
						<argument_external_name>addr2</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>addr3</argument_eiffel_name>
						<argument_external_name>addr3</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>open_method</feature_eiffel_name>
				<feature_external_name>OpenMethod</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>method</argument_eiffel_name>
						<argument_external_name>method</argument_external_name>
						<argument_type>SYSTEM_DIAGNOSTICS_SYMBOLSTORE_SYMBOLTOKEN</argument_type>
						<argument_type_full_name>System.Diagnostics.SymbolStore.SymbolToken</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_scope_range</feature_eiffel_name>
				<feature_external_name>SetScopeRange</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>scope_id</argument_eiffel_name>
						<argument_external_name>scopeID</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>start_offset</argument_eiffel_name>
						<argument_external_name>startOffset</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>end_offset</argument_eiffel_name>
						<argument_external_name>endOffset</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_user_entry_point</feature_eiffel_name>
				<feature_external_name>SetUserEntryPoint</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>entry_method</argument_eiffel_name>
						<argument_external_name>entryMethod</argument_external_name>
						<argument_type>SYSTEM_DIAGNOSTICS_SYMBOLSTORE_SYMBOLTOKEN</argument_type>
						<argument_type_full_name>System.Diagnostics.SymbolStore.SymbolToken</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_global_variable</feature_eiffel_name>
				<feature_external_name>DefineGlobalVariable</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_FIELDATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.FieldAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>signature</argument_eiffel_name>
						<argument_external_name>signature</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>addr_kind</argument_eiffel_name>
						<argument_external_name>addrKind</argument_external_name>
						<argument_type>SYSTEM_DIAGNOSTICS_SYMBOLSTORE_SYMADDRESSKIND</argument_type>
						<argument_type_full_name>System.Diagnostics.SymbolStore.SymAddressKind</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>addr1</argument_eiffel_name>
						<argument_external_name>addr1</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>addr2</argument_eiffel_name>
						<argument_external_name>addr2</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>addr3</argument_eiffel_name>
						<argument_external_name>addr3</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>close</feature_eiffel_name>
				<feature_external_name>Close</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>using_namespace</feature_eiffel_name>
				<feature_external_name>UsingNamespace</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>full_name</argument_eiffel_name>
						<argument_external_name>fullName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_sym_attribute</feature_eiffel_name>
				<feature_external_name>SetSymAttribute</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>parent</argument_eiffel_name>
						<argument_external_name>parent</argument_external_name>
						<argument_type>SYSTEM_DIAGNOSTICS_SYMBOLSTORE_SYMBOLTOKEN</argument_type>
						<argument_type_full_name>System.Diagnostics.SymbolStore.SymbolToken</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>data</argument_eiffel_name>
						<argument_external_name>data</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_sequence_points</feature_eiffel_name>
				<feature_external_name>DefineSequencePoints</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>document</argument_eiffel_name>
						<argument_external_name>document</argument_external_name>
						<argument_type>SYSTEM_DIAGNOSTICS_SYMBOLSTORE_ISYMBOLDOCUMENTWRITER</argument_type>
						<argument_type_full_name>System.Diagnostics.SymbolStore.ISymbolDocumentWriter</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>offsets</argument_eiffel_name>
						<argument_external_name>offsets</argument_external_name>
						<argument_type>ARRAY [INTEGER]</argument_type>
						<argument_type_full_name>System.Int32[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>lines</argument_eiffel_name>
						<argument_external_name>lines</argument_external_name>
						<argument_type>ARRAY [INTEGER]</argument_type>
						<argument_type_full_name>System.Int32[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>columns</argument_eiffel_name>
						<argument_external_name>columns</argument_external_name>
						<argument_type>ARRAY [INTEGER]</argument_type>
						<argument_type_full_name>System.Int32[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>end_lines</argument_eiffel_name>
						<argument_external_name>endLines</argument_external_name>
						<argument_type>ARRAY [INTEGER]</argument_type>
						<argument_type_full_name>System.Int32[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>end_columns</argument_eiffel_name>
						<argument_external_name>endColumns</argument_external_name>
						<argument_type>ARRAY [INTEGER]</argument_type>
						<argument_type_full_name>System.Int32[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>open_namespace</feature_eiffel_name>
				<feature_external_name>OpenNamespace</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_underlying_writer</feature_eiffel_name>
				<feature_external_name>SetUnderlyingWriter</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>underlying_writer</argument_eiffel_name>
						<argument_external_name>underlyingWriter</argument_external_name>
						<argument_type>POINTER</argument_type>
						<argument_type_full_name>System.IntPtr</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>close_method</feature_eiffel_name>
				<feature_external_name>CloseMethod</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>close_scope</feature_eiffel_name>
				<feature_external_name>CloseScope</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>end_offset</argument_eiffel_name>
						<argument_external_name>endOffset</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_document</feature_eiffel_name>
				<feature_external_name>DefineDocument</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>url</argument_eiffel_name>
						<argument_external_name>url</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>language</argument_eiffel_name>
						<argument_external_name>language</argument_external_name>
						<argument_type>SYSTEM_GUID</argument_type>
						<argument_type_full_name>System.Guid</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>language_vendor</argument_eiffel_name>
						<argument_external_name>languageVendor</argument_external_name>
						<argument_type>SYSTEM_GUID</argument_type>
						<argument_type_full_name>System.Guid</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>document_type</argument_eiffel_name>
						<argument_external_name>documentType</argument_external_name>
						<argument_type>SYSTEM_GUID</argument_type>
						<argument_type_full_name>System.Guid</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_DIAGNOSTICS_SYMBOLSTORE_ISYMBOLDOCUMENTWRITER</return_type>
				<return_type_full_name>System.Diagnostics.SymbolStore.ISymbolDocumentWriter</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>close_namespace</feature_eiffel_name>
				<feature_external_name>CloseNamespace</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_local_variable</feature_eiffel_name>
				<feature_external_name>DefineLocalVariable</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_FIELDATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.FieldAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>signature</argument_eiffel_name>
						<argument_external_name>signature</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>addr_kind</argument_eiffel_name>
						<argument_external_name>addrKind</argument_external_name>
						<argument_type>SYSTEM_DIAGNOSTICS_SYMBOLSTORE_SYMADDRESSKIND</argument_type>
						<argument_type_full_name>System.Diagnostics.SymbolStore.SymAddressKind</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>addr1</argument_eiffel_name>
						<argument_external_name>addr1</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>addr2</argument_eiffel_name>
						<argument_external_name>addr2</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>addr3</argument_eiffel_name>
						<argument_external_name>addr3</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>start_offset</argument_eiffel_name>
						<argument_external_name>startOffset</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>end_offset</argument_eiffel_name>
						<argument_external_name>endOffset</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>open_scope</feature_eiffel_name>
				<feature_external_name>OpenScope</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>start_offset</argument_eiffel_name>
						<argument_external_name>startOffset</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>INTEGER</return_type>
				<return_type_full_name>System.Int32</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>initialize</feature_eiffel_name>
				<feature_external_name>Initialize</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>emitter</argument_eiffel_name>
						<argument_external_name>emitter</argument_external_name>
						<argument_type>POINTER</argument_type>
						<argument_type_full_name>System.IntPtr</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>filename</argument_eiffel_name>
						<argument_external_name>filename</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>f_full_build</argument_eiffel_name>
						<argument_external_name>fFullBuild</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
		</basic_operations>
		<bit_or_infix>False</bit_or_infix>
	</body>
</class>