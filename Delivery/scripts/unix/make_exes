#!/bin/sh

# Clean up the files
remtrace Update all source files.
cd $EIFFEL_SRC
exprt -r $DEFAULT_CVS_TAG -d Eiffel Eiffel
exprt -r $DEFAULT_CVS_TAG -d build2 Src/build2
exprt -r $DEFAULT_CVS_TAG -d C runtime
exprt -r $DEFAULT_CVS_TAG -d dotnet Src/dotnet
exprt -r $DEFAULT_CVS_TAG -d C_library Src/C_library

# These directories should already have been created by make_delivery. Whatever...
safe_md $INSTALL_DIR/studio/spec
safe_md $INSTALL_DIR/studio/spec/unix
safe_md $INSTALL_DIR/studio/spec/unix/bin
safe_md $INSTALL_DIR/studio/spec/unix/include
safe_md $INSTALL_DIR/studio/spec/unix/lib
safe_md $INSTALL_DIR/build/spec
safe_md $INSTALL_DIR/build/spec/unix
safe_md $INSTALL_DIR/build/spec/unix/bin

remtrace Recompile EiffelBuild
cd $EIFFEL_SRC/build2
cd modified_libraries
safe_md $EXPORT_DIR/build
tgz gobo_16
move gobo_16.tar.gz $EXPORT_DIR/build
tgz exml
move exml.tar.gz $EXPORT_DIR/build
cd ..
clean_project
finalize Ace.unix.ace
tgz_ccode build
if [ ! -f build.tar.gz ]; then
	echo Could not finalize a new EiffelBuild
	CANCEL
fi
clean_project
move build.tar.gz $EXPORT_DIR/build

if [ ! "$NO_NEW_EC" ]; then
	remtrace Recompile EiffelStudio
	remtrace Enterprise edition
	if [ ! -d $FINALIZATION_DIR ]; then
		md $FINALIZATION_DIR
	fi
	cd $FINALIZATION_DIR
	copy $NEW_EIFFEL_SRC/Eiffel/Ace/newbench.linux.ace ace.ace
	clean_project
	finalize ace.ace
	tgz_ccode ec
	if [ ! -e ec.tar.gz ]; then
		echo Could not finalize a new EiffelStudio
		CANCEL
	fi
	clean_project
	move ec.tar.gz $EXPORT_DIR

	if [ "$MULTIPLE_EDITIONS" ]; then
		remtrace Free version edition
		cd $FINALIZATION_DIR
		copy $NEW_EIFFEL_SRC/Eiffel/Ace/newbench.linux.ace ace.ace
		sed -e "s/free/enterprise/g" ace.ace >> newace.ace
		move newace.ace ace.ace
		cd $EIFFEL_SRC/Eiffel/API/constants
		sed -e "s/Version_type_name:\ STRING\ is\ \"Enterprise\ Edition\"/Version_type_name:\ STRING\ is\ \"Free\ Edition\"/g" system_constants.e >> new_system_constants.e
		move new_system_constants.e system_constants.e
		sed -e "s/has_case:\ BOOLEAN\ is\ True/has_case:\ BOOLEAN\ is\ False/g" eiffel_env.e >> new_eiffel_env.e
		move new_eiffel_env.e eiffel_env.e
		sed -e "s/has_metrics:\ BOOLEAN\ is\ True/has_metrics:\ BOOLEAN\ is\ False/g" eiffel_env.e >> new_eiffel_env.e
		move new_eiffel_env.e eiffel_env.e
		sed -e "s/has_profiler:\ BOOLEAN\ is\ True/has_profiler:\ BOOLEAN\ is\ False/g" eiffel_env.e >> new_eiffel_env.e
		move new_eiffel_env.e eiffel_env.e
		sed -e "s/has_documentation_generation:\ BOOLEAN\ is\ True/has_documentation_generation:\ BOOLEAN\ is\ False/g" eiffel_env.e >> new_eiffel_env.e
		move new_eiffel_env.e eiffel_env.e
		sed -e "s/has_xmi_generation:\ BOOLEAN\ is\ True/has_xmi_generation:\ BOOLEAN\ is\ False/g" eiffel_env.e >> new_eiffel_env.e
		move new_eiffel_env.e eiffel_env.e
		sed -e "s/has_dll_generation:\ BOOLEAN\ is\ True/has_dll_generation:\ BOOLEAN\ is\ False/g" eiffel_env.e >> new_eiffel_env.e
		move new_eiffel_env.e eiffel_env.e
		sed -e "s/\has_signable_generation:\ BOOLEAN\ is\ True/\has_signable_generation:\ BOOLEAN\ is\ False/g" eiffel_env.e >> new_eiffel_env.e
		move new_eiffel_env.e eiffel_env.e
		cd $EIFFEL_SRC/Eiffel/switch/license/license
		sed -e "s/Is_free_version:\ BOOLEAN\ is\ False/\Is_free_version:\ BOOLEAN\ is\ True/g" bench_licence.e >> new_bench_license.e
		move new_bench_license.e bench_licence.e
		cd $FINALIZATION_DIR
		clean_project
		finalize ace.ace
		tgz_ccode ec
		if [ ! -e ec.tar.gz ]; then
			echo Could not finalize a new EiffelStudio
			CANCEL
		fi
		clean_project
		move ec.tar.gz $EXPORT_DIR/ecfree.tar.gz
	fi
else
	# FIXME doesn't work.
	quick_move studio/spec/$ISE_PLATFORM/bin/ec
fi

remtrace Recompile quick_finalize
cd $EIFFEL_SRC/Eiffel/extra/quick_c_compilation
clean_project
finalize Ace.unix
tgz_ccode quick_finalize
if [ ! -f quick_finalize.tar.gz ]; then
	echo Could not finalize a new quick_finalize
	CANCEL
fi
clean_project
move quick_finalize.tar.gz $EXPORT_DIR

