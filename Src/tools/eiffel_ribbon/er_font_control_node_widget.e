note
	description: "EiffelVision Widget ER_FONT_CONTROL_NODE_WIDGET.%
		%The original version of this class was generated by EiffelBuild."
	generator: "EiffelBuild"
	date: "$Date$"
	revision: "$Revision$"

class
	ER_FONT_CONTROL_NODE_WIDGET

inherit
	ER_FONT_CONTROL_NODE_WIDGET_IMP

feature {NONE} -- Initialization

	user_create_interface_objects
			-- Create any auxilliary objects needed for ER_DROP_DOWN_COLOR_PICKER_NODE_WIDGET.
			-- Initialization for these objects must be performed in `user_initialization'.
		do
				-- Create attached types defined in class here, initialize them in `user_initialization'.
			create checker
		end

	user_initialization
			-- Perform any initialization on objects created by `user_create_interface_objects'
			-- and from within current class itself.
		local
			l_item: EV_LIST_ITEM
		do
				-- Initialize types defined in current class
			create l_item.make_with_text ({ER_TREE_NODE_FONT_CONTROL_DATA}.rich_font)
			font_type.extend (l_item)
			create l_item.make_with_text ({ER_TREE_NODE_FONT_CONTROL_DATA}.font_with_color)
			font_type.extend (l_item)
			create l_item.make_with_text ({ER_TREE_NODE_FONT_CONTROL_DATA}.font_only)
			font_type.extend (l_item)
			font_type.set_text ("")

		end

feature -- Command

	set_tree_node_data (a_data: detachable ER_TREE_NODE_FONT_CONTROL_DATA)
			-- Update GUI with tree node data
		do
			tree_node_data := a_data
			if attached a_data as l_data then
				if attached a_data.command_name as l_command_name then
					command_name.set_text (l_command_name)
				else
					command_name.remove_text
				end

				if attached l_data.font_type as l_font_type then
					font_type.set_text (l_font_type)
				end
			end
		end

feature {NONE} -- Implementation

	checker: ER_IDENTIFIER_UNIQUENESS_CHECKER
			-- Identifier uniqueness checker

	tree_node_data: detachable ER_TREE_NODE_FONT_CONTROL_DATA
			-- Font control tree node data

	on_command_name_focus_out
			-- <Precursor>
		do
			checker.on_focus_out (command_name, tree_node_data)
		end

	on_command_name_change
			-- <Precursor>
		do
			checker.on_identifier_name_change (command_name, tree_node_data)
		end

	on_font_type_select
			-- <Precursor>
		do
			if attached tree_node_data as l_data then
				l_data.set_font_type (font_type.text)
			end
		end
end
