<!DOCTYPE type SYSTEM "../type.dtd">
<class>
	<header>
		<modified>False</modified>
		<frozen>True</frozen>
		<expanded>False</expanded>
		<deferred>False</deferred>
		<generic>False</generic>
		<class_eiffel_name>SYSTEM_DRAWING_DRAWING2D_GRAPHICSPATHITERATOR</class_eiffel_name>
		<alias>
			<simple_name>GraphicsPathIterator</simple_name>
			<namespace>System.Drawing.Drawing2D</namespace>
			<assembly_name>System.Drawing</assembly_name>
			<assembly_version>1.0.2411.0</assembly_version>
			<assembly_culture>neutral</assembly_culture>
			<assembly_public_key>b03f5f7f11d50a3a</assembly_public_key>
		</alias>
		<inherit>
			<parent>
				<parent_name>SYSTEM_IDISPOSABLE</parent_name>
			</parent>
			<parent>
				<parent_name>SYSTEM_MARSHALBYREFOBJECT</parent_name>
				<redefine>finalize</redefine>
			</parent>
		</inherit>
		<create_none>False</create_none>
	</header>
	<body>
		<initialization>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>False</method>
				<field>False</field>
				<creation_routine>True</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>make_graphicspathiterator</feature_eiffel_name>
				<arguments>
					<argument>
						<argument_eiffel_name>path</argument_eiffel_name>
						<argument_external_name>path</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_GRAPHICSPATH</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.GraphicsPath</argument_type_full_name>
					</argument>
				</arguments>
			</feature>
		</initialization>
		<access>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_subpath_count</feature_eiffel_name>
				<feature_external_name>get_SubpathCount</feature_external_name>
				<return_type>INTEGER</return_type>
				<return_type_full_name>System.Int32</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_count</feature_eiffel_name>
				<feature_external_name>get_Count</feature_external_name>
				<return_type>INTEGER</return_type>
				<return_type_full_name>System.Int32</return_type_full_name>
			</feature>
		</access>
		<basic_operations>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>enumerate</feature_eiffel_name>
				<feature_external_name>Enumerate</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINTF]</argument_type>
						<argument_type_full_name>System.Drawing.PointF[]&amp;</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>types</argument_eiffel_name>
						<argument_external_name>types</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]&amp;</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>INTEGER</return_type>
				<return_type_full_name>System.Int32</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>next_subpath_int32</feature_eiffel_name>
				<feature_external_name>NextSubpath</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>start_index</argument_eiffel_name>
						<argument_external_name>startIndex</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32&amp;</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>end_index</argument_eiffel_name>
						<argument_external_name>endIndex</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32&amp;</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>is_closed</argument_eiffel_name>
						<argument_external_name>isClosed</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean&amp;</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>INTEGER</return_type>
				<return_type_full_name>System.Int32</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>copy_data</feature_eiffel_name>
				<feature_external_name>CopyData</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>points</argument_eiffel_name>
						<argument_external_name>points</argument_external_name>
						<argument_type>ARRAY [SYSTEM_DRAWING_POINTF]</argument_type>
						<argument_type_full_name>System.Drawing.PointF[]&amp;</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>types</argument_eiffel_name>
						<argument_external_name>types</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]&amp;</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>start_index</argument_eiffel_name>
						<argument_external_name>startIndex</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>end_index</argument_eiffel_name>
						<argument_external_name>endIndex</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>INTEGER</return_type>
				<return_type_full_name>System.Int32</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>next_path_type</feature_eiffel_name>
				<feature_external_name>NextPathType</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>path_type</argument_eiffel_name>
						<argument_external_name>pathType</argument_external_name>
						<argument_type>INTEGER_8</argument_type>
						<argument_type_full_name>System.Byte&amp;</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>start_index</argument_eiffel_name>
						<argument_external_name>startIndex</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32&amp;</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>end_index</argument_eiffel_name>
						<argument_external_name>endIndex</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32&amp;</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>INTEGER</return_type>
				<return_type_full_name>System.Int32</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>has_curve</feature_eiffel_name>
				<feature_external_name>HasCurve</feature_external_name>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>next_subpath</feature_eiffel_name>
				<feature_external_name>NextSubpath</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>path</argument_eiffel_name>
						<argument_external_name>path</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_GRAPHICSPATH</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.GraphicsPath</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>is_closed</argument_eiffel_name>
						<argument_external_name>isClosed</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean&amp;</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>INTEGER</return_type>
				<return_type_full_name>System.Int32</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>next_marker</feature_eiffel_name>
				<feature_external_name>NextMarker</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>path</argument_eiffel_name>
						<argument_external_name>path</argument_external_name>
						<argument_type>SYSTEM_DRAWING_DRAWING2D_GRAPHICSPATH</argument_type>
						<argument_type_full_name>System.Drawing.Drawing2D.GraphicsPath</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>INTEGER</return_type>
				<return_type_full_name>System.Int32</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>rewind</feature_eiffel_name>
				<feature_external_name>Rewind</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>dispose</feature_eiffel_name>
				<feature_external_name>Dispose</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>next_marker_int32</feature_eiffel_name>
				<feature_external_name>NextMarker</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>start_index</argument_eiffel_name>
						<argument_external_name>startIndex</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32&amp;</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>end_index</argument_eiffel_name>
						<argument_external_name>endIndex</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32&amp;</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>INTEGER</return_type>
				<return_type_full_name>System.Int32</return_type_full_name>
			</feature>
		</basic_operations>
		<implementation>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>finalize</feature_eiffel_name>
				<feature_external_name>Finalize</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
		</implementation>
		<bit_or_infix>False</bit_or_infix>
	</body>
</class>