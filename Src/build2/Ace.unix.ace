system
	"build"

root
	gb: execute

default
	il_verifiable (yes)
	msil_generation_type ("exe")
	arguments (" ")
	assertion (check)
	assertion (require)
	assertion (ensure)
	disabled_debug (yes)
	disabled_debug ("ev_gtk_c_object_dispose")
	disabled_debug ("ev_gtk_creation")
	disabled_debug ("ev_gtk_destroy")
	disabled_debug ("ev_gtk_dispose")
	disabled_debug ("gelex")
	disabled_debug ("geyacc")
	disabled_debug ("xml_parser")
	debug (no)
	line_generation (no)
	profile (no)
	trace (no)
	override_cluster ("preferences")
	check_vape (no)
	console_application (no)
	array_optimization (yes)
	dead_code_removal (yes)
	exception_trace (yes)
	inlining (no)


-- Note that we exclude ev_widget, as we have a new version for build, which allows
-- you to query whether the minimum_size and minimum_height were set by the user.

cluster
	all build2:		"$EIFFEL_SRC/build2"
		exclude
			"object_editor"; "EIFGEN"; "templates"; "Windows"; "WEL"; "hact"; "se"; "ve"; "base"; "test"; "CVS"; "demo_version"; 
		end

	all gobo:		"$EIFFEL_SRC/library/gobo/library"
		exclude
			"hact"; "se"; "ve"; "base"; "CVS"; "other"; "gelint"; "test"; 
		default
			assertion (no)
		end

	all vision2:		"$EIFFEL_SRC/library/vision2"
		include
			"ev_button"; 
		exclude
			"gtk2"; "new_figures"; "mswin"; "components"; "obsolete"; "release"; "ev_widget.e"; "ev_pixmapable.e"; "ev_dialog.e"; "ev_sensitive.e"; "ev_sensitive_i.e"; "ev_widget_projector.e"; "ev_pixmap.e"; 
		end

	all base:		"$EIFFEL_SRC/library/base"
		exclude
			"table_eiffel3"; 
		default
			assertion (no)
		end

	all wizard_library:		"$EIFFEL_SRC/library/wizard"
		exclude
			"mswin"; "wizard_window.e"; "wizard_project_manager.e"; "wizard_shared.e"; "wizard_initial_state_window.e"; 
		end

	all preferences:		"$EIFFEL_SRC/library/preferences"
		exclude
			"registry"; 
		end
		
	all eifp_reader: "$EIFFEL_SRC/dotnet/VisualStudio/tools/eifp_reader"
			exclude
				"CVS"
		end

	all patterns: "$EIFFEL_SRC/library/patterns"

	all ast:		"$EIFFEL_SRC/Eiffel/common/parser/AST"

	yacc (ast):		"$EIFFEL_SRC/Eiffel/yacc"

	structure (ast):		"$EIFFEL_SRC/Eiffel/eiffel/structures"

	eiffel_helper (ast):		"$EIFFEL_SRC/library/helpers/eiffel"

	eiffel_parser (ast):		"$EIFFEL_SRC/Eiffel/common/parser/parser"

	eiffel_parser_errors (ast):		"$EIFFEL_SRC/Eiffel/API/error/common"
		exclude
			"error_handler.e"; "syntax_error.e"; 
		end

external

	include_path:
		"\$(EIFFEL_SRC)/library/vision2/implementation/gtk/Clib `$EIFFEL_SRC/library/vision2/implementation/gtk/Clib/vision2-gtk-config --devel --include_path`",
		"\$(EIFFEL_SRC)/C_library/libpng",
		"\$(EIFFEL_SRC)/C_library/zlib",
		"\$(EIFFEL_SRC)/library/vision2/spec/include"

	object:
		"`$(EIFFEL_SRC)/library/vision2/implementation/gtk/Clib/vision2-gtk-config --devel --object`"


end
