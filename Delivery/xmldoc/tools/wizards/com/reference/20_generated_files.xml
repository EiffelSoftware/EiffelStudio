<document title="Generated Files" output="studio">
	<meta_data/>
	<paragraph>
		<paragraph>
			The EiffelCOM Wizard generates code into the specified destination folder. The file hierarchy is the following:</paragraph>
		<image>
			<url>../images/folders.png</url>
		</image>
		<list ordered="false">
			<item>
				The <bold>Client</bold> folder includes all the files used to access a COM component. The subfolders <bold>Clib</bold> and 
				<bold>Include</bold> contain respectively the C++ source files and header files. The subfolder <bold>Component</bold> contains 
				the Eiffel classes corresponding to the component's coclasses. Finally the subfolder <bold>Interface_proxy</bold> contains classes 
				wrapping interfaces that may be returned by functions of the component. These classes may be of interest for systems 
				implementing a new COM component as well. The <bold>Client</bold> folder also contains a ACE file that can be used to 
				precompile the generated Eiffel classes if the project consists of accessing an existing component.
			</item>
			<item>
				The <bold>Common</bold> folder includes classes that are useful both when accessing and implementing a COM component. It 
				includes the usual C++ folders as well as the <bold>Interfaces</bold> and <bold>Structures</bold> folders. The <bold>Interfaces</bold> 
				folder contains Eiffel classes corresponding to COM interfaces. These are deferred classes that only define the signature of the 
				COM interfaces members. The <bold>Structures</bold> folder contains Eiffel classes wrapping any structure defined in the COM 
				definition file (IDL or type library).
			</item>
			<item>
				Optionally, the EiffelCOM Wizard may generate a <bold>idl</bold> folder which contains the IDL file generated from the Eiffel facade 
				class if the project consists of adding a COM interface to an existing Eiffel project.
			</item>
			<item>
				The <bold>Server</bold> folder includes files used to implement a COM component. Apart from the usual C++ folders, it also includes 
				a <bold>Component</bold> folder which contains Eiffel classes 
				corresponding to the component's coclasses and a <bold>Interface_stub</bold> folder which contains Eiffel classes wrapping 
				interfaces that may be given as argument to the component. This last folder may also be useful when accessing a COM component. 
				The <bold>Server</bold> folder also includes a ACE file which can be used to compile the generated system if the project consists of creating a new component.
			</item>
		</list>
		<seealso>
			<bold>See Also</bold>: <link><url>10_how_wizard_works.xml</url><label>How the EiffelCOM Wizard Works</label></link>, 
			<link><url>30_class_hierarchy.xml</url><label>Class Hierarchy</label></link>, 
			<link><url>40_eiffel_project.xml</url><label>Adding a COM Interface to an Eiffel Project</label></link>, 
			<link><url>50_reusing.xml</url><label>Accessing a COM Component</label></link>, 
			<link><url>60_building.xml</url><label>Building a COM Component</label></link>, 
			<link><url>70_options.xml</url><label>Command Line Options</label></link>
		</seealso>
	</paragraph></document>
