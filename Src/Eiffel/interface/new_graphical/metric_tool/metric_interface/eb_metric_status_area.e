note
	description: "Objects that represent an EV_TITLED_WINDOW.%
		%The original version of this class was generated by EiffelBuild."
	legal: "See notice at end of class."
	status: "See notice at end of class."
	date: "$Date$"
	revision: "$Revision$"

class
	EB_METRIC_STATUS_AREA

inherit
	EB_METRIC_STATUS_AREA_IMP

	EB_METRIC_INTERFACE_PROVIDER
		undefine
			is_equal,
			copy,
			default_create
		end

	EB_METRIC_TOOL_INTERFACE
		undefine
			is_equal,
			copy,
			default_create
		end

create
	make

feature{NONE} -- Initialization

	make (a_tool: like metric_tool)
			-- Initialize `metric_tool' with `a_tool'.
		require
			a_tool_attached: a_tool /= Void
		do
			set_metric_tool (a_tool)
			default_create
		ensure
			metric_tool_set: metric_tool = a_tool
		end

	user_create_interface_objects
			-- <Precursor>
		do
			-- FIXME: Currently code is not void-safe and initialization still takes place in `user_initialization'.
		end

	user_initialization
			-- Called by `initialize'.
			-- Any custom user initialization that
			-- could not be performed in `initialize',
			-- (due to regeneration of implementation class)
			-- can be added here.
		local
			l_text: EV_TEXT_FIELD
		do
			create l_text
			status_text.disable_edit
			status_text.set_background_color (l_text.background_color)
			status_lbl.set_text (metric_names.coloned_string (metric_names.t_status, True))
			attach_non_editable_warning_to_text (metric_names.t_text_not_editable, status_text, metric_tool_window)
			show_to_do_message_btn.set_pixmap (pixmaps.icon_pixmaps.command_error_info_icon)
			show_to_do_message_btn.set_tooltip (metric_names.f_show_to_do_message)
			show_to_do_message_btn.select_actions.extend (agent on_open_to_do_dialog (True))
		end

feature -- Setting

	set_validity (a_error: EB_METRIC_ERROR)
			-- Set Current status area to display validity information contained in `a_error'.
			-- `a_error' is Void means the metric is valid.
		local
			l_text: EV_TEXT
			l_message: STRING_32
		do
			error := a_error
			if error = Void then
					-- Valid case
				create l_text
				status_text.set_background_color (l_text.background_color)
				status_text.set_text (metric_names.t_metric_valid)
				status_pixmap.copy (pixmaps.icon_pixmaps.general_tick_icon)
				show_to_do_message_btn.disable_sensitive
				to_do_dialog.load_text (Void, "", "")
			else
					-- Invalid case
				status_text.set_background_color (preferences.metric_tool_data.warning_background_color)
				l_message := error.message_with_location.as_string_32
				l_message.replace_substring_all ({STRING_32} "%R", {STRING_32}"")
				l_message.replace_substring_all ({STRING_32}"%N", {STRING_32}" ")
				status_text.set_text (l_message)
				status_pixmap.copy (pixmaps.icon_pixmaps.general_error_icon)
				show_to_do_message_btn.enable_sensitive
				to_do_dialog.load_text (error.message, error.location, error.to_do)
			end
		end

feature{NONE} -- Actions

	on_open_to_do_dialog (a_force: BOOLEAN)
			-- Action to be performed to open a dialog to display help information about how to solve current metric definition error
			-- If `a_force' is True, display `to_do_dialog', otherwise, don't display `to_do_dialog' if it is hidden.
		do
			if not to_do_dialog.is_displayed and then a_force then
				to_do_dialog.show_relative_to_window (metric_tool_window)
			end
		end

feature{NONE} -- Impelementation

	to_do_dialog: EB_METRIC_TO_DO_MESSAGE_DIALOG
			-- Dialog to display help information about hwo to solve current metric definition error
		once
			create Result.make (metric_tool)
		ensure
			result_attached: Result /= Void
		end

	error: EB_METRIC_ERROR;
			-- Error to be displayed

note
	copyright: "Copyright (c) 1984-2015, Eiffel Software"
	license: "GPL version 2 (see http://www.eiffel.com/licensing/gpl.txt)"
	licensing_options: "http://www.eiffel.com/licensing"
	copying: "[
			This file is part of Eiffel Software's Eiffel Development Environment.
			
			Eiffel Software's Eiffel Development Environment is free
			software; you can redistribute it and/or modify it under
			the terms of the GNU General Public License as published
			by the Free Software Foundation, version 2 of the License
			(available at the URL listed under "license" above).
			
			Eiffel Software's Eiffel Development Environment is
			distributed in the hope that it will be useful, but
			WITHOUT ANY WARRANTY; without even the implied warranty
			of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
			See the GNU General Public License for more details.
			
			You should have received a copy of the GNU General Public
			License along with Eiffel Software's Eiffel Development
			Environment; if not, write to the Free Software Foundation,
			Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
		]"
	source: "[
			Eiffel Software
			5949 Hollister Ave., Goleta, CA 93117 USA
			Telephone 805-685-1006, Fax 805-685-6869
			Website http://www.eiffel.com
			Customer support http://support.eiffel.com
		]"
end -- class EB_METRIC_STATUS_AREA

