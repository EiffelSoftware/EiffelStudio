note
	description: "Objects that represent an EV_TITLED_WINDOW.%
		%The original version of this class was generated by EiffelBuild."
	generator: "EiffelBuild"
	date: "$Date$"
	revision: "$Revision$"

class
	MAIN_WINDOW

inherit
	MAIN_WINDOW_IMP
		redefine
			create_interface_objects
		end


feature {NONE} -- Initialization

	user_initialization
			-- Called by `initialize'.
			-- Any custom user initialization that
			-- could not be performed in `initialize',
			-- (due to regeneration of implementation class)
			-- can be added here.
		do
			set_size (1280, 600)

			show_actions.extend_kamikaze (agent init_docking_manager)
		end

	init_docking_manager
			--
		local
			l_docking_manager: like docking_manager
			l_tool_bar: SD_TOOL_BAR_CONTENT
		do
			create l_docking_manager.make (Current, Current)
			docking_manager := l_docking_manager
			type_selector.attach_to_docking_manager (l_docking_manager)
			layout_constructor.attach_to_docking_manager (l_docking_manager)
			object_editor.attach_to_docking_manager (l_docking_manager)
			l_tool_bar := build_tool_bar
			l_docking_manager.tool_bar_manager.contents.extend (l_tool_bar)
			l_tool_bar.set_top ({SD_ENUMERATION}.top)
		end

	create_interface_objects
			-- <Precursor>
		do
				-- Initialize before calling Precursor all the attached attributes
				-- from the current class.

				-- Proceed with vision2 objects creation.
			Precursor
			create shared_singleton

			create type_selector.make

			create layout_constructor.make
			shared_singleton.layout_constructor_cell.put (layout_constructor)

			create object_editor.make

			create uicc_manager

			shared_singleton.object_editor_cell.put (object_editor)
		end

	build_tool_bar: SD_TOOL_BAR_CONTENT
			--
		local
			l_list: ARRAYED_SET [SD_TOOL_BAR_ITEM]
			l_item: SD_TOOL_BAR_BUTTON
		do
			create l_list.make (10)

			create l_item.make
			l_item.set_text ("Open")
			l_item.select_actions.extend (agent layout_constructor.load_tree)
			l_list.extend (l_item)

			create l_item.make
			l_item.set_text ("Save")
			l_item.select_actions.extend (agent layout_constructor.save_tree)
			l_list.extend (l_item)

			create l_item.make
			l_item.set_text ("Generate Code")
			l_item.select_actions.extend (agent uicc_manager.compile)
			l_list.extend (l_item)

			create Result.make_with_items ("MAIN_TOOL_BAR", l_list)
		end
feature {NONE} -- Implementation

	docking_manager: detachable SD_DOCKING_MANAGER
			--

	type_selector: ER_TYPE_SELECTOR
			--

	layout_constructor: ER_LAYOUT_CONSTRUCTOR
			--

	object_editor: ER_OBJECT_EDITOR
			--

	shared_singleton: ER_SHARED_SINGLETON
			--

	uicc_manager: ER_UICC_MANAGER
			--
end
