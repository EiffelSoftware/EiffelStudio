indexing
	description: "Eiffel Project Properties. Eiffel language compiler library. Help file: "
	Note: "Automatically generated by the EiffelCOM Wizard."

deferred class
	IEIFFEL_PROJECT_PROPERTIES_INTERFACE

inherit
	ECOM_INTERFACE

feature -- Status Report

	system_name_user_precondition: BOOLEAN is
			-- User-defined preconditions for `system_name'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_system_name_user_precondition (pbstr_name: STRING): BOOLEAN is
			-- User-defined preconditions for `set_system_name'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	root_class_name_user_precondition: BOOLEAN is
			-- User-defined preconditions for `root_class_name'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_root_class_name_user_precondition (pbstr_class_name: STRING): BOOLEAN is
			-- User-defined preconditions for `set_root_class_name'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	creation_routine_user_precondition: BOOLEAN is
			-- User-defined preconditions for `creation_routine'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_creation_routine_user_precondition (pbstr_routine_name: STRING): BOOLEAN is
			-- User-defined preconditions for `set_creation_routine'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	namespace_generation_user_precondition: BOOLEAN is
			-- User-defined preconditions for `namespace_generation'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_namespace_generation_user_precondition (penum_cluster_namespace_generation: INTEGER): BOOLEAN is
			-- User-defined preconditions for `set_namespace_generation'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	default_namespace_user_precondition: BOOLEAN is
			-- User-defined preconditions for `default_namespace'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_default_namespace_user_precondition (pbstr_namespace: STRING): BOOLEAN is
			-- User-defined preconditions for `set_default_namespace'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	project_type_user_precondition: BOOLEAN is
			-- User-defined preconditions for `project_type'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_project_type_user_precondition (penum_project_type: INTEGER): BOOLEAN is
			-- User-defined preconditions for `set_project_type'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	target_clr_version_user_precondition: BOOLEAN is
			-- User-defined preconditions for `target_clr_version'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_target_clr_version_user_precondition (pbstr_version: STRING): BOOLEAN is
			-- User-defined preconditions for `set_target_clr_version'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	dot_net_naming_convention_user_precondition: BOOLEAN is
			-- User-defined preconditions for `dot_net_naming_convention'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_dot_net_naming_convention_user_precondition (pvb_naming_convention: BOOLEAN): BOOLEAN is
			-- User-defined preconditions for `set_dot_net_naming_convention'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	generate_debug_info_user_precondition: BOOLEAN is
			-- User-defined preconditions for `generate_debug_info'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_generate_debug_info_user_precondition (pvb_generate: BOOLEAN): BOOLEAN is
			-- User-defined preconditions for `set_generate_debug_info'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	precompiled_library_user_precondition: BOOLEAN is
			-- User-defined preconditions for `precompiled_library'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_precompiled_library_user_precondition (pbstr_path: STRING): BOOLEAN is
			-- User-defined preconditions for `set_precompiled_library'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	assertions_user_precondition: BOOLEAN is
			-- User-defined preconditions for `assertions'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_assertions_user_precondition (pul_assertions: INTEGER): BOOLEAN is
			-- User-defined preconditions for `set_assertions'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	clusters_user_precondition: BOOLEAN is
			-- User-defined preconditions for `clusters'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	externals_user_precondition: BOOLEAN is
			-- User-defined preconditions for `externals'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	assemblies_user_precondition: BOOLEAN is
			-- User-defined preconditions for `assemblies'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	title_user_precondition: BOOLEAN is
			-- User-defined preconditions for `title'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_title_user_precondition (pbstr_title: STRING): BOOLEAN is
			-- User-defined preconditions for `set_title'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	description_user_precondition: BOOLEAN is
			-- User-defined preconditions for `description'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_description_user_precondition (pbstr_description: STRING): BOOLEAN is
			-- User-defined preconditions for `set_description'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	company_user_precondition: BOOLEAN is
			-- User-defined preconditions for `company'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_company_user_precondition (pbstr_company: STRING): BOOLEAN is
			-- User-defined preconditions for `set_company'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	product_user_precondition: BOOLEAN is
			-- User-defined preconditions for `product'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_product_user_precondition (ppbstr_product: STRING): BOOLEAN is
			-- User-defined preconditions for `set_product'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	version_user_precondition: BOOLEAN is
			-- User-defined preconditions for `version'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_version_user_precondition (pbstr_version: STRING): BOOLEAN is
			-- User-defined preconditions for `set_version'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	trademark_user_precondition: BOOLEAN is
			-- User-defined preconditions for `trademark'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_trademark_user_precondition (pbstr_trademark: STRING): BOOLEAN is
			-- User-defined preconditions for `set_trademark'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	copyright_user_precondition: BOOLEAN is
			-- User-defined preconditions for `copyright'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_copyright_user_precondition (pbstr_copyright: STRING): BOOLEAN is
			-- User-defined preconditions for `set_copyright'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	culture_user_precondition: BOOLEAN is
			-- User-defined preconditions for `culture'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_culture_user_precondition (pbstr_cultre: STRING): BOOLEAN is
			-- User-defined preconditions for `set_culture'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	key_file_name_user_precondition: BOOLEAN is
			-- User-defined preconditions for `key_file_name'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_key_file_name_user_precondition (pbstr_file_name: STRING): BOOLEAN is
			-- User-defined preconditions for `set_key_file_name'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	working_directory_user_precondition: BOOLEAN is
			-- User-defined preconditions for `working_directory'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_working_directory_user_precondition (pbstr_working_directory: STRING): BOOLEAN is
			-- User-defined preconditions for `set_working_directory'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	apply_user_precondition: BOOLEAN is
			-- User-defined preconditions for `apply'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

feature -- Basic Operations

	system_name: STRING is
			-- System name.
		require
			system_name_user_precondition: system_name_user_precondition
		deferred

		end

	set_system_name (pbstr_name: STRING) is
			-- System name.
			-- `pbstr_name' [in].  
		require
			set_system_name_user_precondition: set_system_name_user_precondition (pbstr_name)
		deferred

		end

	root_class_name: STRING is
			-- Root class name.
		require
			root_class_name_user_precondition: root_class_name_user_precondition
		deferred

		end

	set_root_class_name (pbstr_class_name: STRING) is
			-- Root class name.
			-- `pbstr_class_name' [in].  
		require
			set_root_class_name_user_precondition: set_root_class_name_user_precondition (pbstr_class_name)
		deferred

		end

	creation_routine: STRING is
			-- Creation routine name.
		require
			creation_routine_user_precondition: creation_routine_user_precondition
		deferred

		end

	set_creation_routine (pbstr_routine_name: STRING) is
			-- Creation routine name.
			-- `pbstr_routine_name' [in].  
		require
			set_creation_routine_user_precondition: set_creation_routine_user_precondition (pbstr_routine_name)
		deferred

		end

	namespace_generation: INTEGER is
			-- Namespace generation for cluster
			-- See ECOM_EIF_CLUSTER_NAMESPACE_GENERATION_ENUM for possible `Result' values.
		require
			namespace_generation_user_precondition: namespace_generation_user_precondition
		deferred

		end

	set_namespace_generation (penum_cluster_namespace_generation: INTEGER) is
			-- Namespace generation for cluster
			-- `penum_cluster_namespace_generation' [in]. See ECOM_EIF_CLUSTER_NAMESPACE_GENERATION_ENUM for possible `penum_cluster_namespace_generation' values. 
		require
			set_namespace_generation_user_precondition: set_namespace_generation_user_precondition (penum_cluster_namespace_generation)
		deferred

		end

	default_namespace: STRING is
			-- Default namespace.
		require
			default_namespace_user_precondition: default_namespace_user_precondition
		deferred

		end

	set_default_namespace (pbstr_namespace: STRING) is
			-- Default namespace.
			-- `pbstr_namespace' [in].  
		require
			set_default_namespace_user_precondition: set_default_namespace_user_precondition (pbstr_namespace)
		deferred

		end

	project_type: INTEGER is
			-- Project type
			-- See ECOM_EIF_PROJECT_TYPES_ENUM for possible `Result' values.
		require
			project_type_user_precondition: project_type_user_precondition
		deferred

		end

	set_project_type (penum_project_type: INTEGER) is
			-- Project type
			-- `penum_project_type' [in]. See ECOM_EIF_PROJECT_TYPES_ENUM for possible `penum_project_type' values. 
		require
			set_project_type_user_precondition: set_project_type_user_precondition (penum_project_type)
		deferred

		end

	target_clr_version: STRING is
			-- Version of CLR compiler should target
		require
			target_clr_version_user_precondition: target_clr_version_user_precondition
		deferred

		end

	set_target_clr_version (pbstr_version: STRING) is
			-- Version of CLR compiler should target
			-- `pbstr_version' [in].  
		require
			set_target_clr_version_user_precondition: set_target_clr_version_user_precondition (pbstr_version)
		deferred

		end

	dot_net_naming_convention: BOOLEAN is
			-- .NET Naming convention
		require
			dot_net_naming_convention_user_precondition: dot_net_naming_convention_user_precondition
		deferred

		end

	set_dot_net_naming_convention (pvb_naming_convention: BOOLEAN) is
			-- .NET Naming convention
			-- `pvb_naming_convention' [in].  
		require
			set_dot_net_naming_convention_user_precondition: set_dot_net_naming_convention_user_precondition (pvb_naming_convention)
		deferred

		end

	generate_debug_info: BOOLEAN is
			-- Generate debug info?
		require
			generate_debug_info_user_precondition: generate_debug_info_user_precondition
		deferred

		end

	set_generate_debug_info (pvb_generate: BOOLEAN) is
			-- Generate debug info?
			-- `pvb_generate' [in].  
		require
			set_generate_debug_info_user_precondition: set_generate_debug_info_user_precondition (pvb_generate)
		deferred

		end

	precompiled_library: STRING is
			-- Precompiled file.
		require
			precompiled_library_user_precondition: precompiled_library_user_precondition
		deferred

		end

	set_precompiled_library (pbstr_path: STRING) is
			-- Precompiled file.
			-- `pbstr_path' [in].  
		require
			set_precompiled_library_user_precondition: set_precompiled_library_user_precondition (pbstr_path)
		deferred

		end

	assertions: INTEGER is
			-- Project assertions
		require
			assertions_user_precondition: assertions_user_precondition
		deferred

		end

	set_assertions (pul_assertions: INTEGER) is
			-- Project assertions
			-- `pul_assertions' [in].  
		require
			set_assertions_user_precondition: set_assertions_user_precondition (pul_assertions)
		deferred

		end

	clusters: IEIFFEL_SYSTEM_CLUSTERS_INTERFACE is
			-- Project Clusters.
		require
			clusters_user_precondition: clusters_user_precondition
		deferred

		end

	externals: IEIFFEL_SYSTEM_EXTERNALS_INTERFACE is
			-- Externals.
		require
			externals_user_precondition: externals_user_precondition
		deferred

		end

	assemblies: IEIFFEL_SYSTEM_ASSEMBLIES_INTERFACE is
			-- Assemblies.
		require
			assemblies_user_precondition: assemblies_user_precondition
		deferred

		end

	title: STRING is
			-- Project title.
		require
			title_user_precondition: title_user_precondition
		deferred

		end

	set_title (pbstr_title: STRING) is
			-- Project title.
			-- `pbstr_title' [in].  
		require
			set_title_user_precondition: set_title_user_precondition (pbstr_title)
		deferred

		end

	description: STRING is
			-- Project description.
		require
			description_user_precondition: description_user_precondition
		deferred

		end

	set_description (pbstr_description: STRING) is
			-- Project description.
			-- `pbstr_description' [in].  
		require
			set_description_user_precondition: set_description_user_precondition (pbstr_description)
		deferred

		end

	company: STRING is
			-- Project company.
		require
			company_user_precondition: company_user_precondition
		deferred

		end

	set_company (pbstr_company: STRING) is
			-- Project company.
			-- `pbstr_company' [in].  
		require
			set_company_user_precondition: set_company_user_precondition (pbstr_company)
		deferred

		end

	product: STRING is
			-- Product.
		require
			product_user_precondition: product_user_precondition
		deferred

		end

	set_product (ppbstr_product: STRING) is
			-- Product.
			-- `ppbstr_product' [in].  
		require
			set_product_user_precondition: set_product_user_precondition (ppbstr_product)
		deferred

		end

	version: STRING is
			-- Project version.
		require
			version_user_precondition: version_user_precondition
		deferred

		end

	set_version (pbstr_version: STRING) is
			-- Project version.
			-- `pbstr_version' [in].  
		require
			set_version_user_precondition: set_version_user_precondition (pbstr_version)
		deferred

		end

	trademark: STRING is
			-- Project trademark.
		require
			trademark_user_precondition: trademark_user_precondition
		deferred

		end

	set_trademark (pbstr_trademark: STRING) is
			-- Project trademark.
			-- `pbstr_trademark' [in].  
		require
			set_trademark_user_precondition: set_trademark_user_precondition (pbstr_trademark)
		deferred

		end

	copyright: STRING is
			-- Project copyright.
		require
			copyright_user_precondition: copyright_user_precondition
		deferred

		end

	set_copyright (pbstr_copyright: STRING) is
			-- Project copyright.
			-- `pbstr_copyright' [in].  
		require
			set_copyright_user_precondition: set_copyright_user_precondition (pbstr_copyright)
		deferred

		end

	culture: STRING is
			-- Asembly culture.
		require
			culture_user_precondition: culture_user_precondition
		deferred

		end

	set_culture (pbstr_cultre: STRING) is
			-- Asembly culture.
			-- `pbstr_cultre' [in].  
		require
			set_culture_user_precondition: set_culture_user_precondition (pbstr_cultre)
		deferred

		end

	key_file_name: STRING is
			-- Asembly signing key file name.
		require
			key_file_name_user_precondition: key_file_name_user_precondition
		deferred

		end

	set_key_file_name (pbstr_file_name: STRING) is
			-- Asembly signing key file name.
			-- `pbstr_file_name' [in].  
		require
			set_key_file_name_user_precondition: set_key_file_name_user_precondition (pbstr_file_name)
		deferred

		end

	working_directory: STRING is
			-- Project working directory
		require
			working_directory_user_precondition: working_directory_user_precondition
		deferred

		end

	set_working_directory (pbstr_working_directory: STRING) is
			-- Project working directory
			-- `pbstr_working_directory' [in].  
		require
			set_working_directory_user_precondition: set_working_directory_user_precondition (pbstr_working_directory)
		deferred

		end

	apply is
			-- Apply changes
		require
			apply_user_precondition: apply_user_precondition
		deferred

		end

end -- IEIFFEL_PROJECT_PROPERTIES_INTERFACE

