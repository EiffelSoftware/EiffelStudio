<document title="Breakpoint editing" output="studio">
	<meta_data/>
	<paragraph>
		<paragraph>In all flat views ( 
			<link>
				<url>../../80_formatters/20_feature_formatters/10_flat_format.xml</url>
				<label>feature flat view</label>
			</link> and 
			<link>
				<url>../../80_formatters/10_class_formatters/15_flat_format.xml</url>
				<label>class flat view</label>
			</link>), a margin is displayed on the left of the editor. 
			<link>
				<url>00_introduction.xml</url>
				<label>Breakpoints</label>
			</link> are there symbolized as circles, of a different appearance depending on their state: enabled ( 
			<image>
				<url>../../../../../images/eiffelstudio/icons/12x12/bp_enabled_icon.png</url>
			</image> ), disabled ( 
			<image>
				<url>../../../../../images/eiffelstudio/icons/12x12/bp_disabled_icon.png</url>
			</image> ) or not set ( 
			<image>
				<url>../../../../../images/eiffelstudio/icons/12x12/bp_slot_icon.png</url>
			</image> ). A small question mark in the circle (
			<image>
				<url>../../../../../images/eiffelstudio/icons/12x12/bp_enabled_conditional_icon.png</url>
			</image>, 
			<image>
				<url>../../../../../images/eiffelstudio/icons/12x12/bp_disabled_conditional_icon.png</url>
			</image> )indicates 
			<link>
				<url>40_conditional_breakpoints.xml</url>
				<label>conditional breakpoints</label>
			</link>.
		</paragraph>
		<paragraph>Right-clicking on any breakpoint pops up a context menu:</paragraph>
		<paragraph><alignment>center</alignment>
			<image>
				<url>../../../../../images/eiffelstudio/debugger/breakpoint_context_menu.png</url>
			</image>
		</paragraph>
		<paragraph>The first line provides the breakpoint slot index of the selected breakpoint(i.e: the one used in call stack or exception trace output).
			<line_break/>
			Clicking one of the three first entries of the context menu changes the state of the breakpoint that was right-clicked. The last entry ( 
			<bold>Run to breakpoint</bold>) launches the debugged application so that it will stop as soon as the selected breakpoint is encountered, as if the breakpoint had been enabled.
			<line_break/>
		</paragraph>
			<paragraph>		
			"Edit This Breakpoint" allows the user to edit the parameters of the breakpoint (condition, hit count, when hits actions...) thanks to the breakpoint dialog.
			This dialog provides on hte first tab "Context": access to the associated tags, condition, and hit count control. And on the second tab, it allows to associate "When hits..." action(s) to the breakpoint.
			<paragraph>	<alignment>center</alignment>
<table>
<row>
<cell>
<paragraph>Context's tab</paragraph>
			<image>
				<url>../../../../../images/eiffelstudio/debugger/breakpoint_dialog_context.png</url><legend>Context's tab</legend>
			</image>			
</cell>
<cell>
<paragraph>When hits action 's tab</paragraph>

			<image>
				<url>../../../../../images/eiffelstudio/debugger/breakpoint_dialog_when_hits_action.png</url><legend>When hits... 's tab</legend>
			</image>			

</cell>
</row>
</table>			
			</paragraph>
			<paragraph>
			<list ordered="false">
			<item>The tags allow to identified a collection of breakpoints, either from the <link><url>30_breakpoint_information.xml</url><label>breakpoints tool</label></link>, or even in the parameters of "When hits .." actions. 
			<line_break></line_break>
			Note that any existing breakpoint can be referenced by an implicit tag with <italic>"<bold>bp:</bold>cluster.{CLASS}.feature@index"</italic> (cluster is not mandatory).<line_break></line_break>
			<sample>For instance "<bold>bp:</bold>elks.{LINKED_LIST}.extend@2"</sample>
			</item>
			<item>the "Condition" allows the user to set a condition for stopping.	</item>
			<item>the "Hit count" allows the user to set a condition on hitcount for stopping.	</item>
			<item>And the "When Hits..." allows to associate specific actions to the breakpoint:
				<list ordered="false">
				<item>Print message: display the expanded message to the output (there are predefined variables, and you can also evaluate expressions).</item>
				<item>Disable/Restore Assertion Checking: this might be useful to desactivate assertion checking on a specific part of the execution.</item>
				<item>Record Execution: start or stop the execution recording (cf: <link><url>../35_execution_record_and_replay/index.xml</url><label>Execution recording and replay</label></link>)</item>
				<item>Enable/Disable Breakpoints: either use tags or implicit tags (ex: <italic>"bp:elks.{LINKED_LIST}.extend@2"</italic>), to reference a set of existing breakpoints. 
				This can be pretty useful to enable a breakpoint only if the execution takes a specific execution path.</item>
				<item>Reset Hits count</item>
				</list>		
			</item>
			
			</list>
			</paragraph>
			
		</paragraph>
			
			<paragraph>		
			"Edit Condition" allows the user to set a condition for stopping, it opens the same dialog as "EditThis Breakpoint", but focus on the "condition" field.
		</paragraph>
			<paragraph>	<alignment>center</alignment>		
			<image>
				<url>../../../../../images/eiffelstudio/debugger/breakpoint_dialog_condition.png</url>
			</image>			
			</paragraph>

			<paragraph>		
			"Hit count" allows the user to set a condition on hitcount for stopping
		</paragraph>
			<paragraph><alignment>center</alignment>			
			<image>
				<url>../../../../../images/eiffelstudio/debugger/breakpoint_dialog_hit_count.png</url>
			</image>	
			</paragraph>		


			<paragraph>		
			"When hits ..." allows the user to do an action when we actually stopped on this breakpoint. This can be for instance `print message'.
		</paragraph>
			<paragraph>		<alignment>center</alignment>	
			<image>
				<url>../../../../../images/eiffelstudio/debugger/breakpoint_dialog_when_hits.png</url>
			</image>			
			
			</paragraph>

		
		<seealso>
			<bold>See Also</bold>
			<line_break/> 
			<link>
				<url>20_breakpoint_commands.xml</url>
				<label>Breakpoint commands</label>
			</link>
			<line_break/> 
			<link>
				<url>30_breakpoint_information.xml</url>
				<label>Breakpoint information command</label>
			</link>
			<line_break/>
		</seealso>
	</paragraph></document>
