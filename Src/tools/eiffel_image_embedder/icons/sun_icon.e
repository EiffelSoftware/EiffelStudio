indexing
	description: "Pixel buffer that replaces orignal image file.%
		%The orignal version of this class has been generated by Image Eiffel Code."

class
	SUN_ICON

inherit
	EV_PIXEL_BUFFER

create
	make

feature {NONE} -- Initialization

	make is
			-- Initialization
		do
			make_with_size (16, 16)
			fill_memory
		end

feature {NONE} -- Image data

	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER) is
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(00,FF,BD,39)A(00,FF,BC,37)A(00,FF,C1,48)A(00,FF,C3,4D)A(2D,FF,BF,44)A(F7,FF,C2,4D)A(7D,FF,B9,37)A(00,FF,BA,1F)A(00,FF,B7,1E)A(7D,FF,C0,45)A(F7,FF,C0,44)A(2D,FF,BE,36)A(00,FF,C0,3D)A(00,FF,C0,3E)A(00,FF,BC,38)A(00,FF,BD,39)A(00,FF,BD,39)A(00,FF,BE,3A)A(00,FF,B8,2F)A(00,FF,AC,0A)A(1E,FF,B7,24)A(FF,FF,A0,00)A(FF,FF,A6,08)A(7C,FF,B7,1D)A(7C,FF,B2,18)A(FF,FF,A9,0F)A(FF,FF,A0,00)A(1E,FF,AD,17)A(00,FF,A4,00)A(00,FF,B3,24)A(00,FF,BE,3C)A(00,FF,BD,39)A(00,FF,BD,39)A(00,FF,BE,3A)A(00,FF,B9,31)A(00,FF,AA,0F)A(A9,FF,CF,6C)A(FF,FF,BD,1C)A(FF,FF,CF,32)A(FF,FF,DD,3E)A(FF,FF,D6,39)A(FF,FD,C0,27)A(FF,F9,AB,12)A(A9,FF,C1,4E)A(00,FF,A8,08)A(00,FF,B3,26)A(00,FF,BE,3C)A(00,FF,BD,39)A(25,FF,BE,3B)A(CA,FF,BE,3A)A(D0,FF,B8,2F)A(D2,FF,A9,09)A(FF,FF,DA,43)A(FF,FF,EC,51)A(FF,FF,FF,54)A(FF,FF,FD,55)A(FF,FF,F7,56)A(FF,FE,E5,4F)A(FF,FD,D4,3D)A(FF,F0,B1,2A)A(D2,FD,A3,03)A(D0,FF,B3,25)A(CA,FF,BE,3C)A(25,FF,BE,3B)A(03,FF,B9,2D)A(72,FF,B0,19)A(FF,FF,A0,00)A(FF,FF,CA,2A)A(FF,FF,F4,48)A(FF,FF,FF,4C)A(FF,FF,FF,4B)A(FF,FF,FF,49)A(FF,FF,FE,4C)A(FF,FF,FE,4E)A(FF,FF,DD,47)A(FF,FC,CA,3D)A(FF,EC,A0,16)A(FF,FF,A4,00)A(72,FF,B1,18)A(03,FF,BA,2D)
				A(00,FF,BC,43)A(62,FF,BD,48)A(FF,FD,B5,27)A(FF,FE,E8,38)A(FF,FF,FF,46)A(FF,FF,FF,4A)A(FF,E4,DE,3A)A(FF,F7,F6,40)A(FF,F4,F1,43)A(FF,E3,D2,3C)A(FF,FF,EC,4B)A(FF,FF,D6,40)A(FF,ED,AE,26)A(FF,F0,9E,10)A(62,FF,BA,2A)A(00,FF,B6,25)A(00,FF,DA,99)A(62,FF,DC,A6)A(FF,FA,D8,60)A(FF,FC,F0,38)A(FF,F3,EC,3A)A(FF,FF,FF,41)A(FF,99,81,1A)A(FF,D6,CB,2D)A(FF,D3,C6,2E)A(FF,9B,80,1A)A(FF,FF,FE,49)A(FF,F3,CF,3C)A(FF,F0,B4,2D)A(FF,D8,9A,33)A(62,FF,D1,6D)A(00,FF,C9,64)A(00,FF,C9,61)A(68,FF,A8,1B)A(FF,FA,CD,2D)A(FF,F3,E6,41)A(FF,C3,B0,28)A(FF,FF,FF,39)A(FF,E2,D9,27)A(FF,F2,EF,32)A(FF,F3,ED,34)A(FF,E3,D3,32)A(FF,FF,F4,46)A(FF,C6,A6,2B)A(FF,EA,BA,38)A(FF,D9,8B,14)A(68,FF,AE,12)A(00,FF,BB,36)A(65,FF,C6,56)A(FF,FF,9B,00)A(FF,FA,BE,19)A(FF,F8,E9,35)A(FF,B7,A2,1D)A(FF,F5,EF,2F)A(FF,FF,FF,32)A(FF,FF,FF,32)A(FF,FF,FC,32)A(FF,FF,FE,36)A(FF,E1,C6,30)A(FF,D3,AC,2E)A(FF,EF,B7,3D)A(FF,D0,7E,07)A(FF,FF,A6,00)A(65,FF,B9,2D)A(A2,FF,C5,54)A(CC,FF,AA,12)A(FF,FC,B1,1F)A(FF,FE,E0,2B)A(FF,E4,D0,24)A(FF,C0,A9,18)A(FF,DE,D3,21)A(FF,FF,F6,24)A(FF,FC,EC,27)A(FF,DB,C0,20)A(FF,BA,99,1D)A(FF,F4,C8,3D)A(FF,E5,9A,2C)A(FF,D7,85,08)A(CC,FF,AF,11)A(A2,FF,B8,2C)
				A(00,FF,C2,4C)A(19,FF,B3,24)A(C2,FF,CE,71)A(FF,F4,C2,31)A(FF,FF,E1,21)A(FF,E8,C5,15)A(FF,D1,B7,15)A(FF,CC,B7,13)A(FF,CE,B3,11)A(FF,D2,A9,10)A(FF,F0,C2,24)A(FF,F9,C0,32)A(FF,C0,80,20)A(C2,FA,C5,66)A(19,FF,B1,1E)A(00,FF,B5,26)A(00,FF,CD,6A)A(00,FF,CF,6B)A(95,FF,DB,8C)A(FF,FB,AF,20)A(FF,EE,B1,12)A(FF,FE,D4,12)A(FF,FE,D9,10)A(FF,ED,C6,0A)A(FF,F0,C9,0E)A(FF,FF,D0,11)A(FF,EF,B8,20)A(FF,BF,76,12)A(FF,E4,98,1A)A(95,FF,DE,8A)A(00,FF,CF,6B)A(00,FF,C0,41)A(00,FF,D6,89)A(00,FF,D7,8C)A(A8,FF,D9,90)A(FF,FF,AD,17)A(FF,FB,A2,06)A(FF,E5,A8,25)A(FF,E4,9F,0F)A(FF,ED,9B,00)A(FF,EB,9E,06)A(FF,D2,8B,0E)A(FF,C2,7D,21)A(FF,EC,93,06)A(FF,FF,B0,16)A(A8,FF,D9,82)A(00,FF,D8,7F)A(00,FF,D6,7A)A(00,FF,D6,7A)A(00,FF,D6,7A)A(60,FF,D9,81)A(9C,FF,AD,15)A(9C,FF,AF,1D)A(9C,FF,D4,77)A(E6,FB,BC,50)A(FF,EB,93,03)A(FF,E8,8D,00)A(E6,F0,A8,36)A(9C,FF,D1,79)A(9C,FF,B4,25)A(9C,FF,AD,14)A(60,FF,D9,82)A(00,FF,D6,7B)A(00,FF,D6,7B)A(00,FF,D6,7B)A(00,FF,D6,7B)A(00,FF,D9,82)A(00,FF,AD,15)A(00,FF,AE,1C)A(00,FF,CF,6C)A(34,FF,D2,73)A(F3,FF,B0,19)A(F3,FF,B0,09)A(34,FD,C0,4F)A(00,FB,C9,70)A(00,FF,B2,23)A(00,FF,AD,14)A(00,FF,D9,82)A(00,FF,D6,7B)A(00,FF,D6,7B)
				A(00,FF,D6,7B)A(00,FF,D6,7B)A(00,FF,D9,82)A(00,FF,AD,15)A(00,FF,AE,1C)A(00,FF,CF,6D)A(0A,FF,D1,70)A(C7,FF,B1,1E)A(C7,FF,B1,0B)A(0A,FC,BE,4D)A(00,FB,C9,70)A(00,FF,B2,23)A(00,FF,AD,14)A(00,FF,D9,82)A(00,FF,D6,7B)A(00,FF,D6,7B);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	build_colors (a_ptr: POINTER) is
			-- Build `colors'.
		do
			c_colors_0 (a_ptr, 0)
		end

feature {NONE} -- Image data filling.

	fill_memory is
			-- Fill image data into memory.
		local
			l_imp: EV_PIXEL_BUFFER_IMP
			l_pointer: POINTER
		do
			l_imp ?= implementation
			check not_void: l_imp /= Void end

			l_pointer := l_imp.data_ptr
			if l_pointer /= default_pointer then
				build_colors (l_pointer)
				l_imp.unlock
			end
		end

end -- SUN_ICON
