-- This file has been generated by EWG. Do not edit. Changes will be lost!

class CONTEXTUAL_MENU_INTERFACE_STRUCT_STRUCT

inherit

	EWG_STRUCT

	CONTEXTUAL_MENU_INTERFACE_STRUCT_STRUCT_EXTERNAL
		export
			{NONE} all
		end

create

	make_new_unshared,
	make_new_shared,
	make_unshared,
	make_shared

feature {ANY} -- Access

	sizeof: INTEGER is
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	reserved: POINTER is
			-- Access member `_reserved'
		require
			exists: exists
		do
			Result := get_reserved_external (item)
		ensure
			result_correct: Result = get_reserved_external (item)
		end

	set_reserved (a_value: POINTER) is
			-- Set member `_reserved'
		require
			exists: exists
		do
			set_reserved_external (item, a_value)
		ensure
			a_value_set: a_value = reserved
		end

	queryinterface: POINTER is
			-- Access member `QueryInterface'
		require
			exists: exists
		do
			Result := get_queryinterface_external (item)
		ensure
			result_correct: Result = get_queryinterface_external (item)
		end

	set_queryinterface (a_value: POINTER) is
			-- Set member `QueryInterface'
		require
			exists: exists
		do
			set_queryinterface_external (item, a_value)
		ensure
			a_value_set: a_value = queryinterface
		end

-- TODO: function pointers not yet callable from
--		struct, use corresponding callback class instead
	addref: POINTER is
			-- Access member `AddRef'
		require
			exists: exists
		do
			Result := get_addref_external (item)
		ensure
			result_correct: Result = get_addref_external (item)
		end

	set_addref (a_value: POINTER) is
			-- Set member `AddRef'
		require
			exists: exists
		do
			set_addref_external (item, a_value)
		ensure
			a_value_set: a_value = addref
		end

-- TODO: function pointers not yet callable from
--		struct, use corresponding callback class instead
	release: POINTER is
			-- Access member `Release'
		require
			exists: exists
		do
			Result := get_release_external (item)
		ensure
			result_correct: Result = get_release_external (item)
		end

	set_release (a_value: POINTER) is
			-- Set member `Release'
		require
			exists: exists
		do
			set_release_external (item, a_value)
		ensure
			a_value_set: a_value = release
		end

-- TODO: function pointers not yet callable from
--		struct, use corresponding callback class instead
	examinecontext: POINTER is
			-- Access member `ExamineContext'
		require
			exists: exists
		do
			Result := get_examinecontext_external (item)
		ensure
			result_correct: Result = get_examinecontext_external (item)
		end

	set_examinecontext (a_value: POINTER) is
			-- Set member `ExamineContext'
		require
			exists: exists
		do
			set_examinecontext_external (item, a_value)
		ensure
			a_value_set: a_value = examinecontext
		end

-- TODO: function pointers not yet callable from
--		struct, use corresponding callback class instead
	handleselection: POINTER is
			-- Access member `HandleSelection'
		require
			exists: exists
		do
			Result := get_handleselection_external (item)
		ensure
			result_correct: Result = get_handleselection_external (item)
		end

	set_handleselection (a_value: POINTER) is
			-- Set member `HandleSelection'
		require
			exists: exists
		do
			set_handleselection_external (item, a_value)
		ensure
			a_value_set: a_value = handleselection
		end

-- TODO: function pointers not yet callable from
--		struct, use corresponding callback class instead
	postmenucleanup: POINTER is
			-- Access member `PostMenuCleanup'
		require
			exists: exists
		do
			Result := get_postmenucleanup_external (item)
		ensure
			result_correct: Result = get_postmenucleanup_external (item)
		end

	set_postmenucleanup (a_value: POINTER) is
			-- Set member `PostMenuCleanup'
		require
			exists: exists
		do
			set_postmenucleanup_external (item, a_value)
		ensure
			a_value_set: a_value = postmenucleanup
		end

-- TODO: function pointers not yet callable from
--		struct, use corresponding callback class instead
end
