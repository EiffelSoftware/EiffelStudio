case $CONFIG in
'')
	if test ! -f config.sh; then
		(echo "Can't find config.sh."; exit 1)
	fi 2>/dev/null
	. ./config.sh
	;;
esac
case "$0" in
*/*) cd `expr X$0 : 'X\(.*\)/'` ;;
esac
echo "Extracting "."/Makefile (with variable substitutions)"
$spitshell >Makefile <<!GROK!THIS!
########################################################################
# Makefile generated from Makefile.SH on $DATE

SHELL = /bin/sh
AR = ar rc
CC = $cc
CTAGS = ctags
INCLUDE = -I\$(ISE_EIFFEL)/studio/spec/\$(ISE_PLATFORM)/include -I../spec/include -I\$(ISE_EIFFEL)/C_library/libpng
CFLAGS = $optimize $ccflags $large -g `gtk-config --cflags` \$(INCLUDE)
MTCFLAGS = $optimize $mtccflags $large -g `gtk-config --cflags` \$(INCLUDE)
SHAREDLINK = $sharedlink
LDSHAREDFLAGS = $ldsharedflags
LN = $ln
MAKE = make
MKDEP = $mkdep \$(DPFLAGS) --
RANLIB = $ranlib
RM = $rm -f
MV = $mv
MKDIR = $mkdir -p

########################################################################
# New suffixes and associated building rules -- edit with care


!GROK!THIS!
$spitshell >>Makefile <<'!NO!SUBS!'

MT_OBJECTS = MTio_watcher.o
OBJECTS = io_watcher.o 

ALL_OBJECTS = $(OBJECTS) $(MT_OBJECTS)

all: $(ALL_OBJECTS)
	$(MKDIR) ../spec/$(ISE_PLATFORM)/lib
	$(MV) $? ../spec/$(ISE_PLATFORM)/lib
	make clobber

MTio_watcher.o: io_watcher.c
	$(CC) -c $(MTCFLAGS) $? -o $@

local_realclean::
	$(RM) $(ALL_OBJECTS)
########################################################################
# Common rules for all Makefiles -- do not edit

emptyrule::

clean: local_clean
realclean: local_realclean
clobber: local_clobber

local_clean::
	$(RM) core *~ *.o

local_realclean:: local_clean

local_clobber:: local_realclean
	$(RM) Makefile config.sh

Makefile: Makefile.SH
	/bin/sh Makefile.SH

tags::
	$(CTAGS) -w *.[ch]
	$(CTAGS) -xw *.[ch] > tags

local_clobber::
	$(RM) tags

########################################################################
# Dependencies generated by make depend
# DO NOT DELETE THIS LINE -- make depend relies on it

# Put nothing here or make depend will gobble it up
.FORCE_DEPEND::
	@echo "You must run 'make depend' in $(TOP) first."; exit 1
!NO!SUBS!
chmod 644 Makefile
$eunicefix Makefile

