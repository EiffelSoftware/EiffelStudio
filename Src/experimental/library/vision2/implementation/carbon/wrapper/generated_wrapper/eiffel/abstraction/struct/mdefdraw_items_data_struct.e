-- This file has been generated by EWG. Do not edit. Changes will be lost!

class MDEFDRAW_ITEMS_DATA_STRUCT

inherit

	EWG_STRUCT

	MDEFDRAW_ITEMS_DATA_STRUCT_EXTERNAL
		export
			{NONE} all
		end

create

	make_new_unshared,
	make_new_shared,
	make_unshared,
	make_shared

feature {ANY} -- Access

	sizeof: INTEGER is
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	firstitem: INTEGER is
			-- Access member `firstItem'
		require
			exists: exists
		do
			Result := get_firstitem_external (item)
		ensure
			result_correct: Result = get_firstitem_external (item)
		end

	set_firstitem (a_value: INTEGER) is
			-- Set member `firstItem'
		require
			exists: exists
		do
			set_firstitem_external (item, a_value)
		ensure
			a_value_set: a_value = firstitem
		end

	lastitem: INTEGER is
			-- Access member `lastItem'
		require
			exists: exists
		do
			Result := get_lastitem_external (item)
		ensure
			result_correct: Result = get_lastitem_external (item)
		end

	set_lastitem (a_value: INTEGER) is
			-- Set member `lastItem'
		require
			exists: exists
		do
			set_lastitem_external (item, a_value)
		ensure
			a_value_set: a_value = lastitem
		end

	trackingdata_struct: MENU_TRACKING_DATA_STRUCT is
			-- Access member `trackingData'
		require
			exists: exists
		do
			create Result.make_shared (get_trackingdata_external (item))
		ensure
			result_not_void: Result /= Void
			result_has_correct_item: Result.item = trackingdata
		end

	set_trackingdata_struct (a_value: MENU_TRACKING_DATA_STRUCT) is
			-- Set member `trackingData'
		require
			a_value_not_void: a_value /= Void
			exists: exists
		do
			set_trackingdata_external (item, a_value.item)
		ensure
			a_value_set: a_value.item = trackingdata
		end

	trackingdata: POINTER is
			-- Access member `trackingData'
		require
			exists: exists
		do
			Result := get_trackingdata_external (item)
		ensure
			result_correct: Result = get_trackingdata_external (item)
		end

	set_trackingdata (a_value: POINTER) is
			-- Set member `trackingData'
		require
			exists: exists
		do
			set_trackingdata_external (item, a_value)
		ensure
			a_value_set: a_value = trackingdata
		end

	context: POINTER is
			-- Access member `context'
		require
			exists: exists
		do
			Result := get_context_external (item)
		ensure
			result_correct: Result = get_context_external (item)
		end

	set_context (a_value: POINTER) is
			-- Set member `context'
		require
			exists: exists
		do
			set_context_external (item, a_value)
		ensure
			a_value_set: a_value = context
		end

end
