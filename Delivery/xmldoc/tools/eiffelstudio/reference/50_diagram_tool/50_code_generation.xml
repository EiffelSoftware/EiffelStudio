<document title="Code generation" output="studio">
	<meta_data></meta_data>
	<paragraph>
		<paragraph>All actions taken in the diagram tool that modify a part of the system are immediately reflected in the Eiffel system. Following is a summary of these actions.</paragraph>
		<list ordered="false">
			<item>When you create a new class, this is the generated empty class:
				<line_break></line_break> 
				<code_block>
<keyword>indexing</keyword>
	description<symbol>:</symbol> "<string>Objects that ...</string>"
	author<symbol>:</symbol> ""
	date<symbol>:</symbol> "<string>$Date$</string>"
	revision<symbol>:</symbol> "<string>$Revision$</string>"

<keyword>class</keyword>
	<class_name>CLASS_NAME</class_name>

<keyword>end</keyword> -- <keyword>class</keyword> <class_name>CLASS_NAME</class_name>				
</code_block>
			</item>
			<item>When you delete a class, the class file is removed from the disk.</item>
			<item>When you add a parent to a class, the parent is inserted in the existing inheritance clause, 
				<italic>without</italic> any additional ( 
				<code>
					<keyword>undefine</keyword>
				</code>/
				<code>
					<keyword>select</keyword>
				</code>/etc.) clauses to solve possible conflicts.
				<line_break></line_break> 
				<code_block>
<keyword>indexing</keyword>
	description<symbol>:</symbol> "<string>Objects that ...</string>"
	author<symbol>:</symbol> ""
	date<symbol>:</symbol> "<string>$Date$</string>"
	revision<symbol>:</symbol> "<string>$Revision$</string>"

<keyword>class</keyword>
	<class_name>CLASS_NAME</class_name>
	
<keyword>inherit</keyword>
	<class_name>NEW_PARENT</class_name>

<keyword>end</keyword> -- <keyword>class</keyword> <class_name>CLASS_NAME</class_name>				
</code_block>
			</item>
			<item>When removing an inheritance link, the entire parent clause is removed, i.e. including any 
				<code>
					<keyword>redefine</keyword>
				</code>/
				<code>
					<keyword>undefine</keyword>
				</code>/etc. until the matching 
				<code>
					<keyword>end</keyword>
				</code>.
			</item>
			<item>When creating a client link, a function or attribute is generated by the feature wizard. When creating a function, this code is generated:
				<line_break></line_break> 
				<code_block>
<keyword>indexing</keyword>
	description<symbol>:</symbol> "<string>Objects that ...</string>"
	author<symbol>:</symbol> ""
	date<symbol>:</symbol> "<string>$Date$</string>"
	revision<symbol>:</symbol> "<string>$Revision$</string>"

<keyword>class</keyword>
	<class_name>CLASS_NAME</class_name>

<keyword>feature</keyword><comment> -- Access</comment>

	<feature_name>f</feature_name><symbol>:</symbol> <class_name>TYPE</class_name> <keyword>is</keyword>
				<comment>-- Client from CLASS_NAME to TYPE.</comment>
		<keyword>do</keyword>
		<keyword>end</keyword>

<keyword>end</keyword> -- <keyword>class</keyword> <class_name>CLASS_NAME</class_name>				
</code_block>
			</item>
			<item>If you choose to create an attribute for the client link, and optionally specify to generate a set-procedure and an invariant, the following code will be pasted into the class text:
				<line_break></line_break> 
				<code_block>
<keyword>indexing</keyword>
	description<symbol>:</symbol> "<string>Objects that ...</string>"
	author<symbol>:</symbol> ""
	date<symbol>:</symbol> "<string>$Date$</string>"
	revision<symbol>:</symbol> "<string>$Revision$</string>"

<keyword>class</keyword>
	<class_name>CLASS_NAME</class_name>

<keyword>feature</keyword><comment> -- Access</comment>

	<feature_name>f</feature_name><symbol>:</symbol> <class_name>TYPE</class_name> <keyword>is</keyword>
				<comment>-- Client from CLASS_NAME to TYPE.</comment>
				
<keyword>feature</keyword> <comment>--  Element change</comment>

	<feature_name>set_f</feature_name> <symbol>(</symbol>a_f<symbol>:</symbol> <class_name>TYPE</class_name><symbol>)</symbol> <keyword>is</keyword>
			<comment> -- Client from CLASS_NAME to TYPE.</comment>
		<keyword>require</keyword>
			a_f_not_void<symbol>:</symbol> af <symbol>/=</symbol> Void
		<keyword>do</keyword>
			<feature_name>f</feature_name> <symbol>:=</symbol> a_f
		<keyword>ensure</keyword>
			f_assigned: <feature_name>f</feature_name> <symbol>=</symbol> a_f
		<keyword>end</keyword>
		
<keyword>invariant</keyword>
	f_not_void<symbol>:</symbol> <feature_name>f</feature_name> <symbol>/=</symbol> Void

<keyword>end</keyword> -- <keyword>class</keyword> <class_name>CLASS_NAME</class_name>				
</code_block>	
			</item>
			<item>When removing a client link, only the matching function or attribute is removed. Any additionally generated set-feature or invariant is not removed.</item>
			<item>When removing a cluster, the associated directory is not erased, but the reference to the cluster is removed from the configuration file. At this time, it is not possible to create a cluster using the diagram tool, only to remove one.  </item>
		</list>
	</paragraph></document>
