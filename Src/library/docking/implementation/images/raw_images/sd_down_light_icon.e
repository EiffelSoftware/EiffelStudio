note
	description: "Pixel buffer that replaces orignal image file.%
		%The orignal version of this class has been generated by Image Eiffel Code."
	status: "See notice at end of class."
	legal: "See notice at end of class."

class
	SD_DOWN_LIGHT_ICON

inherit
	EV_PIXEL_BUFFER

create
	make

feature {NONE} -- Initialization

	make
			-- Initialization
		do
			make_with_size (41, 35)
			fill_memory
		end

feature {NONE} -- Image data

	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(96,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FE,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(98,7F,8E,D2)A(04,00,00,00)A(02,00,00,00)A(01,00,00,00)A(FF,81,90,D4)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,9A,9C,A3)A(FF,81,90,D4)A(0B,00,00,00)
				A(07,00,00,00)A(04,00,00,00)A(FF,81,90,D4)A(FF,9F,A1,A8)A(FF,A6,A9,B0)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,AB,AD,B5)A(FF,81,90,D4)A(16,00,00,00)A(0E,00,00,00)A(09,00,00,00)A(FF,81,90,D4)A(FF,A6,A9,B0)A(FF,C0,C2,CB)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)A(FF,CD,CF,D9)
				A(FF,81,90,D4)A(25,00,00,00)A(19,00,00,00)A(0E,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,81,90,D4)A(37,00,00,00)A(25,00,00,00)A(16,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,BF,C6,E1)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,BF,C6,E1)A(FF,DB,DE,E8)A(FF,DC,DF,E9)
				A(FF,DD,E0,EA)A(FF,DD,E0,EA)A(FF,81,90,D4)A(46,00,00,00)A(2F,00,00,00)A(1C,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DC,DF,E9)A(FF,AB,B5,DC)A(FF,CF,D9,FC)A(FF,CF,DA,FC)A(FF,D0,D9,FC)A(FF,CF,D9,FC)A(FF,D0,D9,FC)A(FF,D0,D9,FC)A(FF,D0,D9,FC)A(FF,CF,D9,FC)A(FF,CF,D9,FC)A(FF,CF,D9,FC)A(FF,D0,D9,FC)A(FF,CF,D9,FC)A(FF,D0,D9,FC)A(FF,D0,D9,FC)A(FF,D0,D9,FC)A(FF,D0,D9,FC)A(FF,D0,D9,FC)A(FF,D0,D9,FC)A(FF,D0,D9,FC)A(FF,D0,D9,FC)A(FF,D0,D9,FC)A(FF,D0,D9,FC)A(FF,D0,D9,FC)A(FF,D0,D9,FC)A(FF,D0,D9,FC)A(FF,D0,D9,FC)A(FF,AB,B5,DC)A(FF,D9,DC,E5)A(FF,DB,DE,E8)A(FF,DC,DF,E9)A(FF,DD,E0,EA)A(FF,81,90,D4)A(51,00,00,00)A(36,00,00,00)A(20,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DB,DE,E8)A(FF,AB,B5,DC)A(FF,A0,B0,ED)A(FF,A0,B0,ED)A(FF,A0,AF,ED)A(FF,A0,B1,ED)A(FF,A0,B0,ED)A(FF,9F,AF,EC)A(FF,9F,B0,ED)A(FF,A0,AF,ED)A(FF,A0,B0,ED)A(FF,A0,B1,ED)A(FF,9F,B0,ED)A(FF,A0,B0,ED)A(FF,9F,B1,ED)A(FF,A0,AF,ED)A(FF,9F,B0,ED)A(FF,A0,AF,ED)A(FF,9F,AF,ED)A(FF,A0,B0,EC)A(FF,9F,AF,ED)A(FF,9F,B0,ED)A(FF,A0,B0,ED)A(FF,9F,B0,ED)A(FF,A0,B0,ED)A(FF,9F,B1,EC)A(FF,A0,AF,ED)A(FF,A1,B1,EE)A(FF,AB,B5,DC)
				A(FF,D4,D7,E1)A(FF,D9,DC,E5)A(FF,DB,DE,E8)A(FF,DD,E0,EA)A(FF,81,90,D4)A(58,00,00,00)A(3B,00,00,00)A(23,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DB,DE,E8)A(FF,AB,B5,DC)A(FF,72,86,D2)A(FF,72,86,D2)A(FF,71,86,D2)A(FF,72,86,D2)A(FF,71,85,D2)A(FF,71,86,D2)A(FF,71,85,D2)A(FF,72,86,D2)A(FF,72,86,D2)A(FF,72,86,D2)A(FF,71,86,D2)A(FF,72,86,D2)A(FF,71,86,D2)A(FF,71,86,D2)A(FF,71,85,D2)A(FF,72,85,D2)A(FF,72,86,D2)A(FF,71,86,D2)A(FF,71,86,D2)A(FF,71,86,D2)A(FF,71,86,D2)A(FF,71,85,D2)A(FF,71,86,D2)A(FF,71,86,D2)A(FF,72,86,D2)A(FF,72,87,D2)A(FF,AB,B5,DC)A(FF,D0,D3,DC)A(FF,D7,DA,E4)A(FF,DB,DE,E8)A(FF,DD,E0,EA)A(FF,81,90,D4)A(5C,00,00,00)A(3D,00,00,00)A(25,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DA,DD,E7)A(FF,AB,B5,DC)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FE,FF)A(FF,FE,FE,FF)A(FF,FD,FE,FF)A(FF,FC,FD,FF)A(FF,FC,FC,FF)A(FF,FB,FB,FF)A(FF,F9,FB,FF)A(FF,F9,FA,FF)A(FF,F7,F9,FF)A(FF,F6,F8,FF)A(FF,F5,F7,FF)A(FF,F4,F6,FF)A(FF,F3,F5,FF)A(FF,F2,F5,FF)A(FF,F1,F4,FF);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	c_colors_1 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(FF,EF,F3,FF)A(FF,AB,B5,DC)A(FF,CE,D1,DA)A(FF,D6,D9,E3)A(FF,DA,DD,E7)A(FF,DD,E0,EA)A(FF,81,90,D4)A(5C,00,00,00)A(3D,00,00,00)A(25,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DA,DD,E7)A(FF,AB,B5,DC)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FE,FF)A(FF,FE,FE,FF)A(FF,FE,FE,FF)A(FF,FD,FD,FF)A(FF,FC,FD,FF)A(FF,FB,FC,FF)A(FF,FA,FB,FF)A(FF,F9,FA,FF)A(FF,F8,FA,FF)A(FF,F7,F9,FF)A(FF,F6,F8,FF)A(FF,F5,F7,FF)A(FF,F4,F6,FF)A(FF,F3,F5,FF)A(FF,F1,F4,FF)A(FF,F0,F4,FF)A(FF,EF,F2,FF)A(FF,AB,B5,DC)A(FF,CE,D1,DA)A(FF,D5,D8,E2)A(FF,DA,DD,E7)A(FF,DD,E0,EA)A(FF,81,90,D4)A(5C,00,00,00)A(3D,00,00,00)A(25,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DA,DD,E7)A(FF,AB,B5,DC)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,F5,F5,F5)A(FF,93,93,93)A(FF,93,93,93)A(FF,93,93,93)A(FF,93,93,93)A(FF,93,93,93)A(FF,93,93,93)A(FF,93,93,93)A(FF,93,93,93)A(FF,93,93,93)A(FF,ED,EE,F5)A(FF,F3,F4,FC)A(FF,F4,F6,FF)A(FF,F3,F6,FF)A(FF,F2,F5,FF)
				A(FF,F0,F4,FF)A(FF,EF,F3,FF)A(FF,EE,F2,FF)A(FF,AB,B5,DC)A(FF,CE,D1,DA)A(FF,D5,D8,E2)A(FF,DA,DD,E7)A(FF,DD,E0,EA)A(FF,81,90,D4)A(5C,00,00,00)A(3D,00,00,00)A(25,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DA,DD,E7)A(FF,AB,B5,DC)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FE,FE,FE)A(FF,CB,CB,CB)A(FF,86,85,85)A(FF,85,85,85)A(FF,85,85,85)A(FF,85,85,86)A(FF,85,85,85)A(FF,85,85,85)A(FF,86,85,85)A(FF,D5,D6,DC)A(FF,E1,E3,E9)A(FF,EF,F1,F9)A(FF,F3,F6,FF)A(FF,F3,F5,FF)A(FF,F1,F4,FF)A(FF,F0,F4,FF)A(FF,EF,F3,FF)A(FF,EE,F2,FF)A(FF,AB,B5,DC)A(FF,CE,D1,DA)A(FF,D5,D8,E2)A(FF,DA,DD,E7)A(FF,DD,E0,EA)A(FF,81,90,D4)A(5C,00,00,00)A(3D,00,00,00)A(25,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DA,DD,E7)A(FF,AB,B5,DC)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FE,FE,FF)A(FF,F8,F8,F9)A(FF,BB,BC,BC)A(FF,71,71,71)A(FF,71,72,71)A(FF,72,72,71)A(FF,72,72,72)A(FF,71,71,72)A(FF,C9,CA,CF)A(FF,D5,D6,DC)A(FF,E6,E8,EF)A(FF,F1,F4,FC)A(FF,F3,F6,FF)
				A(FF,F2,F5,FF)A(FF,F1,F4,FF)A(FF,F0,F3,FF)A(FF,EF,F2,FF)A(FF,ED,F1,FF)A(FF,AB,B5,DC)A(FF,CE,D1,DA)A(FF,D5,D8,E2)A(FF,DA,DD,E7)A(FF,DD,E0,EA)A(FF,81,90,D4)A(5C,00,00,00)A(3D,00,00,00)A(25,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DA,DD,E7)A(FF,AB,B5,DC)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FD,FD,FE)A(FF,F5,F5,F7)A(FF,B2,B2,B4)A(FF,5D,5D,5D)A(FF,5D,5C,5C)A(FF,5C,5D,5D)A(FF,C9,CA,CF)A(FF,D5,D7,DC)A(FF,E7,E8,EF)A(FF,F2,F4,FC)A(FF,F4,F5,FF)A(FF,F2,F5,FF)A(FF,F2,F4,FF)A(FF,F1,F3,FF)A(FF,EF,F3,FF)A(FF,EE,F2,FF)A(FF,ED,F1,FF)A(FF,AB,B5,DC)A(FF,CE,D1,DA)A(FF,D5,D8,E2)A(FF,DA,DD,E7)A(FF,DD,E0,EA)A(FF,81,90,D4)A(5C,00,00,00)A(3D,00,00,00)A(25,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DA,DD,E7)A(FF,AB,B5,DC)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FE,FE,FF)A(FF,FD,FD,FF)A(FF,FB,FC,FE)A(FF,F4,F4,F7)A(FF,C0,C1,C4)A(FF,50,50,50)A(FF,CC,CE,D2)A(FF,D5,D7,DC)A(FF,E8,E8,EF)A(FF,F2,F5,FC)A(FF,F5,F7,FF)
				A(FF,F3,F6,FF)A(FF,F2,F5,FF)A(FF,F1,F4,FF)A(FF,EF,F3,FF)A(FF,EF,F2,FF)A(FF,EE,F2,FF)A(FF,ED,F0,FF)A(FF,AB,B5,DC)A(FF,CE,D1,DA)A(FF,D5,D8,E2)A(FF,DA,DD,E7)A(FF,DD,E0,EA)A(FF,81,90,D4)A(5C,00,00,00)A(3D,00,00,00)A(25,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DA,DD,E7)A(FF,AB,B5,DC)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FE,FE,FF)A(FF,FE,FE,FF)A(FF,FD,FD,FF)A(FF,FC,FD,FF)A(FF,FA,FB,FE)A(FF,F4,F4,F8)A(FF,E5,E6,EB)A(FF,DE,E0,E4)A(FF,E8,E9,EF)A(FF,F3,F4,FC)A(FF,F5,F7,FF)A(FF,F4,F6,FF)A(FF,F2,F5,FF)A(FF,F2,F4,FF)A(FF,F1,F4,FF)A(FF,EF,F3,FF)A(FF,EE,F2,FF)A(FF,ED,F1,FF)A(FF,EC,F0,FF)A(FF,AB,B5,DC)A(FF,CE,D1,DA)A(FF,D5,D8,E2)A(FF,DA,DD,E7)A(FF,DD,E0,EA)A(FF,81,90,D4)A(5C,00,00,00)A(3D,00,00,00)A(25,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DA,DD,E7)A(FF,AB,B5,DC)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,FE,FF,FF)A(FF,FE,FE,FF)A(FF,FE,FE,FF)A(FF,FD,FD,FF)A(FF,FC,FC,FF)A(FF,FB,FB,FF)A(FF,F9,FA,FE)A(FF,F3,F5,FA)A(FF,F1,F2,F8)A(FF,F3,F5,FC)A(FF,F5,F7,FF)
				A(FF,F4,F6,FF)A(FF,F3,F6,FF)A(FF,F2,F5,FF)A(FF,F1,F3,FF)A(FF,EF,F3,FF)A(FF,EF,F2,FF)A(FF,EE,F2,FF)A(FF,ED,F1,FF)A(FF,EC,F0,FF)A(FF,AB,B5,DC)A(FF,CE,D1,DA)A(FF,D5,D8,E2)A(FF,DA,DD,E7)A(FF,DD,E0,EA)A(FF,81,90,D4)A(5C,00,00,00)A(3D,00,00,00)A(25,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DA,DD,E7)A(FF,AB,B5,DC)A(FF,EB,EF,FC)A(FF,FF,FF,FF)A(FF,FF,FF,FF)A(FF,F8,F9,FE)A(FF,EB,EF,FC)A(FF,EB,EF,FC)A(FF,FE,FE,FF)A(FF,FE,FE,FF)A(FF,F8,F9,FE)A(FF,EB,EF,FC)A(FF,EB,EF,FC)A(FF,FA,FB,FF)A(FF,F9,FA,FF)A(FF,F8,F9,FE)A(FF,EB,EF,FC)A(FF,EB,EF,FC)A(FF,F5,F7,FF)A(FF,F4,F6,FF)A(FF,F8,F9,FE)A(FF,EB,EF,FC)A(FF,EB,EF,FC)A(FF,F0,F3,FF)A(FF,EE,F2,FF)A(FF,F8,F9,FE)A(FF,EB,EF,FC)A(FF,EB,EF,FC)A(FF,AB,B5,DC)A(FF,CE,D1,DA)A(FF,D5,D8,E2)A(FF,DA,DD,E7)A(FF,DD,E0,EA)A(FF,81,90,D4)A(5C,00,00,00)A(3D,00,00,00)A(25,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DA,DD,E7)A(FF,AB,B5,DC)A(FF,A0,AF,EC)A(FF,E5,EA,FB)A(FF,E5,EA,FB)A(FF,D0,D8,F8)A(FF,96,A6,E5)A(FF,A0,AF,EC)A(FF,E5,EA,FB)A(FF,E5,EA,FB)A(FF,D0,D8,F8)A(FF,96,A6,E5)A(FF,A0,AF,EC)A(FF,E5,EA,FB)A(FF,E5,EA,FB)A(FF,D0,D8,F8)A(FF,96,A6,E5);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	c_colors_2 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(FF,A0,AF,EC)A(FF,E5,EA,FB)A(FF,E5,EA,FB)A(FF,D0,D8,F8)A(FF,96,A6,E5)A(FF,A0,AF,EC)A(FF,E5,EA,FB)A(FF,E5,EA,FB)A(FF,D0,D8,F8)A(FF,96,A6,E5)A(FF,A0,AF,EC)A(FF,AB,B5,DC)A(FF,CE,D1,DA)A(FF,D5,D8,E2)A(FF,DA,DD,E7)A(FF,DD,E0,EA)A(FF,81,90,D4)A(5C,00,00,00)A(3D,00,00,00)A(25,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DA,DD,E7)A(FF,AB,B5,DC)A(FF,DD,E2,F9)A(FF,DD,E3,F8)A(FF,DD,E3,F9)A(FF,DD,E2,F8)A(FF,DD,E3,F8)A(FF,DD,E3,F9)A(FF,DD,E2,F9)A(FF,DD,E3,F8)A(FF,DD,E2,F8)A(FF,DD,E3,F9)A(FF,DD,E3,F9)A(FF,DD,E2,F9)A(FF,DD,E3,F8)A(FF,DC,E3,F8)A(FF,DD,E2,F8)A(FF,DD,E3,F8)A(FF,DD,E3,F8)A(FF,DD,E3,F8)A(FF,DD,E3,F9)A(FF,DD,E2,F9)A(FF,DD,E2,F8)A(FF,DD,E2,F9)A(FF,DD,E3,F8)A(FF,DD,E2,F8)A(FF,DD,E3,F9)A(FF,DD,E3,F8)A(FF,AB,B5,DC)A(FF,CE,D1,DA)A(FF,D5,D8,E2)A(FF,DA,DD,E7)A(FF,DD,E0,EA)A(FF,81,90,D4)A(5C,00,00,00)A(3D,00,00,00)A(25,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DA,DD,E7)A(FF,AB,B5,DC)A(FF,D0,D8,F5)A(FF,D1,D8,F5)A(FF,D1,D8,F4)A(FF,D1,D7,F5)A(FF,D1,D7,F5)A(FF,D1,D8,F4)A(FF,D0,D8,F4)A(FF,D0,D7,F4)A(FF,D1,D7,F4)A(FF,D0,D7,F5)A(FF,D1,D8,F5)A(FF,D1,D8,F5)A(FF,D0,D8,F5)
				A(FF,D1,D8,F4)A(FF,D0,D8,F5)A(FF,D0,D8,F4)A(FF,D1,D8,F5)A(FF,D0,D8,F4)A(FF,D0,D8,F5)A(FF,D0,D8,F5)A(FF,D0,D8,F5)A(FF,D0,D8,F5)A(FF,D1,D8,F5)A(FF,D1,D8,F5)A(FF,D1,D8,F5)A(FF,D0,D8,F4)A(FF,AB,B5,DC)A(FF,CE,D1,DA)A(FF,D5,D8,E2)A(FF,DA,DD,E7)A(FF,DD,E0,EA)A(FF,81,90,D4)A(5C,00,00,00)A(3D,00,00,00)A(25,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DA,DD,E7)A(FF,AB,B5,DC)A(FF,C3,CB,F0)A(FF,C3,CC,F1)A(FF,C3,CB,F0)A(FF,C3,CC,F1)A(FF,C3,CC,F0)A(FF,C3,CC,F0)A(FF,C3,CC,F0)A(FF,C3,CB,F0)A(FF,C3,CC,F1)A(FF,C3,CC,F0)A(FF,C3,CB,F1)A(FF,C3,CC,F1)A(FF,C2,CC,F0)A(FF,C3,CC,F0)A(FF,C3,CB,F1)A(FF,C3,CB,F0)A(FF,C3,CB,F1)A(FF,C3,CB,F1)A(FF,C3,CC,F0)A(FF,C3,CC,F0)A(FF,C3,CC,F0)A(FF,C3,CC,F1)A(FF,C3,CC,F0)A(FF,C3,CC,F0)A(FF,C3,CC,F0)A(FF,C2,CB,F0)A(FF,AB,B5,DC)A(FF,CE,D1,DA)A(FF,D5,D8,E2)A(FF,DA,DD,E7)A(FF,DD,E0,EA)A(FF,81,90,D4)A(5C,00,00,00)A(3D,00,00,00)A(25,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DA,DD,E7)A(FF,AB,B5,DC)A(FF,B7,C1,ED)A(FF,B7,C1,EC)A(FF,B7,C1,ED)A(FF,B7,C0,EC)A(FF,B7,C1,EC)A(FF,B7,C1,ED)A(FF,B7,C0,ED)A(FF,B6,C1,ED)A(FF,B7,C0,ED)A(FF,B7,C0,ED)A(FF,B7,C0,ED)
				A(FF,B7,C1,EC)A(FF,B6,C1,ED)A(FF,B7,C1,EC)A(FF,B6,C1,ED)A(FF,B6,C1,ED)A(FF,B6,C1,ED)A(FF,B6,C1,ED)A(FF,B6,C1,ED)A(FF,B7,C1,ED)A(FF,B7,C0,ED)A(FF,B7,C1,EC)A(FF,B7,C1,EC)A(FF,B7,C1,EC)A(FF,B7,C0,ED)A(FF,B7,C0,EC)A(FF,AB,B5,DC)A(FF,CE,D1,DA)A(FF,D5,D8,E2)A(FF,DA,DD,E7)A(FF,DD,E0,EA)A(FF,81,90,D4)A(5C,00,00,00)A(3D,00,00,00)A(25,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DA,DD,E7)A(FF,AB,B5,DC)A(FF,AE,BA,EA)A(FF,AE,B9,EA)A(FF,AF,B9,EA)A(FF,AE,B9,EA)A(FF,AE,B9,EA)A(FF,AE,B9,EA)A(FF,AE,B9,EA)A(FF,AF,B9,EA)A(FF,AF,B9,EA)A(FF,AF,B9,EA)A(FF,AF,B9,EA)A(FF,AE,B9,EA)A(FF,AE,B9,EA)A(FF,AE,B9,EA)A(FF,AE,B9,EA)A(FF,AE,B9,EA)A(FF,AF,B9,EA)A(FF,AE,B9,EA)A(FF,AF,B9,EA)A(FF,AE,B9,EA)A(FF,AE,BA,EA)A(FF,AE,BA,EA)A(FF,AE,B9,EA)A(FF,AE,B9,EA)A(FF,AF,BA,EA)A(FF,AE,BA,EA)A(FF,AB,B5,DC)A(FF,CE,D1,DA)A(FF,D5,D8,E2)A(FF,DA,DD,E7)A(FF,DD,E0,EA)A(FF,81,90,D4)A(5C,00,00,00)A(3D,00,00,00)A(25,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DA,DD,E7)A(FF,BD,C4,DF)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)
				A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,AB,B5,DC)A(FF,B7,BE,D9)A(FF,CE,D1,DA)A(FF,D6,D9,E3)A(FF,DA,DD,E7)A(FF,DD,E0,EA)A(FF,81,90,D4)A(5C,00,00,00)A(3D,00,00,00)A(25,00,00,00)A(FF,81,90,D4)A(FF,AB,AD,B5)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DB,DE,E8)A(FF,D7,DA,E4)A(FF,D0,D3,DC)A(FF,CC,CE,D8)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,C9,CC,D5)A(FF,CC,CE,D8)A(FF,D0,D3,DC)A(FF,D7,DA,E4)A(FF,DB,DE,E8)A(FF,DD,E0,EA)A(FF,81,90,D4)A(5C,00,00,00)A(3D,00,00,00)A(25,00,00,00)A(DC,7F,8E,D2)A(FF,A5,A9,BA)A(FF,CD,CF,D9)A(FF,DD,E0,EA)A(FF,DB,DE,E8)A(FF,D9,DC,E5)A(FF,D4,D7,E1)A(FF,D0,D3,DC)A(FF,CE,D1,DA)A(FF,CE,D1,DA)A(FF,CE,D1,DA)A(FF,CE,D1,DA)A(FF,CE,D1,DA)
				A(FF,CE,D1,DA)A(FF,CE,D1,DA)A(FF,CE,D1,DA)A(FF,CD,D0,DA)A(FF,CE,D1,DA)A(FF,CE,D1,DA)A(FF,CE,D1,DA)A(FF,CE,D1,DA)A(FF,CE,D1,DA)A(FF,CE,D1,DA)A(FF,CE,D1,DA)A(FF,CE,D1,DA)A(FF,CE,D1,DA)A(FF,CE,D1,DA)A(FF,CE,D1,DA)A(FF,CE,D1,DA)A(FF,CE,D1,DA)A(FF,CE,D1,DA)A(FF,CE,D1,DA)A(FF,D0,D3,DC)A(FF,D4,D7,E1)A(FF,D9,DC,E5)A(FF,DB,DE,E8)A(FF,CF,D4,E7)A(EA,77,85,C4)A(5B,00,00,00)A(3D,00,00,00)A(24,00,00,00)A(7C,77,85,C4)A(FF,93,9D,C6)A(FF,CB,CE,D7)A(FF,DC,DF,E9)A(FF,DC,DF,E9)A(FF,DB,DE,E8)A(FF,D9,DC,E5)A(FF,D7,DA,E4)A(FF,D6,D9,E3)A(FF,D5,D8,E2)A(FF,D5,D8,E2)A(FF,D5,D8,E2)A(FF,D5,D8,E2)A(FF,D5,D8,E2)A(FF,D5,D8,E2)A(FF,D5,D8,E2)A(FF,D3,D6,E1)A(FF,D4,D7,E2)A(FF,D5,D8,E2)A(FF,D5,D8,E2)A(FF,D5,D8,E2)A(FF,D5,D8,E2)A(FF,D5,D8,E2)A(FF,D5,D8,E2)A(FF,D5,D8,E2)A(FF,D5,D8,E2)A(FF,D5,D8,E2)A(FF,D5,D8,E2)A(FF,D5,D8,E2)A(FF,D5,D8,E2)A(FF,D5,D8,E2)A(FF,D6,D9,E3)A(FF,D7,DA,E4)A(FF,D9,DC,E5)A(FF,DB,DE,E8)A(FF,DC,DF,E9)A(FF,AA,B4,DD)A(B1,54,5E,8A)A(58,00,00,00)A(3A,00,00,00)A(23,00,00,00)A(18,36,3C,58)A(A3,77,85,C3)A(FF,A0,A9,D3)A(FF,CD,D1,E3)A(FF,DD,E0,EA)A(FF,DC,DF,E9)A(FF,DB,DE,E8)A(FF,DB,DE,E8)A(FF,DA,DD,E7)A(FF,DA,DD,E7)A(FF,DA,DD,E7);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	c_colors_3 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(FF,DA,DD,E7)A(FF,DA,DD,E7)A(FF,DA,DD,E7)A(FF,DA,DD,E7)A(FF,DA,DD,E7)A(FF,D2,D5,E5)A(FF,D6,D9,E6)A(FF,D7,DA,E6)A(FF,D8,DB,E7)A(FF,D9,DC,E7)A(FF,D9,DC,E7)A(FF,D9,DC,E7)A(FF,DA,DD,E7)A(FF,DA,DD,E7)A(FF,DA,DD,E7)A(FF,DA,DD,E7)A(FF,DA,DD,E7)A(FF,DA,DD,E7)A(FF,DA,DD,E7)A(FF,DA,DD,E7)A(FF,DA,DD,E7)A(FF,DB,DE,E8)A(FF,DB,DE,E8)A(FF,CE,D3,E6)A(FF,AA,B4,DE)A(C9,60,6B,9E)A(70,0C,0D,13)A(52,00,00,00)A(35,00,00,00)A(20,00,00,00)A(0D,00,00,00)A(24,24,28,3B)A(8D,69,75,AD)A(E4,7B,89,CA)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(F4,7A,88,C8)A(F9,7E,8D,CF)A(FB,7F,8E,D1)A(FD,7F,8E,D2)A(FE,80,8F,D2)A(FE,80,8F,D3)A(FE,80,8F,D3)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(FF,81,90,D4)A(ED,76,84,C2)A(B8,50,5A,84)A(76,0B,0C,12)A(5E,00,00,00)A(47,00,00,00)A(2F,00,00,00)A(1B,00,00,00)A(0A,00,00,00)A(15,00,00,00)A(25,00,00,00)A(3A,00,00,00)A(4E,00,00,00)A(5E,00,00,00)A(6A,00,00,00)A(71,00,00,00)A(73,00,00,00)
				A(74,00,00,00)A(74,00,00,00)A(74,00,00,00)A(74,00,00,00)A(74,00,00,00)A(74,00,00,00)A(74,00,00,00)A(74,00,00,00)A(74,00,00,00)A(73,00,00,00)A(73,00,00,00)A(73,00,00,00)A(73,00,00,00)A(74,00,00,00)A(74,00,00,00)A(74,00,00,00)A(74,00,00,00)A(74,00,00,00)A(74,00,00,00)A(74,00,00,00)A(74,00,00,00)A(74,00,00,00)A(74,00,00,00)A(74,00,00,00)A(73,00,00,00)A(71,00,00,00)A(6A,00,00,00)A(5E,00,00,00)A(4E,00,00,00)A(3A,00,00,00)A(25,00,00,00)A(15,00,00,00)A(07,00,00,00)A(0F,00,00,00)A(1B,00,00,00)A(2B,00,00,00)A(3A,00,00,00)A(47,00,00,00)A(52,00,00,00)A(58,00,00,00)A(5B,00,00,00)A(5C,00,00,00)A(5C,00,00,00)A(5C,00,00,00)A(5C,00,00,00)A(5C,00,00,00)A(5C,00,00,00)A(5B,00,00,00)A(5B,00,00,00)A(5B,00,00,00)A(5B,00,00,00)A(5B,00,00,00)A(5B,00,00,00)A(5B,00,00,00)A(5B,00,00,00)A(5B,00,00,00)A(5C,00,00,00)A(5C,00,00,00)A(5C,00,00,00)A(5C,00,00,00)A(5C,00,00,00)A(5C,00,00,00)A(5C,00,00,00)A(5C,00,00,00)A(5C,00,00,00)A(5B,00,00,00)A(58,00,00,00)A(52,00,00,00)A(47,00,00,00)A(3A,00,00,00)A(2B,00,00,00)A(1B,00,00,00)A(0F,00,00,00)A(04,00,00,00)A(09,00,00,00)A(11,00,00,00)A(1B,00,00,00)A(25,00,00,00)A(2F,00,00,00)A(35,00,00,00)
				A(3A,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3C,00,00,00)A(3C,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3D,00,00,00)A(3A,00,00,00)A(35,00,00,00)A(2F,00,00,00)A(25,00,00,00)A(1B,00,00,00)A(11,00,00,00)A(09,00,00,00)A(02,00,00,00)A(05,00,00,00)A(09,00,00,00)A(0F,00,00,00)A(15,00,00,00)A(1B,00,00,00)A(20,00,00,00)A(23,00,00,00)A(24,00,00,00)A(25,00,00,00)A(25,00,00,00)A(25,00,00,00)A(25,00,00,00)A(25,00,00,00)A(25,00,00,00)A(25,00,00,00)A(25,00,00,00)A(24,00,00,00)A(24,00,00,00)A(24,00,00,00)A(24,00,00,00)A(24,00,00,00)A(25,00,00,00)A(25,00,00,00)A(25,00,00,00)A(25,00,00,00)A(25,00,00,00)A(25,00,00,00)A(25,00,00,00)A(25,00,00,00)A(25,00,00,00)A(25,00,00,00)A(25,00,00,00)A(24,00,00,00)A(23,00,00,00)A(20,00,00,00)A(1B,00,00,00)A(15,00,00,00)A(0F,00,00,00)A(09,00,00,00)A(05,00,00,00);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	build_colors (a_ptr: POINTER)
			-- Build `colors'
		do
			c_colors_0 (a_ptr, 0)
			c_colors_1 (a_ptr, 400)
			c_colors_2 (a_ptr, 800)
			c_colors_3 (a_ptr, 1200)
		end

feature {NONE} -- Image data filling

	fill_memory
			-- Fill image data into memory
		local
			l_pointer: POINTER
		do
			if attached {EV_PIXEL_BUFFER_IMP} implementation as l_imp then
				l_pointer := l_imp.data_ptr
				if not l_pointer.is_default_pointer then
					build_colors (l_pointer)
					l_imp.unlock
				end
			end
		end

note
	library:	"SmartDocking: Library of reusable components for Eiffel."
	copyright:	"Copyright (c) 1984-2012, Eiffel Software and others"
	license:	"Eiffel Forum License v2 (see http://www.eiffel.com/licensing/forum.txt)"
	source: "[
			Eiffel Software
			5949 Hollister Ave., Goleta, CA 93117 USA
			Telephone 805-685-1006, Fax 805-685-6869
			Website http://www.eiffel.com
			Customer support http://support.eiffel.com
		]"


end -- SD_DOWN_LIGHT_ICON
