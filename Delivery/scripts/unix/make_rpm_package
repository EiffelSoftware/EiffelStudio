#!/bin/sh
set -e

. ./packaging/config.sh


# Set up rpmbuild cmd
RPM_CMD="rpmbuild -bb"
if which gpg > /dev/null; then
	if gpg --list-secret-keys | grep $KEY > /dev/null; then
		RPM_CMD="echo \"\" | setsid $RPM_CMD --sign --define '_gpg_name $KEY'"
	fi
fi


# Create unix layout in RPM BUILD directory
./make_unix_layout $RPM_DIR/eiffelstudio


# Prepare spec files
. $RPM_DIR/eiffelstudio.spec.sh
mkdir -p $RPM_DIR/eiffelstudio/usr/share/doc/$PRODUCT
cp $PACKAGING_DIR/license $RPM_DIR/eiffelstudio/usr/share/doc/$PRODUCT/LICENSE


# If we have a $DOCS_DIR move it to a seperate
# directory and build noarch doc package
if test -d $RPM_DIR/eiffelstudio$DOCS_DIR; then
	. $RPM_DIR/eiffelstudio-doc.spec.sh
	mkdir -p $RPM_DIR/eiffelstudio-doc$DOCS_DIR
	mv $RPM_DIR/eiffelstudio$DOCS_DIR/* $RPM_DIR/eiffelstudio-doc$DOCS_DIR
	rm -r $RPM_DIR/eiffelstudio$DOCS_DIR
	$RPM_CMD $RPM_DIR/eiffelstudio-doc.spec >>$LOG 2>>$LOG

	# Clean up documentation specific build files
	rm $RPM_DIR/eiffelstudio-doc.spec
	rm -r $RPM_DIR/eiffelstudio-doc
else
    echo "No $RPM_DIR/eiffelstudio$DOCS_DIR, $PRODUCT-doc package will not be created"
fi


# Build main package
$RPM_CMD $RPM_DIR/eiffelstudio.spec >>$LOG 2>>$LOG


# Move all generated .rpm files to current directory
find $RPM_DIR/RPMS -type f | xargs mv -t ./


# Clean up RPM directory
rm $RPM_DIR/eiffelstudio.spec
rm -r $RPM_DIR/eiffelstudio
rm -r $RPM_DIR/tmp
rm -r $RPM_DIR/RPMS/*

