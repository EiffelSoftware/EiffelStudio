note
	description: "EiffelVision Widget ER_TOGGLE_BUTTON_NODE_WIDGET.%
		%The original version of this class was generated by EiffelBuild."
	generator: "EiffelBuild"
	date: "$Date$"
	revision: "$Revision$"

class
	ER_TOGGLE_BUTTON_NODE_WIDGET

inherit
	ER_TOGGLE_BUTTON_NODE_WIDGET_IMP


feature {NONE} -- Initialization

	user_create_interface_objects
			-- Create any auxilliary objects needed for ER_TOGGLE_BUTTON_NODE_WIDGET.
			-- Initialization for these objects must be performed in `user_initialization'.
		do
				-- Create attached types defined in class here, initialize them in `user_initialization'.
			create small_image.make
			create large_image.make
		end

	user_initialization
			-- Perform any initialization on objects created by `user_create_interface_objects'
			-- and from within current class itself.
		do
				-- Initialize types defined in current class
		end

feature -- Command

	set_tree_node_data (a_data: detachable ER_TREE_NODE_BUTTON_DATA)
			--
		do
			tree_node_data := a_data
			if attached a_data as l_data then
				if attached a_data.command_name as l_command_name then
					command_name.set_text (l_command_name)
				else
					command_name.remove_text
				end

				if attached a_data.label_title as l_label_title then
					label.set_text (l_label_title)
				else
					label.remove_text
				end

				if attached a_data.small_image as l_small_image then
					small_image.set_text (l_small_image)
				else
					small_image.remove_text
				end

				if attached a_data.large_image as l_large_image then
					large_image.set_text (l_large_image)
				else
					large_image.remove_text
				end
			end
		end

feature {NONE} -- Implementation

	small_image, large_image: EV_PATH_FIELD
			--

	tree_node_data: detachable ER_TREE_NODE_BUTTON_DATA
			--

	on_command_name_text_change
			-- <Precursor>
		local
			l_checker: ER_IDENTIFIER_UNIQUENESS_CHECKER
		do
			create l_checker
			l_checker.on_identifier_name_change (command_name, tree_node_data)
		end

	on_label_text_change
			-- Called by `change_actions' of `label'.
		do
			if attached tree_node_data as l_data then
				l_data.set_label_title (label.text)
			end
		end

end
