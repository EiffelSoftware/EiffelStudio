indexing
	description: "Control interfaces. Help file: "
	legal: "See notice at end of class."
	status: "See notice at end of class."
	Note: "Automatically generated by the EiffelCOM Wizard."

deferred class
	IOLE_OBJECT_INTERFACE

inherit
	ECOM_INTERFACE

feature -- Status Report

	set_client_site_user_precondition (p_client_site: IOLE_CLIENT_SITE_INTERFACE): BOOLEAN is
			-- User-defined preconditions for `set_client_site'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	get_client_site_user_precondition (pp_client_site: CELL [IOLE_CLIENT_SITE_INTERFACE]): BOOLEAN is
			-- User-defined preconditions for `get_client_site'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_host_names_user_precondition (sz_container_app: STRING; sz_container_obj: STRING): BOOLEAN is
			-- User-defined preconditions for `set_host_names'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	close_user_precondition (dw_save_option: INTEGER): BOOLEAN is
			-- User-defined preconditions for `close'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_moniker_user_precondition (dw_which_moniker: INTEGER; pmk: IMONIKER_INTERFACE): BOOLEAN is
			-- User-defined preconditions for `set_moniker'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	get_moniker_user_precondition (dw_assign: INTEGER; dw_which_moniker: INTEGER; ppmk: CELL [IMONIKER_INTERFACE]): BOOLEAN is
			-- User-defined preconditions for `get_moniker'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	init_from_data_user_precondition (p_data_object: IDATA_OBJECT_INTERFACE; f_creation: INTEGER; dw_reserved: INTEGER): BOOLEAN is
			-- User-defined preconditions for `init_from_data'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	get_clipboard_data_user_precondition (dw_reserved: INTEGER; pp_data_object: CELL [IDATA_OBJECT_INTERFACE]): BOOLEAN is
			-- User-defined preconditions for `get_clipboard_data'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	do_verb_user_precondition (i_verb: INTEGER; lpmsg: TAG_MSG_RECORD; p_active_site: IOLE_CLIENT_SITE_INTERFACE; lindex: INTEGER; hwnd_parent: POINTER; lprc_pos_rect: TAG_RECT_RECORD): BOOLEAN is
			-- User-defined preconditions for `do_verb'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	enum_verbs_user_precondition (pp_enum_ole_verb: CELL [IENUM_OLEVERB_INTERFACE]): BOOLEAN is
			-- User-defined preconditions for `enum_verbs'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	update_user_precondition: BOOLEAN is
			-- User-defined preconditions for `update'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	is_up_to_date_user_precondition: BOOLEAN is
			-- User-defined preconditions for `is_up_to_date'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	get_user_class_id_user_precondition (p_clsid: ECOM_GUID): BOOLEAN is
			-- User-defined preconditions for `get_user_class_id'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	get_user_type_user_precondition (dw_form_of_type: INTEGER; psz_user_type: CELL [STRING]): BOOLEAN is
			-- User-defined preconditions for `get_user_type'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_extent_user_precondition (dw_draw_aspect: INTEGER; psizel: TAG_SIZEL_RECORD): BOOLEAN is
			-- User-defined preconditions for `set_extent'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	get_extent_user_precondition (dw_draw_aspect: INTEGER; psizel: TAG_SIZEL_RECORD): BOOLEAN is
			-- User-defined preconditions for `get_extent'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	advise_user_precondition (p_adv_sink: IADVISE_SINK_INTERFACE; pdw_connection: INTEGER_REF): BOOLEAN is
			-- User-defined preconditions for `advise'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	unadvise_user_precondition (dw_connection: INTEGER): BOOLEAN is
			-- User-defined preconditions for `unadvise'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	enum_advise_user_precondition (ppenum_advise: CELL [IENUM_STATDATA_INTERFACE]): BOOLEAN is
			-- User-defined preconditions for `enum_advise'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	get_misc_status_user_precondition (dw_aspect: INTEGER; pdw_status: INTEGER_REF): BOOLEAN is
			-- User-defined preconditions for `get_misc_status'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	set_color_scheme_user_precondition (p_logpal: TAG_LOGPALETTE_RECORD): BOOLEAN is
			-- User-defined preconditions for `set_color_scheme'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

feature -- Basic Operations

	set_client_site (p_client_site: IOLE_CLIENT_SITE_INTERFACE) is
			-- No description available.
			-- `p_client_site' [in].  
		require
			set_client_site_user_precondition: set_client_site_user_precondition (p_client_site)
		deferred

		end

	get_client_site (pp_client_site: CELL [IOLE_CLIENT_SITE_INTERFACE]) is
			-- No description available.
			-- `pp_client_site' [out].  
		require
			non_void_pp_client_site: pp_client_site /= Void
			get_client_site_user_precondition: get_client_site_user_precondition (pp_client_site)
		deferred

		ensure
			valid_pp_client_site: pp_client_site.item /= Void
		end

	set_host_names (sz_container_app: STRING; sz_container_obj: STRING) is
			-- No description available.
			-- `sz_container_app' [in].  
			-- `sz_container_obj' [in].  
		require
			set_host_names_user_precondition: set_host_names_user_precondition (sz_container_app, sz_container_obj)
		deferred

		end

	close (dw_save_option: INTEGER) is
			-- No description available.
			-- `dw_save_option' [in].  
		require
			close_user_precondition: close_user_precondition (dw_save_option)
		deferred

		end

	set_moniker (dw_which_moniker: INTEGER; pmk: IMONIKER_INTERFACE) is
			-- No description available.
			-- `dw_which_moniker' [in].  
			-- `pmk' [in].  
		require
			set_moniker_user_precondition: set_moniker_user_precondition (dw_which_moniker, pmk)
		deferred

		end

	get_moniker (dw_assign: INTEGER; dw_which_moniker: INTEGER; ppmk: CELL [IMONIKER_INTERFACE]) is
			-- No description available.
			-- `dw_assign' [in].  
			-- `dw_which_moniker' [in].  
			-- `ppmk' [out].  
		require
			non_void_ppmk: ppmk /= Void
			get_moniker_user_precondition: get_moniker_user_precondition (dw_assign, dw_which_moniker, ppmk)
		deferred

		ensure
			valid_ppmk: ppmk.item /= Void
		end

	init_from_data (p_data_object: IDATA_OBJECT_INTERFACE; f_creation: INTEGER; dw_reserved: INTEGER) is
			-- No description available.
			-- `p_data_object' [in].  
			-- `f_creation' [in].  
			-- `dw_reserved' [in].  
		require
			init_from_data_user_precondition: init_from_data_user_precondition (p_data_object, f_creation, dw_reserved)
		deferred

		end

	get_clipboard_data (dw_reserved: INTEGER; pp_data_object: CELL [IDATA_OBJECT_INTERFACE]) is
			-- No description available.
			-- `dw_reserved' [in].  
			-- `pp_data_object' [out].  
		require
			non_void_pp_data_object: pp_data_object /= Void
			get_clipboard_data_user_precondition: get_clipboard_data_user_precondition (dw_reserved, pp_data_object)
		deferred

		ensure
			valid_pp_data_object: pp_data_object.item /= Void
		end

	do_verb (i_verb: INTEGER; lpmsg: TAG_MSG_RECORD; p_active_site: IOLE_CLIENT_SITE_INTERFACE; lindex: INTEGER; hwnd_parent: POINTER; lprc_pos_rect: TAG_RECT_RECORD) is
			-- No description available.
			-- `i_verb' [in].  
			-- `lpmsg' [in].  
			-- `p_active_site' [in].  
			-- `lindex' [in].  
			-- `hwnd_parent' [in].  
			-- `lprc_pos_rect' [in].  
		require
			non_void_lprc_pos_rect: lprc_pos_rect /= Void
			valid_lprc_pos_rect: lprc_pos_rect.item /= default_pointer
			do_verb_user_precondition: do_verb_user_precondition (i_verb, lpmsg, p_active_site, lindex, hwnd_parent, lprc_pos_rect)
		deferred

		end

	enum_verbs (pp_enum_ole_verb: CELL [IENUM_OLEVERB_INTERFACE]) is
			-- No description available.
			-- `pp_enum_ole_verb' [out].  
		require
			non_void_pp_enum_ole_verb: pp_enum_ole_verb /= Void
			enum_verbs_user_precondition: enum_verbs_user_precondition (pp_enum_ole_verb)
		deferred

		ensure
			valid_pp_enum_ole_verb: pp_enum_ole_verb.item /= Void
		end

	update is
			-- No description available.
		require
			update_user_precondition: update_user_precondition
		deferred

		end

	is_up_to_date is
			-- No description available.
		require
			is_up_to_date_user_precondition: is_up_to_date_user_precondition
		deferred

		end

	get_user_class_id (p_clsid: ECOM_GUID) is
			-- No description available.
			-- `p_clsid' [out].  
		require
			non_void_p_clsid: p_clsid /= Void
			valid_p_clsid: p_clsid.item /= default_pointer
			get_user_class_id_user_precondition: get_user_class_id_user_precondition (p_clsid)
		deferred

		end

	get_user_type (dw_form_of_type: INTEGER; psz_user_type: CELL [STRING]) is
			-- No description available.
			-- `dw_form_of_type' [in].  
			-- `psz_user_type' [out].  
		require
			non_void_psz_user_type: psz_user_type /= Void
			get_user_type_user_precondition: get_user_type_user_precondition (dw_form_of_type, psz_user_type)
		deferred

		ensure
			valid_psz_user_type: psz_user_type.item /= Void
		end

	set_extent (dw_draw_aspect: INTEGER; psizel: TAG_SIZEL_RECORD) is
			-- No description available.
			-- `dw_draw_aspect' [in].  
			-- `psizel' [in].  
		require
			non_void_psizel: psizel /= Void
			valid_psizel: psizel.item /= default_pointer
			set_extent_user_precondition: set_extent_user_precondition (dw_draw_aspect, psizel)
		deferred

		end

	get_extent (dw_draw_aspect: INTEGER; psizel: TAG_SIZEL_RECORD) is
			-- No description available.
			-- `dw_draw_aspect' [in].  
			-- `psizel' [out].  
		require
			non_void_psizel: psizel /= Void
			valid_psizel: psizel.item /= default_pointer
			get_extent_user_precondition: get_extent_user_precondition (dw_draw_aspect, psizel)
		deferred

		end

	advise (p_adv_sink: IADVISE_SINK_INTERFACE; pdw_connection: INTEGER_REF) is
			-- No description available.
			-- `p_adv_sink' [in].  
			-- `pdw_connection' [out].  
		require
			non_void_pdw_connection: pdw_connection /= Void
			advise_user_precondition: advise_user_precondition (p_adv_sink, pdw_connection)
		deferred

		end

	unadvise (dw_connection: INTEGER) is
			-- No description available.
			-- `dw_connection' [in].  
		require
			unadvise_user_precondition: unadvise_user_precondition (dw_connection)
		deferred

		end

	enum_advise (ppenum_advise: CELL [IENUM_STATDATA_INTERFACE]) is
			-- No description available.
			-- `ppenum_advise' [out].  
		require
			non_void_ppenum_advise: ppenum_advise /= Void
			enum_advise_user_precondition: enum_advise_user_precondition (ppenum_advise)
		deferred

		ensure
			valid_ppenum_advise: ppenum_advise.item /= Void
		end

	get_misc_status (dw_aspect: INTEGER; pdw_status: INTEGER_REF) is
			-- No description available.
			-- `dw_aspect' [in].  
			-- `pdw_status' [out].  
		require
			non_void_pdw_status: pdw_status /= Void
			get_misc_status_user_precondition: get_misc_status_user_precondition (dw_aspect, pdw_status)
		deferred

		end

	set_color_scheme (p_logpal: TAG_LOGPALETTE_RECORD) is
			-- No description available.
			-- `p_logpal' [in].  
		require
			non_void_p_logpal: p_logpal /= Void
			valid_p_logpal: p_logpal.item /= default_pointer
			set_color_scheme_user_precondition: set_color_scheme_user_precondition (p_logpal)
		deferred

		end

indexing
	copyright:	"Copyright (c) 1984-2006, Eiffel Software and others"
	license:	"Eiffel Forum License v2 (see http://www.eiffel.com/licensing/forum.txt)"
	source: "[
			 Eiffel Software
			 356 Storke Road, Goleta, CA 93117 USA
			 Telephone 805-685-1006, Fax 805-685-6869
			 Website http://www.eiffel.com
			 Customer support http://support.eiffel.com
		]"




end -- IOLE_OBJECT_INTERFACE

