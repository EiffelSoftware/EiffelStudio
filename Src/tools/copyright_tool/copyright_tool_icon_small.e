note
	description: "Pixel buffer that replaces orignal image file.%
		%The orignal version of this class has been generated by Image Eiffel Code."

class
	COPYRIGHT_TOOL_ICON_SMALL

inherit
	EV_PIXEL_BUFFER

create
	make

feature {NONE} -- Initialization

	make
			-- Initialization
		do
			make_with_size (16, 16)
			fill_memory
		end

feature {NONE} -- Image data

	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"[
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,41,43,44)A(00,39,39,3A)A(00,6B,32,03)A(00,6B,2F,00)A(0D,72,36,05)A(5B,8A,5F,3D)A(95,C5,91,67)A(A3,EC,AE,7C)A(81,89,66,4A)A(37,42,28,16)A(00,21,0B,00)A(00,0B,01,00)A(00,23,22,22)A(00,45,45,45)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,41,43,44)A(00,39,39,3A)A(00,69,30,02)A(0D,6E,31,02)A(9C,B2,7C,51)A(EF,E8,AC,74)A(FF,EF,A4,58)A(FF,ED,9D,4D)A(FD,F0,AC,69)A(DA,C4,94,6B)A(4D,50,2F,17)A(00,01,00,00)A(00,23,22,23)A(00,45,45,45)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,42,43,44)A(00,37,38,3A)A(10,62,2B,00)A(C8,CE,80,3C)A(FF,EE,95,2F)A(D2,98,50,00)A(A2,5E,36,07)A(94,52,33,0E)A(B0,7B,43,01)A(E7,D3,7B,12)A(FF,F1,A0,4E)A(77,4C,27,0E)A(00,19,1C,21)A(00,45,45,45)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,3D,40,44)A(09,3E,39,36)A(C4,B9,68,1E)A(F1,DD,87,1E)A(7D,51,39,19)A(66,70,73,79)A(98,B4,AF,AD)A(98,C4,B8,AD)A(88,A5,AA,B2)A(58,48,45,40)A(B8,AA,69,13)A(FD,EF,91,28)A(6E,57,37,1D)A(00,3E,42,46)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,33,31,31)A(73,76,45,1A)A(F8,F8,91,15)A(95,60,45,1C)A(3C,57,3F,2D)A(F6,F7,B4,6F)A(F9,D7,87,2B)A(F3,BC,6F,19)A(FF,FB,AF,58)A(C1,AE,72,39)A(3D,32,31,30)A(CF,D2,83,16)A(EA,C7,71,15)A(18,22,21,22)A(00,FF,FF,FF)A(00,FF,FF,FF)A(2A,4C,3B,2E)A(BF,BA,6C,17)A(DD,C6,7D,18)A(31,2C,2F,35)A(BE,BA,6C,1B)A(E3,D8,85,18)A(7B,3E,34,26)A(3A,32,37,3D)A(A6,7C,52,18)A(F7,B5,62,04)A(3D,3A,32,30)A(79,74,55,2B)A(F0,F3,92,17)A(63,4A,32,1B)A(00,FF,FF,FF)A(00,FF,FF,FF)A(57,64,48,2A)A(D9,D9,87,1F)A(B3,8D,61,24)A(15,3C,39,3A)A(DC,E6,90,22)A(BC,9E,6C,24)A(05,34,3A,42)A(00,3E,3F,40)A(10,37,3D,43)A(2D,2F,36,3E)A(07,3B,3E,42)A(36,55,47,38)A(E8,F3,9C,26)A(82,69,46,1D)A(00,FF,FF,FF)A(00,FF,FF,FF)A(5A,64,4B,2E)A(DA,D8,8E,29)A(B0,8F,62,26)A(11,3B,39,3B)A(D7,E4,9A,30)A(BF,A4,6F,26)A(00,26,2B,32)A(00,69,61,58)A(01,5D,3C,1A)A(04,B1,6D,24)A(00,50,42,34)A(2F,50,44,38)A(EA,F1,9F,2D)A(81,69,4A,22)A(00,FF,FF,FF)A(00,FF,FF,FF)A(3C,4C,40,34)A(C1,BA,82,33)A(D8,C5,85,2E)A(1B,23,24,29)A(B5,AD,7E,36)A(E5,E2,A2,43)A(62,6B,5D,4F)A(1D,9C,90,82)A(99,AC,80,4D)A(FE,E8,97,38)A(38,3F,34,2A)A(61,72,4F,28)A(F1,EF,A5,38)A(6C,53,42,2B)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(08,37,39,3E)A(7E,6E,58,35)A(F2,FB,B9,52)A(89,67,46,20)A(3E,36,34,2F)A(DB,C3,91,3F)A(FC,F2,B2,59)A(FD,E9,AD,5F)A(F9,E3,A2,43)A(C1,6B,4E,23)A(25,3C,36,30)A(DA,D9,96,3E)A(DE,B9,89,3B)A(2B,34,35,37)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,3E,3F,42)A(21,3A,3A,3B)A(CD,B7,8D,44)A(EF,EA,B3,63)A(49,6D,67,62)A(44,45,47,48)A(95,58,47,29)A(A2,59,42,20)A(7B,42,3C,30)A(26,51,55,5C)A(AF,CA,9F,68)A(F5,EC,B0,50)A(95,52,45,2F)A(00,3C,3E,42)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,41,41,41)A(00,3F,40,42)A(3E,40,3E,3A)A(CC,A4,82,46)A(F5,F8,C4,74)A(BD,E1,C7,A6)A(8E,C5,BF,B9)A(7A,BF,BC,B8)A(A0,D1,C2,AF)A(D5,F1,C5,86)A(F3,D1,9F,4E)A(9B,56,4A,32)A(0F,39,3B,3F)A(00,42,42,42)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,41,41,41)A(00,41,41,41)A(00,3F,40,42)A(33,38,3A,3C)A(B5,75,5F,37)A(EA,BA,8A,3C)A(FD,DA,A2,4E)A(FF,DE,A6,51)A(F8,CA,94,3F)A(DF,95,70,31)A(7F,41,3D,33)A(09,39,3C,41)A(00,42,42,42)A(00,41,41,41)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,41,41,41)A(00,41,41,41)A(00,41,41,41)A(00,41,41,42)A(10,38,3B,40)A(48,37,39,3A)A(70,43,3E,35)A(79,43,3D,31)A(63,3B,3A,37)A(32,34,37,3C)A(02,3F,40,42)A(00,41,41,41)A(00,41,41,41)A(00,41,41,41)A(00,FF,FF,FF)
				A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF)A(00,FF,FF,FF);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			]"
		end

	build_colors (a_ptr: POINTER)
			-- Build `colors'.
		do
			c_colors_0 (a_ptr, 0)
		end

feature {NONE} -- Image data filling.

	fill_memory
			-- Fill image data into memory.
		local
			l_imp: EV_PIXEL_BUFFER_IMP
			l_pointer: POINTER
		do
			l_imp ?= implementation
			check not_void: l_imp /= Void end

			l_pointer := l_imp.data_ptr
			if l_pointer /= default_pointer then
				build_colors (l_pointer)
				l_imp.unlock
			end
		end

end -- COPYRIGHT_TOOL_ICON_SMALL
