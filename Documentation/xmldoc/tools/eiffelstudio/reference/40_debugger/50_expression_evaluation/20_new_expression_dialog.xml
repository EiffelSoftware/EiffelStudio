<document title="New expression dialog" output="studio">
	<meta_data/>
	<paragraph>
		<paragraph>Adding new expressions to the 
			<link>
				<url>10_expression_list.xml</url>
				<label>list of expressions</label>
			</link> that should be dynamically evaluated is performed via a dialog.
		</paragraph>
		<paragraph>
		<alignment>center</alignment>
		<table ><padding>15</padding>
		<row>
		<cell>
			<image>
				<url>/images/eiffelstudio/dialogs_and_wizards/new_expression_definition_dlg.png</url>
			</image>
			<line_break></line_break>
			context: Current feature
		</cell>
		<cell>
			<image>
				<url>/images/eiffelstudio/dialogs_and_wizards/new_expression_as_object_definition_dlg.png</url>
			</image>	
			<line_break></line_break>
			context: As object
		</cell>
		</row>
		</table>

		
		</paragraph>
		<paragraph>The first part in the dialog makes it possible to select the context of the expression.
		<list order="false">
		<item>		 The default context is the context of the 
			<link>
				<url>../30_call_stack_tool/20_current_level_information.xml</url>
				<label>currently selected call stack element</label>
			</link>. This context gives access to the locals, the arguments, the result and the enclosing object features. 
			<line_break></line_break>
		</item>
		<item>
			The object context, that requires a valid object address, gives access to the features of the selected object. But if the "As object" is selected, the result of the expression, is the pointed object it self; and you can name the object (see the second screenshot).
		</item>
		<item>
			The last context, the class-related context, gives access to the once and constants features of that class. It requires a valid class name.		
		</item>
		</list>
		</paragraph>
		<paragraph>The second part prompts for the expression itself. This field supports arguments, dot calls and operators (to a certain extent), but does not support creation expressions, agents or static calls (as in "feature {<class_name>MY_CLASS</class_name>}.<feature_name>my_feature</feature_name>"). Genericity is partially supported. Despite these limitations, we believe the expression evaluation tool should provide you with a lot of useful functionality.</paragraph>
	</paragraph></document>
