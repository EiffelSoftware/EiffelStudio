#define GE_USE_THREADS

/*
	description:

		"C declarations for the Gobo Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2005-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EIFFEL_H
#define GE_EIFFEL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Class name mapping as defined in the FreeELKS library. */
#ifndef EIF_INTEGER
#define EIF_INTEGER EIF_INTEGER_32
#endif
#ifndef EIF_CHARACTER
#define EIF_CHARACTER EIF_CHARACTER_8
#endif
#ifndef EIF_REAL
#define EIF_REAL EIF_REAL_32
#endif
#ifndef EIF_DOUBLE
#define EIF_DOUBLE EIF_REAL_64
#endif
#ifndef GE_ms
#define GE_ms(s,c) GE_ms8((s),(c))
#endif

#if defined(__USE_POSIX) || defined(__unix__) || defined(_POSIX_C_SOURCE)
#include <unistd.h>
#endif
#if !defined(WIN32) && \
	(defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER) || \
	defined(__MINGW32__))
#define WIN32 1
#endif
#ifdef WIN32
#define EIF_WINDOWS 1
#include <windows.h>
#endif

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>
#include <stddef.h>

/* Platform definition */
/* Unix definition */
#define EIF_IS_UNIX EIF_TRUE
/* Windows definition */
#ifdef EIF_WINDOWS
#define EIF_IS_WINDOWS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_WINDOWS EIF_FALSE
#endif
/* VMS definition */
#ifdef EIF_VMS
#define EIF_IS_VMS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VMS EIF_FALSE
#endif
/* MAC definition */
#ifdef EIF_MAC
#define EIF_IS_MAC EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_MAC EIF_FALSE
#endif
/* VxWorks definition */
#ifdef EIF_VXWORKS
#define EIF_IS_VXWORKS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VXWORKS EIF_FALSE
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _MSC_VER /* MSVC */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#include <inttypes.h>
#endif
#endif

/* Portable integer pointers */
#ifdef EIF_WINDOWS
#ifndef _INTPTR_T_DEFINED
#define _INTPTR_T_DEFINED
#ifdef _WIN64
typedef __int64 intptr_t;
#else
typedef int intptr_t;
#endif
#endif
#ifndef _UINTPTR_T_DEFINED
#define _UINTPTR_T_DEFINED
#ifdef _WIN64
  typedef unsigned __int64 uintptr_t;
#else
  typedef unsigned int uintptr_t;
#endif
#endif
#endif

/* C type for underlying integer type identifying object's dynamic type. */
typedef uint16_t EIF_TYPE_INDEX;

/*
 * Abstraction representing an Eiffel type.
 * It is made of a compiler type-id,
 * and of some annotations (attached/detachable/separate/variant/frozen).
 */
typedef struct eif_type {
	EIF_TYPE_INDEX id;
	EIF_TYPE_INDEX annotations;
} EIF_TYPE;

/*
 * Since EIF_TYPE and EIF_ENCODED_TYPE have the same size, the encoded version
 * is basically a memcpy version of the EIF_TYPE representation.
 * It is used to provide backward compatibility to most Eiffel and
 * C APIs manipulating types as an INTEGER.
 */
typedef int32_t EIF_ENCODED_TYPE;
typedef EIF_ENCODED_TYPE EIF_TYPE_ID;
#define EIF_NO_TYPE (EIF_TYPE_ID)(-1)

/* Basic Eiffel types */
typedef char EIF_BOOLEAN;
typedef unsigned char EIF_CHARACTER_8;
typedef uint32_t EIF_CHARACTER_32;
typedef int8_t EIF_INTEGER_8;
typedef int16_t EIF_INTEGER_16;
typedef int32_t EIF_INTEGER_32;
typedef int64_t EIF_INTEGER_64;
typedef uint8_t EIF_NATURAL_8;
typedef uint16_t EIF_NATURAL_16;
typedef uint32_t EIF_NATURAL_32;
typedef uint64_t EIF_NATURAL_64;
typedef void* EIF_POINTER;
typedef float EIF_REAL_32;
typedef double EIF_REAL_64;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags;} EIF_ANY;
typedef EIF_ANY* EIF_REFERENCE;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; EIF_REFERENCE area; EIF_INTEGER count;} EIF_STRING;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; uint32_t offset; EIF_INTEGER count; EIF_INTEGER capacity;} EIF_SPECIAL;

#ifdef EIF_WINDOWS
typedef wchar_t EIF_NATIVE_CHAR;
#else
typedef char EIF_NATIVE_CHAR;
#endif
typedef EIF_NATIVE_CHAR* EIF_FILENAME;

#define EIF_VOID ((EIF_REFERENCE)0)
#define EIF_FALSE ((EIF_BOOLEAN)'\0')
#define EIF_TRUE ((EIF_BOOLEAN)'\1')
#define EIF_TEST(x) ((x) ? EIF_TRUE : EIF_FALSE)

#define EIF_IS_WORKBENCH EIF_FALSE
#define EIF_POINTER_DISPLAY "lX"

/* For INTEGER and NATURAL manifest constants */
#define GE_int8(x) x
#define GE_nat8(x) x
#define GE_int16(x) x
#define GE_nat16(x) x
#define GE_int32(x) x##L
#define GE_nat32(x) x##U
#if defined (_MSC_VER) && (_MSC_VER < 1400) /* MSC older than v8 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#elif defined(__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else /* ISO C 99 */
#define GE_int64(x) x##LL
#define GE_nat64(x) x##ULL
#endif
#ifdef __LCC__
/* lcc-win32 reports a constant overflow for -21474836478. */
#define GE_min_int32 (-GE_int32(2147483647)-GE_int32(1))
#else
#define GE_min_int32 GE_int32(-2147483648)
#endif
#if defined(__LCC__) || defined(__GNUC__) || defined(__MINGW32__)
/* lcc-win32 reports a constant overflow for -9223372036854775808. */
/* gcc and mingw-win64 warn that integer constant is so large that it is unsigned. */
#define GE_min_int64 (-GE_int64(9223372036854775807)-GE_int64(1))
#else
#define GE_min_int64 GE_int64(-9223372036854775808)
#endif
#if defined(__LCC__) && !defined(_WIN64)
/* lcc-win32 does not consider 64 bit constants as constants in case statement. */
#define GE_case_int64(x) ((int32_t)(x))
#define GE_case_nat64(x) ((uint32_t)(x))
#else
#define GE_case_int64(x) (x)
#define GE_case_nat64(x) (x)
#endif

#ifdef _WIN64
#define GE_IS_64_BITS EIF_TRUE
#else
#define GE_IS_64_BITS EIF_TEST(sizeof(void*)==64)
#endif

/* Posix threads */
#if !defined(EIF_WINDOWS)
#define GE_USE_POSIX_THREADS
#endif

#ifdef _MSC_VER /* MSVC */
/* MSVC does not support ISO C 99's 'snprintf' from stdio.h */
#define snprintf(a,b,c,d) sprintf(a,c,d)
#endif

/*
 * Gobo compiler version.
 * Starts with 6080 (looks like GOBO) followed by 5 digits.
 */
#define GE_compiler_version() 608000001

/*
	Interoperability with ISE.
*/
#define RTI64C(x) GE_int64(x)
#define EIF_OBJECT EIF_REFERENCE
#define EIF_OBJ EIF_OBJECT
/* Function pointer call to make sure all arguments are correctly pushed onto stack. */
/* FUNCTION_CAST is for standard C calls. */
/* FUNCTION_CAST_TYPE is for non-standard C calls. */
#define FUNCTION_CAST(r_type,arg_types) (r_type (*) arg_types)
#define FUNCTION_CAST_TYPE(r_type,call_type,arg_types) (r_type (call_type *) arg_types)
#define SIGBLOCK
#define SIGRESUME
#define rt_public				/* default C scope */
#define rt_private static		/* static outside a block means private */
#define rt_shared				/* data shared between modules, but not public */
typedef intptr_t rt_int_ptr;
typedef uintptr_t rt_uint_ptr;
#define RTMS(s) GE_str8(s)
#define RTMS_EX(s,c) GE_ms8((s),(c))

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C types used to implement class THREAD and related threading facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_THREAD_TYPES_H
#define GE_THREAD_TYPES_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef GE_USE_THREADS

#define EIF_THREADS
#ifdef GE_USE_POSIX_THREADS
#define EIF_POSIX_THREADS
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef GE_USE_POSIX_THREADS
#include <pthread.h>
#include <semaphore.h>
#elif defined EIF_WINDOWS
#include <windows.h>
#include <process.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef GE_USE_POSIX_THREADS

#define EIF_THR_TYPE            pthread_t
#define EIF_CS_TYPE				pthread_mutex_t
#define EIF_MUTEX_TYPE          pthread_mutex_t
#define EIF_COND_TYPE			pthread_cond_t
#define EIF_SEM_TYPE			sem_t
#define EIF_RWL_TYPE			pthread_rwlock_t

#elif defined EIF_WINDOWS

#define EIF_THR_TYPE            HANDLE
#define EIF_CS_TYPE				CRITICAL_SECTION
#define EIF_MUTEX_TYPE          CRITICAL_SECTION
#define EIF_SEM_TYPE            HANDLE

typedef struct {
		/* Semaphore used to queue up threads waiting for the condition to become signaled. */
	EIF_SEM_TYPE* semaphore;
		/* Serialize access to fields of Current. */
	EIF_CS_TYPE* csection;
		/* Number of waiters. */
	unsigned long num_waiting;
		/* Number of already awoken. */
	unsigned long num_wake;
		/* Number of time we signaled/broadcasted for improving fairness.
		 * This ensures one thread won't steal wakeups from other threads in queue. */
	unsigned long generation;
} EIF_COND_TYPE;

typedef struct {
	EIF_MUTEX_TYPE* m; /* Internal monitor lock. */
	int rwlock; /* >0 = # readers, <0 = writer, 0 = none */
	EIF_COND_TYPE* readers_ok; /* Start waiting readers. */
	unsigned int waiting_writers; /* Number of waiting writers. */
	EIF_COND_TYPE* writers_ok; /* Start a waiting writer. */
} EIF_RWL_TYPE;

#endif

typedef struct {
	unsigned int priority;
	unsigned int stack_size;
} EIF_THR_ATTR_TYPE;

/* Struct for thread context. */
typedef struct GE_thread_context_struct GE_thread_context;
struct GE_thread_context_struct {
	EIF_THR_TYPE thread_id; /* Thread identifier for associated thread. */
	EIF_REFERENCE current; /* Eiffel root object. */
	void (*routine)(EIF_REFERENCE); /* Eiffel routine. */
	void (*set_terminated)(EIF_REFERENCE,EIF_BOOLEAN); /* Eiffel routine to set {THREAD}.terminated. */
	unsigned int initial_priority; /* Initial priority. */
	EIF_THR_TYPE last_thread_id; /* Last thread created from current thread. */
	volatile int n_children; /* Number of direct thread children. */
	EIF_MUTEX_TYPE* children_mutex; /* Mutex to wait for thread children. */
	EIF_COND_TYPE* children_cond; /* Condition variable to wait for thread children. */
	GE_thread_context* parent_context;	/* Context of parent thread, NULL if main thread. */
	int thread_exiting; /* Has current thread already called GE_thread_exit? */
	volatile int is_alive; /* Is Current thread still alive? */
};

#ifdef __cplusplus
}
#endif

#endif
#endif

/*
	description:

		"C functions used to implement once features"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_ONCE_H
#define GE_ONCE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Struct to keep track of the call status
 * and results of once features.
 */
typedef struct {
	EIF_BOOLEAN* boolean_value;
	EIF_REFERENCE* boolean_exception;
	unsigned char* boolean_status;
	unsigned int boolean_count;
	EIF_CHARACTER_8* character_8_value;
	EIF_REFERENCE* character_8_exception;
	unsigned char* character_8_status;
	unsigned int character_8_count;
	EIF_CHARACTER_32* character_32_value;
	EIF_REFERENCE* character_32_exception;
	unsigned char* character_32_status;
	unsigned int character_32_count;
	EIF_INTEGER_8* integer_8_value;
	EIF_REFERENCE* integer_8_exception;
	unsigned char* integer_8_status;
	unsigned int integer_8_count;
	EIF_INTEGER_16* integer_16_value;
	EIF_REFERENCE* integer_16_exception;
	unsigned char* integer_16_status;
	unsigned int integer_16_count;
	EIF_INTEGER_32* integer_32_value;
	EIF_REFERENCE* integer_32_exception;
	unsigned char* integer_32_status;
	unsigned int integer_32_count;
	EIF_INTEGER_64* integer_64_value;
	EIF_REFERENCE* integer_64_exception;
	unsigned char* integer_64_status;
	unsigned int integer_64_count;
	EIF_NATURAL_8* natural_8_value;
	EIF_REFERENCE* natural_8_exception;
	unsigned char* natural_8_status;
	unsigned int natural_8_count;
	EIF_NATURAL_16* natural_16_value;
	EIF_REFERENCE* natural_16_exception;
	unsigned char* natural_16_status;
	unsigned int natural_16_count;
	EIF_NATURAL_32* natural_32_value;
	EIF_REFERENCE* natural_32_exception;
	unsigned char* natural_32_status;
	unsigned int natural_32_count;
	EIF_NATURAL_64* natural_64_value;
	EIF_REFERENCE* natural_64_exception;
	unsigned char* natural_64_status;
	unsigned int natural_64_count;
	EIF_POINTER* pointer_value;
	EIF_REFERENCE* pointer_exception;
	unsigned char* pointer_status;
	unsigned int pointer_count;
	EIF_REAL_32* real_32_value;
	EIF_REFERENCE* real_32_exception;
	unsigned char* real_32_status;
	unsigned int real_32_count;
	EIF_REAL_64* real_64_value;
	EIF_REFERENCE* real_64_exception;
	unsigned char* real_64_status;
	unsigned int real_64_count;
	EIF_REFERENCE* reference_value;
	EIF_REFERENCE* reference_exception;
	unsigned char* reference_status;
	unsigned int reference_count;
	EIF_REFERENCE* procedure_exception;
	unsigned char* procedure_status;
	unsigned int procedure_count;
} GE_onces;

/*
 * Variable to keep track of the call status
 * and results of once-per-process features.
 */
extern GE_onces* GE_process_onces;

/*
 * Initialize `GE_process_onces'.
 */
extern void GE_init_onces(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Create a new 'GE_onces' struct which can deal with the
 * numbers of once features passed as argument.
 */
extern GE_onces* GE_new_onces(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Free memory allocated by `a_onces'.
 */
extern void GE_free_onces(GE_onces* a_onces);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class EXCEPTION"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EXCEPTION_H
#define GE_EXCEPTION_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_ONCE_H
#include "ge_once.h"
#endif
#ifdef GE_USE_THREADS
#ifndef GE_THREAD_TYPES_H
#include "ge_thread_types.h"
#endif
#endif

#include <setjmp.h>

/*
 * On Linux glibc systems, we need to use sig* versions of jmp_buf,
 * setjmp and longjmp to preserve the signal handling context.
 * One way to detect this is if _SIGSET_H_types has
 * been defined in /usr/include/setjmp.h.
 * NOTE: ANSI only recognizes the non-sig versions.
 */
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#define GE_jmp_buf sigjmp_buf
#define GE_setjmp(x) sigsetjmp((x),1)
#define GE_longjmp(x,y) siglongjmp((x),(y))
#else
#define GE_jmp_buf jmp_buf
#define GE_setjmp(x) setjmp((x))
#define GE_longjmp(x,y) longjmp((x),(y))
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define GE_EX_VOID		1			/* Feature applied to void reference */
#define GE_EX_MEM		2			/* No more memory */
#define GE_EX_PRE		3			/* Pre-condition violated */
#define GE_EX_POST		4			/* Post-condition violated */
#define GE_EX_FLOAT		5			/* Floating point exception (signal SIGFPE) */
#define GE_EX_CINV		6			/* Class invariant violated */
#define GE_EX_CHECK		7			/* Check instruction violated */
#define GE_EX_FAIL		8			/* Routine failure */
#define GE_EX_WHEN		9			/* Unmatched inspect value */
#define GE_EX_VAR		10			/* Non-decreasing loop variant */
#define GE_EX_LINV		11			/* Loop invariant violated */
#define GE_EX_SIG		12			/* Operating system signal */
#define GE_EX_BYE		13			/* Eiffel run-time panic */
#define GE_EX_RESC		14			/* Exception in rescue clause */
#define GE_EX_OMEM		15			/* Out of memory (cannot be ignored) */
#define GE_EX_RES		16			/* Resumption failed (retry did not succeed) */
#define GE_EX_CDEF		17			/* Create on deferred */
#define GE_EX_EXT		18			/* External event */
#define GE_EX_VEXP		19			/* Void assigned to expanded */
#define GE_EX_HDLR		20			/* Exception in signal handler */
#define GE_EX_IO		21			/* I/O error */
#define GE_EX_SYS		22			/* Operating system error */
#define GE_EX_RETR		23			/* Retrieval error */
#define GE_EX_PROG		24			/* Developer exception */
#define GE_EX_FATAL		25			/* Eiffel run-time fatal error */
#define GE_EX_DOL		26			/* $ applied to melted feature */
#define GE_EX_ISE_IO	27			/* I/O error raised by the ISE Eiffel runtime */
#define GE_EX_COM		28			/* COM error raised by EiffelCOM runtime */
#define GE_EX_RT_CHECK	29			/* Runtime check error such as out-of-bound array access */
#define GE_EX_OLD		30			/* Old violation */
#define GE_EX_SEL		31			/* Serialization failure */
#define GE_EX_DIRTY		32			/* SCOOP processor dirty exception. */
#define GE_EX_NEX		32			/* Number of internal exceptions */

/*
 * String buffer used to build the exception trace.
 */
typedef struct GE_exception_trace_buffer_struct GE_exception_trace_buffer;
struct GE_exception_trace_buffer_struct {
	char* area;
	uint32_t count;
	uint32_t capacity;
};

/*
 * Information about the feature being executed.
 */
typedef struct GE_call_struct GE_call;
struct GE_call_struct {
#ifdef GE_USE_CURRENT_IN_EXCEPTION_TRACE
	void* object; /* Current object */
#endif
	const char* class_name;
	const char* feature_name;
	GE_call* caller; /* previous feature in the call chain */
};

/*
 * Context of features containing a rescue clause.
 */
typedef struct GE_rescue_struct GE_rescue;
struct GE_rescue_struct {
	GE_jmp_buf jb;
	GE_rescue* previous; /* previous context in the call chain */
};

/*
 * Information about the execution context.
 * One such struct per thread.
 */
typedef struct GE_context_struct GE_context;
struct GE_context_struct {
	GE_call* call; /* Call stack */
	uint32_t in_assertion; /* Is an assertion evaluated? */
	GE_rescue* last_rescue; /* Context of last feature entered containing a rescue clause */
	uint32_t in_rescue; /* Number of rescue clauses currently being executed */
	EIF_REFERENCE exception_manager; /* Exception manager */
	char raising_exception; /* Is an exception currently being raised? */
	char exception_trace_enabled; /* Should exception trace be displayed? */
	long exception_code; /* Code of the exception currently being raised, 0 otherwise */
	const char* exception_tag; /* Tag of the exception currently being raised, NULL otherwise */
	GE_exception_trace_buffer exception_trace_buffer; /* String buffer used to build the exception trace */
	GE_exception_trace_buffer last_exception_trace; /* Last non-routine-failure exception trace */
	int pre_ecma_mapping_status; /* Do we map old names to new name? (i.e. STRING to STRING_8, INTEGER to INTEGER_32, ...). */
#ifdef GE_USE_THREADS
	GE_thread_context* thread; /* Thread context */
	GE_onces* process_onces; /* Cache for status and results of onces-per-process */
	GE_onces* thread_onces; /* Status and results of onces-per-thread */
	void* wel_per_thread_data; /* WEL private data */
#endif
};

/*
 * Default initialization for `GE_context'.
 */
extern GE_context GE_default_context;

/*
 * Execution context of main thread.
 */
extern GE_context* GE_main_context;

/*
 * Execution context of current thread.
 */
extern GE_context* GE_current_context(void);

/*
 * Initialization of exception handling.
 */
extern void GE_init_exception(GE_context* context);

/*
 * Free memory allocated in `a_context' for exception handling.
 */
extern void GE_free_exception(GE_context* a_context);

/*
 * Pointer to function to create a new exception manager object
 * (of type ISE_EXCEPTION_MANAGER).
 */
extern EIF_REFERENCE (*GE_new_exception_manager)(EIF_BOOLEAN);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.init_exception_manager.
 */
extern void (*GE_init_exception_manager)(GE_context*, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.last_exception.
 */
extern EIF_REFERENCE (*GE_last_exception)(GE_context*, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.once_raise.
 */
extern void (*GE_once_raise)(GE_context*, EIF_REFERENCE, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.set_exception_data.
 */
extern void (*GE_set_exception_data)(GE_context*, EIF_REFERENCE, EIF_INTEGER_32, EIF_BOOLEAN, EIF_INTEGER_32, EIF_INTEGER_32, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_INTEGER_32, EIF_BOOLEAN);

/*
 * Exception tag associated with `a_code'.
 */
extern char* GE_exception_tag(long a_code);

/*
 * Raise an exception with code `a_code'.
 */
extern void GE_raise(long a_code);

/*
 * Raise an exception with code `a_code' and message `msg'.
 */
extern void GE_raise_with_message(long a_code, const char* msg);

/*
 * Raise an exception from EXCEPTION_MANAGER.
 */
extern void GE_developer_raise(long a_code, char* a_meaning, char* a_message);

/*
 * Raise exception which was raised the first time a once routine
 * was executed when executing it again.
 */
extern void GE_raise_once_exception(GE_context* a_context, EIF_REFERENCE a_exception);

/*
 * Exception, if any, which was last raised in `a_context'.
 */
extern EIF_REFERENCE GE_last_exception_raised(GE_context* a_context);

/*
 * Jump to execute the rescue of the last routine with a rescue
 * in the call stack.
 */
extern void GE_jump_to_last_rescue(GE_context* a_context);

/*
 * Set `in_assertion' to 'not b'.
 * Return the opposite of previous value.
 */
extern EIF_BOOLEAN GE_check_assert(EIF_BOOLEAN b);

/*
 * Check whether the type id of `obj' is not in `type_ids'.
 * If it is, then raise a CAT-call exception. Don't do anything if `obj' is Void.
 * `nb' is the number of ids in `type_ids' and is expected to be >0.
 * `type_ids' is sorted in increasing order.
 * Return `obj'.
 */
#define GE_catcall(obj,type_ids,nb) GE_check_catcall((obj),(type_ids),(nb))
extern EIF_REFERENCE GE_check_catcall(EIF_REFERENCE obj, EIF_TYPE_INDEX type_ids[], int nb);

/*
 * Check whether `obj' is Void.
 * If it is, then raise a call-on-void-target exception.
 * Return `obj'.
 */
#define GE_void(obj) (!(obj)?GE_check_void(obj):(obj))
extern EIF_REFERENCE GE_check_void(EIF_REFERENCE obj);

/*
 * Check whether `ptr' is a null pointer.
 * If it is, then raise a no-more-memory exception.
 * Return `ptr'.
 */
#define GE_null(ptr) GE_check_null(ptr)
extern void* GE_check_null(void* ptr);

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void GE_set_windows_exception_filter(void);
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class THREAD and related threading facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_THREAD_H
#define GE_THREAD_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef GE_USE_THREADS

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_THREAD_TYPES_H
#include "ge_thread_types.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef GE_USE_POSIX_THREADS
#include <unistd.h>
#endif

#ifdef GE_USE_POSIX_THREADS
#	define EIF_TSD_VAL_TYPE        void*
#	define EIF_TSD_TYPE            pthread_key_t
#	define EIF_TSD_CREATE(key,msg) \
		if (pthread_key_create(&(key),NULL)) \
	        GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_SET(key,val,msg) \
		if (pthread_setspecific((key), (EIF_TSD_VAL_TYPE)(val))) \
			GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_GET0(val_type,key,val) (val = pthread_getspecific(key))
#	define EIF_TSD_GET(val_type,key,val,msg) \
		if (EIF_TSD_GET0(val_type,key,val) == (void*) 0) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_DESTROY(key,msg) if (pthread_key_delete(key)) GE_raise_with_message(GE_EX_EXT, msg)
#elif defined EIF_WINDOWS
#	define EIF_TSD_VAL_TYPE        LPVOID
#	define EIF_TSD_TYPE            DWORD
#	define EIF_TSD_CREATE(key,msg) \
		if ((key=TlsAlloc())==TLS_OUT_OF_INDEXES) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_SET(key,val,msg) \
		if (!TlsSetValue((key),(EIF_TSD_VAL_TYPE)(val))) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_GET0(val_type,key,val) \
		val=(val_type) TlsGetValue(key)
#	define EIF_TSD_GET(val_type,key,val,msg) \
		EIF_TSD_GET0(val_type,key,val); \
		if (GetLastError() != NO_ERROR) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_DESTROY(key,msg) \
		if (!TlsFree(key)) GE_raise_with_message(GE_EX_EXT, msg)
#endif

/* Thread priority levels. */
#define EIF_MIN_THR_PRIORITY			0L
#define EIF_BELOW_NORMAL_THR_PRIORITY	100L
#define EIF_DEFAULT_THR_PRIORITY		127L
#define EIF_ABOVE_NORMAL_THR_PRIORITY	154L
#define EIF_MAX_THR_PRIORITY			255L

/*
 * Mutexes used to protect the calls to once-per-process features.
 */
typedef struct {
	EIF_POINTER* boolean_mutex;
	EIF_POINTER* character_8_mutex;
	EIF_POINTER* character_32_mutex;
	EIF_POINTER* integer_8_mutex;
	EIF_POINTER* integer_16_mutex;
	EIF_POINTER* integer_32_mutex;
	EIF_POINTER* integer_64_mutex;
	EIF_POINTER* natural_8_mutex;
	EIF_POINTER* natural_16_mutex;
	EIF_POINTER* natural_32_mutex;
	EIF_POINTER* natural_64_mutex;
	EIF_POINTER* pointer_mutex;
	EIF_POINTER* real_32_mutex;
	EIF_POINTER* real_64_mutex;
	EIF_POINTER* reference_mutex;
	EIF_POINTER* procedure_mutex;
} GE_once_mutexes;

/*
 * Mutexes used to protect the calls to once-per-process features.
 */
extern GE_once_mutexes* GE_process_once_mutexes;

/*
 * Create a new 'GE_once_mutexes' struct which can deal with the
 * numbers of once features passed as argument.
 */
extern GE_once_mutexes* GE_new_once_mutexes(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Keep track of the numbers of once-per-thread features.
 */
extern void GE_thread_onces_set_counts(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Initialize data to handle threads.
 * To be called at the beginning of the main function
 * on the main thread.
 */
extern void GE_init_thread(GE_context* a_context);

/*
 * Create a new thread with attributes `attr' and execute
 * Eiffel routine `routine' on object `current'.
 */
extern void GE_thread_create_with_attr(EIF_REFERENCE current, void (*routine)(EIF_REFERENCE), void (*set_terminated)(EIF_REFERENCE,EIF_BOOLEAN), EIF_THR_ATTR_TYPE* attr);

/*
 * Execution context of current thread.
 */
extern GE_context* GE_thread_current_context(void);

/*
 * Thead ID of current thread.
 */
extern EIF_POINTER GE_thread_id(void);

/*
 * Thread ID of last thread created from current thread.
 */
extern EIF_POINTER GE_last_thread_created(void);

#ifdef EIF_WINDOWS
/*
 * Support for Windows GUI that requires that all GUI operations are performed in the same thread.
 * Allocate new structure of the given size `a_size', assign it to `wel_per_thread_data'.
 * Return newly allocated memory block. It will be freed automatically on thread termination.
 */
extern void* GE_thread_create_wel_per_thread_data(size_t a_size);
#endif

/*
 * Waits until a child thread sets `terminated' from `obj' to True,
 * which means it is terminated. The calling thread must be the
 * direct parent of the thread, or the function might loop indefinitely.
 */
extern void GE_thread_wait(EIF_REFERENCE obj, EIF_BOOLEAN (*get_terminated)(EIF_REFERENCE));

/*
 * Waits until a child thread sets `terminated' from `obj' to True,
 * which means it is terminated, or reaching `a_timeout_ms'.
 * The calling thread must be the direct parent of the thread,
 * or the function might loop indefinitely.
 */
extern EIF_BOOLEAN GE_thread_wait_with_timeout(EIF_REFERENCE obj, EIF_BOOLEAN (*get_terminated)(EIF_REFERENCE), EIF_NATURAL_64 a_timeout_ms);

/*
 * Yields execution to other threads.
 */
extern void GE_thread_yield(void);

/*
 * The calling thread waits for all other children threads to terminate.
 */
extern void GE_thread_join_all(void);

/*
 * Function called to terminate a thread launched by Eiffel with `GE_thread_create_with_attr'.
 * This function must be called from the thread itself (not the parent).
 */
extern void GE_thread_exit(void);

/*
 * Default thread priority level.
 */
extern EIF_INTEGER GE_thread_default_priority(void);

/*
 * Minimum thread priority level.
 */
extern EIF_INTEGER GE_thread_min_priority(void);

/*
 * Maximum thread priority level.
 */
extern EIF_INTEGER GE_thread_max_priority(void);

/*
 * Create a new mutex.
 */
extern EIF_POINTER GE_mutex_create(void);

/*
 * Lock mutex.
 */
extern void GE_mutex_lock(EIF_POINTER a_mutex);

/*
 * Try to lock mutex. Return True on success.
 */
extern EIF_BOOLEAN GE_mutex_try_lock(EIF_POINTER a_mutex);

/*
 * Unlock mutex.
 */
extern void GE_mutex_unlock(EIF_POINTER a_mutex);

/*
 * Destroy and free all resources used by mutex.
 */
extern void GE_mutex_destroy(EIF_POINTER a_mutex);

/*
 * Create a new semaphore allowing `a_count' threads
 * to go into a critical section.
 */
extern EIF_POINTER GE_semaphore_create(EIF_INTEGER a_count);

/*
 * Decrement semaphore count, waiting if necessary
 * until that becomes possible.
 */
extern void GE_semaphore_wait(EIF_POINTER a_semaphore);

/*
 * Has client been successful in decrementing semaphore
 * count without waiting?
 */
extern EIF_BOOLEAN GE_semaphore_try_wait(EIF_POINTER a_semaphore);

/*
 * Increment semaphore count.
 */
extern void GE_semaphore_post(EIF_POINTER a_semaphore);

/*
 * Destroy and free all resources used by semaphore.
 */
extern void GE_semaphore_destroy(EIF_POINTER a_semaphore);

/*
 * Create a new condition variable.
 */
extern EIF_POINTER GE_condition_variable_create(void);

/*
 * Unblock all threads blocked on condition variable.
 */
extern void GE_condition_variable_broadcast(EIF_POINTER a_condition_variable);

/*
 * Unblock one thread blocked on condition variable.
 */
extern void GE_condition_variable_signal(EIF_POINTER a_condition_variable);

/*
 * Block calling thread on condition variable.
 */
extern void GE_condition_variable_wait(EIF_POINTER a_condition_variable, EIF_POINTER a_mutex);

/*
 * Block calling thread on condition variable for at most `a_timeout' milliseconds.
 * Return 1 is we got the condition variable on time, otherwise return 0.
 */
extern EIF_INTEGER GE_condition_variable_wait_with_timeout(EIF_POINTER a_condition_variable, EIF_POINTER a_mutex, EIF_INTEGER a_timeout);

/*
 * Destroy and free all resources used by condition variable.
 */
extern void GE_condition_variable_destroy(EIF_POINTER a_condition_variable);

/*
 * Create a new read-write lock.
 */
extern EIF_POINTER GE_read_write_lock_create(void);

/*
 * Acquire a read lock. Multiple readers can go if there are no writer.
 */
extern void GE_read_write_lock_read_lock(EIF_POINTER a_read_write_lock);

/*
 * Acquire a write lock. Only a single write can proceed.
 */
extern void GE_read_write_lock_write_lock(EIF_POINTER a_read_write_lock);

/*
 * Unlock a read or write lock.
 */
extern void GE_read_write_lock_unlock(EIF_POINTER a_read_write_lock);

/*
 * Destroy and free all resources used by read-write lock.
 */
extern void GE_read_write_lock_destroy(EIF_POINTER a_read_write_lock);

#ifdef __cplusplus
}
#endif

#endif
#endif

/*
	description:

		"C functions used to manipulate native strings"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2013-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_NATIVE_STRING_H
#define GE_NATIVE_STRING_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <string.h>
#ifdef EIF_WINDOWS
#ifdef __LCC__
/* With lcc-win32, stat.h should be included before wchar.h. */
#include <sys/stat.h>
#endif
#include <wchar.h>
#else
#include <sys/types.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

/* Macro used to manipulate native strings, i.e: (wchar_t*) */
#define GE_nstrlen wcslen /* size of string */
#define GE_nstrncpy wcsncpy /* Copy n characters of one string to another */
#define GE_nstrcpy wcscpy /* Copy one string to another */
#define GE_nstrncat wcsncat /* Append characters of a string */
#define GE_nstrcat wcscat /* Append a string */
#define GE_nstrstr wcsstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) L##quote /* Manifest Native string declaration */
#define GE_nstr_fopen _wfopen /* Open file using native string name */
#define GE_nstrcmp wcscmp /* Compare two strings. */
#define GE_nstrdup _wcsdup /* Duplicate string. */
#define GE_nstr_cat_ascii(dest, src) {							\
		int i;													\
		size_t dest_len, src_len;								\
		dest_len = rt_nstrlen (dest);							\
		src_len = strlen (src);									\
		for (i = 0; i < src_len; i++) {							\
			dest[dest_len + i] = (EIF_NATIVE_CHAR)src[i];		\
		}														\
		dest[dest_len + src_len] = (EIF_NATIVE_CHAR)0;			\
	}

#else /* not EIF_WINDOWS */

/* Macro used to manipulate native strings, i.e: (char*) */
#define GE_nstrlen strlen /* size of string */
#define GE_nstrncpy strncpy /* Copy n characters of one string to another */
#define GE_nstrcpy strcpy /* Copy one string to another */
#define GE_nstrncat strncat /* Append characters of a string */
#define GE_nstrcat strcat /* Append a string */
#define GE_nstrstr strstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) quote /* Manifest Native string declaration */
#define GE_nstr_fopen fopen /* Open file using native string name */
#define GE_nstrcmp strcmp /* Compare two strings. */
#define GE_nstrdup strdup /* Duplicate string. */
#define GE_nstr_cat_ascii strcat

#endif


#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class ARGUMENTS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_ARGUMENTS_H
#define GE_ARGUMENTS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_argc;
extern EIF_NATIVE_CHAR** GE_argv;

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement type information"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_TYPES_H
#define GE_TYPES_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Type annotations.
 * When a type has no annotation, it means a detachable, non-separate, variant type.
 * In all other cases, there will be an annotation.
 */
#define ANNOTATION_MASK			0x007F	/* All possible annotations. */
#define ATTACHED_FLAG			0x0001
#define DETACHABLE_FLAG			0x0002	/* Only present when overriding an attached type. */
#define SEPARATE_FLAG			0x0004
#define VARIANT_FLAG			0x0008	/* Only present when overriding a frozen/poly type. */
#define UNUSABLE_FLAG			0x0010	/* Reserved for backward compatibility for storables. */
#define FROZEN_FLAG				0x0020
#define POLY_FLAG				0x0040

/*
 * Type flags.
 */
#define GE_TYPE_FLAG_SPECIAL		0x0010
#define GE_TYPE_FLAG_TUPLE			0x0020
#define GE_TYPE_FLAG_EXPANDED		0x0040
#define GE_TYPE_FLAG_DEFERRED		0x0080
#define GE_TYPE_FLAG_NONE			0x0100
#define GE_TYPE_FLAG_BASIC_MASK		0x000F /* One of "BOOLEAN", "CHARACTER_8", "CHARACTER_32", "INTEGER_8", "INTEGER_16", "INTEGER_32", "INTEGER_64", "NATURAL_8", "NATURAL_16", "NATURAL_32", "NATURAL_64", "POINTER", "REAL_32", "REAL_64" */
#define GE_TYPE_FLAG_BOOLEAN		0x0001
#define GE_TYPE_FLAG_CHARACTER_8	0x0002
#define GE_TYPE_FLAG_CHARACTER_32	0x0003
#define GE_TYPE_FLAG_INTEGER_8		0x0004
#define GE_TYPE_FLAG_INTEGER_16		0x0005
#define GE_TYPE_FLAG_INTEGER_32		0x0006
#define GE_TYPE_FLAG_INTEGER_64		0x0007
#define GE_TYPE_FLAG_NATURAL_8		0x0008
#define GE_TYPE_FLAG_NATURAL_16		0x0009
#define GE_TYPE_FLAG_NATURAL_32		0x000A
#define GE_TYPE_FLAG_NATURAL_64		0x000B
#define GE_TYPE_FLAG_POINTER		0x000C
#define GE_TYPE_FLAG_REAL_32		0x000D
#define GE_TYPE_FLAG_REAL_64		0x000E

/*
 * Convention for attribute types.
 * The values are in sync with REFLECTOR_CONSTANTS.
 */
#define GE_TYPE_KIND_INVALID		-1
#define GE_TYPE_KIND_POINTER		0
#define GE_TYPE_KIND_REFERENCE		1
#define GE_TYPE_KIND_CHARACTER_8	2
#define GE_TYPE_KIND_BOOLEAN		3
#define GE_TYPE_KIND_INTEGER_32		4
#define GE_TYPE_KIND_REAL_32		5
#define GE_TYPE_KIND_REAL_64		6
#define GE_TYPE_KIND_EXPANDED		7
#define GE_TYPE_KIND_INTEGER_8		9
#define GE_TYPE_KIND_INTEGER_16		10
#define GE_TYPE_KIND_INTEGER_64 	11
#define GE_TYPE_KIND_CHARACTER_32	12
#define GE_TYPE_KIND_NATURAL_8		13
#define GE_TYPE_KIND_NATURAL_16		14
#define GE_TYPE_KIND_NATURAL_32 	15
#define GE_TYPE_KIND_NATURAL_64 	16

/*
 * Object flags.
 */
#define GE_OBJECT_FLAG_MARKED		0x0001

/*
 * Ancestor relationship between two types X and Y.
 */
#ifdef GE_USE_ANCESTORS
typedef struct {
	EIF_TYPE_INDEX type_id; /* Type id of Y */
	EIF_BOOLEAN conforms; /* Does X conform to Y? */
	void (**qualified_calls)(); /* Function pointers, indexed by call id, when the static type of the target is Y and the dynamic type is X */
} GE_ancestor;
#endif

/*
 * Attribute.
 */
#ifdef GE_USE_ATTRIBUTES
typedef struct {
#ifdef GE_USE_ATTRIBUTE_NAME
	const char* name; /* Attribute name */
#endif
#ifdef GE_USE_ATTRIBUTE_TYPE_ID
	EIF_ENCODED_TYPE type_id; /* Static type id */
#endif
#ifdef GE_USE_ATTRIBUTE_OFFSET
	uint32_t offset; /* Address offset in object */
#endif
} GE_attribute;
#endif

/*
 * Type information.
 */
typedef struct {
	EIF_TYPE_INDEX type_id;
	uint16_t flags;
#ifdef GE_USE_TYPE_GENERATOR
	const char* generator; /* Generator class name */
#endif
#ifdef GE_USE_TYPE_NAME
	const char* name; /* Full type name */
#endif
#ifdef GE_USE_TYPE_GENERIC_PARAMETERS
	EIF_ENCODED_TYPE* generic_parameters;
	uint32_t generic_parameter_count;
#endif
#ifdef GE_USE_ANCESTORS
	GE_ancestor** ancestors;
	uint32_t ancestor_count;
#endif
#ifdef GE_USE_ATTRIBUTES
	GE_attribute** attributes;
	uint32_t attribute_count;
#endif
#ifdef GE_USE_TYPE_OBJECT_SIZE
	uint64_t object_size;
#endif
	EIF_REFERENCE (*new_instance)();
	void (*dispose)(GE_context*, EIF_REFERENCE);
} GE_type_info;

typedef struct {
	EIF_TYPE_INDEX id; /* Type id of the "TYPE [X]" object */
	EIF_INTEGER type_id; /* Type id of the type "X" */
	EIF_BOOLEAN is_special;
	void (*dispose)(GE_context*, EIF_REFERENCE);
	EIF_REFERENCE a1; /* internal_name */
	EIF_REFERENCE a2; /* internal_name_32 */
} EIF_TYPE_OBJ;

/*
 * Types indexed by type id.
 * Generated by the compiler.
 */
extern EIF_TYPE_OBJ GE_types[];
extern GE_type_info GE_type_infos[];

/*
 * Number of type infos in `GE_type_infos'.
 * Do not take into account the fake item at index 0.
 */
extern int GE_type_info_count;

/*
 * Encode a EIF_TYPE into a EIF_ENCODED_TYPE.
 * The lower part of EIF_ENCODED_TYPE contains the .id field,
 * and the upper part the .annotations.
 */
extern EIF_ENCODED_TYPE GE_encoded_type(EIF_TYPE a_type);

/*
 * Decode a EIF_ENCODED_TYPE into a EIF_TYPE.
 * The lower part of EIF_ENCODED_TYPE contains the .id field,
 * and the upper part the .annotations.
 */
extern EIF_TYPE GE_decoded_type(EIF_ENCODED_TYPE a_type);

/*
 * Type with `a_id' and `a_annotations'.
 */
extern EIF_TYPE GE_new_type(EIF_TYPE_INDEX a_id, EIF_TYPE_INDEX a_annotations);

/*
 * Type of object `obj'.
 */
#define GE_object_type(obj)	GE_new_type(((EIF_REFERENCE)(obj))->id, 0x0)
#define GE_object_encoded_type(obj) GE_encoded_type(GE_object_type(obj))

/*
 * Attachment status of `a_type'.
 */
#define GE_is_attached_type(a_type) EIF_TEST(((a_type).annotations & ATTACHED_FLAG) || GE_is_expanded_type_index((a_type).id))
#define GE_is_attached_encoded_type(a_type) GE_is_attached_type(GE_decoded_type(a_type))

/*
 * Associated detachable type of `a_type' if any,
 * otherwise `a_type'.
 */
extern EIF_TYPE GE_non_attached_type(EIF_TYPE a_type);
#define GE_non_attached_encoded_type(a_type) GE_encoded_type(GE_non_attached_type(GE_decoded_type(a_type)))

/*
 * Associated attached type of `a_type' if any,
 * otherwise `a_type'.
 */
extern EIF_TYPE GE_attached_type(EIF_TYPE a_type);
#define GE_attached_encoded_type(t) GE_encoded_type(GE_attached_type(GE_decoded_type(t)))

/*
 * Is `a_type' a SPECIAL type?
 */
#define GE_is_special_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_SPECIAL)
#define GE_is_special_encoded_type(a_type) GE_is_special_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_object(obj) GE_is_special_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of user-defined expanded type?
 */
extern EIF_BOOLEAN GE_is_special_of_expanded_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_expanded_encoded_type(a_type) GE_is_special_of_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_expanded_object(obj) GE_is_special_of_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of reference type?
 */
extern EIF_BOOLEAN GE_is_special_of_reference_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_reference_encoded_type(a_type) GE_is_special_of_reference_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_reference_object(obj) GE_is_special_of_reference_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of reference type or basic expanded type?
 * (Note that user-defined expanded types are excluded.)
 */
extern EIF_BOOLEAN GE_is_special_of_reference_or_basic_expanded_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_reference_or_basic_expanded_encoded_type(a_type) GE_is_special_of_reference_or_basic_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_reference_or_basic_expanded_object(obj) GE_is_special_of_reference_or_basic_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a TUPLE type?
 */
#define GE_is_tuple_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_TUPLE)
#define GE_is_tuple_encoded_type(a_type) GE_is_tuple_type_index(GE_decoded_type(a_type).id)
#define GE_is_tuple_object(obj) GE_is_tuple_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' an expanded type?
 */
#define GE_is_expanded_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_EXPANDED)
#define GE_is_expanded_encoded_type(a_type) GE_is_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_expanded_object(obj) GE_is_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a type whose base class is deferred?
 */
#define GE_is_deferred_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_DEFERRED)
#define GE_is_deferred_encoded_type(a_type) GE_is_deferred_type_index(GE_decoded_type(a_type).id)

/*
 * Does `i'-th field of `a_object + a_physical_offset' (which is expected to be reference)
 * denote a reference with copy semantics?
 */
extern EIF_BOOLEAN GE_is_copy_semantics_field(EIF_INTEGER i, EIF_POINTER a_object, EIF_INTEGER a_physical_offset);

/*
 * Does `i'-th item of special `a_object' (which is expected to be reference)
 * denote a reference with copy semantics?
 */
extern EIF_BOOLEAN GE_is_special_copy_semantics_item(EIF_INTEGER i, EIF_POINTER a_object);

/*
 * Generator class name of `a_type'.
 */
extern EIF_REFERENCE GE_generator_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generator_of_encoded_type(a_type) GE_generator_of_type_index(GE_decoded_type(a_type).id)

/*
 * Full name of `a_type'.
 */
extern EIF_REFERENCE GE_generating_type_of_encoded_type(EIF_ENCODED_TYPE a_type);

/*
 * Encoded type whose name is `a_name'.
 * -1 if no such type.
 */
extern EIF_ENCODED_TYPE GE_encoded_type_from_name(EIF_POINTER a_name);

/*
 * Does `a_type_1' conform to `a_type_2'?
 */
extern EIF_BOOLEAN GE_encoded_type_conforms_to(EIF_ENCODED_TYPE a_type_1, EIF_ENCODED_TYPE a_type_2);

/*
 * Number of generic parameters.
 */
extern EIF_INTEGER GE_generic_parameter_count_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generic_parameter_count_of_encoded_type(a_type) GE_generic_parameter_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Type of `i'-th generic parameter of `a_type'.
 */
extern EIF_INTEGER GE_generic_parameter_of_type_index(EIF_TYPE_INDEX a_type, EIF_INTEGER i);
#define GE_generic_parameter_of_encoded_type(a_type,i) GE_generic_parameter_of_type_index(GE_decoded_type(a_type).id, (i))

/*
 * Number of fields of an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_count_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_field_count_of_encoded_type(a_type) GE_field_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Physical offset of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_offset_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_offset_of_encoded_type(i, a_type) GE_field_offset_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Name of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_POINTER GE_field_name_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_name_of_encoded_type(i, a_type) GE_field_name_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Static type of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_static_type_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_static_type_of_encoded_type(i, a_type) GE_field_static_type_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Kind of type of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_type_kind_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_type_kind_of_encoded_type(i, a_type) GE_field_type_kind_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Physical size of `a_object'.
 */
extern EIF_NATURAL_64 GE_object_size(EIF_POINTER a_object);

/*
 * Is `i'-th field of objects of type `a_type' a user-defined expanded attribute?
 */
extern EIF_BOOLEAN GE_is_field_expanded_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_is_field_expanded_of_encoded_type(i, a_type) GE_is_field_expanded_of_type_index((i), GE_decoded_type(a_type).id)

#define GE_field_address_at(a_field_offset, a_object, a_physical_offset) ((char*)(a_object) + (a_physical_offset) + (a_field_offset))
#define GE_object_at_offset(a_enclosing, a_physical_offset) (EIF_REFERENCE)(GE_field_address_at(0, (a_enclosing), (a_physical_offset)))
#define GE_raw_object_at_offset(a_enclosing, a_physical_offset) (EIF_POINTER)(GE_field_address_at(0, (a_enclosing), (a_physical_offset)))
#define GE_object_encoded_type_at_offset(a_enclosing, a_physical_offset) GE_object_encoded_type(GE_raw_object_at_offset((a_enclosing), (a_physical_offset)))
#define GE_boolean_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_BOOLEAN*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_character_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_CHARACTER_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_character_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_CHARACTER_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_16_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_16*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_16_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_16*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_pointer_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_POINTER*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_real_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REAL_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_real_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REAL_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_raw_reference_field_at(a_field_offset, a_object, a_physical_offset) (EIF_POINTER)*(EIF_REFERENCE*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_reference_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REFERENCE*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_set_boolean_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_boolean_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_character_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_character_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_character_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_character_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_16_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_16_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_16_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_16_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_pointer_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_pointer_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_real_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_real_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_real_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_real_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_reference_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_reference_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value

#if defined(GE_USE_ATTRIBUTES) && defined(GE_USE_ATTRIBUTE_OFFSET)
#define GE_field_address(i, a_object, a_physical_offset) GE_field_address_at(GE_type_infos[((EIF_REFERENCE)(a_object))->id].attributes[(i) - 1]->offset, (a_object), (a_physical_offset))
#define GE_boolean_field(i, a_object, a_physical_offset) *(EIF_BOOLEAN*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_character_8_field(i, a_object, a_physical_offset) *(EIF_CHARACTER_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_character_32_field(i, a_object, a_physical_offset) *(EIF_CHARACTER_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_8_field(i, a_object, a_physical_offset) *(EIF_INTEGER_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_16_field(i, a_object, a_physical_offset) *(EIF_INTEGER_16*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_32_field(i, a_object, a_physical_offset) *(EIF_INTEGER_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_64_field(i, a_object, a_physical_offset) *(EIF_INTEGER_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_8_field(i, a_object, a_physical_offset) *(EIF_NATURAL_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_16_field(i, a_object, a_physical_offset) *(EIF_NATURAL_16*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_32_field(i, a_object, a_physical_offset) *(EIF_NATURAL_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_64_field(i, a_object, a_physical_offset) *(EIF_NATURAL_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_pointer_field(i, a_object, a_physical_offset) *(EIF_POINTER*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_real_32_field(i, a_object, a_physical_offset) *(EIF_REAL_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_real_64_field(i, a_object, a_physical_offset) *(EIF_REAL_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_reference_field(i, a_object, a_physical_offset) *(EIF_REFERENCE*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_set_boolean_field(i, a_object, a_physical_offset, a_value) GE_boolean_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_character_8_field(i, a_object, a_physical_offset, a_value) GE_character_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_character_32_field(i, a_object, a_physical_offset, a_value) GE_character_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_8_field(i, a_object, a_physical_offset, a_value) GE_integer_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_16_field(i, a_object, a_physical_offset, a_value) GE_integer_16_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_32_field(i, a_object, a_physical_offset, a_value) GE_integer_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_64_field(i, a_object, a_physical_offset, a_value) GE_integer_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_8_field(i, a_object, a_physical_offset, a_value) GE_natural_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_16_field(i, a_object, a_physical_offset, a_value) GE_natural_16_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_32_field(i, a_object, a_physical_offset, a_value) GE_natural_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_64_field(i, a_object, a_physical_offset, a_value) GE_natural_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_pointer_field(i, a_object, a_physical_offset, a_value) GE_pointer_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_real_32_field(i, a_object, a_physical_offset, a_value) GE_real_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_real_64_field(i, a_object, a_physical_offset, a_value) GE_real_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_reference_field(i, a_object, a_physical_offset, a_value) GE_reference_field((i), (a_object), (a_physical_offset)) = (a_value)
#else
#define GE_boolean_field(i, a_object, a_physical_offset) (EIF_BOOLEAN)0
#define GE_character_8_field(i, a_object, a_physical_offset) (EIF_CHARACTER_8)0
#define GE_character_32_field(i, a_object, a_physical_offset) (EIF_CHARACTER_32)0
#define GE_integer_8_field(i, a_object, a_physical_offset) (EIF_INTEGER_8)0
#define GE_integer_16_field(i, a_object, a_physical_offset) (EIF_INTEGER_16)0
#define GE_integer_32_field(i, a_object, a_physical_offset) (EIF_INTEGER_32)0
#define GE_integer_64_field(i, a_object, a_physical_offset) (EIF_INTEGER_64)0
#define GE_natural_8_field(i, a_object, a_physical_offset) (EIF_NATURAL_8)0
#define GE_natural_16_field(i, a_object, a_physical_offset) (EIF_NATURAL_16)0
#define GE_natural_32_field(i, a_object, a_physical_offset) (EIF_NATURAL_32)0
#define GE_natural_64_field(i, a_object, a_physical_offset) (EIF_NATURAL_64)0
#define GE_pointer_field(i, a_object, a_physical_offset) (EIF_POINTER)0
#define GE_real_32_field(i, a_object, a_physical_offset) (EIF_REAL_32)0
#define GE_real_64_field(i, a_object, a_physical_offset) (EIF_REAL_64)0
#define GE_reference_field(i, a_object, a_physical_offset) (EIF_REFERENCE)0
#define GE_set_boolean_field(i, a_object, a_physical_offset, a_value)
#define GE_set_character_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_character_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_16_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_16_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_pointer_field(i, a_object, a_physical_offset, a_value)
#define GE_set_real_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_real_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_reference_field(i, a_object, a_physical_offset, a_value)
#endif

/*
 * Number of non-transient fields of an object of dynamic type `a_type'.
 * TODO: storable not implemented yet.
 */
#define GE_persistent_field_count_of_type_index(a_type) GE_field_count_of_type_index(a_type)
#define GE_persistent_field_count_of_encoded_type(a_type) GE_persistent_field_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Is `i'-th field of objects of type `a_type' a transient field?
 * TODO: storable not implemented yet.
 */
#define GE_is_field_transient_of_type_index(i, a_type) EIF_FALSE
#define GE_is_field_transient_of_encoded_type(i, a_type) GE_is_field_transient_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Storable version of objects of type `a_type'.
 * TODO: storable not implemented yet.
 */
#define GE_storable_version_of_type_index(a_type) EIF_VOID
#define GE_storable_version_of_encoded_type(a_type) GE_storable_version_of_type_index(GE_decoded_type(a_type).id)

/*
 * Get a lock on `GE_mark_object' and `GE_unmark_object' routines so that
 * 2 threads cannot `GE_mark_object' and `GE_unmark_object' at the same time.
 */
extern void GE_lock_marking(void);

/*
 * Release a lock on `GE_mark_object' and `GE_unmark_object', so that another
 * thread can use `GE_mark_object' and `GE_unmark_object'.
 */
extern void GE_unlock_marking(void);

/*
 * Is `obj' marked?
 */
extern EIF_BOOLEAN GE_is_object_marked(EIF_POINTER obj);

/*
 * Mark `obj'.
 */
extern void GE_mark_object(EIF_POINTER obj);

/*
 * Unmark `obj'.
 */
extern void GE_unmark_object(EIF_POINTER obj);

/*
 * New instance of dynamic `a_type'.
 * Note: returned object is not initialized and may
 * hence violate its invariant.
 * `a_type' cannot represent a SPECIAL type, use
 * `GE_new_special_instance_of_special_type_index' instead.
 */
extern EIF_REFERENCE GE_new_instance_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_new_instance_of_encoded_type(a_type) GE_new_instance_of_type_index(GE_decoded_type(a_type).id)

/*
 * New instance of dynamic `a_type' that represents
 * a SPECIAL with can contain `a_capacity' element. To create a SPECIAL of
 * basic type, use `SPECIAL'.
 */
extern EIF_REFERENCE GE_new_special_any_instance_of_type_index(EIF_TYPE_INDEX a_type, EIF_INTEGER a_capacity);
#define GE_new_special_any_instance_of_encoded_type(a_type, a_capacity) GE_new_special_instance_of_type_index(GE_decoded_type(a_type).id, (a_capacity))

/*
 * New instance of tuple of type `a_type'.
 * Note: returned object is not initialized and may
 * hence violate its invariant.
 */
#define GE_new_tuple_instance_of_type_index(a_type) GE_new_instance_of_type_index(a_type)
#define GE_new_tuple_instance_of_encoded_type(a_type) GE_new_tuple_instance_of_type_index(GE_decoded_type(a_type).id)

/*
 * New instance of TYPE for object of type `a_type'.
 */
extern EIF_REFERENCE GE_new_type_instance_of_encoded_type(EIF_ENCODED_TYPE a_type);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to manipulate strings"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_STRING_H
#define GE_STRING_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * New Eiffel empty string of type "STRING_8" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_str8(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "STRING_32" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_str32(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "IMMUTABLE_STRING_32" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_istr32(EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_8" containing the
 * first `c' characters found in ASCII string `s'.
 */
extern EIF_REFERENCE GE_ms8(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_8" containing all
 * characters found in the null-terminated ASCII string `s'.
 */
extern EIF_REFERENCE GE_str8(const char* s);

/*
 * New Eiffel string of type "STRING_32" containing the
 * first `c' characters found in ASCII string `s'.
 */
extern EIF_REFERENCE GE_ms32(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_32" containing all
 * characters found in the null-terminated ASCII string `s'.
 */
extern EIF_REFERENCE GE_str32(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing
 * the first `c' characters found in ASCII string `s'.
 */
extern EIF_REFERENCE GE_ims32(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing all
 * characters found in the null-terminated ASCII string `s'.
 */
extern EIF_REFERENCE GE_istr32(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing the
 * first `n' native characters found in native string `s'.
 * Invalid native characters are escaped.
 */
extern EIF_REFERENCE GE_ims32_from_nstr(EIF_NATIVE_CHAR* s, EIF_INTEGER n);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing all
 * characters found in the null-terminated native string `s'.
 * Invalid native characters are escaped.
 */
extern EIF_REFERENCE GE_istr32_from_nstr(EIF_NATIVE_CHAR* s);

/*
 * New Eiffel string of type "STRING" containing all
 * characters found in the null-terminated ASCII string `s'
 */
extern EIF_REFERENCE GE_str(const char* s);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_CONSOLE_H
#define GE_CONSOLE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Initialize mutex to determine whether a new
 * console needs to be created.
 */
#ifdef EIF_WINDOWS
extern void GE_init_console(void);
#else
#define GE_init_console()
#endif

/*
 * Create a new DOS console if needed (i.e. in case of a Windows application).
 */
#ifdef EIF_WINDOWS
extern void GE_show_console(void);
#else
#define GE_show_console()
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement the program initialization"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_MAIN_H
#define GE_MAIN_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_main(int argc, EIF_NATIVE_CHAR** argv);

/*
 * System name.
 */
extern char* GE_system_name;

/*
 * Root class name.
 */
extern char* GE_root_class_name;

#ifdef EIF_WINDOWS

#include <windows.h>

/*
 * Used in WEL.
 */
extern HINSTANCE eif_hInstance;
extern HINSTANCE eif_hPrevInstance;
extern LPWSTR eif_lpCmdLine;
extern int eif_nCmdShow;

/*
 * Main entry point when compiling a Windows application.
 * See:
 *    http://en.wikipedia.org/wiki/WinMain
 *    http://msdn2.microsoft.com/en-us/library/ms633559.aspx
 */
extern int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow);

#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to access garbage collector facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_GC_H
#define GE_GC_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef GE_USE_BOEHM_GC
/*
 *	Use the Boehm garbage collector.
 *	See:
 *		http://en.wikipedia.org/wiki/Boehm_GC
 *		http://www.hpl.hp.com/personal/Hans_Boehm/gc/
 */
#define GC_IGNORE_WARN
#ifdef GE_USE_THREADS
#define GC_THREADS
#undef GC_NO_THREAD_REDIRECTS
#endif
#include "gc.h"
#endif

/*
 * GC initialization.
 */

#ifdef GE_USE_BOEHM_GC
#ifdef GE_USE_THREADS
#define GE_init_gc() \
	GC_INIT(); \
	GC_allow_register_threads(); \
	GC_enable_incremental()
#else
#define GE_init_gc() \
	GC_INIT(); \
	GC_enable_incremental()
#endif
#else /* No GC */
#define GE_init_gc() /* do nothing */
#endif

/*
 * Memory allocation.
 */

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc(size) GE_null(GC_MALLOC(size))
#else /* No GC */
#define GE_malloc(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc(size) GC_MALLOC(size)
#else /* No GC */
#define GE_unprotected_malloc(size) malloc(size)
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc_atomic(size) GE_null(GC_MALLOC_ATOMIC(size))
#else /* No GC */
#define GE_malloc_atomic(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_atomic(size) GC_MALLOC_ATOMIC(size)
#else /* No GC */
#define GE_unprotected_malloc_atomic(size) malloc(size)
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_calloc(nelem, elsize) GE_null(GC_MALLOC((nelem) * (elsize)))
#else /* No GC */
#define GE_calloc(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_calloc(nelem, elsize) GC_MALLOC((nelem) * (elsize))
#else /* No GC */
#define GE_unprotected_calloc(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_calloc_atomic(nelem, elsize) memset(GE_null(GC_MALLOC_ATOMIC((nelem) * (elsize))), 0, (nelem) * (elsize))
#else /* No GC */
#define GE_calloc(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc_uncollectable(size) GE_null(GC_MALLOC_UNCOLLECTABLE(size))
#else /* No GC */
#define GE_malloc_uncollectable(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_uncollectable(size) GC_MALLOC_UNCOLLECTABLE(size)
#else /* No GC */
#define GE_unprotected_malloc_uncollectable(size) malloc(size)
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc_atomic_uncollectable(size) GE_null(GC_malloc_atomic_uncollectable(size))
#else /* No GC */
#define GE_malloc_atomic_uncollectable(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_atomic_uncollectable(size) GC_malloc_atomic_uncollectable(size)
#else /* No GC */
#define GE_unprotected_malloc_atomic_uncollectable(size) malloc(size)
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_calloc_uncollectable(nelem, elsize) GE_null(GC_MALLOC_UNCOLLECTABLE((nelem) * (elsize)))
#else /* No GC */
#define GE_calloc_uncollectable(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_calloc_uncollectable(nelem, elsize) GC_MALLOC_UNCOLLECTABLE((nelem) * (elsize))
#else /* No GC */
#define GE_unprotected_calloc_uncollectable(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_calloc_atomic_uncollectable(nelem, elsize) memset(GE_null(GC_malloc_atomic_uncollectable((nelem) * (elsize))), 0, (nelem) * (elsize))
#else /* No GC */
#define GE_calloc_atomic_uncollectable(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
extern void* GE_unprotected_calloc_atomic_uncollectable(size_t nelem, size_t elsize);
#else /* No GC */
#define GE_unprotected_calloc_atomic_uncollectable(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is not necessarily zeroed.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_realloc(p, size) GE_null(GC_REALLOC((p), (size)))
#else /* No GC */
#define GE_realloc(p, size) GE_null(realloc((p), (size)))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is not necessarily zeroed.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_realloc(p, size) GC_REALLOC((p), (size))
#else /* No GC */
#define GE_unprotected_realloc(p, size) realloc((p), (size))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * Raise an exception when no-more-memory.
 */
extern void* GE_recalloc(void* p, size_t old_nelem, size_t new_nelem, size_t elsize);

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * Do not raise an exception when no-more-memory.
 */
extern void* GE_unprotected_recalloc(void* p, size_t old_nelem, size_t new_nelem, size_t elsize);

/*
 * Explicitly deallocate an object.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_free(p) GC_FREE(p)
#else /* No GC */
#define GE_free(p) free(p)
#endif

/*
 * When defined, `GE_malloc_cleared' means that `GE_malloc' and
 * `GE_malloc_uncollectable' make sure that the allocated memory
 * is zeroed.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc_cleared
#else /* No GC */
#endif

/*
 * When defined, `GE_malloc_atomic_cleared' means that `GE_malloc_atomic'
 * and `GE_malloc_atomic_uncollectable' make sure that the allocated memory
 * is zeroed.
 */
#ifdef GE_USE_BOEHM_GC
/* #define GE_malloc_atomic_cleared */
#else /* No GC */
#endif

/*
 * Dispose
 */

/*
 * Register dispose routine `disp' to be called on object `obj' when it will be collected.
 */
#ifdef GE_USE_BOEHM_GC
extern void GE_boehm_dispose(void* C, void* disp); /* Call dispose routine `disp' on object `C'. */
#define GE_register_dispose(obj, disp) GC_REGISTER_FINALIZER_NO_ORDER((void*)(obj), (void (*) (void*, void*)) &GE_boehm_dispose, NULL, NULL, NULL)
#else /* No GC */
#define GE_register_dispose(obj, disp) /* do nothing */
#endif

/*
 * Access to objects, useful with GCs which move objects in memory.
 * This is not the case here, since the Boehm GC is not a moving GC.
 */

/* Access object through hector. */
#define eif_access(obj) (obj)
/* Freeze memory address. */
#define eif_freeze(obj) (obj)
/* The C side adopts an object. */
#define eif_adopt(obj) (obj)
/* The C side protects an object. */
#define eif_protect(obj) (obj)
/* The C side weans adopted object. */
#define eif_wean(obj) (obj)
/* Forget a frozen memory address. */
#define eif_unfreeze(obj)
/* Always frozen since they do not move. */
#define eif_frozen(obj) 1
/* Always frozen since they do not move. */
#define spfrozen(obj) 1

#endif

/*
	description:

		"C functions used to implement class IDENTIFIED"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_IDENTIFIED_H
#define GE_IDENTIFIED_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Initialize data to keep track of object ids.
 */
extern void GE_init_identified(void);

/*
 * Get a new id for `object', assuming it is NOT in the stack.
 */
extern EIF_INTEGER_32 GE_object_id(EIF_OBJECT object);

/*
 * Return the object associated with `id'.
 */
extern EIF_REFERENCE GE_id_object(EIF_INTEGER_32 id);

/*
 * Remove the object associated with `id' from the stack.
 */
extern void GE_object_id_free(EIF_INTEGER_32 id);

#ifdef __cplusplus
}
#endif

#endif

#ifdef __cplusplus
extern "C" {
#endif

#define T0 EIF_ANY

/* CHARACTER */
#define EIF_CHARACTER EIF_CHARACTER_8

/* WIDE_CHARACTER */
#define EIF_WIDE_CHAR EIF_CHARACTER_32

/* INTEGER */
#define EIF_INTEGER EIF_INTEGER_32

/* NATURAL */
#define EIF_NATURAL EIF_NATURAL_32

/* REAL */
#define EIF_REAL EIF_REAL_32

/* DOUBLE */
#define EIF_DOUBLE EIF_REAL_64

/* BOOLEAN */
#define T1 EIF_BOOLEAN
extern T0* GE_boxed1(T1 a1);
typedef struct Sb1 Tb1;

/* CHARACTER_8 */
#define T2 EIF_CHARACTER_8
extern T0* GE_boxed2(T2 a1);
typedef struct Sb2 Tb2;

/* CHARACTER_32 */
#define T3 EIF_CHARACTER_32
extern T0* GE_boxed3(T3 a1);
typedef struct Sb3 Tb3;

/* INTEGER_8 */
#define T4 EIF_INTEGER_8
extern T0* GE_boxed4(T4 a1);
typedef struct Sb4 Tb4;

/* INTEGER_16 */
#define T5 EIF_INTEGER_16
extern T0* GE_boxed5(T5 a1);
typedef struct Sb5 Tb5;

/* INTEGER_32 */
#define T6 EIF_INTEGER_32
extern T0* GE_boxed6(T6 a1);
typedef struct Sb6 Tb6;

/* INTEGER_64 */
#define T7 EIF_INTEGER_64
extern T0* GE_boxed7(T7 a1);
typedef struct Sb7 Tb7;

/* NATURAL_8 */
#define T8 EIF_NATURAL_8
extern T0* GE_boxed8(T8 a1);
typedef struct Sb8 Tb8;

/* NATURAL_16 */
#define T9 EIF_NATURAL_16
extern T0* GE_boxed9(T9 a1);
typedef struct Sb9 Tb9;

/* NATURAL_32 */
#define T10 EIF_NATURAL_32
extern T0* GE_boxed10(T10 a1);
typedef struct Sb10 Tb10;

/* NATURAL_64 */
#define T11 EIF_NATURAL_64
extern T0* GE_boxed11(T11 a1);
typedef struct Sb11 Tb11;

/* REAL_32 */
#define T12 EIF_REAL_32
extern T0* GE_boxed12(T12 a1);
typedef struct Sb12 Tb12;

/* REAL_64 */
#define T13 EIF_REAL_64
extern T0* GE_boxed13(T13 a1);
typedef struct Sb13 Tb13;

/* POINTER */
#define T14 EIF_POINTER
extern T0* GE_boxed14(T14 a1);
typedef struct Sb14 Tb14;

/* SPECIAL [CHARACTER_8] */
typedef struct S15 T15;

/* SPECIAL [CHARACTER_32] */
typedef struct S16 T16;

/* STRING_8 */
typedef struct S17 T17;

/* STRING_32 */
typedef struct S18 T18;

/* IMMUTABLE_STRING_32 */
typedef struct S19 T19;

/* ISE_EXCEPTION_MANAGER */
typedef struct S20 T20;

/* GEC */
typedef struct S25 T25;

/* [attached] CELL [detachable EXCEPTION] */
typedef struct S26 T26;

/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32] */
typedef struct S27 T27;

/* [attached] CELL [detachable TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN]] */
typedef struct S28 T28;

/* [attached] CELL [[attached] NO_MORE_MEMORY] */
typedef struct S29 T29;

/* C_STRING */
typedef struct S31 T31;

/* [attached] TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN] */
typedef struct S32 T32;

/* KL_TEXT_INPUT_FILE */
typedef struct S33 T33;

/* KL_ARGUMENTS */
typedef struct S34 T34;

/* ET_ISE_VARIABLES */
typedef struct S35 T35;

/* ET_ERROR_HANDLER */
typedef struct S36 T36;

/* KL_STRING_ROUTINES */
typedef struct S38 T38;

/* ET_SYSTEM */
typedef struct S40 T40;

/* KL_EXCEPTIONS */
typedef struct S41 T41;

/* AP_PARSER */
typedef struct S42 T42;

/* AP_ALTERNATIVE_OPTIONS_LIST */
typedef struct S43 T43;

/* AP_STRING_OPTION */
typedef struct S44 T44;

/* AP_FLAG */
typedef struct S46 T46;

/* AP_ENUMERATION_OPTION */
typedef struct S47 T47;

/* AP_BOOLEAN_OPTION */
typedef struct S48 T48;

/* AP_INTEGER_OPTION */
typedef struct S49 T49;

/* ET_NULL_ERROR_HANDLER */
typedef struct S53 T53;

/* ET_XACE_SYSTEM_PARSER */
typedef struct S55 T55;

/* ET_XACE_DEFAULT_ERROR_HANDLER */
typedef struct S56 T56;

/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8] */
typedef struct S57 T57;

/* UC_STRING_EQUALITY_TESTER */
typedef struct S58 T58;

/* ET_ECF_VARIABLES */
typedef struct S61 T61;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8] */
typedef struct S62 T62;

/* ET_ECF_SYSTEM_PARSER */
typedef struct S66 T66;

/* ET_ECF_ERROR_HANDLER */
typedef struct S67 T67;

/* ET_ECF_SYSTEM */
typedef struct S69 T69;

/* ET_ECF_TARGET */
typedef struct S70 T70;

/* ET_ECF_SETTINGS */
typedef struct S71 T71;

/* ET_LACE_PARSER */
typedef struct S77 T77;

/* ET_LACE_ERROR_HANDLER */
typedef struct S78 T78;

/* ET_DYNAMIC_SYSTEM */
typedef struct S80 T80;

/* ET_SYSTEM_PROCESSOR */
typedef struct S81 T81;

/* ET_C_GENERATOR */
typedef struct S84 T84;

/* KL_SHELL_COMMAND */
typedef struct S85 T85;

/* ET_SYSTEM_MULTIPROCESSOR */
typedef struct S87 T87;

/* UT_VERSION */
typedef struct S88 T88;

/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
typedef struct S91 T91;

/* ET_CLASS_TYPE */
typedef struct S93 T93;

/* ET_TOKEN_CONSTANTS */
typedef struct S94 T94;

/* ET_CLASS */
typedef struct S95 T95;

/* KL_OPERATING_SYSTEM */
typedef struct S97 T97;

/* UT_CANNOT_READ_FILE_ERROR */
typedef struct S100 T100;

/* UT_VERSION_NUMBER */
typedef struct S102 T102;

/* UT_MESSAGE */
typedef struct S103 T103;

/* ET_ECF_CAPABILITIES */
typedef struct S106 T106;

/* KL_EXECUTION_ENVIRONMENT */
typedef struct S107 T107;

/* AP_ERROR */
typedef struct S108 T108;

/* [attached] DS_HASH_SET [[attached] STRING_8] */
typedef struct S109 T109;

/* VOID_TARGET */
typedef struct S112 T112;

/* [attached] TYPE [[attached] VOID_TARGET] */
#define T113 EIF_TYPE_OBJ

/* ROUTINE_FAILURE */
typedef struct S114 T114;

/* [attached] TYPE [[attached] ROUTINE_FAILURE] */
#define T115 EIF_TYPE_OBJ

/* OLD_VIOLATION */
typedef struct S116 T116;

/* [attached] TYPE [[attached] OLD_VIOLATION] */
#define T117 EIF_TYPE_OBJ

/* NO_MORE_MEMORY */
typedef struct S119 T119;

/* INVARIANT_VIOLATION */
typedef struct S120 T120;

/* OPERATING_SYSTEM_SIGNAL_FAILURE */
typedef struct S121 T121;

/* IO_FAILURE */
typedef struct S122 T122;

/* OPERATING_SYSTEM_FAILURE */
typedef struct S123 T123;

/* COM_FAILURE */
typedef struct S124 T124;

/* EIFFEL_RUNTIME_PANIC */
typedef struct S125 T125;

/* PRECONDITION_VIOLATION */
typedef struct S128 T128;

/* POSTCONDITION_VIOLATION */
typedef struct S129 T129;

/* FLOATING_POINT_FAILURE */
typedef struct S130 T130;

/* CHECK_VIOLATION */
typedef struct S131 T131;

/* BAD_INSPECT_VALUE */
typedef struct S132 T132;

/* VARIANT_VIOLATION */
typedef struct S133 T133;

/* LOOP_INVARIANT_VIOLATION */
typedef struct S134 T134;

/* RESCUE_FAILURE */
typedef struct S135 T135;

/* RESUMPTION_FAILURE */
typedef struct S136 T136;

/* CREATE_ON_DEFERRED */
typedef struct S137 T137;

/* EXTERNAL_FAILURE */
typedef struct S138 T138;

/* VOID_ASSIGNED_TO_EXPANDED */
typedef struct S139 T139;

/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
typedef struct S140 T140;

/* MISMATCH_FAILURE */
typedef struct S141 T141;

/* DEVELOPER_EXCEPTION */
typedef struct S142 T142;

/* ADDRESS_APPLIED_TO_MELTED_FEATURE */
typedef struct S143 T143;

/* SERIALIZATION_FAILURE */
typedef struct S144 T144;

/* EXECUTION_ENVIRONMENT */
typedef struct S145 T145;

/* KL_WINDOWS_FILE_SYSTEM */
typedef struct S146 T146;

/* KL_UNIX_FILE_SYSTEM */
typedef struct S147 T147;

/* PRIMES */
typedef struct S148 T148;

/* [attached] SPECIAL [[attached] INTEGER_32] */
typedef struct S149 T149;

/* [attached] SPECIAL [[attached] BOOLEAN] */
typedef struct S150 T150;

/* MANAGED_POINTER */
typedef struct S154 T154;

/* [attached] KL_LINKABLE [[attached] CHARACTER_8] */
typedef struct S155 T155;

/* FILE_INFO */
typedef struct S157 T157;

/* MUTEX */
typedef struct S158 T158;

/* UT_ERROR_HANDLER */
typedef struct S159 T159;

/* KL_STANDARD_FILES */
typedef struct S160 T160;

/* KL_STDERR_FILE */
typedef struct S161 T161;

/* KL_STDOUT_FILE */
typedef struct S162 T162;

/* UC_STRING */
typedef struct S163 T163;

/* KL_ANY_ROUTINES */
typedef struct S164 T164;

/* ST_WORD_WRAPPER */
typedef struct S166 T166;

/* AP_DISPLAY_HELP_FLAG */
typedef struct S168 T168;

/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION] */
typedef struct S169 T169;

/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S170 T170;

/* [attached] DS_ARRAYED_LIST [[attached] STRING_8] */
typedef struct S171 T171;

/* AP_ERROR_HANDLER */
typedef struct S172 T172;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION] */
typedef struct S175 T175;

/* [attached] DS_ARRAYED_LIST [detachable STRING_8] */
typedef struct S176 T176;

/* [attached] DS_ARRAYED_LIST_CURSOR [detachable STRING_8] */
typedef struct S177 T177;

/* [attached] DS_LINKED_LIST [[attached] STRING_8] */
typedef struct S178 T178;

/* KL_STRING_EQUALITY_TESTER */
typedef struct S179 T179;

/* [attached] DS_LINKED_LIST [[attached] BOOLEAN] */
typedef struct S182 T182;

/* [attached] DS_LINKED_LIST [[attached] INTEGER_32] */
typedef struct S185 T185;

/* KL_NULL_TEXT_OUTPUT_STREAM */
typedef struct S186 T186;

/* ET_XACE_AST_FACTORY */
typedef struct S187 T187;

/* XM_DOCUMENT */
typedef struct S188 T188;

/* XM_ELEMENT */
typedef struct S189 T189;

/* XM_TREE_CALLBACKS_PIPE */
typedef struct S192 T192;

/* XM_STOP_ON_ERROR_FILTER */
typedef struct S193 T193;

/* XM_CALLBACKS_TO_TREE_FILTER */
typedef struct S194 T194;

/* ET_XACE_VALIDATOR */
typedef struct S195 T195;

/* ET_XACE_PREPROCESSOR */
typedef struct S196 T196;

/* ET_XACE_SYSTEM */
typedef struct S197 T197;

/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8] */
typedef struct S198 T198;

/* XM_EXPAT_PARSER_FACTORY */
typedef struct S199 T199;

/* XM_EIFFEL_PARSER */
typedef struct S200 T200;

/* ET_XACE_LIBRARY_CONFIG_PARSER */
typedef struct S203 T203;

/* attached KL_EQUALITY_TESTER [[attached] STRING_8] */
typedef struct S206 T206;

/* [attached] KL_SPECIAL_ROUTINES [[attached] STRING_8] */
typedef struct S207 T207;

/* [attached] SPECIAL [[attached] STRING_8] */
typedef struct S208 T208;

/* [attached] KL_SPECIAL_ROUTINES [[attached] INTEGER_32] */
typedef struct S209 T209;

/* [attached] KL_AGENT_HASH_FUNCTION [[attached] STRING_8] */
typedef struct S210 T210;

/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
typedef struct S212 T212;

/* [attached] TUPLE [[attached] STRING_8] */
typedef struct S213 T213;

/* [attached] FUNCTION [[attached] TUPLE [[attached] STRING_8], [attached] INTEGER_32] */
typedef struct S214 T214;

/* [attached] TUPLE */
typedef struct S216 T216;

/* [attached] TUPLE [KL_STRING_ROUTINES] */
typedef struct S217 T217;

/* ET_ECF_AST_FACTORY */
typedef struct S219 T219;

/* [attached] DS_CELL [detachable ET_ECF_SYSTEM] */
typedef struct S220 T220;

/* [attached] TUPLE [[attached] ET_ECF_TARGET] */
typedef struct S221 T221;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_TARGET]] */
typedef struct S222 T222;

/* [attached] TUPLE [ET_ECF_SYSTEM_PARSER] */
typedef struct S223 T223;

/* [attached] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8] */
typedef struct S225 T225;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8]] */
typedef struct S226 T226;

/* [attached] TUPLE [ET_ECF_SYSTEM_PARSER, detachable STRING_8, [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_TARGET]], [attached] DS_CELL [detachable ET_ECF_SYSTEM]] */
typedef struct S227 T227;

/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8] */
typedef struct S229 T229;

/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8] */
typedef struct S230 T230;

/* ET_ECF_STATE */
typedef struct S231 T231;

/* ET_IDENTIFIER */
typedef struct S232 T232;

/* ET_ECF_SYSTEM_CONFIG */
typedef struct S233 T233;

/* ET_ECF_LIBRARY */
typedef struct S236 T236;

/* ET_ADAPTED_LIBRARIES */
typedef struct S237 T237;

/* [attached] TUPLE [[attached] ET_ADAPTED_LIBRARY] */
typedef struct S239 T239;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_LIBRARY]] */
typedef struct S240 T240;

/* ET_COMPRESSED_POSITION */
typedef struct S241 T241;

/* XM_ATTRIBUTE */
typedef struct S245 T245;

/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8] */
typedef struct S247 T247;

/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8] */
typedef struct S248 T248;

/* [attached] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
typedef struct S250 T250;

/* [attached] TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_INTERNAL_UNIVERSE, [attached] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
typedef struct S253 T253;

/* ET_ECF_TARGETS */
typedef struct S255 T255;

/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
typedef struct S256 T256;

/* [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
typedef struct S257 T257;

/* [attached] DS_CELL [detachable ET_ECF_LIBRARY] */
typedef struct S259 T259;

/* ET_ECF_ADAPTED_LIBRARY */
typedef struct S260 T260;

/* [attached] TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_ADAPTED_LIBRARY, [attached] DS_CELL [detachable ET_ECF_LIBRARY]] */
typedef struct S261 T261;

/* ET_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S264 T264;

/* ET_ECF_DOTNET_ASSEMBLY */
typedef struct S265 T265;

/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
typedef struct S267 T267;

/* ET_ECF_ERROR */
typedef struct S268 T268;

/* ET_LACE_AST_FACTORY */
typedef struct S269 T269;

/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER] */
typedef struct S270 T270;

/* YY_FILE_BUFFER */
typedef struct S271 T271;

/* YY_BUFFER */
typedef struct S272 T272;

/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER] */
typedef struct S273 T273;

/* [attached] SPECIAL [detachable ANY] */
typedef struct S279 T279;

/* [attached] KL_SPECIAL_ROUTINES [detachable ANY] */
typedef struct S280 T280;

/* [attached] SPECIAL [[attached] ET_IDENTIFIER] */
typedef struct S281 T281;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER] */
typedef struct S282 T282;

/* ET_LACE_SYSTEM */
typedef struct S283 T283;

/* ET_LACE_CLUSTERS */
typedef struct S285 T285;

/* ET_LACE_CLUSTER */
typedef struct S286 T286;

/* ET_LACE_EXCLUDE */
typedef struct S288 T288;

/* ET_LACE_DOTNET_ASSEMBLY */
typedef struct S290 T290;

/* [attached] SPECIAL [[attached] ET_LACE_SYSTEM] */
typedef struct S291 T291;

/* [attached] SPECIAL [detachable ET_LACE_CLUSTERS] */
typedef struct S292 T292;

/* [attached] SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
typedef struct S293 T293;

/* [attached] SPECIAL [detachable ET_IDENTIFIER] */
typedef struct S294 T294;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_SYSTEM] */
typedef struct S295 T295;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER] */
typedef struct S296 T296;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS] */
typedef struct S297 T297;

/* [attached] SPECIAL [[attached] ET_LACE_CLUSTERS] */
typedef struct S298 T298;

/* [attached] SPECIAL [[attached] ET_LACE_CLUSTER] */
typedef struct S299 T299;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTERS] */
typedef struct S300 T300;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTER] */
typedef struct S301 T301;

/* [attached] SPECIAL [detachable ET_LACE_EXCLUDE] */
typedef struct S302 T302;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE] */
typedef struct S303 T303;

/* [attached] SPECIAL [[attached] ET_LACE_EXCLUDE] */
typedef struct S304 T304;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_EXCLUDE] */
typedef struct S305 T305;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
typedef struct S306 T306;

/* [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLIES] */
typedef struct S307 T307;

/* [attached] SPECIAL [[attached] ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S308 T308;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLIES] */
typedef struct S309 T309;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S310 T310;

/* ET_LACE_DOTNET_GAC_ASSEMBLY */
typedef struct S311 T311;

/* KL_PLATFORM */
typedef struct S312 T312;

/* KL_INTEGER_ROUTINES */
typedef struct S313 T313;

/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME] */
typedef struct S314 T314;

/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE] */
typedef struct S315 T315;

/* [attached] TUPLE [[attached] ET_CLASS] */
typedef struct S316 T316;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]] */
typedef struct S317 T317;

/* [attached] TUPLE [INTEGER_32] */
typedef struct S318 T318;

/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
typedef struct S319 T319;

/* ET_DYNAMIC_TYPE */
typedef struct S320 T320;

/* [attached] TUPLE [ET_DYNAMIC_SYSTEM] */
typedef struct S321 T321;

/* ET_DYNAMIC_FEATURE */
typedef struct S332 T332;

/* ET_ACTUAL_PARAMETER_LIST */
typedef struct S333 T333;

/* ET_EXTERNAL_FUNCTION */
typedef struct S344 T344;

/* ET_TUPLE_TYPE */
typedef struct S345 T345;

/* ET_FORMAL_ARGUMENT_LIST */
typedef struct S347 T347;

/* [attached] ARRAY [[attached] ET_TYPE] */
typedef struct S348 T348;

/* [attached] SPECIAL [[attached] ET_TYPE] */
typedef struct S349 T349;

/* ET_FORMAL_ARGUMENT */
typedef struct S350 T350;

/* ET_QUERY_LIST */
typedef struct S351 T351;

/* ET_PROCEDURE_LIST */
typedef struct S352 T352;

/* DT_SHARED_SYSTEM_CLOCK */
typedef struct S353 T353;

/* DT_SYSTEM_CLOCK */
typedef struct S354 T354;

/* DT_DATE_TIME */
typedef struct S355 T355;

/* ET_EIFFEL_PREPARSER */
typedef struct S357 T357;

/* ET_MASTER_CLASS_CHECKER */
typedef struct S358 T358;

/* ET_EIFFEL_PARSER */
typedef struct S359 T359;

/* ET_PROVIDER_CHECKER */
typedef struct S360 T360;

/* ET_ANCESTOR_BUILDER */
typedef struct S361 T361;

/* ET_FEATURE_FLATTENER */
typedef struct S362 T362;

/* ET_INTERFACE_CHECKER */
typedef struct S363 T363;

/* ET_IMPLEMENTATION_CHECKER */
typedef struct S364 T364;

/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS] */
typedef struct S365 T365;

/* [attached] TUPLE [[attached] DS_ARRAYED_LIST [[attached] ET_CLASS]] */
typedef struct S366 T366;

/* ET_AST_NULL_PROCESSOR */
typedef struct S367 T367;

/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32] */
typedef struct S368 T368;

/* ET_AST_FACTORY */
typedef struct S369 T369;

/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
typedef struct S371 T371;

/* DT_DATE_TIME_DURATION */
typedef struct S372 T372;

/* ET_DYNAMIC_TYPE_SET_LIST */
typedef struct S373 T373;

/* KL_STRING_OUTPUT_STREAM */
typedef struct S374 T374;

/* [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER] */
typedef struct S375 T375;

/* [attached] DS_ARRAYED_LIST [detachable ET_DYNAMIC_TYPE] */
typedef struct S376 T376;

/* ET_DYNAMIC_TYPE_HASH_LIST */
typedef struct S377 T377;

/* ET_DYNAMIC_STANDALONE_TYPE_SET */
typedef struct S378 T378;

/* [attached] DS_ARRAYED_STACK [[attached] ET_EXPRESSION] */
typedef struct S379 T379;

/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION] */
typedef struct S380 T380;

/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32] */
typedef struct S381 T381;

/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
typedef struct S382 T382;

/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE] */
typedef struct S383 T383;

/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
typedef struct S384 T384;

/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST] */
typedef struct S385 T385;

/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S386 T386;

/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION] */
typedef struct S387 T387;

/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT] */
typedef struct S388 T388;

/* ET_EXPRESSION */
typedef struct S389 T389;

/* ET_CURRENT */
typedef struct S390 T390;

/* ET_ACTUAL_ARGUMENT_LIST */
typedef struct S391 T391;

/* ET_QUALIFIED_CALL_INSTRUCTION */
typedef struct S392 T392;

/* ET_QUALIFIED_CALL_EXPRESSION */
typedef struct S396 T396;

/* ET_UNQUALIFIED_CALL_EXPRESSION */
typedef struct S397 T397;

/* [attached] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S398 T398;

/* ET_MANIFEST_TUPLE */
typedef struct S399 T399;

/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S400 T400;

/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE] */
typedef struct S401 T401;

/* [attached] ARRAY [[attached] INTEGER_32] */
typedef struct S402 T402;

/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE] */
typedef struct S403 T403;

/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT] */
typedef struct S404 T404;

/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE] */
typedef struct S405 T405;

/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE] */
typedef struct S406 T406;

/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8] */
typedef struct S407 T407;

/* ET_IDENTIFIER_TESTER */
typedef struct S408 T408;

/* RX_PCRE_REGULAR_EXPRESSION */
typedef struct S410 T410;

/* KL_TEXT_OUTPUT_FILE */
typedef struct S411 T411;

/* ET_DYNAMIC_TUPLE_TYPE */
typedef struct S412 T412;

/* UT_CANNOT_WRITE_TO_FILE_ERROR */
typedef struct S413 T413;

/* ET_DYNAMIC_FEATURE_LIST */
typedef struct S414 T414;

/* ET_DYNAMIC_PRECURSOR */
typedef struct S416 T416;

/* ET_DYNAMIC_PRECURSOR_LIST */
typedef struct S418 T418;

/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE] */
typedef struct S419 T419;

/* ET_RESULT */
typedef struct S422 T422;

/* ET_DYNAMIC_QUALIFIED_QUERY_CALL */
typedef struct S424 T424;

/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
typedef struct S429 T429;

/* ET_OBJECT_TEST */
typedef struct S431 T431;

/* ET_OBJECT_EQUALITY_EXPRESSION */
typedef struct S432 T432;

/* ET_EQUALITY_EXPRESSION */
typedef struct S433 T433;

/* ET_DYNAMIC_SPECIAL_TYPE */
typedef struct S434 T434;

/* [attached] DS_QUICK_SORTER [[attached] ET_DYNAMIC_TYPE] */
typedef struct S438 T438;

/* ET_DYNAMIC_TYPE_COMPARATOR_BY_ID */
typedef struct S439 T439;

/* ET_CREATE_EXPRESSION */
typedef struct S444 T444;

/* ET_QUALIFIED_CALL */
typedef struct S445 T445;

/* [attached] ARRAY [[attached] STRING_8] */
typedef struct S449 T449;

/* KL_DIRECTORY */
typedef struct S451 T451;

/* UT_TEMPLATE_EXPANDER */
typedef struct S452 T452;

/* ET_EXTENDED_ATTRIBUTE */
typedef struct S454 T454;

/* ET_COMPOUND */
typedef struct S456 T456;

/* [attached] DS_QUICK_SORTER [[attached] INTEGER_32] */
typedef struct S464 T464;

/* ET_IMPLICIT_TYPE_MARK */
typedef struct S472 T472;

/* ET_SYMBOL */
typedef struct S474 T474;

/* [attached] PROCEDURE [[attached] TUPLE] */
typedef struct S475 T475;

/* [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S476 T476;

/* [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S477 T477;

/* [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S478 T478;

/* [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S479 T479;

/* UT_INTEGER_FORMATTER */
typedef struct S480 T480;

/* STD_FILES */
typedef struct S485 T485;

/* [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S487 T487;

/* [attached] TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
typedef struct S490 T490;

/* [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S491 T491;

/* ET_CONSTANT_ATTRIBUTE */
typedef struct S492 T492;

/* ET_UNIQUE_ATTRIBUTE */
typedef struct S494 T494;

/* ET_REGULAR_INTEGER_CONSTANT */
typedef struct S495 T495;

/* ET_ATTRIBUTE */
typedef struct S496 T496;

/* ET_LIKE_CURRENT */
typedef struct S498 T498;

/* NATIVE_STRING */
typedef struct S500 T500;

/* [attached] DS_ARRAYED_LIST [[attached] ET_SYSTEM_PROCESSOR] */
typedef struct S501 T501;

/* WORKER_THREAD */
typedef struct S502 T502;

/* [attached] TUPLE [ET_SYSTEM_PROCESSOR, [attached] DS_ARRAYED_LIST [[attached] ET_CLASS]] */
typedef struct S503 T503;

/* ET_FEATURE_CHECKER */
typedef struct S505 T505;

/* [attached] DS_CELL [[attached] INTEGER_32] */
typedef struct S506 T506;

/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE] */
typedef struct S507 T507;

/* ET_TYPE_CHECKER */
typedef struct S510 T510;

/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT] */
typedef struct S512 T512;

/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
typedef struct S513 T513;

/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
typedef struct S514 T514;

/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
typedef struct S515 T515;

/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT] */
typedef struct S516 T516;

/* ET_NESTED_TYPE_CONTEXT */
typedef struct S517 T517;

/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST] */
typedef struct S518 T518;

/* ET_OBJECT_TEST_SCOPE */
typedef struct S519 T519;

/* ET_OBJECT_TEST_SCOPE_BUILDER */
typedef struct S520 T520;

/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT] */
typedef struct S521 T521;

/* ET_ACROSS_CURSOR_SCOPE */
typedef struct S522 T522;

/* ET_ATTACHMENT_SCOPE */
typedef struct S523 T523;

/* ET_ATTACHMENT_SCOPE_BUILDER */
typedef struct S524 T524;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE] */
typedef struct S525 T525;

/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM] */
typedef struct S526 T526;

/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
typedef struct S527 T527;

/* ET_PRECONDITIONS */
typedef struct S529 T529;

/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE] */
typedef struct S530 T530;

/* ET_FEATURE_LIST */
typedef struct S533 T533;

/* ET_UNKNOWN_GROUP */
typedef struct S536 T536;

/* ET_BASE_TYPE_LIST */
typedef struct S538 T538;

/* ET_KEYWORD */
typedef struct S539 T539;

/* ET_CLASS_CODES */
typedef struct S540 T540;

/* PATH */
typedef struct S542 T542;

/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8] */
typedef struct S543 T543;

/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8] */
typedef struct S544 T544;

/* [attached] TYPE [[attached] STRING_8] */
#define T545 EIF_TYPE_OBJ

/* ARGUMENTS_32 */
typedef struct S547 T547;

/* ET_SYSTEM_ERROR */
typedef struct S548 T548;

/* ET_INTERNAL_ERROR */
typedef struct S549 T549;

/* ET_XACE_EXTERNALS */
typedef struct S551 T551;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] STRING_8] */
typedef struct S552 T552;

/* ET_XACE_OPTIONS */
typedef struct S553 T553;

/* ET_XACE_TARGET */
typedef struct S554 T554;

/* ET_XACE_TARGETS */
typedef struct S557 T557;

/* ET_XACE_CLUSTERS */
typedef struct S559 T559;

/* ET_XACE_MOUNTED_LIBRARIES */
typedef struct S560 T560;

/* ET_XACE_CLUSTER */
typedef struct S564 T564;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE] */
typedef struct S569 T569;

/* ET_XACE_MOUNTED_LIBRARY */
typedef struct S571 T571;

/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S575 T575;

/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
typedef struct S576 T576;

/* ET_ECF_OPTIONS */
typedef struct S581 T581;

/* XM_NAMESPACE */
typedef struct S583 T583;

/* [attached] KL_ARRAY_ROUTINES [[attached] INTEGER_32] */
typedef struct S584 T584;

/* ET_DYNAMIC_PROCEDURE_TYPE */
typedef struct S586 T586;

/* ET_DYNAMIC_FUNCTION_TYPE */
typedef struct S587 T587;

/* UT_CONFIG_PARSER */
typedef struct S588 T588;

/* [attached] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32] */
typedef struct S589 T589;

/* ET_DO_PROCEDURE */
typedef struct S592 T592;

/* ET_DYNAMIC_PUSH_TYPE_SET */
typedef struct S595 T595;

/* ET_DEFERRED_PROCEDURE */
typedef struct S596 T596;

/* UTF_CONVERTER */
typedef struct S598 T598;
extern T0* GE_boxed598(T598 a1);
typedef struct Sb598 Tb598;

/* [attached] CELL [[attached] INTEGER_32] */
typedef struct S599 T599;

/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32] */
typedef struct S601 T601;

/* KL_PATHNAME */
typedef struct S603 T603;

/* EXCEPTIONS */
typedef struct S604 T604;

/* READABLE_STRING_32 */
typedef struct S605 T605;

/* [attached] SPECIAL [[attached] NATURAL_8] */
typedef struct S606 T606;

/* TYPED_POINTER [[attached] SPECIAL [[attached] NATURAL_8]] */
typedef struct S607 T607;
extern T0* GE_boxed607(T607 a1);
typedef struct Sb607 Tb607;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION] */
typedef struct S608 T608;

/* [attached] SPECIAL [[attached] AP_OPTION] */
typedef struct S611 T611;

/* [attached] KL_SPECIAL_ROUTINES [[attached] AP_OPTION] */
typedef struct S612 T612;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S614 T614;

/* [attached] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S615 T615;

/* [attached] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S616 T616;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8] */
typedef struct S618 T618;

/* [attached] SPECIAL [detachable STRING_8] */
typedef struct S620 T620;

/* [attached] KL_SPECIAL_ROUTINES [detachable STRING_8] */
typedef struct S621 T621;

/* attached DS_LINKABLE [[attached] STRING_8] */
typedef struct S623 T623;

/* attached DS_LINKABLE [[attached] BOOLEAN] */
typedef struct S626 T626;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] BOOLEAN] */
typedef struct S627 T627;

/* attached DS_LINKABLE [[attached] INTEGER_32] */
typedef struct S629 T629;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] INTEGER_32] */
typedef struct S630 T630;

/* XM_NAMESPACE_RESOLVER */
typedef struct S632 T632;

/* [attached] ARRAY [[attached] XM_CALLBACKS_FILTER] */
typedef struct S633 T633;

/* [attached] SPECIAL [[attached] XM_CALLBACKS_FILTER] */
typedef struct S634 T634;

/* XM_CALLBACKS_NULL */
typedef struct S635 T635;

/* XM_POSITION_TABLE */
typedef struct S637 T637;

/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE] */
typedef struct S638 T638;

/* UT_COUNTER */
typedef struct S642 T642;

/* [attached] KL_AGENT_ROUTINES [[attached] ET_CLASS] */
typedef struct S643 T643;

/* [attached] TUPLE [UT_COUNTER] */
typedef struct S644 T644;

/* [attached] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ET_CLASS], [attached] PROCEDURE [[attached] TUPLE]] */
typedef struct S645 T645;

/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S647 T647;

/* ET_DOTNET_ASSEMBLIES */
typedef struct S648 T648;

/* ET_DOTNET_ASSEMBLY */
typedef struct S649 T649;

/* [attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S650 T650;

/* [attached] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]] */
typedef struct S651 T651;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]] */
typedef struct S652 T652;

/* [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY]] */
typedef struct S653 T653;

/* [attached] TUPLE [[attached] ET_INTERNAL_UNIVERSE] */
typedef struct S654 T654;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_INTERNAL_UNIVERSE]] */
typedef struct S655 T655;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]]] */
typedef struct S656 T656;

/* [attached] TUPLE [ET_DOTNET_ASSEMBLIES] */
typedef struct S657 T657;

/* [attached] TUPLE [ET_SYSTEM_PROCESSOR] */
typedef struct S658 T658;

/* ET_LIBRARY */
typedef struct S659 T659;

/* [attached] TUPLE [[attached] ET_LIBRARY] */
typedef struct S660 T660;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_LIBRARY]] */
typedef struct S661 T661;

/* [attached] TUPLE [[attached] ET_UNIVERSE] */
typedef struct S662 T662;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_UNIVERSE]] */
typedef struct S663 T663;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]]] */
typedef struct S664 T664;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], detachable FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
typedef struct S665 T665;

/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY] */
typedef struct S667 T667;

/* ET_XACE_LIBRARY_CONFIG */
typedef struct S668 T668;

/* [attached] TUPLE [[attached] ET_XACE_CLUSTER] */
typedef struct S669 T669;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_XACE_CLUSTER]] */
typedef struct S670 T670;

/* [attached] TUPLE [ET_XACE_CLUSTERS] */
typedef struct S671 T671;

/* ET_MASTER_CLASS */
typedef struct S672 T672;

/* [attached] TUPLE [[attached] ET_CLUSTER] */
typedef struct S674 T674;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]] */
typedef struct S675 T675;

/* [attached] TUPLE [ET_XACE_SYSTEM] */
typedef struct S676 T676;

/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE] */
typedef struct S677 T677;

/* [attached] TUPLE [ET_AST_PROCESSOR] */
typedef struct S678 T678;

/* [attached] TUPLE [[attached] ET_MASTER_CLASS] */
typedef struct S679 T679;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]] */
typedef struct S680 T680;

/* [attached] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S681 T681;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY]] */
typedef struct S682 T682;

/* ET_ANCESTORS_STATUS_CHECKER */
typedef struct S683 T683;

/* ET_FLATTENING_STATUS_CHECKER */
typedef struct S684 T684;

/* ET_INTERFACE_STATUS_CHECKER */
typedef struct S685 T685;

/* ET_IMPLEMENTATION_STATUS_CHECKER */
typedef struct S686 T686;

/* [attached] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]] */
typedef struct S687 T687;

/* [attached] TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
typedef struct S689 T689;

/* [attached] TUPLE [ET_FLATTENING_STATUS_CHECKER] */
typedef struct S690 T690;

/* [attached] TUPLE [ET_INTERFACE_STATUS_CHECKER] */
typedef struct S691 T691;

/* [attached] TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
typedef struct S692 T692;

/* [attached] TUPLE [BOOLEAN] */
typedef struct S693 T693;

/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE] */
typedef struct S694 T694;

/* ET_CLASS_NAME_TESTER */
typedef struct S696 T696;

/* ET_PARENT */
typedef struct S698 T698;

/* ET_PARENT_LIST */
typedef struct S699 T699;

/* ET_CLIENT_LIST */
typedef struct S700 T700;

/* ET_BUILTIN_CONVERT_FEATURE */
typedef struct S701 T701;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]]] */
typedef struct S706 T706;

/* [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE]] */
typedef struct S712 T712;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]]] */
typedef struct S713 T713;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_CLASS], [attached] BOOLEAN]] */
typedef struct S714 T714;

/* [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_UNIVERSE]] */
typedef struct S715 T715;

/* ET_CLIENT */
typedef struct S716 T716;

/* ET_ATTACHMENT_SEPARATE_KEYWORDS */
typedef struct S717 T717;

/* ET_NONE_GROUP */
typedef struct S723 T723;

/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
typedef struct S724 T724;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8] */
typedef struct S729 T729;

/* [attached] SPECIAL [[attached] ET_XACE_LIBRARY_CONFIG] */
typedef struct S730 T730;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_LIBRARY_CONFIG] */
typedef struct S731 T731;

/* XM_EIFFEL_SCANNER */
typedef struct S732 T732;

/* XM_DEFAULT_POSITION */
typedef struct S733 T733;

/* [attached] DS_BILINKED_LIST [[attached] XM_POSITION] */
typedef struct S736 T736;

/* [attached] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER] */
typedef struct S737 T737;

/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8] */
typedef struct S738 T738;

/* XM_NULL_EXTERNAL_RESOLVER */
typedef struct S740 T740;

/* XM_DTD_CALLBACKS_NULL */
typedef struct S742 T742;

/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME] */
typedef struct S743 T743;

/* XM_EIFFEL_PARSER_NAME */
typedef struct S744 T744;

/* [attached] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME] */
typedef struct S745 T745;

/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]] */
typedef struct S746 T746;

/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME] */
typedef struct S747 T747;

/* [attached] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]] */
typedef struct S748 T748;

/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID] */
typedef struct S749 T749;

/* XM_DTD_EXTERNAL_ID */
typedef struct S750 T750;

/* [attached] SPECIAL [[attached] XM_DTD_EXTERNAL_ID] */
typedef struct S751 T751;

/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT] */
typedef struct S752 T752;

/* XM_DTD_ELEMENT_CONTENT */
typedef struct S753 T753;

/* [attached] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT] */
typedef struct S754 T754;

/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S755 T755;

/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S756 T756;

/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S757 T757;

/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S758 T758;

/* XM_DTD_ATTRIBUTE_CONTENT */
typedef struct S759 T759;

/* [attached] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S760 T760;

/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]] */
typedef struct S761 T761;

/* [attached] DS_BILINKED_LIST [[attached] STRING_8] */
typedef struct S762 T762;

/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]] */
typedef struct S763 T763;

/* [attached] KL_SPECIAL_ROUTINES [[attached] BOOLEAN] */
typedef struct S764 T764;

/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION] */
typedef struct S765 T765;

/* XM_EIFFEL_DECLARATION */
typedef struct S766 T766;

/* [attached] SPECIAL [[attached] XM_EIFFEL_DECLARATION] */
typedef struct S767 T767;

/* XM_EIFFEL_ENTITY_DEF */
typedef struct S772 T772;

/* XM_EIFFEL_SCANNER_DTD */
typedef struct S773 T773;

/* XM_EIFFEL_PE_ENTITY_DEF */
typedef struct S775 T775;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8] */
typedef struct S777 T777;

/* [attached] SPECIAL [[attached] ET_ECF_LIBRARY] */
typedef struct S778 T778;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY] */
typedef struct S783 T783;

/* [attached] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY] */
typedef struct S784 T784;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8] */
typedef struct S789 T789;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY] */
typedef struct S790 T790;

/* ET_CLUSTERS */
typedef struct S791 T791;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY] */
typedef struct S792 T792;

/* [attached] DS_HASH_SET [[attached] ET_LIBRARY] */
typedef struct S793 T793;

/* [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_LIBRARY]] */
typedef struct S794 T794;

/* [attached] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG] */
typedef struct S796 T796;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG] */
typedef struct S798 T798;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8] */
typedef struct S799 T799;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8] */
typedef struct S800 T800;

/* [attached] SPECIAL [[attached] ET_ECF_TARGET] */
typedef struct S801 T801;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET] */
typedef struct S803 T803;

/* attached DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
typedef struct S807 T807;

/* [attached] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
typedef struct S808 T808;

/* [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION] */
typedef struct S809 T809;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S810 T810;

/* [attached] KL_EQUALITY_TESTER [[attached] ET_IDENTIFIER] */
typedef struct S812 T812;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER] */
typedef struct S815 T815;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER] */
typedef struct S816 T816;

/* [attached] TYPE [[attached] ET_IDENTIFIER] */
#define T818 EIF_TYPE_OBJ

/* [attached] TUPLE [ET_LACE_SYSTEM] */
typedef struct S819 T819;

/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER] */
typedef struct S820 T820;

/* [attached] TUPLE [[attached] ET_LACE_CLUSTER] */
typedef struct S821 T821;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME] */
typedef struct S828 T828;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS] */
typedef struct S829 T829;

/* [attached] SPECIAL [[attached] ET_MASTER_CLASS] */
typedef struct S830 T830;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME] */
typedef struct S831 T831;

/* [attached] SPECIAL [[attached] ET_CLASS_NAME] */
typedef struct S832 T832;

/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE] */
typedef struct S833 T833;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE] */
typedef struct S834 T834;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_TYPE] */
typedef struct S835 T835;

/* [attached] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S845 T845;

/* ET_BRACKET_SYMBOL */
typedef struct S846 T846;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S848 T848;

/* C_DATE */
typedef struct S850 T850;

/* KL_STDIN_FILE */
typedef struct S851 T851;

/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32] */
typedef struct S853 T853;

/* [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S854 T854;

/* [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S855 T855;

/* [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD] */
typedef struct S856 T856;

/* [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL] */
typedef struct S857 T857;

/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
typedef struct S858 T858;

/* [attached] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST] */
typedef struct S859 T859;

/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S860 T860;

/* [attached] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST] */
typedef struct S861 T861;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM] */
typedef struct S862 T862;

/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY] */
typedef struct S863 T863;

/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE] */
typedef struct S864 T864;

/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
typedef struct S865 T865;

/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS] */
typedef struct S866 T866;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
typedef struct S867 T867;

/* [attached] SPECIAL [detachable ET_KEYWORD] */
typedef struct S869 T869;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
typedef struct S870 T870;

/* [attached] SPECIAL [detachable ET_AGENT_KEYWORD] */
typedef struct S872 T872;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
typedef struct S873 T873;

/* [attached] SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
typedef struct S875 T875;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
typedef struct S876 T876;

/* [attached] SPECIAL [detachable ET_SYMBOL] */
typedef struct S878 T878;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
typedef struct S879 T879;

/* [attached] SPECIAL [detachable ET_POSITION] */
typedef struct S881 T881;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
typedef struct S882 T882;

/* [attached] SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
typedef struct S884 T884;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
typedef struct S885 T885;

/* [attached] SPECIAL [detachable ET_BREAK] */
typedef struct S887 T887;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
typedef struct S888 T888;

/* [attached] SPECIAL [detachable ET_CHARACTER_CONSTANT] */
typedef struct S890 T890;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
typedef struct S891 T891;

/* [attached] SPECIAL [detachable ET_CURRENT] */
typedef struct S893 T893;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
typedef struct S894 T894;

/* [attached] SPECIAL [detachable ET_FREE_OPERATOR] */
typedef struct S896 T896;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
typedef struct S897 T897;

/* [attached] SPECIAL [detachable ET_INTEGER_CONSTANT] */
typedef struct S899 T899;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
typedef struct S900 T900;

/* [attached] SPECIAL [detachable ET_KEYWORD_OPERATOR] */
typedef struct S902 T902;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
typedef struct S903 T903;

/* [attached] SPECIAL [detachable ET_MANIFEST_STRING] */
typedef struct S905 T905;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
typedef struct S906 T906;

/* [attached] SPECIAL [detachable ET_REAL_CONSTANT] */
typedef struct S908 T908;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
typedef struct S909 T909;

/* [attached] SPECIAL [detachable ET_RESULT] */
typedef struct S910 T910;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
typedef struct S911 T911;

/* [attached] SPECIAL [detachable ET_RETRY_INSTRUCTION] */
typedef struct S913 T913;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
typedef struct S914 T914;

/* [attached] SPECIAL [detachable ET_SYMBOL_OPERATOR] */
typedef struct S916 T916;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_VOID] */
typedef struct S917 T917;

/* [attached] SPECIAL [detachable ET_VOID] */
typedef struct S919 T919;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
typedef struct S920 T920;

/* [attached] SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
typedef struct S922 T922;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
typedef struct S923 T923;

/* [attached] SPECIAL [detachable ET_BRACKET_SYMBOL] */
typedef struct S925 T925;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
typedef struct S926 T926;

/* [attached] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
typedef struct S928 T928;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
typedef struct S929 T929;

/* [attached] SPECIAL [detachable ET_ACROSS_EXPRESSION] */
typedef struct S931 T931;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
typedef struct S932 T932;

/* [attached] SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
typedef struct S934 T934;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S935 T935;

/* [attached] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S936 T936;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S937 T937;

/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S939 T939;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef struct S940 T940;

/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef struct S941 T941;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S942 T942;

/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S944 T944;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S945 T945;

/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S947 T947;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S948 T948;

/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S950 T950;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
typedef struct S951 T951;

/* [attached] SPECIAL [detachable ET_AGENT_TARGET] */
typedef struct S953 T953;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
typedef struct S954 T954;

/* [attached] SPECIAL [detachable ET_ALIAS_NAME] */
typedef struct S956 T956;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
typedef struct S957 T957;

/* [attached] SPECIAL [detachable ET_ASSIGNER] */
typedef struct S959 T959;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
typedef struct S960 T960;

/* [attached] SPECIAL [detachable ET_BRACKET_EXPRESSION] */
typedef struct S962 T962;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
typedef struct S963 T963;

/* [attached] SPECIAL [detachable ET_CALL_AGENT] */
typedef struct S965 T965;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S966 T966;

/* [attached] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S967 T967;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
typedef struct S968 T968;

/* [attached] SPECIAL [detachable ET_CHECK_INSTRUCTION] */
typedef struct S970 T970;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
typedef struct S971 T971;

/* [attached] SPECIAL [detachable ET_CHOICE] */
typedef struct S973 T973;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
typedef struct S974 T974;

/* [attached] SPECIAL [detachable ET_CHOICE_CONSTANT] */
typedef struct S976 T976;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
typedef struct S977 T977;

/* [attached] SPECIAL [detachable ET_CHOICE_ITEM] */
typedef struct S979 T979;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
typedef struct S980 T980;

/* [attached] SPECIAL [detachable ET_CHOICE_LIST] */
typedef struct S982 T982;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
typedef struct S983 T983;

/* [attached] SPECIAL [detachable ET_CLASS] */
typedef struct S985 T985;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
typedef struct S986 T986;

/* [attached] SPECIAL [detachable ET_CLIENT_ITEM] */
typedef struct S988 T988;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
typedef struct S989 T989;

/* [attached] SPECIAL [detachable ET_CLIENTS] */
typedef struct S991 T991;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
typedef struct S992 T992;

/* [attached] SPECIAL [detachable ET_COMPOUND] */
typedef struct S993 T993;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
typedef struct S994 T994;

/* [attached] SPECIAL [detachable ET_CONDITIONAL] */
typedef struct S996 T996;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
typedef struct S997 T997;

/* [attached] SPECIAL [detachable ET_CONSTANT] */
typedef struct S999 T999;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1000 T1000;

/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1002 T1002;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1003 T1003;

/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1005 T1005;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
typedef struct S1006 T1006;

/* [attached] SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
typedef struct S1008 T1008;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1009 T1009;

/* [attached] SPECIAL [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1011 T1011;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
typedef struct S1012 T1012;

/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE] */
typedef struct S1014 T1014;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
typedef struct S1015 T1015;

/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
typedef struct S1017 T1017;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
typedef struct S1018 T1018;

/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
typedef struct S1020 T1020;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
typedef struct S1021 T1021;

/* [attached] SPECIAL [detachable ET_CREATE_EXPRESSION] */
typedef struct S1023 T1023;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
typedef struct S1024 T1024;

/* [attached] SPECIAL [detachable ET_CREATION_REGION] */
typedef struct S1026 T1026;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
typedef struct S1027 T1027;

/* [attached] SPECIAL [detachable ET_CREATOR] */
typedef struct S1029 T1029;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
typedef struct S1030 T1030;

/* [attached] SPECIAL [detachable ET_CREATOR_LIST] */
typedef struct S1032 T1032;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
typedef struct S1033 T1033;

/* [attached] SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
typedef struct S1035 T1035;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
typedef struct S1036 T1036;

/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
typedef struct S1038 T1038;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
typedef struct S1039 T1039;

/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
typedef struct S1041 T1041;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
typedef struct S1042 T1042;

/* [attached] SPECIAL [detachable ET_ELSEIF_PART] */
typedef struct S1044 T1044;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
typedef struct S1045 T1045;

/* [attached] SPECIAL [detachable ET_ELSEIF_PART_LIST] */
typedef struct S1047 T1047;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
typedef struct S1048 T1048;

/* [attached] SPECIAL [detachable ET_EXPORT] */
typedef struct S1050 T1050;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
typedef struct S1051 T1051;

/* [attached] SPECIAL [detachable ET_EXPORT_LIST] */
typedef struct S1052 T1052;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
typedef struct S1053 T1053;

/* [attached] SPECIAL [detachable ET_EXPRESSION] */
typedef struct S1054 T1054;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
typedef struct S1055 T1055;

/* [attached] SPECIAL [detachable ET_EXPRESSION_ITEM] */
typedef struct S1057 T1057;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
typedef struct S1058 T1058;

/* [attached] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
typedef struct S1060 T1060;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
typedef struct S1061 T1061;

/* [attached] SPECIAL [detachable ET_EXTERNAL_ALIAS] */
typedef struct S1063 T1063;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
typedef struct S1064 T1064;

/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE] */
typedef struct S1066 T1066;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
typedef struct S1067 T1067;

/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
typedef struct S1069 T1069;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
typedef struct S1070 T1070;

/* [attached] SPECIAL [detachable ET_FEATURE_EXPORT] */
typedef struct S1072 T1072;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
typedef struct S1073 T1073;

/* [attached] SPECIAL [detachable ET_FEATURE_NAME] */
typedef struct S1074 T1074;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
typedef struct S1075 T1075;

/* [attached] SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
typedef struct S1077 T1077;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
typedef struct S1078 T1078;

/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT] */
typedef struct S1080 T1080;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1081 T1081;

/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1083 T1083;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1084 T1084;

/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1085 T1085;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
typedef struct S1086 T1086;

/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER] */
typedef struct S1088 T1088;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1089 T1089;

/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1091 T1091;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
typedef struct S1092 T1092;

/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
typedef struct S1093 T1093;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
typedef struct S1094 T1094;

/* [attached] SPECIAL [detachable ET_IF_EXPRESSION] */
typedef struct S1096 T1096;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
typedef struct S1097 T1097;

/* [attached] SPECIAL [detachable ET_IF_INSTRUCTION] */
typedef struct S1099 T1099;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
typedef struct S1100 T1100;

/* [attached] SPECIAL [detachable ET_INDEXING_LIST] */
typedef struct S1102 T1102;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
typedef struct S1103 T1103;

/* [attached] SPECIAL [detachable ET_INDEXING_ITEM] */
typedef struct S1105 T1105;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
typedef struct S1106 T1106;

/* [attached] SPECIAL [detachable ET_INDEXING_TERM] */
typedef struct S1108 T1108;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
typedef struct S1109 T1109;

/* [attached] SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
typedef struct S1111 T1111;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
typedef struct S1112 T1112;

/* [attached] SPECIAL [detachable ET_INDEXING_TERM_LIST] */
typedef struct S1114 T1114;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
typedef struct S1115 T1115;

/* [attached] SPECIAL [detachable ET_INLINE_AGENT] */
typedef struct S1117 T1117;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
typedef struct S1118 T1118;

/* [attached] SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
typedef struct S1120 T1120;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
typedef struct S1121 T1121;

/* [attached] SPECIAL [detachable ET_INSTRUCTION] */
typedef struct S1123 T1123;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
typedef struct S1124 T1124;

/* [attached] SPECIAL [detachable ET_INVARIANTS] */
typedef struct S1126 T1126;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1127 T1127;

/* [attached] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1128 T1128;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
typedef struct S1129 T1129;

/* [attached] SPECIAL [detachable ET_LIKE_TYPE] */
typedef struct S1131 T1131;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
typedef struct S1132 T1132;

/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE] */
typedef struct S1134 T1134;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1135 T1135;

/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1137 T1137;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S1138 T1138;

/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S1139 T1139;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
typedef struct S1140 T1140;

/* [attached] SPECIAL [detachable ET_LOOP_INVARIANTS] */
typedef struct S1142 T1142;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
typedef struct S1143 T1143;

/* [attached] SPECIAL [detachable ET_MANIFEST_ARRAY] */
typedef struct S1145 T1145;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
typedef struct S1146 T1146;

/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
typedef struct S1148 T1148;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
typedef struct S1149 T1149;

/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
typedef struct S1151 T1151;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
typedef struct S1152 T1152;

/* [attached] SPECIAL [detachable ET_MANIFEST_TUPLE] */
typedef struct S1153 T1153;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
typedef struct S1154 T1154;

/* [attached] SPECIAL [detachable ET_OBSOLETE] */
typedef struct S1156 T1156;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1157 T1157;

/* [attached] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1159 T1159;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
typedef struct S1160 T1160;

/* [attached] SPECIAL [detachable ET_PARENT] */
typedef struct S1162 T1162;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
typedef struct S1163 T1163;

/* [attached] SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
typedef struct S1165 T1165;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
typedef struct S1166 T1166;

/* [attached] SPECIAL [detachable ET_PARENT_ITEM] */
typedef struct S1168 T1168;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
typedef struct S1169 T1169;

/* [attached] SPECIAL [detachable ET_PARENT_LIST] */
typedef struct S1171 T1171;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
typedef struct S1172 T1172;

/* [attached] SPECIAL [detachable ET_POSTCONDITIONS] */
typedef struct S1174 T1174;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
typedef struct S1175 T1175;

/* [attached] SPECIAL [detachable ET_PRECONDITIONS] */
typedef struct S1176 T1176;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
typedef struct S1177 T1177;

/* [attached] SPECIAL [detachable ET_PROCEDURE] */
typedef struct S1178 T1178;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S1179 T1179;

/* [attached] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S1181 T1181;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
typedef struct S1182 T1182;

/* [attached] SPECIAL [detachable ET_QUERY] */
typedef struct S1183 T1183;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
typedef struct S1184 T1184;

/* [attached] SPECIAL [detachable ET_RENAME_ITEM] */
typedef struct S1186 T1186;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
typedef struct S1187 T1187;

/* [attached] SPECIAL [detachable ET_RENAME_LIST] */
typedef struct S1188 T1188;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
typedef struct S1189 T1189;

/* [attached] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
typedef struct S1191 T1191;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
typedef struct S1192 T1192;

/* [attached] SPECIAL [detachable ET_STRIP_EXPRESSION] */
typedef struct S1194 T1194;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
typedef struct S1195 T1195;

/* [attached] SPECIAL [detachable ET_TYPE] */
typedef struct S1196 T1196;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
typedef struct S1197 T1197;

/* [attached] SPECIAL [detachable ET_TYPE_ITEM] */
typedef struct S1199 T1199;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
typedef struct S1200 T1200;

/* [attached] SPECIAL [detachable ET_TYPE_LIST] */
typedef struct S1202 T1202;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
typedef struct S1203 T1203;

/* [attached] SPECIAL [detachable ET_VARIANT] */
typedef struct S1205 T1205;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
typedef struct S1206 T1206;

/* [attached] SPECIAL [detachable ET_WHEN_PART] */
typedef struct S1208 T1208;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
typedef struct S1209 T1209;

/* [attached] SPECIAL [detachable ET_WHEN_PART_LIST] */
typedef struct S1211 T1211;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
typedef struct S1212 T1212;

/* [attached] SPECIAL [detachable ET_WRITABLE] */
typedef struct S1213 T1213;

/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS] */
typedef struct S1214 T1214;

/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS] */
typedef struct S1215 T1215;

/* ET_PARENT_CHECKER1 */
typedef struct S1216 T1216;

/* ET_FORMAL_PARAMETER_CHECKER1 */
typedef struct S1217 T1217;

/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME] */
typedef struct S1218 T1218;

/* ET_FEATURE_NAME_TESTER */
typedef struct S1219 T1219;

/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME] */
typedef struct S1221 T1221;

/* ET_ALIAS_NAME_TESTER */
typedef struct S1222 T1222;

/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST] */
typedef struct S1224 T1224;

/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS] */
typedef struct S1225 T1225;

/* ET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1226 T1226;

/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1227 T1227;

/* ET_IDENTIFIER_TYPE_RESOLVER */
typedef struct S1228 T1228;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
typedef struct S1229 T1229;

/* ET_ANCHORED_TYPE_CHECKER */
typedef struct S1230 T1230;

/* ET_SIGNATURE_CHECKER */
typedef struct S1231 T1231;

/* ET_PARENT_CHECKER2 */
typedef struct S1232 T1232;

/* ET_FORMAL_PARAMETER_CHECKER2 */
typedef struct S1233 T1233;

/* ET_BUILTIN_FEATURE_CHECKER */
typedef struct S1234 T1234;

/* ET_PRECURSOR_CHECKER */
typedef struct S1235 T1235;

/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32] */
typedef struct S1236 T1236;

/* [attached] DS_HASH_SET [[attached] ET_CLASS] */
typedef struct S1237 T1237;

/* ET_PARENT_CHECKER3 */
typedef struct S1238 T1238;

/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
typedef struct S1239 T1239;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
typedef struct S1240 T1240;

/* ET_FORMAL_PARAMETER_LIST */
typedef struct S1242 T1242;

/* ET_FORMAL_PARAMETER */
typedef struct S1243 T1243;

/* ET_CONSTRAINT_CREATOR */
typedef struct S1244 T1244;

/* ET_INHERITED_FEATURE */
typedef struct S1246 T1246;

/* ET_PARENT_FEATURE */
typedef struct S1247 T1247;

/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE] */
typedef struct S1248 T1248;

/* [attached] DS_HASH_SET [[attached] ET_QUERY] */
typedef struct S1249 T1249;

/* ET_SUPPLIER_BUILDER */
typedef struct S1250 T1250;

/* [attached] SPECIAL [[attached] ET_CLASS] */
typedef struct S1251 T1251;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS] */
typedef struct S1252 T1252;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS] */
typedef struct S1253 T1253;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] INTEGER_32] */
typedef struct S1255 T1255;

/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET] */
typedef struct S1258 T1258;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET] */
typedef struct S1259 T1259;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_IDENTIFIER] */
typedef struct S1260 T1260;

/* [attached] SPECIAL [detachable ET_DYNAMIC_TYPE] */
typedef struct S1261 T1261;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_TYPE] */
typedef struct S1262 T1262;

/* [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_TYPE] */
typedef struct S1263 T1263;

/* [attached] SPECIAL [[attached] ET_EXPRESSION] */
typedef struct S1265 T1265;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION] */
typedef struct S1266 T1266;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EXPRESSION] */
typedef struct S1267 T1267;

/* attached KL_EQUALITY_TESTER [[attached] INTEGER_32] */
typedef struct S1271 T1271;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32] */
typedef struct S1273 T1273;

/* [attached] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S1274 T1274;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S1275 T1275;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE] */
typedef struct S1276 T1276;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
typedef struct S1279 T1279;

/* [attached] SPECIAL [[attached] ET_OBJECT_TEST] */
typedef struct S1282 T1282;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST] */
typedef struct S1283 T1283;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_TEST] */
typedef struct S1284 T1284;

/* [attached] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S1286 T1286;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S1287 T1287;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S1288 T1288;

/* [attached] SPECIAL [[attached] ET_EQUALITY_EXPRESSION] */
typedef struct S1290 T1290;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION] */
typedef struct S1291 T1291;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EQUALITY_EXPRESSION] */
typedef struct S1292 T1292;

/* [attached] SPECIAL [[attached] ET_AGENT] */
typedef struct S1294 T1294;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT] */
typedef struct S1295 T1295;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_AGENT] */
typedef struct S1296 T1296;

/* [attached] SPECIAL [[attached] ET_EXPRESSION_ITEM] */
typedef struct S1298 T1298;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION_ITEM] */
typedef struct S1300 T1300;

/* [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S1301 T1301;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S1302 T1302;

/* [attached] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S1303 T1303;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S1304 T1304;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FEATURE] */
typedef struct S1309 T1309;

/* [attached] SPECIAL [[attached] ET_FEATURE] */
typedef struct S1310 T1310;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE] */
typedef struct S1311 T1311;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE] */
typedef struct S1312 T1312;

/* [attached] SPECIAL [[attached] ET_CONSTANT] */
typedef struct S1313 T1313;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CONSTANT] */
typedef struct S1316 T1316;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT] */
typedef struct S1317 T1317;

/* [attached] SPECIAL [[attached] ET_INLINE_CONSTANT] */
typedef struct S1318 T1318;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT] */
typedef struct S1321 T1321;

/* [attached] SPECIAL [detachable ET_DYNAMIC_FEATURE] */
typedef struct S1322 T1322;

/* [attached] DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE] */
typedef struct S1325 T1325;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
typedef struct S1326 T1326;

/* [attached] SPECIAL [[attached] ET_DYNAMIC_FEATURE] */
typedef struct S1327 T1327;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_FEATURE] */
typedef struct S1328 T1328;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_FEATURE] */
typedef struct S1329 T1329;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8] */
typedef struct S1331 T1331;

/* RX_BYTE_CODE */
typedef struct S1337 T1337;

/* RX_CHARACTER_SET */
typedef struct S1338 T1338;

/* RX_CASE_MAPPING */
typedef struct S1339 T1339;

/* [attached] ARRAY [[attached] RX_CHARACTER_SET] */
typedef struct S1342 T1342;

/* [attached] SPECIAL [[attached] RX_CHARACTER_SET] */
typedef struct S1343 T1343;

/* TYPED_POINTER [[attached] ANY] */
typedef struct S1344 T1344;
extern T0* GE_boxed1344(T1344 a1);
typedef struct Sb1344 Tb1344;

/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]] */
typedef struct S1345 T1345;

/* [attached] ARRAY [[attached] BOOLEAN] */
typedef struct S1346 T1346;

/* [attached] SPECIAL [[attached] ET_SYSTEM_PROCESSOR] */
typedef struct S1349 T1349;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_SYSTEM_PROCESSOR] */
typedef struct S1350 T1350;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_SYSTEM_PROCESSOR] */
typedef struct S1351 T1351;

/* THREAD_ATTRIBUTES */
typedef struct S1352 T1352;

/* [attached] CELL [[attached] BOOLEAN] */
typedef struct S1353 T1353;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE] */
typedef struct S1359 T1359;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_AGENT] */
typedef struct S1361 T1361;

/* [attached] SPECIAL [[attached] ET_INLINE_AGENT] */
typedef struct S1363 T1363;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INLINE_AGENT] */
typedef struct S1364 T1364;

/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
typedef struct S1365 T1365;

/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
typedef struct S1366 T1366;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
typedef struct S1367 T1367;

/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
typedef struct S1368 T1368;

/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
typedef struct S1369 T1369;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
typedef struct S1370 T1370;

/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
typedef struct S1371 T1371;

/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE] */
typedef struct S1372 T1372;

/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
typedef struct S1373 T1373;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
typedef struct S1374 T1374;

/* [attached] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT] */
typedef struct S1375 T1375;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT] */
typedef struct S1376 T1376;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT] */
typedef struct S1377 T1377;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_TYPE] */
typedef struct S1379 T1379;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST] */
typedef struct S1380 T1380;

/* ET_NAMED_OBJECT_TEST */
typedef struct S1384 T1384;

/* [attached] SPECIAL [[attached] ET_NAMED_OBJECT_TEST] */
typedef struct S1385 T1385;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST] */
typedef struct S1386 T1386;

/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST] */
typedef struct S1387 T1387;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT] */
typedef struct S1388 T1388;

/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT] */
typedef struct S1392 T1392;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT] */
typedef struct S1393 T1393;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT] */
typedef struct S1394 T1394;

/* [attached] DS_HASH_SET [[attached] INTEGER_32] */
typedef struct S1395 T1395;

/* [attached] SPECIAL [[attached] ET_ATTACHMENT_SCOPE] */
typedef struct S1398 T1398;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE] */
typedef struct S1399 T1399;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ATTACHMENT_SCOPE] */
typedef struct S1400 T1400;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM] */
typedef struct S1402 T1402;

/* [attached] SPECIAL [[attached] ET_INDEXING_TERM] */
typedef struct S1404 T1404;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INDEXING_TERM] */
typedef struct S1405 T1405;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE] */
typedef struct S1406 T1406;

/* [attached] SPECIAL [[attached] ET_ASSERTIONS] */
typedef struct S1407 T1407;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS] */
typedef struct S1409 T1409;

/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME] */
typedef struct S1411 T1411;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8] */
typedef struct S1415 T1415;

/* STRING_TO_INTEGER_CONVERTOR */
typedef struct S1416 T1416;

/* ET_VALIDITY_ERROR */
typedef struct S1418 T1418;

/* UC_UNICODE_ROUTINES */
typedef struct S1419 T1419;

/* ET_XACE_CLASS_OPTIONS */
typedef struct S1422 T1422;

/* attached DS_LINKED_LIST [[attached] ET_XACE_FEATURE_OPTIONS] */
typedef struct S1424 T1424;

/* ET_XACE_FEATURE_OPTIONS */
typedef struct S1426 T1426;

/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
typedef struct S1427 T1427;

/* ET_XACE_MISSING_ATTRIBUTE_ERROR */
typedef struct S1428 T1428;

/* ET_XACE_UNKNOWN_ELEMENT_ERROR */
typedef struct S1429 T1429;

/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
typedef struct S1430 T1430;

/* ET_XACE_MISSING_ELEMENT_ERROR */
typedef struct S1431 T1431;

/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
typedef struct S1432 T1432;

/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
typedef struct S1433 T1433;

/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S1434 T1434;

/* ET_ECF_NOTE_ELEMENT */
typedef struct S1438 T1438;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT] */
typedef struct S1439 T1439;

/* ET_ECF_TARGET_PARENT */
typedef struct S1453 T1453;

/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
typedef struct S1455 T1455;

/* ET_ECF_VERSION */
typedef struct S1459 T1459;

/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S1461 T1461;

/* ET_ECF_CLUSTER */
typedef struct S1463 T1463;

/* ET_ECF_CLUSTERS */
typedef struct S1464 T1464;

/* ET_ECF_EXTERNAL_CFLAG */
typedef struct S1466 T1466;

/* ET_ECF_EXTERNAL_CFLAGS */
typedef struct S1467 T1467;

/* ET_ECF_EXTERNAL_INCLUDE */
typedef struct S1469 T1469;

/* ET_ECF_EXTERNAL_INCLUDES */
typedef struct S1470 T1470;

/* ET_ECF_EXTERNAL_LIBRARY */
typedef struct S1472 T1472;

/* ET_ECF_EXTERNAL_LIBRARIES */
typedef struct S1473 T1473;

/* ET_ECF_EXTERNAL_LINKER_FLAG */
typedef struct S1475 T1475;

/* ET_ECF_EXTERNAL_LINKER_FLAGS */
typedef struct S1476 T1476;

/* ET_ECF_EXTERNAL_MAKE */
typedef struct S1478 T1478;

/* ET_ECF_EXTERNAL_MAKES */
typedef struct S1479 T1479;

/* ET_ECF_EXTERNAL_OBJECT */
typedef struct S1481 T1481;

/* ET_ECF_EXTERNAL_OBJECTS */
typedef struct S1482 T1482;

/* ET_ECF_EXTERNAL_RESOURCE */
typedef struct S1484 T1484;

/* ET_ECF_EXTERNAL_RESOURCES */
typedef struct S1485 T1485;

/* ET_ECF_FILE_RULE */
typedef struct S1487 T1487;

/* ET_ECF_FILE_RULES */
typedef struct S1488 T1488;

/* ET_ECF_ADAPTED_LIBRARIES */
typedef struct S1490 T1490;

/* ET_ECF_ACTION */
typedef struct S1492 T1492;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ACTION] */
typedef struct S1493 T1493;

/* [attached] TUPLE [[attached] ET_ECF_OPTIONS] */
typedef struct S1497 T1497;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_OPTIONS]] */
typedef struct S1498 T1498;

/* ET_ECF_ROOT_ALL_CLASSES */
typedef struct S1500 T1500;

/* ET_ECF_ROOT_CLASS */
typedef struct S1501 T1501;

/* ET_ECF_ORED_CONDITIONS */
typedef struct S1503 T1503;

/* ET_ECF_ANDED_CONDITIONS */
typedef struct S1505 T1505;

/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
typedef struct S1506 T1506;

/* ET_ECF_VISIBLE_CLASS */
typedef struct S1508 T1508;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS] */
typedef struct S1509 T1509;

/* ET_ECF_BUILD_CONDITION */
typedef struct S1518 T1518;

/* ET_ECF_CONCURRENCY_CONDITION */
typedef struct S1519 T1519;

/* ET_ECF_CUSTOM_CONDITION */
typedef struct S1520 T1520;

/* ET_ECF_DOTNET_CONDITION */
typedef struct S1521 T1521;

/* ET_ECF_DYNAMIC_RUNTIME_CONDITION */
typedef struct S1522 T1522;

/* ET_ECF_PLATFORM_CONDITION */
typedef struct S1523 T1523;

/* ET_ECF_COMPILER_VERSION_CONDITION */
typedef struct S1524 T1524;

/* ET_ECF_MSIL_CLR_VERSION_CONDITION */
typedef struct S1525 T1525;

/* [attached] TUPLE [ET_ECF_SYSTEM] */
typedef struct S1526 T1526;

/* ET_PARENTHESIS_EXPRESSION */
typedef struct S1528 T1528;

/* ET_REGULAR_MANIFEST_STRING */
typedef struct S1532 T1532;

/* ET_INFIX_FREE_NAME */
typedef struct S1533 T1533;

/* ET_PARENT_CLAUSE_LIST */
typedef struct S1534 T1534;

/* ET_CREATOR_LIST */
typedef struct S1537 T1537;

/* TYPED_POINTER [[attached] NATURAL_8] */
typedef struct S1538 T1538;
extern T0* GE_boxed1538(T1538 a1);
typedef struct Sb1538 Tb1538;

/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE] */
typedef struct S1540 T1540;

/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE] */
typedef struct S1542 T1542;

/* UT_TRISTATE */
typedef struct S1546 T1546;

/* [attached] KL_AGENT_ROUTINES [[attached] ANY] */
typedef struct S1547 T1547;

/* [attached] TUPLE [UT_TRISTATE] */
typedef struct S1548 T1548;

/* [attached] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ANY], [attached] PROCEDURE [[attached] TUPLE]] */
typedef struct S1549 T1549;

/* [attached] PREDICATE [[attached] TUPLE [[attached] ET_MASTER_CLASS]] */
typedef struct S1550 T1550;

/* [attached] PREDICATE [[attached] TUPLE] */
typedef struct S1551 T1551;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], detachable FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
typedef struct S1553 T1553;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_MASTER_CLASS], [attached] BOOLEAN]] */
typedef struct S1554 T1554;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_MASTER_CLASS], [attached] BOOLEAN], detachable FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
typedef struct S1555 T1555;

/* UC_UTF8_ROUTINES */
typedef struct S1556 T1556;

/* UC_UTF8_STRING */
typedef struct S1557 T1557;

/* XM_EIFFEL_INPUT_STREAM */
typedef struct S1558 T1558;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET] */
typedef struct S1562 T1562;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE] */
typedef struct S1564 T1564;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT] */
typedef struct S1566 T1566;

/* KL_CHARACTER_BUFFER */
typedef struct S1569 T1569;

/* [attached] SPECIAL [[attached] ET_QUERY] */
typedef struct S1572 T1572;

/* ET_ALIAS_NAME */
typedef struct S1573 T1573;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_QUERY] */
typedef struct S1574 T1574;

/* [attached] SPECIAL [[attached] ET_PROCEDURE] */
typedef struct S1575 T1575;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PROCEDURE] */
typedef struct S1576 T1576;

/* KL_STRING_INPUT_STREAM */
typedef struct S1577 T1577;

/* ET_TEXT_GROUP */
typedef struct S1578 T1578;

/* ET_OBJECT_TEST_LIST */
typedef struct S1583 T1583;

/* ET_ACROSS_COMPONENT_LIST */
typedef struct S1585 T1585;

/* ET_CREATOR */
typedef struct S1625 T1625;

/* ET_FEATURE_CLAUSE */
typedef struct S1631 T1631;

/* ET_LOCAL_VARIABLE */
typedef struct S1655 T1655;

/* ET_ELSEIF_PART */
typedef struct S1675 T1675;

/* ET_ELSEIF_EXPRESSION */
typedef struct S1676 T1676;

/* ET_WHEN_PART */
typedef struct S1677 T1677;

/* ET_CONSTRAINED_FORMAL_PARAMETER */
typedef struct S1712 T1712;

/* ET_FILE_POSITION */
typedef struct S1716 T1716;

/* ET_TAGGED_ASSERTION */
typedef struct S1718 T1718;

/* [attached] DS_QUICK_SORTER [[attached] ET_QUERY] */
typedef struct S1721 T1721;

/* [attached] DS_QUICK_SORTER [[attached] ET_PROCEDURE] */
typedef struct S1722 T1722;

/* ET_REDECLARED_FEATURE */
typedef struct S1724 T1724;

/* ET_CONVERT_FEATURE_LIST */
typedef struct S1726 T1726;

/* ET_ALIASED_FEATURE_NAME */
typedef struct S1728 T1728;

/* ET_FEATURE_IDS */
typedef struct S1730 T1730;

/* ET_RENAME */
typedef struct S1731 T1731;

/* ET_POSTCONDITIONS */
typedef struct S1734 T1734;

/* ET_INVARIANTS */
typedef struct S1735 T1735;

/* [attached] TYPE [[attached] INTEGER_32] */
#define T1747 EIF_TYPE_OBJ

/* CONSOLE */
typedef struct S1748 T1748;

/* ET_LIKE_N */
typedef struct S1749 T1749;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
typedef struct S1750 T1750;

/* [attached] SPECIAL [[attached] ET_BASE_TYPE] */
typedef struct S1753 T1753;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE] */
typedef struct S1754 T1754;

/* [attached] ARRAY [[attached] IMMUTABLE_STRING_32] */
typedef struct S1755 T1755;

/* [attached] SPECIAL [[attached] IMMUTABLE_STRING_32] */
typedef struct S1756 T1756;

/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8] */
typedef struct S1757 T1757;

/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_TARGET] */
typedef struct S1758 T1758;

/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER] */
typedef struct S1759 T1759;

/* [attached] DS_LINKED_LIST [[attached] ET_XACE_CLASS_OPTIONS] */
typedef struct S1762 T1762;

/* [attached] DS_ARRAYED_STACK [[attached] YY_BUFFER] */
typedef struct S1763 T1763;

/* UT_SYNTAX_ERROR */
typedef struct S1764 T1764;

/* UT_TOO_MANY_INCLUDES_ERROR */
typedef struct S1765 T1765;

/* ET_DYNAMIC_TARGET_LIST */
typedef struct S1768 T1768;

/* [attached] SPECIAL [[attached] NATIVE_STRING] */
typedef struct S1771 T1771;

/* [attached] ARRAY [detachable STRING_8] */
typedef struct S1772 T1772;

/* XM_NAMESPACE_RESOLVER_CONTEXT */
typedef struct S1773 T1773;

/* [attached] DS_LINKED_QUEUE [detachable STRING_8] */
typedef struct S1776 T1776;

/* [attached] DS_LINKED_QUEUE [[attached] STRING_8] */
typedef struct S1777 T1777;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
typedef struct S1778 T1778;

/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
typedef struct S1779 T1779;

/* [attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE] */
typedef struct S1780 T1780;

/* [attached] KL_EQUALITY_TESTER [[attached] XM_NAMESPACE] */
typedef struct S1783 T1783;

/* [attached] DS_HASH_SET_CURSOR [[attached] XM_NAMESPACE] */
typedef struct S1784 T1784;

/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE] */
typedef struct S1785 T1785;

/* [attached] SPECIAL [[attached] XM_NAMESPACE] */
typedef struct S1786 T1786;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S1787 T1787;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S1788 T1788;

/* [attached] SPECIAL [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S1789 T1789;

/* [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S1792 T1792;

/* [attached] SPECIAL [[attached] ET_XACE_MOUNTED_LIBRARY] */
typedef struct S1793 T1793;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_MOUNTED_LIBRARY] */
typedef struct S1794 T1794;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_MOUNTED_LIBRARY] */
typedef struct S1795 T1795;

/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS] */
typedef struct S1796 T1796;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_INTERNAL_UNIVERSE] */
typedef struct S1797 T1797;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE] */
typedef struct S1801 T1801;

/* [attached] SPECIAL [[attached] ET_INTERNAL_UNIVERSE] */
typedef struct S1802 T1802;

/* ET_CLASS_TYPE_STATUS_CHECKER1 */
typedef struct S1803 T1803;

/* ET_CLASS_TYPE_STATUS_CHECKER2 */
typedef struct S1804 T1804;

/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
typedef struct S1805 T1805;

/* ET_CLASS_TYPE_STATUS_CHECKER3 */
typedef struct S1806 T1806;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS] */
typedef struct S1807 T1807;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE] */
typedef struct S1808 T1808;

/* [attached] SPECIAL [[attached] ET_UNIVERSE] */
typedef struct S1809 T1809;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE] */
typedef struct S1812 T1812;

/* [attached] SPECIAL [[attached] ET_PARENT_ITEM] */
typedef struct S1814 T1814;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_ITEM] */
typedef struct S1816 T1816;

/* [attached] SPECIAL [[attached] ET_CLIENT_ITEM] */
typedef struct S1817 T1817;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_ITEM] */
typedef struct S1818 T1818;

/* ET_BRACED_TYPE_LIST */
typedef struct S1820 T1820;

/* XM_EIFFEL_CHARACTER_ENTITY */
typedef struct S1822 T1822;

/* attached DS_BILINKABLE [[attached] XM_POSITION] */
typedef struct S1825 T1825;

/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_POSITION] */
typedef struct S1826 T1826;

/* attached DS_LINKABLE [[attached] XM_EIFFEL_SCANNER] */
typedef struct S1828 T1828;

/* [attached] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF] */
typedef struct S1829 T1829;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8] */
typedef struct S1834 T1834;

/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF] */
typedef struct S1835 T1835;

/* [attached] KL_EQUALITY_TESTER [[attached] XM_EIFFEL_PARSER_NAME] */
typedef struct S1839 T1839;

/* [attached] DS_HASH_SET_CURSOR [[attached] XM_EIFFEL_PARSER_NAME] */
typedef struct S1840 T1840;

/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT] */
typedef struct S1841 T1841;

/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1842 T1842;

/* attached DS_BILINKABLE [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1844 T1844;

/* [attached] DS_BILINKED_LIST_CURSOR [[attached] STRING_8] */
typedef struct S1846 T1846;

/* attached DS_BILINKABLE [[attached] STRING_8] */
typedef struct S1848 T1848;

/* [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER] */
typedef struct S1849 T1849;

/* [attached] SPECIAL [[attached] ET_ADAPTED_LIBRARY] */
typedef struct S1850 T1850;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY] */
typedef struct S1851 T1851;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_LIBRARY] */
typedef struct S1852 T1852;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_LIBRARY] */
typedef struct S1854 T1854;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY] */
typedef struct S1855 T1855;

/* [attached] SPECIAL [[attached] ET_LIBRARY] */
typedef struct S1856 T1856;

/* [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1857 T1857;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1858 T1858;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1859 T1859;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LACE_CLUSTER] */
typedef struct S1861 T1861;

/* [attached] SPECIAL [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1862 T1862;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1863 T1863;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST_LIST] */
typedef struct S1864 T1864;

/* [attached] SPECIAL [[attached] ET_OBJECT_TEST_LIST] */
typedef struct S1865 T1865;

/* [attached] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S1866 T1866;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S1867 T1867;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT_LIST] */
typedef struct S1868 T1868;

/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT_LIST] */
typedef struct S1869 T1869;

/* [attached] SPECIAL [[attached] ET_ASSERTION_ITEM] */
typedef struct S1870 T1870;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM] */
typedef struct S1871 T1871;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ASSERTION_ITEM] */
typedef struct S1872 T1872;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY] */
typedef struct S1874 T1874;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE] */
typedef struct S1876 T1876;

/* [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1878 T1878;

/* [attached] SPECIAL [[attached] ET_NAMED_CLASS] */
typedef struct S1880 T1880;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS] */
typedef struct S1882 T1882;

/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS] */
typedef struct S1886 T1886;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS] */
typedef struct S1887 T1887;

/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER] */
typedef struct S1892 T1892;

/* attached DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER] */
typedef struct S1894 T1894;

/* ET_FORMAL_PARAMETER_TYPE */
typedef struct S1895 T1895;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME] */
typedef struct S1896 T1896;

/* [attached] SPECIAL [[attached] ET_FLATTENED_FEATURE] */
typedef struct S1897 T1897;

/* [attached] SPECIAL [[attached] ET_FEATURE_NAME] */
typedef struct S1903 T1903;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE] */
typedef struct S1904 T1904;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME] */
typedef struct S1905 T1905;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ALIAS_NAME] */
typedef struct S1909 T1909;

/* [attached] SPECIAL [[attached] ET_ALIAS_NAME] */
typedef struct S1910 T1910;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME] */
typedef struct S1912 T1912;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST] */
typedef struct S1913 T1913;

/* [attached] SPECIAL [[attached] ET_CLIENT_LIST] */
typedef struct S1914 T1914;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST] */
typedef struct S1915 T1915;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS] */
typedef struct S1917 T1917;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT] */
typedef struct S1918 T1918;

/* [attached] SPECIAL [[attached] ET_CLIENT] */
typedef struct S1919 T1919;

/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME] */
typedef struct S1920 T1920;

/* ET_CALL_NAME_TESTER */
typedef struct S1921 T1921;

/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME] */
typedef struct S1923 T1923;

/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME] */
typedef struct S1924 T1924;

/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME] */
typedef struct S1925 T1925;

/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32] */
typedef struct S1926 T1926;

/* ET_REPLICATED_FEATURE */
typedef struct S1930 T1930;

/* ET_RENAME_LIST */
typedef struct S1931 T1931;

/* ET_EXPORT_LIST */
typedef struct S1932 T1932;

/* ET_ALL_EXPORT */
typedef struct S1933 T1933;

/* ET_FEATURE_EXPORT */
typedef struct S1934 T1934;

/* ET_KEYWORD_FEATURE_NAME_LIST */
typedef struct S1935 T1935;

/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE] */
typedef struct S1936 T1936;

/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE] */
typedef struct S1937 T1937;

/* ET_DOTNET_SIGNATURE_TESTER */
typedef struct S1938 T1938;

/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE] */
typedef struct S1939 T1939;

/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE] */
typedef struct S1941 T1941;

/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE] */
typedef struct S1943 T1943;

/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE] */
typedef struct S1944 T1944;

/* attached DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE] */
typedef struct S1946 T1946;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE] */
typedef struct S1947 T1947;

/* attached DS_LINKED_LIST [[attached] ET_PARENT_FEATURE] */
typedef struct S1949 T1949;

/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8] */
typedef struct S1950 T1950;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32] */
typedef struct S1951 T1951;

/* [attached] TYPE [[attached] ET_FEATURE] */
#define T1952 EIF_TYPE_OBJ

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CLASS] */
typedef struct S1956 T1956;

/* [attached] TYPE [[attached] ET_CLASS] */
#define T1957 EIF_TYPE_OBJ

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE] */
typedef struct S1959 T1959;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_QUERY] */
typedef struct S1961 T1961;

/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]] */
typedef struct S1963 T1963;

/* [attached] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]] */
typedef struct S1964 T1964;

/* [attached] DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [[attached] INTEGER_32]] */
typedef struct S1965 T1965;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NAMED_OBJECT_TEST] */
typedef struct S1968 T1968;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ACROSS_COMPONENT] */
typedef struct S1970 T1970;

/* [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32] */
typedef struct S1972 T1972;

/* [attached] KL_SPECIAL_ROUTINES [[attached] NATURAL_8] */
typedef struct S1978 T1978;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] NATURAL_8, [attached] ET_CLASS_NAME] */
typedef struct S1979 T1979;

/* STRING_8_SEARCHER */
typedef struct S1980 T1980;

/* attached ARRAYED_LIST [[attached] INTEGER_32] */
typedef struct S1982 T1982;

/* ET_XACE_INVALID_EXPRESSION_ERROR */
typedef struct S1986 T1986;

/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE] */
typedef struct S1988 T1988;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE] */
typedef struct S1989 T1989;

/* [attached] TUPLE [ET_ECF_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S1990 T1990;

/* [attached] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE] */
typedef struct S1991 T1991;

/* [attached] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]] */
typedef struct S1992 T1992;

/* [attached] TUPLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE]] */
typedef struct S1993 T1993;

/* [attached] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE], [attached] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]]] */
typedef struct S1994 T1994;

/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
typedef struct S1998 T1998;

/* TYPED_POINTER [[attached] NATURAL_16] */
typedef struct S2000 T2000;
extern T0* GE_boxed2000(T2000 a1);
typedef struct Sb2000 Tb2000;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE] */
typedef struct S2001 T2001;

/* XM_COMMENT */
typedef struct S2002 T2002;

/* XM_PROCESSING_INSTRUCTION */
typedef struct S2003 T2003;

/* XM_CHARACTER_DATA */
typedef struct S2004 T2004;

/* [attached] DS_CELL [detachable ET_CLASS] */
typedef struct S2009 T2009;

/* [attached] TUPLE [detachable DS_CELL [detachable ET_CLASS]] */
typedef struct S2010 T2010;

/* ST_SPLITTER */
typedef struct S2012 T2012;

/* ET_CLUSTER_DEPENDENCE_CONSTRAINT */
typedef struct S2014 T2014;

/* [attached] TUPLE [ET_EIFFEL_PREPARSER, [attached] DS_ARRAYED_LIST [[attached] STRING_8]] */
typedef struct S2015 T2015;

/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8] */
typedef struct S2022 T2022;

/* ET_LOCAL_VARIABLE_LIST */
typedef struct S2027 T2027;

/* ET_TRUE_CONSTANT */
typedef struct S2032 T2032;

/* ET_SEEDED_QUERY_COMPARATOR */
typedef struct S2034 T2034;

/* ET_SEEDED_PROCEDURE_COMPARATOR */
typedef struct S2037 T2037;

/* ET_CLIENTS */
typedef struct S2040 T2040;

/* [attached] TUPLE [detachable ET_CLIENT_LIST] */
typedef struct S2042 T2042;

/* ET_FREE_OPERATOR */
typedef struct S2044 T2044;

/* ET_C3_CHARACTER_CONSTANT */
typedef struct S2045 T2045;

/* ET_VERBATIM_STRING */
typedef struct S2046 T2046;

/* ET_SPECIAL_MANIFEST_STRING */
typedef struct S2047 T2047;

/* ET_UNDERSCORED_INTEGER_CONSTANT */
typedef struct S2048 T2048;

/* ET_HEXADECIMAL_INTEGER_CONSTANT */
typedef struct S2049 T2049;

/* ET_OCTAL_INTEGER_CONSTANT */
typedef struct S2050 T2050;

/* ET_BINARY_INTEGER_CONSTANT */
typedef struct S2051 T2051;

/* ET_REGULAR_REAL_CONSTANT */
typedef struct S2052 T2052;

/* ET_UNDERSCORED_REAL_CONSTANT */
typedef struct S2053 T2053;

/* ET_SYMBOL_OPERATOR */
typedef struct S2054 T2054;

/* ET_SEMICOLON_SYMBOL */
typedef struct S2055 T2055;

/* ET_QUESTION_MARK_SYMBOL */
typedef struct S2056 T2056;

/* ET_KEYWORD_OPERATOR */
typedef struct S2057 T2057;

/* ET_VOID */
typedef struct S2058 T2058;

/* ET_AGENT_KEYWORD */
typedef struct S2059 T2059;

/* ET_FALSE_CONSTANT */
typedef struct S2060 T2060;

/* ET_RETRY_INSTRUCTION */
typedef struct S2061 T2061;

/* ET_PRECURSOR_KEYWORD */
typedef struct S2062 T2062;

/* ET_C1_CHARACTER_CONSTANT */
typedef struct S2063 T2063;

/* ET_C2_CHARACTER_CONSTANT */
typedef struct S2064 T2064;

/* ET_INDEXING_LIST */
typedef struct S2065 T2065;

/* ET_TAGGED_INDEXING */
typedef struct S2066 T2066;

/* ET_INDEXING_TERM_LIST */
typedef struct S2068 T2068;

/* ET_INDEXING */
typedef struct S2069 T2069;

/* ET_CUSTOM_ATTRIBUTE */
typedef struct S2070 T2070;

/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD */
typedef struct S2071 T2071;

/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
typedef struct S2072 T2072;

/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
typedef struct S2073 T2073;

/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S2074 T2074;

/* ET_CONVERT_FUNCTION */
typedef struct S2075 T2075;

/* ET_CONVERT_PROCEDURE */
typedef struct S2076 T2076;

/* ET_FEATURE_CLAUSE_LIST */
typedef struct S2077 T2077;

/* ET_DO_FUNCTION */
typedef struct S2079 T2079;

/* ET_ONCE_FUNCTION */
typedef struct S2080 T2080;

/* ET_DEFERRED_FUNCTION */
typedef struct S2081 T2081;

/* ET_ONCE_PROCEDURE */
typedef struct S2082 T2082;

/* ET_PREFIX_NAME */
typedef struct S2083 T2083;

/* ET_PREFIX_FREE_NAME */
typedef struct S2084 T2084;

/* ET_INFIX_NAME */
typedef struct S2085 T2085;

/* ET_ALIAS_FREE_NAME */
typedef struct S2086 T2086;

/* ET_FORMAL_COMMA_ARGUMENT */
typedef struct S2087 T2087;

/* ET_LOCAL_COMMA_VARIABLE */
typedef struct S2089 T2089;

/* ET_CLASS_ASSERTION */
typedef struct S2091 T2091;

/* ET_VARIANT */
typedef struct S2092 T2092;

/* ET_LABELED_ACTUAL_PARAMETER */
typedef struct S2093 T2093;

/* ET_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S2095 T2095;

/* ET_QUALIFIED_LIKE_BRACED_TYPE */
typedef struct S2097 T2097;

/* ET_QUALIFIED_LIKE_TYPE */
typedef struct S2098 T2098;

/* ET_ASSIGNER_INSTRUCTION */
typedef struct S2100 T2100;

/* ET_ASSIGNMENT */
typedef struct S2101 T2101;

/* ET_ASSIGNMENT_ATTEMPT */
typedef struct S2102 T2102;

/* ET_KEYWORD_EXPRESSION */
typedef struct S2103 T2103;

/* ET_LOOP_INSTRUCTION */
typedef struct S2104 T2104;

/* ET_BANG_INSTRUCTION */
typedef struct S2106 T2106;

/* ET_CREATE_INSTRUCTION */
typedef struct S2107 T2107;

/* ET_CREATION_REGION */
typedef struct S2108 T2108;

/* ET_IF_INSTRUCTION */
typedef struct S2109 T2109;

/* ET_ELSEIF_PART_LIST */
typedef struct S2110 T2110;

/* ET_IF_EXPRESSION */
typedef struct S2111 T2111;

/* ET_ELSEIF_EXPRESSION_LIST */
typedef struct S2112 T2112;

/* ET_INSPECT_INSTRUCTION */
typedef struct S2113 T2113;

/* ET_WHEN_PART_LIST */
typedef struct S2114 T2114;

/* ET_CHOICE_LIST */
typedef struct S2115 T2115;

/* ET_CHOICE_RANGE */
typedef struct S2116 T2116;

/* ET_DEBUG_INSTRUCTION */
typedef struct S2118 T2118;

/* ET_MANIFEST_STRING_LIST */
typedef struct S2119 T2119;

/* ET_PRECURSOR_INSTRUCTION */
typedef struct S2120 T2120;

/* ET_STATIC_CALL_INSTRUCTION */
typedef struct S2121 T2121;

/* ET_STATIC_CALL_EXPRESSION */
typedef struct S2122 T2122;

/* ET_PRECURSOR_EXPRESSION */
typedef struct S2123 T2123;

/* ET_CURRENT_ADDRESS */
typedef struct S2124 T2124;

/* ET_RESULT_ADDRESS */
typedef struct S2125 T2125;

/* ET_EXPRESSION_ADDRESS */
typedef struct S2126 T2126;

/* ET_PARENTHESIZED_EXPRESSION */
typedef struct S2127 T2127;

/* ET_INFIX_EXPRESSION */
typedef struct S2128 T2128;

/* ET_INFIX_AND_THEN_OPERATOR */
typedef struct S2130 T2130;

/* ET_INFIX_OR_ELSE_OPERATOR */
typedef struct S2132 T2132;

/* ET_MANIFEST_TYPE */
typedef struct S2133 T2133;

/* ET_PREFIX_EXPRESSION */
typedef struct S2134 T2134;

/* ET_OLD_EXPRESSION */
typedef struct S2135 T2135;

/* ET_BRACKET_EXPRESSION */
typedef struct S2136 T2136;

/* ET_MANIFEST_ARRAY */
typedef struct S2137 T2137;

/* ET_STRIP_EXPRESSION */
typedef struct S2138 T2138;

/* ET_CALL_AGENT */
typedef struct S2139 T2139;

/* ET_DO_FUNCTION_INLINE_AGENT */
typedef struct S2140 T2140;

/* ET_ONCE_FUNCTION_INLINE_AGENT */
typedef struct S2141 T2141;

/* ET_EXTERNAL_FUNCTION_INLINE_AGENT */
typedef struct S2142 T2142;

/* ET_DO_PROCEDURE_INLINE_AGENT */
typedef struct S2144 T2144;

/* ET_ONCE_PROCEDURE_INLINE_AGENT */
typedef struct S2145 T2145;

/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
typedef struct S2146 T2146;

/* ET_AGENT_OPEN_TARGET */
typedef struct S2147 T2147;

/* ET_AGENT_ARGUMENT_OPERAND_LIST */
typedef struct S2148 T2148;

/* ET_AGENT_TYPED_OPEN_ARGUMENT */
typedef struct S2149 T2149;

/* ET_CONSTRAINT_GENERIC_NAMED_TYPE */
typedef struct S2150 T2150;

/* ET_CONSTRAINT_NAMED_TYPE */
typedef struct S2151 T2151;

/* ET_EXTERNAL_PROCEDURE */
typedef struct S2152 T2152;

/* ET_LOOP_INVARIANTS */
typedef struct S2153 T2153;

/* ET_LIKE_FEATURE */
typedef struct S2154 T2154;

/* ET_CHECK_INSTRUCTION */
typedef struct S2155 T2155;

/* ET_ACROSS_INSTRUCTION */
typedef struct S2156 T2156;

/* ET_UNQUALIFIED_CALL_INSTRUCTION */
typedef struct S2157 T2157;

/* ET_FEATURE_ADDRESS */
typedef struct S2158 T2158;

/* ET_OLD_OBJECT_TEST */
typedef struct S2159 T2159;

/* ET_ONCE_MANIFEST_STRING */
typedef struct S2160 T2160;

/* ET_ACROSS_EXPRESSION */
typedef struct S2161 T2161;

/* [attached] SPECIAL [[attached] ET_INSTRUCTION] */
typedef struct S2163 T2163;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INSTRUCTION] */
typedef struct S2164 T2164;

/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
typedef struct S2166 T2166;

/* [attached] TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
typedef struct S2169 T2169;

/* attached DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS] */
typedef struct S2191 T2191;

/* [attached] SPECIAL [[attached] ET_FORMAL_PARAMETER_ITEM] */
typedef struct S2196 T2196;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER_ITEM] */
typedef struct S2197 T2197;

/* [attached] SPECIAL [[attached] ET_FEATURE_NAME_ITEM] */
typedef struct S2199 T2199;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME_ITEM] */
typedef struct S2200 T2200;

/* INTEGER_OVERFLOW_CHECKER */
typedef struct S2202 T2202;

/* [attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]] */
typedef struct S2203 T2203;

/* [attached] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]] */
typedef struct S2204 T2204;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_XACE_FEATURE_OPTIONS] */
typedef struct S2205 T2205;

/* attached DS_LINKABLE [[attached] ET_XACE_FEATURE_OPTIONS] */
typedef struct S2207 T2207;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT] */
typedef struct S2208 T2208;

/* [attached] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT] */
typedef struct S2209 T2209;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_NOTE_ELEMENT] */
typedef struct S2210 T2210;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S2211 T2211;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER] */
typedef struct S2212 T2212;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG] */
typedef struct S2213 T2213;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S2214 T2214;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S2215 T2215;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S2216 T2216;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE] */
typedef struct S2217 T2217;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT] */
typedef struct S2218 T2218;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S2219 T2219;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE] */
typedef struct S2221 T2221;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY] */
typedef struct S2222 T2222;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION] */
typedef struct S2223 T2223;

/* [attached] SPECIAL [[attached] ET_ECF_ACTION] */
typedef struct S2224 T2224;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ACTION] */
typedef struct S2225 T2225;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS] */
typedef struct S2226 T2226;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM] */
typedef struct S2227 T2227;

/* [attached] SPECIAL [[attached] ET_ECF_OPTIONS] */
typedef struct S2228 T2228;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS] */
typedef struct S2233 T2233;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
typedef struct S2234 T2234;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS] */
typedef struct S2235 T2235;

/* [attached] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS] */
typedef struct S2236 T2236;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_VISIBLE_CLASS] */
typedef struct S2237 T2237;

/* [attached] SPECIAL [[attached] ET_PARENT_LIST] */
typedef struct S2238 T2238;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_LIST] */
typedef struct S2239 T2239;

/* [attached] SPECIAL [[attached] ET_CREATOR] */
typedef struct S2240 T2240;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CREATOR] */
typedef struct S2241 T2241;

/* attached DS_LINKABLE [[attached] XM_DOCUMENT_NODE] */
typedef struct S2243 T2243;

/* [attached] DS_LINKED_QUEUE [[attached] CHARACTER_8] */
typedef struct S2249 T2249;

/* UC_UTF16_ROUTINES */
typedef struct S2250 T2250;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET] */
typedef struct S2251 T2251;

/* [attached] SPECIAL [[attached] ET_ADAPTED_UNIVERSE] */
typedef struct S2252 T2252;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE] */
typedef struct S2253 T2253;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_UNIVERSE] */
typedef struct S2254 T2254;

/* [attached] SPECIAL [[attached] ET_ECF_TARGET_PARENT] */
typedef struct S2256 T2256;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT] */
typedef struct S2257 T2257;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET_PARENT] */
typedef struct S2258 T2258;

/* [attached] SPECIAL [[attached] ET_CONVERT_FEATURE_ITEM] */
typedef struct S2260 T2260;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CONVERT_FEATURE_ITEM] */
typedef struct S2261 T2261;

/* [attached] SPECIAL [detachable DS_HASH_SET [[attached] STRING_8]] */
typedef struct S2262 T2262;

/* [attached] KL_SPECIAL_ROUTINES [detachable DS_HASH_SET [[attached] STRING_8]] */
typedef struct S2266 T2266;

/* [attached] DS_HASH_TABLE_CURSOR [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8] */
typedef struct S2267 T2267;

/* [attached] SPECIAL [[attached] ET_XACE_TARGET] */
typedef struct S2268 T2268;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_TARGET] */
typedef struct S2269 T2269;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_TARGET] */
typedef struct S2270 T2270;

/* [attached] SPECIAL [[attached] ET_XACE_CLUSTER] */
typedef struct S2271 T2271;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_CLUSTER] */
typedef struct S2272 T2272;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_CLUSTER] */
typedef struct S2273 T2273;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_XACE_CLASS_OPTIONS] */
typedef struct S2274 T2274;

/* attached DS_LINKABLE [[attached] ET_XACE_CLASS_OPTIONS] */
typedef struct S2276 T2276;

/* [attached] SPECIAL [[attached] YY_BUFFER] */
typedef struct S2277 T2277;

/* [attached] KL_SPECIAL_ROUTINES [[attached] YY_BUFFER] */
typedef struct S2278 T2278;

/* [attached] SPECIAL [[attached] ET_DYNAMIC_TARGET] */
typedef struct S2279 T2279;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET] */
typedef struct S2280 T2280;

/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
typedef struct S2282 T2282;

/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
typedef struct S2283 T2283;

/* attached DS_LINKABLE [detachable STRING_8] */
typedef struct S2285 T2285;

/* attached DS_LINKABLE [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
typedef struct S2287 T2287;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S2288 T2288;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS] */
typedef struct S2289 T2289;

/* [attached] SPECIAL [[attached] ET_TYPE_ITEM] */
typedef struct S2293 T2293;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_TYPE_ITEM] */
typedef struct S2294 T2294;

/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ELEMENT_CONTENT] */
typedef struct S2295 T2295;

/* attached DS_BILINKABLE [[attached] XM_DTD_ELEMENT_CONTENT] */
typedef struct S2296 T2296;

/* [attached] SPECIAL [[attached] ET_CLUSTER] */
typedef struct S2298 T2298;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER] */
typedef struct S2299 T2299;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLUSTER] */
typedef struct S2300 T2300;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_CLASS] */
typedef struct S2302 T2302;

/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER] */
typedef struct S2303 T2303;

/* [attached] SPECIAL [[attached] ET_FORMAL_PARAMETER] */
typedef struct S2304 T2304;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER] */
typedef struct S2305 T2305;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER] */
typedef struct S2306 T2306;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME] */
typedef struct S2308 T2308;

/* [attached] SPECIAL [[attached] ET_RENAME] */
typedef struct S2309 T2309;

/* [attached] TYPE [[attached] ET_RENAME] */
#define T2314 EIF_TYPE_OBJ

/* [attached] TYPE [[attached] ET_CALL_NAME] */
#define T2315 EIF_TYPE_OBJ

/* [attached] SPECIAL [[attached] ET_CALL_NAME] */
typedef struct S2317 T2317;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_RENAME] */
typedef struct S2318 T2318;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME] */
typedef struct S2319 T2319;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME] */
typedef struct S2320 T2320;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME] */
typedef struct S2322 T2322;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME] */
typedef struct S2329 T2329;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32] */
typedef struct S2330 T2330;

/* [attached] SPECIAL [[attached] ET_REPLICABLE_FEATURE] */
typedef struct S2331 T2331;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE] */
typedef struct S2334 T2334;

/* [attached] SPECIAL [[attached] ET_RENAME_ITEM] */
typedef struct S2336 T2336;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_RENAME_ITEM] */
typedef struct S2337 T2337;

/* [attached] SPECIAL [[attached] ET_EXPORT] */
typedef struct S2339 T2339;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPORT] */
typedef struct S2340 T2340;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE] */
typedef struct S2341 T2341;

/* attached DS_LINKABLE [[attached] ET_ADAPTED_FEATURE] */
typedef struct S2343 T2343;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_FEATURE] */
typedef struct S2344 T2344;

/* [attached] SPECIAL [[attached] ET_PARENT_FEATURE] */
typedef struct S2345 T2345;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE] */
typedef struct S2346 T2346;

/* [attached] SPECIAL [[attached] ET_DOTNET_FEATURE] */
typedef struct S2347 T2347;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_FEATURE] */
typedef struct S2348 T2348;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE] */
typedef struct S2349 T2349;

/* [attached] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]] */
typedef struct S2352 T2352;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE] */
typedef struct S2357 T2357;

/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]] */
typedef struct S2358 T2358;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE] */
typedef struct S2359 T2359;

/* attached DS_LINKABLE [[attached] ET_DOTNET_FEATURE] */
typedef struct S2361 T2361;

/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE] */
typedef struct S2362 T2362;

/* [attached] SPECIAL [[attached] ET_LIKE_FEATURE] */
typedef struct S2363 T2363;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE] */
typedef struct S2364 T2364;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE] */
typedef struct S2365 T2365;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8] */
typedef struct S2368 T2368;

/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]] */
typedef struct S2369 T2369;

/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME] */
typedef struct S2370 T2370;

/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]] */
typedef struct S2371 T2371;

/* ET_CLUSTER_ERROR */
typedef struct S2372 T2372;

/* ET_SYNTAX_ERROR */
typedef struct S2373 T2373;

/* ET_DOTNET_ASSEMBLY_ERROR */
typedef struct S2374 T2374;

/* [attached] TUPLE [ET_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S2377 T2377;

/* [attached] TUPLE [[attached] ET_ECF_CLUSTER] */
typedef struct S2378 T2378;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_CLUSTER]] */
typedef struct S2379 T2379;

/* [attached] TUPLE [ET_ECF_TARGET, STRING_8] */
typedef struct S2380 T2380;

/* [attached] TUPLE [[attached] ET_ECF_ADAPTED_LIBRARY] */
typedef struct S2382 T2382;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_ADAPTED_LIBRARY]] */
typedef struct S2383 T2383;

/* [attached] TUPLE [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S2384 T2384;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY]] */
typedef struct S2385 T2385;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] STRING_8]] */
typedef struct S2388 T2388;

/* [attached] TUPLE [ET_ECF_OPTIONS, STRING_8] */
typedef struct S2389 T2389;

/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8] */
typedef struct S2395 T2395;

/* [attached] TUPLE [ET_XACE_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S2397 T2397;

/* [attached] TUPLE [ET_LACE_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S2398 T2398;

/* [attached] SPECIAL [[attached] ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S2400 T2400;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S2402 T2402;

/* attached DS_LINKABLE [[attached] XM_ELEMENT_NODE] */
typedef struct S2407 T2407;

/* [attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8] */
typedef struct S2410 T2410;

/* [attached] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG] */
typedef struct S2418 T2418;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG]] */
typedef struct S2419 T2419;

/* [attached] TUPLE [ET_ECF_INTERNAL_UNIVERSE, ET_ECF_STATE] */
typedef struct S2420 T2420;

/* [attached] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S2421 T2421;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE]] */
typedef struct S2422 T2422;

/* [attached] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S2423 T2423;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY]] */
typedef struct S2424 T2424;

/* [attached] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S2425 T2425;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG]] */
typedef struct S2426 T2426;

/* [attached] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE] */
typedef struct S2427 T2427;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE]] */
typedef struct S2428 T2428;

/* [attached] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT] */
typedef struct S2429 T2429;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT]] */
typedef struct S2430 T2430;

/* [attached] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S2431 T2431;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE]] */
typedef struct S2432 T2432;

/* [attached] DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S2433 T2433;

/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8] */
typedef struct S2444 T2444;

/* [attached] TUPLE [[attached] LX_WILDCARD] */
typedef struct S2446 T2446;

/* [attached] PREDICATE [[attached] TUPLE [[attached] LX_WILDCARD]] */
typedef struct S2447 T2447;

/* [attached] TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
typedef struct S2448 T2448;

/* [attached] PREDICATE [[attached] TUPLE [[attached] STRING_8]] */
typedef struct S2449 T2449;

/* [attached] TUPLE [KL_STRING_ROUTINES, STRING_8] */
typedef struct S2450 T2450;

/* LX_DFA_WILDCARD */
typedef struct S2452 T2452;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] STRING_8] */
typedef struct S2457 T2457;

/* [attached] SPECIAL [[attached] ET_LOCAL_VARIABLE_ITEM] */
typedef struct S2459 T2459;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LOCAL_VARIABLE_ITEM] */
typedef struct S2461 T2461;

/* [attached] SPECIAL [[attached] ET_INDEXING_ITEM] */
typedef struct S2463 T2463;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_ITEM] */
typedef struct S2464 T2464;

/* [attached] SPECIAL [[attached] ET_INDEXING_TERM_ITEM] */
typedef struct S2465 T2465;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM_ITEM] */
typedef struct S2466 T2466;

/* [attached] SPECIAL [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S2467 T2467;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S2469 T2469;

/* [attached] SPECIAL [[attached] ET_FEATURE_CLAUSE] */
typedef struct S2470 T2470;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_CLAUSE] */
typedef struct S2471 T2471;

/* ET_STANDARD_ONCE_KEYS */
typedef struct S2472 T2472;

/* [attached] SPECIAL [[attached] ET_ELSEIF_PART] */
typedef struct S2475 T2475;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_PART] */
typedef struct S2476 T2476;

/* [attached] SPECIAL [[attached] ET_ELSEIF_EXPRESSION] */
typedef struct S2477 T2477;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_EXPRESSION] */
typedef struct S2478 T2478;

/* [attached] SPECIAL [[attached] ET_WHEN_PART] */
typedef struct S2479 T2479;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_WHEN_PART] */
typedef struct S2480 T2480;

/* [attached] SPECIAL [[attached] ET_CHOICE_ITEM] */
typedef struct S2482 T2482;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CHOICE_ITEM] */
typedef struct S2483 T2483;

/* [attached] SPECIAL [[attached] ET_MANIFEST_STRING_ITEM] */
typedef struct S2485 T2485;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_MANIFEST_STRING_ITEM] */
typedef struct S2486 T2486;

/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
typedef struct S2487 T2487;

/* ET_INFIX_CAST_EXPRESSION */
typedef struct S2489 T2489;

/* ET_AGENT_IMPLICIT_CURRENT_TARGET */
typedef struct S2493 T2493;

/* [attached] SPECIAL [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S2495 T2495;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S2497 T2497;

/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS] */
typedef struct S2499 T2499;

/* [attached] SPECIAL [[attached] NATURAL_64] */
typedef struct S2501 T2501;

/* [attached] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S2502 T2502;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S2503 T2503;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S2504 T2504;

/* [attached] SPECIAL [[attached] ET_ECF_CLUSTER] */
typedef struct S2505 T2505;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER] */
typedef struct S2506 T2506;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER] */
typedef struct S2507 T2507;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG] */
typedef struct S2508 T2508;

/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG] */
typedef struct S2509 T2509;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_CFLAG] */
typedef struct S2510 T2510;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S2512 T2512;

/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S2513 T2513;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S2514 T2514;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S2516 T2516;

/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S2517 T2517;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S2518 T2518;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S2520 T2520;

/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S2521 T2521;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S2522 T2522;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE] */
typedef struct S2524 T2524;

/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE] */
typedef struct S2525 T2525;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_MAKE] */
typedef struct S2526 T2526;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT] */
typedef struct S2528 T2528;

/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT] */
typedef struct S2529 T2529;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_OBJECT] */
typedef struct S2530 T2530;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S2532 T2532;

/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S2533 T2533;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S2534 T2534;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE] */
typedef struct S2536 T2536;

/* [attached] SPECIAL [[attached] ET_ECF_FILE_RULE] */
typedef struct S2537 T2537;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_FILE_RULE] */
typedef struct S2538 T2538;

/* [attached] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY] */
typedef struct S2539 T2539;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY] */
typedef struct S2540 T2540;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_LIBRARY] */
typedef struct S2541 T2541;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS] */
typedef struct S2542 T2542;

/* [attached] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS] */
typedef struct S2543 T2543;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ANDED_CONDITIONS] */
typedef struct S2544 T2544;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM] */
typedef struct S2545 T2545;

/* [attached] SPECIAL [[attached] ET_ECF_CONDITION_ITEM] */
typedef struct S2546 T2546;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CONDITION_ITEM] */
typedef struct S2547 T2547;

/* attached DS_LINKABLE [[attached] CHARACTER_8] */
typedef struct S2549 T2549;

/* attached DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
typedef struct S2551 T2551;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER] */
typedef struct S2555 T2555;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE] */
typedef struct S2558 T2558;

/* [attached] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]] */
typedef struct S2559 T2559;

/* [attached] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]] */
typedef struct S2563 T2563;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME] */
typedef struct S2564 T2564;

/* [attached] TUPLE [ET_GROUP] */
typedef struct S2565 T2565;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]]] */
typedef struct S2566 T2566;

/* AP_OPTION_COMPARATOR */
typedef struct S2567 T2567;

/* [attached] DS_QUICK_SORTER [[attached] AP_OPTION] */
typedef struct S2568 T2568;

/* KL_CHARACTER_ROUTINES */
typedef struct S2577 T2577;

/* [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
typedef struct S2578 T2578;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
typedef struct S2580 T2580;

/* ET_ACTUAL_PARAMETER_SUBLIST */
typedef struct S2581 T2581;

/* [attached] DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S2583 T2583;

/* [attached] TYPE [detachable DEVELOPER_EXCEPTION] */
#define T2585 EIF_TYPE_OBJ

/* [attached] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR] */
typedef struct S2594 T2594;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR] */
typedef struct S2595 T2595;

/* ET_NULL_INSTRUCTION */
typedef struct S2596 T2596;

/* ET_PARENTHESIS_INSTRUCTION */
typedef struct S2597 T2597;

/* ET_PARENTHESIS_SYMBOL */
typedef struct S2615 T2615;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
typedef struct S2621 T2621;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
typedef struct S2622 T2622;

/* [attached] TYPE [[attached] ET_NESTED_TYPE_CONTEXT] */
#define T2627 EIF_TYPE_OBJ

/* [attached] TYPE [[attached] ET_ACROSS_COMPONENT] */
#define T2628 EIF_TYPE_OBJ

/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]] */
typedef struct S2646 T2646;

/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]] */
typedef struct S2650 T2650;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8] */
typedef struct S2651 T2651;

/* [attached] KL_SPECIAL_ROUTINES [[attached] RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S2653 T2653;

/* [attached] SPECIAL [[attached] RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S2654 T2654;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S2655 T2655;

/* [attached] SPECIAL [[attached] LX_WILDCARD] */
typedef struct S2657 T2657;

/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_WILDCARD] */
typedef struct S2661 T2661;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8] */
typedef struct S2662 T2662;

/* LX_WILDCARD_PARSER */
typedef struct S2664 T2664;

/* LX_DESCRIPTION */
typedef struct S2665 T2665;

/* LX_FULL_DFA */
typedef struct S2666 T2666;

/* ET_UNIVERSE_ERROR */
typedef struct S2670 T2670;

/* ET_DYNAMIC_EQUALITY_EXPRESSION */
typedef struct S2675 T2675;

/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
typedef struct S2676 T2676;

/* [attached] TYPE [[attached] RX_REGULAR_EXPRESSION] */
#define T2680 EIF_TYPE_OBJ

/* ET_CONVERT_BUILTIN_EXPRESSION */
typedef struct S2684 T2684;

/* ET_CONVERT_FROM_EXPRESSION */
typedef struct S2685 T2685;

/* ET_CONVERT_TO_EXPRESSION */
typedef struct S2686 T2686;

/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
typedef struct S2697 T2697;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE] */
typedef struct S2702 T2702;

/* [attached] TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
typedef struct S2704 T2704;

/* [attached] TUPLE [[attached] ET_ECF_FILE_RULE] */
typedef struct S2705 T2705;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]] */
typedef struct S2706 T2706;

/* [attached] TUPLE [ET_ECF_FILE_RULES] */
typedef struct S2707 T2707;

/* [attached] PREDICATE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]] */
typedef struct S2708 T2708;

/* [attached] TUPLE [ET_ECF_STATE] */
typedef struct S2709 T2709;

/* attached DS_LINKABLE [[attached] ET_PARENT_FEATURE] */
typedef struct S2712 T2712;

/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S2718 T2718;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S2719 T2719;

/* [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S2720 T2720;

/* [attached] SPECIAL [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S2721 T2721;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S2722 T2722;

/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE] */
typedef struct S2723 T2723;

/* LX_START_CONDITIONS */
typedef struct S2724 T2724;

/* LX_ACTION_FACTORY */
typedef struct S2725 T2725;

/* LX_SYMBOL_CLASS */
typedef struct S2726 T2726;

/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8] */
typedef struct S2727 T2727;

/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS] */
typedef struct S2728 T2728;

/* [attached] SPECIAL [[attached] LX_SYMBOL_CLASS] */
typedef struct S2729 T2729;

/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA] */
typedef struct S2730 T2730;

/* LX_NFA */
typedef struct S2731 T2731;

/* [attached] SPECIAL [[attached] LX_NFA] */
typedef struct S2732 T2732;

/* LX_RULE */
typedef struct S2735 T2735;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8] */
typedef struct S2736 T2736;

/* LX_EQUIVALENCE_CLASSES */
typedef struct S2737 T2737;

/* LX_UNRECOGNIZED_RULE_ERROR */
typedef struct S2738 T2738;

/* LX_MISSING_QUOTE_ERROR */
typedef struct S2739 T2739;

/* LX_BAD_CHARACTER_CLASS_ERROR */
typedef struct S2740 T2740;

/* LX_BAD_CHARACTER_ERROR */
typedef struct S2741 T2741;

/* LX_FULL_AND_META_ERROR */
typedef struct S2742 T2742;

/* LX_FULL_AND_REJECT_ERROR */
typedef struct S2743 T2743;

/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
typedef struct S2744 T2744;

/* LX_CHARACTER_OUT_OF_RANGE_ERROR */
typedef struct S2745 T2745;

/* [attached] ARRAY [[attached] LX_RULE] */
typedef struct S2746 T2746;

/* [attached] SPECIAL [[attached] LX_RULE] */
typedef struct S2747 T2747;

/* LX_DFA_STATE */
typedef struct S2748 T2748;

/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE] */
typedef struct S2749 T2749;

/* [attached] DS_ARRAYED_LIST [[attached] LX_DFA_STATE] */
typedef struct S2750 T2750;

/* LX_SYMBOL_PARTITIONS */
typedef struct S2752 T2752;

/* [attached] KL_ARRAY_ROUTINES [[attached] LX_RULE] */
typedef struct S2753 T2753;

/* [attached] ARRAY [detachable LX_RULE] */
typedef struct S2754 T2754;

/* [attached] SPECIAL [detachable LX_RULE] */
typedef struct S2755 T2755;

/* LX_START_CONDITION */
typedef struct S2756 T2756;

/* [attached] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE] */
typedef struct S2757 T2757;

/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA] */
typedef struct S2759 T2759;

/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32] */
typedef struct S2760 T2760;

/* LX_NFA_STATE */
typedef struct S2761 T2761;

/* [attached] TUPLE [ET_ECF_LIBRARY] */
typedef struct S2763 T2763;

/* [attached] TUPLE [[attached] DS_HASH_SET [[attached] STRING_8]] */
typedef struct S2771 T2771;

/* ET_AST_NULL_LEAF */
typedef struct S2776 T2776;

/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
typedef struct S2777 T2777;

/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_RULE] */
typedef struct S2778 T2778;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_RULE] */
typedef struct S2779 T2779;

/* [attached] KL_ARRAY_ROUTINES [[attached] STRING_8] */
typedef struct S2780 T2780;

/* [attached] SPECIAL [[attached] LX_START_CONDITION] */
typedef struct S2781 T2781;

/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_START_CONDITION] */
typedef struct S2782 T2782;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_START_CONDITION] */
typedef struct S2783 T2783;

/* [attached] LX_SYMBOL_CLASS_TRANSITION [[attached] LX_NFA_STATE] */
typedef struct S2788 T2788;

/* [attached] LX_EPSILON_TRANSITION [[attached] LX_NFA_STATE] */
typedef struct S2790 T2790;

/* [attached] LX_SYMBOL_TRANSITION [[attached] LX_NFA_STATE] */
typedef struct S2793 T2793;

/* LX_ACTION */
typedef struct S2795 T2795;

/* [attached] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]] */
typedef struct S2796 T2796;

/* [attached] DS_BILINKABLE [[attached] INTEGER_32] */
typedef struct S2797 T2797;

/* [attached] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]] */
typedef struct S2798 T2798;

/* [attached] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE] */
typedef struct S2800 T2800;

/* [attached] DS_BUBBLE_SORTER [[attached] LX_RULE] */
typedef struct S2802 T2802;

/* [attached] SPECIAL [[attached] LX_NFA_STATE] */
typedef struct S2804 T2804;

/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE] */
typedef struct S2807 T2807;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE] */
typedef struct S2808 T2808;

/* [attached] SPECIAL [[attached] LX_DFA_STATE] */
typedef struct S2811 T2811;

/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE] */
typedef struct S2812 T2812;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_DFA_STATE] */
typedef struct S2813 T2813;

/* [attached] KL_ARRAY [[attached] LX_RULE] */
typedef struct S2814 T2814;

/* [attached] ARRAY [detachable LX_DFA_STATE] */
typedef struct S2815 T2815;

/* [attached] SPECIAL [detachable LX_DFA_STATE] */
typedef struct S2816 T2816;

/* [attached] KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
typedef struct S2817 T2817;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA] */
typedef struct S2818 T2818;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_NFA, [attached] INTEGER_32] */
typedef struct S2820 T2820;

/* CHARACTER_PROPERTY */
typedef struct S2821 T2821;

/* [attached] TUPLE [ET_ECF_LIBRARY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S2823 T2823;

/* [attached] TUPLE [ET_ECF_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S2824 T2824;

/* [attached] TUPLE [ET_LACE_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S2825 T2825;

/* [attached] TUPLE [ET_LACE_DOTNET_GAC_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S2826 T2826;

/* [attached] TUPLE [ET_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S2827 T2827;

/* [attached] TUPLE [ET_LIBRARY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S2828 T2828;

/* [attached] TYPE [[attached] BOOLEAN] */
#define T2829 EIF_TYPE_OBJ

/* [attached] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S2830 T2830;

/* [attached] PREDICATE [[attached] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION]] */
typedef struct S2831 T2831;

/* [attached] DS_SHELL_SORTER [[attached] INTEGER_32] */
typedef struct S2836 T2836;

/* [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE] */
typedef struct S2838 T2838;

/* [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE] */
typedef struct S2841 T2841;

/* [attached] KL_ARRAY [[attached] STRING_8] */
typedef struct S2844 T2844;

/* [attached] SPECIAL [[attached] NATURAL_16] */
typedef struct S2845 T2845;

/* [attached] SPECIAL [[attached] NATURAL_32] */
typedef struct S2846 T2846;

/* [attached] ARRAY [[attached] NATURAL_16] */
typedef struct S2847 T2847;

/* [attached] ARRAY [[attached] NATURAL_32] */
typedef struct S2848 T2848;

/* Struct for boxed version of type BOOLEAN */
struct Sb1 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_8 */
struct Sb2 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_32 */
struct Sb3 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T3 z1; /* item */
};

/* Struct for boxed version of type INTEGER_8 */
struct Sb4 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T4 z1; /* item */
};

/* Struct for boxed version of type INTEGER_16 */
struct Sb5 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T5 z1; /* item */
};

/* Struct for boxed version of type INTEGER_32 */
struct Sb6 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1; /* item */
};

/* Struct for boxed version of type INTEGER_64 */
struct Sb7 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T7 z1; /* item */
};

/* Struct for boxed version of type NATURAL_8 */
struct Sb8 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T8 z1; /* item */
};

/* Struct for boxed version of type NATURAL_16 */
struct Sb9 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T9 z1; /* item */
};

/* Struct for boxed version of type NATURAL_32 */
struct Sb10 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T10 z1; /* item */
};

/* Struct for boxed version of type NATURAL_64 */
struct Sb11 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T11 z1; /* item */
};

/* Struct for boxed version of type REAL_32 */
struct Sb12 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T12 z1; /* item */
};

/* Struct for boxed version of type REAL_64 */
struct Sb13 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T13 z1; /* item */
};

/* Struct for boxed version of type POINTER */
struct Sb14 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 z1; /* item */
};

/* Struct for type UTF_CONVERTER */
struct S598 {
	char dummy;
};

/* Struct for boxed version of type UTF_CONVERTER */
struct Sb598 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T598 z1; /* item */
};

/* Struct for type TYPED_POINTER [[attached] NATURAL_16] */
struct S2000 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [[attached] NATURAL_16] */
struct Sb2000 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2000 z1; /* item */
};

/* Struct for type TYPED_POINTER [[attached] NATURAL_8] */
struct S1538 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [[attached] NATURAL_8] */
struct Sb1538 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1538 z1; /* item */
};

/* Struct for type TYPED_POINTER [[attached] ANY] */
struct S1344 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [[attached] ANY] */
struct Sb1344 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1344 z1; /* item */
};

/* Struct for type TYPED_POINTER [[attached] SPECIAL [[attached] NATURAL_8]] */
struct S607 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [[attached] SPECIAL [[attached] NATURAL_8]] */
struct Sb607 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T607 z1; /* item */
};

/* Struct for type SPECIAL [CHARACTER_8] */
struct S15 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T2 z2[1]; /* item */
};

/* Struct for type SPECIAL [CHARACTER_32] */
struct S16 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T3 z2[1]; /* item */
};

/* Struct for type STRING_8 */
struct S17 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
};

/* Struct for type STRING_32 */
struct S18 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
};

/* Struct for type IMMUTABLE_STRING_32 */
struct S19 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* area_lower */
};

/* Struct for type ISE_EXCEPTION_MANAGER */
struct S20 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type GEC */
struct S25 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_handler */
	T0* a2; /* ecf_filename */
	T0* a3; /* last_system */
	T0* a4; /* target_option */
	T0* a5; /* setting_option */
	T0* a6; /* capability_option */
	T0* a7; /* variable_option */
	T0* a8; /* finalize_flag */
	T0* a9; /* gelint_flag */
	T0* a10; /* catcall_option */
	T0* a11; /* c_compile_option */
	T0* a12; /* split_option */
	T0* a13; /* split_size_option */
	T0* a14; /* new_instance_types_option */
	T0* a15; /* gc_option */
	T0* a16; /* thread_option */
	T0* a17; /* silent_flag */
	T0* a18; /* no_benchmark_flag */
	T0* a19; /* nested_benchmark_flag */
	T0* a20; /* metrics_flag */
	T0* a21; /* verbose_flag */
	T0* a22; /* version_flag */
	T0* a23; /* override_variables */
	T0* a24; /* override_settings */
	T0* a25; /* override_capabilities */
	T1 a26; /* ecf_gelint_option */
	T0* a27; /* new_instance_types */
	T6 a28; /* split_size */
};

/* Struct for type [attached] CELL [detachable EXCEPTION] */
struct S26 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32] */
struct S27 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T0* a3; /* keys */
	T0* a4; /* deleted_marks */
	T0* a5; /* indexes_map */
	T6 a6; /* iteration_position */
	T6 a7; /* count */
	T6 a8; /* deleted_item_position */
	T6 a9; /* control */
	T6 a10; /* found_item */
	T1 a11; /* has_default */
	T6 a12; /* item_position */
	T6 a13; /* ht_lowest_deleted_position */
	T6 a14; /* ht_deleted_item */
	T6 a15; /* ht_deleted_key */
	T1 a16; /* object_comparison */
};

/* Struct for type [attached] CELL [detachable TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN]] */
struct S28 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type [attached] CELL [[attached] NO_MORE_MEMORY] */
struct S29 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type C_STRING */
struct S31 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* managed_data */
	T6 a2; /* count */
};

/* Struct for type [attached] TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN] */
struct S32 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1;
	T6 z2;
	T6 z3;
	T0* z4;
	T0* z5;
	T0* z6;
	T0* z7;
	T0* z8;
	T0* z9;
	T6 z10;
	T1 z11;
};

/* Struct for type KL_TEXT_INPUT_FILE */
struct S33 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_file */
	T0* a2; /* last_string */
	T6 a3; /* mode */
	T0* a4; /* name */
	T0* a5; /* character_buffer */
	T2 a6; /* last_character */
	T14 a7; /* file_pointer */
	T1 a8; /* descriptor_available */
	T0* a9; /* internal_name */
	T0* a10; /* internal_detachable_name_pointer */
};

/* Struct for type KL_ARGUMENTS */
struct S34 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* program_name */
};

/* Struct for type ET_ISE_VARIABLES */
struct S35 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ERROR_HANDLER */
struct S36 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* info_file */
	T0* a3; /* mutex */
	T0* a4; /* error_file */
	T0* a5; /* warning_file */
	T1 a6; /* is_ise */
	T1 a7; /* is_verbose */
	T1 a8; /* has_eiffel_error */
	T1 a9; /* has_internal_error */
	T1 a10; /* is_ge */
	T1 a11; /* is_pedantic */
};

/* Struct for type KL_STRING_ROUTINES */
struct S38 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SYSTEM */
struct S40 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* master_class_mutex */
	T0* a2; /* master_classes */
	T0* a3; /* register_class_mutex */
	T0* a4; /* external_include_pathnames */
	T0* a5; /* external_object_pathnames */
	T0* a6; /* external_library_pathnames */
	T0* a7; /* external_make_pathnames */
	T0* a8; /* external_resource_pathnames */
	T0* a9; /* external_cflags */
	T0* a10; /* external_linker_flags */
	T1 a11; /* console_application_mode */
	T1 a12; /* alias_transition_mode */
	T0* a13; /* current_system */
	T0* a14; /* universe */
	T0* a15; /* name */
	T0* a16; /* libraries */
	T0* a17; /* clusters */
	T0* a18; /* dotnet_assemblies */
	T0* a19; /* system_name */
	T0* a20; /* any_type */
	T0* a21; /* detachable_any_type */
	T0* a22; /* detachable_separate_any_type */
	T0* a23; /* separate_any_type */
	T0* a24; /* any_parent */
	T0* a25; /* any_parents */
	T0* a26; /* any_clients */
	T0* a27; /* tuple_type */
	T0* a28; /* detachable_tuple_type */
	T0* a29; /* tuple_like_current_type */
	T0* a30; /* unfolded_empty_tuple_actual_parameters */
	T0* a31; /* array_any_type */
	T0* a32; /* array_detachable_any_type */
	T0* a33; /* array_none_type */
	T0* a34; /* array_like_current_type */
	T0* a35; /* boolean_type */
	T0* a36; /* character_type */
	T0* a37; /* character_8_type */
	T0* a38; /* character_8_convert_feature */
	T0* a39; /* character_32_type */
	T0* a40; /* character_32_convert_feature */
	T0* a41; /* double_type */
	T0* a42; /* exception_type */
	T0* a43; /* detachable_exception_type */
	T0* a44; /* exception_manager_type */
	T0* a45; /* function_type */
	T0* a46; /* immutable_string_32_type */
	T0* a47; /* integer_type */
	T0* a48; /* integer_8_type */
	T0* a49; /* integer_8_convert_feature */
	T0* a50; /* integer_16_type */
	T0* a51; /* integer_16_convert_feature */
	T0* a52; /* integer_32_type */
	T0* a53; /* integer_32_convert_feature */
	T0* a54; /* integer_64_type */
	T0* a55; /* integer_64_convert_feature */
	T0* a56; /* ise_exception_manager_type */
	T0* a57; /* iterable_detachable_any_type */
	T0* a58; /* natural_type */
	T0* a59; /* natural_8_type */
	T0* a60; /* natural_8_convert_feature */
	T0* a61; /* natural_16_type */
	T0* a62; /* natural_16_convert_feature */
	T0* a63; /* natural_32_type */
	T0* a64; /* natural_32_convert_feature */
	T0* a65; /* natural_64_type */
	T0* a66; /* natural_64_convert_feature */
	T0* a67; /* none_type */
	T0* a68; /* detachable_none_type */
	T0* a69; /* pointer_type */
	T0* a70; /* predicate_like_current_type */
	T0* a71; /* procedure_like_current_type */
	T0* a72; /* real_type */
	T0* a73; /* real_32_type */
	T0* a74; /* real_32_convert_feature */
	T0* a75; /* real_64_type */
	T0* a76; /* real_64_convert_feature */
	T0* a77; /* routine_type */
	T0* a78; /* special_any_type */
	T0* a79; /* special_detachable_any_type */
	T0* a80; /* string_type */
	T0* a81; /* detachable_string_type */
	T0* a82; /* string_8_type */
	T0* a83; /* string_8_convert_feature */
	T0* a84; /* string_32_type */
	T0* a85; /* string_32_convert_feature */
	T0* a86; /* system_object_type */
	T0* a87; /* system_object_parents */
	T0* a88; /* system_string_type */
	T0* a89; /* type_any_type */
	T0* a90; /* type_type_any_type */
	T0* a91; /* type_detachable_any_type */
	T0* a92; /* type_detachable_like_current_type */
	T0* a93; /* detachable_type_exception_type */
	T0* a94; /* type_detachable_exception_type */
	T0* a95; /* detachable_type_detachable_any_type */
	T0* a96; /* type_like_current_type */
	T0* a97; /* typed_pointer_any_type */
	T0* a98; /* typed_pointer_like_current_type */
	T0* a99; /* wide_character_type */
	T1 a100; /* is_read_only */
	T6 a101; /* registered_class_count */
	T1 a102; /* attachment_type_conformance_mode */
	T1 a103; /* scoop_mode */
	T6 a104; /* default_create_seed */
	T0* a105; /* implicit_attachment_type_mark */
	T6 a106; /* copy_seed */
	T6 a107; /* is_equal_seed */
	T6 a108; /* routine_call_seed */
	T6 a109; /* function_item_seed */
	T6 a110; /* dispose_seed */
	T6 a111; /* iterable_new_cursor_seed */
	T6 a112; /* iteration_cursor_after_seed */
	T6 a113; /* iteration_cursor_forth_seed */
	T1 a114; /* is_dotnet */
	T1 a115; /* target_type_attachment_mode */
	T1 a116; /* obsolete_routine_type_mode */
};

/* Struct for type KL_EXCEPTIONS */
struct S41 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type AP_PARSER */
struct S42 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* options */
	T0* a2; /* alternative_options_lists */
	T0* a3; /* parameters */
	T0* a4; /* parameters_description */
	T0* a5; /* help_option */
	T0* a6; /* error_handler */
	T0* a7; /* application_description */
	T0* a8; /* current_options */
	T1 a9; /* is_first_option */
	T0* a10; /* last_option_parameter */
};

/* Struct for type AP_ALTERNATIVE_OPTIONS_LIST */
struct S43 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* introduction_option */
	T0* a2; /* parameters_description */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type AP_STRING_OPTION */
struct S44 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T1 a7; /* is_hidden */
	T1 a8; /* is_mandatory */
	T6 a9; /* maximum_occurrences */
	T1 a10; /* has_short_form */
	T2 a11; /* short_form */
};

/* Struct for type AP_FLAG */
struct S46 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* occurrences */
	T0* a2; /* description */
	T0* a3; /* long_form */
	T2 a4; /* short_form */
	T1 a5; /* has_short_form */
	T1 a6; /* is_hidden */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
};

/* Struct for type AP_ENUMERATION_OPTION */
struct S47 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* possible_values */
	T0* a5; /* parameter_description */
	T1 a6; /* needs_parameter */
	T0* a7; /* long_form */
	T1 a8; /* is_hidden */
	T1 a9; /* is_mandatory */
	T6 a10; /* maximum_occurrences */
	T1 a11; /* has_short_form */
	T2 a12; /* short_form */
};

/* Struct for type AP_BOOLEAN_OPTION */
struct S48 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T1 a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T1 a7; /* is_hidden */
	T1 a8; /* is_mandatory */
	T6 a9; /* maximum_occurrences */
	T1 a10; /* has_short_form */
	T2 a11; /* short_form */
};

/* Struct for type AP_INTEGER_OPTION */
struct S49 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T6 a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T2 a7; /* short_form */
	T1 a8; /* is_hidden */
	T1 a9; /* is_mandatory */
	T6 a10; /* maximum_occurrences */
	T1 a11; /* has_short_form */
};

/* Struct for type ET_NULL_ERROR_HANDLER */
struct S53 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* info_file */
	T0* a3; /* mutex */
	T0* a4; /* error_file */
	T0* a5; /* warning_file */
	T1 a6; /* is_ise */
	T1 a7; /* is_verbose */
	T1 a8; /* has_eiffel_error */
	T1 a9; /* has_internal_error */
	T1 a10; /* is_ge */
	T1 a11; /* is_pedantic */
};

/* Struct for type ET_XACE_SYSTEM_PARSER */
struct S55 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_system */
	T0* a2; /* ast_factory */
	T0* a3; /* xml_parser */
	T0* a4; /* tree_pipe */
	T0* a5; /* xml_validator */
	T0* a6; /* xml_preprocessor */
	T0* a7; /* parsed_libraries */
	T0* a8; /* error_handler */
	T0* a9; /* library_parser */
	T6 a10; /* new_name_count */
	T1 a11; /* is_shallow */
};

/* Struct for type ET_XACE_DEFAULT_ERROR_HANDLER */
struct S56 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* error_count */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8] */
struct S57 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T6 a3; /* position */
	T6 a4; /* last_position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
	T6 a9; /* found_position */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* special_item_routines */
	T0* a13; /* item_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type UC_STRING_EQUALITY_TESTER */
struct S58 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ECF_VARIABLES */
struct S61 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_variables */
	T0* a2; /* secondary_variables */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8] */
struct S62 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_ECF_SYSTEM_PARSER */
struct S66 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_system */
	T0* a2; /* ast_factory */
	T0* a3; /* override_settings */
	T0* a4; /* override_capabilities */
	T0* a5; /* override_variables */
	T0* a6; /* parsed_libraries */
	T0* a7; /* parsed_dotnet_assemblies */
	T0* a8; /* redirected_locations */
	T0* a9; /* xml_parser */
	T0* a10; /* tree_pipe */
	T0* a11; /* error_handler */
	T0* a12; /* ise_version */
};

/* Struct for type ET_ECF_ERROR_HANDLER */
struct S67 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* error_count */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type ET_ECF_SYSTEM */
struct S69 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* filename */
	T0* a2; /* targets */
	T0* a3; /* library_target */
	T0* a4; /* libraries */
	T0* a5; /* selected_target */
	T0* a6; /* dotnet_assemblies */
	T0* a7; /* root_type */
	T0* a8; /* none_type */
	T0* a9; /* any_type */
	T0* a10; /* master_classes */
	T0* a11; /* root_creation */
	T6 a12; /* default_create_seed */
	T0* a13; /* boolean_type */
	T0* a14; /* character_8_type */
	T0* a15; /* character_32_type */
	T0* a16; /* integer_8_type */
	T0* a17; /* integer_16_type */
	T0* a18; /* integer_32_type */
	T0* a19; /* integer_64_type */
	T0* a20; /* natural_8_type */
	T0* a21; /* natural_16_type */
	T0* a22; /* natural_32_type */
	T0* a23; /* natural_64_type */
	T0* a24; /* real_32_type */
	T0* a25; /* real_64_type */
	T0* a26; /* pointer_type */
	T0* a27; /* special_any_type */
	T0* a28; /* string_8_type */
	T0* a29; /* string_32_type */
	T0* a30; /* immutable_string_32_type */
	T0* a31; /* array_any_type */
	T0* a32; /* typed_pointer_any_type */
	T0* a33; /* routine_type */
	T0* a34; /* detachable_tuple_type */
	T0* a35; /* universe */
	T0* a36; /* ise_exception_manager_type */
	T0* a37; /* detachable_none_type */
	T1 a38; /* attachment_type_conformance_mode */
	T1 a39; /* use_boehm_gc */
	T0* a40; /* external_include_pathnames */
	T0* a41; /* external_cflags */
	T0* a42; /* external_linker_flags */
	T0* a43; /* external_library_pathnames */
	T0* a44; /* external_object_pathnames */
	T0* a45; /* character_type */
	T0* a46; /* wide_character_type */
	T0* a47; /* integer_type */
	T0* a48; /* natural_type */
	T0* a49; /* real_type */
	T0* a50; /* double_type */
	T0* a51; /* external_make_pathnames */
	T0* a52; /* external_resource_pathnames */
	T6 a53; /* routine_call_seed */
	T6 a54; /* function_item_seed */
	T6 a55; /* is_equal_seed */
	T6 a56; /* dispose_seed */
	T1 a57; /* trace_mode */
	T1 a58; /* exception_trace_mode */
	T1 a59; /* multithreaded_mode */
	T1 a60; /* console_application_mode */
	T0* a61; /* system_name */
	T0* a62; /* name */
	T0* a63; /* ecf_namespace */
	T0* a64; /* ecf_version */
	T0* a65; /* description */
	T0* a66; /* notes */
	T1 a67; /* is_read_only */
	T0* a68; /* uuid */
	T0* a69; /* register_class_mutex */
	T1 a70; /* alias_transition_mode */
	T0* a71; /* current_system */
	T0* a72; /* tuple_type */
	T0* a73; /* detachable_exception_type */
	T0* a74; /* exception_type */
	T0* a75; /* string_type */
	T1 a76; /* is_preparsed */
	T0* a77; /* clusters */
	T0* a78; /* master_class_mutex */
	T0* a79; /* detachable_any_type */
	T0* a80; /* detachable_separate_any_type */
	T0* a81; /* separate_any_type */
	T0* a82; /* any_parent */
	T0* a83; /* any_parents */
	T0* a84; /* any_clients */
	T0* a85; /* tuple_like_current_type */
	T0* a86; /* unfolded_empty_tuple_actual_parameters */
	T0* a87; /* array_detachable_any_type */
	T0* a88; /* array_none_type */
	T0* a89; /* array_like_current_type */
	T0* a90; /* character_8_convert_feature */
	T0* a91; /* character_32_convert_feature */
	T0* a92; /* exception_manager_type */
	T0* a93; /* function_type */
	T0* a94; /* integer_8_convert_feature */
	T0* a95; /* integer_16_convert_feature */
	T0* a96; /* integer_32_convert_feature */
	T0* a97; /* integer_64_convert_feature */
	T0* a98; /* iterable_detachable_any_type */
	T0* a99; /* natural_8_convert_feature */
	T0* a100; /* natural_16_convert_feature */
	T0* a101; /* natural_32_convert_feature */
	T0* a102; /* natural_64_convert_feature */
	T0* a103; /* predicate_like_current_type */
	T0* a104; /* procedure_like_current_type */
	T0* a105; /* real_32_convert_feature */
	T0* a106; /* real_64_convert_feature */
	T0* a107; /* special_detachable_any_type */
	T0* a108; /* detachable_string_type */
	T0* a109; /* string_8_convert_feature */
	T0* a110; /* string_32_convert_feature */
	T0* a111; /* system_object_type */
	T0* a112; /* system_object_parents */
	T0* a113; /* system_string_type */
	T0* a114; /* type_any_type */
	T0* a115; /* type_type_any_type */
	T0* a116; /* type_detachable_any_type */
	T0* a117; /* type_detachable_like_current_type */
	T0* a118; /* detachable_type_exception_type */
	T0* a119; /* type_detachable_exception_type */
	T0* a120; /* detachable_type_detachable_any_type */
	T0* a121; /* type_like_current_type */
	T0* a122; /* typed_pointer_like_current_type */
	T0* a123; /* scm_read_mapping_builder */
	T0* a124; /* scm_write_mapping_builder */
	T6 a125; /* registered_class_count */
	T1 a126; /* scoop_mode */
	T0* a127; /* implicit_attachment_type_mark */
	T6 a128; /* copy_seed */
	T6 a129; /* iterable_new_cursor_seed */
	T6 a130; /* iteration_cursor_after_seed */
	T6 a131; /* iteration_cursor_forth_seed */
	T1 a132; /* is_dotnet */
	T1 a133; /* obsolete_routine_type_mode */
	T1 a134; /* target_type_attachment_mode */
};

/* Struct for type ET_ECF_TARGET */
struct S70 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* settings */
	T0* a2; /* capabilities */
	T0* a3; /* options */
	T0* a4; /* system_config */
	T0* a5; /* root */
	T0* a6; /* variables */
	T0* a7; /* name */
	T0* a8; /* parent */
	T0* a9; /* description */
	T0* a10; /* precompiled_library */
	T0* a11; /* version */
	T1 a12; /* is_abstract */
	T0* a13; /* clusters */
	T0* a14; /* libraries */
	T0* a15; /* dotnet_assemblies */
	T0* a16; /* file_rules */
	T0* a17; /* class_mappings */
	T0* a18; /* external_cflags */
	T0* a19; /* external_includes */
	T0* a20; /* external_libraries */
	T0* a21; /* external_linker_flags */
	T0* a22; /* external_makes */
	T0* a23; /* external_objects */
	T0* a24; /* external_resources */
	T0* a25; /* pre_compile_actions */
	T0* a26; /* post_compile_actions */
	T0* a27; /* notes */
};

/* Struct for type ET_ECF_SETTINGS */
struct S71 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_settings */
	T0* a2; /* secondary_settings */
};

/* Struct for type ET_LACE_PARSER */
struct S77 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_system */
	T6 a2; /* yy_parsing_status */
	T0* a3; /* named_clusters */
	T0* a4; /* override_cluster_names */
	T0* a5; /* external_include_pathnames */
	T0* a6; /* external_object_pathnames */
	T0* a7; /* metadata_cache_path_value */
	T0* a8; /* msil_clr_version_value */
	T1 a9; /* console_application_value */
	T1 a10; /* exception_trace_value */
	T1 a11; /* trace_value */
	T0* a12; /* ast_factory */
	T6 a13; /* eif_lineno */
	T0* a14; /* eif_buffer */
	T0* a15; /* input_buffer */
	T6 a16; /* yy_end */
	T6 a17; /* yy_position */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_suspended_yystacksize */
	T6 a21; /* yy_suspended_yystate */
	T6 a22; /* yy_suspended_yyn */
	T6 a23; /* yy_suspended_yychar1 */
	T6 a24; /* yy_suspended_index */
	T6 a25; /* yy_suspended_yyss_top */
	T6 a26; /* yy_suspended_yy_goto */
	T0* a27; /* yyr1 */
	T0* a28; /* yyss */
	T6 a29; /* yyssp */
	T0* a30; /* yypgoto */
	T0* a31; /* yycheck */
	T0* a32; /* yytable */
	T0* a33; /* yydefgoto */
	T6 a34; /* error_count */
	T1 a35; /* yy_lookahead_needed */
	T6 a36; /* yyerrstatus */
	T0* a37; /* yypact */
	T6 a38; /* last_token */
	T0* a39; /* yytranslate */
	T0* a40; /* yydefact */
	T0* a41; /* filename */
	T0* a42; /* error_handler */
	T0* a43; /* last_et_identifier_value */
	T1 a44; /* yy_rejected */
	T6 a45; /* yy_state_count */
	T6 a46; /* yy_full_match */
	T6 a47; /* yy_lp */
	T6 a48; /* yy_looking_for_trail_begin */
	T6 a49; /* yy_full_lp */
	T6 a50; /* yy_full_state */
	T6 a51; /* pushed_start_condition_count */
	T6 a52; /* yy_start_state */
	T6 a53; /* yy_start */
	T6 a54; /* line */
	T6 a55; /* column */
	T6 a56; /* position */
	T1 a57; /* yy_more_flag */
	T6 a58; /* yy_more_len */
	T6 a59; /* yy_last_accepting_state */
	T6 a60; /* yy_last_accepting_cpos */
	T6 a61; /* yyvsp1 */
	T6 a62; /* yyvsp2 */
	T6 a63; /* yyvsp3 */
	T6 a64; /* yyvsp4 */
	T6 a65; /* yyvsp5 */
	T6 a66; /* yyvsp6 */
	T6 a67; /* yyvsp7 */
	T6 a68; /* yyvsp8 */
	T6 a69; /* yyvsp9 */
	T6 a70; /* yyvsp10 */
	T6 a71; /* yyvsp11 */
	T6 a72; /* yyvsp12 */
	T0* a73; /* yy_state_stack */
	T0* a74; /* yy_content_area */
	T0* a75; /* yy_ec */
	T0* a76; /* yy_content */
	T0* a77; /* yy_accept */
	T0* a78; /* yy_chk */
	T0* a79; /* yy_base */
	T0* a80; /* yy_def */
	T0* a81; /* yy_meta */
	T0* a82; /* yy_nxt */
	T0* a83; /* yy_acclist */
	T0* a84; /* yytypes2 */
	T6 a85; /* yyvsc1 */
	T0* a86; /* yyvs1 */
	T0* a87; /* yyspecial_routines1 */
	T0* a88; /* last_detachable_any_value */
	T6 a89; /* yyvsc2 */
	T0* a90; /* yyvs2 */
	T0* a91; /* yyspecial_routines2 */
	T0* a92; /* yyvs10 */
	T0* a93; /* yyvs5 */
	T0* a94; /* yyvs12 */
	T0* a95; /* yyvs8 */
	T0* a96; /* yyspecial_routines10 */
	T6 a97; /* yyvsc10 */
	T6 a98; /* yyvsc8 */
	T0* a99; /* yyspecial_routines8 */
	T6 a100; /* yyvsc5 */
	T0* a101; /* yyspecial_routines5 */
	T0* a102; /* yyvs4 */
	T0* a103; /* yyvs3 */
	T6 a104; /* yyvsc4 */
	T0* a105; /* yyspecial_routines4 */
	T0* a106; /* yyspecial_routines3 */
	T0* a107; /* yyvs7 */
	T6 a108; /* yyvsc3 */
	T6 a109; /* yyvsc7 */
	T0* a110; /* yyspecial_routines7 */
	T0* a111; /* yyvs6 */
	T6 a112; /* yyvsc6 */
	T0* a113; /* yyspecial_routines6 */
	T6 a114; /* yyvsc12 */
	T0* a115; /* yyspecial_routines12 */
	T0* a116; /* yyvs11 */
	T0* a117; /* yyvs9 */
	T6 a118; /* yyvsc11 */
	T0* a119; /* yyspecial_routines11 */
	T6 a120; /* yyvsc9 */
	T0* a121; /* yyspecial_routines9 */
	T0* a122; /* yytypes1 */
	T0* a123; /* yy_pushed_start_conditions */
	T6 a124; /* code_ */
};

/* Struct for type ET_LACE_ERROR_HANDLER */
struct S78 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
};

/* Struct for type ET_DYNAMIC_SYSTEM */
struct S80 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T1 a2; /* catcall_error_mode */
	T0* a3; /* current_system */
	T0* a4; /* system_processor */
	T0* a5; /* dynamic_types */
	T0* a6; /* null_dynamic_type_set_builder */
	T1 a7; /* full_class_checking */
	T1 a8; /* catcall_warning_mode */
	T0* a9; /* new_instance_types */
	T0* a10; /* dynamic_type_set_builder */
	T0* a11; /* unknown_type */
	T0* a12; /* boolean_type */
	T0* a13; /* character_8_type */
	T0* a14; /* character_32_type */
	T0* a15; /* immutable_string_32_type */
	T0* a16; /* integer_8_type */
	T0* a17; /* integer_16_type */
	T0* a18; /* integer_32_type */
	T0* a19; /* integer_64_type */
	T0* a20; /* natural_8_type */
	T0* a21; /* natural_16_type */
	T0* a22; /* natural_32_type */
	T0* a23; /* natural_64_type */
	T0* a24; /* real_32_type */
	T0* a25; /* real_64_type */
	T0* a26; /* pointer_type */
	T0* a27; /* string_8_type */
	T0* a28; /* string_32_type */
	T0* a29; /* special_character_8_type */
	T0* a30; /* special_character_32_type */
	T0* a31; /* ise_exception_manager_type */
	T0* a32; /* any_type */
	T0* a33; /* none_type */
	T0* a34; /* root_type */
	T0* a35; /* root_creation_procedure */
	T0* a36; /* special_count_feature */
	T0* a37; /* special_capacity_feature */
	T0* a38; /* array_area_feature */
	T0* a39; /* array_lower_feature */
	T0* a40; /* array_upper_feature */
	T0* a41; /* typed_pointer_to_pointer_feature */
	T0* a42; /* routine_closed_operands_feature */
	T0* a43; /* routine_rout_disp_feature */
	T0* a44; /* routine_set_rout_disp_final_feature */
	T0* a45; /* ise_exception_manager_init_exception_manager_feature */
	T0* a46; /* ise_exception_manager_last_exception_feature */
	T0* a47; /* ise_exception_manager_once_raise_feature */
	T0* a48; /* ise_exception_manager_set_exception_data_feature */
	T0* a49; /* ise_runtime_type_conforms_to_feature */
	T1 a50; /* in_dynamic_type */
	T0* a51; /* ise_runtime_new_type_instance_of_feature */
	T1 a52; /* in_create_meta_type */
	T1 a53; /* all_attributes_used */
	T0* a54; /* ise_runtime_reference_field_feature */
	T0* a55; /* ise_runtime_set_reference_field_feature */
};

/* Struct for type ET_SYSTEM_PROCESSOR */
struct S81 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* stop_request */
	T0* a2; /* eiffel_parser */
	T0* a3; /* interface_checker */
	T1 a4; /* benchmark_shown */
	T0* a5; /* ise_version */
	T0* a6; /* eiffel_preparser */
	T0* a7; /* master_class_checker */
	T0* a8; /* provider_checker */
	T0* a9; /* ancestor_builder */
	T0* a10; /* feature_flattener */
	T0* a11; /* implementation_checker */
	T0* a12; /* error_handler */
	T0* a13; /* processed_class_count_stack */
	T0* a14; /* ast_factory */
	T0* a15; /* dotnet_assembly_consumer */
	T0* a16; /* ecma_version */
	T1 a17; /* nested_benchmark_shown */
	T1 a18; /* metrics_shown */
	T1 a19; /* flat_mode */
	T1 a20; /* flat_dbc_mode */
	T1 a21; /* preparse_shallow_mode */
	T1 a22; /* preparse_single_mode */
	T1 a23; /* preparse_multiple_mode */
	T1 a24; /* unknown_builtin_reported */
	T1 a25; /* qualified_anchored_types_cycle_detection_enabled */
	T1 a26; /* use_attribute_keyword */
	T1 a27; /* use_note_keyword */
	T1 a28; /* use_reference_keyword */
	T1 a29; /* use_attached_keyword */
	T1 a30; /* use_detachable_keyword */
	T1 a31; /* cluster_dependence_enabled */
	T6 a32; /* postponed_class_count */
	T6 a33; /* processed_class_count */
	T1 a34; /* preparse_readonly_mode */
	T1 a35; /* preparse_override_mode */
	T1 a36; /* use_cluster_dependence_pathnames */
	T1 a37; /* providers_enabled */
	T1 a38; /* suppliers_enabled */
};

/* Struct for type ET_C_GENERATOR */
struct S84 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* never_void_target_count */
	T6 a2; /* can_be_void_target_count */
	T1 a3; /* has_fatal_error */
	T0* a4; /* system_processor */
	T0* a5; /* current_dynamic_system */
	T0* a6; /* dynamic_types */
	T1 a7; /* short_names */
	T1 a8; /* split_mode */
	T6 a9; /* split_threshold */
	T1 a10; /* use_boehm_gc */
	T0* a11; /* system_name */
	T0* a12; /* current_file */
	T0* a13; /* header_file */
	T0* a14; /* current_type */
	T0* a15; /* current_feature */
	T0* a16; /* extra_dynamic_type_sets */
	T0* a17; /* current_dynamic_type_sets */
	T0* a18; /* current_function_header_buffer */
	T0* a19; /* current_function_body_buffer */
	T0* a20; /* temp_variables */
	T0* a21; /* used_temp_variables */
	T0* a22; /* free_temp_variables */
	T0* a23; /* frozen_temp_variables */
	T0* a24; /* conforming_types */
	T0* a25; /* conforming_type_set */
	T0* a26; /* non_conforming_types */
	T0* a27; /* equality_type_set */
	T0* a28; /* equality_common_types */
	T0* a29; /* operand_stack */
	T0* a30; /* call_operands */
	T0* a31; /* attachment_dynamic_type_ids */
	T0* a32; /* target_dynamic_type_ids */
	T0* a33; /* target_dynamic_types */
	T0* a34; /* standalone_type_sets */
	T0* a35; /* deep_twin_types */
	T0* a36; /* deep_equal_types */
	T0* a37; /* deep_feature_target_type_sets */
	T0* a38; /* current_object_tests */
	T0* a39; /* current_object_equalities */
	T0* a40; /* current_equalities */
	T0* a41; /* current_agents */
	T0* a42; /* agent_open_operands */
	T0* a43; /* agent_closed_operands */
	T0* a44; /* agent_target */
	T0* a45; /* agent_arguments */
	T0* a46; /* agent_instruction */
	T0* a47; /* agent_expression */
	T0* a48; /* agent_closed_operands_type */
	T0* a49; /* wrapper_expression */
	T0* a50; /* agent_tuple_item_expressions */
	T0* a51; /* agent_manifest_tuple */
	T0* a52; /* formal_arguments */
	T0* a53; /* manifest_array_types */
	T0* a54; /* big_manifest_array_types */
	T0* a55; /* manifest_tuple_types */
	T0* a56; /* once_features */
	T0* a57; /* once_per_process_counts */
	T0* a58; /* once_per_thread_counts */
	T0* a59; /* constant_features */
	T0* a60; /* inline_constants */
	T0* a61; /* dispose_procedures */
	T0* a62; /* dynamic_type_id_set_names */
	T0* a63; /* called_features */
	T0* a64; /* called_static_features */
	T0* a65; /* included_header_filenames */
	T0* a66; /* included_runtime_header_files */
	T0* a67; /* included_runtime_c_files */
	T0* a68; /* c_filenames */
	T1 a69; /* finalize_mode */
	T0* a70; /* locals_written_in_body */
	T0* a71; /* locals_written_in_rescue */
	T0* a72; /* locals_written */
	T0* a73; /* locals_read_in_body */
	T0* a74; /* locals_read_in_rescue */
	T0* a75; /* locals_read */
	T0* a76; /* external_c_regexp */
	T0* a77; /* external_c_macro_regexp */
	T0* a78; /* external_c_struct_regexp */
	T0* a79; /* external_c_inline_regexp */
	T0* a80; /* old_external_c_regexp */
	T0* a81; /* old_external_c_macro_regexp */
	T0* a82; /* old_external_c_struct_regexp */
	T0* a83; /* external_cpp_regexp */
	T0* a84; /* external_cpp_inline_regexp */
	T0* a85; /* external_dllwin_regexp */
	T0* a86; /* old_external_dllwin32_regexp */
	T1 a87; /* in_static_feature */
	T1 a88; /* type_info_ancestors_used */
	T1 a89; /* type_info_attributes_used */
	T1 a90; /* type_info_attribute_name_used */
	T1 a91; /* type_info_attribute_type_id_used */
	T1 a92; /* type_info_attribute_offset_used */
	T1 a93; /* type_info_generator_used */
	T1 a94; /* type_info_name_used */
	T1 a95; /* type_info_generic_parameters_used */
	T1 a96; /* type_info_object_size_used */
	T0* a97; /* c_file */
	T6 a98; /* c_file_size */
	T0* a99; /* cpp_file */
	T6 a100; /* cpp_file_size */
	T6 a101; /* indentation */
	T0* a102; /* assignment_target */
	T1 a103; /* in_operand */
	T0* a104; /* call_target_type */
	T0* a105; /* current_agent */
	T1 a106; /* call_target_check_void */
	T1 a107; /* has_rescue */
	T1 a108; /* result_written */
	T1 a109; /* result_read */
	T1 a110; /* has_retry */
};

/* Struct for type KL_SHELL_COMMAND */
struct S85 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* exit_code */
	T0* a2; /* string_command */
	T0* a3; /* command */
	T6 a4; /* return_code */
	T1 a5; /* is_system_code */
};

/* Struct for type ET_SYSTEM_MULTIPROCESSOR */
struct S87 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* stop_request */
	T0* a2; /* eiffel_parser */
	T0* a3; /* interface_checker */
	T1 a4; /* benchmark_shown */
	T0* a5; /* ise_version */
	T0* a6; /* other_processors */
	T0* a7; /* error_handler */
	T0* a8; /* eiffel_preparser */
	T0* a9; /* master_class_checker */
	T0* a10; /* provider_checker */
	T0* a11; /* ancestor_builder */
	T0* a12; /* feature_flattener */
	T0* a13; /* implementation_checker */
	T0* a14; /* ecma_version */
	T1 a15; /* nested_benchmark_shown */
	T1 a16; /* metrics_shown */
	T1 a17; /* flat_mode */
	T1 a18; /* flat_dbc_mode */
	T0* a19; /* processed_class_count_stack */
	T0* a20; /* ast_factory */
	T0* a21; /* dotnet_assembly_consumer */
	T1 a22; /* use_attribute_keyword */
	T1 a23; /* use_note_keyword */
	T1 a24; /* use_reference_keyword */
	T1 a25; /* use_attached_keyword */
	T1 a26; /* use_detachable_keyword */
	T1 a27; /* preparse_shallow_mode */
	T1 a28; /* preparse_single_mode */
	T1 a29; /* preparse_multiple_mode */
	T1 a30; /* unknown_builtin_reported */
	T1 a31; /* qualified_anchored_types_cycle_detection_enabled */
	T1 a32; /* cluster_dependence_enabled */
	T6 a33; /* postponed_class_count */
	T6 a34; /* processed_class_count */
	T1 a35; /* preparse_readonly_mode */
	T1 a36; /* preparse_override_mode */
	T1 a37; /* use_cluster_dependence_pathnames */
	T1 a38; /* providers_enabled */
	T1 a39; /* suppliers_enabled */
};

/* Struct for type UT_VERSION */
struct S88 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_revision */
	T6 a4; /* internal_build */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
struct S91 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_dynamic_system */
	T0* a3; /* feature_checker */
	T0* a4; /* current_dynamic_type */
	T0* a5; /* current_dynamic_feature */
	T0* a6; /* dynamic_type_sets */
	T0* a7; /* object_id_dynamic_type_set */
	T0* a8; /* current_index */
	T0* a9; /* result_index */
	T0* a10; /* constant_indexes */
	T0* a11; /* none_index */
	T1 a12; /* catcall_error_mode */
	T1 a13; /* catcall_warning_mode */
	T1 a14; /* no_debug */
	T1 a15; /* no_assertion */
	T1 a16; /* is_built */
	T0* a17; /* alive_conforming_descendants_per_type */
	T0* a18; /* type_checker */
	T0* a19; /* current_type */
	T0* a20; /* current_class */
	T0* a21; /* current_feature */
	T0* a22; /* current_feature_impl */
	T0* a23; /* current_class_impl */
	T0* a24; /* enclosing_inline_agents */
	T0* a25; /* unused_overloaded_procedures_list */
	T0* a26; /* unused_overloaded_queries_list */
	T0* a27; /* unused_overloaded_features_list */
	T0* a28; /* unused_contexts */
	T0* a29; /* current_context */
	T0* a30; /* current_target_type */
	T0* a31; /* current_object_test_types */
	T0* a32; /* current_object_test_scope */
	T0* a33; /* object_test_scope_builder */
	T0* a34; /* current_across_cursor_types */
	T0* a35; /* current_across_cursor_scope */
	T0* a36; /* current_initialization_scope */
	T0* a37; /* current_attachment_scope */
	T0* a38; /* attachment_scope_builder */
	T0* a39; /* unused_attachment_scopes */
	T0* a40; /* common_ancestor_type_list */
	T0* a41; /* indexing_term_list */
	T0* a42; /* default_creation_call_name */
	T0* a43; /* default_creation_call */
	T0* a44; /* system_processor */
	T1 a45; /* in_precursor */
	T1 a46; /* in_static_feature */
	T1 a47; /* in_rescue */
	T0* a48; /* current_inline_agent */
	T0* a49; /* supplier_handler */
	T1 a50; /* in_invariant */
	T1 a51; /* in_precondition */
	T1 a52; /* in_postcondition */
	T1 a53; /* in_check_instruction */
	T0* a54; /* precursor_procedures */
	T0* a55; /* precursor_queries */
};

/* Struct for type ET_CLASS_TYPE */
struct S93 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
	T0* a4; /* named_base_class */
	T1 a5; /* tuple_actual_parameters_unfolded_2 */
	T1 a6; /* tuple_actual_parameters_unfolded_1 */
};

/* Struct for type ET_TOKEN_CONSTANTS */
struct S94 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CLASS */
struct S95 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* group */
	T0* a2; /* status_mutex */
	T1 a3; /* unprotected_is_parsed */
	T1 a4; /* unprotected_has_syntax_error */
	T1 a5; /* unprotected_ancestors_built */
	T1 a6; /* unprotected_has_ancestors_error */
	T1 a7; /* unprotected_features_flattened */
	T1 a8; /* unprotected_has_flattening_error */
	T1 a9; /* unprotected_interface_checked */
	T1 a10; /* unprotected_has_interface_error */
	T1 a11; /* unprotected_implementation_checked */
	T1 a12; /* unprotected_has_implementation_error */
	T0* a13; /* name */
	T6 a14; /* id */
	T0* a15; /* ancestors */
	T0* a16; /* conforming_ancestors */
	T0* a17; /* queries */
	T0* a18; /* procedures */
	T0* a19; /* class_keyword */
	T0* a20; /* end_keyword */
	T0* a21; /* processing_mutex */
	T0* a22; /* formal_parameter_types_mutex */
	T0* a23; /* named_base_class */
	T6 a24; /* time_stamp */
	T8 a25; /* class_code */
	T1 a26; /* tuple_actual_parameters_unfolded_1 */
	T1 a27; /* tuple_actual_parameters_unfolded_2 */
	T1 a28; /* is_checking_implementation */
	T0* a29; /* formal_parameters */
	T6 a30; /* index */
	T1 a31; /* redeclared_signatures_checked */
	T0* a32; /* parent_clauses */
	T0* a33; /* class_mark */
	T0* a34; /* creators */
	T1 a35; /* unprotected_is_marked */
	T0* a36; /* filename */
	T0* a37; /* convert_features */
	T0* a38; /* suppliers */
	T0* a39; /* invariants */
	T1 a40; /* is_ignored */
	T1 a41; /* is_interface */
	T1 a42; /* has_deferred_features */
	T6 a43; /* registered_feature_count */
	T0* a44; /* external_keyword */
	T0* a45; /* frozen_keyword */
	T0* a46; /* feature_clauses */
	T0* a47; /* first_indexing */
	T0* a48; /* second_indexing */
	T6 a49; /* tuple_constraint_position */
	T0* a50; /* obsolete_message */
	T6 a51; /* registered_inline_constant_count */
	T0* a52; /* leading_break */
	T0* a53; /* providers */
	T0* a54; /* formal_parameter_types */
};

/* Struct for type KL_OPERATING_SYSTEM */
struct S97 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type UT_CANNOT_READ_FILE_ERROR */
struct S100 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_VERSION_NUMBER */
struct S102 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_MESSAGE */
struct S103 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_ECF_CAPABILITIES */
struct S106 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_use_capabilities */
	T0* a2; /* primary_support_capabilities */
	T0* a3; /* secondary_capabilities */
};

/* Struct for type KL_EXECUTION_ENVIRONMENT */
struct S107 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type AP_ERROR */
struct S108 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_template */
	T0* a3; /* code */
};

/* Struct for type [attached] DS_HASH_SET [[attached] STRING_8] */
struct S109 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T0* a4; /* equality_tester */
	T6 a5; /* count */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* free_slot */
	T6 a9; /* last_position */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* hash_function */
};

/* Struct for type VOID_TARGET */
struct S112 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type ROUTINE_FAILURE */
struct S114 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* routine_name */
	T0* a2; /* class_name */
	T0* a3; /* throwing_exception */
	T0* a4; /* internal_trace */
	T0* a5; /* c_description */
	T0* a6; /* recipient_name */
	T0* a7; /* type_name */
};

/* Struct for type OLD_VIOLATION */
struct S116 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type NO_MORE_MEMORY */
struct S119 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_trace */
	T6 a2; /* internal_code */
	T0* a3; /* throwing_exception */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type INVARIANT_VIOLATION */
struct S120 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T1 a2; /* is_entry */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type OPERATING_SYSTEM_SIGNAL_FAILURE */
struct S121 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T6 a2; /* signal_code */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type IO_FAILURE */
struct S122 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_code */
	T0* a2; /* throwing_exception */
	T6 a3; /* error_code */
	T0* a4; /* internal_trace */
	T0* a5; /* c_description */
	T0* a6; /* recipient_name */
	T0* a7; /* type_name */
};

/* Struct for type OPERATING_SYSTEM_FAILURE */
struct S123 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T6 a2; /* error_code */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type COM_FAILURE */
struct S124 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T6 a2; /* hresult_code */
	T0* a3; /* exception_information */
	T6 a4; /* hresult */
	T0* a5; /* internal_trace */
	T0* a6; /* c_description */
	T0* a7; /* recipient_name */
	T0* a8; /* type_name */
};

/* Struct for type EIFFEL_RUNTIME_PANIC */
struct S125 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_code */
	T0* a2; /* throwing_exception */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type PRECONDITION_VIOLATION */
struct S128 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type POSTCONDITION_VIOLATION */
struct S129 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type FLOATING_POINT_FAILURE */
struct S130 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type CHECK_VIOLATION */
struct S131 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type BAD_INSPECT_VALUE */
struct S132 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type VARIANT_VIOLATION */
struct S133 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type LOOP_INVARIANT_VIOLATION */
struct S134 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type RESCUE_FAILURE */
struct S135 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type RESUMPTION_FAILURE */
struct S136 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type CREATE_ON_DEFERRED */
struct S137 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXTERNAL_FAILURE */
struct S138 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type VOID_ASSIGNED_TO_EXPANDED */
struct S139 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
struct S140 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type MISMATCH_FAILURE */
struct S141 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type DEVELOPER_EXCEPTION */
struct S142 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type ADDRESS_APPLIED_TO_MELTED_FEATURE */
struct S143 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type SERIALIZATION_FAILURE */
struct S144 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXECUTION_ENVIRONMENT */
struct S145 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* return_code */
};

/* Struct for type KL_WINDOWS_FILE_SYSTEM */
struct S146 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_UNIX_FILE_SYSTEM */
struct S147 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type PRIMES */
struct S148 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] INTEGER_32] */
struct S149 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [[attached] BOOLEAN] */
struct S150 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T1 z2[1]; /* item */
};

/* Struct for type MANAGED_POINTER */
struct S154 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* item */
	T6 a2; /* count */
	T1 a3; /* is_shared */
};

/* Struct for type [attached] KL_LINKABLE [[attached] CHARACTER_8] */
struct S155 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type FILE_INFO */
struct S157 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* buffered_file_info */
	T1 a2; /* is_following_symlinks */
	T1 a3; /* exists */
	T0* a4; /* internal_file_name */
	T0* a5; /* internal_name_pointer */
};

/* Struct for type MUTEX */
struct S158 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* mutex_pointer */
	T14 a2; /* owner_thread_id */
};

/* Struct for type UT_ERROR_HANDLER */
struct S159 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
};

/* Struct for type KL_STANDARD_FILES */
struct S160 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_STDERR_FILE */
struct S161 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_STDOUT_FILE */
struct S162 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type UC_STRING */
struct S163 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* byte_count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
	T0* a5; /* area */
	T6 a6; /* last_byte_index_input */
	T6 a7; /* last_byte_index_result */
};

/* Struct for type KL_ANY_ROUTINES */
struct S164 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ST_WORD_WRAPPER */
struct S166 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* new_line_indentation */
	T6 a2; /* broken_words */
	T6 a3; /* maximum_text_width */
};

/* Struct for type AP_DISPLAY_HELP_FLAG */
struct S168 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* description */
	T2 a2; /* short_form */
	T1 a3; /* has_short_form */
	T0* a4; /* long_form */
	T6 a5; /* occurrences */
	T1 a6; /* is_hidden */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] AP_OPTION] */
struct S169 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T0* a3; /* equality_tester */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
struct S170 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T6 a5; /* count */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] STRING_8] */
struct S171 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* equality_tester */
};

/* Struct for type AP_ERROR_HANDLER */
struct S172 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION] */
struct S175 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [detachable STRING_8] */
struct S176 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [detachable STRING_8] */
struct S177 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] DS_LINKED_LIST [[attached] STRING_8] */
struct S178 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
	T0* a5; /* equality_tester */
};

/* Struct for type KL_STRING_EQUALITY_TESTER */
struct S179 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_LINKED_LIST [[attached] BOOLEAN] */
struct S182 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type [attached] DS_LINKED_LIST [[attached] INTEGER_32] */
struct S185 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type KL_NULL_TEXT_OUTPUT_STREAM */
struct S186 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
};

/* Struct for type ET_XACE_AST_FACTORY */
struct S187 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DOCUMENT */
struct S188 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* root_element */
	T0* a2; /* children */
};

/* Struct for type XM_ELEMENT */
struct S189 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* parent */
	T0* a4; /* children */
};

/* Struct for type XM_TREE_CALLBACKS_PIPE */
struct S192 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error */
	T0* a2; /* tree */
	T0* a3; /* start */
	T0* a4; /* last */
};

/* Struct for type XM_STOP_ON_ERROR_FILTER */
struct S193 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* last_error */
	T0* a3; /* next */
};

/* Struct for type XM_CALLBACKS_TO_TREE_FILTER */
struct S194 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_position_table */
	T0* a2; /* document */
	T0* a3; /* source_parser */
	T0* a4; /* current_element */
	T0* a5; /* namespace_cache */
	T0* a6; /* next */
};

/* Struct for type ET_XACE_VALIDATOR */
struct S195 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* error_handler */
};

/* Struct for type ET_XACE_PREPROCESSOR */
struct S196 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* variables */
	T0* a2; /* error_handler */
};

/* Struct for type ET_XACE_SYSTEM */
struct S197 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* root_type */
	T0* a2; /* none_type */
	T0* a3; /* any_type */
	T0* a4; /* master_classes */
	T0* a5; /* root_creation */
	T6 a6; /* default_create_seed */
	T0* a7; /* boolean_type */
	T0* a8; /* character_8_type */
	T0* a9; /* character_32_type */
	T0* a10; /* integer_8_type */
	T0* a11; /* integer_16_type */
	T0* a12; /* integer_32_type */
	T0* a13; /* integer_64_type */
	T0* a14; /* natural_8_type */
	T0* a15; /* natural_16_type */
	T0* a16; /* natural_32_type */
	T0* a17; /* natural_64_type */
	T0* a18; /* real_32_type */
	T0* a19; /* real_64_type */
	T0* a20; /* pointer_type */
	T0* a21; /* special_any_type */
	T0* a22; /* string_8_type */
	T0* a23; /* string_32_type */
	T0* a24; /* immutable_string_32_type */
	T0* a25; /* array_any_type */
	T0* a26; /* typed_pointer_any_type */
	T0* a27; /* routine_type */
	T0* a28; /* detachable_tuple_type */
	T0* a29; /* universe */
	T0* a30; /* ise_exception_manager_type */
	T0* a31; /* detachable_none_type */
	T0* a32; /* system_name */
	T0* a33; /* external_cflags */
	T0* a34; /* external_include_pathnames */
	T0* a35; /* external_library_pathnames */
	T0* a36; /* options */
	T0* a37; /* targets */
	T1 a38; /* attachment_type_conformance_mode */
	T1 a39; /* use_boehm_gc */
	T0* a40; /* external_linker_flags */
	T0* a41; /* external_object_pathnames */
	T0* a42; /* character_type */
	T0* a43; /* wide_character_type */
	T0* a44; /* integer_type */
	T0* a45; /* natural_type */
	T0* a46; /* real_type */
	T0* a47; /* double_type */
	T0* a48; /* external_make_pathnames */
	T0* a49; /* external_resource_pathnames */
	T6 a50; /* routine_call_seed */
	T6 a51; /* function_item_seed */
	T6 a52; /* is_equal_seed */
	T6 a53; /* dispose_seed */
	T1 a54; /* trace_mode */
	T1 a55; /* exception_trace_mode */
	T1 a56; /* multithreaded_mode */
	T1 a57; /* console_application_mode */
	T0* a58; /* name */
	T0* a59; /* selected_target */
	T0* a60; /* clusters */
	T0* a61; /* mounted_libraries */
	T0* a62; /* root_class_name */
	T0* a63; /* dotnet_assemblies */
	T0* a64; /* libraries */
	T0* a65; /* register_class_mutex */
	T1 a66; /* alias_transition_mode */
	T0* a67; /* current_system */
	T0* a68; /* tuple_type */
	T0* a69; /* detachable_exception_type */
	T0* a70; /* exception_type */
	T0* a71; /* string_type */
	T1 a72; /* is_preparsed */
	T1 a73; /* is_read_only */
	T0* a74; /* creation_procedure_name */
	T0* a75; /* master_class_mutex */
	T0* a76; /* detachable_any_type */
	T0* a77; /* detachable_separate_any_type */
	T0* a78; /* separate_any_type */
	T0* a79; /* any_parent */
	T0* a80; /* any_parents */
	T0* a81; /* any_clients */
	T0* a82; /* tuple_like_current_type */
	T0* a83; /* unfolded_empty_tuple_actual_parameters */
	T0* a84; /* array_detachable_any_type */
	T0* a85; /* array_none_type */
	T0* a86; /* array_like_current_type */
	T0* a87; /* character_8_convert_feature */
	T0* a88; /* character_32_convert_feature */
	T0* a89; /* exception_manager_type */
	T0* a90; /* function_type */
	T0* a91; /* integer_8_convert_feature */
	T0* a92; /* integer_16_convert_feature */
	T0* a93; /* integer_32_convert_feature */
	T0* a94; /* integer_64_convert_feature */
	T0* a95; /* iterable_detachable_any_type */
	T0* a96; /* natural_8_convert_feature */
	T0* a97; /* natural_16_convert_feature */
	T0* a98; /* natural_32_convert_feature */
	T0* a99; /* natural_64_convert_feature */
	T0* a100; /* predicate_like_current_type */
	T0* a101; /* procedure_like_current_type */
	T0* a102; /* real_32_convert_feature */
	T0* a103; /* real_64_convert_feature */
	T0* a104; /* special_detachable_any_type */
	T0* a105; /* detachable_string_type */
	T0* a106; /* string_8_convert_feature */
	T0* a107; /* string_32_convert_feature */
	T0* a108; /* system_object_type */
	T0* a109; /* system_object_parents */
	T0* a110; /* system_string_type */
	T0* a111; /* type_any_type */
	T0* a112; /* type_type_any_type */
	T0* a113; /* type_detachable_any_type */
	T0* a114; /* type_detachable_like_current_type */
	T0* a115; /* detachable_type_exception_type */
	T0* a116; /* type_detachable_exception_type */
	T0* a117; /* detachable_type_detachable_any_type */
	T0* a118; /* type_like_current_type */
	T0* a119; /* typed_pointer_like_current_type */
	T0* a120; /* scm_read_mapping_builder */
	T0* a121; /* scm_write_mapping_builder */
	T6 a122; /* registered_class_count */
	T1 a123; /* scoop_mode */
	T0* a124; /* implicit_attachment_type_mark */
	T6 a125; /* copy_seed */
	T6 a126; /* iterable_new_cursor_seed */
	T6 a127; /* iteration_cursor_after_seed */
	T6 a128; /* iteration_cursor_forth_seed */
	T1 a129; /* target_type_attachment_mode */
	T1 a130; /* obsolete_routine_type_mode */
	T1 a131; /* is_dotnet */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8] */
struct S198 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T0* a7; /* equality_tester */
	T0* a8; /* internal_cursor */
	T6 a9; /* found_position */
	T0* a10; /* item_storage */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* capacity */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type XM_EXPAT_PARSER_FACTORY */
struct S199 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_PARSER */
struct S200 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_last_error_description */
	T0* a2; /* scanner */
	T0* a3; /* error_positions */
	T0* a4; /* scanners */
	T1 a5; /* in_external_dtd */
	T0* a6; /* callbacks */
	T0* a7; /* entities */
	T0* a8; /* pe_entities */
	T0* a9; /* dtd_resolver */
	T0* a10; /* entity_resolver */
	T1 a11; /* use_namespaces */
	T6 a12; /* string_mode */
	T0* a13; /* dtd_callbacks */
	T0* a14; /* last_string_value */
	T0* a15; /* yyss */
	T0* a16; /* yyspecial_routines1 */
	T6 a17; /* yyvsc1 */
	T0* a18; /* yyvs1 */
	T0* a19; /* yyspecial_routines2 */
	T6 a20; /* yyvsc2 */
	T0* a21; /* yyvs2 */
	T0* a22; /* yyspecial_routines3 */
	T6 a23; /* yyvsc3 */
	T0* a24; /* yyvs3 */
	T0* a25; /* yyspecial_routines4 */
	T6 a26; /* yyvsc4 */
	T0* a27; /* yyvs4 */
	T0* a28; /* yyspecial_routines5 */
	T6 a29; /* yyvsc5 */
	T0* a30; /* yyvs5 */
	T0* a31; /* yyspecial_routines6 */
	T6 a32; /* yyvsc6 */
	T0* a33; /* yyvs6 */
	T0* a34; /* yyspecial_routines7 */
	T6 a35; /* yyvsc7 */
	T0* a36; /* yyvs7 */
	T0* a37; /* yyspecial_routines8 */
	T6 a38; /* yyvsc8 */
	T0* a39; /* yyvs8 */
	T0* a40; /* yyspecial_routines9 */
	T6 a41; /* yyvsc9 */
	T0* a42; /* yyvs9 */
	T0* a43; /* yyspecial_routines10 */
	T6 a44; /* yyvsc10 */
	T0* a45; /* yyvs10 */
	T0* a46; /* yyspecial_routines11 */
	T6 a47; /* yyvsc11 */
	T0* a48; /* yyvs11 */
	T0* a49; /* yytranslate */
	T0* a50; /* yyr1 */
	T0* a51; /* yytypes1 */
	T0* a52; /* yytypes2 */
	T0* a53; /* yydefact */
	T0* a54; /* yydefgoto */
	T0* a55; /* yypact */
	T0* a56; /* yypgoto */
	T0* a57; /* yytable */
	T0* a58; /* yycheck */
	T6 a59; /* yy_parsing_status */
	T6 a60; /* yy_suspended_yystacksize */
	T6 a61; /* yy_suspended_yystate */
	T6 a62; /* yy_suspended_yyn */
	T6 a63; /* yy_suspended_yychar1 */
	T6 a64; /* yy_suspended_index */
	T6 a65; /* yy_suspended_yyss_top */
	T6 a66; /* yy_suspended_yy_goto */
	T6 a67; /* yyssp */
	T6 a68; /* error_count */
	T1 a69; /* yy_lookahead_needed */
	T6 a70; /* yyerrstatus */
	T6 a71; /* last_token */
	T6 a72; /* yyvsp1 */
	T6 a73; /* yyvsp2 */
	T6 a74; /* yyvsp3 */
	T6 a75; /* yyvsp4 */
	T6 a76; /* yyvsp5 */
	T6 a77; /* yyvsp6 */
	T6 a78; /* yyvsp7 */
	T6 a79; /* yyvsp8 */
	T6 a80; /* yyvsp9 */
	T6 a81; /* yyvsp10 */
	T6 a82; /* yyvsp11 */
	T0* a83; /* last_detachable_any_value */
};

/* Struct for type ET_XACE_LIBRARY_CONFIG_PARSER */
struct S203 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_handler */
	T0* a2; /* ast_factory */
	T0* a3; /* parsed_libraries */
	T0* a4; /* xml_preprocessor */
	T0* a5; /* xml_validator */
	T0* a6; /* xml_parser */
	T0* a7; /* tree_pipe */
	T0* a8; /* library_parser */
	T0* a9; /* last_library */
	T1 a10; /* is_shallow */
	T6 a11; /* new_name_count */
};

/* Struct for type attached KL_EQUALITY_TESTER [[attached] STRING_8] */
struct S206 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] STRING_8] */
struct S207 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] STRING_8] */
struct S208 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] INTEGER_32] */
struct S209 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_AGENT_HASH_FUNCTION [[attached] STRING_8] */
struct S210 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* hash_agent */
};

/* Struct for type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
struct S212 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [[attached] STRING_8] */
struct S213 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] FUNCTION [[attached] TUPLE [[attached] STRING_8], [attached] INTEGER_32] */
struct S214 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE */
struct S216 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [KL_STRING_ROUTINES] */
struct S217 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_ECF_AST_FACTORY */
struct S219 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_CELL [detachable ET_ECF_SYSTEM] */
struct S220 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_TARGET] */
struct S221 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_TARGET]] */
struct S222 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_SYSTEM_PARSER] */
struct S223 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8] */
struct S225 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8]] */
struct S226 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_SYSTEM_PARSER, detachable STRING_8, [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_TARGET]], [attached] DS_CELL [detachable ET_ECF_SYSTEM]] */
struct S227 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8] */
struct S229 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T6 a10; /* capacity */
	T0* a11; /* equality_tester */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8] */
struct S230 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ECF_STATE */
struct S231 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* ise_version */
	T1 a3; /* finalize_mode */
	T1 a4; /* is_dotnet */
	T1 a5; /* is_multithreaded */
	T1 a6; /* is_scoop */
};

/* Struct for type ET_IDENTIFIER */
struct S232 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T6 a2; /* index */
	T0* a3; /* name */
	T2 a4; /* status_code */
	T6 a5; /* compressed_position */
	T6 a6; /* hash_code */
};

/* Struct for type ET_ECF_SYSTEM_CONFIG */
struct S233 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* filename */
	T0* a3; /* universe */
	T0* a4; /* ecf_namespace */
	T0* a5; /* ecf_version */
	T0* a6; /* description */
	T0* a7; /* notes */
	T0* a8; /* targets */
	T1 a9; /* is_read_only */
	T0* a10; /* uuid */
	T0* a11; /* library_target */
};

/* Struct for type ET_ECF_LIBRARY */
struct S236 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* filename */
	T0* a3; /* ecf_namespace */
	T0* a4; /* ecf_version */
	T0* a5; /* description */
	T0* a6; /* notes */
	T0* a7; /* targets */
	T1 a8; /* is_read_only */
	T0* a9; /* uuid */
	T0* a10; /* library_target */
	T0* a11; /* current_system */
	T0* a12; /* library */
	T0* a13; /* libraries */
	T0* a14; /* clusters */
	T0* a15; /* dotnet_assemblies */
	T0* a16; /* master_classes */
	T0* a17; /* master_class_mutex */
	T0* a18; /* any_type */
	T0* a19; /* detachable_any_type */
	T0* a20; /* detachable_separate_any_type */
	T0* a21; /* separate_any_type */
	T0* a22; /* any_parent */
	T0* a23; /* any_parents */
	T0* a24; /* any_clients */
	T0* a25; /* tuple_type */
	T0* a26; /* detachable_tuple_type */
	T0* a27; /* tuple_like_current_type */
	T0* a28; /* unfolded_empty_tuple_actual_parameters */
	T0* a29; /* array_any_type */
	T0* a30; /* array_detachable_any_type */
	T0* a31; /* array_none_type */
	T0* a32; /* array_like_current_type */
	T0* a33; /* boolean_type */
	T0* a34; /* character_type */
	T0* a35; /* character_8_type */
	T0* a36; /* character_8_convert_feature */
	T0* a37; /* character_32_type */
	T0* a38; /* character_32_convert_feature */
	T0* a39; /* double_type */
	T0* a40; /* exception_type */
	T0* a41; /* detachable_exception_type */
	T0* a42; /* exception_manager_type */
	T0* a43; /* function_type */
	T0* a44; /* immutable_string_32_type */
	T0* a45; /* integer_type */
	T0* a46; /* integer_8_type */
	T0* a47; /* integer_8_convert_feature */
	T0* a48; /* integer_16_type */
	T0* a49; /* integer_16_convert_feature */
	T0* a50; /* integer_32_type */
	T0* a51; /* integer_32_convert_feature */
	T0* a52; /* integer_64_type */
	T0* a53; /* integer_64_convert_feature */
	T0* a54; /* ise_exception_manager_type */
	T0* a55; /* iterable_detachable_any_type */
	T0* a56; /* natural_type */
	T0* a57; /* natural_8_type */
	T0* a58; /* natural_8_convert_feature */
	T0* a59; /* natural_16_type */
	T0* a60; /* natural_16_convert_feature */
	T0* a61; /* natural_32_type */
	T0* a62; /* natural_32_convert_feature */
	T0* a63; /* natural_64_type */
	T0* a64; /* natural_64_convert_feature */
	T0* a65; /* none_type */
	T0* a66; /* detachable_none_type */
	T0* a67; /* pointer_type */
	T0* a68; /* predicate_like_current_type */
	T0* a69; /* procedure_like_current_type */
	T0* a70; /* real_type */
	T0* a71; /* real_32_type */
	T0* a72; /* real_32_convert_feature */
	T0* a73; /* real_64_type */
	T0* a74; /* real_64_convert_feature */
	T0* a75; /* routine_type */
	T0* a76; /* special_any_type */
	T0* a77; /* special_detachable_any_type */
	T0* a78; /* string_type */
	T0* a79; /* detachable_string_type */
	T0* a80; /* string_8_type */
	T0* a81; /* string_8_convert_feature */
	T0* a82; /* string_32_type */
	T0* a83; /* string_32_convert_feature */
	T0* a84; /* system_object_type */
	T0* a85; /* system_object_parents */
	T0* a86; /* system_string_type */
	T0* a87; /* type_any_type */
	T0* a88; /* type_type_any_type */
	T0* a89; /* type_detachable_any_type */
	T0* a90; /* type_detachable_like_current_type */
	T0* a91; /* detachable_type_exception_type */
	T0* a92; /* type_detachable_exception_type */
	T0* a93; /* detachable_type_detachable_any_type */
	T0* a94; /* type_like_current_type */
	T0* a95; /* typed_pointer_any_type */
	T0* a96; /* typed_pointer_like_current_type */
	T0* a97; /* wide_character_type */
	T0* a98; /* selected_target */
	T0* a99; /* implicit_attachment_type_mark */
	T1 a100; /* obsolete_routine_type_mode */
	T1 a101; /* is_preparsed */
};

/* Struct for type ET_ADAPTED_LIBRARIES */
struct S237 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* libraries */
};

/* Struct for type [attached] TUPLE [[attached] ET_ADAPTED_LIBRARY] */
struct S239 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_LIBRARY]] */
struct S240 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type ET_COMPRESSED_POSITION */
struct S241 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
};

/* Struct for type XM_ATTRIBUTE */
struct S245 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* value */
	T0* a4; /* parent */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8] */
struct S247 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T6 a4; /* last_position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* key_equality_tester */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* special_key_routines */
	T0* a15; /* key_storage */
	T0* a16; /* equality_tester */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8] */
struct S248 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* position */
	T0* a3; /* internal_cursor */
	T0* a4; /* key_storage */
	T0* a5; /* item_storage */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* equality_tester */
	T6 a18; /* free_slot */
	T0* a19; /* hash_function */
};

/* Struct for type [attached] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
struct S250 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type [attached] TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_INTERNAL_UNIVERSE, [attached] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
struct S253 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_ECF_TARGETS */
struct S255 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* targets */
};

/* Struct for type [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
struct S256 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* hash_function */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T6 a19; /* free_slot */
	T0* a20; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
struct S257 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] DS_CELL [detachable ET_ECF_LIBRARY] */
struct S259 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type ET_ECF_ADAPTED_LIBRARY */
struct S260 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* filename_id */
	T0* a3; /* universe */
	T0* a4; /* target */
	T0* a5; /* description */
	T0* a6; /* classname_prefix */
	T1 a7; /* is_read_only */
	T1 a8; /* use_application_options */
	T0* a9; /* options */
	T0* a10; /* class_options */
	T0* a11; /* class_renamings */
	T0* a12; /* visible_classes */
	T0* a13; /* conditions */
	T0* a14; /* notes */
	T0* a15; /* name */
	T0* a16; /* library */
};

/* Struct for type [attached] TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_ADAPTED_LIBRARY, [attached] DS_CELL [detachable ET_ECF_LIBRARY]] */
struct S261 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_ADAPTED_DOTNET_ASSEMBLIES */
struct S264 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_ECF_DOTNET_ASSEMBLY */
struct S265 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* referenced_assemblies */
	T0* a3; /* current_system */
	T0* a4; /* dotnet_assembly */
	T0* a5; /* name */
	T0* a6; /* master_classes */
	T0* a7; /* master_class_mutex */
	T0* a8; /* any_type */
	T0* a9; /* detachable_any_type */
	T0* a10; /* detachable_separate_any_type */
	T0* a11; /* separate_any_type */
	T0* a12; /* any_parent */
	T0* a13; /* any_parents */
	T0* a14; /* any_clients */
	T0* a15; /* tuple_type */
	T0* a16; /* detachable_tuple_type */
	T0* a17; /* tuple_like_current_type */
	T0* a18; /* unfolded_empty_tuple_actual_parameters */
	T0* a19; /* array_any_type */
	T0* a20; /* array_detachable_any_type */
	T0* a21; /* array_none_type */
	T0* a22; /* array_like_current_type */
	T0* a23; /* boolean_type */
	T0* a24; /* character_type */
	T0* a25; /* character_8_type */
	T0* a26; /* character_8_convert_feature */
	T0* a27; /* character_32_type */
	T0* a28; /* character_32_convert_feature */
	T0* a29; /* double_type */
	T0* a30; /* exception_type */
	T0* a31; /* detachable_exception_type */
	T0* a32; /* exception_manager_type */
	T0* a33; /* function_type */
	T0* a34; /* immutable_string_32_type */
	T0* a35; /* integer_type */
	T0* a36; /* integer_8_type */
	T0* a37; /* integer_8_convert_feature */
	T0* a38; /* integer_16_type */
	T0* a39; /* integer_16_convert_feature */
	T0* a40; /* integer_32_type */
	T0* a41; /* integer_32_convert_feature */
	T0* a42; /* integer_64_type */
	T0* a43; /* integer_64_convert_feature */
	T0* a44; /* ise_exception_manager_type */
	T0* a45; /* iterable_detachable_any_type */
	T0* a46; /* natural_type */
	T0* a47; /* natural_8_type */
	T0* a48; /* natural_8_convert_feature */
	T0* a49; /* natural_16_type */
	T0* a50; /* natural_16_convert_feature */
	T0* a51; /* natural_32_type */
	T0* a52; /* natural_32_convert_feature */
	T0* a53; /* natural_64_type */
	T0* a54; /* natural_64_convert_feature */
	T0* a55; /* none_type */
	T0* a56; /* detachable_none_type */
	T0* a57; /* pointer_type */
	T0* a58; /* predicate_like_current_type */
	T0* a59; /* procedure_like_current_type */
	T0* a60; /* real_type */
	T0* a61; /* real_32_type */
	T0* a62; /* real_32_convert_feature */
	T0* a63; /* real_64_type */
	T0* a64; /* real_64_convert_feature */
	T0* a65; /* routine_type */
	T0* a66; /* special_any_type */
	T0* a67; /* special_detachable_any_type */
	T0* a68; /* string_type */
	T0* a69; /* detachable_string_type */
	T0* a70; /* string_8_type */
	T0* a71; /* string_8_convert_feature */
	T0* a72; /* string_32_type */
	T0* a73; /* string_32_convert_feature */
	T0* a74; /* system_object_type */
	T0* a75; /* system_object_parents */
	T0* a76; /* system_string_type */
	T0* a77; /* type_any_type */
	T0* a78; /* type_type_any_type */
	T0* a79; /* type_detachable_any_type */
	T0* a80; /* type_detachable_like_current_type */
	T0* a81; /* detachable_type_exception_type */
	T0* a82; /* type_detachable_exception_type */
	T0* a83; /* detachable_type_detachable_any_type */
	T0* a84; /* type_like_current_type */
	T0* a85; /* typed_pointer_any_type */
	T0* a86; /* typed_pointer_like_current_type */
	T0* a87; /* wide_character_type */
	T1 a88; /* is_read_only */
	T1 a89; /* is_preparsed */
};

/* Struct for type ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
struct S267 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* filename_id */
	T0* a3; /* universe */
	T0* a4; /* target */
	T0* a5; /* description */
	T0* a6; /* assembly_culture */
	T0* a7; /* assembly_key */
	T0* a8; /* assembly_name */
	T0* a9; /* assembly_version */
	T0* a10; /* classname_prefix */
	T1 a11; /* is_read_only */
	T0* a12; /* options */
	T0* a13; /* class_options */
	T0* a14; /* class_renamings */
	T0* a15; /* conditions */
	T0* a16; /* notes */
	T0* a17; /* name */
	T0* a18; /* dotnet_assembly */
};

/* Struct for type ET_ECF_ERROR */
struct S268 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* system_config */
	T0* a4; /* position */
	T0* a5; /* code */
};

/* Struct for type ET_LACE_AST_FACTORY */
struct S269 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER] */
struct S270 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type YY_FILE_BUFFER */
struct S271 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T0* a9; /* file */
	T1 a10; /* end_of_file */
	T6 a11; /* capacity */
	T1 a12; /* interactive */
};

/* Struct for type YY_BUFFER */
struct S272 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T6 a9; /* capacity */
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_IDENTIFIER] */
struct S273 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* special_item_routines */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* hash_function */
};

/* Struct for type [attached] SPECIAL [detachable ANY] */
struct S279 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ANY] */
struct S280 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_IDENTIFIER] */
struct S281 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER] */
struct S282 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LACE_SYSTEM */
struct S283 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* root_type */
	T0* a2; /* none_type */
	T0* a3; /* any_type */
	T0* a4; /* master_classes */
	T0* a5; /* root_creation */
	T6 a6; /* default_create_seed */
	T0* a7; /* boolean_type */
	T0* a8; /* character_8_type */
	T0* a9; /* character_32_type */
	T0* a10; /* integer_8_type */
	T0* a11; /* integer_16_type */
	T0* a12; /* integer_32_type */
	T0* a13; /* integer_64_type */
	T0* a14; /* natural_8_type */
	T0* a15; /* natural_16_type */
	T0* a16; /* natural_32_type */
	T0* a17; /* natural_64_type */
	T0* a18; /* real_32_type */
	T0* a19; /* real_64_type */
	T0* a20; /* pointer_type */
	T0* a21; /* special_any_type */
	T0* a22; /* string_8_type */
	T0* a23; /* string_32_type */
	T0* a24; /* immutable_string_32_type */
	T0* a25; /* array_any_type */
	T0* a26; /* typed_pointer_any_type */
	T0* a27; /* routine_type */
	T0* a28; /* detachable_tuple_type */
	T0* a29; /* universe */
	T0* a30; /* ise_exception_manager_type */
	T0* a31; /* detachable_none_type */
	T1 a32; /* attachment_type_conformance_mode */
	T1 a33; /* use_boehm_gc */
	T0* a34; /* external_include_pathnames */
	T0* a35; /* external_cflags */
	T0* a36; /* external_linker_flags */
	T0* a37; /* external_library_pathnames */
	T0* a38; /* external_object_pathnames */
	T0* a39; /* character_type */
	T0* a40; /* wide_character_type */
	T0* a41; /* integer_type */
	T0* a42; /* natural_type */
	T0* a43; /* real_type */
	T0* a44; /* double_type */
	T0* a45; /* external_make_pathnames */
	T0* a46; /* external_resource_pathnames */
	T6 a47; /* routine_call_seed */
	T6 a48; /* function_item_seed */
	T6 a49; /* is_equal_seed */
	T6 a50; /* dispose_seed */
	T1 a51; /* trace_mode */
	T1 a52; /* exception_trace_mode */
	T1 a53; /* multithreaded_mode */
	T1 a54; /* console_application_mode */
	T0* a55; /* system_name */
	T0* a56; /* register_class_mutex */
	T1 a57; /* alias_transition_mode */
	T0* a58; /* current_system */
	T0* a59; /* tuple_type */
	T0* a60; /* detachable_exception_type */
	T0* a61; /* exception_type */
	T0* a62; /* string_type */
	T0* a63; /* name */
	T0* a64; /* clusters */
	T0* a65; /* dotnet_assemblies */
	T0* a66; /* libraries */
	T0* a67; /* master_class_mutex */
	T0* a68; /* detachable_any_type */
	T0* a69; /* detachable_separate_any_type */
	T0* a70; /* separate_any_type */
	T0* a71; /* any_parent */
	T0* a72; /* any_parents */
	T0* a73; /* any_clients */
	T0* a74; /* tuple_like_current_type */
	T0* a75; /* unfolded_empty_tuple_actual_parameters */
	T0* a76; /* array_detachable_any_type */
	T0* a77; /* array_none_type */
	T0* a78; /* array_like_current_type */
	T0* a79; /* character_8_convert_feature */
	T0* a80; /* character_32_convert_feature */
	T0* a81; /* exception_manager_type */
	T0* a82; /* function_type */
	T0* a83; /* integer_8_convert_feature */
	T0* a84; /* integer_16_convert_feature */
	T0* a85; /* integer_32_convert_feature */
	T0* a86; /* integer_64_convert_feature */
	T0* a87; /* iterable_detachable_any_type */
	T0* a88; /* natural_8_convert_feature */
	T0* a89; /* natural_16_convert_feature */
	T0* a90; /* natural_32_convert_feature */
	T0* a91; /* natural_64_convert_feature */
	T0* a92; /* predicate_like_current_type */
	T0* a93; /* procedure_like_current_type */
	T0* a94; /* real_32_convert_feature */
	T0* a95; /* real_64_convert_feature */
	T0* a96; /* special_detachable_any_type */
	T0* a97; /* detachable_string_type */
	T0* a98; /* string_8_convert_feature */
	T0* a99; /* string_32_convert_feature */
	T0* a100; /* system_object_type */
	T0* a101; /* system_object_parents */
	T0* a102; /* system_string_type */
	T0* a103; /* type_any_type */
	T0* a104; /* type_type_any_type */
	T0* a105; /* type_detachable_any_type */
	T0* a106; /* type_detachable_like_current_type */
	T0* a107; /* detachable_type_exception_type */
	T0* a108; /* type_detachable_exception_type */
	T0* a109; /* detachable_type_detachable_any_type */
	T0* a110; /* type_like_current_type */
	T0* a111; /* typed_pointer_like_current_type */
	T1 a112; /* is_read_only */
	T1 a113; /* is_preparsed */
	T0* a114; /* scm_read_mapping_builder */
	T0* a115; /* scm_write_mapping_builder */
	T6 a116; /* registered_class_count */
	T1 a117; /* scoop_mode */
	T0* a118; /* implicit_attachment_type_mark */
	T6 a119; /* copy_seed */
	T6 a120; /* iterable_new_cursor_seed */
	T6 a121; /* iteration_cursor_after_seed */
	T6 a122; /* iteration_cursor_forth_seed */
	T1 a123; /* is_dotnet */
	T1 a124; /* target_type_attachment_mode */
	T1 a125; /* obsolete_routine_type_mode */
};

/* Struct for type ET_LACE_CLUSTERS */
struct S285 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type ET_LACE_CLUSTER */
struct S286 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T1 a5; /* is_abstract */
	T1 a6; /* is_recursive */
	T1 a7; /* is_read_only */
	T0* a8; /* exclude */
	T0* a9; /* subclusters */
	T1 a10; /* overridden_constraint_enabled */
	T1 a11; /* scm_mapping_constraint_enabled */
	T0* a12; /* parent */
	T1 a13; /* is_override */
	T0* a14; /* provider_constraint */
	T0* a15; /* dependant_constraint */
	T0* a16; /* scm_read_mapping */
	T0* a17; /* scm_write_mapping */
	T1 a18; /* is_preparsed */
	T1 a19; /* is_implicit */
	T1 a20; /* use_obsolete_syntax */
	T0* a21; /* cached_absolute_pathname */
};

/* Struct for type ET_LACE_EXCLUDE */
struct S288 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* identifiers */
};

/* Struct for type ET_LACE_DOTNET_ASSEMBLY */
struct S290 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T0* a3; /* classname_prefix_id */
	T0* a4; /* pathname */
	T0* a5; /* referenced_assemblies */
	T0* a6; /* classname_prefix */
	T0* a7; /* current_system */
	T0* a8; /* dotnet_assembly */
	T0* a9; /* name */
	T0* a10; /* master_classes */
	T0* a11; /* master_class_mutex */
	T0* a12; /* any_type */
	T0* a13; /* detachable_any_type */
	T0* a14; /* detachable_separate_any_type */
	T0* a15; /* separate_any_type */
	T0* a16; /* any_parent */
	T0* a17; /* any_parents */
	T0* a18; /* any_clients */
	T0* a19; /* tuple_type */
	T0* a20; /* detachable_tuple_type */
	T0* a21; /* tuple_like_current_type */
	T0* a22; /* unfolded_empty_tuple_actual_parameters */
	T0* a23; /* array_any_type */
	T0* a24; /* array_detachable_any_type */
	T0* a25; /* array_none_type */
	T0* a26; /* array_like_current_type */
	T0* a27; /* boolean_type */
	T0* a28; /* character_type */
	T0* a29; /* character_8_type */
	T0* a30; /* character_8_convert_feature */
	T0* a31; /* character_32_type */
	T0* a32; /* character_32_convert_feature */
	T0* a33; /* double_type */
	T0* a34; /* exception_type */
	T0* a35; /* detachable_exception_type */
	T0* a36; /* exception_manager_type */
	T0* a37; /* function_type */
	T0* a38; /* immutable_string_32_type */
	T0* a39; /* integer_type */
	T0* a40; /* integer_8_type */
	T0* a41; /* integer_8_convert_feature */
	T0* a42; /* integer_16_type */
	T0* a43; /* integer_16_convert_feature */
	T0* a44; /* integer_32_type */
	T0* a45; /* integer_32_convert_feature */
	T0* a46; /* integer_64_type */
	T0* a47; /* integer_64_convert_feature */
	T0* a48; /* ise_exception_manager_type */
	T0* a49; /* iterable_detachable_any_type */
	T0* a50; /* natural_type */
	T0* a51; /* natural_8_type */
	T0* a52; /* natural_8_convert_feature */
	T0* a53; /* natural_16_type */
	T0* a54; /* natural_16_convert_feature */
	T0* a55; /* natural_32_type */
	T0* a56; /* natural_32_convert_feature */
	T0* a57; /* natural_64_type */
	T0* a58; /* natural_64_convert_feature */
	T0* a59; /* none_type */
	T0* a60; /* detachable_none_type */
	T0* a61; /* pointer_type */
	T0* a62; /* predicate_like_current_type */
	T0* a63; /* procedure_like_current_type */
	T0* a64; /* real_type */
	T0* a65; /* real_32_type */
	T0* a66; /* real_32_convert_feature */
	T0* a67; /* real_64_type */
	T0* a68; /* real_64_convert_feature */
	T0* a69; /* routine_type */
	T0* a70; /* special_any_type */
	T0* a71; /* special_detachable_any_type */
	T0* a72; /* string_type */
	T0* a73; /* detachable_string_type */
	T0* a74; /* string_8_type */
	T0* a75; /* string_8_convert_feature */
	T0* a76; /* string_32_type */
	T0* a77; /* string_32_convert_feature */
	T0* a78; /* system_object_type */
	T0* a79; /* system_object_parents */
	T0* a80; /* system_string_type */
	T0* a81; /* type_any_type */
	T0* a82; /* type_type_any_type */
	T0* a83; /* type_detachable_any_type */
	T0* a84; /* type_detachable_like_current_type */
	T0* a85; /* detachable_type_exception_type */
	T0* a86; /* type_detachable_exception_type */
	T0* a87; /* detachable_type_detachable_any_type */
	T0* a88; /* type_like_current_type */
	T0* a89; /* typed_pointer_any_type */
	T0* a90; /* typed_pointer_like_current_type */
	T0* a91; /* wide_character_type */
	T1 a92; /* is_read_only */
	T1 a93; /* is_preparsed */
	T0* a94; /* class_renamings */
};

/* Struct for type [attached] SPECIAL [[attached] ET_LACE_SYSTEM] */
struct S291 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [detachable ET_LACE_CLUSTERS] */
struct S292 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
struct S293 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [detachable ET_IDENTIFIER] */
struct S294 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_SYSTEM] */
struct S295 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER] */
struct S296 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS] */
struct S297 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_LACE_CLUSTERS] */
struct S298 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [[attached] ET_LACE_CLUSTER] */
struct S299 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTERS] */
struct S300 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTER] */
struct S301 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_LACE_EXCLUDE] */
struct S302 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE] */
struct S303 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_LACE_EXCLUDE] */
struct S304 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_EXCLUDE] */
struct S305 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
struct S306 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLIES] */
struct S307 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [[attached] ET_LACE_DOTNET_ASSEMBLY] */
struct S308 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLIES] */
struct S309 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_DOTNET_ASSEMBLY] */
struct S310 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LACE_DOTNET_GAC_ASSEMBLY */
struct S311 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* assembly_name_id */
	T0* a3; /* classname_prefix_id */
	T0* a4; /* assembly_version_id */
	T0* a5; /* assembly_culture_id */
	T0* a6; /* assembly_public_key_token_id */
	T0* a7; /* assembly_name */
	T0* a8; /* classname_prefix */
	T0* a9; /* assembly_version */
	T0* a10; /* assembly_culture */
	T0* a11; /* assembly_public_key_token */
	T0* a12; /* pathname */
	T0* a13; /* referenced_assemblies */
	T0* a14; /* current_system */
	T0* a15; /* dotnet_assembly */
	T0* a16; /* name */
	T0* a17; /* master_classes */
	T0* a18; /* master_class_mutex */
	T0* a19; /* any_type */
	T0* a20; /* detachable_any_type */
	T0* a21; /* detachable_separate_any_type */
	T0* a22; /* separate_any_type */
	T0* a23; /* any_parent */
	T0* a24; /* any_parents */
	T0* a25; /* any_clients */
	T0* a26; /* tuple_type */
	T0* a27; /* detachable_tuple_type */
	T0* a28; /* tuple_like_current_type */
	T0* a29; /* unfolded_empty_tuple_actual_parameters */
	T0* a30; /* array_any_type */
	T0* a31; /* array_detachable_any_type */
	T0* a32; /* array_none_type */
	T0* a33; /* array_like_current_type */
	T0* a34; /* boolean_type */
	T0* a35; /* character_type */
	T0* a36; /* character_8_type */
	T0* a37; /* character_8_convert_feature */
	T0* a38; /* character_32_type */
	T0* a39; /* character_32_convert_feature */
	T0* a40; /* double_type */
	T0* a41; /* exception_type */
	T0* a42; /* detachable_exception_type */
	T0* a43; /* exception_manager_type */
	T0* a44; /* function_type */
	T0* a45; /* immutable_string_32_type */
	T0* a46; /* integer_type */
	T0* a47; /* integer_8_type */
	T0* a48; /* integer_8_convert_feature */
	T0* a49; /* integer_16_type */
	T0* a50; /* integer_16_convert_feature */
	T0* a51; /* integer_32_type */
	T0* a52; /* integer_32_convert_feature */
	T0* a53; /* integer_64_type */
	T0* a54; /* integer_64_convert_feature */
	T0* a55; /* ise_exception_manager_type */
	T0* a56; /* iterable_detachable_any_type */
	T0* a57; /* natural_type */
	T0* a58; /* natural_8_type */
	T0* a59; /* natural_8_convert_feature */
	T0* a60; /* natural_16_type */
	T0* a61; /* natural_16_convert_feature */
	T0* a62; /* natural_32_type */
	T0* a63; /* natural_32_convert_feature */
	T0* a64; /* natural_64_type */
	T0* a65; /* natural_64_convert_feature */
	T0* a66; /* none_type */
	T0* a67; /* detachable_none_type */
	T0* a68; /* pointer_type */
	T0* a69; /* predicate_like_current_type */
	T0* a70; /* procedure_like_current_type */
	T0* a71; /* real_type */
	T0* a72; /* real_32_type */
	T0* a73; /* real_32_convert_feature */
	T0* a74; /* real_64_type */
	T0* a75; /* real_64_convert_feature */
	T0* a76; /* routine_type */
	T0* a77; /* special_any_type */
	T0* a78; /* special_detachable_any_type */
	T0* a79; /* string_type */
	T0* a80; /* detachable_string_type */
	T0* a81; /* string_8_type */
	T0* a82; /* string_8_convert_feature */
	T0* a83; /* string_32_type */
	T0* a84; /* string_32_convert_feature */
	T0* a85; /* system_object_type */
	T0* a86; /* system_object_parents */
	T0* a87; /* system_string_type */
	T0* a88; /* type_any_type */
	T0* a89; /* type_type_any_type */
	T0* a90; /* type_detachable_any_type */
	T0* a91; /* type_detachable_like_current_type */
	T0* a92; /* detachable_type_exception_type */
	T0* a93; /* type_detachable_exception_type */
	T0* a94; /* detachable_type_detachable_any_type */
	T0* a95; /* type_like_current_type */
	T0* a96; /* typed_pointer_any_type */
	T0* a97; /* typed_pointer_like_current_type */
	T0* a98; /* wide_character_type */
	T1 a99; /* is_read_only */
	T1 a100; /* is_preparsed */
	T0* a101; /* class_renamings */
};

/* Struct for type KL_PLATFORM */
struct S312 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_INTEGER_ROUTINES */
struct S313 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME] */
struct S314 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* last_position */
	T0* a5; /* equality_tester */
	T6 a6; /* modulus */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* special_key_routines */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* internal_cursor */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE] */
struct S315 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] TUPLE [[attached] ET_CLASS] */
struct S316 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]] */
struct S317 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [INTEGER_32] */
struct S318 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1;
};

/* Struct for type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
struct S319 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_dynamic_system */
	T1 a3; /* catcall_error_mode */
	T1 a4; /* catcall_warning_mode */
	T1 a5; /* no_debug */
	T1 a6; /* no_assertion */
	T0* a7; /* alive_conforming_descendants_per_type */
};

/* Struct for type ET_DYNAMIC_TYPE */
struct S320 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* base_type */
	T6 a2; /* attribute_count */
	T0* a3; /* queries */
	T1 a4; /* is_alive */
	T6 a5; /* id */
	T0* a6; /* base_class */
	T0* a7; /* meta_type */
	T0* a8; /* procedures */
	T6 a9; /* hash_code */
	T0* a10; /* conforming_ancestors */
	T0* a11; /* conforming_descendants */
	T0* a12; /* alive_conforming_descendants */
	T0* a13; /* next_type */
	T1 a14; /* has_reference_attributes */
	T1 a15; /* has_generic_expanded_attributes */
	T0* a16; /* query_calls */
	T1 a17; /* has_static */
	T0* a18; /* procedure_calls */
	T0* a19; /* equality_expressions */
	T0* a20; /* object_equality_expressions */
};

/* Struct for type [attached] TUPLE [ET_DYNAMIC_SYSTEM] */
struct S321 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_DYNAMIC_FEATURE */
struct S332 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_feature */
	T0* a2; /* dynamic_type_sets */
	T6 a3; /* id */
	T1 a4; /* is_generated */
	T0* a5; /* result_type_set */
	T0* a6; /* target_type */
	T8 a7; /* builtin_class_code */
	T8 a8; /* builtin_feature_code */
	T1 a9; /* is_regular */
	T0* a10; /* first_precursor */
	T1 a11; /* is_creation */
	T0* a12; /* other_precursors */
	T1 a13; /* is_built */
	T1 a14; /* is_current_type_needed */
	T1 a15; /* is_static_generated */
	T1 a16; /* is_address */
};

/* Struct for type ET_ACTUAL_PARAMETER_LIST */
struct S333 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type ET_EXTERNAL_FUNCTION */
struct S344 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T0* a5; /* preconditions */
	T6 a6; /* hash_code */
	T6 a7; /* first_seed */
	T0* a8; /* arguments */
	T0* a9; /* assigner */
	T0* a10; /* postconditions */
	T8 a11; /* builtin_class_code */
	T8 a12; /* builtin_feature_code */
	T0* a13; /* other_seeds */
	T0* a14; /* frozen_keyword */
	T0* a15; /* extended_name */
	T0* a16; /* declared_type */
	T0* a17; /* language */
	T0* a18; /* obsolete_message */
	T0* a19; /* alias_clause */
	T0* a20; /* clients */
	T0* a21; /* is_keyword */
	T0* a22; /* end_keyword */
	T0* a23; /* semicolon */
	T0* a24; /* feature_clause */
	T0* a25; /* first_indexing */
	T0* a26; /* object_tests */
	T0* a27; /* across_components */
	T1 a28; /* validity_checked */
	T1 a29; /* has_validity_error */
	T6 a30; /* id */
	T6 a31; /* version */
	T0* a32; /* synonym */
};

/* Struct for type ET_TUPLE_TYPE */
struct S345 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* named_base_class */
	T0* a2; /* actual_parameters */
	T0* a3; /* type_mark */
	T0* a4; /* tuple_keyword */
};

/* Struct for type ET_FORMAL_ARGUMENT_LIST */
struct S347 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type [attached] ARRAY [[attached] ET_TYPE] */
struct S348 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] SPECIAL [[attached] ET_TYPE] */
struct S349 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_FORMAL_ARGUMENT */
struct S350 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type ET_QUERY_LIST */
struct S351 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* declared_count */
	T0* a3; /* storage */
};

/* Struct for type ET_PROCEDURE_LIST */
struct S352 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* declared_count */
	T0* a3; /* storage */
};

/* Struct for type DT_SHARED_SYSTEM_CLOCK */
struct S353 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DT_SYSTEM_CLOCK */
struct S354 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* second */
	T6 a2; /* year */
	T6 a3; /* month */
	T6 a4; /* day */
	T6 a5; /* hour */
	T6 a6; /* minute */
	T6 a7; /* millisecond */
	T0* a8; /* local_clock */
};

/* Struct for type DT_DATE_TIME */
struct S355 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* time_storage */
	T6 a2; /* date_storage */
};

/* Struct for type ET_EIFFEL_PREPARSER */
struct S357 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* eiffel_buffer */
	T0* a2; /* system_processor */
	T6 a3; /* last_text_count */
	T6 a4; /* last_literal_start */
	T0* a5; /* filename */
	T0* a6; /* group */
	T0* a7; /* verbatim_marker */
	T0* a8; /* verbatim_open_white_characters */
	T0* a9; /* verbatim_close_white_characters */
	T0* a10; /* yy_pushed_start_conditions */
	T0* a11; /* input_buffer */
	T0* a12; /* yy_state_stack */
	T6 a13; /* yy_start_state */
	T6 a14; /* yy_line */
	T6 a15; /* yy_column */
	T6 a16; /* yy_position */
	T6 a17; /* yy_start */
	T6 a18; /* yy_end */
	T6 a19; /* line */
	T6 a20; /* column */
	T6 a21; /* position */
	T0* a22; /* yy_nxt */
	T0* a23; /* yy_chk */
	T0* a24; /* yy_base */
	T0* a25; /* yy_def */
	T0* a26; /* yy_ec */
	T0* a27; /* yy_meta */
	T0* a28; /* yy_accept */
	T0* a29; /* yy_acclist */
	T0* a30; /* yy_content */
	T0* a31; /* yy_content_area */
	T0* a32; /* last_classname */
	T1 a33; /* class_keyword_found */
	T6 a34; /* last_token */
	T1 a35; /* yy_more_flag */
	T6 a36; /* yy_more_len */
	T6 a37; /* yy_state_count */
	T6 a38; /* yy_last_accepting_state */
	T6 a39; /* yy_last_accepting_cpos */
	T6 a40; /* yy_lp */
	T6 a41; /* yy_looking_for_trail_begin */
	T6 a42; /* yy_full_match */
	T6 a43; /* yy_full_state */
	T6 a44; /* yy_full_lp */
	T1 a45; /* yy_rejected */
	T6 a46; /* last_literal_end */
	T6 a47; /* pushed_start_condition_count */
	T6 a48; /* ms_column */
	T6 a49; /* ms_line */
	T6 a50; /* last_break_end */
	T6 a51; /* last_comment_end */
};

/* Struct for type ET_MASTER_CLASS_CHECKER */
struct S358 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_EIFFEL_PARSER */
struct S359 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* eiffel_buffer */
	T0* a2; /* counters */
	T0* a3; /* last_formal_arguments_stack */
	T0* a4; /* last_local_variables_stack */
	T0* a5; /* last_keywords */
	T0* a6; /* last_symbols */
	T0* a7; /* last_object_tests_stack */
	T0* a8; /* last_object_tests_pool */
	T0* a9; /* last_across_components_stack */
	T0* a10; /* last_across_components_pool */
	T0* a11; /* assertions */
	T0* a12; /* assertion_counters */
	T0* a13; /* assertion_kinds */
	T6 a14; /* assertion_kind */
	T0* a15; /* queries */
	T0* a16; /* procedures */
	T0* a17; /* constraints */
	T0* a18; /* providers */
	T0* a19; /* current_class */
	T0* a20; /* system_processor */
	T6 a21; /* last_text_count */
	T6 a22; /* last_literal_start */
	T0* a23; /* filename */
	T0* a24; /* group */
	T0* a25; /* verbatim_marker */
	T0* a26; /* verbatim_open_white_characters */
	T0* a27; /* verbatim_close_white_characters */
	T0* a28; /* yyss */
	T0* a29; /* yy_pushed_start_conditions */
	T0* a30; /* input_buffer */
	T0* a31; /* yyspecial_routines1 */
	T6 a32; /* yyvsc1 */
	T0* a33; /* yyvs1 */
	T0* a34; /* yyspecial_routines2 */
	T6 a35; /* yyvsc2 */
	T0* a36; /* yyvs2 */
	T0* a37; /* yyspecial_routines3 */
	T6 a38; /* yyvsc3 */
	T0* a39; /* yyvs3 */
	T0* a40; /* yyspecial_routines4 */
	T6 a41; /* yyvsc4 */
	T0* a42; /* yyvs4 */
	T0* a43; /* yyspecial_routines5 */
	T6 a44; /* yyvsc5 */
	T0* a45; /* yyvs5 */
	T0* a46; /* yyspecial_routines6 */
	T6 a47; /* yyvsc6 */
	T0* a48; /* yyvs6 */
	T0* a49; /* yyspecial_routines7 */
	T6 a50; /* yyvsc7 */
	T0* a51; /* yyvs7 */
	T0* a52; /* yyspecial_routines8 */
	T6 a53; /* yyvsc8 */
	T0* a54; /* yyvs8 */
	T0* a55; /* yyspecial_routines9 */
	T6 a56; /* yyvsc9 */
	T0* a57; /* yyvs9 */
	T0* a58; /* yyspecial_routines10 */
	T6 a59; /* yyvsc10 */
	T0* a60; /* yyvs10 */
	T0* a61; /* yyspecial_routines11 */
	T6 a62; /* yyvsc11 */
	T0* a63; /* yyvs11 */
	T0* a64; /* yyspecial_routines12 */
	T6 a65; /* yyvsc12 */
	T0* a66; /* yyvs12 */
	T0* a67; /* yyspecial_routines13 */
	T6 a68; /* yyvsc13 */
	T0* a69; /* yyvs13 */
	T0* a70; /* yyspecial_routines14 */
	T6 a71; /* yyvsc14 */
	T0* a72; /* yyvs14 */
	T0* a73; /* yyspecial_routines15 */
	T6 a74; /* yyvsc15 */
	T0* a75; /* yyvs15 */
	T0* a76; /* yyspecial_routines16 */
	T6 a77; /* yyvsc16 */
	T0* a78; /* yyvs16 */
	T0* a79; /* yyspecial_routines17 */
	T6 a80; /* yyvsc17 */
	T0* a81; /* yyvs17 */
	T0* a82; /* yyspecial_routines18 */
	T6 a83; /* yyvsc18 */
	T0* a84; /* yyvs18 */
	T0* a85; /* yyspecial_routines19 */
	T6 a86; /* yyvsc19 */
	T0* a87; /* yyvs19 */
	T0* a88; /* yyspecial_routines20 */
	T6 a89; /* yyvsc20 */
	T0* a90; /* yyvs20 */
	T0* a91; /* yyspecial_routines21 */
	T6 a92; /* yyvsc21 */
	T0* a93; /* yyvs21 */
	T0* a94; /* yyspecial_routines22 */
	T6 a95; /* yyvsc22 */
	T0* a96; /* yyvs22 */
	T0* a97; /* yyspecial_routines23 */
	T6 a98; /* yyvsc23 */
	T0* a99; /* yyvs23 */
	T0* a100; /* yyspecial_routines24 */
	T6 a101; /* yyvsc24 */
	T0* a102; /* yyvs24 */
	T0* a103; /* yyspecial_routines25 */
	T6 a104; /* yyvsc25 */
	T0* a105; /* yyvs25 */
	T0* a106; /* yyspecial_routines26 */
	T6 a107; /* yyvsc26 */
	T0* a108; /* yyvs26 */
	T0* a109; /* yyspecial_routines27 */
	T6 a110; /* yyvsc27 */
	T0* a111; /* yyvs27 */
	T0* a112; /* yyspecial_routines28 */
	T6 a113; /* yyvsc28 */
	T0* a114; /* yyvs28 */
	T0* a115; /* yyspecial_routines29 */
	T6 a116; /* yyvsc29 */
	T0* a117; /* yyvs29 */
	T0* a118; /* yyspecial_routines30 */
	T6 a119; /* yyvsc30 */
	T0* a120; /* yyvs30 */
	T0* a121; /* yyspecial_routines31 */
	T6 a122; /* yyvsc31 */
	T0* a123; /* yyvs31 */
	T0* a124; /* yyspecial_routines32 */
	T6 a125; /* yyvsc32 */
	T0* a126; /* yyvs32 */
	T0* a127; /* yyspecial_routines33 */
	T6 a128; /* yyvsc33 */
	T0* a129; /* yyvs33 */
	T0* a130; /* yyspecial_routines34 */
	T6 a131; /* yyvsc34 */
	T0* a132; /* yyvs34 */
	T0* a133; /* yyspecial_routines35 */
	T6 a134; /* yyvsc35 */
	T0* a135; /* yyvs35 */
	T0* a136; /* yyspecial_routines36 */
	T6 a137; /* yyvsc36 */
	T0* a138; /* yyvs36 */
	T0* a139; /* yyspecial_routines37 */
	T6 a140; /* yyvsc37 */
	T0* a141; /* yyvs37 */
	T0* a142; /* yyspecial_routines38 */
	T6 a143; /* yyvsc38 */
	T0* a144; /* yyvs38 */
	T0* a145; /* yyspecial_routines39 */
	T6 a146; /* yyvsc39 */
	T0* a147; /* yyvs39 */
	T0* a148; /* yyspecial_routines40 */
	T6 a149; /* yyvsc40 */
	T0* a150; /* yyvs40 */
	T0* a151; /* yyspecial_routines41 */
	T6 a152; /* yyvsc41 */
	T0* a153; /* yyvs41 */
	T0* a154; /* yyspecial_routines42 */
	T6 a155; /* yyvsc42 */
	T0* a156; /* yyvs42 */
	T0* a157; /* yyspecial_routines43 */
	T6 a158; /* yyvsc43 */
	T0* a159; /* yyvs43 */
	T0* a160; /* yyspecial_routines44 */
	T6 a161; /* yyvsc44 */
	T0* a162; /* yyvs44 */
	T0* a163; /* yyspecial_routines45 */
	T6 a164; /* yyvsc45 */
	T0* a165; /* yyvs45 */
	T0* a166; /* yyspecial_routines46 */
	T6 a167; /* yyvsc46 */
	T0* a168; /* yyvs46 */
	T0* a169; /* yyspecial_routines47 */
	T6 a170; /* yyvsc47 */
	T0* a171; /* yyvs47 */
	T0* a172; /* yyspecial_routines48 */
	T6 a173; /* yyvsc48 */
	T0* a174; /* yyvs48 */
	T0* a175; /* yyspecial_routines49 */
	T6 a176; /* yyvsc49 */
	T0* a177; /* yyvs49 */
	T0* a178; /* yyspecial_routines50 */
	T6 a179; /* yyvsc50 */
	T0* a180; /* yyvs50 */
	T0* a181; /* yyspecial_routines51 */
	T6 a182; /* yyvsc51 */
	T0* a183; /* yyvs51 */
	T0* a184; /* yyspecial_routines52 */
	T6 a185; /* yyvsc52 */
	T0* a186; /* yyvs52 */
	T0* a187; /* yyspecial_routines53 */
	T6 a188; /* yyvsc53 */
	T0* a189; /* yyvs53 */
	T0* a190; /* yyspecial_routines54 */
	T6 a191; /* yyvsc54 */
	T0* a192; /* yyvs54 */
	T0* a193; /* yyspecial_routines55 */
	T6 a194; /* yyvsc55 */
	T0* a195; /* yyvs55 */
	T0* a196; /* yyspecial_routines56 */
	T6 a197; /* yyvsc56 */
	T0* a198; /* yyvs56 */
	T0* a199; /* yyspecial_routines57 */
	T6 a200; /* yyvsc57 */
	T0* a201; /* yyvs57 */
	T0* a202; /* yyspecial_routines58 */
	T6 a203; /* yyvsc58 */
	T0* a204; /* yyvs58 */
	T0* a205; /* yyspecial_routines59 */
	T6 a206; /* yyvsc59 */
	T0* a207; /* yyvs59 */
	T0* a208; /* yyspecial_routines60 */
	T6 a209; /* yyvsc60 */
	T0* a210; /* yyvs60 */
	T0* a211; /* yyspecial_routines61 */
	T6 a212; /* yyvsc61 */
	T0* a213; /* yyvs61 */
	T0* a214; /* yyspecial_routines62 */
	T6 a215; /* yyvsc62 */
	T0* a216; /* yyvs62 */
	T0* a217; /* yyspecial_routines63 */
	T6 a218; /* yyvsc63 */
	T0* a219; /* yyvs63 */
	T0* a220; /* yyspecial_routines64 */
	T6 a221; /* yyvsc64 */
	T0* a222; /* yyvs64 */
	T0* a223; /* yyspecial_routines65 */
	T6 a224; /* yyvsc65 */
	T0* a225; /* yyvs65 */
	T0* a226; /* yyspecial_routines66 */
	T6 a227; /* yyvsc66 */
	T0* a228; /* yyvs66 */
	T0* a229; /* yyspecial_routines67 */
	T6 a230; /* yyvsc67 */
	T0* a231; /* yyvs67 */
	T0* a232; /* yyspecial_routines68 */
	T6 a233; /* yyvsc68 */
	T0* a234; /* yyvs68 */
	T0* a235; /* yyspecial_routines69 */
	T6 a236; /* yyvsc69 */
	T0* a237; /* yyvs69 */
	T0* a238; /* yyspecial_routines70 */
	T6 a239; /* yyvsc70 */
	T0* a240; /* yyvs70 */
	T0* a241; /* yyspecial_routines71 */
	T6 a242; /* yyvsc71 */
	T0* a243; /* yyvs71 */
	T0* a244; /* yyspecial_routines72 */
	T6 a245; /* yyvsc72 */
	T0* a246; /* yyvs72 */
	T0* a247; /* yyspecial_routines73 */
	T6 a248; /* yyvsc73 */
	T0* a249; /* yyvs73 */
	T0* a250; /* yyspecial_routines74 */
	T6 a251; /* yyvsc74 */
	T0* a252; /* yyvs74 */
	T0* a253; /* yyspecial_routines75 */
	T6 a254; /* yyvsc75 */
	T0* a255; /* yyvs75 */
	T0* a256; /* yyspecial_routines76 */
	T6 a257; /* yyvsc76 */
	T0* a258; /* yyvs76 */
	T0* a259; /* yyspecial_routines77 */
	T6 a260; /* yyvsc77 */
	T0* a261; /* yyvs77 */
	T0* a262; /* yyspecial_routines78 */
	T6 a263; /* yyvsc78 */
	T0* a264; /* yyvs78 */
	T0* a265; /* yyspecial_routines79 */
	T6 a266; /* yyvsc79 */
	T0* a267; /* yyvs79 */
	T0* a268; /* yyspecial_routines80 */
	T6 a269; /* yyvsc80 */
	T0* a270; /* yyvs80 */
	T0* a271; /* yyspecial_routines81 */
	T6 a272; /* yyvsc81 */
	T0* a273; /* yyvs81 */
	T0* a274; /* yyspecial_routines82 */
	T6 a275; /* yyvsc82 */
	T0* a276; /* yyvs82 */
	T0* a277; /* yyspecial_routines83 */
	T6 a278; /* yyvsc83 */
	T0* a279; /* yyvs83 */
	T0* a280; /* yyspecial_routines84 */
	T6 a281; /* yyvsc84 */
	T0* a282; /* yyvs84 */
	T0* a283; /* yyspecial_routines85 */
	T6 a284; /* yyvsc85 */
	T0* a285; /* yyvs85 */
	T0* a286; /* yyspecial_routines86 */
	T6 a287; /* yyvsc86 */
	T0* a288; /* yyvs86 */
	T0* a289; /* yyspecial_routines87 */
	T6 a290; /* yyvsc87 */
	T0* a291; /* yyvs87 */
	T0* a292; /* yyspecial_routines88 */
	T6 a293; /* yyvsc88 */
	T0* a294; /* yyvs88 */
	T0* a295; /* yyspecial_routines89 */
	T6 a296; /* yyvsc89 */
	T0* a297; /* yyvs89 */
	T0* a298; /* yyspecial_routines90 */
	T6 a299; /* yyvsc90 */
	T0* a300; /* yyvs90 */
	T0* a301; /* yyspecial_routines91 */
	T6 a302; /* yyvsc91 */
	T0* a303; /* yyvs91 */
	T0* a304; /* yyspecial_routines92 */
	T6 a305; /* yyvsc92 */
	T0* a306; /* yyvs92 */
	T0* a307; /* yyspecial_routines93 */
	T6 a308; /* yyvsc93 */
	T0* a309; /* yyvs93 */
	T0* a310; /* yyspecial_routines94 */
	T6 a311; /* yyvsc94 */
	T0* a312; /* yyvs94 */
	T0* a313; /* yyspecial_routines95 */
	T6 a314; /* yyvsc95 */
	T0* a315; /* yyvs95 */
	T0* a316; /* yyspecial_routines96 */
	T6 a317; /* yyvsc96 */
	T0* a318; /* yyvs96 */
	T0* a319; /* yyspecial_routines97 */
	T6 a320; /* yyvsc97 */
	T0* a321; /* yyvs97 */
	T0* a322; /* yyspecial_routines98 */
	T6 a323; /* yyvsc98 */
	T0* a324; /* yyvs98 */
	T0* a325; /* yyspecial_routines99 */
	T6 a326; /* yyvsc99 */
	T0* a327; /* yyvs99 */
	T0* a328; /* yyspecial_routines100 */
	T6 a329; /* yyvsc100 */
	T0* a330; /* yyvs100 */
	T0* a331; /* yyspecial_routines101 */
	T6 a332; /* yyvsc101 */
	T0* a333; /* yyvs101 */
	T0* a334; /* yyspecial_routines102 */
	T6 a335; /* yyvsc102 */
	T0* a336; /* yyvs102 */
	T0* a337; /* yyspecial_routines103 */
	T6 a338; /* yyvsc103 */
	T0* a339; /* yyvs103 */
	T0* a340; /* yyspecial_routines104 */
	T6 a341; /* yyvsc104 */
	T0* a342; /* yyvs104 */
	T0* a343; /* yyspecial_routines105 */
	T6 a344; /* yyvsc105 */
	T0* a345; /* yyvs105 */
	T0* a346; /* yyspecial_routines106 */
	T6 a347; /* yyvsc106 */
	T0* a348; /* yyvs106 */
	T0* a349; /* yyspecial_routines107 */
	T6 a350; /* yyvsc107 */
	T0* a351; /* yyvs107 */
	T0* a352; /* yyspecial_routines108 */
	T6 a353; /* yyvsc108 */
	T0* a354; /* yyvs108 */
	T0* a355; /* yyspecial_routines109 */
	T6 a356; /* yyvsc109 */
	T0* a357; /* yyvs109 */
	T0* a358; /* yyspecial_routines110 */
	T6 a359; /* yyvsc110 */
	T0* a360; /* yyvs110 */
	T0* a361; /* yyspecial_routines111 */
	T6 a362; /* yyvsc111 */
	T0* a363; /* yyvs111 */
	T0* a364; /* yyspecial_routines112 */
	T6 a365; /* yyvsc112 */
	T0* a366; /* yyvs112 */
	T0* a367; /* yyspecial_routines113 */
	T6 a368; /* yyvsc113 */
	T0* a369; /* yyvs113 */
	T0* a370; /* yyspecial_routines114 */
	T6 a371; /* yyvsc114 */
	T0* a372; /* yyvs114 */
	T0* a373; /* yyspecial_routines115 */
	T6 a374; /* yyvsc115 */
	T0* a375; /* yyvs115 */
	T0* a376; /* yyspecial_routines116 */
	T6 a377; /* yyvsc116 */
	T0* a378; /* yyvs116 */
	T0* a379; /* yyspecial_routines117 */
	T6 a380; /* yyvsc117 */
	T0* a381; /* yyvs117 */
	T0* a382; /* yyspecial_routines118 */
	T6 a383; /* yyvsc118 */
	T0* a384; /* yyvs118 */
	T0* a385; /* yyspecial_routines119 */
	T6 a386; /* yyvsc119 */
	T0* a387; /* yyvs119 */
	T0* a388; /* yyspecial_routines120 */
	T6 a389; /* yyvsc120 */
	T0* a390; /* yyvs120 */
	T0* a391; /* yyspecial_routines121 */
	T6 a392; /* yyvsc121 */
	T0* a393; /* yyvs121 */
	T0* a394; /* yyspecial_routines122 */
	T6 a395; /* yyvsc122 */
	T0* a396; /* yyvs122 */
	T0* a397; /* yyspecial_routines123 */
	T6 a398; /* yyvsc123 */
	T0* a399; /* yyvs123 */
	T0* a400; /* yyspecial_routines124 */
	T6 a401; /* yyvsc124 */
	T0* a402; /* yyvs124 */
	T0* a403; /* yytranslate */
	T0* a404; /* yyr1 */
	T0* a405; /* yytypes1 */
	T0* a406; /* yytypes2 */
	T0* a407; /* yydefact */
	T0* a408; /* yydefgoto */
	T0* a409; /* yypact */
	T0* a410; /* yypgoto */
	T0* a411; /* yytable */
	T0* a412; /* yycheck */
	T0* a413; /* yy_state_stack */
	T6 a414; /* yy_start_state */
	T6 a415; /* yy_line */
	T6 a416; /* yy_column */
	T6 a417; /* yy_position */
	T6 a418; /* yy_start */
	T6 a419; /* yy_end */
	T6 a420; /* line */
	T6 a421; /* column */
	T6 a422; /* position */
	T0* a423; /* yy_nxt */
	T0* a424; /* yy_chk */
	T0* a425; /* yy_base */
	T0* a426; /* yy_def */
	T0* a427; /* yy_ec */
	T0* a428; /* yy_meta */
	T0* a429; /* yy_accept */
	T0* a430; /* yy_acclist */
	T0* a431; /* yy_content */
	T0* a432; /* yy_content_area */
	T6 a433; /* time_stamp */
	T0* a434; /* last_class */
	T6 a435; /* yy_parsing_status */
	T6 a436; /* yy_suspended_yystacksize */
	T6 a437; /* yy_suspended_yystate */
	T6 a438; /* yy_suspended_yyn */
	T6 a439; /* yy_suspended_yychar1 */
	T6 a440; /* yy_suspended_index */
	T6 a441; /* yy_suspended_yyss_top */
	T6 a442; /* yy_suspended_yy_goto */
	T6 a443; /* yyssp */
	T6 a444; /* error_count */
	T1 a445; /* yy_lookahead_needed */
	T6 a446; /* yyerrstatus */
	T6 a447; /* last_token */
	T0* a448; /* last_clients */
	T0* a449; /* last_export_clients */
	T0* a450; /* last_feature_clause */
	T6 a451; /* last_literal_end */
	T1 a452; /* yy_rejected */
	T6 a453; /* yy_state_count */
	T6 a454; /* yy_full_match */
	T6 a455; /* yy_lp */
	T6 a456; /* yy_looking_for_trail_begin */
	T6 a457; /* yy_full_lp */
	T6 a458; /* yy_full_state */
	T6 a459; /* pushed_start_condition_count */
	T1 a460; /* yy_more_flag */
	T6 a461; /* yy_more_len */
	T6 a462; /* yy_last_accepting_state */
	T6 a463; /* yy_last_accepting_cpos */
	T6 a464; /* yyvsp1 */
	T6 a465; /* yyvsp2 */
	T6 a466; /* yyvsp3 */
	T6 a467; /* yyvsp4 */
	T6 a468; /* yyvsp5 */
	T6 a469; /* yyvsp6 */
	T6 a470; /* yyvsp7 */
	T6 a471; /* yyvsp8 */
	T6 a472; /* yyvsp9 */
	T6 a473; /* yyvsp10 */
	T6 a474; /* yyvsp11 */
	T6 a475; /* yyvsp12 */
	T6 a476; /* yyvsp13 */
	T6 a477; /* yyvsp14 */
	T6 a478; /* yyvsp15 */
	T6 a479; /* yyvsp16 */
	T6 a480; /* yyvsp17 */
	T6 a481; /* yyvsp18 */
	T6 a482; /* yyvsp19 */
	T6 a483; /* yyvsp20 */
	T6 a484; /* yyvsp21 */
	T6 a485; /* yyvsp22 */
	T6 a486; /* yyvsp23 */
	T6 a487; /* yyvsp24 */
	T6 a488; /* yyvsp25 */
	T6 a489; /* yyvsp26 */
	T6 a490; /* yyvsp27 */
	T6 a491; /* yyvsp28 */
	T6 a492; /* yyvsp29 */
	T6 a493; /* yyvsp30 */
	T6 a494; /* yyvsp31 */
	T6 a495; /* yyvsp32 */
	T6 a496; /* yyvsp33 */
	T6 a497; /* yyvsp34 */
	T6 a498; /* yyvsp35 */
	T6 a499; /* yyvsp36 */
	T6 a500; /* yyvsp37 */
	T6 a501; /* yyvsp38 */
	T6 a502; /* yyvsp39 */
	T6 a503; /* yyvsp40 */
	T6 a504; /* yyvsp41 */
	T6 a505; /* yyvsp42 */
	T6 a506; /* yyvsp43 */
	T6 a507; /* yyvsp44 */
	T6 a508; /* yyvsp45 */
	T6 a509; /* yyvsp46 */
	T6 a510; /* yyvsp47 */
	T6 a511; /* yyvsp48 */
	T6 a512; /* yyvsp49 */
	T6 a513; /* yyvsp50 */
	T6 a514; /* yyvsp51 */
	T6 a515; /* yyvsp52 */
	T6 a516; /* yyvsp53 */
	T6 a517; /* yyvsp54 */
	T6 a518; /* yyvsp55 */
	T6 a519; /* yyvsp56 */
	T6 a520; /* yyvsp57 */
	T6 a521; /* yyvsp58 */
	T6 a522; /* yyvsp59 */
	T6 a523; /* yyvsp60 */
	T6 a524; /* yyvsp61 */
	T6 a525; /* yyvsp62 */
	T6 a526; /* yyvsp63 */
	T6 a527; /* yyvsp64 */
	T6 a528; /* yyvsp65 */
	T6 a529; /* yyvsp66 */
	T6 a530; /* yyvsp67 */
	T6 a531; /* yyvsp68 */
	T6 a532; /* yyvsp69 */
	T6 a533; /* yyvsp70 */
	T6 a534; /* yyvsp71 */
	T6 a535; /* yyvsp72 */
	T6 a536; /* yyvsp73 */
	T6 a537; /* yyvsp74 */
	T6 a538; /* yyvsp75 */
	T6 a539; /* yyvsp76 */
	T6 a540; /* yyvsp77 */
	T6 a541; /* yyvsp78 */
	T6 a542; /* yyvsp79 */
	T6 a543; /* yyvsp80 */
	T6 a544; /* yyvsp81 */
	T6 a545; /* yyvsp82 */
	T6 a546; /* yyvsp83 */
	T6 a547; /* yyvsp84 */
	T6 a548; /* yyvsp85 */
	T6 a549; /* yyvsp86 */
	T6 a550; /* yyvsp87 */
	T6 a551; /* yyvsp88 */
	T6 a552; /* yyvsp89 */
	T6 a553; /* yyvsp90 */
	T6 a554; /* yyvsp91 */
	T6 a555; /* yyvsp92 */
	T6 a556; /* yyvsp93 */
	T6 a557; /* yyvsp94 */
	T6 a558; /* yyvsp95 */
	T6 a559; /* yyvsp96 */
	T6 a560; /* yyvsp97 */
	T6 a561; /* yyvsp98 */
	T6 a562; /* yyvsp99 */
	T6 a563; /* yyvsp100 */
	T6 a564; /* yyvsp101 */
	T6 a565; /* yyvsp102 */
	T6 a566; /* yyvsp103 */
	T6 a567; /* yyvsp104 */
	T6 a568; /* yyvsp105 */
	T6 a569; /* yyvsp106 */
	T6 a570; /* yyvsp107 */
	T6 a571; /* yyvsp108 */
	T6 a572; /* yyvsp109 */
	T6 a573; /* yyvsp110 */
	T6 a574; /* yyvsp111 */
	T6 a575; /* yyvsp112 */
	T6 a576; /* yyvsp113 */
	T6 a577; /* yyvsp114 */
	T6 a578; /* yyvsp115 */
	T6 a579; /* yyvsp116 */
	T6 a580; /* yyvsp117 */
	T6 a581; /* yyvsp118 */
	T6 a582; /* yyvsp119 */
	T6 a583; /* yyvsp120 */
	T6 a584; /* yyvsp121 */
	T6 a585; /* yyvsp122 */
	T6 a586; /* yyvsp123 */
	T6 a587; /* yyvsp124 */
	T0* a588; /* last_detachable_any_value */
	T0* a589; /* last_detachable_et_keyword_value */
	T0* a590; /* last_detachable_et_agent_keyword_value */
	T0* a591; /* last_detachable_et_precursor_keyword_value */
	T0* a592; /* last_detachable_et_symbol_value */
	T0* a593; /* last_detachable_et_position_value */
	T0* a594; /* last_detachable_et_boolean_constant_value */
	T0* a595; /* last_detachable_et_break_value */
	T0* a596; /* last_detachable_et_character_constant_value */
	T0* a597; /* last_detachable_et_current_value */
	T0* a598; /* last_detachable_et_free_operator_value */
	T0* a599; /* last_detachable_et_identifier_value */
	T0* a600; /* last_detachable_et_integer_constant_value */
	T0* a601; /* last_detachable_et_keyword_operator_value */
	T0* a602; /* last_detachable_et_manifest_string_value */
	T0* a603; /* last_detachable_et_real_constant_value */
	T0* a604; /* last_detachable_et_result_value */
	T0* a605; /* last_detachable_et_retry_instruction_value */
	T0* a606; /* last_detachable_et_symbol_operator_value */
	T0* a607; /* last_detachable_et_void_value */
	T0* a608; /* last_detachable_et_semicolon_symbol_value */
	T0* a609; /* last_detachable_et_bracket_symbol_value */
	T0* a610; /* last_detachable_et_question_mark_symbol_value */
	T0* a611; /* last_formal_arguments */
	T0* a612; /* last_local_variables */
	T0* a613; /* last_object_tests */
	T0* a614; /* last_across_components */
	T6 a615; /* last_break_end */
	T6 a616; /* last_comment_end */
	T6 a617; /* ms_column */
	T6 a618; /* ms_line */
	T6 a619; /* break_kind */
};

/* Struct for type ET_PROVIDER_CHECKER */
struct S360 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
};

/* Struct for type ET_ANCESTOR_BUILDER */
struct S361 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_sorter */
	T0* a2; /* ancestors */
	T0* a3; /* conforming_ancestors */
	T0* a4; /* parent_checker */
	T0* a5; /* formal_parameter_checker */
	T0* a6; /* parent_context */
	T0* a7; /* current_class */
	T0* a8; /* system_processor */
};

/* Struct for type ET_FEATURE_FLATTENER */
struct S362 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* named_features */
	T0* a2; /* queries */
	T0* a3; /* procedures */
	T0* a4; /* aliased_features */
	T0* a5; /* clients_list */
	T0* a6; /* client_classes */
	T0* a7; /* feature_adaptation_resolver */
	T0* a8; /* dotnet_feature_adaptation_resolver */
	T0* a9; /* identifier_type_resolver */
	T0* a10; /* unfolded_tuple_actual_parameters_resolver */
	T0* a11; /* anchored_type_checker */
	T0* a12; /* signature_checker */
	T0* a13; /* parent_checker */
	T0* a14; /* formal_parameter_checker */
	T0* a15; /* builtin_feature_checker */
	T0* a16; /* precursor_checker */
	T0* a17; /* precursors */
	T0* a18; /* current_class */
	T0* a19; /* system_processor */
	T1 a20; /* has_signature_error */
};

/* Struct for type ET_INTERFACE_CHECKER */
struct S363 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* classes_to_be_processed */
	T0* a2; /* parent_checker3 */
	T0* a3; /* qualified_anchored_type_checker */
	T0* a4; /* named_features */
	T0* a5; /* feature_adaptation_resolver */
	T0* a6; /* dotnet_feature_adaptation_resolver */
	T0* a7; /* signature_checker */
	T0* a8; /* unfolded_tuple_actual_parameters_resolver */
	T0* a9; /* current_class */
	T0* a10; /* system_processor */
};

/* Struct for type ET_IMPLEMENTATION_CHECKER */
struct S364 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_checker */
	T0* a2; /* precursor_procedures */
	T0* a3; /* precursor_queries */
	T0* a4; /* supplier_builder */
	T0* a5; /* current_class */
	T0* a6; /* no_suppliers */
	T0* a7; /* system_processor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_CLASS] */
struct S365 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
	T0* a6; /* equality_tester */
};

/* Struct for type [attached] TUPLE [[attached] DS_ARRAYED_LIST [[attached] ET_CLASS]] */
struct S366 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_AST_NULL_PROCESSOR */
struct S367 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] INTEGER_32] */
struct S368 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_AST_FACTORY */
struct S369 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
struct S371 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* system_processor */
};

/* Struct for type DT_DATE_TIME_DURATION */
struct S372 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* year */
	T6 a2; /* month */
	T6 a3; /* day */
	T6 a4; /* hour */
	T6 a5; /* minute */
	T6 a6; /* second */
	T6 a7; /* millisecond */
};

/* Struct for type ET_DYNAMIC_TYPE_SET_LIST */
struct S373 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type KL_STRING_OUTPUT_STREAM */
struct S374 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* string */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER] */
struct S375 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [detachable ET_DYNAMIC_TYPE] */
struct S376 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_TYPE_HASH_LIST */
struct S377 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* clashes */
	T0* a4; /* slots */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET */
struct S378 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
};

/* Struct for type [attached] DS_ARRAYED_STACK [[attached] ET_EXPRESSION] */
struct S379 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION] */
struct S380 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32] */
struct S381 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* last_position */
	T6 a4; /* capacity */
	T6 a5; /* count */
	T6 a6; /* free_slot */
	T6 a7; /* slots_position */
	T6 a8; /* modulus */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* key_equality_tester */
	T0* a11; /* equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
struct S382 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE] */
struct S383 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
struct S384 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST] */
struct S385 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
struct S386 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION] */
struct S387 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_AGENT] */
struct S388 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_EXPRESSION */
struct S389 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CURRENT */
struct S390 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_ACTUAL_ARGUMENT_LIST */
struct S391 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_symbol */
	T0* a4; /* right_symbol */
};

/* Struct for type ET_QUALIFIED_CALL_INSTRUCTION */
struct S392 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
	T0* a4; /* parenthesis_call */
};

/* Struct for type ET_QUALIFIED_CALL_EXPRESSION */
struct S396 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T6 a2; /* index */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* parenthesis_call */
};

/* Struct for type ET_UNQUALIFIED_CALL_EXPRESSION */
struct S397 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* arguments */
	T6 a3; /* index */
	T0* a4; /* parenthesis_call */
};

/* Struct for type [attached] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S398 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_MANIFEST_TUPLE */
struct S399 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_symbol */
	T0* a2; /* right_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
	T6 a5; /* index */
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE] */
struct S400 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE] */
struct S401 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* count */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* modulus */
	T6 a6; /* slots_position */
	T6 a7; /* clashes_previous_position */
	T0* a8; /* key_equality_tester */
	T0* a9; /* equality_tester */
	T0* a10; /* internal_cursor */
	T6 a11; /* found_position */
	T0* a12; /* item_storage */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* capacity */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type [attached] ARRAY [[attached] INTEGER_32] */
struct S402 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE] */
struct S403 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT] */
struct S404 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE] */
struct S405 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T0* a10; /* internal_cursor */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE] */
struct S406 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8] */
struct S407 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* count */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* capacity */
	T6 a11; /* slots_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* equality_tester */
	T6 a15; /* found_position */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_IDENTIFIER_TESTER */
struct S408 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type RX_PCRE_REGULAR_EXPRESSION */
struct S410 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* subject */
	T6 a2; /* subject_end */
	T6 a3; /* subject_start */
	T6 a4; /* match_count */
	T0* a5; /* offset_vector */
	T6 a6; /* offset_vector_count */
	T6 a7; /* brastart_capacity */
	T0* a8; /* brastart_vector */
	T6 a9; /* brastart_lower */
	T6 a10; /* brastart_count */
	T6 a11; /* eptr_capacity */
	T0* a12; /* eptr_vector */
	T6 a13; /* eptr_lower */
	T6 a14; /* eptr_upper */
	T0* a15; /* byte_code */
	T0* a16; /* internal_start_bits */
	T0* a17; /* pattern_buffer */
	T6 a18; /* subexpression_count */
	T0* a19; /* pattern */
	T6 a20; /* pattern_count */
	T6 a21; /* pattern_position */
	T6 a22; /* code_index */
	T6 a23; /* maxbackrefs */
	T6 a24; /* optchanged */
	T6 a25; /* first_character */
	T6 a26; /* required_character */
	T6 a27; /* regexp_countlits */
	T0* a28; /* start_bits */
	T0* a29; /* error_message */
	T1 a30; /* is_anchored */
	T0* a31; /* character_case_mapping */
	T0* a32; /* word_set */
	T6 a33; /* subject_next_start */
	T6 a34; /* error_code */
	T6 a35; /* error_position */
	T1 a36; /* is_startline */
	T1 a37; /* is_caseless */
	T1 a38; /* is_bol */
	T1 a39; /* is_eol */
	T1 a40; /* is_multiline */
	T1 a41; /* is_dotall */
	T1 a42; /* is_extended */
	T1 a43; /* is_empty_allowed */
	T1 a44; /* is_dollar_endonly */
	T1 a45; /* is_greedy */
	T1 a46; /* is_strict */
	T1 a47; /* is_ichanged */
	T6 a48; /* first_matched_index */
	T6 a49; /* eptr */
	T6 a50; /* offset_top */
	T1 a51; /* is_matching_caseless */
	T1 a52; /* is_matching_multiline */
	T1 a53; /* is_matching_dotall */
};

/* Struct for type KL_TEXT_OUTPUT_FILE */
struct S411 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* mode */
	T14 a3; /* file_pointer */
	T1 a4; /* descriptor_available */
	T0* a5; /* last_string */
	T0* a6; /* internal_name */
	T0* a7; /* internal_detachable_name_pointer */
};

/* Struct for type ET_DYNAMIC_TUPLE_TYPE */
struct S412 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T0* a8; /* procedures */
	T0* a9; /* item_type_sets */
	T1 a10; /* has_reference_attributes */
	T1 a11; /* has_generic_expanded_attributes */
	T0* a12; /* alive_conforming_descendants */
	T6 a13; /* hash_code */
	T0* a14; /* next_type */
	T0* a15; /* query_calls */
	T0* a16; /* conforming_ancestors */
	T0* a17; /* conforming_descendants */
	T1 a18; /* has_static */
	T0* a19; /* procedure_calls */
	T0* a20; /* equality_expressions */
	T0* a21; /* object_equality_expressions */
};

/* Struct for type UT_CANNOT_WRITE_TO_FILE_ERROR */
struct S413 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_DYNAMIC_FEATURE_LIST */
struct S414 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DYNAMIC_PRECURSOR */
struct S416 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* is_static_generated */
	T0* a2; /* target_type */
	T0* a3; /* static_feature */
	T0* a4; /* dynamic_type_sets */
	T0* a5; /* current_feature */
	T6 a6; /* id */
	T0* a7; /* result_type_set */
	T1 a8; /* is_regular */
	T1 a9; /* is_creation */
	T1 a10; /* is_address */
	T8 a11; /* builtin_class_code */
	T1 a12; /* is_generated */
	T8 a13; /* builtin_feature_code */
	T0* a14; /* first_precursor */
	T0* a15; /* other_precursors */
	T1 a16; /* is_built */
	T0* a17; /* parent_type */
	T1 a18; /* is_current_type_needed */
};

/* Struct for type ET_DYNAMIC_PRECURSOR_LIST */
struct S418 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE] */
struct S419 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* items */
	T0* a5; /* counts */
	T0* a6; /* successors */
};

/* Struct for type ET_RESULT */
struct S422 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
struct S424 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_call */
	T0* a2; /* target_type_set */
	T0* a3; /* result_type_set */
	T0* a4; /* current_feature */
	T0* a5; /* current_type */
	T0* a6; /* next */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
struct S429 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* next */
	T0* a3; /* static_call */
	T0* a4; /* current_feature */
	T0* a5; /* current_type */
};

/* Struct for type ET_OBJECT_TEST */
struct S431 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* attached_keyword */
	T0* a3; /* declared_type */
	T0* a4; /* expression */
};

/* Struct for type ET_OBJECT_EQUALITY_EXPRESSION */
struct S432 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type ET_EQUALITY_EXPRESSION */
struct S433 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type ET_DYNAMIC_SPECIAL_TYPE */
struct S434 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T0* a8; /* procedures */
	T0* a9; /* item_type_set */
	T1 a10; /* has_reference_attributes */
	T1 a11; /* has_generic_expanded_attributes */
	T0* a12; /* alive_conforming_descendants */
	T6 a13; /* hash_code */
	T0* a14; /* next_type */
	T0* a15; /* query_calls */
	T0* a16; /* conforming_ancestors */
	T0* a17; /* conforming_descendants */
	T1 a18; /* has_static */
	T0* a19; /* procedure_calls */
	T0* a20; /* equality_expressions */
	T0* a21; /* object_equality_expressions */
};

/* Struct for type [attached] DS_QUICK_SORTER [[attached] ET_DYNAMIC_TYPE] */
struct S438 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_DYNAMIC_TYPE_COMPARATOR_BY_ID */
struct S439 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATE_EXPRESSION */
struct S444 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* creation_call */
	T0* a3; /* creation_type */
	T0* a4; /* create_keyword */
	T0* a5; /* creation_region */
};

/* Struct for type ET_QUALIFIED_CALL */
struct S445 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T0* a2; /* qualified_name */
};

/* Struct for type [attached] ARRAY [[attached] STRING_8] */
struct S449 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type KL_DIRECTORY */
struct S451 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_input */
	T0* a2; /* last_entry */
	T6 a3; /* mode */
	T0* a4; /* name */
	T0* a5; /* entry_buffer */
	T1 a6; /* old_end_of_input */
	T14 a7; /* directory_pointer */
	T14 a8; /* last_entry_pointer */
	T0* a9; /* lastentry */
	T0* a10; /* internal_name */
	T0* a11; /* internal_detachable_name_pointer */
};

/* Struct for type UT_TEMPLATE_EXPANDER */
struct S452 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_EXTENDED_ATTRIBUTE */
struct S454 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* implementation_class */
	T0* a3; /* assigner */
	T0* a4; /* obsolete_message */
	T0* a5; /* preconditions */
	T0* a6; /* locals */
	T0* a7; /* compound */
	T0* a8; /* postconditions */
	T0* a9; /* rescue_clause */
	T0* a10; /* clients */
	T0* a11; /* end_keyword */
	T0* a12; /* semicolon */
	T0* a13; /* feature_clause */
	T0* a14; /* first_indexing */
	T0* a15; /* object_tests */
	T0* a16; /* across_components */
	T0* a17; /* extended_name */
	T6 a18; /* hash_code */
	T0* a19; /* implementation_feature */
	T0* a20; /* frozen_keyword */
	T0* a21; /* synonym */
	T1 a22; /* validity_checked */
	T1 a23; /* has_validity_error */
	T0* a24; /* first_precursor */
	T0* a25; /* other_precursors */
	T6 a26; /* first_seed */
	T0* a27; /* other_seeds */
	T6 a28; /* id */
	T6 a29; /* version */
};

/* Struct for type ET_COMPOUND */
struct S456 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type [attached] DS_QUICK_SORTER [[attached] INTEGER_32] */
struct S464 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_IMPLICIT_TYPE_MARK */
struct S472 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* is_expanded_mark */
	T1 a2; /* is_reference_mark */
	T1 a3; /* is_attached_mark */
	T1 a4; /* is_separate_mark */
	T1 a5; /* is_detachable_mark */
};

/* Struct for type ET_SYMBOL */
struct S474 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE] */
struct S475 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S476 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S477 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S478 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S479 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type UT_INTEGER_FORMATTER */
struct S480 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type STD_FILES */
struct S485 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_output */
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S487 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
struct S490 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S491 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T1 z4;
};

/* Struct for type ET_CONSTANT_ATTRIBUTE */
struct S492 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* constant */
	T0* a3; /* implementation_class */
	T0* a4; /* assigner */
	T0* a5; /* clients */
	T0* a6; /* is_keyword */
	T0* a7; /* semicolon */
	T0* a8; /* feature_clause */
	T0* a9; /* first_indexing */
	T0* a10; /* object_tests */
	T0* a11; /* across_components */
	T0* a12; /* extended_name */
	T6 a13; /* hash_code */
	T0* a14; /* implementation_feature */
	T0* a15; /* frozen_keyword */
	T0* a16; /* synonym */
	T1 a17; /* validity_checked */
	T1 a18; /* has_validity_error */
	T0* a19; /* first_precursor */
	T0* a20; /* other_precursors */
	T6 a21; /* first_seed */
	T0* a22; /* other_seeds */
	T6 a23; /* id */
	T6 a24; /* version */
};

/* Struct for type ET_UNIQUE_ATTRIBUTE */
struct S494 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* implementation_class */
	T0* a3; /* assigner */
	T0* a4; /* clients */
	T0* a5; /* is_keyword */
	T0* a6; /* unique_keyword */
	T0* a7; /* semicolon */
	T0* a8; /* feature_clause */
	T0* a9; /* first_indexing */
	T0* a10; /* object_tests */
	T0* a11; /* across_components */
	T0* a12; /* constant */
	T0* a13; /* extended_name */
	T6 a14; /* hash_code */
	T0* a15; /* implementation_feature */
	T0* a16; /* frozen_keyword */
	T0* a17; /* synonym */
	T6 a18; /* id */
	T1 a19; /* validity_checked */
	T1 a20; /* has_validity_error */
	T0* a21; /* first_precursor */
	T0* a22; /* other_precursors */
	T6 a23; /* first_seed */
	T0* a24; /* other_seeds */
	T6 a25; /* version */
};

/* Struct for type ET_REGULAR_INTEGER_CONSTANT */
struct S495 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* literal */
	T0* a4; /* cast_type */
	T6 a5; /* compressed_position */
	T1 a6; /* has_overflow */
	T11 a7; /* value */
	T0* a8; /* type */
};

/* Struct for type ET_ATTRIBUTE */
struct S496 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* implementation_class */
	T0* a3; /* assigner */
	T0* a4; /* clients */
	T0* a5; /* semicolon */
	T0* a6; /* feature_clause */
	T0* a7; /* first_indexing */
	T0* a8; /* object_tests */
	T0* a9; /* across_components */
	T0* a10; /* extended_name */
	T6 a11; /* hash_code */
	T0* a12; /* implementation_feature */
	T0* a13; /* frozen_keyword */
	T0* a14; /* synonym */
	T1 a15; /* validity_checked */
	T1 a16; /* has_validity_error */
	T0* a17; /* first_precursor */
	T0* a18; /* other_precursors */
	T6 a19; /* first_seed */
	T0* a20; /* other_seeds */
	T6 a21; /* id */
	T6 a22; /* version */
};

/* Struct for type ET_LIKE_CURRENT */
struct S498 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* like_keyword */
	T0* a3; /* current_keyword */
};

/* Struct for type NATIVE_STRING */
struct S500 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* managed_data */
	T6 a2; /* unit_count */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_SYSTEM_PROCESSOR] */
struct S501 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type WORKER_THREAD */
struct S502 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* thread_procedure */
	T0* a2; /* launch_mutex */
	T14 a3; /* thread_id */
	T1 a4; /* terminated */
};

/* Struct for type [attached] TUPLE [ET_SYSTEM_PROCESSOR, [attached] DS_ARRAYED_LIST [[attached] ET_CLASS]] */
struct S503 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type ET_FEATURE_CHECKER */
struct S505 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* system_processor */
	T0* a2; /* type_checker */
	T0* a3; /* current_type */
	T0* a4; /* current_class */
	T0* a5; /* current_feature */
	T0* a6; /* current_feature_impl */
	T0* a7; /* current_class_impl */
	T0* a8; /* enclosing_inline_agents */
	T0* a9; /* unused_overloaded_procedures_list */
	T0* a10; /* unused_overloaded_queries_list */
	T0* a11; /* unused_overloaded_features_list */
	T0* a12; /* unused_contexts */
	T0* a13; /* current_context */
	T0* a14; /* current_target_type */
	T0* a15; /* current_object_test_types */
	T0* a16; /* current_object_test_scope */
	T0* a17; /* object_test_scope_builder */
	T0* a18; /* current_across_cursor_types */
	T0* a19; /* current_across_cursor_scope */
	T0* a20; /* current_initialization_scope */
	T0* a21; /* current_attachment_scope */
	T0* a22; /* attachment_scope_builder */
	T0* a23; /* unused_attachment_scopes */
	T0* a24; /* common_ancestor_type_list */
	T0* a25; /* indexing_term_list */
	T0* a26; /* default_creation_call_name */
	T0* a27; /* default_creation_call */
	T1 a28; /* has_fatal_error */
	T1 a29; /* in_static_feature */
	T1 a30; /* in_precondition */
	T0* a31; /* supplier_handler */
	T1 a32; /* in_invariant */
	T0* a33; /* precursor_queries */
	T0* a34; /* precursor_procedures */
	T1 a35; /* in_postcondition */
	T1 a36; /* in_precursor */
	T1 a37; /* in_rescue */
	T0* a38; /* current_inline_agent */
	T1 a39; /* in_check_instruction */
};

/* Struct for type [attached] DS_CELL [[attached] INTEGER_32] */
struct S506 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE] */
struct S507 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* count */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* modulus */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* key_equality_tester */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T6 a12; /* found_position */
	T0* a13; /* item_storage */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_TYPE_CHECKER */
struct S510 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_context */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_feature_impl */
	T0* a4; /* constraint_context */
	T0* a5; /* current_class */
	T0* a6; /* system_processor */
	T0* a7; /* supplier_handler */
	T1 a8; /* has_fatal_error */
	T1 a9; /* class_interface_error_only */
	T1 a10; /* in_qualified_anchored_type */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT] */
struct S512 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
struct S513 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
struct S514 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
struct S515 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT] */
struct S516 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_NESTED_TYPE_CONTEXT */
struct S517 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* root_context */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST] */
struct S518 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T6 a9; /* found_position */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type ET_OBJECT_TEST_SCOPE */
struct S519 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* object_tests */
	T6 a2; /* hidden_count */
};

/* Struct for type ET_OBJECT_TEST_SCOPE_BUILDER */
struct S520 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* scope */
	T1 a5; /* is_negated */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT] */
struct S521 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T6 a9; /* found_position */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ACROSS_CURSOR_SCOPE */
struct S522 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hidden_count */
	T0* a2; /* across_components */
};

/* Struct for type ET_ATTACHMENT_SCOPE */
struct S523 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* locals_attached */
	T0* a2; /* arguments_attached */
	T0* a3; /* attributes_attached */
	T1 a4; /* result_attached */
	T1 a5; /* is_code_unreachable */
};

/* Struct for type ET_ATTACHMENT_SCOPE_BUILDER */
struct S524 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* scope */
	T1 a2; /* is_negated */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE] */
struct S525 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM] */
struct S526 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
struct S527 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T6 a5; /* position */
	T6 a6; /* last_position */
	T6 a7; /* modulus */
	T6 a8; /* slots_position */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* key_equality_tester */
	T0* a11; /* equality_tester */
	T6 a12; /* capacity */
	T6 a13; /* free_slot */
	T0* a14; /* special_item_routines */
	T0* a15; /* special_key_routines */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T6 a18; /* count */
	T0* a19; /* hash_function */
};

/* Struct for type ET_PRECONDITIONS */
struct S529 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* require_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* else_keyword */
	T1 a5; /* validity_checked */
	T1 a6; /* has_validity_error */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE] */
struct S530 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* hash_function */
};

/* Struct for type ET_FEATURE_LIST */
struct S533 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
};

/* Struct for type ET_UNKNOWN_GROUP */
struct S536 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T1 a2; /* use_obsolete_syntax */
	T0* a3; /* cached_absolute_pathname */
};

/* Struct for type ET_BASE_TYPE_LIST */
struct S538 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_KEYWORD */
struct S539 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T0* a2; /* text */
	T6 a3; /* compressed_position */
};

/* Struct for type ET_CLASS_CODES */
struct S540 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type PATH */
struct S542 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_name */
	T0* a2; /* storage */
	T1 a3; /* is_normalized */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8] */
struct S543 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* hash_function */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T6 a19; /* free_slot */
	T0* a20; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] STRING_8] */
struct S544 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ARGUMENTS_32 */
struct S547 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SYSTEM_ERROR */
struct S548 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_INTERNAL_ERROR */
struct S549 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_XACE_EXTERNALS */
struct S551 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* c_compiler_options */
	T0* a2; /* include_directories */
	T0* a3; /* link_libraries */
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] STRING_8] */
struct S552 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* before */
};

/* Struct for type ET_XACE_OPTIONS */
struct S553 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_options */
	T0* a2; /* secondary_options */
	T0* a3; /* primary_multivalue_options */
};

/* Struct for type ET_XACE_TARGET */
struct S554 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* options */
	T0* a2; /* name */
	T0* a3; /* root_class_name */
	T0* a4; /* creation_procedure_name */
	T0* a5; /* clusters */
	T0* a6; /* libraries */
};

/* Struct for type ET_XACE_TARGETS */
struct S557 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* targets */
};

/* Struct for type ET_XACE_CLUSTERS */
struct S559 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARIES */
struct S560 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* libraries */
	T6 a2; /* root_count */
};

/* Struct for type ET_XACE_CLUSTER */
struct S564 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_abstract */
	T0* a4; /* options */
	T0* a5; /* subclusters */
	T0* a6; /* libraries */
	T1 a7; /* is_relative */
	T0* a8; /* universe */
	T0* a9; /* library_prefix */
	T0* a10; /* cluster_prefix */
	T0* a11; /* class_options */
	T1 a12; /* is_recursive */
	T1 a13; /* is_read_only */
	T1 a14; /* overridden_constraint_enabled */
	T1 a15; /* scm_mapping_constraint_enabled */
	T0* a16; /* scm_read_mapping */
	T0* a17; /* scm_write_mapping */
	T1 a18; /* is_implicit */
	T1 a19; /* use_obsolete_syntax */
	T1 a20; /* is_override */
	T0* a21; /* parent */
	T1 a22; /* is_preparsed */
	T0* a23; /* provider_constraint */
	T0* a24; /* dependant_constraint */
	T1 a25; /* is_mounted */
	T0* a26; /* cached_absolute_pathname */
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE] */
struct S569 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARY */
struct S571 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* library_prefix */
	T0* a3; /* library */
	T0* a4; /* position */
};

/* Struct for type ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
struct S575 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
struct S576 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_ECF_OPTIONS */
struct S581 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_assertions */
	T0* a2; /* primary_debugs */
	T0* a3; /* primary_warnings */
	T0* a4; /* primary_options */
	T0* a5; /* description */
	T0* a6; /* secondary_options */
};

/* Struct for type XM_NAMESPACE */
struct S583 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* uri */
	T0* a2; /* ns_prefix */
};

/* Struct for type [attached] KL_ARRAY_ROUTINES [[attached] INTEGER_32] */
struct S584 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_DYNAMIC_PROCEDURE_TYPE */
struct S586 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T6 a8; /* hash_code */
	T0* a9; /* procedures */
	T0* a10; /* set_rout_disp_final_feature */
	T0* a11; /* open_operand_type_sets */
	T0* a12; /* alive_conforming_descendants */
	T0* a13; /* next_type */
	T0* a14; /* query_calls */
	T1 a15; /* has_reference_attributes */
	T1 a16; /* has_generic_expanded_attributes */
	T0* a17; /* conforming_ancestors */
	T0* a18; /* conforming_descendants */
	T1 a19; /* has_static */
	T0* a20; /* procedure_calls */
	T0* a21; /* equality_expressions */
	T0* a22; /* object_equality_expressions */
};

/* Struct for type ET_DYNAMIC_FUNCTION_TYPE */
struct S587 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T6 a8; /* hash_code */
	T0* a9; /* procedures */
	T0* a10; /* set_rout_disp_final_feature */
	T0* a11; /* result_type_set */
	T0* a12; /* open_operand_type_sets */
	T0* a13; /* alive_conforming_descendants */
	T0* a14; /* next_type */
	T0* a15; /* query_calls */
	T1 a16; /* has_reference_attributes */
	T1 a17; /* has_generic_expanded_attributes */
	T0* a18; /* conforming_ancestors */
	T0* a19; /* conforming_descendants */
	T1 a20; /* has_static */
	T0* a21; /* procedure_calls */
	T0* a22; /* equality_expressions */
	T0* a23; /* object_equality_expressions */
};

/* Struct for type UT_CONFIG_PARSER */
struct S588 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* config_values */
	T0* a3; /* error_handler */
	T0* a4; /* defined_values */
	T0* a5; /* include_stack */
	T0* a6; /* line_nb_stack */
	T0* a7; /* last_string_value */
	T6 a8; /* line_nb */
	T0* a9; /* yyss */
	T0* a10; /* input_buffer */
	T6 a11; /* yy_end */
	T6 a12; /* yy_position */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_parsing_status */
	T6 a16; /* yy_suspended_yystacksize */
	T6 a17; /* yy_suspended_yystate */
	T6 a18; /* yy_suspended_yyn */
	T6 a19; /* yy_suspended_yychar1 */
	T6 a20; /* yy_suspended_index */
	T6 a21; /* yy_suspended_yyss_top */
	T6 a22; /* yy_suspended_yy_goto */
	T0* a23; /* yyr1 */
	T6 a24; /* yyssp */
	T0* a25; /* yypgoto */
	T0* a26; /* yycheck */
	T0* a27; /* yytable */
	T0* a28; /* yydefgoto */
	T6 a29; /* error_count */
	T1 a30; /* yy_lookahead_needed */
	T6 a31; /* yyerrstatus */
	T0* a32; /* yypact */
	T6 a33; /* last_token */
	T0* a34; /* yytranslate */
	T0* a35; /* yydefact */
	T0* a36; /* yy_pushed_start_conditions */
	T0* a37; /* yyspecial_routines1 */
	T6 a38; /* yyvsc1 */
	T0* a39; /* yyvs1 */
	T0* a40; /* yyspecial_routines2 */
	T6 a41; /* yyvsc2 */
	T0* a42; /* yyvs2 */
	T0* a43; /* yyspecial_routines3 */
	T6 a44; /* yyvsc3 */
	T0* a45; /* yyvs3 */
	T0* a46; /* yytypes1 */
	T0* a47; /* yytypes2 */
	T6 a48; /* yy_start */
	T6 a49; /* yyvsp1 */
	T6 a50; /* yyvsp2 */
	T6 a51; /* yyvsp3 */
	T1 a52; /* yy_more_flag */
	T6 a53; /* yy_more_len */
	T6 a54; /* line */
	T6 a55; /* column */
	T6 a56; /* position */
	T6 a57; /* yy_start_state */
	T0* a58; /* yy_state_stack */
	T6 a59; /* yy_state_count */
	T0* a60; /* yy_content_area */
	T0* a61; /* yy_ec */
	T0* a62; /* yy_content */
	T0* a63; /* yy_accept */
	T6 a64; /* yy_last_accepting_state */
	T6 a65; /* yy_last_accepting_cpos */
	T0* a66; /* yy_chk */
	T0* a67; /* yy_base */
	T0* a68; /* yy_def */
	T0* a69; /* yy_meta */
	T0* a70; /* yy_nxt */
	T6 a71; /* yy_lp */
	T0* a72; /* yy_acclist */
	T6 a73; /* yy_looking_for_trail_begin */
	T6 a74; /* yy_full_match */
	T6 a75; /* yy_full_state */
	T6 a76; /* yy_full_lp */
	T1 a77; /* yy_rejected */
	T0* a78; /* last_detachable_any_value */
	T6 a79; /* if_level */
	T6 a80; /* ignored_level */
};

/* Struct for type [attached] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32] */
struct S589 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_DO_PROCEDURE */
struct S592 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_class */
	T6 a2; /* first_seed */
	T0* a3; /* arguments */
	T0* a4; /* implementation_feature */
	T0* a5; /* extended_name */
	T6 a6; /* hash_code */
	T0* a7; /* end_keyword */
	T0* a8; /* clients */
	T0* a9; /* compound */
	T1 a10; /* validity_checked */
	T1 a11; /* has_validity_error */
	T0* a12; /* preconditions */
	T0* a13; /* first_precursor */
	T0* a14; /* other_precursors */
	T0* a15; /* other_seeds */
	T0* a16; /* obsolete_message */
	T0* a17; /* locals */
	T0* a18; /* postconditions */
	T0* a19; /* rescue_clause */
	T0* a20; /* is_keyword */
	T0* a21; /* semicolon */
	T0* a22; /* feature_clause */
	T0* a23; /* first_indexing */
	T0* a24; /* object_tests */
	T0* a25; /* across_components */
	T0* a26; /* frozen_keyword */
	T0* a27; /* synonym */
	T6 a28; /* id */
	T6 a29; /* version */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET */
struct S595 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T1 a2; /* is_never_void */
	T6 a3; /* count */
	T0* a4; /* targets */
	T0* a5; /* dynamic_types */
	T1 a6; /* is_dynamic_types_readonly */
};

/* Struct for type ET_DEFERRED_PROCEDURE */
struct S596 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T6 a3; /* first_seed */
	T0* a4; /* arguments */
	T0* a5; /* extended_name */
	T0* a6; /* deferred_keyword */
	T6 a7; /* hash_code */
	T0* a8; /* end_keyword */
	T0* a9; /* clients */
	T1 a10; /* validity_checked */
	T1 a11; /* has_validity_error */
	T0* a12; /* preconditions */
	T0* a13; /* first_precursor */
	T0* a14; /* other_precursors */
	T0* a15; /* other_seeds */
	T0* a16; /* obsolete_message */
	T0* a17; /* postconditions */
	T0* a18; /* is_keyword */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* first_indexing */
	T0* a22; /* object_tests */
	T0* a23; /* across_components */
	T0* a24; /* frozen_keyword */
	T0* a25; /* synonym */
	T6 a26; /* id */
	T6 a27; /* version */
};

/* Struct for type [attached] CELL [[attached] INTEGER_32] */
struct S599 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
};

/* Struct for type [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32] */
struct S601 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T0* a3; /* keys */
	T0* a4; /* deleted_marks */
	T0* a5; /* indexes_map */
	T6 a6; /* iteration_position */
	T6 a7; /* count */
	T6 a8; /* deleted_item_position */
	T6 a9; /* control */
	T0* a10; /* found_item */
	T1 a11; /* has_default */
	T6 a12; /* item_position */
	T6 a13; /* ht_lowest_deleted_position */
	T0* a14; /* ht_deleted_item */
	T0* a15; /* ht_deleted_key */
	T1 a16; /* object_comparison */
};

/* Struct for type KL_PATHNAME */
struct S603 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* drive */
	T0* a3; /* hostname */
	T0* a4; /* sharename */
	T1 a5; /* is_relative */
	T0* a6; /* components */
};

/* Struct for type EXCEPTIONS */
struct S604 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type READABLE_STRING_32 */
struct S605 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] NATURAL_8] */
struct S606 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T8 z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION] */
struct S608 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] AP_OPTION] */
struct S611 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] AP_OPTION] */
struct S612 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
struct S614 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
struct S615 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
struct S616 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8] */
struct S618 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [detachable STRING_8] */
struct S620 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable STRING_8] */
struct S621 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type attached DS_LINKABLE [[attached] STRING_8] */
struct S623 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type attached DS_LINKABLE [[attached] BOOLEAN] */
struct S626 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] BOOLEAN] */
struct S627 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type attached DS_LINKABLE [[attached] INTEGER_32] */
struct S629 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] INTEGER_32] */
struct S630 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type XM_NAMESPACE_RESOLVER */
struct S632 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* element_local_part */
	T0* a3; /* element_prefix */
	T0* a4; /* context */
	T1 a5; /* forward_xmlns */
	T0* a6; /* attributes_prefix */
	T0* a7; /* attributes_local_part */
	T0* a8; /* attributes_value */
};

/* Struct for type [attached] ARRAY [[attached] XM_CALLBACKS_FILTER] */
struct S633 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] SPECIAL [[attached] XM_CALLBACKS_FILTER] */
struct S634 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type XM_CALLBACKS_NULL */
struct S635 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_POSITION_TABLE */
struct S637 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
};

/* Struct for type [attached] DS_HASH_SET [[attached] XM_NAMESPACE] */
struct S638 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* special_item_routines */
	T0* a8; /* item_storage */
	T0* a9; /* clashes */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a14; /* count */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type UT_COUNTER */
struct S642 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
};

/* Struct for type [attached] KL_AGENT_ROUTINES [[attached] ET_CLASS] */
struct S643 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [UT_COUNTER] */
struct S644 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ET_CLASS], [attached] PROCEDURE [[attached] TUPLE]] */
struct S645 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY] */
struct S647 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T0* a13; /* internal_cursor */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type ET_DOTNET_ASSEMBLIES */
struct S648 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_DOTNET_ASSEMBLY */
struct S649 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* referenced_assemblies */
	T0* a3; /* current_system */
	T0* a4; /* dotnet_assembly */
	T0* a5; /* name */
	T0* a6; /* master_classes */
	T0* a7; /* master_class_mutex */
	T0* a8; /* any_type */
	T0* a9; /* detachable_any_type */
	T0* a10; /* detachable_separate_any_type */
	T0* a11; /* separate_any_type */
	T0* a12; /* any_parent */
	T0* a13; /* any_parents */
	T0* a14; /* any_clients */
	T0* a15; /* tuple_type */
	T0* a16; /* detachable_tuple_type */
	T0* a17; /* tuple_like_current_type */
	T0* a18; /* unfolded_empty_tuple_actual_parameters */
	T0* a19; /* array_any_type */
	T0* a20; /* array_detachable_any_type */
	T0* a21; /* array_none_type */
	T0* a22; /* array_like_current_type */
	T0* a23; /* boolean_type */
	T0* a24; /* character_type */
	T0* a25; /* character_8_type */
	T0* a26; /* character_8_convert_feature */
	T0* a27; /* character_32_type */
	T0* a28; /* character_32_convert_feature */
	T0* a29; /* double_type */
	T0* a30; /* exception_type */
	T0* a31; /* detachable_exception_type */
	T0* a32; /* exception_manager_type */
	T0* a33; /* function_type */
	T0* a34; /* immutable_string_32_type */
	T0* a35; /* integer_type */
	T0* a36; /* integer_8_type */
	T0* a37; /* integer_8_convert_feature */
	T0* a38; /* integer_16_type */
	T0* a39; /* integer_16_convert_feature */
	T0* a40; /* integer_32_type */
	T0* a41; /* integer_32_convert_feature */
	T0* a42; /* integer_64_type */
	T0* a43; /* integer_64_convert_feature */
	T0* a44; /* ise_exception_manager_type */
	T0* a45; /* iterable_detachable_any_type */
	T0* a46; /* natural_type */
	T0* a47; /* natural_8_type */
	T0* a48; /* natural_8_convert_feature */
	T0* a49; /* natural_16_type */
	T0* a50; /* natural_16_convert_feature */
	T0* a51; /* natural_32_type */
	T0* a52; /* natural_32_convert_feature */
	T0* a53; /* natural_64_type */
	T0* a54; /* natural_64_convert_feature */
	T0* a55; /* none_type */
	T0* a56; /* detachable_none_type */
	T0* a57; /* pointer_type */
	T0* a58; /* predicate_like_current_type */
	T0* a59; /* procedure_like_current_type */
	T0* a60; /* real_type */
	T0* a61; /* real_32_type */
	T0* a62; /* real_32_convert_feature */
	T0* a63; /* real_64_type */
	T0* a64; /* real_64_convert_feature */
	T0* a65; /* routine_type */
	T0* a66; /* special_any_type */
	T0* a67; /* special_detachable_any_type */
	T0* a68; /* string_type */
	T0* a69; /* detachable_string_type */
	T0* a70; /* string_8_type */
	T0* a71; /* string_8_convert_feature */
	T0* a72; /* string_32_type */
	T0* a73; /* string_32_convert_feature */
	T0* a74; /* system_object_type */
	T0* a75; /* system_object_parents */
	T0* a76; /* system_string_type */
	T0* a77; /* type_any_type */
	T0* a78; /* type_type_any_type */
	T0* a79; /* type_detachable_any_type */
	T0* a80; /* type_detachable_like_current_type */
	T0* a81; /* detachable_type_exception_type */
	T0* a82; /* type_detachable_exception_type */
	T0* a83; /* detachable_type_detachable_any_type */
	T0* a84; /* type_like_current_type */
	T0* a85; /* typed_pointer_any_type */
	T0* a86; /* typed_pointer_like_current_type */
	T0* a87; /* wide_character_type */
	T1 a88; /* is_read_only */
	T1 a89; /* is_preparsed */
};

/* Struct for type [attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY] */
struct S650 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]] */
struct S651 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]] */
struct S652 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY]] */
struct S653 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] ET_INTERNAL_UNIVERSE] */
struct S654 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_INTERNAL_UNIVERSE]] */
struct S655 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]]] */
struct S656 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [ET_DOTNET_ASSEMBLIES] */
struct S657 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_SYSTEM_PROCESSOR] */
struct S658 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_LIBRARY */
struct S659 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_system */
	T0* a2; /* library */
	T0* a3; /* name */
	T0* a4; /* libraries */
	T0* a5; /* clusters */
	T0* a6; /* dotnet_assemblies */
	T0* a7; /* master_classes */
	T0* a8; /* master_class_mutex */
	T0* a9; /* any_type */
	T0* a10; /* detachable_any_type */
	T0* a11; /* detachable_separate_any_type */
	T0* a12; /* separate_any_type */
	T0* a13; /* any_parent */
	T0* a14; /* any_parents */
	T0* a15; /* any_clients */
	T0* a16; /* tuple_type */
	T0* a17; /* detachable_tuple_type */
	T0* a18; /* tuple_like_current_type */
	T0* a19; /* unfolded_empty_tuple_actual_parameters */
	T0* a20; /* array_any_type */
	T0* a21; /* array_detachable_any_type */
	T0* a22; /* array_none_type */
	T0* a23; /* array_like_current_type */
	T0* a24; /* boolean_type */
	T0* a25; /* character_type */
	T0* a26; /* character_8_type */
	T0* a27; /* character_8_convert_feature */
	T0* a28; /* character_32_type */
	T0* a29; /* character_32_convert_feature */
	T0* a30; /* double_type */
	T0* a31; /* exception_type */
	T0* a32; /* detachable_exception_type */
	T0* a33; /* exception_manager_type */
	T0* a34; /* function_type */
	T0* a35; /* immutable_string_32_type */
	T0* a36; /* integer_type */
	T0* a37; /* integer_8_type */
	T0* a38; /* integer_8_convert_feature */
	T0* a39; /* integer_16_type */
	T0* a40; /* integer_16_convert_feature */
	T0* a41; /* integer_32_type */
	T0* a42; /* integer_32_convert_feature */
	T0* a43; /* integer_64_type */
	T0* a44; /* integer_64_convert_feature */
	T0* a45; /* ise_exception_manager_type */
	T0* a46; /* iterable_detachable_any_type */
	T0* a47; /* natural_type */
	T0* a48; /* natural_8_type */
	T0* a49; /* natural_8_convert_feature */
	T0* a50; /* natural_16_type */
	T0* a51; /* natural_16_convert_feature */
	T0* a52; /* natural_32_type */
	T0* a53; /* natural_32_convert_feature */
	T0* a54; /* natural_64_type */
	T0* a55; /* natural_64_convert_feature */
	T0* a56; /* none_type */
	T0* a57; /* detachable_none_type */
	T0* a58; /* pointer_type */
	T0* a59; /* predicate_like_current_type */
	T0* a60; /* procedure_like_current_type */
	T0* a61; /* real_type */
	T0* a62; /* real_32_type */
	T0* a63; /* real_32_convert_feature */
	T0* a64; /* real_64_type */
	T0* a65; /* real_64_convert_feature */
	T0* a66; /* routine_type */
	T0* a67; /* special_any_type */
	T0* a68; /* special_detachable_any_type */
	T0* a69; /* string_type */
	T0* a70; /* detachable_string_type */
	T0* a71; /* string_8_type */
	T0* a72; /* string_8_convert_feature */
	T0* a73; /* string_32_type */
	T0* a74; /* string_32_convert_feature */
	T0* a75; /* system_object_type */
	T0* a76; /* system_object_parents */
	T0* a77; /* system_string_type */
	T0* a78; /* type_any_type */
	T0* a79; /* type_type_any_type */
	T0* a80; /* type_detachable_any_type */
	T0* a81; /* type_detachable_like_current_type */
	T0* a82; /* detachable_type_exception_type */
	T0* a83; /* type_detachable_exception_type */
	T0* a84; /* detachable_type_detachable_any_type */
	T0* a85; /* type_like_current_type */
	T0* a86; /* typed_pointer_any_type */
	T0* a87; /* typed_pointer_like_current_type */
	T0* a88; /* wide_character_type */
	T1 a89; /* is_read_only */
	T1 a90; /* is_preparsed */
};

/* Struct for type [attached] TUPLE [[attached] ET_LIBRARY] */
struct S660 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_LIBRARY]] */
struct S661 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] ET_UNIVERSE] */
struct S662 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_UNIVERSE]] */
struct S663 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]]] */
struct S664 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], detachable FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
struct S665 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY] */
struct S667 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_XACE_LIBRARY_CONFIG */
struct S668 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* targets */
	T0* a2; /* library_prefix */
	T0* a3; /* name */
	T0* a4; /* selected_target */
	T0* a5; /* options */
	T0* a6; /* clusters */
	T0* a7; /* libraries */
};

/* Struct for type [attached] TUPLE [[attached] ET_XACE_CLUSTER] */
struct S669 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_XACE_CLUSTER]] */
struct S670 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_XACE_CLUSTERS] */
struct S671 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_MASTER_CLASS */
struct S672 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* mapped_class */
	T0* a3; /* first_overriding_class */
	T0* a4; /* intrinsic_class */
	T0* a5; /* universe */
	T0* a6; /* other_local_override_classes */
	T0* a7; /* other_local_non_override_classes */
	T0* a8; /* other_local_ignored_classes */
	T0* a9; /* other_local_hidden_classes */
	T0* a10; /* other_imported_classes */
	T0* a11; /* other_overriding_classes */
	T0* a12; /* status_mutex */
	T0* a13; /* processing_mutex */
	T1 a14; /* unprotected_is_marked */
	T1 a15; /* is_modified */
	T0* a16; /* first_imported_class */
	T0* a17; /* first_local_ignored_class */
	T0* a18; /* first_local_override_class */
	T0* a19; /* first_local_non_override_class */
	T0* a20; /* first_local_hidden_class */
};

/* Struct for type [attached] TUPLE [[attached] ET_CLUSTER] */
struct S674 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]] */
struct S675 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_XACE_SYSTEM] */
struct S676 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE] */
struct S677 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type [attached] TUPLE [ET_AST_PROCESSOR] */
struct S678 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] ET_MASTER_CLASS] */
struct S679 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]] */
struct S680 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S681 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY]] */
struct S682 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type ET_ANCESTORS_STATUS_CHECKER */
struct S683 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_FLATTENING_STATUS_CHECKER */
struct S684 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_INTERFACE_STATUS_CHECKER */
struct S685 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* qualified_anchored_type_checker */
	T0* a2; /* class_type_checker */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_IMPLEMENTATION_STATUS_CHECKER */
struct S686 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]] */
struct S687 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
struct S689 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_FLATTENING_STATUS_CHECKER] */
struct S690 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_INTERFACE_STATUS_CHECKER] */
struct S691 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
struct S692 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [BOOLEAN] */
struct S693 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 z1;
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_UNIVERSE] */
struct S694 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type ET_CLASS_NAME_TESTER */
struct S696 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENT */
struct S698 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* renames */
	T0* a3; /* exports */
	T0* a4; /* undefines */
	T0* a5; /* redefines */
	T0* a6; /* selects */
	T0* a7; /* end_keyword */
};

/* Struct for type ET_PARENT_LIST */
struct S699 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* clients_clause */
	T0* a3; /* storage */
	T0* a4; /* inherit_keyword */
};

/* Struct for type ET_CLIENT_LIST */
struct S700 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_BUILTIN_CONVERT_FEATURE */
struct S701 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* type */
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]]] */
struct S706 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE]] */
struct S712 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]]] */
struct S713 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_CLASS], [attached] BOOLEAN]] */
struct S714 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_UNIVERSE]] */
struct S715 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_CLIENT */
struct S716 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* named_base_class */
};

/* Struct for type ET_ATTACHMENT_SEPARATE_KEYWORDS */
struct S717 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* attachment_keyword */
	T0* a2; /* separateness_keyword */
};

/* Struct for type ET_NONE_GROUP */
struct S723 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* universe */
	T0* a2; /* name */
	T1 a3; /* use_obsolete_syntax */
	T0* a4; /* cached_absolute_pathname */
};

/* Struct for type ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
struct S724 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tuple_type */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8] */
struct S729 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_XACE_LIBRARY_CONFIG] */
struct S730 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_LIBRARY_CONFIG] */
struct S731 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_SCANNER */
struct S732 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* yy_more_flag */
	T6 a13; /* yy_more_len */
	T6 a14; /* yy_end */
	T6 a15; /* yy_start */
	T6 a16; /* yy_line */
	T6 a17; /* yy_column */
	T6 a18; /* yy_position */
	T0* a19; /* input_buffer */
	T0* a20; /* yy_state_stack */
	T6 a21; /* yy_state_count */
	T0* a22; /* yy_content_area */
	T0* a23; /* yy_ec */
	T0* a24; /* yy_content */
	T0* a25; /* yy_accept */
	T6 a26; /* yy_last_accepting_state */
	T6 a27; /* yy_last_accepting_cpos */
	T0* a28; /* yy_chk */
	T0* a29; /* yy_base */
	T0* a30; /* yy_def */
	T0* a31; /* yy_meta */
	T0* a32; /* yy_nxt */
	T6 a33; /* yy_lp */
	T0* a34; /* yy_acclist */
	T6 a35; /* yy_looking_for_trail_begin */
	T6 a36; /* yy_full_match */
	T6 a37; /* yy_full_state */
	T6 a38; /* yy_full_lp */
	T1 a39; /* yy_rejected */
	T0* a40; /* yy_pushed_start_conditions */
	T0* a41; /* last_string_value */
	T0* a42; /* last_error */
	T6 a43; /* pushed_start_condition_count */
};

/* Struct for type XM_DEFAULT_POSITION */
struct S733 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* row */
	T6 a2; /* column */
	T0* a3; /* source_name */
	T6 a4; /* byte_index */
};

/* Struct for type [attached] DS_BILINKED_LIST [[attached] XM_POSITION] */
struct S736 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* internal_cursor */
};

/* Struct for type [attached] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER] */
struct S737 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* first_cell */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8] */
struct S738 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* capacity */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* modulus */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* found_position */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* equality_tester */
	T0* a20; /* hash_function */
};

/* Struct for type XM_NULL_EXTERNAL_RESOLVER */
struct S740 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_CALLBACKS_NULL */
struct S742 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME] */
struct S743 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_PARSER_NAME */
struct S744 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* use_namespaces */
	T6 a2; /* count */
	T0* a3; /* first */
	T0* a4; /* second */
	T0* a5; /* tail */
};

/* Struct for type [attached] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME] */
struct S745 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]] */
struct S746 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME] */
struct S747 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* equality_tester */
	T6 a3; /* count */
	T6 a4; /* capacity */
	T6 a5; /* free_slot */
	T6 a6; /* last_position */
	T6 a7; /* modulus */
	T6 a8; /* slots_position */
	T6 a9; /* clashes_previous_position */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* internal_cursor */
	T0* a16; /* hash_function */
};

/* Struct for type [attached] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]] */
struct S748 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID] */
struct S749 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_EXTERNAL_ID */
struct S750 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* system_id */
	T0* a2; /* public_id */
};

/* Struct for type [attached] SPECIAL [[attached] XM_DTD_EXTERNAL_ID] */
struct S751 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT] */
struct S752 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_ELEMENT_CONTENT */
struct S753 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* items */
	T2 a2; /* repetition */
	T0* a3; /* name */
	T2 a4; /* type */
	T1 a5; /* is_character_data_allowed */
};

/* Struct for type [attached] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT] */
struct S754 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]] */
struct S755 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
struct S756 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]] */
struct S757 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
struct S758 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_ATTRIBUTE_CONTENT */
struct S759 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* default_value */
	T2 a3; /* type */
	T1 a4; /* is_list_type */
	T0* a5; /* enumeration_list */
	T2 a6; /* value */
};

/* Struct for type [attached] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
struct S760 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]] */
struct S761 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_BILINKED_LIST [[attached] STRING_8] */
struct S762 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* equality_tester */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]] */
struct S763 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] BOOLEAN] */
struct S764 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION] */
struct S765 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_DECLARATION */
struct S766 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* encoding */
	T0* a2; /* version */
	T1 a3; /* stand_alone */
};

/* Struct for type [attached] SPECIAL [[attached] XM_EIFFEL_DECLARATION] */
struct S767 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type XM_EIFFEL_ENTITY_DEF */
struct S772 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* literal_name */
	T0* a2; /* value */
	T0* a3; /* resolver */
	T0* a4; /* external_id */
	T0* a5; /* character_entity */
	T0* a6; /* yy_pushed_start_conditions */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_value */
	T0* a11; /* last_string_value */
	T0* a12; /* last_error */
	T1 a13; /* yy_rejected */
	T6 a14; /* yy_state_count */
	T6 a15; /* yy_full_match */
	T6 a16; /* yy_lp */
	T6 a17; /* yy_looking_for_trail_begin */
	T6 a18; /* yy_full_lp */
	T6 a19; /* yy_full_state */
	T6 a20; /* pushed_start_condition_count */
	T6 a21; /* yy_start_state */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_position */
	T6 a25; /* yy_start */
	T6 a26; /* yy_end */
	T6 a27; /* line */
	T6 a28; /* column */
	T6 a29; /* position */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T0* a34; /* yy_state_stack */
	T0* a35; /* yy_nxt */
	T0* a36; /* yy_chk */
	T0* a37; /* yy_base */
	T0* a38; /* yy_def */
	T0* a39; /* yy_ec */
	T0* a40; /* yy_meta */
	T0* a41; /* yy_accept */
	T0* a42; /* yy_content */
	T0* a43; /* yy_content_area */
	T6 a44; /* last_token */
	T0* a45; /* input_filter */
	T0* a46; /* input_stream */
	T0* a47; /* input_resolver */
	T0* a48; /* yy_acclist */
};

/* Struct for type XM_EIFFEL_SCANNER_DTD */
struct S773 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* decl_start_sent */
	T1 a13; /* decl_end_sent */
	T1 a14; /* yy_more_flag */
	T6 a15; /* yy_more_len */
	T6 a16; /* yy_end */
	T6 a17; /* yy_start */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_position */
	T0* a21; /* input_buffer */
	T0* a22; /* yy_state_stack */
	T6 a23; /* yy_state_count */
	T0* a24; /* yy_content_area */
	T0* a25; /* yy_ec */
	T0* a26; /* yy_content */
	T0* a27; /* yy_accept */
	T6 a28; /* yy_last_accepting_state */
	T6 a29; /* yy_last_accepting_cpos */
	T0* a30; /* yy_chk */
	T0* a31; /* yy_base */
	T0* a32; /* yy_def */
	T0* a33; /* yy_meta */
	T0* a34; /* yy_nxt */
	T6 a35; /* yy_lp */
	T0* a36; /* yy_acclist */
	T6 a37; /* yy_looking_for_trail_begin */
	T6 a38; /* yy_full_match */
	T6 a39; /* yy_full_state */
	T6 a40; /* yy_full_lp */
	T1 a41; /* yy_rejected */
	T0* a42; /* yy_pushed_start_conditions */
	T0* a43; /* last_string_value */
	T0* a44; /* last_error */
	T6 a45; /* pushed_start_condition_count */
};

/* Struct for type XM_EIFFEL_PE_ENTITY_DEF */
struct S775 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* resolver */
	T0* a2; /* external_id */
	T0* a3; /* literal_name */
	T0* a4; /* value */
	T0* a5; /* character_entity */
	T0* a6; /* yy_pushed_start_conditions */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_value */
	T0* a11; /* last_string_value */
	T0* a12; /* last_error */
	T1 a13; /* yy_rejected */
	T6 a14; /* yy_state_count */
	T6 a15; /* yy_full_match */
	T6 a16; /* yy_lp */
	T6 a17; /* yy_looking_for_trail_begin */
	T6 a18; /* yy_full_lp */
	T6 a19; /* yy_full_state */
	T6 a20; /* pushed_start_condition_count */
	T6 a21; /* yy_start_state */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_position */
	T6 a25; /* yy_start */
	T6 a26; /* yy_end */
	T6 a27; /* line */
	T6 a28; /* column */
	T6 a29; /* position */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T0* a34; /* yy_state_stack */
	T1 a35; /* pre_sent */
	T1 a36; /* post_sent */
	T0* a37; /* yy_nxt */
	T0* a38; /* yy_chk */
	T0* a39; /* yy_base */
	T0* a40; /* yy_def */
	T0* a41; /* yy_ec */
	T0* a42; /* yy_meta */
	T0* a43; /* yy_accept */
	T0* a44; /* yy_content */
	T0* a45; /* yy_content_area */
	T6 a46; /* last_token */
	T0* a47; /* input_filter */
	T0* a48; /* input_stream */
	T0* a49; /* input_resolver */
	T0* a50; /* yy_acclist */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8] */
struct S777 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_LIBRARY] */
struct S778 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY] */
struct S783 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY] */
struct S784 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8] */
struct S789 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY] */
struct S790 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CLUSTERS */
struct S791 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY] */
struct S792 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_LIBRARY] */
struct S793 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* special_item_routines */
	T0* a7; /* item_storage */
	T0* a8; /* clashes */
	T0* a9; /* slots */
	T6 a10; /* found_position */
	T0* a11; /* internal_cursor */
	T6 a12; /* slots_position */
	T6 a13; /* count */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_LIBRARY]] */
struct S794 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG] */
struct S796 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG] */
struct S798 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8] */
struct S799 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8] */
struct S800 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_TARGET] */
struct S801 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET] */
struct S803 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type attached DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
struct S807 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
struct S808 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION] */
struct S809 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S810 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] KL_EQUALITY_TESTER [[attached] ET_IDENTIFIER] */
struct S812 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER] */
struct S815 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER] */
struct S816 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] TUPLE [ET_LACE_SYSTEM] */
struct S819 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER] */
struct S820 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] TUPLE [[attached] ET_LACE_CLUSTER] */
struct S821 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME] */
struct S828 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS] */
struct S829 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_MASTER_CLASS] */
struct S830 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME] */
struct S831 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_CLASS_NAME] */
struct S832 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE] */
struct S833 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE] */
struct S834 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_TYPE] */
struct S835 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM] */
struct S845 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BRACKET_SYMBOL */
struct S846 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* seed */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM] */
struct S848 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type C_DATE */
struct S850 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* millisecond_now */
	T0* a2; /* internal_item */
	T1 a3; /* is_utc */
};

/* Struct for type KL_STDIN_FILE */
struct S851 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_file */
	T2 a2; /* last_character */
	T0* a3; /* last_string */
	T0* a4; /* character_buffer */
};

/* Struct for type [attached] DS_ARRAYED_STACK [[attached] INTEGER_32] */
struct S853 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S854 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
struct S855 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD] */
struct S856 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL] */
struct S857 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
struct S858 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type [attached] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST] */
struct S859 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
struct S860 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type [attached] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST] */
struct S861 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM] */
struct S862 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_QUERY] */
struct S863 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE] */
struct S864 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
struct S865 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS] */
struct S866 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
struct S867 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_KEYWORD] */
struct S869 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
struct S870 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_AGENT_KEYWORD] */
struct S872 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
struct S873 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
struct S875 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
struct S876 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_SYMBOL] */
struct S878 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
struct S879 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_POSITION] */
struct S881 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
struct S882 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
struct S884 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
struct S885 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_BREAK] */
struct S887 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
struct S888 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CHARACTER_CONSTANT] */
struct S890 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
struct S891 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CURRENT] */
struct S893 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
struct S894 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_FREE_OPERATOR] */
struct S896 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
struct S897 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_INTEGER_CONSTANT] */
struct S899 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
struct S900 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_KEYWORD_OPERATOR] */
struct S902 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
struct S903 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_MANIFEST_STRING] */
struct S905 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
struct S906 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_REAL_CONSTANT] */
struct S908 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
struct S909 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_RESULT] */
struct S910 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
struct S911 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_RETRY_INSTRUCTION] */
struct S913 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
struct S914 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_SYMBOL_OPERATOR] */
struct S916 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_VOID] */
struct S917 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_VOID] */
struct S919 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
struct S920 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
struct S922 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
struct S923 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_BRACKET_SYMBOL] */
struct S925 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
struct S926 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
struct S928 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
struct S929 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_ACROSS_EXPRESSION] */
struct S931 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
struct S932 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
struct S934 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S935 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S936 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM] */
struct S937 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM] */
struct S939 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S940 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S941 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S942 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S944 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S945 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S947 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S948 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S950 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
struct S951 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_AGENT_TARGET] */
struct S953 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
struct S954 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_ALIAS_NAME] */
struct S956 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
struct S957 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_ASSIGNER] */
struct S959 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
struct S960 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_BRACKET_EXPRESSION] */
struct S962 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
struct S963 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CALL_AGENT] */
struct S965 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S966 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S967 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
struct S968 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CHECK_INSTRUCTION] */
struct S970 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
struct S971 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CHOICE] */
struct S973 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
struct S974 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CHOICE_CONSTANT] */
struct S976 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
struct S977 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CHOICE_ITEM] */
struct S979 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
struct S980 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CHOICE_LIST] */
struct S982 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
struct S983 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CLASS] */
struct S985 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
struct S986 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CLIENT_ITEM] */
struct S988 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
struct S989 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CLIENTS] */
struct S991 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
struct S992 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_COMPOUND] */
struct S993 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
struct S994 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CONDITIONAL] */
struct S996 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
struct S997 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CONSTANT] */
struct S999 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1000 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1002 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1003 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1005 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
struct S1006 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
struct S1008 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
struct S1009 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CONSTRAINT_TYPE] */
struct S1011 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
struct S1012 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CONVERT_FEATURE] */
struct S1014 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
struct S1015 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
struct S1017 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
struct S1018 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
struct S1020 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
struct S1021 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CREATE_EXPRESSION] */
struct S1023 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
struct S1024 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CREATION_REGION] */
struct S1026 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
struct S1027 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CREATOR] */
struct S1029 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
struct S1030 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CREATOR_LIST] */
struct S1032 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
struct S1033 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
struct S1035 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
struct S1036 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
struct S1038 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
struct S1039 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
struct S1041 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
struct S1042 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_ELSEIF_PART] */
struct S1044 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
struct S1045 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_ELSEIF_PART_LIST] */
struct S1047 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
struct S1048 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_EXPORT] */
struct S1050 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
struct S1051 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_EXPORT_LIST] */
struct S1052 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
struct S1053 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_EXPRESSION] */
struct S1054 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
struct S1055 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_EXPRESSION_ITEM] */
struct S1057 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
struct S1058 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
struct S1060 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
struct S1061 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_EXTERNAL_ALIAS] */
struct S1063 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
struct S1064 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_FEATURE_CLAUSE] */
struct S1066 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
struct S1067 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
struct S1069 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
struct S1070 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_FEATURE_EXPORT] */
struct S1072 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
struct S1073 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_FEATURE_NAME] */
struct S1074 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
struct S1075 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
struct S1077 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
struct S1078 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT] */
struct S1080 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S1081 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S1083 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S1084 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S1085 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
struct S1086 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_FORMAL_PARAMETER] */
struct S1088 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S1089 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S1091 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
struct S1092 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
struct S1093 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
struct S1094 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_IF_EXPRESSION] */
struct S1096 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
struct S1097 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_IF_INSTRUCTION] */
struct S1099 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
struct S1100 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_INDEXING_LIST] */
struct S1102 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
struct S1103 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_INDEXING_ITEM] */
struct S1105 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
struct S1106 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_INDEXING_TERM] */
struct S1108 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
struct S1109 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
struct S1111 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
struct S1112 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_INDEXING_TERM_LIST] */
struct S1114 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
struct S1115 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_INLINE_AGENT] */
struct S1117 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
struct S1118 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
struct S1120 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
struct S1121 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_INSTRUCTION] */
struct S1123 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
struct S1124 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_INVARIANTS] */
struct S1126 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1127 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1128 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
struct S1129 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_LIKE_TYPE] */
struct S1131 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
struct S1132 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_LOCAL_VARIABLE] */
struct S1134 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S1135 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S1137 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
struct S1138 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
struct S1139 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
struct S1140 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_LOOP_INVARIANTS] */
struct S1142 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
struct S1143 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_MANIFEST_ARRAY] */
struct S1145 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
struct S1146 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
struct S1148 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
struct S1149 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
struct S1151 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
struct S1152 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_MANIFEST_TUPLE] */
struct S1153 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
struct S1154 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_OBSOLETE] */
struct S1156 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S1157 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S1159 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
struct S1160 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_PARENT] */
struct S1162 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
struct S1163 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
struct S1165 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
struct S1166 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_PARENT_ITEM] */
struct S1168 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
struct S1169 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_PARENT_LIST] */
struct S1171 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
struct S1172 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_POSTCONDITIONS] */
struct S1174 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
struct S1175 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_PRECONDITIONS] */
struct S1176 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
struct S1177 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_PROCEDURE] */
struct S1178 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S1179 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S1181 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
struct S1182 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_QUERY] */
struct S1183 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
struct S1184 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_RENAME_ITEM] */
struct S1186 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
struct S1187 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_RENAME_LIST] */
struct S1188 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
struct S1189 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
struct S1191 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
struct S1192 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_STRIP_EXPRESSION] */
struct S1194 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
struct S1195 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_TYPE] */
struct S1196 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
struct S1197 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_TYPE_ITEM] */
struct S1199 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
struct S1200 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_TYPE_LIST] */
struct S1202 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
struct S1203 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_VARIANT] */
struct S1205 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
struct S1206 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_WHEN_PART] */
struct S1208 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
struct S1209 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_WHEN_PART_LIST] */
struct S1211 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
struct S1212 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_WRITABLE] */
struct S1213 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS] */
struct S1214 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* items */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS] */
struct S1215 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_PARENT_CHECKER1 */
struct S1216 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* current_parent */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER1 */
struct S1217 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* formal_parameter_sorter */
	T0* a3; /* direct_formal_parameter_sorter */
	T0* a4; /* current_class */
	T0* a5; /* system_processor */
	T0* a6; /* current_formal */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME] */
struct S1218 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T6 a4; /* position */
	T0* a5; /* item_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* modulus */
	T6 a11; /* slots_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T6 a17; /* capacity */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_NAME_TESTER */
struct S1219 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME] */
struct S1221 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* position */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* count */
	T6 a9; /* free_slot */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* slots_position */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ALIAS_NAME_TESTER */
struct S1222 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST] */
struct S1224 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS] */
struct S1225 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* count */
	T0* a17; /* internal_keys */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_ADAPTATION_RESOLVER */
struct S1226 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* rename_table */
	T0* a3; /* export_table */
	T0* a4; /* undefine_table */
	T0* a5; /* redefine_table */
	T0* a6; /* select_table */
	T0* a7; /* alias_mapping */
	T0* a8; /* replicable_features */
	T0* a9; /* current_class */
	T0* a10; /* system_processor */
	T0* a11; /* free_parent_feature */
	T0* a12; /* parent_feature_list */
	T0* a13; /* free_inherited_feature */
	T0* a14; /* inherited_feature_list */
	T0* a15; /* free_redeclared_feature */
	T0* a16; /* redeclared_feature_list */
};

/* Struct for type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
struct S1227 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* dotnet_features */
	T0* a3; /* other_dotnet_features */
	T0* a4; /* current_class */
	T0* a5; /* system_processor */
	T0* a6; /* free_parent_feature */
	T0* a7; /* parent_feature_list */
	T0* a8; /* free_inherited_feature */
	T0* a9; /* inherited_feature_list */
	T0* a10; /* free_redeclared_feature */
	T0* a11; /* redeclared_feature_list */
};

/* Struct for type ET_IDENTIFIER_TYPE_RESOLVER */
struct S1228 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* current_feature */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
struct S1229 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_ANCHORED_TYPE_CHECKER */
struct S1230 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* anchored_type_sorter */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
	T0* a5; /* current_anchored_type */
};

/* Struct for type ET_SIGNATURE_CHECKER */
struct S1231 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* parent_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
	T6 a5; /* processing_mode */
};

/* Struct for type ET_PARENT_CHECKER2 */
struct S1232 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* constraint_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER2 */
struct S1233 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* constraint_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_BUILTIN_FEATURE_CHECKER */
struct S1234 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* builtin_features */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_PRECURSOR_CHECKER */
struct S1235 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_feature */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32] */
struct S1236 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* free_slot */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_CLASS] */
struct S1237 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T6 a5; /* capacity */
	T6 a6; /* modulus */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type ET_PARENT_CHECKER3 */
struct S1238 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* classes_to_be_processed */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
struct S1239 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
	T1 a5; /* in_qualified_anchored_type */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
struct S1240 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_FORMAL_PARAMETER_LIST */
struct S1242 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type ET_FORMAL_PARAMETER */
struct S1243 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* implementation_class */
	T0* a4; /* type_mark */
};

/* Struct for type ET_CONSTRAINT_CREATOR */
struct S1244 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* create_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_INHERITED_FEATURE */
struct S1246 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* parent_feature */
	T0* a3; /* flattened_feature */
	T0* a4; /* flattened_parent */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T1 a7; /* is_selected */
	T0* a8; /* replicated_features */
	T0* a9; /* replicated_seeds */
};

/* Struct for type ET_PARENT_FEATURE */
struct S1247 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* precursor_feature */
	T0* a3; /* parent */
	T0* a4; /* new_name */
	T0* a5; /* undefine_name */
	T0* a6; /* redefine_name */
	T0* a7; /* select_name */
	T0* a8; /* merged_feature */
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_PROCEDURE] */
struct S1248 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_QUERY] */
struct S1249 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type ET_SUPPLIER_BUILDER */
struct S1250 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* supplier_classes */
	T0* a2; /* current_class */
};

/* Struct for type [attached] SPECIAL [[attached] ET_CLASS] */
struct S1251 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS] */
struct S1252 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS] */
struct S1253 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] INTEGER_32] */
struct S1255 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET] */
struct S1258 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET] */
struct S1259 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_IDENTIFIER] */
struct S1260 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] SPECIAL [detachable ET_DYNAMIC_TYPE] */
struct S1261 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_TYPE] */
struct S1262 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_TYPE] */
struct S1263 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_EXPRESSION] */
struct S1265 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION] */
struct S1266 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EXPRESSION] */
struct S1267 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type attached KL_EQUALITY_TESTER [[attached] INTEGER_32] */
struct S1271 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32] */
struct S1273 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S1274 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S1275 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE] */
struct S1276 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
struct S1279 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_OBJECT_TEST] */
struct S1282 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST] */
struct S1283 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_TEST] */
struct S1284 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
struct S1286 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
struct S1287 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
struct S1288 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_EQUALITY_EXPRESSION] */
struct S1290 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION] */
struct S1291 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EQUALITY_EXPRESSION] */
struct S1292 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_AGENT] */
struct S1294 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT] */
struct S1295 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_AGENT] */
struct S1296 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_EXPRESSION_ITEM] */
struct S1298 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION_ITEM] */
struct S1300 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S1301 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE] */
struct S1302 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE] */
struct S1303 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE] */
struct S1304 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FEATURE] */
struct S1309 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_FEATURE] */
struct S1310 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE] */
struct S1311 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE] */
struct S1312 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_CONSTANT] */
struct S1313 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CONSTANT] */
struct S1316 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT] */
struct S1317 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_INLINE_CONSTANT] */
struct S1318 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT] */
struct S1321 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_DYNAMIC_FEATURE] */
struct S1322 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE] */
struct S1325 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
struct S1326 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_DYNAMIC_FEATURE] */
struct S1327 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_FEATURE] */
struct S1328 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_FEATURE] */
struct S1329 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8] */
struct S1331 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type RX_BYTE_CODE */
struct S1337 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* byte_code */
	T0* a3; /* character_sets */
	T6 a4; /* capacity */
	T6 a5; /* character_sets_count */
	T6 a6; /* character_sets_capacity */
};

/* Struct for type RX_CHARACTER_SET */
struct S1338 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* set */
};

/* Struct for type RX_CASE_MAPPING */
struct S1339 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* lower_table */
	T0* a2; /* flip_table */
};

/* Struct for type [attached] ARRAY [[attached] RX_CHARACTER_SET] */
struct S1342 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] SPECIAL [[attached] RX_CHARACTER_SET] */
struct S1343 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]] */
struct S1345 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] ARRAY [[attached] BOOLEAN] */
struct S1346 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] SPECIAL [[attached] ET_SYSTEM_PROCESSOR] */
struct S1349 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_SYSTEM_PROCESSOR] */
struct S1350 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_SYSTEM_PROCESSOR] */
struct S1351 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type THREAD_ATTRIBUTES */
struct S1352 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* shared */
	T14 a2; /* internal_item */
	T0* a3; /* managed_pointer */
};

/* Struct for type [attached] CELL [[attached] BOOLEAN] */
struct S1353 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* item */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE] */
struct S1359 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_AGENT] */
struct S1361 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_INLINE_AGENT] */
struct S1363 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INLINE_AGENT] */
struct S1364 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
struct S1365 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
struct S1366 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
struct S1367 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
struct S1368 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
struct S1369 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
struct S1370 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
struct S1371 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE] */
struct S1372 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
struct S1373 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
struct S1374 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT] */
struct S1375 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT] */
struct S1376 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT] */
struct S1377 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_TYPE] */
struct S1379 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST] */
struct S1380 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_NAMED_OBJECT_TEST */
struct S1384 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* as_keyword */
	T0* a4; /* expression */
	T0* a5; /* attached_keyword */
	T0* a6; /* declared_type */
};

/* Struct for type [attached] SPECIAL [[attached] ET_NAMED_OBJECT_TEST] */
struct S1385 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST] */
struct S1386 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST] */
struct S1387 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* special_routines */
	T0* a3; /* storage */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT] */
struct S1388 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT] */
struct S1392 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT] */
struct S1393 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT] */
struct S1394 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_SET [[attached] INTEGER_32] */
struct S1395 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* count */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ATTACHMENT_SCOPE] */
struct S1398 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE] */
struct S1399 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ATTACHMENT_SCOPE] */
struct S1400 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM] */
struct S1402 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_INDEXING_TERM] */
struct S1404 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INDEXING_TERM] */
struct S1405 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE] */
struct S1406 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ASSERTIONS] */
struct S1407 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS] */
struct S1409 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME] */
struct S1411 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8] */
struct S1415 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type STRING_TO_INTEGER_CONVERTOR */
struct S1416 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* sign */
	T11 a2; /* part1 */
	T11 a3; /* part2 */
	T6 a4; /* last_state */
	T1 a5; /* internal_overflowed */
	T0* a6; /* leading_separators */
	T0* a7; /* trailing_separators */
	T1 a8; /* leading_separators_acceptable */
	T1 a9; /* trailing_separators_acceptable */
	T6 a10; /* conversion_type */
};

/* Struct for type ET_VALIDITY_ERROR */
struct S1418 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* ise_reported */
	T1 a2; /* ge_reported */
	T0* a3; /* default_template */
	T0* a4; /* parameters */
	T0* a5; /* current_class */
	T0* a6; /* class_impl */
	T0* a7; /* position */
	T0* a8; /* code */
	T0* a9; /* etl_code */
	T1 a10; /* ise_fatal */
	T1 a11; /* ge_fatal */
};

/* Struct for type UC_UNICODE_ROUTINES */
struct S1419 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_XACE_CLASS_OPTIONS */
struct S1422 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_options */
	T0* a2; /* class_name */
	T0* a3; /* options */
};

/* Struct for type attached DS_LINKED_LIST [[attached] ET_XACE_FEATURE_OPTIONS] */
struct S1424 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type ET_XACE_FEATURE_OPTIONS */
struct S1426 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_name */
	T0* a2; /* options */
};

/* Struct for type ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
struct S1427 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ATTRIBUTE_ERROR */
struct S1428 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_ELEMENT_ERROR */
struct S1429 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
struct S1430 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ELEMENT_ERROR */
struct S1431 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
struct S1432 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
struct S1433 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
struct S1434 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_ECF_NOTE_ELEMENT */
struct S1438 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* attributes */
	T0* a3; /* elements */
	T0* a4; /* content */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT] */
struct S1439 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_ECF_TARGET_PARENT */
struct S1453 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name_id */
	T0* a3; /* location_id */
};

/* Struct for type ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
struct S1455 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* filename_id */
	T0* a3; /* universe */
	T0* a4; /* target */
	T0* a5; /* description */
	T0* a6; /* eifgens_location */
	T0* a7; /* classname_prefix */
	T1 a8; /* is_read_only */
	T1 a9; /* use_application_options */
	T0* a10; /* options */
	T0* a11; /* class_options */
	T0* a12; /* class_renamings */
	T0* a13; /* visible_classes */
	T0* a14; /* conditions */
	T0* a15; /* name */
	T0* a16; /* library */
};

/* Struct for type ET_ECF_VERSION */
struct S1459 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_release */
	T6 a4; /* internal_build */
	T0* a5; /* product */
	T0* a6; /* company */
	T0* a7; /* copyright */
};

/* Struct for type ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
struct S1461 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_ECF_CLUSTER */
struct S1463 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T0* a5; /* target */
	T0* a6; /* description */
	T1 a7; /* is_hidden */
	T0* a8; /* classname_prefix */
	T1 a9; /* is_read_only */
	T1 a10; /* is_recursive */
	T0* a11; /* conditioned_subclusters */
	T0* a12; /* conditioned_file_rules */
	T0* a13; /* options */
	T0* a14; /* class_options */
	T0* a15; /* class_renamings */
	T0* a16; /* class_mappings */
	T0* a17; /* visible_classes */
	T0* a18; /* provider_groups */
	T0* a19; /* conditions */
	T0* a20; /* notes */
	T1 a21; /* is_override */
	T0* a22; /* overridden_group */
	T1 a23; /* overridden_constraint_enabled */
	T1 a24; /* scm_mapping_constraint_enabled */
	T0* a25; /* subclusters */
	T1 a26; /* use_obsolete_syntax */
	T0* a27; /* scm_read_mapping */
	T0* a28; /* scm_write_mapping */
	T1 a29; /* is_implicit */
	T0* a30; /* parent */
	T0* a31; /* provider_constraint */
	T0* a32; /* dependant_constraint */
	T1 a33; /* is_preparsed */
	T1 a34; /* is_abstract */
	T0* a35; /* file_rules */
	T0* a36; /* cached_absolute_pathname */
};

/* Struct for type ET_ECF_CLUSTERS */
struct S1464 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type ET_ECF_EXTERNAL_CFLAG */
struct S1466 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* flag */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_CFLAGS */
struct S1467 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_INCLUDE */
struct S1469 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_INCLUDES */
struct S1470 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_LIBRARY */
struct S1472 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_LIBRARIES */
struct S1473 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_LINKER_FLAG */
struct S1475 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* flag */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_LINKER_FLAGS */
struct S1476 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_MAKE */
struct S1478 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_MAKES */
struct S1479 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_OBJECT */
struct S1481 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_OBJECTS */
struct S1482 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_RESOURCE */
struct S1484 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_RESOURCES */
struct S1485 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_FILE_RULE */
struct S1487 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* exclude */
	T0* a2; /* include */
	T0* a3; /* exclude_regexp */
	T0* a4; /* include_regexp */
	T0* a5; /* conditions */
	T0* a6; /* description */
};

/* Struct for type ET_ECF_FILE_RULES */
struct S1488 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* file_rules */
};

/* Struct for type ET_ECF_ADAPTED_LIBRARIES */
struct S1490 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* libraries */
};

/* Struct for type ET_ECF_ACTION */
struct S1492 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* command_name */
	T0* a2; /* description */
	T1 a3; /* must_succeed */
	T0* a4; /* working_directory */
	T0* a5; /* conditions */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ACTION] */
struct S1493 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_OPTIONS] */
struct S1497 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_OPTIONS]] */
struct S1498 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type ET_ECF_ROOT_ALL_CLASSES */
struct S1500 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ECF_ROOT_CLASS */
struct S1501 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_name */
	T0* a2; /* creation_procedure_name */
	T0* a3; /* cluster_name */
};

/* Struct for type ET_ECF_ORED_CONDITIONS */
struct S1503 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditions */
};

/* Struct for type ET_ECF_ANDED_CONDITIONS */
struct S1505 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditions */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
struct S1506 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* last_position */
	T6 a4; /* position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* key_equality_tester */
	T0* a9; /* internal_keys */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ECF_VISIBLE_CLASS */
struct S1508 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_name */
	T0* a2; /* feature_name */
	T0* a3; /* new_class_name */
	T0* a4; /* new_feature_name */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS] */
struct S1509 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_ECF_BUILD_CONDITION */
struct S1518 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_CONCURRENCY_CONDITION */
struct S1519 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_CUSTOM_CONDITION */
struct S1520 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* value */
	T0* a3; /* match */
	T1 a4; /* is_excluded */
};

/* Struct for type ET_ECF_DOTNET_CONDITION */
struct S1521 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_DYNAMIC_RUNTIME_CONDITION */
struct S1522 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_PLATFORM_CONDITION */
struct S1523 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_COMPILER_VERSION_CONDITION */
struct S1524 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* min_value */
	T0* a2; /* max_value */
};

/* Struct for type ET_ECF_MSIL_CLR_VERSION_CONDITION */
struct S1525 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* min_value */
	T0* a2; /* max_value */
};

/* Struct for type [attached] TUPLE [ET_ECF_SYSTEM] */
struct S1526 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_PARENTHESIS_EXPRESSION */
struct S1528 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type ET_REGULAR_MANIFEST_STRING */
struct S1532 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* type */
};

/* Struct for type ET_INFIX_FREE_NAME */
struct S1533 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hash_code */
	T6 a2; /* seed */
	T0* a3; /* operator_string */
	T0* a4; /* infix_keyword */
	T2 a5; /* code */
};

/* Struct for type ET_PARENT_CLAUSE_LIST */
struct S1534 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_CREATOR_LIST */
struct S1537 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE] */
struct S1540 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE] */
struct S1542 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type UT_TRISTATE */
struct S1546 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* value */
};

/* Struct for type [attached] KL_AGENT_ROUTINES [[attached] ANY] */
struct S1547 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [UT_TRISTATE] */
struct S1548 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ANY], [attached] PROCEDURE [[attached] TUPLE]] */
struct S1549 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [[attached] ET_MASTER_CLASS]] */
struct S1550 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE] */
struct S1551 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], detachable FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
struct S1553 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_MASTER_CLASS], [attached] BOOLEAN]] */
struct S1554 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_MASTER_CLASS], [attached] BOOLEAN], detachable FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
struct S1555 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type UC_UTF8_ROUTINES */
struct S1556 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type UC_UTF8_STRING */
struct S1557 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* area */
	T6 a3; /* byte_count */
	T6 a4; /* internal_hash_code */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
	T6 a7; /* internal_case_insensitive_hash_code */
};

/* Struct for type XM_EIFFEL_INPUT_STREAM */
struct S1558 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_string */
	T6 a2; /* encoding */
	T0* a3; /* utf_queue */
	T0* a4; /* impl */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET] */
struct S1562 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE] */
struct S1564 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT] */
struct S1566 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type KL_CHARACTER_BUFFER */
struct S1569 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* as_special */
	T0* a2; /* area */
};

/* Struct for type [attached] SPECIAL [[attached] ET_QUERY] */
struct S1572 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALIAS_NAME */
struct S1573 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* alias_keyword */
	T0* a2; /* alias_string */
	T2 a3; /* code */
	T6 a4; /* seed */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_QUERY] */
struct S1574 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_PROCEDURE] */
struct S1575 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_PROCEDURE] */
struct S1576 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_STRING_INPUT_STREAM */
struct S1577 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_input */
	T2 a2; /* last_character */
	T0* a3; /* last_string */
	T0* a4; /* string */
	T6 a5; /* location */
};

/* Struct for type ET_TEXT_GROUP */
struct S1578 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_OBJECT_TEST_LIST */
struct S1583 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_ACROSS_COMPONENT_LIST */
struct S1585 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_CREATOR */
struct S1625 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_keyword */
	T0* a2; /* clients */
	T0* a3; /* storage */
	T6 a4; /* count */
};

/* Struct for type ET_FEATURE_CLAUSE */
struct S1631 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_keyword */
	T0* a2; /* clients */
};

/* Struct for type ET_LOCAL_VARIABLE */
struct S1655 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type ET_ELSEIF_PART */
struct S1675 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
};

/* Struct for type ET_ELSEIF_EXPRESSION */
struct S1676 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_keyword */
	T0* a3; /* then_expression */
};

/* Struct for type ET_WHEN_PART */
struct S1677 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* choices */
	T0* a2; /* then_compound */
};

/* Struct for type ET_CONSTRAINED_FORMAL_PARAMETER */
struct S1712 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arrow_symbol */
	T0* a2; /* constraint */
	T0* a3; /* creation_procedures */
	T0* a4; /* type_mark */
	T6 a5; /* index */
	T0* a6; /* name */
	T0* a7; /* implementation_class */
	T0* a8; /* constraint_base_type */
};

/* Struct for type ET_FILE_POSITION */
struct S1716 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T0* a2; /* filename */
};

/* Struct for type ET_TAGGED_ASSERTION */
struct S1718 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tag */
	T0* a2; /* untagged_assertion */
};

/* Struct for type [attached] DS_QUICK_SORTER [[attached] ET_QUERY] */
struct S1721 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type [attached] DS_QUICK_SORTER [[attached] ET_PROCEDURE] */
struct S1722 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_REDECLARED_FEATURE */
struct S1724 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* flattened_feature */
	T0* a3; /* parent_feature */
	T6 a4; /* first_seed */
	T0* a5; /* other_seeds */
	T1 a6; /* is_selected */
	T0* a7; /* replicated_features */
	T0* a8; /* replicated_seeds */
};

/* Struct for type ET_CONVERT_FEATURE_LIST */
struct S1726 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* convert_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_ALIASED_FEATURE_NAME */
struct S1728 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_name */
	T0* a2; /* alias_name */
};

/* Struct for type ET_FEATURE_IDS */
struct S1730 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* feature_ids */
};

/* Struct for type ET_RENAME */
struct S1731 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* old_name */
	T0* a2; /* as_keyword */
	T0* a3; /* new_name */
};

/* Struct for type ET_POSTCONDITIONS */
struct S1734 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* validity_checked */
	T1 a2; /* has_validity_error */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* ensure_keyword */
	T0* a6; /* then_keyword */
};

/* Struct for type ET_INVARIANTS */
struct S1735 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_class */
	T0* a2; /* invariant_keyword */
	T0* a3; /* storage */
	T6 a4; /* count */
	T0* a5; /* object_tests */
	T0* a6; /* across_components */
	T1 a7; /* validity_checked */
	T1 a8; /* has_validity_error */
};

/* Struct for type CONSOLE */
struct S1748 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* file_pointer */
	T6 a2; /* mode */
	T0* a3; /* last_string */
	T0* a4; /* internal_name */
	T0* a5; /* internal_detachable_name_pointer */
	T2 a6; /* last_character */
};

/* Struct for type ET_LIKE_N */
struct S1749 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* previous */
	T0* a3; /* type_mark */
	T0* a4; /* like_keyword */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
struct S1750 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_BASE_TYPE] */
struct S1753 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE] */
struct S1754 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] ARRAY [[attached] IMMUTABLE_STRING_32] */
struct S1755 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
	T1 a4; /* object_comparison */
};

/* Struct for type [attached] SPECIAL [[attached] IMMUTABLE_STRING_32] */
struct S1756 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8] */
struct S1757 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T0* a6; /* hash_function */
	T6 a7; /* last_position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* count */
	T0* a11; /* equality_tester */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T6 a19; /* free_slot */
	T0* a20; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_XACE_TARGET] */
struct S1758 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER] */
struct S1759 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_LINKED_LIST [[attached] ET_XACE_CLASS_OPTIONS] */
struct S1762 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_STACK [[attached] YY_BUFFER] */
struct S1763 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
};

/* Struct for type UT_SYNTAX_ERROR */
struct S1764 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_TOO_MANY_INCLUDES_ERROR */
struct S1765 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_DYNAMIC_TARGET_LIST */
struct S1768 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [attached] SPECIAL [[attached] NATIVE_STRING] */
struct S1771 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] ARRAY [detachable STRING_8] */
struct S1772 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type XM_NAMESPACE_RESOLVER_CONTEXT */
struct S1773 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* context */
};

/* Struct for type [attached] DS_LINKED_QUEUE [detachable STRING_8] */
struct S1776 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
};

/* Struct for type [attached] DS_LINKED_QUEUE [[attached] STRING_8] */
struct S1777 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T0* a2; /* last_cell */
	T6 a3; /* count */
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
struct S1778 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
struct S1779 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE] */
struct S1780 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first */
	T0* a2; /* second */
};

/* Struct for type [attached] KL_EQUALITY_TESTER [[attached] XM_NAMESPACE] */
struct S1783 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] XM_NAMESPACE] */
struct S1784 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE] */
struct S1785 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] XM_NAMESPACE] */
struct S1786 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_ASSEMBLY] */
struct S1787 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY] */
struct S1788 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_DOTNET_ASSEMBLY] */
struct S1789 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY] */
struct S1792 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
	T0* a6; /* equality_tester */
};

/* Struct for type [attached] SPECIAL [[attached] ET_XACE_MOUNTED_LIBRARY] */
struct S1793 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_MOUNTED_LIBRARY] */
struct S1794 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_MOUNTED_LIBRARY] */
struct S1795 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS] */
struct S1796 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* equality_tester */
	T0* a6; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_INTERNAL_UNIVERSE] */
struct S1797 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE] */
struct S1801 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_INTERNAL_UNIVERSE] */
struct S1802 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER1 */
struct S1803 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER2 */
struct S1804 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
struct S1805 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER3 */
struct S1806 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS] */
struct S1807 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE] */
struct S1808 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_UNIVERSE] */
struct S1809 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE] */
struct S1812 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_PARENT_ITEM] */
struct S1814 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_ITEM] */
struct S1816 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_CLIENT_ITEM] */
struct S1817 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_ITEM] */
struct S1818 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_BRACED_TYPE_LIST */
struct S1820 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type XM_EIFFEL_CHARACTER_ENTITY */
struct S1822 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* code */
};

/* Struct for type attached DS_BILINKABLE [[attached] XM_POSITION] */
struct S1825 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_POSITION] */
struct S1826 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type attached DS_LINKABLE [[attached] XM_EIFFEL_SCANNER] */
struct S1828 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF] */
struct S1829 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8] */
struct S1834 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF] */
struct S1835 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_EQUALITY_TESTER [[attached] XM_EIFFEL_PARSER_NAME] */
struct S1839 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] XM_EIFFEL_PARSER_NAME] */
struct S1840 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT] */
struct S1841 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
struct S1842 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type attached DS_BILINKABLE [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
struct S1844 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type [attached] DS_BILINKED_LIST_CURSOR [[attached] STRING_8] */
struct S1846 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type attached DS_BILINKABLE [[attached] STRING_8] */
struct S1848 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER] */
struct S1849 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ADAPTED_LIBRARY] */
struct S1850 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY] */
struct S1851 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_LIBRARY] */
struct S1852 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_LIBRARY] */
struct S1854 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY] */
struct S1855 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_LIBRARY] */
struct S1856 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1857 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1858 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1859 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LACE_CLUSTER] */
struct S1861 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [detachable ET_OBJECT_TEST_LIST] */
struct S1862 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
struct S1863 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST_LIST] */
struct S1864 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_OBJECT_TEST_LIST] */
struct S1865 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
struct S1866 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
struct S1867 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT_LIST] */
struct S1868 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT_LIST] */
struct S1869 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ASSERTION_ITEM] */
struct S1870 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM] */
struct S1871 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ASSERTION_ITEM] */
struct S1872 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY] */
struct S1874 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE] */
struct S1876 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
struct S1878 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_NAMED_CLASS] */
struct S1880 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS] */
struct S1882 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS] */
struct S1886 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* modulus */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* internal_cursor */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS] */
struct S1887 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER] */
struct S1892 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* cycle */
	T0* a2; /* sorted_items */
	T0* a3; /* items */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* indexes */
};

/* Struct for type attached DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER] */
struct S1894 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_FORMAL_PARAMETER_TYPE */
struct S1895 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_class */
	T6 a2; /* index */
	T0* a3; /* type_mark */
	T0* a4; /* name */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME] */
struct S1896 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_FLATTENED_FEATURE] */
struct S1897 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [[attached] ET_FEATURE_NAME] */
struct S1903 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE] */
struct S1904 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME] */
struct S1905 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ALIAS_NAME] */
struct S1909 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ALIAS_NAME] */
struct S1910 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME] */
struct S1912 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST] */
struct S1913 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_CLIENT_LIST] */
struct S1914 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST] */
struct S1915 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS] */
struct S1917 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT] */
struct S1918 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_CLIENT] */
struct S1919 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME] */
struct S1920 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* internal_cursor */
	T6 a4; /* count */
	T0* a5; /* item_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* position */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* modulus */
	T0* a12; /* equality_tester */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* key_storage */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_CALL_NAME_TESTER */
struct S1921 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_CALL_NAME] */
struct S1923 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* internal_cursor */
	T6 a4; /* count */
	T0* a5; /* item_storage */
	T6 a6; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T0* a10; /* equality_tester */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME] */
struct S1924 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 a3; /* found_position */
	T0* a4; /* internal_cursor */
	T0* a5; /* key_storage */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* position */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* modulus */
	T0* a13; /* equality_tester */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* special_item_routines */
	T0* a17; /* clashes */
	T0* a18; /* slots */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME] */
struct S1925 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a11; /* slots_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* internal_cursor */
	T0* a15; /* key_storage */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32] */
struct S1926 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_REPLICATED_FEATURE */
struct S1930 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* features */
	T6 a2; /* selected_count */
};

/* Struct for type ET_RENAME_LIST */
struct S1931 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* rename_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_EXPORT_LIST */
struct S1932 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* export_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_ALL_EXPORT */
struct S1933 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clients_clause */
	T0* a2; /* all_keyword */
};

/* Struct for type ET_FEATURE_EXPORT */
struct S1934 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clients_clause */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type ET_KEYWORD_FEATURE_NAME_LIST */
struct S1935 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE] */
struct S1936 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE] */
struct S1937 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DOTNET_SIGNATURE_TESTER */
struct S1938 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE] */
struct S1939 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T6 a9; /* count */
	T6 a10; /* slots_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* internal_cursor */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE] */
struct S1941 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE] */
struct S1943 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE] */
struct S1944 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* cycle */
	T0* a2; /* counts */
	T0* a3; /* successors */
	T0* a4; /* items */
	T0* a5; /* sorted_items */
	T0* a6; /* indexes */
};

/* Struct for type attached DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE] */
struct S1946 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE] */
struct S1947 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type attached DS_LINKED_LIST [[attached] ET_PARENT_FEATURE] */
struct S1949 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8] */
struct S1950 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* slots_position */
	T6 a17; /* count */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32] */
struct S1951 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_CLASS] */
struct S1956 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE] */
struct S1959 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_QUERY] */
struct S1961 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]] */
struct S1963 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]] */
struct S1964 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [[attached] INTEGER_32]] */
struct S1965 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NAMED_OBJECT_TEST] */
struct S1968 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ACROSS_COMPONENT] */
struct S1970 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32] */
struct S1972 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] NATURAL_8] */
struct S1978 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] NATURAL_8, [attached] ET_CLASS_NAME] */
struct S1979 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type STRING_8_SEARCHER */
struct S1980 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* deltas */
};

/* Struct for type attached ARRAYED_LIST [[attached] INTEGER_32] */
struct S1982 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area_v2 */
	T6 a2; /* index */
};

/* Struct for type ET_XACE_INVALID_EXPRESSION_ERROR */
struct S1986 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE] */
struct S1988 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* last_position */
	T6 a3; /* capacity */
	T6 a4; /* slots_position */
	T6 a5; /* count */
	T6 a6; /* modulus */
	T6 a7; /* clashes_previous_position */
	T0* a8; /* key_equality_tester */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* item_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE] */
struct S1989 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] TUPLE [ET_ECF_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S1990 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE] */
struct S1991 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]] */
struct S1992 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE]] */
struct S1993 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE], [attached] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]]] */
struct S1994 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
struct S1998 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
	T0* a5; /* agent_type */
	T1 a6; /* is_dynamic_types_readonly */
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE] */
struct S2001 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type XM_COMMENT */
struct S2002 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* data */
	T0* a2; /* parent */
};

/* Struct for type XM_PROCESSING_INSTRUCTION */
struct S2003 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* data */
	T0* a3; /* parent */
};

/* Struct for type XM_CHARACTER_DATA */
struct S2004 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T0* a2; /* parent */
};

/* Struct for type [attached] DS_CELL [detachable ET_CLASS] */
struct S2009 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type [attached] TUPLE [detachable DS_CELL [detachable ET_CLASS]] */
struct S2010 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ST_SPLITTER */
struct S2012 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_escape_character */
	T2 a2; /* escape_character */
	T0* a3; /* separator_codes */
	T0* a4; /* separators */
};

/* Struct for type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
struct S2014 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_cluster */
	T0* a2; /* group_pathnames */
	T0* a3; /* group_names */
	T0* a4; /* pathname_buffer */
};

/* Struct for type [attached] TUPLE [ET_EIFFEL_PREPARSER, [attached] DS_ARRAYED_LIST [[attached] STRING_8]] */
struct S2015 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8] */
struct S2022 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* position */
	T6 a5; /* count */
	T6 a6; /* capacity */
	T6 a7; /* free_slot */
	T6 a8; /* last_position */
	T0* a9; /* key_equality_tester */
	T0* a10; /* internal_keys */
	T0* a11; /* hash_function */
	T6 a12; /* slots_position */
	T0* a13; /* equality_tester */
	T6 a14; /* modulus */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* internal_cursor */
};

/* Struct for type ET_LOCAL_VARIABLE_LIST */
struct S2027 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* local_keyword */
};

/* Struct for type ET_TRUE_CONSTANT */
struct S2032 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type ET_SEEDED_QUERY_COMPARATOR */
struct S2034 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SEEDED_PROCEDURE_COMPARATOR */
struct S2037 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CLIENTS */
struct S2040 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_brace */
	T0* a4; /* right_brace */
};

/* Struct for type [attached] TUPLE [detachable ET_CLIENT_LIST] */
struct S2042 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_FREE_OPERATOR */
struct S2044 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* hash_code */
	T6 a3; /* compressed_position */
	T0* a4; /* operator_name */
	T6 a5; /* seed */
};

/* Struct for type ET_C3_CHARACTER_CONSTANT */
struct S2045 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T6 a3; /* compressed_position */
	T0* a4; /* literal */
	T3 a5; /* value */
	T0* a6; /* type */
};

/* Struct for type ET_VERBATIM_STRING */
struct S2046 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* marker */
	T0* a7; /* open_white_characters */
	T0* a8; /* close_white_characters */
	T1 a9; /* is_left_aligned */
	T0* a10; /* type */
};

/* Struct for type ET_SPECIAL_MANIFEST_STRING */
struct S2047 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type ET_UNDERSCORED_INTEGER_CONSTANT */
struct S2048 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T6 a6; /* compressed_position */
	T0* a7; /* literal */
	T0* a8; /* type */
};

/* Struct for type ET_HEXADECIMAL_INTEGER_CONSTANT */
struct S2049 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T6 a6; /* compressed_position */
	T0* a7; /* literal */
	T0* a8; /* type */
};

/* Struct for type ET_OCTAL_INTEGER_CONSTANT */
struct S2050 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T6 a6; /* compressed_position */
	T0* a7; /* literal */
	T0* a8; /* type */
};

/* Struct for type ET_BINARY_INTEGER_CONSTANT */
struct S2051 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T6 a6; /* compressed_position */
	T0* a7; /* literal */
	T0* a8; /* type */
};

/* Struct for type ET_REGULAR_REAL_CONSTANT */
struct S2052 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type ET_UNDERSCORED_REAL_CONSTANT */
struct S2053 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type ET_SYMBOL_OPERATOR */
struct S2054 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* seed */
};

/* Struct for type ET_SEMICOLON_SYMBOL */
struct S2055 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type ET_QUESTION_MARK_SYMBOL */
struct S2056 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
};

/* Struct for type ET_KEYWORD_OPERATOR */
struct S2057 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* seed */
};

/* Struct for type ET_VOID */
struct S2058 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type ET_AGENT_KEYWORD */
struct S2059 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
};

/* Struct for type ET_FALSE_CONSTANT */
struct S2060 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type ET_RETRY_INSTRUCTION */
struct S2061 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
};

/* Struct for type ET_PRECURSOR_KEYWORD */
struct S2062 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
	T6 a4; /* seed */
};

/* Struct for type ET_C1_CHARACTER_CONSTANT */
struct S2063 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T6 a3; /* compressed_position */
	T3 a4; /* value */
	T0* a5; /* type */
};

/* Struct for type ET_C2_CHARACTER_CONSTANT */
struct S2064 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T6 a3; /* compressed_position */
	T3 a4; /* value */
	T0* a5; /* type */
};

/* Struct for type ET_INDEXING_LIST */
struct S2065 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* indexing_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_TAGGED_INDEXING */
struct S2066 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tag */
	T0* a2; /* terms */
};

/* Struct for type ET_INDEXING_TERM_LIST */
struct S2068 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_INDEXING */
struct S2069 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* terms */
};

/* Struct for type ET_CUSTOM_ATTRIBUTE */
struct S2070 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_expression */
	T0* a2; /* settings */
	T0* a3; /* end_keyword */
};

/* Struct for type ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD */
struct S2071 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* attachment_symbol */
	T0* a2; /* separateness_keyword */
};

/* Struct for type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
struct S2072 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
struct S2073 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* colon */
	T0* a3; /* type */
};

/* Struct for type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
struct S2074 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* comma */
	T0* a3; /* type */
};

/* Struct for type ET_CONVERT_FUNCTION */
struct S2075 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* colon */
};

/* Struct for type ET_CONVERT_PROCEDURE */
struct S2076 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type ET_FEATURE_CLAUSE_LIST */
struct S2077 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DO_FUNCTION */
struct S2079 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T0* a5; /* preconditions */
	T6 a6; /* hash_code */
	T6 a7; /* first_seed */
	T0* a8; /* arguments */
	T0* a9; /* assigner */
	T0* a10; /* postconditions */
	T0* a11; /* other_seeds */
	T0* a12; /* clients */
	T6 a13; /* version */
	T6 a14; /* id */
	T0* a15; /* extended_name */
	T0* a16; /* declared_type */
	T0* a17; /* obsolete_message */
	T0* a18; /* locals */
	T0* a19; /* compound */
	T0* a20; /* rescue_clause */
	T0* a21; /* is_keyword */
	T0* a22; /* end_keyword */
	T0* a23; /* semicolon */
	T0* a24; /* feature_clause */
	T0* a25; /* first_indexing */
	T0* a26; /* object_tests */
	T0* a27; /* across_components */
	T0* a28; /* frozen_keyword */
	T1 a29; /* validity_checked */
	T1 a30; /* has_validity_error */
	T0* a31; /* synonym */
};

/* Struct for type ET_ONCE_FUNCTION */
struct S2080 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T0* a5; /* preconditions */
	T6 a6; /* hash_code */
	T6 a7; /* first_seed */
	T0* a8; /* arguments */
	T0* a9; /* assigner */
	T0* a10; /* postconditions */
	T0* a11; /* other_seeds */
	T0* a12; /* clients */
	T6 a13; /* version */
	T6 a14; /* id */
	T0* a15; /* extended_name */
	T1 a16; /* validity_checked */
	T1 a17; /* has_validity_error */
	T0* a18; /* keys */
	T0* a19; /* declared_type */
	T0* a20; /* obsolete_message */
	T0* a21; /* locals */
	T0* a22; /* compound */
	T0* a23; /* rescue_clause */
	T0* a24; /* is_keyword */
	T0* a25; /* end_keyword */
	T0* a26; /* semicolon */
	T0* a27; /* feature_clause */
	T0* a28; /* first_indexing */
	T0* a29; /* object_tests */
	T0* a30; /* across_components */
	T0* a31; /* frozen_keyword */
	T0* a32; /* synonym */
};

/* Struct for type ET_DEFERRED_FUNCTION */
struct S2081 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T0* a5; /* preconditions */
	T6 a6; /* hash_code */
	T6 a7; /* first_seed */
	T0* a8; /* arguments */
	T0* a9; /* assigner */
	T0* a10; /* postconditions */
	T0* a11; /* other_seeds */
	T0* a12; /* clients */
	T6 a13; /* version */
	T6 a14; /* id */
	T0* a15; /* extended_name */
	T1 a16; /* validity_checked */
	T1 a17; /* has_validity_error */
	T0* a18; /* declared_type */
	T0* a19; /* obsolete_message */
	T0* a20; /* is_keyword */
	T0* a21; /* deferred_keyword */
	T0* a22; /* end_keyword */
	T0* a23; /* semicolon */
	T0* a24; /* feature_clause */
	T0* a25; /* first_indexing */
	T0* a26; /* object_tests */
	T0* a27; /* across_components */
	T0* a28; /* frozen_keyword */
	T0* a29; /* synonym */
};

/* Struct for type ET_ONCE_PROCEDURE */
struct S2082 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T0* a5; /* preconditions */
	T6 a6; /* hash_code */
	T6 a7; /* first_seed */
	T0* a8; /* arguments */
	T0* a9; /* postconditions */
	T0* a10; /* compound */
	T0* a11; /* other_seeds */
	T0* a12; /* clients */
	T6 a13; /* version */
	T6 a14; /* id */
	T0* a15; /* extended_name */
	T1 a16; /* validity_checked */
	T1 a17; /* has_validity_error */
	T0* a18; /* keys */
	T0* a19; /* first_indexing */
	T0* a20; /* obsolete_message */
	T0* a21; /* is_keyword */
	T0* a22; /* end_keyword */
	T0* a23; /* semicolon */
	T0* a24; /* feature_clause */
	T0* a25; /* object_tests */
	T0* a26; /* across_components */
	T0* a27; /* locals */
	T0* a28; /* rescue_clause */
	T0* a29; /* frozen_keyword */
	T0* a30; /* synonym */
};

/* Struct for type ET_PREFIX_NAME */
struct S2083 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T0* a2; /* prefix_keyword */
	T0* a3; /* operator_string */
	T2 a4; /* code */
};

/* Struct for type ET_PREFIX_FREE_NAME */
struct S2084 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T6 a2; /* hash_code */
	T0* a3; /* prefix_keyword */
	T0* a4; /* operator_string */
	T2 a5; /* code */
};

/* Struct for type ET_INFIX_NAME */
struct S2085 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T0* a2; /* infix_keyword */
	T0* a3; /* operator_string */
	T2 a4; /* code */
};

/* Struct for type ET_ALIAS_FREE_NAME */
struct S2086 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hash_code */
	T2 a2; /* code */
	T0* a3; /* alias_string */
	T0* a4; /* alias_keyword */
	T6 a5; /* seed */
};

/* Struct for type ET_FORMAL_COMMA_ARGUMENT */
struct S2087 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type ET_LOCAL_COMMA_VARIABLE */
struct S2089 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type ET_CLASS_ASSERTION */
struct S2091 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_keyword */
};

/* Struct for type ET_VARIANT */
struct S2092 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* variant_keyword */
	T0* a2; /* tag */
	T0* a3; /* expression */
};

/* Struct for type ET_LABELED_ACTUAL_PARAMETER */
struct S2093 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_LABELED_COMMA_ACTUAL_PARAMETER */
struct S2095 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_QUALIFIED_LIKE_BRACED_TYPE */
struct S2097 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* like_keyword */
	T0* a3; /* target_type */
	T0* a4; /* qualified_name */
	T0* a5; /* left_brace */
	T0* a6; /* right_brace */
};

/* Struct for type ET_QUALIFIED_LIKE_TYPE */
struct S2098 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* target_type */
	T0* a3; /* qualified_name */
};

/* Struct for type ET_ASSIGNER_INSTRUCTION */
struct S2100 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* call */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T0* a4; /* name */
};

/* Struct for type ET_ASSIGNMENT */
struct S2101 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
};

/* Struct for type ET_ASSIGNMENT_ATTEMPT */
struct S2102 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_attempt_symbol */
};

/* Struct for type ET_KEYWORD_EXPRESSION */
struct S2103 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* keyword */
	T0* a2; /* expression */
};

/* Struct for type ET_LOOP_INSTRUCTION */
struct S2104 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* from_compound */
	T0* a2; /* until_conditional */
	T0* a3; /* loop_compound */
	T0* a4; /* end_keyword */
	T0* a5; /* invariant_part */
	T0* a6; /* variant_part */
	T1 a7; /* has_old_variant_syntax */
};

/* Struct for type ET_BANG_INSTRUCTION */
struct S2106 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* left_bang */
	T0* a5; /* right_bang */
};

/* Struct for type ET_CREATE_INSTRUCTION */
struct S2107 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* create_keyword */
	T0* a5; /* creation_region */
};

/* Struct for type ET_CREATION_REGION */
struct S2108 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_name */
	T0* a2; /* left_symbol */
	T0* a3; /* right_symbol */
};

/* Struct for type ET_IF_INSTRUCTION */
struct S2109 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
	T0* a3; /* end_keyword */
	T0* a4; /* elseif_parts */
	T0* a5; /* else_compound */
};

/* Struct for type ET_ELSEIF_PART_LIST */
struct S2110 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_IF_EXPRESSION */
struct S2111 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* conditional */
	T0* a3; /* then_expression */
	T0* a4; /* elseif_parts */
	T0* a5; /* else_expression */
	T0* a6; /* then_keyword */
	T0* a7; /* else_keyword */
	T0* a8; /* end_keyword */
};

/* Struct for type ET_ELSEIF_EXPRESSION_LIST */
struct S2112 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_INSPECT_INSTRUCTION */
struct S2113 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* when_parts */
	T0* a3; /* end_keyword */
	T0* a4; /* else_compound */
};

/* Struct for type ET_WHEN_PART_LIST */
struct S2114 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_CHOICE_LIST */
struct S2115 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* when_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_CHOICE_RANGE */
struct S2116 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* lower */
	T0* a2; /* upper */
	T0* a3; /* dotdot */
};

/* Struct for type ET_DEBUG_INSTRUCTION */
struct S2118 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* keys */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type ET_MANIFEST_STRING_LIST */
struct S2119 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_PRECURSOR_INSTRUCTION */
struct S2120 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a4; /* is_parent_prefixed */
	T0* a5; /* parenthesis_call */
	T0* a6; /* parent_type */
};

/* Struct for type ET_STATIC_CALL_INSTRUCTION */
struct S2121 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* parenthesis_call */
};

/* Struct for type ET_STATIC_CALL_EXPRESSION */
struct S2122 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* feature_keyword */
	T0* a3; /* static_type */
	T0* a4; /* parenthesis_call */
	T0* a5; /* qualified_name */
	T0* a6; /* arguments */
};

/* Struct for type ET_PRECURSOR_EXPRESSION */
struct S2123 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T1 a2; /* is_parent_prefixed */
	T0* a3; /* parent_name */
	T0* a4; /* precursor_keyword */
	T0* a5; /* arguments */
	T0* a6; /* parenthesis_call */
	T0* a7; /* parent_type */
};

/* Struct for type ET_CURRENT_ADDRESS */
struct S2124 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* current_keyword */
};

/* Struct for type ET_RESULT_ADDRESS */
struct S2125 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* result_keyword */
};

/* Struct for type ET_EXPRESSION_ADDRESS */
struct S2126 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* expression */
};

/* Struct for type ET_PARENTHESIZED_EXPRESSION */
struct S2127 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left_parenthesis */
	T0* a3; /* expression */
	T0* a4; /* right_parenthesis */
};

/* Struct for type ET_INFIX_EXPRESSION */
struct S2128 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* right */
	T0* a4; /* name */
	T1 a5; /* is_boolean_operator */
};

/* Struct for type ET_INFIX_AND_THEN_OPERATOR */
struct S2130 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* and_keyword */
	T0* a2; /* then_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_INFIX_OR_ELSE_OPERATOR */
struct S2132 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* or_keyword */
	T0* a2; /* else_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_MANIFEST_TYPE */
struct S2133 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left_brace */
	T0* a3; /* type */
	T0* a4; /* right_brace */
};

/* Struct for type ET_PREFIX_EXPRESSION */
struct S2134 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* expression */
	T1 a4; /* is_boolean_operator */
};

/* Struct for type ET_OLD_EXPRESSION */
struct S2135 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* old_keyword */
	T0* a3; /* expression */
};

/* Struct for type ET_BRACKET_EXPRESSION */
struct S2136 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* target */
	T0* a3; /* arguments */
	T0* a4; /* name */
};

/* Struct for type ET_MANIFEST_ARRAY */
struct S2137 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T0* a3; /* left_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
	T0* a6; /* right_symbol */
};

/* Struct for type ET_STRIP_EXPRESSION */
struct S2138 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* strip_keyword */
	T0* a3; /* left_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
	T0* a6; /* right_parenthesis */
};

/* Struct for type ET_CALL_AGENT */
struct S2139 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* target */
	T0* a4; /* arguments */
	T0* a5; /* qualified_name */
	T0* a6; /* implicit_result */
};

/* Struct for type ET_DO_FUNCTION_INLINE_AGENT */
struct S2140 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* declared_type */
	T0* a5; /* end_keyword */
	T0* a6; /* implicit_result */
	T0* a7; /* object_tests */
	T0* a8; /* across_components */
	T0* a9; /* actual_arguments */
	T0* a10; /* preconditions */
	T0* a11; /* locals */
	T0* a12; /* compound */
	T0* a13; /* postconditions */
	T0* a14; /* rescue_clause */
	T0* a15; /* target */
};

/* Struct for type ET_ONCE_FUNCTION_INLINE_AGENT */
struct S2141 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* declared_type */
	T0* a5; /* end_keyword */
	T0* a6; /* implicit_result */
	T0* a7; /* object_tests */
	T0* a8; /* across_components */
	T0* a9; /* actual_arguments */
	T0* a10; /* preconditions */
	T0* a11; /* locals */
	T0* a12; /* keys */
	T0* a13; /* compound */
	T0* a14; /* postconditions */
	T0* a15; /* rescue_clause */
	T0* a16; /* target */
};

/* Struct for type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
struct S2142 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* language */
	T0* a4; /* object_tests */
	T0* a5; /* across_components */
	T0* a6; /* actual_arguments */
	T0* a7; /* preconditions */
	T0* a8; /* alias_clause */
	T0* a9; /* postconditions */
	T0* a10; /* target */
	T0* a11; /* formal_arguments */
	T0* a12; /* declared_type */
	T0* a13; /* end_keyword */
	T0* a14; /* implicit_result */
};

/* Struct for type ET_DO_PROCEDURE_INLINE_AGENT */
struct S2144 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* end_keyword */
	T0* a5; /* object_tests */
	T0* a6; /* across_components */
	T0* a7; /* actual_arguments */
	T0* a8; /* preconditions */
	T0* a9; /* locals */
	T0* a10; /* compound */
	T0* a11; /* postconditions */
	T0* a12; /* rescue_clause */
	T0* a13; /* target */
};

/* Struct for type ET_ONCE_PROCEDURE_INLINE_AGENT */
struct S2145 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* end_keyword */
	T0* a5; /* object_tests */
	T0* a6; /* across_components */
	T0* a7; /* actual_arguments */
	T0* a8; /* preconditions */
	T0* a9; /* locals */
	T0* a10; /* keys */
	T0* a11; /* compound */
	T0* a12; /* postconditions */
	T0* a13; /* rescue_clause */
	T0* a14; /* target */
};

/* Struct for type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
struct S2146 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* language */
	T0* a4; /* object_tests */
	T0* a5; /* across_components */
	T0* a6; /* actual_arguments */
	T0* a7; /* preconditions */
	T0* a8; /* alias_clause */
	T0* a9; /* postconditions */
	T0* a10; /* target */
	T0* a11; /* formal_arguments */
	T0* a12; /* end_keyword */
};

/* Struct for type ET_AGENT_OPEN_TARGET */
struct S2147 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* type */
	T0* a3; /* right_brace */
	T6 a4; /* index */
};

/* Struct for type ET_AGENT_ARGUMENT_OPERAND_LIST */
struct S2148 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type ET_AGENT_TYPED_OPEN_ARGUMENT */
struct S2149 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
	T0* a4; /* question_mark */
	T6 a5; /* index */
};

/* Struct for type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
struct S2150 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_CONSTRAINT_NAMED_TYPE */
struct S2151 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
};

/* Struct for type ET_EXTERNAL_PROCEDURE */
struct S2152 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T0* a5; /* preconditions */
	T6 a6; /* hash_code */
	T6 a7; /* first_seed */
	T0* a8; /* arguments */
	T0* a9; /* postconditions */
	T8 a10; /* builtin_class_code */
	T8 a11; /* builtin_feature_code */
	T0* a12; /* other_seeds */
	T0* a13; /* clients */
	T6 a14; /* version */
	T6 a15; /* id */
	T0* a16; /* extended_name */
	T1 a17; /* validity_checked */
	T1 a18; /* has_validity_error */
	T0* a19; /* frozen_keyword */
	T0* a20; /* obsolete_message */
	T0* a21; /* is_keyword */
	T0* a22; /* end_keyword */
	T0* a23; /* semicolon */
	T0* a24; /* feature_clause */
	T0* a25; /* first_indexing */
	T0* a26; /* object_tests */
	T0* a27; /* across_components */
	T0* a28; /* language */
	T0* a29; /* alias_clause */
	T0* a30; /* synonym */
};

/* Struct for type ET_LOOP_INVARIANTS */
struct S2153 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* invariant_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_LIKE_FEATURE */
struct S2154 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* like_keyword */
	T0* a2; /* type_mark */
	T0* a3; /* name */
	T6 a4; /* seed */
	T1 a5; /* is_procedure */
};

/* Struct for type ET_CHECK_INSTRUCTION */
struct S2155 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* check_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* then_compound */
};

/* Struct for type ET_ACROSS_INSTRUCTION */
struct S2156 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* cursor_name */
	T0* a2; /* across_keyword */
	T0* a3; /* iterable_expression */
	T0* a4; /* as_keyword */
	T0* a5; /* from_compound */
	T0* a6; /* until_conditional */
	T0* a7; /* loop_compound */
	T0* a8; /* end_keyword */
	T0* a9; /* invariant_part */
	T0* a10; /* variant_part */
	T0* a11; /* new_cursor_expression */
	T0* a12; /* cursor_after_expression */
	T0* a13; /* cursor_forth_instruction */
};

/* Struct for type ET_UNQUALIFIED_CALL_INSTRUCTION */
struct S2157 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* arguments */
	T0* a3; /* parenthesis_call */
};

/* Struct for type ET_FEATURE_ADDRESS */
struct S2158 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* name */
};

/* Struct for type ET_OLD_OBJECT_TEST */
struct S2159 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* left_brace */
	T0* a4; /* expression */
	T0* a5; /* attached_keyword */
	T0* a6; /* as_keyword */
	T0* a7; /* colon */
	T0* a8; /* declared_type */
	T0* a9; /* right_brace */
};

/* Struct for type ET_ONCE_MANIFEST_STRING */
struct S2160 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* once_keyword */
	T0* a3; /* manifest_string */
	T6 a4; /* id */
};

/* Struct for type ET_ACROSS_EXPRESSION */
struct S2161 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cursor_name */
	T0* a3; /* across_keyword */
	T0* a4; /* iterable_expression */
	T0* a5; /* iteration_conditional */
	T0* a6; /* until_conditional */
	T0* a7; /* invariant_part */
	T0* a8; /* variant_part */
	T0* a9; /* as_keyword */
	T0* a10; /* end_keyword */
	T1 a11; /* is_all */
	T0* a12; /* new_cursor_expression */
	T0* a13; /* cursor_after_expression */
	T0* a14; /* cursor_forth_instruction */
};

/* Struct for type [attached] SPECIAL [[attached] ET_INSTRUCTION] */
struct S2163 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_INSTRUCTION] */
struct S2164 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
struct S2166 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_state */
	T1 a2; /* internal_overflowed */
	T11 a3; /* part1 */
	T11 a4; /* part2 */
	T0* a5; /* leading_separators */
	T0* a6; /* trailing_separators */
	T6 a7; /* sign */
	T6 a8; /* conversion_type */
	T2 a9; /* internal_lookahead */
	T1 a10; /* leading_separators_acceptable */
	T1 a11; /* trailing_separators_acceptable */
};

/* Struct for type [attached] TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
struct S2169 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type attached DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS] */
struct S2191 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type [attached] SPECIAL [[attached] ET_FORMAL_PARAMETER_ITEM] */
struct S2196 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER_ITEM] */
struct S2197 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_FEATURE_NAME_ITEM] */
struct S2199 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME_ITEM] */
struct S2200 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type INTEGER_OVERFLOW_CHECKER */
struct S2202 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* integer_overflow_state1 */
	T0* a2; /* integer_overflow_state2 */
	T0* a3; /* natural_overflow_state1 */
	T0* a4; /* natural_overflow_state2 */
};

/* Struct for type [attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]] */
struct S2203 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]] */
struct S2204 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] ET_XACE_FEATURE_OPTIONS] */
struct S2205 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type attached DS_LINKABLE [[attached] ET_XACE_FEATURE_OPTIONS] */
struct S2207 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT] */
struct S2208 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT] */
struct S2209 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_NOTE_ELEMENT] */
struct S2210 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S2211 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER] */
struct S2212 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG] */
struct S2213 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE] */
struct S2214 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY] */
struct S2215 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S2216 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE] */
struct S2217 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT] */
struct S2218 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE] */
struct S2219 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE] */
struct S2221 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY] */
struct S2222 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION] */
struct S2223 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_ACTION] */
struct S2224 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ACTION] */
struct S2225 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS] */
struct S2226 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM] */
struct S2227 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_OPTIONS] */
struct S2228 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS] */
struct S2233 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
struct S2234 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS] */
struct S2235 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS] */
struct S2236 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_VISIBLE_CLASS] */
struct S2237 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_PARENT_LIST] */
struct S2238 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_LIST] */
struct S2239 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_CREATOR] */
struct S2240 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CREATOR] */
struct S2241 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type attached DS_LINKABLE [[attached] XM_DOCUMENT_NODE] */
struct S2243 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] DS_LINKED_QUEUE [[attached] CHARACTER_8] */
struct S2249 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
};

/* Struct for type UC_UTF16_ROUTINES */
struct S2250 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET] */
struct S2251 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ADAPTED_UNIVERSE] */
struct S2252 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE] */
struct S2253 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_UNIVERSE] */
struct S2254 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_TARGET_PARENT] */
struct S2256 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT] */
struct S2257 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET_PARENT] */
struct S2258 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_CONVERT_FEATURE_ITEM] */
struct S2260 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CONVERT_FEATURE_ITEM] */
struct S2261 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable DS_HASH_SET [[attached] STRING_8]] */
struct S2262 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable DS_HASH_SET [[attached] STRING_8]] */
struct S2266 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8] */
struct S2267 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_XACE_TARGET] */
struct S2268 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_TARGET] */
struct S2269 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_TARGET] */
struct S2270 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_XACE_CLUSTER] */
struct S2271 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_CLUSTER] */
struct S2272 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_CLUSTER] */
struct S2273 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] ET_XACE_CLASS_OPTIONS] */
struct S2274 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type attached DS_LINKABLE [[attached] ET_XACE_CLASS_OPTIONS] */
struct S2276 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] SPECIAL [[attached] YY_BUFFER] */
struct S2277 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] YY_BUFFER] */
struct S2278 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_DYNAMIC_TARGET] */
struct S2279 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET] */
struct S2280 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
struct S2282 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
struct S2283 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* before */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* after */
};

/* Struct for type attached DS_LINKABLE [detachable STRING_8] */
struct S2285 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type attached DS_LINKABLE [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
struct S2287 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DOTNET_ASSEMBLY] */
struct S2288 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS] */
struct S2289 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_TYPE_ITEM] */
struct S2293 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_TYPE_ITEM] */
struct S2294 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ELEMENT_CONTENT] */
struct S2295 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type attached DS_BILINKABLE [[attached] XM_DTD_ELEMENT_CONTENT] */
struct S2296 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type [attached] SPECIAL [[attached] ET_CLUSTER] */
struct S2298 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER] */
struct S2299 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLUSTER] */
struct S2300 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_CLASS] */
struct S2302 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER] */
struct S2303 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T0* a5; /* equality_tester */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_cursor */
	T6 a8; /* found_position */
	T0* a9; /* item_storage */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* hash_function */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_FORMAL_PARAMETER] */
struct S2304 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER] */
struct S2305 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER] */
struct S2306 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME] */
struct S2308 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_RENAME] */
struct S2309 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [[attached] ET_CALL_NAME] */
struct S2317 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_RENAME] */
struct S2318 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME] */
struct S2319 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME] */
struct S2320 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME] */
struct S2322 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME] */
struct S2329 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32] */
struct S2330 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_REPLICABLE_FEATURE] */
struct S2331 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE] */
struct S2334 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_RENAME_ITEM] */
struct S2336 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_RENAME_ITEM] */
struct S2337 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_EXPORT] */
struct S2339 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPORT] */
struct S2340 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE] */
struct S2341 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type attached DS_LINKABLE [[attached] ET_ADAPTED_FEATURE] */
struct S2343 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_FEATURE] */
struct S2344 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_PARENT_FEATURE] */
struct S2345 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE] */
struct S2346 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] SPECIAL [[attached] ET_DOTNET_FEATURE] */
struct S2347 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_FEATURE] */
struct S2348 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE] */
struct S2349 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]] */
struct S2352 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE] */
struct S2357 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]] */
struct S2358 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE] */
struct S2359 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type attached DS_LINKABLE [[attached] ET_DOTNET_FEATURE] */
struct S2361 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE] */
struct S2362 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T0* a5; /* equality_tester */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_cursor */
	T6 a8; /* found_position */
	T0* a9; /* item_storage */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* hash_function */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_LIKE_FEATURE] */
struct S2363 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE] */
struct S2364 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE] */
struct S2365 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8] */
struct S2368 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]] */
struct S2369 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME] */
struct S2370 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* position */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]] */
struct S2371 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CLUSTER_ERROR */
struct S2372 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* cluster */
};

/* Struct for type ET_SYNTAX_ERROR */
struct S2373 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* filename */
	T0* a6; /* position */
	T1 a7; /* ise_reported */
	T1 a8; /* ise_fatal */
	T1 a9; /* ge_reported */
	T1 a10; /* ge_fatal */
};

/* Struct for type ET_DOTNET_ASSEMBLY_ERROR */
struct S2374 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* assembly */
};

/* Struct for type [attached] TUPLE [ET_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S2377 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_CLUSTER] */
struct S2378 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_CLUSTER]] */
struct S2379 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_TARGET, STRING_8] */
struct S2380 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_ADAPTED_LIBRARY] */
struct S2382 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_ADAPTED_LIBRARY]] */
struct S2383 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S2384 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY]] */
struct S2385 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] STRING_8]] */
struct S2388 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_OPTIONS, STRING_8] */
struct S2389 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8] */
struct S2395 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T0* a6; /* hash_function */
	T6 a7; /* last_position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* count */
	T0* a11; /* equality_tester */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T6 a19; /* free_slot */
	T0* a20; /* internal_cursor */
};

/* Struct for type [attached] TUPLE [ET_XACE_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S2397 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LACE_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S2398 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] SPECIAL [[attached] ET_FORMAL_ARGUMENT_ITEM] */
struct S2400 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_ARGUMENT_ITEM] */
struct S2402 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type attached DS_LINKABLE [[attached] XM_ELEMENT_NODE] */
struct S2407 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* right */
	T0* a2; /* item */
};

/* Struct for type [attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8] */
struct S2410 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T8 z3;
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG] */
struct S2418 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG]] */
struct S2419 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_INTERNAL_UNIVERSE, ET_ECF_STATE] */
struct S2420 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE] */
struct S2421 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE]] */
struct S2422 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY] */
struct S2423 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY]] */
struct S2424 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S2425 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG]] */
struct S2426 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE] */
struct S2427 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE]] */
struct S2428 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT] */
struct S2429 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT]] */
struct S2430 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE] */
struct S2431 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE]] */
struct S2432 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION] */
struct S2433 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8] */
struct S2444 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type [attached] TUPLE [[attached] LX_WILDCARD] */
struct S2446 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [[attached] LX_WILDCARD]] */
struct S2447 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
struct S2448 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [[attached] STRING_8]] */
struct S2449 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [KL_STRING_ROUTINES, STRING_8] */
struct S2450 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type LX_DFA_WILDCARD */
struct S2452 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pattern */
	T1 a2; /* is_case_insensitive */
	T0* a3; /* yy_nxt */
	T0* a4; /* yy_accept */
	T6 a5; /* yyNb_rows */
	T6 a6; /* match_count */
	T6 a7; /* subject_start */
	T6 a8; /* subject_end */
	T0* a9; /* subject */
	T6 a10; /* matched_start */
	T6 a11; /* matched_end */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] STRING_8] */
struct S2457 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_LOCAL_VARIABLE_ITEM] */
struct S2459 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LOCAL_VARIABLE_ITEM] */
struct S2461 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_INDEXING_ITEM] */
struct S2463 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_ITEM] */
struct S2464 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_INDEXING_TERM_ITEM] */
struct S2465 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM_ITEM] */
struct S2466 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S2467 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S2469 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_FEATURE_CLAUSE] */
struct S2470 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_CLAUSE] */
struct S2471 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_STANDARD_ONCE_KEYS */
struct S2472 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ELSEIF_PART] */
struct S2475 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_PART] */
struct S2476 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ELSEIF_EXPRESSION] */
struct S2477 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_EXPRESSION] */
struct S2478 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_WHEN_PART] */
struct S2479 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_WHEN_PART] */
struct S2480 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_CHOICE_ITEM] */
struct S2482 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CHOICE_ITEM] */
struct S2483 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_MANIFEST_STRING_ITEM] */
struct S2485 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_MANIFEST_STRING_ITEM] */
struct S2486 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
struct S2487 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* actual_arguments */
	T0* a3; /* left_symbol */
	T0* a4; /* storage */
	T0* a5; /* right_symbol */
};

/* Struct for type ET_INFIX_CAST_EXPRESSION */
struct S2489 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* type */
};

/* Struct for type ET_AGENT_IMPLICIT_CURRENT_TARGET */
struct S2493 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_expression */
};

/* Struct for type [attached] SPECIAL [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S2495 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S2497 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS] */
struct S2499 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table_cursor */
	T0* a2; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] NATURAL_64] */
struct S2501 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T11 z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S2502 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S2503 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S2504 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_CLUSTER] */
struct S2505 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER] */
struct S2506 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER] */
struct S2507 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG] */
struct S2508 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG] */
struct S2509 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_CFLAG] */
struct S2510 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE] */
struct S2512 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE] */
struct S2513 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_INCLUDE] */
struct S2514 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY] */
struct S2516 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY] */
struct S2517 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LIBRARY] */
struct S2518 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S2520 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S2521 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S2522 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE] */
struct S2524 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE] */
struct S2525 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_MAKE] */
struct S2526 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT] */
struct S2528 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT] */
struct S2529 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_OBJECT] */
struct S2530 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE] */
struct S2532 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE] */
struct S2533 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_RESOURCE] */
struct S2534 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE] */
struct S2536 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_FILE_RULE] */
struct S2537 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_FILE_RULE] */
struct S2538 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY] */
struct S2539 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY] */
struct S2540 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_LIBRARY] */
struct S2541 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS] */
struct S2542 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS] */
struct S2543 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ANDED_CONDITIONS] */
struct S2544 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM] */
struct S2545 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_CONDITION_ITEM] */
struct S2546 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CONDITION_ITEM] */
struct S2547 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type attached DS_LINKABLE [[attached] CHARACTER_8] */
struct S2549 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type attached DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
struct S2551 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER] */
struct S2555 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE] */
struct S2558 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]] */
struct S2559 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]] */
struct S2563 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME] */
struct S2564 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] TUPLE [ET_GROUP] */
struct S2565 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]]] */
struct S2566 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type AP_OPTION_COMPARATOR */
struct S2567 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_QUICK_SORTER [[attached] AP_OPTION] */
struct S2568 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type KL_CHARACTER_ROUTINES */
struct S2577 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
struct S2578 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
struct S2580 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* actual_parameters */
	T6 a3; /* tuple_position */
	T0* a4; /* tuple_type */
};

/* Struct for type ET_ACTUAL_PARAMETER_SUBLIST */
struct S2581 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* actual_parameters */
	T6 a2; /* upper */
	T6 a3; /* lower */
};

/* Struct for type [attached] DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S2583 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR] */
struct S2594 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR] */
struct S2595 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_NULL_INSTRUCTION */
struct S2596 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENTHESIS_INSTRUCTION */
struct S2597 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
};

/* Struct for type ET_PARENTHESIS_SYMBOL */
struct S2615 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
struct S2621 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
struct S2622 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* agent_expression */
	T6 a2; /* argument_index */
	T6 a3; /* index */
};

/* Struct for type [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]] */
struct S2646 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]] */
struct S2650 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8] */
struct S2651 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] RX_PCRE_REGULAR_EXPRESSION] */
struct S2653 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] RX_PCRE_REGULAR_EXPRESSION] */
struct S2654 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] RX_PCRE_REGULAR_EXPRESSION] */
struct S2655 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] LX_WILDCARD] */
struct S2657 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] LX_WILDCARD] */
struct S2661 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8] */
struct S2662 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type LX_WILDCARD_PARSER */
struct S2664 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* successful */
	T0* a2; /* pending_rules */
	T0* a3; /* start_condition_stack */
	T0* a4; /* action_factory */
	T0* a5; /* old_singleton_lines */
	T0* a6; /* old_singleton_columns */
	T0* a7; /* old_singleton_counts */
	T0* a8; /* old_regexp_lines */
	T0* a9; /* old_regexp_columns */
	T0* a10; /* old_regexp_counts */
	T0* a11; /* description */
	T0* a12; /* last_string_value */
	T0* a13; /* last_lx_symbol_class_value */
	T0* a14; /* error_handler */
	T0* a15; /* name_definitions */
	T0* a16; /* character_classes */
	T6 a17; /* line_nb */
	T0* a18; /* yyss */
	T0* a19; /* input_buffer */
	T6 a20; /* yy_end */
	T6 a21; /* yy_position */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_parsing_status */
	T6 a25; /* yy_suspended_yystacksize */
	T6 a26; /* yy_suspended_yystate */
	T6 a27; /* yy_suspended_yyn */
	T6 a28; /* yy_suspended_yychar1 */
	T6 a29; /* yy_suspended_index */
	T6 a30; /* yy_suspended_yyss_top */
	T6 a31; /* yy_suspended_yy_goto */
	T0* a32; /* yyr1 */
	T6 a33; /* yyssp */
	T0* a34; /* yypgoto */
	T0* a35; /* yycheck */
	T0* a36; /* yytable */
	T0* a37; /* yydefgoto */
	T6 a38; /* error_count */
	T1 a39; /* yy_lookahead_needed */
	T6 a40; /* yyerrstatus */
	T0* a41; /* yypact */
	T6 a42; /* last_token */
	T0* a43; /* yytranslate */
	T0* a44; /* yydefact */
	T0* a45; /* yy_pushed_start_conditions */
	T0* a46; /* yyspecial_routines1 */
	T6 a47; /* yyvsc1 */
	T0* a48; /* yyvs1 */
	T0* a49; /* yyspecial_routines2 */
	T6 a50; /* yyvsc2 */
	T0* a51; /* yyvs2 */
	T0* a52; /* yyspecial_routines3 */
	T6 a53; /* yyvsc3 */
	T0* a54; /* yyvs3 */
	T0* a55; /* yyspecial_routines4 */
	T6 a56; /* yyvsc4 */
	T0* a57; /* yyvs4 */
	T0* a58; /* yyspecial_routines5 */
	T6 a59; /* yyvsc5 */
	T0* a60; /* yyvs5 */
	T0* a61; /* yytypes1 */
	T0* a62; /* yytypes2 */
	T6 a63; /* yy_start */
	T6 a64; /* yyvsp1 */
	T6 a65; /* yyvsp2 */
	T6 a66; /* yyvsp3 */
	T6 a67; /* yyvsp4 */
	T6 a68; /* yyvsp5 */
	T1 a69; /* yy_more_flag */
	T6 a70; /* yy_more_len */
	T6 a71; /* line */
	T6 a72; /* column */
	T6 a73; /* position */
	T6 a74; /* yy_start_state */
	T0* a75; /* yy_state_stack */
	T6 a76; /* yy_state_count */
	T0* a77; /* yy_content_area */
	T0* a78; /* yy_ec */
	T0* a79; /* yy_content */
	T0* a80; /* yy_accept */
	T6 a81; /* yy_last_accepting_state */
	T6 a82; /* yy_last_accepting_cpos */
	T0* a83; /* yy_chk */
	T0* a84; /* yy_base */
	T0* a85; /* yy_def */
	T0* a86; /* yy_meta */
	T0* a87; /* yy_nxt */
	T6 a88; /* yy_lp */
	T0* a89; /* yy_acclist */
	T6 a90; /* yy_looking_for_trail_begin */
	T6 a91; /* yy_full_match */
	T6 a92; /* yy_full_state */
	T6 a93; /* yy_full_lp */
	T1 a94; /* yy_rejected */
	T0* a95; /* last_detachable_any_value */
	T6 a96; /* last_integer_value */
	T1 a97; /* in_trail_context */
	T0* a98; /* rule */
	T1 a99; /* has_trail_context */
	T6 a100; /* head_count */
	T6 a101; /* head_line */
	T6 a102; /* head_column */
	T6 a103; /* trail_count */
	T6 a104; /* rule_line_nb */
};

/* Struct for type LX_DESCRIPTION */
struct S2665 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equiv_classes */
	T1 a2; /* equiv_classes_used */
	T1 a3; /* full_table */
	T1 a4; /* meta_equiv_classes_used */
	T1 a5; /* reject_used */
	T1 a6; /* variable_trail_context */
	T0* a7; /* rules */
	T0* a8; /* start_conditions */
	T6 a9; /* characters_count */
	T6 a10; /* array_size */
	T1 a11; /* line_pragma */
	T1 a12; /* inspect_used */
	T0* a13; /* eof_rules */
	T0* a14; /* eiffel_header */
	T1 a15; /* case_insensitive */
	T0* a16; /* input_filename */
	T1 a17; /* actions_separated */
	T0* a18; /* eiffel_code */
	T1 a19; /* bol_needed */
	T1 a20; /* pre_action_used */
	T1 a21; /* post_action_used */
	T1 a22; /* pre_eof_action_used */
	T1 a23; /* post_eof_action_used */
	T1 a24; /* line_used */
	T1 a25; /* position_used */
};

/* Struct for type LX_FULL_DFA */
struct S2666 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* yy_nxt */
	T0* a2; /* yy_accept */
	T6 a3; /* yyNb_rows */
	T0* a4; /* input_filename */
	T6 a5; /* characters_count */
	T6 a6; /* array_size */
	T1 a7; /* inspect_used */
	T1 a8; /* actions_separated */
	T0* a9; /* eiffel_code */
	T0* a10; /* eiffel_header */
	T1 a11; /* bol_needed */
	T1 a12; /* pre_action_used */
	T1 a13; /* post_action_used */
	T1 a14; /* pre_eof_action_used */
	T1 a15; /* post_eof_action_used */
	T1 a16; /* line_pragma */
	T0* a17; /* yy_start_conditions */
	T0* a18; /* yy_ec */
	T6 a19; /* yyNull_equiv_class */
	T6 a20; /* yyNb_rules */
	T0* a21; /* yy_rules */
	T6 a22; /* yyEnd_of_buffer */
	T1 a23; /* yyLine_used */
	T1 a24; /* yyPosition_used */
	T6 a25; /* minimum_symbol */
	T6 a26; /* maximum_symbol */
	T0* a27; /* states */
	T6 a28; /* backing_up_count */
	T0* a29; /* partitions */
	T6 a30; /* start_states_count */
	T1 a31; /* yyBacking_up */
	T0* a32; /* yy_eof_rules */
};

/* Struct for type ET_UNIVERSE_ERROR */
struct S2670 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* universe */
};

/* Struct for type ET_DYNAMIC_EQUALITY_EXPRESSION */
struct S2675 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* static_equality */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
};

/* Struct for type ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
struct S2676 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* static_equality */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
};

/* Struct for type ET_CONVERT_BUILTIN_EXPRESSION */
struct S2684 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* convert_feature */
	T0* a4; /* type */
};

/* Struct for type ET_CONVERT_FROM_EXPRESSION */
struct S2685 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* convert_feature */
	T0* a4; /* type */
};

/* Struct for type ET_CONVERT_TO_EXPRESSION */
struct S2686 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* convert_feature */
};

/* Struct for type [attached] DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
struct S2697 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table_cursor */
	T0* a2; /* container */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE] */
struct S2702 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type [attached] TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
struct S2704 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_FILE_RULE] */
struct S2705 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]] */
struct S2706 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_FILE_RULES] */
struct S2707 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]] */
struct S2708 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_STATE] */
struct S2709 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type attached DS_LINKABLE [[attached] ET_PARENT_FEATURE] */
struct S2712 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S2718 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S2719 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S2720 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S2721 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S2722 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] LX_RULE] */
struct S2723 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_START_CONDITIONS */
struct S2724 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_ACTION_FACTORY */
struct S2725 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type LX_SYMBOL_CLASS */
struct S2726 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T1 a4; /* sort_needed */
	T1 a5; /* negated */
	T0* a6; /* internal_cursor */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8] */
struct S2727 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* free_slot */
	T6 a10; /* last_position */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS] */
struct S2728 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] LX_SYMBOL_CLASS] */
struct S2729 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA] */
struct S2730 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type LX_NFA */
struct S2731 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* in_trail_context */
	T0* a2; /* states */
};

/* Struct for type [attached] SPECIAL [[attached] LX_NFA] */
struct S2732 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_RULE */
struct S2735 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* pattern */
	T0* a3; /* action */
	T6 a4; /* head_count */
	T6 a5; /* trail_count */
	T6 a6; /* line_count */
	T6 a7; /* column_count */
	T6 a8; /* line_nb */
	T1 a9; /* has_trail_context */
	T1 a10; /* is_useful */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8] */
struct S2736 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type LX_EQUIVALENCE_CLASSES */
struct S2737 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type LX_UNRECOGNIZED_RULE_ERROR */
struct S2738 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_MISSING_QUOTE_ERROR */
struct S2739 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_CLASS_ERROR */
struct S2740 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_ERROR */
struct S2741 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_META_ERROR */
struct S2742 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_REJECT_ERROR */
struct S2743 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
struct S2744 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_CHARACTER_OUT_OF_RANGE_ERROR */
struct S2745 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type [attached] ARRAY [[attached] LX_RULE] */
struct S2746 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] SPECIAL [[attached] LX_RULE] */
struct S2747 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_DFA_STATE */
struct S2748 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* accepted_rules */
	T0* a2; /* states */
	T0* a3; /* transitions */
	T0* a4; /* accepted_head_rules */
	T6 a5; /* code */
	T6 a6; /* id */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE] */
struct S2749 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] LX_DFA_STATE] */
struct S2750 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_SYMBOL_PARTITIONS */
struct S2752 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* symbols */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type [attached] KL_ARRAY_ROUTINES [[attached] LX_RULE] */
struct S2753 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] ARRAY [detachable LX_RULE] */
struct S2754 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] SPECIAL [detachable LX_RULE] */
struct S2755 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_START_CONDITION */
struct S2756 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* id */
	T1 a3; /* is_exclusive */
	T0* a4; /* patterns */
	T0* a5; /* bol_patterns */
};

/* Struct for type [attached] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE] */
struct S2757 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* array_routines */
	T6 a3; /* count */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] LX_NFA] */
struct S2759 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32] */
struct S2760 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* count */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* free_slot */
	T6 a8; /* last_position */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type LX_NFA_STATE */
struct S2761 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* in_trail_context */
	T0* a2; /* transition */
	T0* a3; /* epsilon_transition */
	T6 a4; /* id */
	T0* a5; /* accepted_rule */
};

/* Struct for type [attached] TUPLE [ET_ECF_LIBRARY] */
struct S2763 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] DS_HASH_SET [[attached] STRING_8]] */
struct S2771 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_AST_NULL_LEAF */
struct S2776 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
};

/* Struct for type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
struct S2777 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] LX_RULE] */
struct S2778 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_RULE] */
struct S2779 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] KL_ARRAY_ROUTINES [[attached] STRING_8] */
struct S2780 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] LX_START_CONDITION] */
struct S2781 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] LX_START_CONDITION] */
struct S2782 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_START_CONDITION] */
struct S2783 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] LX_SYMBOL_CLASS_TRANSITION [[attached] LX_NFA_STATE] */
struct S2788 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* target */
};

/* Struct for type [attached] LX_EPSILON_TRANSITION [[attached] LX_NFA_STATE] */
struct S2790 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
};

/* Struct for type [attached] LX_SYMBOL_TRANSITION [[attached] LX_NFA_STATE] */
struct S2793 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* label */
	T0* a2; /* target */
};

/* Struct for type LX_ACTION */
struct S2795 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* text */
};

/* Struct for type [attached] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]] */
struct S2796 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] DS_BILINKABLE [[attached] INTEGER_32] */
struct S2797 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type [attached] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]] */
struct S2798 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE] */
struct S2800 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type [attached] DS_BUBBLE_SORTER [[attached] LX_RULE] */
struct S2802 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type [attached] SPECIAL [[attached] LX_NFA_STATE] */
struct S2804 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE] */
struct S2807 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE] */
struct S2808 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] LX_DFA_STATE] */
struct S2811 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE] */
struct S2812 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_DFA_STATE] */
struct S2813 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_ARRAY [[attached] LX_RULE] */
struct S2814 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] ARRAY [detachable LX_DFA_STATE] */
struct S2815 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] SPECIAL [detachable LX_DFA_STATE] */
struct S2816 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
struct S2817 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA] */
struct S2818 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] LX_NFA, [attached] INTEGER_32] */
struct S2820 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type CHARACTER_PROPERTY */
struct S2821 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [ET_ECF_LIBRARY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S2823 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_ECF_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S2824 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LACE_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S2825 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LACE_DOTNET_GAC_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S2826 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S2827 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LIBRARY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S2828 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION] */
struct S2830 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION]] */
struct S2831 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] DS_SHELL_SORTER [[attached] INTEGER_32] */
struct S2836 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE] */
struct S2838 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE] */
struct S2841 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_ARRAY [[attached] STRING_8] */
struct S2844 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] SPECIAL [[attached] NATURAL_16] */
struct S2845 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T9 z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [[attached] NATURAL_32] */
struct S2846 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T10 z2[1]; /* item */
};

/* Struct for type [attached] ARRAY [[attached] NATURAL_16] */
struct S2847 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] ARRAY [[attached] NATURAL_32] */
struct S2848 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};


extern T1 GE_default1;
extern T2 GE_default2;
extern T3 GE_default3;
extern T4 GE_default4;
extern T5 GE_default5;
extern T6 GE_default6;
extern T7 GE_default7;
extern T8 GE_default8;
extern T9 GE_default9;
extern T10 GE_default10;
extern T11 GE_default11;
extern T12 GE_default12;
extern T13 GE_default13;
extern T14 GE_default14;
extern T15 GE_default15;
extern T16 GE_default16;
extern T17 GE_default17;
extern T18 GE_default18;
extern T19 GE_default19;
extern T20 GE_default20;
extern T25 GE_default25;
extern T26 GE_default26;
extern T27 GE_default27;
extern T28 GE_default28;
extern T29 GE_default29;
extern T31 GE_default31;
extern T32 GE_default32;
extern T33 GE_default33;
extern T34 GE_default34;
extern T35 GE_default35;
extern T36 GE_default36;
extern T38 GE_default38;
extern T40 GE_default40;
extern T41 GE_default41;
extern T42 GE_default42;
extern T43 GE_default43;
extern T44 GE_default44;
extern T46 GE_default46;
extern T47 GE_default47;
extern T48 GE_default48;
extern T49 GE_default49;
extern T53 GE_default53;
extern T55 GE_default55;
extern T56 GE_default56;
extern T57 GE_default57;
extern T58 GE_default58;
extern T61 GE_default61;
extern T62 GE_default62;
extern T66 GE_default66;
extern T67 GE_default67;
extern T69 GE_default69;
extern T70 GE_default70;
extern T71 GE_default71;
extern T77 GE_default77;
extern T78 GE_default78;
extern T80 GE_default80;
extern T81 GE_default81;
extern T84 GE_default84;
extern T85 GE_default85;
extern T87 GE_default87;
extern T88 GE_default88;
extern T91 GE_default91;
extern T93 GE_default93;
extern T94 GE_default94;
extern T95 GE_default95;
extern T97 GE_default97;
extern T100 GE_default100;
extern T102 GE_default102;
extern T103 GE_default103;
extern T106 GE_default106;
extern T107 GE_default107;
extern T108 GE_default108;
extern T109 GE_default109;
extern T112 GE_default112;
extern T114 GE_default114;
extern T116 GE_default116;
extern T119 GE_default119;
extern T120 GE_default120;
extern T121 GE_default121;
extern T122 GE_default122;
extern T123 GE_default123;
extern T124 GE_default124;
extern T125 GE_default125;
extern T128 GE_default128;
extern T129 GE_default129;
extern T130 GE_default130;
extern T131 GE_default131;
extern T132 GE_default132;
extern T133 GE_default133;
extern T134 GE_default134;
extern T135 GE_default135;
extern T136 GE_default136;
extern T137 GE_default137;
extern T138 GE_default138;
extern T139 GE_default139;
extern T140 GE_default140;
extern T141 GE_default141;
extern T142 GE_default142;
extern T143 GE_default143;
extern T144 GE_default144;
extern T145 GE_default145;
extern T146 GE_default146;
extern T147 GE_default147;
extern T148 GE_default148;
extern T149 GE_default149;
extern T150 GE_default150;
extern T154 GE_default154;
extern T155 GE_default155;
extern T157 GE_default157;
extern T158 GE_default158;
extern T159 GE_default159;
extern T160 GE_default160;
extern T161 GE_default161;
extern T162 GE_default162;
extern T163 GE_default163;
extern T164 GE_default164;
extern T166 GE_default166;
extern T168 GE_default168;
extern T169 GE_default169;
extern T170 GE_default170;
extern T171 GE_default171;
extern T172 GE_default172;
extern T175 GE_default175;
extern T176 GE_default176;
extern T177 GE_default177;
extern T178 GE_default178;
extern T179 GE_default179;
extern T182 GE_default182;
extern T185 GE_default185;
extern T186 GE_default186;
extern T187 GE_default187;
extern T188 GE_default188;
extern T189 GE_default189;
extern T192 GE_default192;
extern T193 GE_default193;
extern T194 GE_default194;
extern T195 GE_default195;
extern T196 GE_default196;
extern T197 GE_default197;
extern T198 GE_default198;
extern T199 GE_default199;
extern T200 GE_default200;
extern T203 GE_default203;
extern T206 GE_default206;
extern T207 GE_default207;
extern T208 GE_default208;
extern T209 GE_default209;
extern T210 GE_default210;
extern T212 GE_default212;
extern T213 GE_default213;
extern T214 GE_default214;
extern T216 GE_default216;
extern T217 GE_default217;
extern T219 GE_default219;
extern T220 GE_default220;
extern T221 GE_default221;
extern T222 GE_default222;
extern T223 GE_default223;
extern T225 GE_default225;
extern T226 GE_default226;
extern T227 GE_default227;
extern T229 GE_default229;
extern T230 GE_default230;
extern T231 GE_default231;
extern T232 GE_default232;
extern T233 GE_default233;
extern T236 GE_default236;
extern T237 GE_default237;
extern T239 GE_default239;
extern T240 GE_default240;
extern T241 GE_default241;
extern T245 GE_default245;
extern T247 GE_default247;
extern T248 GE_default248;
extern T250 GE_default250;
extern T253 GE_default253;
extern T255 GE_default255;
extern T256 GE_default256;
extern T257 GE_default257;
extern T259 GE_default259;
extern T260 GE_default260;
extern T261 GE_default261;
extern T264 GE_default264;
extern T265 GE_default265;
extern T267 GE_default267;
extern T268 GE_default268;
extern T269 GE_default269;
extern T270 GE_default270;
extern T271 GE_default271;
extern T272 GE_default272;
extern T273 GE_default273;
extern T279 GE_default279;
extern T280 GE_default280;
extern T281 GE_default281;
extern T282 GE_default282;
extern T283 GE_default283;
extern T285 GE_default285;
extern T286 GE_default286;
extern T288 GE_default288;
extern T290 GE_default290;
extern T291 GE_default291;
extern T292 GE_default292;
extern T293 GE_default293;
extern T294 GE_default294;
extern T295 GE_default295;
extern T296 GE_default296;
extern T297 GE_default297;
extern T298 GE_default298;
extern T299 GE_default299;
extern T300 GE_default300;
extern T301 GE_default301;
extern T302 GE_default302;
extern T303 GE_default303;
extern T304 GE_default304;
extern T305 GE_default305;
extern T306 GE_default306;
extern T307 GE_default307;
extern T308 GE_default308;
extern T309 GE_default309;
extern T310 GE_default310;
extern T311 GE_default311;
extern T312 GE_default312;
extern T313 GE_default313;
extern T314 GE_default314;
extern T315 GE_default315;
extern T316 GE_default316;
extern T317 GE_default317;
extern T318 GE_default318;
extern T319 GE_default319;
extern T320 GE_default320;
extern T321 GE_default321;
extern T332 GE_default332;
extern T333 GE_default333;
extern T344 GE_default344;
extern T345 GE_default345;
extern T347 GE_default347;
extern T348 GE_default348;
extern T349 GE_default349;
extern T350 GE_default350;
extern T351 GE_default351;
extern T352 GE_default352;
extern T353 GE_default353;
extern T354 GE_default354;
extern T355 GE_default355;
extern T357 GE_default357;
extern T358 GE_default358;
extern T359 GE_default359;
extern T360 GE_default360;
extern T361 GE_default361;
extern T362 GE_default362;
extern T363 GE_default363;
extern T364 GE_default364;
extern T365 GE_default365;
extern T366 GE_default366;
extern T367 GE_default367;
extern T368 GE_default368;
extern T369 GE_default369;
extern T371 GE_default371;
extern T372 GE_default372;
extern T373 GE_default373;
extern T374 GE_default374;
extern T375 GE_default375;
extern T376 GE_default376;
extern T377 GE_default377;
extern T378 GE_default378;
extern T379 GE_default379;
extern T380 GE_default380;
extern T381 GE_default381;
extern T382 GE_default382;
extern T383 GE_default383;
extern T384 GE_default384;
extern T385 GE_default385;
extern T386 GE_default386;
extern T387 GE_default387;
extern T388 GE_default388;
extern T389 GE_default389;
extern T390 GE_default390;
extern T391 GE_default391;
extern T392 GE_default392;
extern T396 GE_default396;
extern T397 GE_default397;
extern T398 GE_default398;
extern T399 GE_default399;
extern T400 GE_default400;
extern T401 GE_default401;
extern T402 GE_default402;
extern T403 GE_default403;
extern T404 GE_default404;
extern T405 GE_default405;
extern T406 GE_default406;
extern T407 GE_default407;
extern T408 GE_default408;
extern T410 GE_default410;
extern T411 GE_default411;
extern T412 GE_default412;
extern T413 GE_default413;
extern T414 GE_default414;
extern T416 GE_default416;
extern T418 GE_default418;
extern T419 GE_default419;
extern T422 GE_default422;
extern T424 GE_default424;
extern T429 GE_default429;
extern T431 GE_default431;
extern T432 GE_default432;
extern T433 GE_default433;
extern T434 GE_default434;
extern T438 GE_default438;
extern T439 GE_default439;
extern T444 GE_default444;
extern T445 GE_default445;
extern T449 GE_default449;
extern T451 GE_default451;
extern T452 GE_default452;
extern T454 GE_default454;
extern T456 GE_default456;
extern T464 GE_default464;
extern T472 GE_default472;
extern T474 GE_default474;
extern T475 GE_default475;
extern T476 GE_default476;
extern T477 GE_default477;
extern T478 GE_default478;
extern T479 GE_default479;
extern T480 GE_default480;
extern T485 GE_default485;
extern T487 GE_default487;
extern T490 GE_default490;
extern T491 GE_default491;
extern T492 GE_default492;
extern T494 GE_default494;
extern T495 GE_default495;
extern T496 GE_default496;
extern T498 GE_default498;
extern T500 GE_default500;
extern T501 GE_default501;
extern T502 GE_default502;
extern T503 GE_default503;
extern T505 GE_default505;
extern T506 GE_default506;
extern T507 GE_default507;
extern T510 GE_default510;
extern T512 GE_default512;
extern T513 GE_default513;
extern T514 GE_default514;
extern T515 GE_default515;
extern T516 GE_default516;
extern T517 GE_default517;
extern T518 GE_default518;
extern T519 GE_default519;
extern T520 GE_default520;
extern T521 GE_default521;
extern T522 GE_default522;
extern T523 GE_default523;
extern T524 GE_default524;
extern T525 GE_default525;
extern T526 GE_default526;
extern T527 GE_default527;
extern T529 GE_default529;
extern T530 GE_default530;
extern T533 GE_default533;
extern T536 GE_default536;
extern T538 GE_default538;
extern T539 GE_default539;
extern T540 GE_default540;
extern T542 GE_default542;
extern T543 GE_default543;
extern T544 GE_default544;
extern T547 GE_default547;
extern T548 GE_default548;
extern T549 GE_default549;
extern T551 GE_default551;
extern T552 GE_default552;
extern T553 GE_default553;
extern T554 GE_default554;
extern T557 GE_default557;
extern T559 GE_default559;
extern T560 GE_default560;
extern T564 GE_default564;
extern T569 GE_default569;
extern T571 GE_default571;
extern T575 GE_default575;
extern T576 GE_default576;
extern T581 GE_default581;
extern T583 GE_default583;
extern T584 GE_default584;
extern T586 GE_default586;
extern T587 GE_default587;
extern T588 GE_default588;
extern T589 GE_default589;
extern T592 GE_default592;
extern T595 GE_default595;
extern T596 GE_default596;
extern T598 GE_default598;
extern T599 GE_default599;
extern T601 GE_default601;
extern T603 GE_default603;
extern T604 GE_default604;
extern T605 GE_default605;
extern T606 GE_default606;
extern T607 GE_default607;
extern T608 GE_default608;
extern T611 GE_default611;
extern T612 GE_default612;
extern T614 GE_default614;
extern T615 GE_default615;
extern T616 GE_default616;
extern T618 GE_default618;
extern T620 GE_default620;
extern T621 GE_default621;
extern T623 GE_default623;
extern T626 GE_default626;
extern T627 GE_default627;
extern T629 GE_default629;
extern T630 GE_default630;
extern T632 GE_default632;
extern T633 GE_default633;
extern T634 GE_default634;
extern T635 GE_default635;
extern T637 GE_default637;
extern T638 GE_default638;
extern T642 GE_default642;
extern T643 GE_default643;
extern T644 GE_default644;
extern T645 GE_default645;
extern T647 GE_default647;
extern T648 GE_default648;
extern T649 GE_default649;
extern T650 GE_default650;
extern T651 GE_default651;
extern T652 GE_default652;
extern T653 GE_default653;
extern T654 GE_default654;
extern T655 GE_default655;
extern T656 GE_default656;
extern T657 GE_default657;
extern T658 GE_default658;
extern T659 GE_default659;
extern T660 GE_default660;
extern T661 GE_default661;
extern T662 GE_default662;
extern T663 GE_default663;
extern T664 GE_default664;
extern T665 GE_default665;
extern T667 GE_default667;
extern T668 GE_default668;
extern T669 GE_default669;
extern T670 GE_default670;
extern T671 GE_default671;
extern T672 GE_default672;
extern T674 GE_default674;
extern T675 GE_default675;
extern T676 GE_default676;
extern T677 GE_default677;
extern T678 GE_default678;
extern T679 GE_default679;
extern T680 GE_default680;
extern T681 GE_default681;
extern T682 GE_default682;
extern T683 GE_default683;
extern T684 GE_default684;
extern T685 GE_default685;
extern T686 GE_default686;
extern T687 GE_default687;
extern T689 GE_default689;
extern T690 GE_default690;
extern T691 GE_default691;
extern T692 GE_default692;
extern T693 GE_default693;
extern T694 GE_default694;
extern T696 GE_default696;
extern T698 GE_default698;
extern T699 GE_default699;
extern T700 GE_default700;
extern T701 GE_default701;
extern T706 GE_default706;
extern T712 GE_default712;
extern T713 GE_default713;
extern T714 GE_default714;
extern T715 GE_default715;
extern T716 GE_default716;
extern T717 GE_default717;
extern T723 GE_default723;
extern T724 GE_default724;
extern T729 GE_default729;
extern T730 GE_default730;
extern T731 GE_default731;
extern T732 GE_default732;
extern T733 GE_default733;
extern T736 GE_default736;
extern T737 GE_default737;
extern T738 GE_default738;
extern T740 GE_default740;
extern T742 GE_default742;
extern T743 GE_default743;
extern T744 GE_default744;
extern T745 GE_default745;
extern T746 GE_default746;
extern T747 GE_default747;
extern T748 GE_default748;
extern T749 GE_default749;
extern T750 GE_default750;
extern T751 GE_default751;
extern T752 GE_default752;
extern T753 GE_default753;
extern T754 GE_default754;
extern T755 GE_default755;
extern T756 GE_default756;
extern T757 GE_default757;
extern T758 GE_default758;
extern T759 GE_default759;
extern T760 GE_default760;
extern T761 GE_default761;
extern T762 GE_default762;
extern T763 GE_default763;
extern T764 GE_default764;
extern T765 GE_default765;
extern T766 GE_default766;
extern T767 GE_default767;
extern T772 GE_default772;
extern T773 GE_default773;
extern T775 GE_default775;
extern T777 GE_default777;
extern T778 GE_default778;
extern T783 GE_default783;
extern T784 GE_default784;
extern T789 GE_default789;
extern T790 GE_default790;
extern T791 GE_default791;
extern T792 GE_default792;
extern T793 GE_default793;
extern T794 GE_default794;
extern T796 GE_default796;
extern T798 GE_default798;
extern T799 GE_default799;
extern T800 GE_default800;
extern T801 GE_default801;
extern T803 GE_default803;
extern T807 GE_default807;
extern T808 GE_default808;
extern T809 GE_default809;
extern T810 GE_default810;
extern T812 GE_default812;
extern T815 GE_default815;
extern T816 GE_default816;
extern T819 GE_default819;
extern T820 GE_default820;
extern T821 GE_default821;
extern T828 GE_default828;
extern T829 GE_default829;
extern T830 GE_default830;
extern T831 GE_default831;
extern T832 GE_default832;
extern T833 GE_default833;
extern T834 GE_default834;
extern T835 GE_default835;
extern T845 GE_default845;
extern T846 GE_default846;
extern T848 GE_default848;
extern T850 GE_default850;
extern T851 GE_default851;
extern T853 GE_default853;
extern T854 GE_default854;
extern T855 GE_default855;
extern T856 GE_default856;
extern T857 GE_default857;
extern T858 GE_default858;
extern T859 GE_default859;
extern T860 GE_default860;
extern T861 GE_default861;
extern T862 GE_default862;
extern T863 GE_default863;
extern T864 GE_default864;
extern T865 GE_default865;
extern T866 GE_default866;
extern T867 GE_default867;
extern T869 GE_default869;
extern T870 GE_default870;
extern T872 GE_default872;
extern T873 GE_default873;
extern T875 GE_default875;
extern T876 GE_default876;
extern T878 GE_default878;
extern T879 GE_default879;
extern T881 GE_default881;
extern T882 GE_default882;
extern T884 GE_default884;
extern T885 GE_default885;
extern T887 GE_default887;
extern T888 GE_default888;
extern T890 GE_default890;
extern T891 GE_default891;
extern T893 GE_default893;
extern T894 GE_default894;
extern T896 GE_default896;
extern T897 GE_default897;
extern T899 GE_default899;
extern T900 GE_default900;
extern T902 GE_default902;
extern T903 GE_default903;
extern T905 GE_default905;
extern T906 GE_default906;
extern T908 GE_default908;
extern T909 GE_default909;
extern T910 GE_default910;
extern T911 GE_default911;
extern T913 GE_default913;
extern T914 GE_default914;
extern T916 GE_default916;
extern T917 GE_default917;
extern T919 GE_default919;
extern T920 GE_default920;
extern T922 GE_default922;
extern T923 GE_default923;
extern T925 GE_default925;
extern T926 GE_default926;
extern T928 GE_default928;
extern T929 GE_default929;
extern T931 GE_default931;
extern T932 GE_default932;
extern T934 GE_default934;
extern T935 GE_default935;
extern T936 GE_default936;
extern T937 GE_default937;
extern T939 GE_default939;
extern T940 GE_default940;
extern T941 GE_default941;
extern T942 GE_default942;
extern T944 GE_default944;
extern T945 GE_default945;
extern T947 GE_default947;
extern T948 GE_default948;
extern T950 GE_default950;
extern T951 GE_default951;
extern T953 GE_default953;
extern T954 GE_default954;
extern T956 GE_default956;
extern T957 GE_default957;
extern T959 GE_default959;
extern T960 GE_default960;
extern T962 GE_default962;
extern T963 GE_default963;
extern T965 GE_default965;
extern T966 GE_default966;
extern T967 GE_default967;
extern T968 GE_default968;
extern T970 GE_default970;
extern T971 GE_default971;
extern T973 GE_default973;
extern T974 GE_default974;
extern T976 GE_default976;
extern T977 GE_default977;
extern T979 GE_default979;
extern T980 GE_default980;
extern T982 GE_default982;
extern T983 GE_default983;
extern T985 GE_default985;
extern T986 GE_default986;
extern T988 GE_default988;
extern T989 GE_default989;
extern T991 GE_default991;
extern T992 GE_default992;
extern T993 GE_default993;
extern T994 GE_default994;
extern T996 GE_default996;
extern T997 GE_default997;
extern T999 GE_default999;
extern T1000 GE_default1000;
extern T1002 GE_default1002;
extern T1003 GE_default1003;
extern T1005 GE_default1005;
extern T1006 GE_default1006;
extern T1008 GE_default1008;
extern T1009 GE_default1009;
extern T1011 GE_default1011;
extern T1012 GE_default1012;
extern T1014 GE_default1014;
extern T1015 GE_default1015;
extern T1017 GE_default1017;
extern T1018 GE_default1018;
extern T1020 GE_default1020;
extern T1021 GE_default1021;
extern T1023 GE_default1023;
extern T1024 GE_default1024;
extern T1026 GE_default1026;
extern T1027 GE_default1027;
extern T1029 GE_default1029;
extern T1030 GE_default1030;
extern T1032 GE_default1032;
extern T1033 GE_default1033;
extern T1035 GE_default1035;
extern T1036 GE_default1036;
extern T1038 GE_default1038;
extern T1039 GE_default1039;
extern T1041 GE_default1041;
extern T1042 GE_default1042;
extern T1044 GE_default1044;
extern T1045 GE_default1045;
extern T1047 GE_default1047;
extern T1048 GE_default1048;
extern T1050 GE_default1050;
extern T1051 GE_default1051;
extern T1052 GE_default1052;
extern T1053 GE_default1053;
extern T1054 GE_default1054;
extern T1055 GE_default1055;
extern T1057 GE_default1057;
extern T1058 GE_default1058;
extern T1060 GE_default1060;
extern T1061 GE_default1061;
extern T1063 GE_default1063;
extern T1064 GE_default1064;
extern T1066 GE_default1066;
extern T1067 GE_default1067;
extern T1069 GE_default1069;
extern T1070 GE_default1070;
extern T1072 GE_default1072;
extern T1073 GE_default1073;
extern T1074 GE_default1074;
extern T1075 GE_default1075;
extern T1077 GE_default1077;
extern T1078 GE_default1078;
extern T1080 GE_default1080;
extern T1081 GE_default1081;
extern T1083 GE_default1083;
extern T1084 GE_default1084;
extern T1085 GE_default1085;
extern T1086 GE_default1086;
extern T1088 GE_default1088;
extern T1089 GE_default1089;
extern T1091 GE_default1091;
extern T1092 GE_default1092;
extern T1093 GE_default1093;
extern T1094 GE_default1094;
extern T1096 GE_default1096;
extern T1097 GE_default1097;
extern T1099 GE_default1099;
extern T1100 GE_default1100;
extern T1102 GE_default1102;
extern T1103 GE_default1103;
extern T1105 GE_default1105;
extern T1106 GE_default1106;
extern T1108 GE_default1108;
extern T1109 GE_default1109;
extern T1111 GE_default1111;
extern T1112 GE_default1112;
extern T1114 GE_default1114;
extern T1115 GE_default1115;
extern T1117 GE_default1117;
extern T1118 GE_default1118;
extern T1120 GE_default1120;
extern T1121 GE_default1121;
extern T1123 GE_default1123;
extern T1124 GE_default1124;
extern T1126 GE_default1126;
extern T1127 GE_default1127;
extern T1128 GE_default1128;
extern T1129 GE_default1129;
extern T1131 GE_default1131;
extern T1132 GE_default1132;
extern T1134 GE_default1134;
extern T1135 GE_default1135;
extern T1137 GE_default1137;
extern T1138 GE_default1138;
extern T1139 GE_default1139;
extern T1140 GE_default1140;
extern T1142 GE_default1142;
extern T1143 GE_default1143;
extern T1145 GE_default1145;
extern T1146 GE_default1146;
extern T1148 GE_default1148;
extern T1149 GE_default1149;
extern T1151 GE_default1151;
extern T1152 GE_default1152;
extern T1153 GE_default1153;
extern T1154 GE_default1154;
extern T1156 GE_default1156;
extern T1157 GE_default1157;
extern T1159 GE_default1159;
extern T1160 GE_default1160;
extern T1162 GE_default1162;
extern T1163 GE_default1163;
extern T1165 GE_default1165;
extern T1166 GE_default1166;
extern T1168 GE_default1168;
extern T1169 GE_default1169;
extern T1171 GE_default1171;
extern T1172 GE_default1172;
extern T1174 GE_default1174;
extern T1175 GE_default1175;
extern T1176 GE_default1176;
extern T1177 GE_default1177;
extern T1178 GE_default1178;
extern T1179 GE_default1179;
extern T1181 GE_default1181;
extern T1182 GE_default1182;
extern T1183 GE_default1183;
extern T1184 GE_default1184;
extern T1186 GE_default1186;
extern T1187 GE_default1187;
extern T1188 GE_default1188;
extern T1189 GE_default1189;
extern T1191 GE_default1191;
extern T1192 GE_default1192;
extern T1194 GE_default1194;
extern T1195 GE_default1195;
extern T1196 GE_default1196;
extern T1197 GE_default1197;
extern T1199 GE_default1199;
extern T1200 GE_default1200;
extern T1202 GE_default1202;
extern T1203 GE_default1203;
extern T1205 GE_default1205;
extern T1206 GE_default1206;
extern T1208 GE_default1208;
extern T1209 GE_default1209;
extern T1211 GE_default1211;
extern T1212 GE_default1212;
extern T1213 GE_default1213;
extern T1214 GE_default1214;
extern T1215 GE_default1215;
extern T1216 GE_default1216;
extern T1217 GE_default1217;
extern T1218 GE_default1218;
extern T1219 GE_default1219;
extern T1221 GE_default1221;
extern T1222 GE_default1222;
extern T1224 GE_default1224;
extern T1225 GE_default1225;
extern T1226 GE_default1226;
extern T1227 GE_default1227;
extern T1228 GE_default1228;
extern T1229 GE_default1229;
extern T1230 GE_default1230;
extern T1231 GE_default1231;
extern T1232 GE_default1232;
extern T1233 GE_default1233;
extern T1234 GE_default1234;
extern T1235 GE_default1235;
extern T1236 GE_default1236;
extern T1237 GE_default1237;
extern T1238 GE_default1238;
extern T1239 GE_default1239;
extern T1240 GE_default1240;
extern T1242 GE_default1242;
extern T1243 GE_default1243;
extern T1244 GE_default1244;
extern T1246 GE_default1246;
extern T1247 GE_default1247;
extern T1248 GE_default1248;
extern T1249 GE_default1249;
extern T1250 GE_default1250;
extern T1251 GE_default1251;
extern T1252 GE_default1252;
extern T1253 GE_default1253;
extern T1255 GE_default1255;
extern T1258 GE_default1258;
extern T1259 GE_default1259;
extern T1260 GE_default1260;
extern T1261 GE_default1261;
extern T1262 GE_default1262;
extern T1263 GE_default1263;
extern T1265 GE_default1265;
extern T1266 GE_default1266;
extern T1267 GE_default1267;
extern T1271 GE_default1271;
extern T1273 GE_default1273;
extern T1274 GE_default1274;
extern T1275 GE_default1275;
extern T1276 GE_default1276;
extern T1279 GE_default1279;
extern T1282 GE_default1282;
extern T1283 GE_default1283;
extern T1284 GE_default1284;
extern T1286 GE_default1286;
extern T1287 GE_default1287;
extern T1288 GE_default1288;
extern T1290 GE_default1290;
extern T1291 GE_default1291;
extern T1292 GE_default1292;
extern T1294 GE_default1294;
extern T1295 GE_default1295;
extern T1296 GE_default1296;
extern T1298 GE_default1298;
extern T1300 GE_default1300;
extern T1301 GE_default1301;
extern T1302 GE_default1302;
extern T1303 GE_default1303;
extern T1304 GE_default1304;
extern T1309 GE_default1309;
extern T1310 GE_default1310;
extern T1311 GE_default1311;
extern T1312 GE_default1312;
extern T1313 GE_default1313;
extern T1316 GE_default1316;
extern T1317 GE_default1317;
extern T1318 GE_default1318;
extern T1321 GE_default1321;
extern T1322 GE_default1322;
extern T1325 GE_default1325;
extern T1326 GE_default1326;
extern T1327 GE_default1327;
extern T1328 GE_default1328;
extern T1329 GE_default1329;
extern T1331 GE_default1331;
extern T1337 GE_default1337;
extern T1338 GE_default1338;
extern T1339 GE_default1339;
extern T1342 GE_default1342;
extern T1343 GE_default1343;
extern T1344 GE_default1344;
extern T1345 GE_default1345;
extern T1346 GE_default1346;
extern T1349 GE_default1349;
extern T1350 GE_default1350;
extern T1351 GE_default1351;
extern T1352 GE_default1352;
extern T1353 GE_default1353;
extern T1359 GE_default1359;
extern T1361 GE_default1361;
extern T1363 GE_default1363;
extern T1364 GE_default1364;
extern T1365 GE_default1365;
extern T1366 GE_default1366;
extern T1367 GE_default1367;
extern T1368 GE_default1368;
extern T1369 GE_default1369;
extern T1370 GE_default1370;
extern T1371 GE_default1371;
extern T1372 GE_default1372;
extern T1373 GE_default1373;
extern T1374 GE_default1374;
extern T1375 GE_default1375;
extern T1376 GE_default1376;
extern T1377 GE_default1377;
extern T1379 GE_default1379;
extern T1380 GE_default1380;
extern T1384 GE_default1384;
extern T1385 GE_default1385;
extern T1386 GE_default1386;
extern T1387 GE_default1387;
extern T1388 GE_default1388;
extern T1392 GE_default1392;
extern T1393 GE_default1393;
extern T1394 GE_default1394;
extern T1395 GE_default1395;
extern T1398 GE_default1398;
extern T1399 GE_default1399;
extern T1400 GE_default1400;
extern T1402 GE_default1402;
extern T1404 GE_default1404;
extern T1405 GE_default1405;
extern T1406 GE_default1406;
extern T1407 GE_default1407;
extern T1409 GE_default1409;
extern T1411 GE_default1411;
extern T1415 GE_default1415;
extern T1416 GE_default1416;
extern T1418 GE_default1418;
extern T1419 GE_default1419;
extern T1422 GE_default1422;
extern T1424 GE_default1424;
extern T1426 GE_default1426;
extern T1427 GE_default1427;
extern T1428 GE_default1428;
extern T1429 GE_default1429;
extern T1430 GE_default1430;
extern T1431 GE_default1431;
extern T1432 GE_default1432;
extern T1433 GE_default1433;
extern T1434 GE_default1434;
extern T1438 GE_default1438;
extern T1439 GE_default1439;
extern T1453 GE_default1453;
extern T1455 GE_default1455;
extern T1459 GE_default1459;
extern T1461 GE_default1461;
extern T1463 GE_default1463;
extern T1464 GE_default1464;
extern T1466 GE_default1466;
extern T1467 GE_default1467;
extern T1469 GE_default1469;
extern T1470 GE_default1470;
extern T1472 GE_default1472;
extern T1473 GE_default1473;
extern T1475 GE_default1475;
extern T1476 GE_default1476;
extern T1478 GE_default1478;
extern T1479 GE_default1479;
extern T1481 GE_default1481;
extern T1482 GE_default1482;
extern T1484 GE_default1484;
extern T1485 GE_default1485;
extern T1487 GE_default1487;
extern T1488 GE_default1488;
extern T1490 GE_default1490;
extern T1492 GE_default1492;
extern T1493 GE_default1493;
extern T1497 GE_default1497;
extern T1498 GE_default1498;
extern T1500 GE_default1500;
extern T1501 GE_default1501;
extern T1503 GE_default1503;
extern T1505 GE_default1505;
extern T1506 GE_default1506;
extern T1508 GE_default1508;
extern T1509 GE_default1509;
extern T1518 GE_default1518;
extern T1519 GE_default1519;
extern T1520 GE_default1520;
extern T1521 GE_default1521;
extern T1522 GE_default1522;
extern T1523 GE_default1523;
extern T1524 GE_default1524;
extern T1525 GE_default1525;
extern T1526 GE_default1526;
extern T1528 GE_default1528;
extern T1532 GE_default1532;
extern T1533 GE_default1533;
extern T1534 GE_default1534;
extern T1537 GE_default1537;
extern T1538 GE_default1538;
extern T1540 GE_default1540;
extern T1542 GE_default1542;
extern T1546 GE_default1546;
extern T1547 GE_default1547;
extern T1548 GE_default1548;
extern T1549 GE_default1549;
extern T1550 GE_default1550;
extern T1551 GE_default1551;
extern T1553 GE_default1553;
extern T1554 GE_default1554;
extern T1555 GE_default1555;
extern T1556 GE_default1556;
extern T1557 GE_default1557;
extern T1558 GE_default1558;
extern T1562 GE_default1562;
extern T1564 GE_default1564;
extern T1566 GE_default1566;
extern T1569 GE_default1569;
extern T1572 GE_default1572;
extern T1573 GE_default1573;
extern T1574 GE_default1574;
extern T1575 GE_default1575;
extern T1576 GE_default1576;
extern T1577 GE_default1577;
extern T1578 GE_default1578;
extern T1583 GE_default1583;
extern T1585 GE_default1585;
extern T1625 GE_default1625;
extern T1631 GE_default1631;
extern T1655 GE_default1655;
extern T1675 GE_default1675;
extern T1676 GE_default1676;
extern T1677 GE_default1677;
extern T1712 GE_default1712;
extern T1716 GE_default1716;
extern T1718 GE_default1718;
extern T1721 GE_default1721;
extern T1722 GE_default1722;
extern T1724 GE_default1724;
extern T1726 GE_default1726;
extern T1728 GE_default1728;
extern T1730 GE_default1730;
extern T1731 GE_default1731;
extern T1734 GE_default1734;
extern T1735 GE_default1735;
extern T1748 GE_default1748;
extern T1749 GE_default1749;
extern T1750 GE_default1750;
extern T1753 GE_default1753;
extern T1754 GE_default1754;
extern T1755 GE_default1755;
extern T1756 GE_default1756;
extern T1757 GE_default1757;
extern T1758 GE_default1758;
extern T1759 GE_default1759;
extern T1762 GE_default1762;
extern T1763 GE_default1763;
extern T1764 GE_default1764;
extern T1765 GE_default1765;
extern T1768 GE_default1768;
extern T1771 GE_default1771;
extern T1772 GE_default1772;
extern T1773 GE_default1773;
extern T1776 GE_default1776;
extern T1777 GE_default1777;
extern T1778 GE_default1778;
extern T1779 GE_default1779;
extern T1780 GE_default1780;
extern T1783 GE_default1783;
extern T1784 GE_default1784;
extern T1785 GE_default1785;
extern T1786 GE_default1786;
extern T1787 GE_default1787;
extern T1788 GE_default1788;
extern T1789 GE_default1789;
extern T1792 GE_default1792;
extern T1793 GE_default1793;
extern T1794 GE_default1794;
extern T1795 GE_default1795;
extern T1796 GE_default1796;
extern T1797 GE_default1797;
extern T1801 GE_default1801;
extern T1802 GE_default1802;
extern T1803 GE_default1803;
extern T1804 GE_default1804;
extern T1805 GE_default1805;
extern T1806 GE_default1806;
extern T1807 GE_default1807;
extern T1808 GE_default1808;
extern T1809 GE_default1809;
extern T1812 GE_default1812;
extern T1814 GE_default1814;
extern T1816 GE_default1816;
extern T1817 GE_default1817;
extern T1818 GE_default1818;
extern T1820 GE_default1820;
extern T1822 GE_default1822;
extern T1825 GE_default1825;
extern T1826 GE_default1826;
extern T1828 GE_default1828;
extern T1829 GE_default1829;
extern T1834 GE_default1834;
extern T1835 GE_default1835;
extern T1839 GE_default1839;
extern T1840 GE_default1840;
extern T1841 GE_default1841;
extern T1842 GE_default1842;
extern T1844 GE_default1844;
extern T1846 GE_default1846;
extern T1848 GE_default1848;
extern T1849 GE_default1849;
extern T1850 GE_default1850;
extern T1851 GE_default1851;
extern T1852 GE_default1852;
extern T1854 GE_default1854;
extern T1855 GE_default1855;
extern T1856 GE_default1856;
extern T1857 GE_default1857;
extern T1858 GE_default1858;
extern T1859 GE_default1859;
extern T1861 GE_default1861;
extern T1862 GE_default1862;
extern T1863 GE_default1863;
extern T1864 GE_default1864;
extern T1865 GE_default1865;
extern T1866 GE_default1866;
extern T1867 GE_default1867;
extern T1868 GE_default1868;
extern T1869 GE_default1869;
extern T1870 GE_default1870;
extern T1871 GE_default1871;
extern T1872 GE_default1872;
extern T1874 GE_default1874;
extern T1876 GE_default1876;
extern T1878 GE_default1878;
extern T1880 GE_default1880;
extern T1882 GE_default1882;
extern T1886 GE_default1886;
extern T1887 GE_default1887;
extern T1892 GE_default1892;
extern T1894 GE_default1894;
extern T1895 GE_default1895;
extern T1896 GE_default1896;
extern T1897 GE_default1897;
extern T1903 GE_default1903;
extern T1904 GE_default1904;
extern T1905 GE_default1905;
extern T1909 GE_default1909;
extern T1910 GE_default1910;
extern T1912 GE_default1912;
extern T1913 GE_default1913;
extern T1914 GE_default1914;
extern T1915 GE_default1915;
extern T1917 GE_default1917;
extern T1918 GE_default1918;
extern T1919 GE_default1919;
extern T1920 GE_default1920;
extern T1921 GE_default1921;
extern T1923 GE_default1923;
extern T1924 GE_default1924;
extern T1925 GE_default1925;
extern T1926 GE_default1926;
extern T1930 GE_default1930;
extern T1931 GE_default1931;
extern T1932 GE_default1932;
extern T1933 GE_default1933;
extern T1934 GE_default1934;
extern T1935 GE_default1935;
extern T1936 GE_default1936;
extern T1937 GE_default1937;
extern T1938 GE_default1938;
extern T1939 GE_default1939;
extern T1941 GE_default1941;
extern T1943 GE_default1943;
extern T1944 GE_default1944;
extern T1946 GE_default1946;
extern T1947 GE_default1947;
extern T1949 GE_default1949;
extern T1950 GE_default1950;
extern T1951 GE_default1951;
extern T1956 GE_default1956;
extern T1959 GE_default1959;
extern T1961 GE_default1961;
extern T1963 GE_default1963;
extern T1964 GE_default1964;
extern T1965 GE_default1965;
extern T1968 GE_default1968;
extern T1970 GE_default1970;
extern T1972 GE_default1972;
extern T1978 GE_default1978;
extern T1979 GE_default1979;
extern T1980 GE_default1980;
extern T1982 GE_default1982;
extern T1986 GE_default1986;
extern T1988 GE_default1988;
extern T1989 GE_default1989;
extern T1990 GE_default1990;
extern T1991 GE_default1991;
extern T1992 GE_default1992;
extern T1993 GE_default1993;
extern T1994 GE_default1994;
extern T1998 GE_default1998;
extern T2000 GE_default2000;
extern T2001 GE_default2001;
extern T2002 GE_default2002;
extern T2003 GE_default2003;
extern T2004 GE_default2004;
extern T2009 GE_default2009;
extern T2010 GE_default2010;
extern T2012 GE_default2012;
extern T2014 GE_default2014;
extern T2015 GE_default2015;
extern T2022 GE_default2022;
extern T2027 GE_default2027;
extern T2032 GE_default2032;
extern T2034 GE_default2034;
extern T2037 GE_default2037;
extern T2040 GE_default2040;
extern T2042 GE_default2042;
extern T2044 GE_default2044;
extern T2045 GE_default2045;
extern T2046 GE_default2046;
extern T2047 GE_default2047;
extern T2048 GE_default2048;
extern T2049 GE_default2049;
extern T2050 GE_default2050;
extern T2051 GE_default2051;
extern T2052 GE_default2052;
extern T2053 GE_default2053;
extern T2054 GE_default2054;
extern T2055 GE_default2055;
extern T2056 GE_default2056;
extern T2057 GE_default2057;
extern T2058 GE_default2058;
extern T2059 GE_default2059;
extern T2060 GE_default2060;
extern T2061 GE_default2061;
extern T2062 GE_default2062;
extern T2063 GE_default2063;
extern T2064 GE_default2064;
extern T2065 GE_default2065;
extern T2066 GE_default2066;
extern T2068 GE_default2068;
extern T2069 GE_default2069;
extern T2070 GE_default2070;
extern T2071 GE_default2071;
extern T2072 GE_default2072;
extern T2073 GE_default2073;
extern T2074 GE_default2074;
extern T2075 GE_default2075;
extern T2076 GE_default2076;
extern T2077 GE_default2077;
extern T2079 GE_default2079;
extern T2080 GE_default2080;
extern T2081 GE_default2081;
extern T2082 GE_default2082;
extern T2083 GE_default2083;
extern T2084 GE_default2084;
extern T2085 GE_default2085;
extern T2086 GE_default2086;
extern T2087 GE_default2087;
extern T2089 GE_default2089;
extern T2091 GE_default2091;
extern T2092 GE_default2092;
extern T2093 GE_default2093;
extern T2095 GE_default2095;
extern T2097 GE_default2097;
extern T2098 GE_default2098;
extern T2100 GE_default2100;
extern T2101 GE_default2101;
extern T2102 GE_default2102;
extern T2103 GE_default2103;
extern T2104 GE_default2104;
extern T2106 GE_default2106;
extern T2107 GE_default2107;
extern T2108 GE_default2108;
extern T2109 GE_default2109;
extern T2110 GE_default2110;
extern T2111 GE_default2111;
extern T2112 GE_default2112;
extern T2113 GE_default2113;
extern T2114 GE_default2114;
extern T2115 GE_default2115;
extern T2116 GE_default2116;
extern T2118 GE_default2118;
extern T2119 GE_default2119;
extern T2120 GE_default2120;
extern T2121 GE_default2121;
extern T2122 GE_default2122;
extern T2123 GE_default2123;
extern T2124 GE_default2124;
extern T2125 GE_default2125;
extern T2126 GE_default2126;
extern T2127 GE_default2127;
extern T2128 GE_default2128;
extern T2130 GE_default2130;
extern T2132 GE_default2132;
extern T2133 GE_default2133;
extern T2134 GE_default2134;
extern T2135 GE_default2135;
extern T2136 GE_default2136;
extern T2137 GE_default2137;
extern T2138 GE_default2138;
extern T2139 GE_default2139;
extern T2140 GE_default2140;
extern T2141 GE_default2141;
extern T2142 GE_default2142;
extern T2144 GE_default2144;
extern T2145 GE_default2145;
extern T2146 GE_default2146;
extern T2147 GE_default2147;
extern T2148 GE_default2148;
extern T2149 GE_default2149;
extern T2150 GE_default2150;
extern T2151 GE_default2151;
extern T2152 GE_default2152;
extern T2153 GE_default2153;
extern T2154 GE_default2154;
extern T2155 GE_default2155;
extern T2156 GE_default2156;
extern T2157 GE_default2157;
extern T2158 GE_default2158;
extern T2159 GE_default2159;
extern T2160 GE_default2160;
extern T2161 GE_default2161;
extern T2163 GE_default2163;
extern T2164 GE_default2164;
extern T2166 GE_default2166;
extern T2169 GE_default2169;
extern T2191 GE_default2191;
extern T2196 GE_default2196;
extern T2197 GE_default2197;
extern T2199 GE_default2199;
extern T2200 GE_default2200;
extern T2202 GE_default2202;
extern T2203 GE_default2203;
extern T2204 GE_default2204;
extern T2205 GE_default2205;
extern T2207 GE_default2207;
extern T2208 GE_default2208;
extern T2209 GE_default2209;
extern T2210 GE_default2210;
extern T2211 GE_default2211;
extern T2212 GE_default2212;
extern T2213 GE_default2213;
extern T2214 GE_default2214;
extern T2215 GE_default2215;
extern T2216 GE_default2216;
extern T2217 GE_default2217;
extern T2218 GE_default2218;
extern T2219 GE_default2219;
extern T2221 GE_default2221;
extern T2222 GE_default2222;
extern T2223 GE_default2223;
extern T2224 GE_default2224;
extern T2225 GE_default2225;
extern T2226 GE_default2226;
extern T2227 GE_default2227;
extern T2228 GE_default2228;
extern T2233 GE_default2233;
extern T2234 GE_default2234;
extern T2235 GE_default2235;
extern T2236 GE_default2236;
extern T2237 GE_default2237;
extern T2238 GE_default2238;
extern T2239 GE_default2239;
extern T2240 GE_default2240;
extern T2241 GE_default2241;
extern T2243 GE_default2243;
extern T2249 GE_default2249;
extern T2250 GE_default2250;
extern T2251 GE_default2251;
extern T2252 GE_default2252;
extern T2253 GE_default2253;
extern T2254 GE_default2254;
extern T2256 GE_default2256;
extern T2257 GE_default2257;
extern T2258 GE_default2258;
extern T2260 GE_default2260;
extern T2261 GE_default2261;
extern T2262 GE_default2262;
extern T2266 GE_default2266;
extern T2267 GE_default2267;
extern T2268 GE_default2268;
extern T2269 GE_default2269;
extern T2270 GE_default2270;
extern T2271 GE_default2271;
extern T2272 GE_default2272;
extern T2273 GE_default2273;
extern T2274 GE_default2274;
extern T2276 GE_default2276;
extern T2277 GE_default2277;
extern T2278 GE_default2278;
extern T2279 GE_default2279;
extern T2280 GE_default2280;
extern T2282 GE_default2282;
extern T2283 GE_default2283;
extern T2285 GE_default2285;
extern T2287 GE_default2287;
extern T2288 GE_default2288;
extern T2289 GE_default2289;
extern T2293 GE_default2293;
extern T2294 GE_default2294;
extern T2295 GE_default2295;
extern T2296 GE_default2296;
extern T2298 GE_default2298;
extern T2299 GE_default2299;
extern T2300 GE_default2300;
extern T2302 GE_default2302;
extern T2303 GE_default2303;
extern T2304 GE_default2304;
extern T2305 GE_default2305;
extern T2306 GE_default2306;
extern T2308 GE_default2308;
extern T2309 GE_default2309;
extern T2317 GE_default2317;
extern T2318 GE_default2318;
extern T2319 GE_default2319;
extern T2320 GE_default2320;
extern T2322 GE_default2322;
extern T2329 GE_default2329;
extern T2330 GE_default2330;
extern T2331 GE_default2331;
extern T2334 GE_default2334;
extern T2336 GE_default2336;
extern T2337 GE_default2337;
extern T2339 GE_default2339;
extern T2340 GE_default2340;
extern T2341 GE_default2341;
extern T2343 GE_default2343;
extern T2344 GE_default2344;
extern T2345 GE_default2345;
extern T2346 GE_default2346;
extern T2347 GE_default2347;
extern T2348 GE_default2348;
extern T2349 GE_default2349;
extern T2352 GE_default2352;
extern T2357 GE_default2357;
extern T2358 GE_default2358;
extern T2359 GE_default2359;
extern T2361 GE_default2361;
extern T2362 GE_default2362;
extern T2363 GE_default2363;
extern T2364 GE_default2364;
extern T2365 GE_default2365;
extern T2368 GE_default2368;
extern T2369 GE_default2369;
extern T2370 GE_default2370;
extern T2371 GE_default2371;
extern T2372 GE_default2372;
extern T2373 GE_default2373;
extern T2374 GE_default2374;
extern T2377 GE_default2377;
extern T2378 GE_default2378;
extern T2379 GE_default2379;
extern T2380 GE_default2380;
extern T2382 GE_default2382;
extern T2383 GE_default2383;
extern T2384 GE_default2384;
extern T2385 GE_default2385;
extern T2388 GE_default2388;
extern T2389 GE_default2389;
extern T2395 GE_default2395;
extern T2397 GE_default2397;
extern T2398 GE_default2398;
extern T2400 GE_default2400;
extern T2402 GE_default2402;
extern T2407 GE_default2407;
extern T2410 GE_default2410;
extern T2418 GE_default2418;
extern T2419 GE_default2419;
extern T2420 GE_default2420;
extern T2421 GE_default2421;
extern T2422 GE_default2422;
extern T2423 GE_default2423;
extern T2424 GE_default2424;
extern T2425 GE_default2425;
extern T2426 GE_default2426;
extern T2427 GE_default2427;
extern T2428 GE_default2428;
extern T2429 GE_default2429;
extern T2430 GE_default2430;
extern T2431 GE_default2431;
extern T2432 GE_default2432;
extern T2433 GE_default2433;
extern T2444 GE_default2444;
extern T2446 GE_default2446;
extern T2447 GE_default2447;
extern T2448 GE_default2448;
extern T2449 GE_default2449;
extern T2450 GE_default2450;
extern T2452 GE_default2452;
extern T2457 GE_default2457;
extern T2459 GE_default2459;
extern T2461 GE_default2461;
extern T2463 GE_default2463;
extern T2464 GE_default2464;
extern T2465 GE_default2465;
extern T2466 GE_default2466;
extern T2467 GE_default2467;
extern T2469 GE_default2469;
extern T2470 GE_default2470;
extern T2471 GE_default2471;
extern T2472 GE_default2472;
extern T2475 GE_default2475;
extern T2476 GE_default2476;
extern T2477 GE_default2477;
extern T2478 GE_default2478;
extern T2479 GE_default2479;
extern T2480 GE_default2480;
extern T2482 GE_default2482;
extern T2483 GE_default2483;
extern T2485 GE_default2485;
extern T2486 GE_default2486;
extern T2487 GE_default2487;
extern T2489 GE_default2489;
extern T2493 GE_default2493;
extern T2495 GE_default2495;
extern T2497 GE_default2497;
extern T2499 GE_default2499;
extern T2501 GE_default2501;
extern T2502 GE_default2502;
extern T2503 GE_default2503;
extern T2504 GE_default2504;
extern T2505 GE_default2505;
extern T2506 GE_default2506;
extern T2507 GE_default2507;
extern T2508 GE_default2508;
extern T2509 GE_default2509;
extern T2510 GE_default2510;
extern T2512 GE_default2512;
extern T2513 GE_default2513;
extern T2514 GE_default2514;
extern T2516 GE_default2516;
extern T2517 GE_default2517;
extern T2518 GE_default2518;
extern T2520 GE_default2520;
extern T2521 GE_default2521;
extern T2522 GE_default2522;
extern T2524 GE_default2524;
extern T2525 GE_default2525;
extern T2526 GE_default2526;
extern T2528 GE_default2528;
extern T2529 GE_default2529;
extern T2530 GE_default2530;
extern T2532 GE_default2532;
extern T2533 GE_default2533;
extern T2534 GE_default2534;
extern T2536 GE_default2536;
extern T2537 GE_default2537;
extern T2538 GE_default2538;
extern T2539 GE_default2539;
extern T2540 GE_default2540;
extern T2541 GE_default2541;
extern T2542 GE_default2542;
extern T2543 GE_default2543;
extern T2544 GE_default2544;
extern T2545 GE_default2545;
extern T2546 GE_default2546;
extern T2547 GE_default2547;
extern T2549 GE_default2549;
extern T2551 GE_default2551;
extern T2555 GE_default2555;
extern T2558 GE_default2558;
extern T2559 GE_default2559;
extern T2563 GE_default2563;
extern T2564 GE_default2564;
extern T2565 GE_default2565;
extern T2566 GE_default2566;
extern T2567 GE_default2567;
extern T2568 GE_default2568;
extern T2577 GE_default2577;
extern T2578 GE_default2578;
extern T2580 GE_default2580;
extern T2581 GE_default2581;
extern T2583 GE_default2583;
extern T2594 GE_default2594;
extern T2595 GE_default2595;
extern T2596 GE_default2596;
extern T2597 GE_default2597;
extern T2615 GE_default2615;
extern T2621 GE_default2621;
extern T2622 GE_default2622;
extern T2646 GE_default2646;
extern T2650 GE_default2650;
extern T2651 GE_default2651;
extern T2653 GE_default2653;
extern T2654 GE_default2654;
extern T2655 GE_default2655;
extern T2657 GE_default2657;
extern T2661 GE_default2661;
extern T2662 GE_default2662;
extern T2664 GE_default2664;
extern T2665 GE_default2665;
extern T2666 GE_default2666;
extern T2670 GE_default2670;
extern T2675 GE_default2675;
extern T2676 GE_default2676;
extern T2684 GE_default2684;
extern T2685 GE_default2685;
extern T2686 GE_default2686;
extern T2697 GE_default2697;
extern T2702 GE_default2702;
extern T2704 GE_default2704;
extern T2705 GE_default2705;
extern T2706 GE_default2706;
extern T2707 GE_default2707;
extern T2708 GE_default2708;
extern T2709 GE_default2709;
extern T2712 GE_default2712;
extern T2718 GE_default2718;
extern T2719 GE_default2719;
extern T2720 GE_default2720;
extern T2721 GE_default2721;
extern T2722 GE_default2722;
extern T2723 GE_default2723;
extern T2724 GE_default2724;
extern T2725 GE_default2725;
extern T2726 GE_default2726;
extern T2727 GE_default2727;
extern T2728 GE_default2728;
extern T2729 GE_default2729;
extern T2730 GE_default2730;
extern T2731 GE_default2731;
extern T2732 GE_default2732;
extern T2735 GE_default2735;
extern T2736 GE_default2736;
extern T2737 GE_default2737;
extern T2738 GE_default2738;
extern T2739 GE_default2739;
extern T2740 GE_default2740;
extern T2741 GE_default2741;
extern T2742 GE_default2742;
extern T2743 GE_default2743;
extern T2744 GE_default2744;
extern T2745 GE_default2745;
extern T2746 GE_default2746;
extern T2747 GE_default2747;
extern T2748 GE_default2748;
extern T2749 GE_default2749;
extern T2750 GE_default2750;
extern T2752 GE_default2752;
extern T2753 GE_default2753;
extern T2754 GE_default2754;
extern T2755 GE_default2755;
extern T2756 GE_default2756;
extern T2757 GE_default2757;
extern T2759 GE_default2759;
extern T2760 GE_default2760;
extern T2761 GE_default2761;
extern T2763 GE_default2763;
extern T2771 GE_default2771;
extern T2776 GE_default2776;
extern T2777 GE_default2777;
extern T2778 GE_default2778;
extern T2779 GE_default2779;
extern T2780 GE_default2780;
extern T2781 GE_default2781;
extern T2782 GE_default2782;
extern T2783 GE_default2783;
extern T2788 GE_default2788;
extern T2790 GE_default2790;
extern T2793 GE_default2793;
extern T2795 GE_default2795;
extern T2796 GE_default2796;
extern T2797 GE_default2797;
extern T2798 GE_default2798;
extern T2800 GE_default2800;
extern T2802 GE_default2802;
extern T2804 GE_default2804;
extern T2807 GE_default2807;
extern T2808 GE_default2808;
extern T2811 GE_default2811;
extern T2812 GE_default2812;
extern T2813 GE_default2813;
extern T2814 GE_default2814;
extern T2815 GE_default2815;
extern T2816 GE_default2816;
extern T2817 GE_default2817;
extern T2818 GE_default2818;
extern T2820 GE_default2820;
extern T2821 GE_default2821;
extern T2823 GE_default2823;
extern T2824 GE_default2824;
extern T2825 GE_default2825;
extern T2826 GE_default2826;
extern T2827 GE_default2827;
extern T2828 GE_default2828;
extern T2830 GE_default2830;
extern T2831 GE_default2831;
extern T2836 GE_default2836;
extern T2838 GE_default2838;
extern T2841 GE_default2841;
extern T2844 GE_default2844;
extern T2845 GE_default2845;
extern T2846 GE_default2846;
extern T2847 GE_default2847;
extern T2848 GE_default2848;

extern T0* GE_new_str8(T6 c);
extern T0* GE_new_str32(T6 c);
extern T0* GE_new_istr32(T6 c);
/* Call to ANY.same_type */
extern T1 T23x49156T0(GE_context* ac, T0* C, T0* a1);
/* Call to KI_CHARACTER_INPUT_STREAM.name */
extern T0* T39x5849095(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_to_string */
extern T6 T39x5734401T0T6T6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* Call to KI_CHARACTER_INPUT_STREAM.is_closable */
extern T1 T39x5849090(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.end_of_input */
extern T1 T39x5849093(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.last_character */
extern T2 T39x5849096(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.is_equal_seed */
extern T6 T40x20037639(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.attachment_type_conformance_mode */
extern T1 T40x20037651(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.default_create_seed */
extern T6 T40x20037637(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.detachable_any_type */
extern T0* T40x20070432(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.is_dotnet */
extern T1 T40x20037633(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.target_type_attachment_mode */
extern T1 T40x20037652(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_type */
extern T0* T40x20070431(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.array_like_current_type */
extern T0* T40x20070441(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.none_type */
extern T0* T40x20070464(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.array_any_type */
extern T0* T40x20070438(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.array_none_type */
extern T0* T40x20070440(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.array_detachable_any_type */
extern T0* T40x20070439(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.detachable_none_type */
extern T0* T40x20070465(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.iteration_cursor_forth_seed */
extern T6 T40x20037645(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.iteration_cursor_after_seed */
extern T6 T40x20037644(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.iterable_new_cursor_seed */
extern T6 T40x20037643(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.routine_call_seed */
extern T6 T40x20037641(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.character_32_type */
extern T0* T40x20070445(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_clients */
extern T0* T40x20070437(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.copy_seed */
extern T6 T40x20037638(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.real_32_type */
extern T0* T40x20070470(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.string_32_type */
extern T0* T40x20070478(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.string_8_type */
extern T0* T40x20070477(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.function_item_seed */
extern T6 T40x20037642(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_parent */
extern T0* T40x20070435(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.alias_transition_mode */
extern T1 T40x20037655(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.scoop_mode */
extern T1 T40x20037650(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.system_object_parents */
extern T0* T40x20070480(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_parents */
extern T0* T40x20070436(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.type_any_type */
extern T0* T40x20070486(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.dispose_seed */
extern T6 T40x20037640(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.console_application_mode */
extern T1 T40x20037648(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.multithreaded_mode */
extern T1 T40x20037649(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.exception_trace_mode */
extern T1 T40x20037653(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.trace_mode */
extern T1 T40x20037654(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.class_count_recursive */
extern T6 T40x20070428(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.root_type */
extern T0* T40x20037634(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_resource_pathnames */
extern T0* T40x20037662(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_make_pathnames */
extern T0* T40x20037661(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_object_pathnames */
extern T0* T40x20037659(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_library_pathnames */
extern T0* T40x20037660(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_linker_flags */
extern T0* T40x20037664(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_cflags */
extern T0* T40x20037663(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_include_pathnames */
extern T0* T40x20037658(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_boehm_gc */
extern T1 T40x20037656(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.universe */
extern T0* T40x19709958(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.ise_exception_manager_type */
extern T0* T40x20070457(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.pointer_type */
extern T0* T40x20070466(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.detachable_tuple_type */
extern T0* T40x20070483(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.routine_type */
extern T0* T40x20070472(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.typed_pointer_any_type */
extern T0* T40x20070494(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.special_any_type */
extern T0* T40x20070473(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.immutable_string_32_type */
extern T0* T40x20070451(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.character_8_type */
extern T0* T40x20070444(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.real_64_type */
extern T0* T40x20070471(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_64_type */
extern T0* T40x20070463(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_32_type */
extern T0* T40x20070462(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_16_type */
extern T0* T40x20070461(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_8_type */
extern T0* T40x20070460(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_64_type */
extern T0* T40x20070456(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_32_type */
extern T0* T40x20070455(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_16_type */
extern T0* T40x20070454(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_8_type */
extern T0* T40x20070453(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.boolean_type */
extern T0* T40x20070442(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.root_creation */
extern T0* T40x20037635(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.master_classes */
extern T0* T40x20070406(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.system_name */
extern T0* T40x20037657(GE_context* ac, T0* C);
/* Call to AP_OPTION.short_form */
extern T2 T51x5275656(GE_context* ac, T0* C);
/* Call to AP_OPTION.long_form */
extern T0* T51x5275651(GE_context* ac, T0* C);
/* Call to AP_OPTION.description */
extern T0* T51x5275649(GE_context* ac, T0* C);
/* Call to AP_OPTION.names */
extern T0* T51x5275653(GE_context* ac, T0* C);
/* Call to AP_OPTION.is_hidden */
extern T1 T51x5275660(GE_context* ac, T0* C);
/* Call to AP_OPTION.name */
extern T0* T51x5275652(GE_context* ac, T0* C);
/* Call to AP_OPTION.has_short_form */
extern T1 T51x5275659(GE_context* ac, T0* C);
/* Call to AP_OPTION.maximum_occurrences */
extern T6 T51x5275655(GE_context* ac, T0* C);
/* Call to AP_OPTION.occurrences */
extern T6 T51x5275654(GE_context* ac, T0* C);
/* Call to AP_OPTION.was_found */
extern T1 T51x5275664(GE_context* ac, T0* C);
/* Call to AP_OPTION.is_mandatory */
extern T1 T51x5275661(GE_context* ac, T0* C);
/* Call to AP_OPTION.example */
extern T0* T51x5275650(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.conforms_to_type */
extern T1 T83x23003194T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.shallow_named_type_with_type_mark */
extern T0* T83x23003151T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.same_base_type_with_type_marks */
extern T1 T83x23003181T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.base_class */
extern T0* T83x23035907(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.type_with_type_mark */
extern T0* T83x23003154T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.actual_parameters */
extern T0* T83x22462468(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.base_type_index_of_label */
extern T6 T83x23003147T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.base_type_actual */
extern T0* T83x23003145T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_attached_with_type_mark */
extern T1 T83x23003165T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_reference_with_type_mark */
extern T1 T83x23003163T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.base_type_with_type_mark */
extern T0* T83x23003142T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_detachable_with_type_mark */
extern T1 T83x23003167T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T83x23003193T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_base_class_type_with_type_marks */
extern T1 T83x23003191T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.actual_parameter_count */
extern T6 T83x22462476(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.named_base_class */
extern T0* T83x23035908(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.index_of_label */
extern T6 T83x22462473T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.shallow_base_type_with_type_mark */
extern T0* T83x23003144T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.to_text */
extern T0* T83x23003206(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.unaliased_to_text */
extern T0* T83x23003207(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.is_type_expanded_with_type_mark */
extern T1 T83x23003161T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T83x23003189T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T83x23003197T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T83x23003198T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T83x23003196T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.base_type_actual_count */
extern T6 T83x23003156T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.conforms_to_type_with_type_marks */
extern T1 T83x23003195T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T83x23003190T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_named_class_type_with_type_marks */
extern T1 T83x23003188T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.named_type_with_type_mark */
extern T0* T83x23003149T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.same_named_type_with_type_marks */
extern T1 T83x23003179T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.is_expanded */
extern T1 T83x22462480(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.same_as_base_class */
extern T1 T83x22462485(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.same_named_type */
extern T1 T83x23003178T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to READABLE_STRING_GENERAL.code */
extern T10 T99x2031617T6(GE_context* ac, T0* C, T6 a1);
/* Call to READABLE_STRING_GENERAL.count */
extern T6 T99x2031655(GE_context* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.substring */
extern T0* T99x2031696T6T6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* Call to READABLE_STRING_GENERAL.item */
extern T3 T99x2031618T6(GE_context* ac, T0* C, T6 a1);
/* Call to UT_ERROR.default_message */
extern T0* T101x11436035(GE_context* ac, T0* C);
/* Call to detachable AP_OPTION.needs_parameter */
extern T1 T174x5275662(GE_context* ac, T0* C);
/* Call to detachable AP_OPTION.allows_parameter */
extern T1 T174x5275657(GE_context* ac, T0* C);
/* Call to attached KL_EQUALITY_TESTER [[attached] STRING_8].test */
extern T1 T206x7258113T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_ECF_SYSTEM_CONFIG.filename */
extern T0* T233x15106051(GE_context* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.ecf_version */
extern T0* T233x15106054(GE_context* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.universe */
extern T0* T233x15106060(GE_context* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.library_target */
extern T0* T233x15106056(GE_context* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.targets */
extern T0* T233x15106055(GE_context* ac, T0* C);
/* Call to ET_POSITION.column */
extern T6 T246x21184514(GE_context* ac, T0* C);
/* Call to ET_POSITION.line */
extern T6 T246x21184513(GE_context* ac, T0* C);
/* Call to ET_POSITION.to_text */
extern T0* T246x21184519(GE_context* ac, T0* C);
/* Call to ET_POSITION.is_null */
extern T1 T246x21184515(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_DOTNET_ASSEMBLY.dotnet_assembly */
extern T0* T266x19709958(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T320x24641549T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T320x24641570T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.is_basic */
extern T1 T320x24641545(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_expanded */
extern T1 T320x24739841(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.base_type */
extern T0* T320x24641550(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.base_class */
extern T0* T320x24641551(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T320x24641542(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T320x24641571T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T320x24641568T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T320x24641569T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.queries */
extern T0* T320x24641566(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.attribute_count */
extern T6 T320x24641562(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.id */
extern T6 T320x24641560(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_special */
extern T1 T320x24641543(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_builtin_attribute */
extern T1 T320x24641572T0T8T8(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* Call to ET_DYNAMIC_TYPE.meta_type */
extern T0* T320x24641552(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.has_nested_reference_attributes */
extern T1 T320x24641564(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.hash_code */
extern T6 T320x458753(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_generic */
extern T1 T320x24641541(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_alive */
extern T1 T320x24641537(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.next_type */
extern T0* T320x24641578(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.procedure_calls */
extern T0* T320x24641574(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.query_calls */
extern T0* T320x24641573(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.procedures */
extern T0* T320x24641567(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.static_type */
extern T0* T320x24739845(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.conforming_ancestors */
extern T0* T320x24641556(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_tuple */
extern T1 T320x24641544(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.has_static */
extern T1 T320x24641546(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE.is_basic */
extern T1 T323x24641545(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE.is_expanded */
extern T1 T323x24739841(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE.has_nested_reference_attributes */
extern T1 T323x24641564(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE.base_type */
extern T0* T323x24641550(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE.base_class */
extern T0* T323x24641551(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE.id */
extern T6 T323x24641560(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T323x24641569T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to detachable ET_FEATURE_NAME.lower_name */
extern T0* T324x21544962(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.is_creation_exported_to */
extern T1 T325x18841656T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to detachable ET_PROCEDURE.first_seed */
extern T6 T325x18923531(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.arguments_count */
extern T6 T325x18841653(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.arguments */
extern T0* T325x18923530(GE_context* ac, T0* C);
/* Call to detachable ET_PROCEDURE.has_seed */
extern T1 T325x18923526T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_PROCEDURE.new_synonym */
extern T0* T325x18841660T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_PROCEDURE.name */
extern T0* T325x18923528(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.type */
extern T0* T326x18923529(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.assigner */
extern T0* T326x19349507(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.is_exported_to */
extern T1 T326x18841654T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to detachable ET_QUERY.first_seed */
extern T6 T326x18923531(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.is_attribute */
extern T1 T326x18841631(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.arguments */
extern T0* T326x18923530(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.has_seed */
extern T1 T326x18923526T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_QUERY.is_unique_attribute */
extern T1 T326x18841633(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.is_constant_attribute */
extern T1 T326x18841632(GE_context* ac, T0* C);
/* Call to detachable ET_QUERY.new_synonym */
extern T0* T326x18841660T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.last_leaf */
extern T0* T328x20955141(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_tuple_label */
extern T1 T328x21544969(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.name */
extern T0* T328x21544961(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.lower_name */
extern T0* T328x21544962(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.position */
extern T0* T328x20955137(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.seed */
extern T6 T328x21544963(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.first_leaf */
extern T0* T328x20955140(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.across_cursor_name */
extern T0* T328x21545005(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_across_cursor */
extern T1 T328x21544967(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.object_test_local_name */
extern T0* T328x21545004(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_object_test_local */
extern T1 T328x21544966(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.local_name */
extern T0* T328x21545002(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_local */
extern T1 T328x21544965(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.argument_name */
extern T0* T328x21545003(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_argument */
extern T1 T328x21544968(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.same_feature_name */
extern T1 T328x21676035T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.hash_code */
extern T6 T328x458753(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_prefix */
extern T1 T328x21544991(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_infix */
extern T1 T328x21544971(GE_context* ac, T0* C);
/* Call to ET_TYPE.last_leaf */
extern T0* T330x20955141(GE_context* ac, T0* C);
/* Call to ET_TYPE.position */
extern T0* T330x20955137(GE_context* ac, T0* C);
/* Call to ET_TYPE.base_class */
extern T0* T330x23003139T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_identifier_anchored_type */
extern T1 T330x23003169(GE_context* ac, T0* C);
/* Call to ET_TYPE.depends_on_qualified_anchored_type */
extern T1 T330x23003170T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.conforms_to_type */
extern T1 T330x23003194T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.named_type */
extern T0* T330x23003148T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_syntactical_type */
extern T1 T330x23003176T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.resolved_formal_parameters */
extern T0* T330x23003199T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_formal_types */
extern T1 T330x23003171T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_anchored_type */
extern T1 T330x23003168(GE_context* ac, T0* C);
/* Call to ET_TYPE.same_named_type */
extern T1 T330x23003178T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.same_named_type_with_type_marks */
extern T1 T330x23003179T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.shallow_named_type_with_type_mark */
extern T0* T330x23003151T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_base_type_with_type_marks */
extern T1 T330x23003181T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.to_text */
extern T0* T330x23003206(GE_context* ac, T0* C);
/* Call to ET_TYPE.is_type_detachable */
extern T1 T330x23003166T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_base_type */
extern T1 T330x23003159(GE_context* ac, T0* C);
/* Call to ET_TYPE.is_type_attached */
extern T1 T330x23003164T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_like_current */
extern T1 T330x23003157(GE_context* ac, T0* C);
/* Call to ET_TYPE.shallow_named_type */
extern T0* T330x23003150T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_expanded */
extern T1 T330x23003160T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.shallow_base_type_with_type_mark */
extern T0* T330x23003144T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.base_type_index_of_label */
extern T6 T330x23003147T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.base_type_with_type_mark */
extern T0* T330x23003142T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.base_type_actual */
extern T0* T330x23003145T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE.type_with_type_mark */
extern T0* T330x23003154T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T330x23003184T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T330x23003187T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T330x23003182T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T330x23003185T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T330x23003186T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.named_base_class */
extern T0* T330x23003140T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_attached_with_type_mark */
extern T1 T330x23003165T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_reference_with_type_mark */
extern T1 T330x23003163T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_detachable_with_type_mark */
extern T1 T330x23003167T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T330x23003193T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_base_class_type_with_type_marks */
extern T1 T330x23003191T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T330x23003183T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_type_with_type_marks */
extern T1 T330x23003177T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.is_type_expanded_with_type_mark */
extern T1 T330x23003161T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T330x23003189T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.conforms_to_type_with_type_marks */
extern T1 T330x23003195T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T330x23003197T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T330x23003198T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T330x23003196T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.base_type_actual_count */
extern T6 T330x23003156T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T330x23003190T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_class_type_with_type_marks */
extern T1 T330x23003188T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.named_type_with_type_mark */
extern T0* T330x23003149T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_reference */
extern T1 T330x23003162T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_named_type */
extern T1 T330x23003158(GE_context* ac, T0* C);
/* Call to ET_TYPE.shallow_base_type */
extern T0* T330x23003143T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.base_type */
extern T0* T330x23003141T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.type */
extern T0* T330x23052289(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.to_nested_type_context */
extern T0* T331x23035952(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.as_nested_type_context */
extern T0* T331x23035951(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.root_context */
extern T0* T331x23035905(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.is_root_context */
extern T1 T331x23035918(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_actual */
extern T0* T331x23035911T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_TYPE_CONTEXT.base_type_actual_count */
extern T6 T331x23035916(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_class */
extern T0* T331x23035907(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.scoop_mode */
extern T1 T331x23035931(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T331x23035930(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.named_type */
extern T0* T331x23035914(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.same_base_type_with_type_marks */
extern T1 T331x23035937T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T331x23035925T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T331x23035923T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T331x23035939T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T331x23035949T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T331x23035915T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T331x23035933T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T331x23035945T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T331x23035927T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T331x23035940T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T331x23035938T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T331x23035950T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T331x23035948T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.same_base_tuple_type_with_type_marks */
extern T1 T331x23035943T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_base_class_type_with_type_marks */
extern T1 T331x23035941T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T331x23035910T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T331x23035921T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.named_base_class */
extern T0* T331x23035908(GE_context* ac, T0* C);
/* Call to ET_QUERY.lower_name */
extern T0* T334x19546115(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_attribute */
extern T1 T334x18841631(GE_context* ac, T0* C);
/* Call to ET_QUERY.hash_code */
extern T6 T334x458753(GE_context* ac, T0* C);
/* Call to ET_QUERY.type */
extern T0* T334x18923529(GE_context* ac, T0* C);
/* Call to ET_QUERY.first_seed */
extern T6 T334x18923531(GE_context* ac, T0* C);
/* Call to ET_QUERY.overloaded_alias_name */
extern T0* T334x18841607(GE_context* ac, T0* C);
/* Call to ET_QUERY.alias_name */
extern T0* T334x18841603(GE_context* ac, T0* C);
/* Call to ET_QUERY.overloaded_name */
extern T0* T334x18841606(GE_context* ac, T0* C);
/* Call to ET_QUERY.name */
extern T0* T334x18923528(GE_context* ac, T0* C);
/* Call to ET_QUERY.arguments */
extern T0* T334x18923530(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_exported_to */
extern T1 T334x18841654T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_QUERY.is_static */
extern T1 T334x18841637(GE_context* ac, T0* C);
/* Call to ET_QUERY.arguments_count */
extern T6 T334x18841653(GE_context* ac, T0* C);
/* Call to ET_QUERY.implementation_feature */
extern T0* T334x18432013(GE_context* ac, T0* C);
/* Call to ET_QUERY.implementation_class */
extern T0* T334x19546117(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_prefixable */
extern T1 T334x18841642(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_infixable */
extern T1 T334x18841641(GE_context* ac, T0* C);
/* Call to ET_QUERY.postconditions */
extern T0* T334x18432010(GE_context* ac, T0* C);
/* Call to ET_QUERY.preconditions */
extern T0* T334x18432009(GE_context* ac, T0* C);
/* Call to ET_QUERY.assigner */
extern T0* T334x19349507(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_once_per_object */
extern T1 T334x18432004(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_once */
extern T1 T334x18432001(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_parenthesisable */
extern T1 T334x18841644(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_bracketable */
extern T1 T334x18841643(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_frozen */
extern T1 T334x18841627(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_deferred */
extern T1 T334x18841628(GE_context* ac, T0* C);
/* Call to ET_QUERY.has_seed */
extern T1 T334x18923526T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_PROCEDURE.hash_code */
extern T6 T335x458753(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_static */
extern T1 T335x18841637(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_exported_to */
extern T1 T335x18841654T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_PROCEDURE.first_seed */
extern T6 T335x18923531(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.overloaded_alias_name */
extern T0* T335x18841607(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.alias_name */
extern T0* T335x18841603(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.overloaded_name */
extern T0* T335x18841606(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.name */
extern T0* T335x18923528(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.arguments */
extern T0* T335x18923530(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.implementation_class */
extern T0* T335x19546117(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.postconditions */
extern T0* T335x18432010(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.preconditions */
extern T0* T335x18432009(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_parenthesisable */
extern T1 T335x18841644(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_frozen */
extern T1 T335x18841627(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_deferred */
extern T1 T335x18841628(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.has_seed */
extern T1 T335x18923526T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_UNIVERSE.adapted_universe */
extern T0* T336x20070418T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.shortest_path */
extern T0* T336x20070419T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.full_lower_name */
extern T0* T336x20070423T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_UNIVERSE.kind_name */
extern T0* T336x20070425(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_64_convert_feature */
extern T0* T336x20070510(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_64_type */
extern T0* T336x20070471(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_32_convert_feature */
extern T0* T336x20070509(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_32_type */
extern T0* T336x20070470(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_64_convert_feature */
extern T0* T336x20070508(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_64_type */
extern T0* T336x20070463(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_32_convert_feature */
extern T0* T336x20070507(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_32_type */
extern T0* T336x20070462(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_16_convert_feature */
extern T0* T336x20070506(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_16_type */
extern T0* T336x20070461(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_8_convert_feature */
extern T0* T336x20070505(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_8_type */
extern T0* T336x20070460(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_64_convert_feature */
extern T0* T336x20070504(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_64_type */
extern T0* T336x20070456(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_32_convert_feature */
extern T0* T336x20070503(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_32_type */
extern T0* T336x20070455(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_16_convert_feature */
extern T0* T336x20070502(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_16_type */
extern T0* T336x20070454(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_8_convert_feature */
extern T0* T336x20070501(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_8_type */
extern T0* T336x20070453(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_32_convert_feature */
extern T0* T336x20070500(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_32_type */
extern T0* T336x20070445(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_8_convert_feature */
extern T0* T336x20070499(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_8_type */
extern T0* T336x20070444(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_32_convert_feature */
extern T0* T336x20070512(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_32_type */
extern T0* T336x20070478(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_8_convert_feature */
extern T0* T336x20070511(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_8_type */
extern T0* T336x20070477(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.boolean_type */
extern T0* T336x20070442(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.master_class */
extern T0* T336x20070407T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.tuple_type */
extern T0* T336x20070482(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.function_type */
extern T0* T336x20070450(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.predicate_like_current_type */
extern T0* T336x20070467(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.procedure_like_current_type */
extern T0* T336x20070468(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.pointer_type */
extern T0* T336x20070466(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.typed_pointer_like_current_type */
extern T0* T336x20070495(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.tuple_like_current_type */
extern T0* T336x20070484(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_like_current_type */
extern T0* T336x20070493(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.any_type */
extern T0* T336x20070431(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_type */
extern T0* T336x20070452(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.iterable_detachable_any_type */
extern T0* T336x20070458(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_any_type */
extern T0* T336x20070432(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.hash_code */
extern T6 T336x458753(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.has_master_class */
extern T1 T336x20070401T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.relative_name */
extern T0* T336x20070420T0T2(GE_context* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_UNIVERSE.relative_lower_name */
extern T0* T336x20070421T0T2(GE_context* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_UNIVERSE.implicit_attachment_type_mark */
extern T0* T336x20070497(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.unfolded_empty_tuple_actual_parameters */
extern T0* T336x20070485(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.obsolete_routine_type_mode */
extern T1 T336x20070498(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.immutable_string_32_type */
extern T0* T336x20070451(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.system_string_type */
extern T0* T336x20070481(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_type */
extern T0* T336x20070475(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_separate_any_type */
extern T0* T336x20070433(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.double_type */
extern T0* T336x20070446(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_type */
extern T0* T336x20070469(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_string_type */
extern T0* T336x20070476(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.special_any_type */
extern T0* T336x20070473(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_any_type */
extern T0* T336x20070488(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.special_detachable_any_type */
extern T0* T336x20070474(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.exception_manager_type */
extern T0* T336x20070449(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_exception_type */
extern T0* T336x20070492(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.exception_type */
extern T0* T336x20070447(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_type_exception_type */
extern T0* T336x20070491(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_exception_type */
extern T0* T336x20070448(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_like_current_type */
extern T0* T336x20070490(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.current_system */
extern T0* T336x20070417(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.full_name */
extern T0* T336x20070422T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_UNIVERSE.classes_in_group */
extern T0* T336x20070412T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.system_object_parents */
extern T0* T336x20070480(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.any_parents */
extern T0* T336x20070436(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.system_object_type */
extern T0* T336x20070479(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_type */
extern T0* T336x20070459(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.wide_character_type */
extern T0* T336x20070496(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_type */
extern T0* T336x20070443(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.resolved_formal_parameters_with_type */
extern T0* T337x22413317T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.type */
extern T0* T337x22413314(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.actual_parameter */
extern T0* T337x22413313(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_MARK.is_attached_mark */
extern T1 T339x21397511(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_MARK.is_detachable_mark */
extern T1 T339x21397512(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_MARK.is_attachment_mark */
extern T1 T339x21397510(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_MARK.position */
extern T0* T339x20955137(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_MARK.is_separateness_mark */
extern T1 T339x21397508(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_MARK.is_expanded_mark */
extern T1 T339x21397506(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_MARK.is_expandedness_mark */
extern T1 T339x21397505(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_MARK.is_separate_mark */
extern T1 T339x21397509(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE_MARK.is_reference_mark */
extern T1 T339x21397507(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.last_leaf */
extern T0* T340x20955141(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.type */
extern T0* T340x22380547T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T340x22380546T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETERS.count */
extern T6 T340x22380545(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.is_empty */
extern T1 T340x22380551(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T340x22380553(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.index_of_label */
extern T6 T340x22380549T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T340x22380554T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T340x22380557T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T340x22380555T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_anchored_type */
extern T1 T340x22380552(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.same_named_types */
extern T1 T340x22380558T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T340x22380559T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to detachable ET_DYNAMIC_TYPE_SET.static_type */
extern T0* T342x24739845(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE_SET.is_expanded */
extern T1 T342x24739841(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE_SET.is_empty */
extern T1 T342x24657925(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE_SET.special_type */
extern T0* T342x24657922(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPE_SET.dynamic_type */
extern T0* T342x24657921T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_DYNAMIC_TYPE_SET.count */
extern T6 T342x24657924(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.static_type */
extern T0* T343x24739845(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_never_void */
extern T1 T343x24739842(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.can_be_void */
extern T1 T343x24739843(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_type */
extern T0* T343x24657921T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE_SET.count */
extern T6 T343x24657924(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_expanded */
extern T1 T343x24657928(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_expanded */
extern T1 T343x24739841(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_types */
extern T0* T343x24739847(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_empty */
extern T1 T343x24657925(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_type */
extern T1 T343x24657926T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.last_leaf */
extern T0* T389x20955141(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.position */
extern T0* T389x20955137(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_instance_free */
extern T1 T389x17416196(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_false */
extern T1 T389x17694727(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T389x17694731T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_EXPRESSION.unparenthesized_expression */
extern T0* T389x17694724(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.index */
extern T6 T389x18071555(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_current */
extern T1 T389x17694726(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_instance_free */
extern T1 T389x18071554(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_never_void */
extern T1 T389x17694725(GE_context* ac, T0* C);
/* Call to ET_FEATURE.lower_name */
extern T0* T393x19546115(GE_context* ac, T0* C);
/* Call to ET_FEATURE.name */
extern T0* T393x18923528(GE_context* ac, T0* C);
/* Call to ET_FEATURE.has_seed */
extern T1 T393x18923526T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.first_seed */
extern T6 T393x18923531(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_exported_to */
extern T1 T393x18841654T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FEATURE.clients */
extern T0* T393x19546119(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_static */
extern T1 T393x18841637(GE_context* ac, T0* C);
/* Call to ET_FEATURE.arguments */
extern T0* T393x18923530(GE_context* ac, T0* C);
/* Call to ET_FEATURE.extended_name */
extern T0* T393x18841604(GE_context* ac, T0* C);
/* Call to ET_FEATURE.arguments_count */
extern T6 T393x18841653(GE_context* ac, T0* C);
/* Call to ET_FEATURE.implementation_feature */
extern T0* T393x18432013(GE_context* ac, T0* C);
/* Call to ET_FEATURE.implementation_class */
extern T0* T393x19546117(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_procedure */
extern T1 T393x18841635(GE_context* ac, T0* C);
/* Call to ET_FEATURE.are_postconditions_instance_free_recursive */
extern T1 T393x18841646(GE_context* ac, T0* C);
/* Call to ET_FEATURE.are_preconditions_instance_free_recursive */
extern T1 T393x18841645(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_deferred */
extern T1 T393x18841628(GE_context* ac, T0* C);
/* Call to ET_FEATURE.version */
extern T6 T393x18841612(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_unique_attribute */
extern T1 T393x18841633(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_constant_attribute */
extern T1 T393x18841632(GE_context* ac, T0* C);
/* Call to ET_FEATURE.type */
extern T0* T393x18923529(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_once_per_process */
extern T1 T393x18432002(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_attribute */
extern T1 T393x18841631(GE_context* ac, T0* C);
/* Call to ET_FEATURE.has_class_postcondition_recursive */
extern T1 T393x18841647(GE_context* ac, T0* C);
/* Call to ET_FEATURE.alias_name */
extern T0* T393x18841603(GE_context* ac, T0* C);
/* Call to ET_FEATURE.other_seeds */
extern T0* T393x18923532(GE_context* ac, T0* C);
/* Call to ET_FEATURE.hash_code */
extern T6 T393x458753(GE_context* ac, T0* C);
/* Call to ET_FEATURE.preconditions */
extern T0* T393x18432009(GE_context* ac, T0* C);
/* Call to ET_FEATURE.other_precursors */
extern T0* T393x18841614(GE_context* ac, T0* C);
/* Call to ET_FEATURE.first_precursor */
extern T0* T393x19546116(GE_context* ac, T0* C);
/* Call to ET_FEATURE.has_validity_error */
extern T1 T393x19546121(GE_context* ac, T0* C);
/* Call to ET_FEATURE.validity_checked */
extern T1 T393x19546120(GE_context* ac, T0* C);
/* Call to ET_FEATURE.postconditions */
extern T0* T393x18432010(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_frozen */
extern T1 T393x18841627(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_infixable */
extern T1 T393x18841641(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_prefixable */
extern T1 T393x18841642(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_parenthesisable */
extern T1 T393x18841644(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_bracketable */
extern T1 T393x18841643(GE_context* ac, T0* C);
/* Call to ET_FEATURE.id */
extern T6 T393x18841611(GE_context* ac, T0* C);
/* Call to ET_FEATURE.renamed_feature */
extern T0* T393x18841661T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.undefined_feature */
extern T0* T393x18841662T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.same_version */
extern T1 T393x18841659T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.is_dotnet */
extern T1 T393x18923525(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_query */
extern T1 T393x18841634(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_once */
extern T1 T393x18432001(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.last_leaf */
extern T0* T394x20955141(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.feature_name */
extern T0* T394x22151169(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.name */
extern T0* T425x17465346(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.arguments */
extern T0* T425x17465347(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.position */
extern T0* T425x20955137(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.is_tuple_label */
extern T1 T425x17465349(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.is_call_agent */
extern T1 T425x17465350(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.position */
extern T0* T426x20955137(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.seed */
extern T6 T426x21544963(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_tuple_label */
extern T1 T426x21544969(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.lower_name */
extern T0* T426x21544962(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.name */
extern T0* T426x21544961(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else */
extern T1 T426x21544985(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_implies */
extern T1 T426x21544979(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then */
extern T1 T426x21544973(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.precursor_keyword */
extern T0* T426x21545001(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_precursor */
extern T1 T426x21544999(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_xor */
extern T1 T426x21544989(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_times */
extern T1 T426x21544988(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_power */
extern T1 T426x21544987(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_plus */
extern T1 T426x21544986(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or */
extern T1 T426x21544984(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_mod */
extern T1 T426x21544983(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_minus */
extern T1 T426x21544982(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_lt */
extern T1 T426x21544981(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_le */
extern T1 T426x21544980(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_gt */
extern T1 T426x21544978(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_ge */
extern T1 T426x21544977(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_divide */
extern T1 T426x21544975(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_div */
extern T1 T426x21544974(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and */
extern T1 T426x21544972(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_not */
extern T1 T426x21544995(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_plus */
extern T1 T426x21544993(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_minus */
extern T1 T426x21544992(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.hash_code */
extern T6 T426x458753(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_dotdot */
extern T1 T426x21544990(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_parenthesis */
extern T1 T426x21544997(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_bracket */
extern T1 T426x21544996(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.same_call_name */
extern T1 T426x21545000T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CALL_NAME.feature_name */
extern T0* T426x21545006(GE_context* ac, T0* C);
/* Call to ET_AGENT.target */
extern T0* T430x15400962(GE_context* ac, T0* C);
/* Call to ET_AGENT.arguments */
extern T0* T430x15400963(GE_context* ac, T0* C);
/* Call to ET_AGENT.implicit_target_position */
extern T0* T430x15400970(GE_context* ac, T0* C);
/* Call to ET_AGENT.position */
extern T0* T430x20955137(GE_context* ac, T0* C);
/* Call to ET_AGENT.is_inline_agent */
extern T1 T430x15400968(GE_context* ac, T0* C);
/* Call to ET_AGENT.index */
extern T6 T430x18071555(GE_context* ac, T0* C);
/* Call to ET_AGENT.is_qualified_call */
extern T1 T430x15400965(GE_context* ac, T0* C);
/* Call to ET_AGENT.implicit_result */
extern T0* T430x15400964(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.expression */
extern T0* T431x18022404(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.index */
extern T6 T431x18071555(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.type */
extern T0* T431x18022403(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.name */
extern T0* T431x18022405(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE.to_text */
extern T0* T436x23003206(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE.shallow_named_type_with_type_mark */
extern T0* T436x23003151T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to detachable ET_TYPE.is_like_current */
extern T1 T436x23003157(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE.shallow_named_type */
extern T0* T436x23003150T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_TYPE.named_type */
extern T0* T436x23003148T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_TYPE.base_class */
extern T0* T436x23003139T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_TYPE.is_base_type */
extern T1 T436x23003159(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE.position */
extern T0* T436x20955137(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE.is_named_type */
extern T1 T436x23003158(GE_context* ac, T0* C);
/* Call to detachable ET_TYPE.same_syntactical_type */
extern T1 T436x23003176T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to detachable ET_TYPE.conforms_to_type */
extern T1 T436x23003194T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to detachable ET_TYPE.same_syntactical_type_with_type_marks */
extern T1 T436x23003177T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to detachable ET_TYPE.same_named_type */
extern T1 T436x23003178T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to detachable ET_TYPE.is_type_reference */
extern T1 T436x23003162T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_TYPE.is_type_expanded */
extern T1 T436x23003160T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CONSTANT.is_string_constant */
extern T1 T437x17039365(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_character_constant */
extern T1 T437x17039362(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_boolean_constant */
extern T1 T437x17039361(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.index */
extern T6 T437x18071555(GE_context* ac, T0* C);
/* Call to detachable ET_ACTUAL_PARAMETERS.type */
extern T0* T443x22380547T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_ACTUAL_PARAMETERS.count */
extern T6 T443x22380545(GE_context* ac, T0* C);
/* Call to detachable ET_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T443x22380562T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_ACTUAL_PARAMETERS.is_empty */
extern T1 T443x22380551(GE_context* ac, T0* C);
/* Call to detachable ET_ACTUAL_PARAMETERS.named_types */
extern T0* T443x22380548T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TARGET_TYPE.position */
extern T0* T446x20955137(GE_context* ac, T0* C);
/* Call to ET_TARGET_TYPE.type */
extern T0* T446x22970369(GE_context* ac, T0* C);
/* Call to ET_TARGET_TYPE.last_leaf */
extern T0* T446x20955141(GE_context* ac, T0* C);
/* Call to detachable ET_ARGUMENT_OPERANDS.actual_argument */
extern T0* T458x17416197T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_ARGUMENT_OPERANDS.count */
extern T6 T458x17416198(GE_context* ac, T0* C);
/* Call to detachable ET_ARGUMENT_OPERANDS.is_empty */
extern T1 T458x17416194(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE.has_seed */
extern T1 T460x18923526T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_FEATURE.arguments_count */
extern T6 T460x18841653(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE.arguments */
extern T0* T460x18923530(GE_context* ac, T0* C);
/* Call to detachable ET_FEATURE.type */
extern T0* T460x18923529(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION_ITEM.expression */
extern T0* T463x17760257(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION_ITEM.position */
extern T0* T463x20955137(GE_context* ac, T0* C);
/* Call to ET_OPERAND.index */
extern T6 T466x18071555(GE_context* ac, T0* C);
/* Call to ET_OPERAND.is_open_operand */
extern T1 T466x18071553(GE_context* ac, T0* C);
/* Call to ET_AGENT_TARGET.index */
extern T6 T467x18071555(GE_context* ac, T0* C);
/* Call to ET_AGENT_TARGET.is_instance_free */
extern T1 T467x18071554(GE_context* ac, T0* C);
/* Call to ET_AGENT_TARGET.position */
extern T0* T467x20955137(GE_context* ac, T0* C);
/* Call to ET_AGENT_TARGET.is_open_operand */
extern T1 T467x18071553(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_instance_free */
extern T1 T470x18071554(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_open_operand */
extern T1 T470x18071553(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.index */
extern T6 T470x18071555(GE_context* ac, T0* C);
/* Call to ET_SYMBOL.position */
extern T0* T474x20955137(GE_context* ac, T0* C);
/* Call to ET_SYMBOL.is_question_mark */
extern T1 T474x21397519(GE_context* ac, T0* C);
/* Call to ET_SYMBOL.is_bang */
extern T1 T474x21397520(GE_context* ac, T0* C);
/* Call to detachable ET_ACTUAL_ARGUMENTS.actual_argument */
extern T0* T482x17416197T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_ACTUAL_ARGUMENTS.count */
extern T6 T482x17416198(GE_context* ac, T0* C);
/* Call to detachable ET_ACTUAL_ARGUMENTS.is_empty */
extern T1 T482x17416194(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.actual_argument */
extern T0* T483x17416197T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_ARGUMENTS.count */
extern T6 T483x17416198(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPES.dynamic_type */
extern T0* T486x24657921T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPES.count */
extern T6 T486x24657924(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.cast_type */
extern T0* T493x17121285(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.value */
extern T0* T493x17121283(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.position */
extern T0* T493x20955137(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.index */
extern T6 T493x18071555(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_invariants */
extern T0* T511x19546123(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_invariants */
extern T1 T511x19546114(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_feature */
extern T0* T511x19546122(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_feature */
extern T1 T511x19546113(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.first_precursor */
extern T0* T511x19546116(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_validity_error */
extern T1 T511x19546121(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_feature */
extern T0* T511x18432013(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.postconditions */
extern T0* T511x18432010(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.preconditions */
extern T0* T511x18432009(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.locals */
extern T0* T511x18432008(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.arguments */
extern T0* T511x18432006(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.type */
extern T0* T511x18432005(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.clients */
extern T0* T511x19546119(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_class */
extern T0* T511x19546117(GE_context* ac, T0* C);
/* Call to ET_ASSERTION.expression */
extern T0* T534x15876098(GE_context* ac, T0* C);
/* Call to ET_ASSERTION.is_class_assertion */
extern T1 T534x15876097(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.relative_lower_name */
extern T0* T537x19922964T0T2(GE_context* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_PRIMARY_GROUP.kind_name */
extern T0* T537x19922970(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.full_lower_name */
extern T0* T537x19922966T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_PRIMARY_GROUP.is_cluster */
extern T1 T537x19922947(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.use_obsolete_syntax */
extern T1 T537x19922954(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.current_system */
extern T0* T537x19922960(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.universe */
extern T0* T537x19922959(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.cluster */
extern T0* T537x19922983(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_override */
extern T1 T537x19922952(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.dotnet_assembly */
extern T0* T537x19922985(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_dotnet_assembly */
extern T1 T537x19922949(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_unknown */
extern T1 T537x19922951(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_none */
extern T1 T537x19922950(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.alias_name */
extern T0* T593x21643266(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.feature_name */
extern T0* T593x21643265(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.same_call_name */
extern T1 T593x21643268T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXTENDED_FEATURE_NAME.position */
extern T0* T593x20955137(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.same_extended_feature_name */
extern T1 T593x21643267T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_MARK.position */
extern T0* T597x20955137(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_implicit_mark */
extern T1 T597x21397513(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.text */
extern T0* T597x21397522(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.overridden_type_mark */
extern T0* T597x21397521T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_MARK.is_attached_mark */
extern T1 T597x21397511(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_attachment_mark */
extern T1 T597x21397510(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_separate_mark */
extern T1 T597x21397509(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_separateness_mark */
extern T1 T597x21397508(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_expanded_mark */
extern T1 T597x21397506(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_expandedness_mark */
extern T1 T597x21397505(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_reference_mark */
extern T1 T597x21397507(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_UNIVERSE.hash_code */
extern T6 T646x458753(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.dotnet_assembly */
extern T0* T649x19709958(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T649x19922966T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_DOTNET_ASSEMBLY.hash_code */
extern T6 T649x458753(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.is_consumable */
extern T1 T649x19890195(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.full_lower_name */
extern T0* T673x19922966T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_CLUSTER.scm_write_mapping_recursive */
extern T0* T673x19742760(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.absolute_pathname */
extern T0* T673x19922969(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.dependant_constraint */
extern T0* T673x19742754(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.overridden_constraint_enabled */
extern T1 T673x19742755(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.scm_mapping_constraint_enabled */
extern T1 T673x19742756(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.provider_constraint */
extern T0* T673x19742753(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_abstract */
extern T1 T673x19742722(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_read_only */
extern T1 T673x19922953(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_override */
extern T1 T673x19922952(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.full_pathname */
extern T0* T673x19922967(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_implicit */
extern T1 T673x19742730(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_preparsed */
extern T1 T673x19922955(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.parent */
extern T0* T673x19922986(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.universe */
extern T0* T673x19922959(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.subclusters */
extern T0* T673x19742752(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_valid_directory_name */
extern T1 T673x19742736T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.is_recursive */
extern T1 T673x19742724(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_valid_eiffel_filename */
extern T1 T673x19742735T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.scm_write_mapping */
extern T0* T673x19742758(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.scm_read_mapping */
extern T0* T673x19742757(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.start_condition */
extern T6 T732x12156933(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T732x27754500T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.end_of_file */
extern T1 T732x12156939(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.last_value */
extern T0* T732x27754509(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.last_token */
extern T6 T732x12156929(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.error_position */
extern T0* T732x27754507(GE_context* ac, T0* C);
/* Call to ET_CLUSTERS.clusters */
extern T0* T791x19759114(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.last_leaf */
extern T0* T841x20955141(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.label */
extern T0* T841x22413315(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.position */
extern T0* T841x20955137(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T841x22364164T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.type */
extern T0* T841x22413314(GE_context* ac, T0* C);
/* Call to ET_NAMED_TYPE.to_text */
extern T0* T844x23003206(GE_context* ac, T0* C);
/* Call to ET_NAMED_TYPE.same_base_type_with_type_marks */
extern T1 T844x23003181T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.base_type_index_of_label */
extern T6 T844x23003147T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T844x23003184T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T844x23003187T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T844x23003182T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T844x23003185T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.base_type_actual */
extern T0* T844x23003145T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T844x23003186T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.type_with_type_mark */
extern T0* T844x23003154T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.has_formal_types */
extern T1 T844x23003171T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T844x23003177T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T844x23003183T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.is_type_attached_with_type_mark */
extern T1 T844x23003165T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_reference_with_type_mark */
extern T1 T844x23003163T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_detachable_with_type_mark */
extern T1 T844x23003167T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T844x23003193T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_base_class_type_with_type_marks */
extern T1 T844x23003191T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.is_type_expanded_with_type_mark */
extern T1 T844x23003161T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T844x23003189T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T844x23003197T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T844x23003198T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T844x23003196T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.conforms_to_type_with_type_marks */
extern T1 T844x23003195T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T844x23003190T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_class_type_with_type_marks */
extern T1 T844x23003188T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.named_base_class */
extern T0* T844x23003140T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.same_named_type_with_type_marks */
extern T1 T844x23003179T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.base_class */
extern T0* T844x23003139T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_CHARACTER_CONSTANT.value */
extern T3 T889x17022979(GE_context* ac, T0* C);
/* Call to detachable ET_INTEGER_CONSTANT.to_integer_32 */
extern T6 T898x17104901(GE_context* ac, T0* C);
/* Call to detachable ET_MANIFEST_STRING.value */
extern T0* T904x17121283(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.alias_lower_name */
extern T0* T955x21463073(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.is_prefixable */
extern T1 T955x21463068(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.is_infixable */
extern T1 T955x21463069(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.is_infix */
extern T1 T955x21544971(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.is_parenthesis */
extern T1 T955x21544997(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.is_bracket */
extern T1 T955x21544996(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.same_alias_name */
extern T1 T955x21463083T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_ASSIGNER.feature_name */
extern T0* T958x18382849(GE_context* ac, T0* C);
/* Call to detachable ET_CONSTANT.is_integer_constant */
extern T1 T998x17039363(GE_context* ac, T0* C);
/* Call to detachable ET_CONSTANT.is_character_constant */
extern T1 T998x17039362(GE_context* ac, T0* C);
/* Call to detachable ET_CONSTRAINT_TYPE.resolved_syntactical_constraint */
extern T0* T1010x22708226T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to detachable ET_CONVERT_FEATURE.name */
extern T0* T1013x16252931(GE_context* ac, T0* C);
/* Call to detachable ET_CONVERT_FEATURE.is_convert_to */
extern T1 T1013x16252930(GE_context* ac, T0* C);
/* Call to detachable ET_CONVERT_FEATURE.is_convert_from */
extern T1 T1013x16252929(GE_context* ac, T0* C);
/* Call to detachable ET_EXTERNAL_ALIAS.manifest_string */
extern T0* T1062x18743297(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.adapted_feature */
extern T0* T1241x18923537(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_adapted */
extern T1 T1241x18923524(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.inherited_feature */
extern T0* T1241x18923535(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_inherited */
extern T1 T1241x18923522(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.redeclared_feature */
extern T0* T1241x18923536(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_redeclared */
extern T1 T1241x18923523(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_immediate */
extern T1 T1241x18923521(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.flattened_feature */
extern T0* T1241x18923533(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.immediate_feature */
extern T0* T1241x18923534(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.type */
extern T0* T1360x18432005(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.locals */
extern T0* T1360x18432008(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.arguments */
extern T0* T1360x18432006(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.across_components */
extern T0* T1360x18432012(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.object_tests */
extern T0* T1360x18432011(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.position */
extern T0* T1362x20955137(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.implicit_result */
extern T0* T1362x15400964(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.formal_arguments */
extern T0* T1362x18432006(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.actual_arguments */
extern T0* T1362x15400963(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.target */
extern T0* T1362x15400962(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.locals */
extern T0* T1362x18432008(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.type */
extern T0* T1362x18432005(GE_context* ac, T0* C);
/* Call to ET_INDEXING_TERM.indexing_term_value */
extern T0* T1403x16646146(GE_context* ac, T0* C);
/* Call to ET_INDEXING_TERM.position */
extern T0* T1403x20955137(GE_context* ac, T0* C);
/* Call to ET_INDEXING_TERM.has_indexing_term_value */
extern T1 T1403x16646147T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.name */
extern T0* T1529x17465346(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.target */
extern T0* T1529x17465345(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments_count */
extern T6 T1529x20217859(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.parenthesis_call */
extern T0* T1529x20496387(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T1529x17465347(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.index */
extern T6 T1529x18071555(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_call_agent */
extern T1 T1529x17465350(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_tuple_label */
extern T1 T1529x17465349(GE_context* ac, T0* C);
/* Call to XM_DOCUMENT_NODE.parent */
extern T0* T1541x28672001(GE_context* ac, T0* C);
/* Call to ET_ECF_CONDITION_ITEM.is_enabled */
extern T1 T1561x14303233T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ECF_CONDITION_ITEM.is_capability_supported */
extern T1 T1561x14303234T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ECF_CONDITION_ITEM.is_capability_aware */
extern T1 T1561x14352385T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ADAPTED_UNIVERSE.lower_name */
extern T0* T1565x19709955(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_UNIVERSE.name */
extern T0* T1565x19709954(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.same_call_name */
extern T1 T1573x21545000T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.same_alias_name */
extern T1 T1573x21463083T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.is_infix_minus */
extern T1 T1573x21544982(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infix_plus */
extern T1 T1573x21544986(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_minus */
extern T1 T1573x21544992(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_plus */
extern T1 T1573x21544993(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.hash_code */
extern T6 T1573x458753(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefix */
extern T1 T1573x21544991(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_parenthesis */
extern T1 T1573x21544997(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_bracket */
extern T1 T1573x21544996(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infix */
extern T1 T1573x21544971(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infixable */
extern T1 T1573x21463069(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefixable */
extern T1 T1573x21463068(GE_context* ac, T0* C);
/* Call to ET_INDEXING_TERM_ITEM.indexing_term */
extern T0* T1606x16646145(GE_context* ac, T0* C);
/* Call to ET_INDEXING_TERM_ITEM.position */
extern T0* T1606x20955137(GE_context* ac, T0* C);
/* Call to ET_INDEXING_TERM_ITEM.has_indexing_term_value */
extern T1 T1606x16646147T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE_NAME_ITEM.feature_name */
extern T0* T1610x21643265(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME_ITEM.position */
extern T0* T1610x20955137(GE_context* ac, T0* C);
/* Call to ET_CONSTRAINT_TYPE.resolved_syntactical_constraint */
extern T0* T1614x22708226T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.resolved_syntactical_constraint_with_type */
extern T0* T1616x22593540T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.type */
extern T0* T1616x22593538(GE_context* ac, T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.position */
extern T0* T1616x22593539(GE_context* ac, T0* C);
/* Call to ET_CONVERT_FEATURE.name */
extern T0* T1626x16252931(GE_context* ac, T0* C);
/* Call to ET_TYPE_ITEM.type */
extern T0* T1630x23052289(GE_context* ac, T0* C);
/* Call to detachable ET_TARGET_TYPE.type */
extern T0* T1673x22970369(GE_context* ac, T0* C);
/* Call to ET_CHOICE.upper */
extern T0* T1678x20267011(GE_context* ac, T0* C);
/* Call to ET_CHOICE.is_range */
extern T1 T1678x20267009(GE_context* ac, T0* C);
/* Call to ET_CHOICE.lower */
extern T0* T1678x20267010(GE_context* ac, T0* C);
/* Call to ET_CHOICE_ITEM.choice */
extern T0* T1679x20316161(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING_ITEM.manifest_string */
extern T0* T1681x17940481(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND_ITEM.agent_actual_argument */
extern T0* T1710x15466497(GE_context* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.assertion */
extern T0* T1717x15908865(GE_context* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.position */
extern T0* T1717x20955137(GE_context* ac, T0* C);
/* Call to detachable ET_FLATTENED_FEATURE.flattened_feature */
extern T0* T1720x18923533(GE_context* ac, T0* C);
/* Call to detachable ET_FLATTENED_FEATURE.inherited_feature */
extern T0* T1720x18923535(GE_context* ac, T0* C);
/* Call to detachable ET_FLATTENED_FEATURE.is_inherited */
extern T1 T1720x18923522(GE_context* ac, T0* C);
/* Call to ET_ASSIGNER.feature_name */
extern T0* T1725x18382849(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPES.dynamic_type */
extern T0* T1769x24657921T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_DYNAMIC_TYPES.count */
extern T6 T1769x24657924(GE_context* ac, T0* C);
/* Call to detachable ET_DYNAMIC_TYPES.index_of */
extern T6 T1769x24657923T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_DYNAMIC_TYPES.has_type */
extern T1 T1769x24657926T0(GE_context* ac, T0* C, T0* a1);
/* Call to [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].item */
extern T0* T1849x9125890T6(GE_context* ac, T0* C, T6 a1);
/* Call to [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].count */
extern T6 T1849x9060353(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T1895x22740995(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.implementation_class */
extern T0* T1895x22740996(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T1895x23003167T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T1895x23003165T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T1895x23003138T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FORMAL_PARAMETER_TYPE.name */
extern T0* T1895x22888449(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T1895x23052289(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.first_feature */
extern T0* T1929x19398659(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.replicated_feature */
extern T0* T1929x19398658(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.has_replication */
extern T1 T1929x19398657(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.selected_count */
extern T6 T1929x19398660(GE_context* ac, T0* C);
/* Call to XM_ELEMENT_NODE.parent */
extern T0* T2005x28672001(GE_context* ac, T0* C);
/* Call to detachable ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T2026x22740995(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.cast_type */
extern T0* T2030x17104908(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.index */
extern T6 T2030x18071555(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_negative */
extern T1 T2030x17104915(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.value */
extern T11 T2030x17104898(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.literal */
extern T0* T2030x17104897(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.sign */
extern T0* T2030x17104907(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.value_position */
extern T0* T2030x17104912(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_64 */
extern T1 T2030x17104927(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_binary */
extern T1 T2030x17104918(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T2030x17104917(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_64 */
extern T1 T2030x17104923(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_32 */
extern T1 T2030x17104922(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_32 */
extern T1 T2030x17104926(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_16 */
extern T1 T2030x17104925(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_8 */
extern T1 T2030x17104924(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_16 */
extern T1 T2030x17104921(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_8 */
extern T1 T2030x17104920(GE_context* ac, T0* C);
/* Call to ET_DECLARED_TYPE.last_leaf */
extern T0* T2078x20955141(GE_context* ac, T0* C);
/* Call to ET_DECLARED_TYPE.type */
extern T0* T2078x22724609(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.to_text */
extern T0* T2099x23003206(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.position */
extern T0* T2099x20955137(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.resolved_formal_parameters */
extern T0* T2099x23003199T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_LIKE_TYPE.like_keyword */
extern T0* T2099x22872066(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.has_formal_types */
extern T1 T2099x23003171T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CONDITIONAL.expression */
extern T0* T2105x17498113(GE_context* ac, T0* C);
/* Call to ET_CONDITIONAL.position */
extern T0* T2105x20955137(GE_context* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.position */
extern T0* T2117x20955137(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_tuple_label */
extern T1 T2129x21544969(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_prefix_not */
extern T1 T2129x21544995(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and_then */
extern T1 T2129x21544973(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and */
extern T1 T2129x21544972(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_implies */
extern T1 T2129x21544979(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or_else */
extern T1 T2129x21544985(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or */
extern T1 T2129x21544984(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.position */
extern T0* T2129x20955137(GE_context* ac, T0* C);
/* Call to ET_EXTERNAL_LANGUAGE.manifest_string */
extern T0* T2143x18776065(GE_context* ac, T0* C);
/* Call to ET_AST_LEAF.last_position */
extern T0* T2165x20955139(GE_context* ac, T0* C);
/* Call to ET_GROUP.full_lower_name */
extern T0* T2171x19922966T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_GROUP.kind_lower_name */
extern T0* T2171x19922971(GE_context* ac, T0* C);
/* Call to ET_GROUP.is_cluster */
extern T1 T2171x19922947(GE_context* ac, T0* C);
/* Call to ET_GROUP.absolute_pathname */
extern T0* T2171x19922969(GE_context* ac, T0* C);
/* Call to ET_GROUP.universe */
extern T0* T2171x19922959(GE_context* ac, T0* C);
/* Call to ET_GROUP.parent */
extern T0* T2171x19922986(GE_context* ac, T0* C);
/* Call to ET_GROUP.full_name */
extern T0* T2171x19922965T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_GROUP.cluster */
extern T0* T2171x19922983(GE_context* ac, T0* C);
/* Call to ET_ECF_GROUP.class_options */
extern T0* T2381x14811142(GE_context* ac, T0* C);
/* Call to ET_ECF_GROUP.options */
extern T0* T2381x14811141(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.implementation_feature */
extern T0* T2391x18432013(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.is_once_per_process */
extern T1 T2391x18432002(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.is_once */
extern T1 T2391x18432001(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.lower_name */
extern T0* T2391x19546115(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.rescue_clause */
extern T0* T2391x19103747(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.compound */
extern T0* T2391x19103745(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.arguments */
extern T0* T2391x18923530(GE_context* ac, T0* C);
/* Call to ET_ROUTINE.implementation_feature */
extern T0* T2392x18432013(GE_context* ac, T0* C);
/* Call to ET_ROUTINE.arguments */
extern T0* T2392x18923530(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.locals */
extern T0* T2393x18432008(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.compound */
extern T0* T2393x19103745(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.is_once_per_process */
extern T1 T2393x18432002(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.rescue_clause */
extern T0* T2393x19103747(GE_context* ac, T0* C);
/* Call to detachable ET_AST_NODE.position */
extern T0* T2412x20955137(GE_context* ac, T0* C);
/* Call to ET_FREE_NAME.operator_name */
extern T0* T2435x21790722(GE_context* ac, T0* C);
/* Call to ET_FREE_NAME.hash_code */
extern T6 T2435x458753(GE_context* ac, T0* C);
/* Call to ET_FREE_NAME.is_infix_freeop */
extern T1 T2435x21544976(GE_context* ac, T0* C);
/* Call to ET_UNTAGGED_ASSERTION.is_class_assertion */
extern T1 T2437x15876097(GE_context* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.expression */
extern T0* T2490x17530881(GE_context* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.convert_feature */
extern T0* T2490x17530882(GE_context* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.cast_type */
extern T0* T2571x17022980(GE_context* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.index */
extern T6 T2571x18071555(GE_context* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.value */
extern T3 T2571x17022979(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.target */
extern T0* T2573x17465345(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.name */
extern T0* T2573x17465346(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_call_agent */
extern T1 T2573x17465350(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_tuple_label */
extern T1 T2573x17465349(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.arguments */
extern T0* T2573x17465347(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.implicit_result */
extern T0* T2574x15400964(GE_context* ac, T0* C);
/* Call to ET_EXTERNAL_ALIAS.manifest_string */
extern T0* T2576x18743297(GE_context* ac, T0* C);
/* Call to detachable ET_CONVERT_EXPRESSION.index */
extern T6 T2599x18071555(GE_context* ac, T0* C);
/* Call to ET_QUERY_INLINE_AGENT.type */
extern T0* T2608x18432005(GE_context* ac, T0* C);
/* Call to ET_QUERY_INLINE_AGENT.formal_arguments */
extern T0* T2608x18432006(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T2611x18432006(GE_context* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENTS.arguments */
extern T0* T2614x20217858(GE_context* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENTS.name */
extern T0* T2614x20217857(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.parenthesis_call */
extern T0* T2616x20496387(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.name */
extern T0* T2616x17465346(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.target */
extern T0* T2616x17465345(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.arguments */
extern T0* T2616x17465347(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL.target */
extern T0* T2617x17465345(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL.name */
extern T0* T2617x17465346(GE_context* ac, T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T2618x17465347(GE_context* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENT_LIST.arguments */
extern T0* T2620x20217858(GE_context* ac, T0* C);
/* Call to ET_LIKE_IDENTIFIER.name */
extern T0* T2623x22839297(GE_context* ac, T0* C);
/* Call to ET_LIKE_IDENTIFIER.to_text */
extern T0* T2623x23003206(GE_context* ac, T0* C);
/* Call to ET_AST_NODE.position */
extern T0* T2669x20955137(GE_context* ac, T0* C);
/* Call to ET_ARGUMENT_OPERANDS.actual_argument */
extern T0* T2683x17416197T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ARGUMENT_OPERANDS.count */
extern T6 T2683x17416198(GE_context* ac, T0* C);
/* Call to detachable LX_TRANSITION [[attached] LX_NFA_STATE].target */
extern T0* T2789x12435457(GE_context* ac, T0* C);
/* Call to detachable LX_TRANSITION [[attached] LX_NFA_STATE].labeled */
extern T1 T2789x12435458T6(GE_context* ac, T0* C, T6 a1);
/* Call to EXCEPTION.set_type_name */
extern void T22x1556504T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_recipient_name */
extern void T22x1556507T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_description */
extern void T22x1556509T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_exception_trace */
extern void T22x1556503T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_throwing_exception */
extern void T22x1556508T0(GE_context* ac, T0* C, T0* a1);
/* Call to KI_CHARACTER_INPUT_STREAM.close */
extern void T39x5849098(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_character */
extern void T39x5849100(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.register_class */
extern void T40x20037697T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.set_iteration_cursor_forth_seed */
extern void T40x20037698T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_iteration_cursor_after_seed */
extern void T40x20037699T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_iterable_new_cursor_seed */
extern void T40x20037700T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_dispose_seed */
extern void T40x20037703T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_function_item_seed */
extern void T40x20037701T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_routine_call_seed */
extern void T40x20037702T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_is_equal_seed */
extern void T40x20037704T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_copy_seed */
extern void T40x20037705T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_default_create_seed */
extern void T40x20037706T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.master_classes_do_recursive_until */
extern void T40x20070538T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_SYSTEM.preparse_recursive */
extern void T40x20070524T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.classes_do_recursive */
extern void T40x20070548T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.classes_do_recursive_until */
extern void T40x20070547T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to AP_OPTION.reset */
extern void T51x5275665(GE_context* ac, T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_integer */
extern void T96x5750798T6(GE_context* ac, T0* C, T6 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_character */
extern void T96x5881862T2(GE_context* ac, T0* C, T2 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_new_line */
extern void T96x5963778(GE_context* ac, T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_string */
extern void T96x5750800T0(GE_context* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.append */
extern void T96x5881861T0(GE_context* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_line */
extern void T96x5963779T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable AP_OPTION.record_occurrence */
extern void T174x5275666T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS_FILTER.set_next */
extern void T201x26804226T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_xml_declaration */
extern void T202x26738701T0T0T1(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* Call to XM_CALLBACKS.on_error */
extern void T202x26738700T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start_tag_finish */
extern void T202x26738695(GE_context* ac, T0* C);
/* Call to XM_CALLBACKS.on_finish */
extern void T202x26738702(GE_context* ac, T0* C);
/* Call to XM_CALLBACKS.on_attribute */
extern void T202x26738696T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to XM_CALLBACKS.on_end_tag */
extern void T202x26738694T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_start_tag */
extern void T202x26738697T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_content */
extern void T202x26738693T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_processing_instruction */
extern void T202x26738699T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to XM_CALLBACKS.on_comment */
extern void T202x26738698T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start */
extern void T202x26738703(GE_context* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.set_library_target */
extern void T233x15106066T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_uuid */
extern void T233x15106065T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_read_only */
extern void T233x15106069T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_targets */
extern void T233x15106067T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_notes */
extern void T233x15106061T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_description */
extern void T233x15106062T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_ecf_version */
extern void T233x15106063T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_ecf_namespace */
extern void T233x15106064T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ADAPTED_DOTNET_ASSEMBLY.export_classes */
extern void T266x19709960T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_query_call */
extern void T320x24641589T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_procedure_call */
extern void T320x24641588T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_target */
extern void T320x24739850T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.put_object_equality_expression */
extern void T320x24641586T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_equality_expression */
extern void T320x24641587T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_static */
extern void T320x24641596T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_DYNAMIC_TYPE.use_all_attributes */
extern void T320x24641591T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_meta_type */
extern void T320x24641595T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_alive */
extern void T320x24641598(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.set_attribute_position */
extern void T320x24641592T0T6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* Call to ET_DYNAMIC_TYPE.set_next_type */
extern void T320x24641583T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_hash_code */
extern void T320x24641593T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE.set_id */
extern void T320x24641594T6(GE_context* ac, T0* C, T6 a1);
/* Call to detachable ET_PROCEDURE.set_across_components */
extern void T325x18432014T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_PROCEDURE.set_object_tests */
extern void T325x18432015T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_PROCEDURE.set_frozen_keyword */
extern void T325x18841672T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_QUERY.set_across_components */
extern void T326x18432014T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_QUERY.set_object_tests */
extern void T326x18432015T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_QUERY.set_frozen_keyword */
extern void T326x18841672T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.reset */
extern void T328x21545008(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.set_seed */
extern void T328x21545007T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_AST_PROCESSOR.process_convert_to_expression */
extern void T329x25297057T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_from_expression */
extern void T329x25297059T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_builtin_expression */
extern void T329x25297063T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_cast_expression */
extern void T329x25296995T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unqualified_call_instruction */
extern void T329x25296904T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_across_instruction */
extern void T329x25297114T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_check_instruction */
extern void T329x25297078T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_instruction */
extern void T329x25296920T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_instruction */
extern void T329x25296943T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_debug_instruction */
extern void T329x25297048T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_instruction */
extern void T329x25296989T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_instruction */
extern void T329x25297002T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_instruction */
extern void T329x25297055T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bang_instruction */
extern void T329x25297089T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_loop_instruction */
extern void T329x25296972T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment_attempt */
extern void T329x25297094T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment */
extern void T329x25297095T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assigner_instruction */
extern void T329x25297096T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_retry_instruction */
extern void T329x25296924T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constrained_formal_parameter */
extern void T329x25297065T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter */
extern void T329x25297012T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_call_instruction */
extern void T329x25296936T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class_type */
extern void T329x25297072T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_across_expression */
extern void T329x25297115T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_manifest_string */
extern void T329x25296957T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_object_test */
extern void T329x25296960T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_feature_address */
extern void T329x25297021T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_feature */
extern void T329x25296978T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure */
extern void T329x25297024T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure_inline_agent */
extern void T329x25297023T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure_inline_agent */
extern void T329x25296955T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure_inline_agent */
extern void T329x25297042T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function_inline_agent */
extern void T329x25297025T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function_inline_agent */
extern void T329x25296958T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function_inline_agent */
extern void T329x25297044T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_agent */
extern void T329x25297079T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_strip_expression */
extern void T329x25296919T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_array */
extern void T329x25296970T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bracket_expression */
extern void T329x25297084T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_expression */
extern void T329x25296961T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_prefix_expression */
extern void T329x25296941T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_type */
extern void T329x25296966T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_expression */
extern void T329x25296993T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_parenthesized_expression */
extern void T329x25296947T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_expression_address */
extern void T329x25297030T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result_address */
extern void T329x25296925T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current_address */
extern void T329x25297050T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_expression */
extern void T329x25296944T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_expression */
extern void T329x25296921T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_expression */
extern void T329x25297003T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_type */
extern void T329x25296934T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_braced_type */
extern void T329x25296935T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure */
extern void T329x25296956T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_function */
extern void T329x25297047T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function */
extern void T329x25296959T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function */
extern void T329x25297045T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c2_character_constant */
extern void T329x25297081T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c1_character_constant */
extern void T329x25297082T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_false_constant */
extern void T329x25297022T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_void */
extern void T329x25296901T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_real_constant */
extern void T329x25296910T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_real_constant */
extern void T329x25296930T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_binary_integer_constant */
extern void T329x25297088T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_octal_integer_constant */
extern void T329x25296962T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_hexadecimal_integer_constant */
extern void T329x25297007T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_integer_constant */
extern void T329x25296911T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_special_manifest_string */
extern void T329x25296922T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_verbatim_string */
extern void T329x25296902T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c3_character_constant */
extern void T329x25297080T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_true_constant */
extern void T329x25296914T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter_type */
extern void T329x25297009T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_current */
extern void T329x25296979T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_attribute */
extern void T329x25297090T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unique_attribute */
extern void T329x25296906T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constant_attribute */
extern void T329x25297066T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_extended_attribute */
extern void T329x25297028T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_tuple_type */
extern void T329x25296913T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function */
extern void T329x25297026T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_manifest_string */
extern void T329x25296931T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_named_object_test */
extern void T329x25296965T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_procedure */
extern void T329x25297046T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure */
extern void T329x25297043T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_integer_constant */
extern void T329x25296932T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_expression */
extern void T329x25297056T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_equality_expression */
extern void T329x25297032T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_object_equality_expression */
extern void T329x25296964T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_object_test */
extern void T329x25296963T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_tuple */
extern void T329x25296967T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unqualified_call_expression */
extern void T329x25296905T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result */
extern void T329x25296926T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_call_expression */
extern void T329x25296937T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current */
extern void T329x25297051T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_identifier */
extern void T329x25297006T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class */
extern void T329x25297074T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.reset_qualified_anchored_types */
extern void T330x23003211(GE_context* ac, T0* C);
/* Call to ET_TYPE.reset */
extern void T330x23003212(GE_context* ac, T0* C);
/* Call to ET_TYPE.append_to_string */
extern void T330x23003210T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.append_unaliased_to_string */
extern void T330x23003209T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.process */
extern void T330x20955146T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.reset_after_interface_checked */
extern void T334x18841685(GE_context* ac, T0* C);
/* Call to ET_QUERY.reset_after_features_flattened */
extern void T334x18841686(GE_context* ac, T0* C);
/* Call to ET_QUERY.reset */
extern void T334x18841687(GE_context* ac, T0* C);
/* Call to ET_QUERY.reset_validity_checked */
extern void T334x19546125(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.reset_after_interface_checked */
extern void T335x18841685(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.reset_after_features_flattened */
extern void T335x18841686(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.reset */
extern void T335x18841687(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.reset_validity_checked */
extern void T335x19546125(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.universes_do_if */
extern void T336x20070534T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.universes_do_all */
extern void T336x20070535T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.master_classes_do_if_until */
extern void T336x20070540T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_UNIVERSE.master_classes_do_if */
extern void T336x20070541T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.master_classes_do_until */
extern void T336x20070542T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.master_classes_do_all */
extern void T336x20070543T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.classes_do_if */
extern void T336x20070551T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_until */
extern void T336x20070552T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_all */
extern void T336x20070553T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T340x22380565(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.reset */
extern void T340x22380566(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.append_to_string */
extern void T340x22380564T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T340x22380563T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_DYNAMIC_TYPE_SET.put_target */
extern void T342x24739850T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to detachable ET_DYNAMIC_TYPE_SET.propagate_can_be_void */
extern void T342x24559617T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.put_target */
extern void T343x24739850T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE_SET.set_never_void */
extern void T343x24739851(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.propagate_can_be_void */
extern void T343x24559617T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.put_type_from_type_set */
extern void T343x24559619T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_EXPRESSION.process */
extern void T389x20955146T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.reset */
extern void T389x15876100(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.set_index */
extern void T389x18071556T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_id */
extern void T393x18841682T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.process */
extern void T393x20955146T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_validity_error */
extern void T393x19546126(GE_context* ac, T0* C);
/* Call to ET_FEATURE.set_validity_checked */
extern void T393x19546127(GE_context* ac, T0* C);
/* Call to ET_FEATURE.set_other_seeds */
extern void T393x18841675T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_seed */
extern void T393x18841676T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_clients */
extern void T393x18841683T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_version */
extern void T393x18841679T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_other_precursors */
extern void T393x18841673T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_precursor */
extern void T393x18841674T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.reset_postconditions */
extern void T393x18841668(GE_context* ac, T0* C);
/* Call to ET_FEATURE.reset_preconditions */
extern void T393x18841669(GE_context* ac, T0* C);
/* Call to ET_FEATURE.set_implementation_class */
extern void T393x18841678T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_feature */
extern void T393x18841677T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CALL_NAME.set_seed */
extern void T426x21545007T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_AGENT.set_arguments */
extern void T430x15400972T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AGENT.process */
extern void T430x20955146T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_TYPE.process */
extern void T436x20955146T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CONSTANT.set_index */
extern void T437x18071556T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_CONSTANT.process */
extern void T437x20955146T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_OPERAND.set_index */
extern void T466x18071556T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.set_index */
extern void T467x18071556T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.process */
extern void T467x20955146T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AGENT_TARGET.reset */
extern void T467x18071557(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.process */
extern void T470x20955146T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND.reset */
extern void T470x18071557(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.set_index */
extern void T493x18071556T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_MANIFEST_STRING.set_type */
extern void T493x17121292T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ASSERTION.process */
extern void T534x20955146T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ASSERTION.reset */
extern void T534x15876100(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.reset */
extern void T593x21643269(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_UNIVERSE.clusters_do_explicit */
extern void T646x19955754T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTERNAL_UNIVERSE.dotnet_assemblies_do_if */
extern void T646x19955747T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T649x19890201T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T649x20070529T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DOTNET_ASSEMBLY.import_classes */
extern void T649x20070521(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.preparse */
extern void T649x20070525T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DOTNET_ASSEMBLY.consume */
extern void T649x19890196T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.process */
extern void T673x19742771T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_dependant_constraint */
extern void T673x19742782T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_provider_constraint */
extern void T673x19742783T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.add_recursive_cluster */
extern void T673x19742778T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_preparsed */
extern void T673x19742788T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_CLUSTER.set_scm_write_mapping */
extern void T673x19742780T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_scm_read_mapping */
extern void T673x19742781T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.close_input */
extern void T732x27754519(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T732x27754520T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.set_encoding */
extern void T732x27754518T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T732x27754523(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.read_token */
extern void T732x12156969(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_stream */
extern void T732x27754521T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_CHARACTER_CONSTANT.set_cast_type */
extern void T889x17022987T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_INTEGER_CONSTANT.set_cast_type */
extern void T898x17104935T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_INTEGER_CONSTANT.set_sign */
extern void T898x17104936T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_MANIFEST_STRING.set_cast_type */
extern void T904x17121293T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_ALIAS_NAME.set_prefix */
extern void T955x21463088(GE_context* ac, T0* C);
/* Call to detachable ET_ALIAS_NAME.set_infix */
extern void T955x21463087(GE_context* ac, T0* C);
/* Call to detachable ET_INLINE_AGENT.set_across_components */
extern void T1116x18432014T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_INLINE_AGENT.set_object_tests */
extern void T1116x18432015T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable ET_INLINE_AGENT.set_actual_arguments */
extern void T1116x15400972T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.set_index */
extern void T1529x18071556T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TARGET.propagate_can_be_void */
extern void T1531x24559617T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TARGET.put_type_from_type_set */
extern void T1531x24559619T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_DOCUMENT_NODE.node_set_parent */
extern void T1541x28524546T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.reset */
extern void T1573x21545008(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.set_infix */
extern void T1573x21463087(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.set_prefix */
extern void T1573x21463088(GE_context* ac, T0* C);
/* Call to ET_INSTRUCTION.process */
extern void T1666x20955146T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INSTRUCTION.reset */
extern void T1666x20561922(GE_context* ac, T0* C);
/* Call to ET_CHOICE.reset */
extern void T1678x20267013(GE_context* ac, T0* C);
/* Call to ET_ASSIGNER.reset */
extern void T1725x18382850(GE_context* ac, T0* C);
/* Call to [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].remove */
extern void T1849x9125906T6(GE_context* ac, T0* C, T6 a1);
/* Call to XM_ELEMENT_NODE.node_set_parent */
extern void T2005x28524546T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_index */
extern void T2030x18071556T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.set_cast_type */
extern void T2030x17104935T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_type */
extern void T2030x17104934T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_sign */
extern void T2030x17104936T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_LIKE_TYPE.reset_qualified_anchored_types */
extern void T2099x23003211(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.reset */
extern void T2099x23003212(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.append_to_string */
extern void T2099x23003210T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CHOICE_CONSTANT.reset */
extern void T2117x20267013(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.reset */
extern void T2129x21545008(GE_context* ac, T0* C);
/* Call to ET_ECF_GROUP.set_options */
extern void T2381x14811152T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNTAGGED_ASSERTION.reset */
extern void T2437x15876100(GE_context* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.set_index */
extern void T2571x18071556T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_CHARACTER_CONSTANT.set_cast_type */
extern void T2571x17022987T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.set_type */
extern void T2571x17022986T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_REGULAR_FEATURE_CALL.set_parenthesis_call */
extern void T2616x20774914T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENT_LIST.set_arguments */
extern void T2620x20234242T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable LX_TRANSITION [[attached] LX_NFA_STATE].record */
extern void T2789x12435460T0(GE_context* ac, T0* C, T0* a1);
/* New instance of type SPECIAL [CHARACTER_8] */
extern T0* GE_new15(T6 a1, T1 initialize);
/* New instance of type SPECIAL [CHARACTER_32] */
extern T0* GE_new16(T6 a1, T1 initialize);
/* New instance of type STRING_8 */
extern T0* GE_new17(T1 initialize);
/* New instance of type STRING_32 */
extern T0* GE_new18(T1 initialize);
/* New instance of type IMMUTABLE_STRING_32 */
extern T0* GE_new19(T1 initialize);
/* New instance of type ISE_EXCEPTION_MANAGER */
extern T0* GE_new20(T1 initialize);
/* New instance of type GEC */
extern T0* GE_new25(T1 initialize);
/* New instance of type [attached] CELL [detachable EXCEPTION] */
extern T0* GE_new26(T1 initialize);
/* New instance of type [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32] */
extern T0* GE_new27(T1 initialize);
/* New instance of type [attached] CELL [detachable TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN]] */
extern T0* GE_new28(T1 initialize);
/* New instance of type [attached] CELL [[attached] NO_MORE_MEMORY] */
extern T0* GE_new29(T1 initialize);
/* New instance of type C_STRING */
extern T0* GE_new31(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN] */
extern T0* GE_new32(T1 initialize);
/* New instance of type KL_TEXT_INPUT_FILE */
extern T0* GE_new33(T1 initialize);
/* New instance of type KL_ARGUMENTS */
extern T0* GE_new34(T1 initialize);
/* New instance of type ET_ISE_VARIABLES */
extern T0* GE_new35(T1 initialize);
/* New instance of type ET_ERROR_HANDLER */
extern T0* GE_new36(T1 initialize);
/* New instance of type KL_STRING_ROUTINES */
extern T0* GE_new38(T1 initialize);
/* New instance of type ET_SYSTEM */
extern T0* GE_new40(T1 initialize);
/* New instance of type KL_EXCEPTIONS */
extern T0* GE_new41(T1 initialize);
/* New instance of type AP_PARSER */
extern T0* GE_new42(T1 initialize);
/* New instance of type AP_ALTERNATIVE_OPTIONS_LIST */
extern T0* GE_new43(T1 initialize);
/* New instance of type AP_STRING_OPTION */
extern T0* GE_new44(T1 initialize);
/* New instance of type AP_FLAG */
extern T0* GE_new46(T1 initialize);
/* New instance of type AP_ENUMERATION_OPTION */
extern T0* GE_new47(T1 initialize);
/* New instance of type AP_BOOLEAN_OPTION */
extern T0* GE_new48(T1 initialize);
/* New instance of type AP_INTEGER_OPTION */
extern T0* GE_new49(T1 initialize);
/* New instance of type ET_NULL_ERROR_HANDLER */
extern T0* GE_new53(T1 initialize);
/* New instance of type ET_XACE_SYSTEM_PARSER */
extern T0* GE_new55(T1 initialize);
/* New instance of type ET_XACE_DEFAULT_ERROR_HANDLER */
extern T0* GE_new56(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8] */
extern T0* GE_new57(T1 initialize);
/* New instance of type UC_STRING_EQUALITY_TESTER */
extern T0* GE_new58(T1 initialize);
/* New instance of type ET_ECF_VARIABLES */
extern T0* GE_new61(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8] */
extern T0* GE_new62(T1 initialize);
/* New instance of type ET_ECF_SYSTEM_PARSER */
extern T0* GE_new66(T1 initialize);
/* New instance of type ET_ECF_ERROR_HANDLER */
extern T0* GE_new67(T1 initialize);
/* New instance of type ET_ECF_SYSTEM */
extern T0* GE_new69(T1 initialize);
/* New instance of type ET_ECF_TARGET */
extern T0* GE_new70(T1 initialize);
/* New instance of type ET_ECF_SETTINGS */
extern T0* GE_new71(T1 initialize);
/* New instance of type ET_LACE_PARSER */
extern T0* GE_new77(T1 initialize);
/* New instance of type ET_LACE_ERROR_HANDLER */
extern T0* GE_new78(T1 initialize);
/* New instance of type ET_DYNAMIC_SYSTEM */
extern T0* GE_new80(T1 initialize);
/* New instance of type ET_SYSTEM_PROCESSOR */
extern T0* GE_new81(T1 initialize);
/* New instance of type ET_C_GENERATOR */
extern T0* GE_new84(T1 initialize);
/* New instance of type KL_SHELL_COMMAND */
extern T0* GE_new85(T1 initialize);
/* New instance of type ET_SYSTEM_MULTIPROCESSOR */
extern T0* GE_new87(T1 initialize);
/* New instance of type UT_VERSION */
extern T0* GE_new88(T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
extern T0* GE_new91(T1 initialize);
/* New instance of type ET_CLASS_TYPE */
extern T0* GE_new93(T1 initialize);
/* New instance of type ET_TOKEN_CONSTANTS */
extern T0* GE_new94(T1 initialize);
/* New instance of type ET_CLASS */
extern T0* GE_new95(T1 initialize);
/* New instance of type KL_OPERATING_SYSTEM */
extern T0* GE_new97(T1 initialize);
/* New instance of type UT_CANNOT_READ_FILE_ERROR */
extern T0* GE_new100(T1 initialize);
/* New instance of type UT_VERSION_NUMBER */
extern T0* GE_new102(T1 initialize);
/* New instance of type UT_MESSAGE */
extern T0* GE_new103(T1 initialize);
/* New instance of type ET_ECF_CAPABILITIES */
extern T0* GE_new106(T1 initialize);
/* New instance of type KL_EXECUTION_ENVIRONMENT */
extern T0* GE_new107(T1 initialize);
/* New instance of type AP_ERROR */
extern T0* GE_new108(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] STRING_8] */
extern T0* GE_new109(T1 initialize);
/* New instance of type VOID_TARGET */
extern T0* GE_new112(T1 initialize);
/* New instance of type ROUTINE_FAILURE */
extern T0* GE_new114(T1 initialize);
/* New instance of type OLD_VIOLATION */
extern T0* GE_new116(T1 initialize);
/* New instance of type NO_MORE_MEMORY */
extern T0* GE_new119(T1 initialize);
/* New instance of type INVARIANT_VIOLATION */
extern T0* GE_new120(T1 initialize);
/* New instance of type OPERATING_SYSTEM_SIGNAL_FAILURE */
extern T0* GE_new121(T1 initialize);
/* New instance of type IO_FAILURE */
extern T0* GE_new122(T1 initialize);
/* New instance of type OPERATING_SYSTEM_FAILURE */
extern T0* GE_new123(T1 initialize);
/* New instance of type COM_FAILURE */
extern T0* GE_new124(T1 initialize);
/* New instance of type EIFFEL_RUNTIME_PANIC */
extern T0* GE_new125(T1 initialize);
/* New instance of type PRECONDITION_VIOLATION */
extern T0* GE_new128(T1 initialize);
/* New instance of type POSTCONDITION_VIOLATION */
extern T0* GE_new129(T1 initialize);
/* New instance of type FLOATING_POINT_FAILURE */
extern T0* GE_new130(T1 initialize);
/* New instance of type CHECK_VIOLATION */
extern T0* GE_new131(T1 initialize);
/* New instance of type BAD_INSPECT_VALUE */
extern T0* GE_new132(T1 initialize);
/* New instance of type VARIANT_VIOLATION */
extern T0* GE_new133(T1 initialize);
/* New instance of type LOOP_INVARIANT_VIOLATION */
extern T0* GE_new134(T1 initialize);
/* New instance of type RESCUE_FAILURE */
extern T0* GE_new135(T1 initialize);
/* New instance of type RESUMPTION_FAILURE */
extern T0* GE_new136(T1 initialize);
/* New instance of type CREATE_ON_DEFERRED */
extern T0* GE_new137(T1 initialize);
/* New instance of type EXTERNAL_FAILURE */
extern T0* GE_new138(T1 initialize);
/* New instance of type VOID_ASSIGNED_TO_EXPANDED */
extern T0* GE_new139(T1 initialize);
/* New instance of type EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
extern T0* GE_new140(T1 initialize);
/* New instance of type MISMATCH_FAILURE */
extern T0* GE_new141(T1 initialize);
/* New instance of type DEVELOPER_EXCEPTION */
extern T0* GE_new142(T1 initialize);
/* New instance of type ADDRESS_APPLIED_TO_MELTED_FEATURE */
extern T0* GE_new143(T1 initialize);
/* New instance of type SERIALIZATION_FAILURE */
extern T0* GE_new144(T1 initialize);
/* New instance of type EXECUTION_ENVIRONMENT */
extern T0* GE_new145(T1 initialize);
/* New instance of type KL_WINDOWS_FILE_SYSTEM */
extern T0* GE_new146(T1 initialize);
/* New instance of type KL_UNIX_FILE_SYSTEM */
extern T0* GE_new147(T1 initialize);
/* New instance of type PRIMES */
extern T0* GE_new148(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] INTEGER_32] */
extern T0* GE_new149(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] BOOLEAN] */
extern T0* GE_new150(T6 a1, T1 initialize);
/* New instance of type MANAGED_POINTER */
extern T0* GE_new154(T1 initialize);
/* New instance of type [attached] KL_LINKABLE [[attached] CHARACTER_8] */
extern T0* GE_new155(T1 initialize);
/* New instance of type FILE_INFO */
extern T0* GE_new157(T1 initialize);
/* New instance of type MUTEX */
extern T0* GE_new158(T1 initialize);
/* New instance of type UT_ERROR_HANDLER */
extern T0* GE_new159(T1 initialize);
/* New instance of type KL_STANDARD_FILES */
extern T0* GE_new160(T1 initialize);
/* New instance of type KL_STDERR_FILE */
extern T0* GE_new161(T1 initialize);
/* New instance of type KL_STDOUT_FILE */
extern T0* GE_new162(T1 initialize);
/* New instance of type UC_STRING */
extern T0* GE_new163(T1 initialize);
/* New instance of type KL_ANY_ROUTINES */
extern T0* GE_new164(T1 initialize);
/* New instance of type ST_WORD_WRAPPER */
extern T0* GE_new166(T1 initialize);
/* New instance of type AP_DISPLAY_HELP_FLAG */
extern T0* GE_new168(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] AP_OPTION] */
extern T0* GE_new169(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new170(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] STRING_8] */
extern T0* GE_new171(T1 initialize);
/* New instance of type AP_ERROR_HANDLER */
extern T0* GE_new172(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION] */
extern T0* GE_new175(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [detachable STRING_8] */
extern T0* GE_new176(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [detachable STRING_8] */
extern T0* GE_new177(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST [[attached] STRING_8] */
extern T0* GE_new178(T1 initialize);
/* New instance of type KL_STRING_EQUALITY_TESTER */
extern T0* GE_new179(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST [[attached] BOOLEAN] */
extern T0* GE_new182(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST [[attached] INTEGER_32] */
extern T0* GE_new185(T1 initialize);
/* New instance of type KL_NULL_TEXT_OUTPUT_STREAM */
extern T0* GE_new186(T1 initialize);
/* New instance of type ET_XACE_AST_FACTORY */
extern T0* GE_new187(T1 initialize);
/* New instance of type XM_DOCUMENT */
extern T0* GE_new188(T1 initialize);
/* New instance of type XM_ELEMENT */
extern T0* GE_new189(T1 initialize);
/* New instance of type XM_TREE_CALLBACKS_PIPE */
extern T0* GE_new192(T1 initialize);
/* New instance of type XM_STOP_ON_ERROR_FILTER */
extern T0* GE_new193(T1 initialize);
/* New instance of type XM_CALLBACKS_TO_TREE_FILTER */
extern T0* GE_new194(T1 initialize);
/* New instance of type ET_XACE_VALIDATOR */
extern T0* GE_new195(T1 initialize);
/* New instance of type ET_XACE_PREPROCESSOR */
extern T0* GE_new196(T1 initialize);
/* New instance of type ET_XACE_SYSTEM */
extern T0* GE_new197(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8] */
extern T0* GE_new198(T1 initialize);
/* New instance of type XM_EXPAT_PARSER_FACTORY */
extern T0* GE_new199(T1 initialize);
/* New instance of type XM_EIFFEL_PARSER */
extern T0* GE_new200(T1 initialize);
/* New instance of type ET_XACE_LIBRARY_CONFIG_PARSER */
extern T0* GE_new203(T1 initialize);
/* New instance of type attached KL_EQUALITY_TESTER [[attached] STRING_8] */
extern T0* GE_new206(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] STRING_8] */
extern T0* GE_new207(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] STRING_8] */
extern T0* GE_new208(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] INTEGER_32] */
extern T0* GE_new209(T1 initialize);
/* New instance of type [attached] KL_AGENT_HASH_FUNCTION [[attached] STRING_8] */
extern T0* GE_new210(T1 initialize);
/* New instance of type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
extern T0* GE_new212(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] STRING_8] */
extern T0* GE_new213(T1 initialize);
/* New instance of type [attached] FUNCTION [[attached] TUPLE [[attached] STRING_8], [attached] INTEGER_32] */
extern T0* GE_new214(T1 initialize);
/* New instance of type [attached] TUPLE */
extern T0* GE_new216(T1 initialize);
/* New instance of type [attached] TUPLE [KL_STRING_ROUTINES] */
extern T0* GE_new217(T1 initialize);
/* New instance of type ET_ECF_AST_FACTORY */
extern T0* GE_new219(T1 initialize);
/* New instance of type [attached] DS_CELL [detachable ET_ECF_SYSTEM] */
extern T0* GE_new220(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_TARGET] */
extern T0* GE_new221(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_TARGET]] */
extern T0* GE_new222(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_SYSTEM_PARSER] */
extern T0* GE_new223(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8] */
extern T0* GE_new225(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8]] */
extern T0* GE_new226(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_SYSTEM_PARSER, detachable STRING_8, [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_TARGET]], [attached] DS_CELL [detachable ET_ECF_SYSTEM]] */
extern T0* GE_new227(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8] */
extern T0* GE_new229(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8] */
extern T0* GE_new230(T1 initialize);
/* New instance of type ET_ECF_STATE */
extern T0* GE_new231(T1 initialize);
/* New instance of type ET_IDENTIFIER */
extern T0* GE_new232(T1 initialize);
/* New instance of type ET_ECF_SYSTEM_CONFIG */
extern T0* GE_new233(T1 initialize);
/* New instance of type ET_ECF_LIBRARY */
extern T0* GE_new236(T1 initialize);
/* New instance of type ET_ADAPTED_LIBRARIES */
extern T0* GE_new237(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ADAPTED_LIBRARY] */
extern T0* GE_new239(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_LIBRARY]] */
extern T0* GE_new240(T1 initialize);
/* New instance of type ET_COMPRESSED_POSITION */
extern T0* GE_new241(T1 initialize);
/* New instance of type XM_ATTRIBUTE */
extern T0* GE_new245(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8] */
extern T0* GE_new247(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8] */
extern T0* GE_new248(T1 initialize);
/* New instance of type [attached] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new250(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_INTERNAL_UNIVERSE, [attached] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
extern T0* GE_new253(T1 initialize);
/* New instance of type ET_ECF_TARGETS */
extern T0* GE_new255(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
extern T0* GE_new256(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
extern T0* GE_new257(T1 initialize);
/* New instance of type [attached] DS_CELL [detachable ET_ECF_LIBRARY] */
extern T0* GE_new259(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_LIBRARY */
extern T0* GE_new260(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_ADAPTED_LIBRARY, [attached] DS_CELL [detachable ET_ECF_LIBRARY]] */
extern T0* GE_new261(T1 initialize);
/* New instance of type ET_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new264(T1 initialize);
/* New instance of type ET_ECF_DOTNET_ASSEMBLY */
extern T0* GE_new265(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
extern T0* GE_new267(T1 initialize);
/* New instance of type ET_ECF_ERROR */
extern T0* GE_new268(T1 initialize);
/* New instance of type ET_LACE_AST_FACTORY */
extern T0* GE_new269(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER] */
extern T0* GE_new270(T1 initialize);
/* New instance of type YY_FILE_BUFFER */
extern T0* GE_new271(T1 initialize);
/* New instance of type YY_BUFFER */
extern T0* GE_new272(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_IDENTIFIER] */
extern T0* GE_new273(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ANY] */
extern T0* GE_new279(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ANY] */
extern T0* GE_new280(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_IDENTIFIER] */
extern T0* GE_new281(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER] */
extern T0* GE_new282(T1 initialize);
/* New instance of type ET_LACE_SYSTEM */
extern T0* GE_new283(T1 initialize);
/* New instance of type ET_LACE_CLUSTERS */
extern T0* GE_new285(T1 initialize);
/* New instance of type ET_LACE_CLUSTER */
extern T0* GE_new286(T1 initialize);
/* New instance of type ET_LACE_EXCLUDE */
extern T0* GE_new288(T1 initialize);
/* New instance of type ET_LACE_DOTNET_ASSEMBLY */
extern T0* GE_new290(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_LACE_SYSTEM] */
extern T0* GE_new291(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_LACE_CLUSTERS] */
extern T0* GE_new292(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
extern T0* GE_new293(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_IDENTIFIER] */
extern T0* GE_new294(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_SYSTEM] */
extern T0* GE_new295(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER] */
extern T0* GE_new296(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS] */
extern T0* GE_new297(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_LACE_CLUSTERS] */
extern T0* GE_new298(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_LACE_CLUSTER] */
extern T0* GE_new299(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTERS] */
extern T0* GE_new300(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTER] */
extern T0* GE_new301(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_LACE_EXCLUDE] */
extern T0* GE_new302(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE] */
extern T0* GE_new303(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_LACE_EXCLUDE] */
extern T0* GE_new304(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_EXCLUDE] */
extern T0* GE_new305(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
extern T0* GE_new306(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLIES] */
extern T0* GE_new307(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_LACE_DOTNET_ASSEMBLY] */
extern T0* GE_new308(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLIES] */
extern T0* GE_new309(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_DOTNET_ASSEMBLY] */
extern T0* GE_new310(T1 initialize);
/* New instance of type ET_LACE_DOTNET_GAC_ASSEMBLY */
extern T0* GE_new311(T1 initialize);
/* New instance of type KL_PLATFORM */
extern T0* GE_new312(T1 initialize);
/* New instance of type KL_INTEGER_ROUTINES */
extern T0* GE_new313(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME] */
extern T0* GE_new314(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new315(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_CLASS] */
extern T0* GE_new316(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]] */
extern T0* GE_new317(T1 initialize);
/* New instance of type [attached] TUPLE [INTEGER_32] */
extern T0* GE_new318(T1 initialize);
/* New instance of type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
extern T0* GE_new319(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE */
extern T0* GE_new320(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DYNAMIC_SYSTEM] */
extern T0* GE_new321(T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE */
extern T0* GE_new332(T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_LIST */
extern T0* GE_new333(T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION */
extern T0* GE_new344(T1 initialize);
/* New instance of type ET_TUPLE_TYPE */
extern T0* GE_new345(T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT_LIST */
extern T0* GE_new347(T1 initialize);
/* New instance of type [attached] ARRAY [[attached] ET_TYPE] */
extern T0* GE_new348(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_TYPE] */
extern T0* GE_new349(T6 a1, T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT */
extern T0* GE_new350(T1 initialize);
/* New instance of type ET_QUERY_LIST */
extern T0* GE_new351(T1 initialize);
/* New instance of type ET_PROCEDURE_LIST */
extern T0* GE_new352(T1 initialize);
/* New instance of type DT_SHARED_SYSTEM_CLOCK */
extern T0* GE_new353(T1 initialize);
/* New instance of type DT_SYSTEM_CLOCK */
extern T0* GE_new354(T1 initialize);
/* New instance of type DT_DATE_TIME */
extern T0* GE_new355(T1 initialize);
/* New instance of type ET_EIFFEL_PREPARSER */
extern T0* GE_new357(T1 initialize);
/* New instance of type ET_MASTER_CLASS_CHECKER */
extern T0* GE_new358(T1 initialize);
/* New instance of type ET_EIFFEL_PARSER */
extern T0* GE_new359(T1 initialize);
/* New instance of type ET_PROVIDER_CHECKER */
extern T0* GE_new360(T1 initialize);
/* New instance of type ET_ANCESTOR_BUILDER */
extern T0* GE_new361(T1 initialize);
/* New instance of type ET_FEATURE_FLATTENER */
extern T0* GE_new362(T1 initialize);
/* New instance of type ET_INTERFACE_CHECKER */
extern T0* GE_new363(T1 initialize);
/* New instance of type ET_IMPLEMENTATION_CHECKER */
extern T0* GE_new364(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_CLASS] */
extern T0* GE_new365(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] DS_ARRAYED_LIST [[attached] ET_CLASS]] */
extern T0* GE_new366(T1 initialize);
/* New instance of type ET_AST_NULL_PROCESSOR */
extern T0* GE_new367(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] INTEGER_32] */
extern T0* GE_new368(T1 initialize);
/* New instance of type ET_AST_FACTORY */
extern T0* GE_new369(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
extern T0* GE_new371(T1 initialize);
/* New instance of type DT_DATE_TIME_DURATION */
extern T0* GE_new372(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_SET_LIST */
extern T0* GE_new373(T1 initialize);
/* New instance of type KL_STRING_OUTPUT_STREAM */
extern T0* GE_new374(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER] */
extern T0* GE_new375(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [detachable ET_DYNAMIC_TYPE] */
extern T0* GE_new376(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_HASH_LIST */
extern T0* GE_new377(T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET */
extern T0* GE_new378(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_STACK [[attached] ET_EXPRESSION] */
extern T0* GE_new379(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION] */
extern T0* GE_new380(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32] */
extern T0* GE_new381(T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
extern T0* GE_new382(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new383(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new384(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST] */
extern T0* GE_new385(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new386(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION] */
extern T0* GE_new387(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_AGENT] */
extern T0* GE_new388(T1 initialize);
/* New instance of type ET_EXPRESSION */
extern T0* GE_new389(T1 initialize);
/* New instance of type ET_CURRENT */
extern T0* GE_new390(T1 initialize);
/* New instance of type ET_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new391(T1 initialize);
/* New instance of type ET_QUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new392(T1 initialize);
/* New instance of type ET_QUALIFIED_CALL_EXPRESSION */
extern T0* GE_new396(T1 initialize);
/* New instance of type ET_UNQUALIFIED_CALL_EXPRESSION */
extern T0* GE_new397(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new398(T1 initialize);
/* New instance of type ET_MANIFEST_TUPLE */
extern T0* GE_new399(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new400(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE] */
extern T0* GE_new401(T1 initialize);
/* New instance of type [attached] ARRAY [[attached] INTEGER_32] */
extern T0* GE_new402(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE] */
extern T0* GE_new403(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT] */
extern T0* GE_new404(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new405(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE] */
extern T0* GE_new406(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8] */
extern T0* GE_new407(T1 initialize);
/* New instance of type ET_IDENTIFIER_TESTER */
extern T0* GE_new408(T1 initialize);
/* New instance of type RX_PCRE_REGULAR_EXPRESSION */
extern T0* GE_new410(T1 initialize);
/* New instance of type KL_TEXT_OUTPUT_FILE */
extern T0* GE_new411(T1 initialize);
/* New instance of type ET_DYNAMIC_TUPLE_TYPE */
extern T0* GE_new412(T1 initialize);
/* New instance of type UT_CANNOT_WRITE_TO_FILE_ERROR */
extern T0* GE_new413(T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE_LIST */
extern T0* GE_new414(T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR */
extern T0* GE_new416(T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR_LIST */
extern T0* GE_new418(T1 initialize);
/* New instance of type [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new419(T1 initialize);
/* New instance of type ET_RESULT */
extern T0* GE_new422(T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
extern T0* GE_new424(T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
extern T0* GE_new429(T1 initialize);
/* New instance of type ET_OBJECT_TEST */
extern T0* GE_new431(T1 initialize);
/* New instance of type ET_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new432(T1 initialize);
/* New instance of type ET_EQUALITY_EXPRESSION */
extern T0* GE_new433(T1 initialize);
/* New instance of type ET_DYNAMIC_SPECIAL_TYPE */
extern T0* GE_new434(T1 initialize);
/* New instance of type [attached] DS_QUICK_SORTER [[attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new438(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_COMPARATOR_BY_ID */
extern T0* GE_new439(T1 initialize);
/* New instance of type ET_CREATE_EXPRESSION */
extern T0* GE_new444(T1 initialize);
/* New instance of type ET_QUALIFIED_CALL */
extern T0* GE_new445(T1 initialize);
/* New instance of type [attached] ARRAY [[attached] STRING_8] */
extern T0* GE_new449(T1 initialize);
/* New instance of type KL_DIRECTORY */
extern T0* GE_new451(T1 initialize);
/* New instance of type UT_TEMPLATE_EXPANDER */
extern T0* GE_new452(T1 initialize);
/* New instance of type ET_EXTENDED_ATTRIBUTE */
extern T0* GE_new454(T1 initialize);
/* New instance of type ET_COMPOUND */
extern T0* GE_new456(T1 initialize);
/* New instance of type [attached] DS_QUICK_SORTER [[attached] INTEGER_32] */
extern T0* GE_new464(T1 initialize);
/* New instance of type ET_IMPLICIT_TYPE_MARK */
extern T0* GE_new472(T1 initialize);
/* New instance of type ET_SYMBOL */
extern T0* GE_new474(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE] */
extern T0* GE_new475(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new476(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new477(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new478(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new479(T1 initialize);
/* New instance of type UT_INTEGER_FORMATTER */
extern T0* GE_new480(T1 initialize);
/* New instance of type STD_FILES */
extern T0* GE_new485(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new487(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
extern T0* GE_new490(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new491(T1 initialize);
/* New instance of type ET_CONSTANT_ATTRIBUTE */
extern T0* GE_new492(T1 initialize);
/* New instance of type ET_UNIQUE_ATTRIBUTE */
extern T0* GE_new494(T1 initialize);
/* New instance of type ET_REGULAR_INTEGER_CONSTANT */
extern T0* GE_new495(T1 initialize);
/* New instance of type ET_ATTRIBUTE */
extern T0* GE_new496(T1 initialize);
/* New instance of type ET_LIKE_CURRENT */
extern T0* GE_new498(T1 initialize);
/* New instance of type NATIVE_STRING */
extern T0* GE_new500(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_SYSTEM_PROCESSOR] */
extern T0* GE_new501(T1 initialize);
/* New instance of type WORKER_THREAD */
extern T0* GE_new502(T1 initialize);
/* New instance of type [attached] TUPLE [ET_SYSTEM_PROCESSOR, [attached] DS_ARRAYED_LIST [[attached] ET_CLASS]] */
extern T0* GE_new503(T1 initialize);
/* New instance of type ET_FEATURE_CHECKER */
extern T0* GE_new505(T1 initialize);
/* New instance of type [attached] DS_CELL [[attached] INTEGER_32] */
extern T0* GE_new506(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new507(T1 initialize);
/* New instance of type ET_TYPE_CHECKER */
extern T0* GE_new510(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT] */
extern T0* GE_new512(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
extern T0* GE_new513(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
extern T0* GE_new514(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
extern T0* GE_new515(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new516(T1 initialize);
/* New instance of type ET_NESTED_TYPE_CONTEXT */
extern T0* GE_new517(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST] */
extern T0* GE_new518(T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE */
extern T0* GE_new519(T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE_BUILDER */
extern T0* GE_new520(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT] */
extern T0* GE_new521(T1 initialize);
/* New instance of type ET_ACROSS_CURSOR_SCOPE */
extern T0* GE_new522(T1 initialize);
/* New instance of type ET_ATTACHMENT_SCOPE */
extern T0* GE_new523(T1 initialize);
/* New instance of type ET_ATTACHMENT_SCOPE_BUILDER */
extern T0* GE_new524(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE] */
extern T0* GE_new525(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM] */
extern T0* GE_new526(T1 initialize);
/* New instance of type attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new527(T1 initialize);
/* New instance of type ET_PRECONDITIONS */
extern T0* GE_new529(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE] */
extern T0* GE_new530(T1 initialize);
/* New instance of type ET_FEATURE_LIST */
extern T0* GE_new533(T1 initialize);
/* New instance of type ET_UNKNOWN_GROUP */
extern T0* GE_new536(T1 initialize);
/* New instance of type ET_BASE_TYPE_LIST */
extern T0* GE_new538(T1 initialize);
/* New instance of type ET_KEYWORD */
extern T0* GE_new539(T1 initialize);
/* New instance of type ET_CLASS_CODES */
extern T0* GE_new540(T1 initialize);
/* New instance of type PATH */
extern T0* GE_new542(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8] */
extern T0* GE_new543(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] STRING_8] */
extern T0* GE_new544(T1 initialize);
/* New instance of type ARGUMENTS_32 */
extern T0* GE_new547(T1 initialize);
/* New instance of type ET_SYSTEM_ERROR */
extern T0* GE_new548(T1 initialize);
/* New instance of type ET_INTERNAL_ERROR */
extern T0* GE_new549(T1 initialize);
/* New instance of type ET_XACE_EXTERNALS */
extern T0* GE_new551(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] STRING_8] */
extern T0* GE_new552(T1 initialize);
/* New instance of type ET_XACE_OPTIONS */
extern T0* GE_new553(T1 initialize);
/* New instance of type ET_XACE_TARGET */
extern T0* GE_new554(T1 initialize);
/* New instance of type ET_XACE_TARGETS */
extern T0* GE_new557(T1 initialize);
/* New instance of type ET_XACE_CLUSTERS */
extern T0* GE_new559(T1 initialize);
/* New instance of type ET_XACE_MOUNTED_LIBRARIES */
extern T0* GE_new560(T1 initialize);
/* New instance of type ET_XACE_CLUSTER */
extern T0* GE_new564(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE] */
extern T0* GE_new569(T1 initialize);
/* New instance of type ET_XACE_MOUNTED_LIBRARY */
extern T0* GE_new571(T1 initialize);
/* New instance of type ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
extern T0* GE_new575(T1 initialize);
/* New instance of type ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
extern T0* GE_new576(T1 initialize);
/* New instance of type ET_ECF_OPTIONS */
extern T0* GE_new581(T1 initialize);
/* New instance of type XM_NAMESPACE */
extern T0* GE_new583(T1 initialize);
/* New instance of type [attached] KL_ARRAY_ROUTINES [[attached] INTEGER_32] */
extern T0* GE_new584(T1 initialize);
/* New instance of type ET_DYNAMIC_PROCEDURE_TYPE */
extern T0* GE_new586(T1 initialize);
/* New instance of type ET_DYNAMIC_FUNCTION_TYPE */
extern T0* GE_new587(T1 initialize);
/* New instance of type UT_CONFIG_PARSER */
extern T0* GE_new588(T1 initialize);
/* New instance of type [attached] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32] */
extern T0* GE_new589(T1 initialize);
/* New instance of type ET_DO_PROCEDURE */
extern T0* GE_new592(T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET */
extern T0* GE_new595(T1 initialize);
/* New instance of type ET_DEFERRED_PROCEDURE */
extern T0* GE_new596(T1 initialize);
/* New instance of type [attached] CELL [[attached] INTEGER_32] */
extern T0* GE_new599(T1 initialize);
/* New instance of type [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32] */
extern T0* GE_new601(T1 initialize);
/* New instance of type KL_PATHNAME */
extern T0* GE_new603(T1 initialize);
/* New instance of type EXCEPTIONS */
extern T0* GE_new604(T1 initialize);
/* New instance of type READABLE_STRING_32 */
extern T0* GE_new605(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] NATURAL_8] */
extern T0* GE_new606(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION] */
extern T0* GE_new608(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] AP_OPTION] */
extern T0* GE_new611(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] AP_OPTION] */
extern T0* GE_new612(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new614(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new615(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new616(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8] */
extern T0* GE_new618(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable STRING_8] */
extern T0* GE_new620(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable STRING_8] */
extern T0* GE_new621(T1 initialize);
/* New instance of type attached DS_LINKABLE [[attached] STRING_8] */
extern T0* GE_new623(T1 initialize);
/* New instance of type attached DS_LINKABLE [[attached] BOOLEAN] */
extern T0* GE_new626(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] BOOLEAN] */
extern T0* GE_new627(T1 initialize);
/* New instance of type attached DS_LINKABLE [[attached] INTEGER_32] */
extern T0* GE_new629(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] INTEGER_32] */
extern T0* GE_new630(T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER */
extern T0* GE_new632(T1 initialize);
/* New instance of type [attached] ARRAY [[attached] XM_CALLBACKS_FILTER] */
extern T0* GE_new633(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] XM_CALLBACKS_FILTER] */
extern T0* GE_new634(T6 a1, T1 initialize);
/* New instance of type XM_CALLBACKS_NULL */
extern T0* GE_new635(T1 initialize);
/* New instance of type XM_POSITION_TABLE */
extern T0* GE_new637(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] XM_NAMESPACE] */
extern T0* GE_new638(T1 initialize);
/* New instance of type UT_COUNTER */
extern T0* GE_new642(T1 initialize);
/* New instance of type [attached] KL_AGENT_ROUTINES [[attached] ET_CLASS] */
extern T0* GE_new643(T1 initialize);
/* New instance of type [attached] TUPLE [UT_COUNTER] */
extern T0* GE_new644(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ET_CLASS], [attached] PROCEDURE [[attached] TUPLE]] */
extern T0* GE_new645(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new647(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLIES */
extern T0* GE_new648(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY */
extern T0* GE_new649(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new650(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new651(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new652(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new653(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_INTERNAL_UNIVERSE] */
extern T0* GE_new654(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new655(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]]] */
extern T0* GE_new656(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DOTNET_ASSEMBLIES] */
extern T0* GE_new657(T1 initialize);
/* New instance of type [attached] TUPLE [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new658(T1 initialize);
/* New instance of type ET_LIBRARY */
extern T0* GE_new659(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_LIBRARY] */
extern T0* GE_new660(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_LIBRARY]] */
extern T0* GE_new661(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_UNIVERSE] */
extern T0* GE_new662(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_UNIVERSE]] */
extern T0* GE_new663(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]]] */
extern T0* GE_new664(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], detachable FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
extern T0* GE_new665(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new667(T1 initialize);
/* New instance of type ET_XACE_LIBRARY_CONFIG */
extern T0* GE_new668(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_XACE_CLUSTER] */
extern T0* GE_new669(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_XACE_CLUSTER]] */
extern T0* GE_new670(T1 initialize);
/* New instance of type [attached] TUPLE [ET_XACE_CLUSTERS] */
extern T0* GE_new671(T1 initialize);
/* New instance of type ET_MASTER_CLASS */
extern T0* GE_new672(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_CLUSTER] */
extern T0* GE_new674(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]] */
extern T0* GE_new675(T1 initialize);
/* New instance of type [attached] TUPLE [ET_XACE_SYSTEM] */
extern T0* GE_new676(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE] */
extern T0* GE_new677(T1 initialize);
/* New instance of type [attached] TUPLE [ET_AST_PROCESSOR] */
extern T0* GE_new678(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_MASTER_CLASS] */
extern T0* GE_new679(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]] */
extern T0* GE_new680(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new681(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY]] */
extern T0* GE_new682(T1 initialize);
/* New instance of type ET_ANCESTORS_STATUS_CHECKER */
extern T0* GE_new683(T1 initialize);
/* New instance of type ET_FLATTENING_STATUS_CHECKER */
extern T0* GE_new684(T1 initialize);
/* New instance of type ET_INTERFACE_STATUS_CHECKER */
extern T0* GE_new685(T1 initialize);
/* New instance of type ET_IMPLEMENTATION_STATUS_CHECKER */
extern T0* GE_new686(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]] */
extern T0* GE_new687(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
extern T0* GE_new689(T1 initialize);
/* New instance of type [attached] TUPLE [ET_FLATTENING_STATUS_CHECKER] */
extern T0* GE_new690(T1 initialize);
/* New instance of type [attached] TUPLE [ET_INTERFACE_STATUS_CHECKER] */
extern T0* GE_new691(T1 initialize);
/* New instance of type [attached] TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
extern T0* GE_new692(T1 initialize);
/* New instance of type [attached] TUPLE [BOOLEAN] */
extern T0* GE_new693(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_UNIVERSE] */
extern T0* GE_new694(T1 initialize);
/* New instance of type ET_CLASS_NAME_TESTER */
extern T0* GE_new696(T1 initialize);
/* New instance of type ET_PARENT */
extern T0* GE_new698(T1 initialize);
/* New instance of type ET_PARENT_LIST */
extern T0* GE_new699(T1 initialize);
/* New instance of type ET_CLIENT_LIST */
extern T0* GE_new700(T1 initialize);
/* New instance of type ET_BUILTIN_CONVERT_FEATURE */
extern T0* GE_new701(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]]] */
extern T0* GE_new706(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new712(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]]] */
extern T0* GE_new713(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_CLASS], [attached] BOOLEAN]] */
extern T0* GE_new714(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_UNIVERSE]] */
extern T0* GE_new715(T1 initialize);
/* New instance of type ET_CLIENT */
extern T0* GE_new716(T1 initialize);
/* New instance of type ET_ATTACHMENT_SEPARATE_KEYWORDS */
extern T0* GE_new717(T1 initialize);
/* New instance of type ET_NONE_GROUP */
extern T0* GE_new723(T1 initialize);
/* New instance of type ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new724(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8] */
extern T0* GE_new729(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_XACE_LIBRARY_CONFIG] */
extern T0* GE_new730(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_LIBRARY_CONFIG] */
extern T0* GE_new731(T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER */
extern T0* GE_new732(T1 initialize);
/* New instance of type XM_DEFAULT_POSITION */
extern T0* GE_new733(T1 initialize);
/* New instance of type [attached] DS_BILINKED_LIST [[attached] XM_POSITION] */
extern T0* GE_new736(T1 initialize);
/* New instance of type [attached] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER] */
extern T0* GE_new737(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8] */
extern T0* GE_new738(T1 initialize);
/* New instance of type XM_NULL_EXTERNAL_RESOLVER */
extern T0* GE_new740(T1 initialize);
/* New instance of type XM_DTD_CALLBACKS_NULL */
extern T0* GE_new742(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new743(T1 initialize);
/* New instance of type XM_EIFFEL_PARSER_NAME */
extern T0* GE_new744(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new745(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new746(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new747(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new748(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID] */
extern T0* GE_new749(T1 initialize);
/* New instance of type XM_DTD_EXTERNAL_ID */
extern T0* GE_new750(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] XM_DTD_EXTERNAL_ID] */
extern T0* GE_new751(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new752(T1 initialize);
/* New instance of type XM_DTD_ELEMENT_CONTENT */
extern T0* GE_new753(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new754(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new755(T1 initialize);
/* New instance of type [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new756(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new757(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new758(T1 initialize);
/* New instance of type XM_DTD_ATTRIBUTE_CONTENT */
extern T0* GE_new759(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new760(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]] */
extern T0* GE_new761(T1 initialize);
/* New instance of type [attached] DS_BILINKED_LIST [[attached] STRING_8] */
extern T0* GE_new762(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]] */
extern T0* GE_new763(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] BOOLEAN] */
extern T0* GE_new764(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION] */
extern T0* GE_new765(T1 initialize);
/* New instance of type XM_EIFFEL_DECLARATION */
extern T0* GE_new766(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] XM_EIFFEL_DECLARATION] */
extern T0* GE_new767(T6 a1, T1 initialize);
/* New instance of type XM_EIFFEL_ENTITY_DEF */
extern T0* GE_new772(T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER_DTD */
extern T0* GE_new773(T1 initialize);
/* New instance of type XM_EIFFEL_PE_ENTITY_DEF */
extern T0* GE_new775(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8] */
extern T0* GE_new777(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_LIBRARY] */
extern T0* GE_new778(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY] */
extern T0* GE_new783(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new784(T6 a1, T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8] */
extern T0* GE_new789(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new790(T1 initialize);
/* New instance of type ET_CLUSTERS */
extern T0* GE_new791(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY] */
extern T0* GE_new792(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_LIBRARY] */
extern T0* GE_new793(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_LIBRARY]] */
extern T0* GE_new794(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new796(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new798(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8] */
extern T0* GE_new799(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8] */
extern T0* GE_new800(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_TARGET] */
extern T0* GE_new801(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET] */
extern T0* GE_new803(T1 initialize);
/* New instance of type attached DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
extern T0* GE_new807(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
extern T0* GE_new808(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION] */
extern T0* GE_new809(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new810(T1 initialize);
/* New instance of type [attached] KL_EQUALITY_TESTER [[attached] ET_IDENTIFIER] */
extern T0* GE_new812(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER] */
extern T0* GE_new815(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER] */
extern T0* GE_new816(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_SYSTEM] */
extern T0* GE_new819(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER] */
extern T0* GE_new820(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_LACE_CLUSTER] */
extern T0* GE_new821(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME] */
extern T0* GE_new828(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS] */
extern T0* GE_new829(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_MASTER_CLASS] */
extern T0* GE_new830(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME] */
extern T0* GE_new831(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_CLASS_NAME] */
extern T0* GE_new832(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new833(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new834(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new835(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new845(T6 a1, T1 initialize);
/* New instance of type ET_BRACKET_SYMBOL */
extern T0* GE_new846(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new848(T1 initialize);
/* New instance of type C_DATE */
extern T0* GE_new850(T1 initialize);
/* New instance of type KL_STDIN_FILE */
extern T0* GE_new851(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_STACK [[attached] INTEGER_32] */
extern T0* GE_new853(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new854(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new855(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD] */
extern T0* GE_new856(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL] */
extern T0* GE_new857(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new858(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST] */
extern T0* GE_new859(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new860(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new861(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM] */
extern T0* GE_new862(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_QUERY] */
extern T0* GE_new863(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE] */
extern T0* GE_new864(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new865(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS] */
extern T0* GE_new866(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
extern T0* GE_new867(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_KEYWORD] */
extern T0* GE_new869(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new870(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new872(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new873(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new875(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
extern T0* GE_new876(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_SYMBOL] */
extern T0* GE_new878(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
extern T0* GE_new879(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_POSITION] */
extern T0* GE_new881(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new882(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new884(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
extern T0* GE_new885(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_BREAK] */
extern T0* GE_new887(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new888(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new890(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
extern T0* GE_new891(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CURRENT] */
extern T0* GE_new893(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
extern T0* GE_new894(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FREE_OPERATOR] */
extern T0* GE_new896(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new897(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new899(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new900(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new902(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
extern T0* GE_new903(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_MANIFEST_STRING] */
extern T0* GE_new905(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
extern T0* GE_new906(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_REAL_CONSTANT] */
extern T0* GE_new908(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
extern T0* GE_new909(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_RESULT] */
extern T0* GE_new910(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new911(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new913(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new914(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new916(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_VOID] */
extern T0* GE_new917(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_VOID] */
extern T0* GE_new919(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new920(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new922(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new923(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new925(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new926(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new928(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new929(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new931(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new932(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new934(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new935(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new936(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new937(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new939(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new940(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new941(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new942(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new944(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new945(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new947(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new948(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new950(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
extern T0* GE_new951(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_AGENT_TARGET] */
extern T0* GE_new953(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
extern T0* GE_new954(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ALIAS_NAME] */
extern T0* GE_new956(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
extern T0* GE_new957(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ASSIGNER] */
extern T0* GE_new959(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new960(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new962(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
extern T0* GE_new963(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CALL_AGENT] */
extern T0* GE_new965(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new966(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new967(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new968(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new970(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
extern T0* GE_new971(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CHOICE] */
extern T0* GE_new973(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new974(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new976(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
extern T0* GE_new977(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CHOICE_ITEM] */
extern T0* GE_new979(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
extern T0* GE_new980(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CHOICE_LIST] */
extern T0* GE_new982(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
extern T0* GE_new983(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CLASS] */
extern T0* GE_new985(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
extern T0* GE_new986(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CLIENT_ITEM] */
extern T0* GE_new988(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
extern T0* GE_new989(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CLIENTS] */
extern T0* GE_new991(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
extern T0* GE_new992(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_COMPOUND] */
extern T0* GE_new993(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
extern T0* GE_new994(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CONDITIONAL] */
extern T0* GE_new996(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
extern T0* GE_new997(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CONSTANT] */
extern T0* GE_new999(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1000(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1002(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1003(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1005(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new1006(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new1008(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1009(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1011(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new1012(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new1014(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1015(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1017(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new1018(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new1020(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new1021(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new1023(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
extern T0* GE_new1024(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CREATION_REGION] */
extern T0* GE_new1026(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
extern T0* GE_new1027(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CREATOR] */
extern T0* GE_new1029(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
extern T0* GE_new1030(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CREATOR_LIST] */
extern T0* GE_new1032(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new1033(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new1035(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
extern T0* GE_new1036(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
extern T0* GE_new1038(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
extern T0* GE_new1039(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
extern T0* GE_new1041(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
extern T0* GE_new1042(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ELSEIF_PART] */
extern T0* GE_new1044(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new1045(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new1047(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
extern T0* GE_new1048(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_EXPORT] */
extern T0* GE_new1050(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
extern T0* GE_new1051(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_EXPORT_LIST] */
extern T0* GE_new1052(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
extern T0* GE_new1053(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_EXPRESSION] */
extern T0* GE_new1054(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
extern T0* GE_new1055(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_EXPRESSION_ITEM] */
extern T0* GE_new1057(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new1058(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new1060(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new1061(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new1063(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new1064(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new1066(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new1067(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new1069(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new1070(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new1072(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
extern T0* GE_new1073(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FEATURE_NAME] */
extern T0* GE_new1074(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1075(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1077(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new1078(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new1080(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1081(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1083(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new1084(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new1085(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new1086(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new1088(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1089(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1091(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new1092(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new1093(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
extern T0* GE_new1094(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_IF_EXPRESSION] */
extern T0* GE_new1096(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new1097(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new1099(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
extern T0* GE_new1100(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_INDEXING_LIST] */
extern T0* GE_new1102(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
extern T0* GE_new1103(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_INDEXING_ITEM] */
extern T0* GE_new1105(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
extern T0* GE_new1106(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_INDEXING_TERM] */
extern T0* GE_new1108(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
extern T0* GE_new1109(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
extern T0* GE_new1111(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
extern T0* GE_new1112(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_INDEXING_TERM_LIST] */
extern T0* GE_new1114(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
extern T0* GE_new1115(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_INLINE_AGENT] */
extern T0* GE_new1117(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new1118(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new1120(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
extern T0* GE_new1121(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_INSTRUCTION] */
extern T0* GE_new1123(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
extern T0* GE_new1124(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_INVARIANTS] */
extern T0* GE_new1126(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new1127(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new1128(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
extern T0* GE_new1129(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_LIKE_TYPE] */
extern T0* GE_new1131(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new1132(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new1134(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1135(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1137(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new1138(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new1139(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new1140(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new1142(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new1143(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new1145(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1146(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1148(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new1149(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new1151(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new1152(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new1153(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
extern T0* GE_new1154(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_OBSOLETE] */
extern T0* GE_new1156(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new1157(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new1159(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
extern T0* GE_new1160(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_PARENT] */
extern T0* GE_new1162(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
extern T0* GE_new1163(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
extern T0* GE_new1165(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
extern T0* GE_new1166(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_PARENT_ITEM] */
extern T0* GE_new1168(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
extern T0* GE_new1169(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_PARENT_LIST] */
extern T0* GE_new1171(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
extern T0* GE_new1172(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_POSTCONDITIONS] */
extern T0* GE_new1174(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
extern T0* GE_new1175(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_PRECONDITIONS] */
extern T0* GE_new1176(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
extern T0* GE_new1177(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_PROCEDURE] */
extern T0* GE_new1178(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new1179(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new1181(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
extern T0* GE_new1182(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_QUERY] */
extern T0* GE_new1183(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
extern T0* GE_new1184(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_RENAME_ITEM] */
extern T0* GE_new1186(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
extern T0* GE_new1187(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_RENAME_LIST] */
extern T0* GE_new1188(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new1189(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new1191(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new1192(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new1194(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
extern T0* GE_new1195(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_TYPE] */
extern T0* GE_new1196(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
extern T0* GE_new1197(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_TYPE_ITEM] */
extern T0* GE_new1199(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
extern T0* GE_new1200(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_TYPE_LIST] */
extern T0* GE_new1202(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
extern T0* GE_new1203(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_VARIANT] */
extern T0* GE_new1205(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
extern T0* GE_new1206(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_WHEN_PART] */
extern T0* GE_new1208(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new1209(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new1211(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
extern T0* GE_new1212(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_WRITABLE] */
extern T0* GE_new1213(T6 a1, T1 initialize);
/* New instance of type [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS] */
extern T0* GE_new1214(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS] */
extern T0* GE_new1215(T1 initialize);
/* New instance of type ET_PARENT_CHECKER1 */
extern T0* GE_new1216(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER1 */
extern T0* GE_new1217(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME] */
extern T0* GE_new1218(T1 initialize);
/* New instance of type ET_FEATURE_NAME_TESTER */
extern T0* GE_new1219(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME] */
extern T0* GE_new1221(T1 initialize);
/* New instance of type ET_ALIAS_NAME_TESTER */
extern T0* GE_new1222(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST] */
extern T0* GE_new1224(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS] */
extern T0* GE_new1225(T1 initialize);
/* New instance of type ET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1226(T1 initialize);
/* New instance of type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1227(T1 initialize);
/* New instance of type ET_IDENTIFIER_TYPE_RESOLVER */
extern T0* GE_new1228(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
extern T0* GE_new1229(T1 initialize);
/* New instance of type ET_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1230(T1 initialize);
/* New instance of type ET_SIGNATURE_CHECKER */
extern T0* GE_new1231(T1 initialize);
/* New instance of type ET_PARENT_CHECKER2 */
extern T0* GE_new1232(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER2 */
extern T0* GE_new1233(T1 initialize);
/* New instance of type ET_BUILTIN_FEATURE_CHECKER */
extern T0* GE_new1234(T1 initialize);
/* New instance of type ET_PRECURSOR_CHECKER */
extern T0* GE_new1235(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32] */
extern T0* GE_new1236(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_CLASS] */
extern T0* GE_new1237(T1 initialize);
/* New instance of type ET_PARENT_CHECKER3 */
extern T0* GE_new1238(T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1239(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
extern T0* GE_new1240(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_LIST */
extern T0* GE_new1242(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER */
extern T0* GE_new1243(T1 initialize);
/* New instance of type ET_CONSTRAINT_CREATOR */
extern T0* GE_new1244(T1 initialize);
/* New instance of type ET_INHERITED_FEATURE */
extern T0* GE_new1246(T1 initialize);
/* New instance of type ET_PARENT_FEATURE */
extern T0* GE_new1247(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_PROCEDURE] */
extern T0* GE_new1248(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_QUERY] */
extern T0* GE_new1249(T1 initialize);
/* New instance of type ET_SUPPLIER_BUILDER */
extern T0* GE_new1250(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_CLASS] */
extern T0* GE_new1251(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS] */
extern T0* GE_new1252(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS] */
extern T0* GE_new1253(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] INTEGER_32] */
extern T0* GE_new1255(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new1258(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new1259(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_IDENTIFIER] */
extern T0* GE_new1260(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_DYNAMIC_TYPE] */
extern T0* GE_new1261(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_TYPE] */
extern T0* GE_new1262(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_TYPE] */
extern T0* GE_new1263(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_EXPRESSION] */
extern T0* GE_new1265(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION] */
extern T0* GE_new1266(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EXPRESSION] */
extern T0* GE_new1267(T1 initialize);
/* New instance of type attached KL_EQUALITY_TESTER [[attached] INTEGER_32] */
extern T0* GE_new1271(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32] */
extern T0* GE_new1273(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new1274(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new1275(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new1276(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new1279(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_OBJECT_TEST] */
extern T0* GE_new1282(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST] */
extern T0* GE_new1283(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_TEST] */
extern T0* GE_new1284(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new1286(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new1287(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new1288(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_EQUALITY_EXPRESSION] */
extern T0* GE_new1290(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION] */
extern T0* GE_new1291(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EQUALITY_EXPRESSION] */
extern T0* GE_new1292(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_AGENT] */
extern T0* GE_new1294(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT] */
extern T0* GE_new1295(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_AGENT] */
extern T0* GE_new1296(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_EXPRESSION_ITEM] */
extern T0* GE_new1298(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION_ITEM] */
extern T0* GE_new1300(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new1301(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new1302(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new1303(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new1304(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FEATURE] */
extern T0* GE_new1309(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_FEATURE] */
extern T0* GE_new1310(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE] */
extern T0* GE_new1311(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE] */
extern T0* GE_new1312(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_CONSTANT] */
extern T0* GE_new1313(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CONSTANT] */
extern T0* GE_new1316(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT] */
extern T0* GE_new1317(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_INLINE_CONSTANT] */
extern T0* GE_new1318(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT] */
extern T0* GE_new1321(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new1322(T6 a1, T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new1325(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new1326(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_DYNAMIC_FEATURE] */
extern T0* GE_new1327(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_FEATURE] */
extern T0* GE_new1328(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_FEATURE] */
extern T0* GE_new1329(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8] */
extern T0* GE_new1331(T1 initialize);
/* New instance of type RX_BYTE_CODE */
extern T0* GE_new1337(T1 initialize);
/* New instance of type RX_CHARACTER_SET */
extern T0* GE_new1338(T1 initialize);
/* New instance of type RX_CASE_MAPPING */
extern T0* GE_new1339(T1 initialize);
/* New instance of type [attached] ARRAY [[attached] RX_CHARACTER_SET] */
extern T0* GE_new1342(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] RX_CHARACTER_SET] */
extern T0* GE_new1343(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]] */
extern T0* GE_new1345(T1 initialize);
/* New instance of type [attached] ARRAY [[attached] BOOLEAN] */
extern T0* GE_new1346(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1349(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1350(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1351(T1 initialize);
/* New instance of type THREAD_ATTRIBUTES */
extern T0* GE_new1352(T1 initialize);
/* New instance of type [attached] CELL [[attached] BOOLEAN] */
extern T0* GE_new1353(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new1359(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_AGENT] */
extern T0* GE_new1361(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_INLINE_AGENT] */
extern T0* GE_new1363(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INLINE_AGENT] */
extern T0* GE_new1364(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
extern T0* GE_new1365(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
extern T0* GE_new1366(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
extern T0* GE_new1367(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
extern T0* GE_new1368(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
extern T0* GE_new1369(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
extern T0* GE_new1370(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
extern T0* GE_new1371(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE] */
extern T0* GE_new1372(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
extern T0* GE_new1373(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
extern T0* GE_new1374(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new1375(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new1376(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new1377(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_TYPE] */
extern T0* GE_new1379(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1380(T1 initialize);
/* New instance of type ET_NAMED_OBJECT_TEST */
extern T0* GE_new1384(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1385(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1386(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1387(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT] */
extern T0* GE_new1388(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT] */
extern T0* GE_new1392(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT] */
extern T0* GE_new1393(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT] */
extern T0* GE_new1394(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] INTEGER_32] */
extern T0* GE_new1395(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ATTACHMENT_SCOPE] */
extern T0* GE_new1398(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE] */
extern T0* GE_new1399(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ATTACHMENT_SCOPE] */
extern T0* GE_new1400(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM] */
extern T0* GE_new1402(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_INDEXING_TERM] */
extern T0* GE_new1404(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INDEXING_TERM] */
extern T0* GE_new1405(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE] */
extern T0* GE_new1406(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ASSERTIONS] */
extern T0* GE_new1407(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS] */
extern T0* GE_new1409(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME] */
extern T0* GE_new1411(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8] */
extern T0* GE_new1415(T1 initialize);
/* New instance of type STRING_TO_INTEGER_CONVERTOR */
extern T0* GE_new1416(T1 initialize);
/* New instance of type ET_VALIDITY_ERROR */
extern T0* GE_new1418(T1 initialize);
/* New instance of type UC_UNICODE_ROUTINES */
extern T0* GE_new1419(T1 initialize);
/* New instance of type ET_XACE_CLASS_OPTIONS */
extern T0* GE_new1422(T1 initialize);
/* New instance of type attached DS_LINKED_LIST [[attached] ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new1424(T1 initialize);
/* New instance of type ET_XACE_FEATURE_OPTIONS */
extern T0* GE_new1426(T1 initialize);
/* New instance of type ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
extern T0* GE_new1427(T1 initialize);
/* New instance of type ET_XACE_MISSING_ATTRIBUTE_ERROR */
extern T0* GE_new1428(T1 initialize);
/* New instance of type ET_XACE_UNKNOWN_ELEMENT_ERROR */
extern T0* GE_new1429(T1 initialize);
/* New instance of type ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
extern T0* GE_new1430(T1 initialize);
/* New instance of type ET_XACE_MISSING_ELEMENT_ERROR */
extern T0* GE_new1431(T1 initialize);
/* New instance of type ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
extern T0* GE_new1432(T1 initialize);
/* New instance of type ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
extern T0* GE_new1433(T1 initialize);
/* New instance of type ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
extern T0* GE_new1434(T1 initialize);
/* New instance of type ET_ECF_NOTE_ELEMENT */
extern T0* GE_new1438(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new1439(T1 initialize);
/* New instance of type ET_ECF_TARGET_PARENT */
extern T0* GE_new1453(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
extern T0* GE_new1455(T1 initialize);
/* New instance of type ET_ECF_VERSION */
extern T0* GE_new1459(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new1461(T1 initialize);
/* New instance of type ET_ECF_CLUSTER */
extern T0* GE_new1463(T1 initialize);
/* New instance of type ET_ECF_CLUSTERS */
extern T0* GE_new1464(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_CFLAG */
extern T0* GE_new1466(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_CFLAGS */
extern T0* GE_new1467(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_INCLUDE */
extern T0* GE_new1469(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_INCLUDES */
extern T0* GE_new1470(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LIBRARY */
extern T0* GE_new1472(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LIBRARIES */
extern T0* GE_new1473(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LINKER_FLAG */
extern T0* GE_new1475(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LINKER_FLAGS */
extern T0* GE_new1476(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_MAKE */
extern T0* GE_new1478(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_MAKES */
extern T0* GE_new1479(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_OBJECT */
extern T0* GE_new1481(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_OBJECTS */
extern T0* GE_new1482(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_RESOURCE */
extern T0* GE_new1484(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_RESOURCES */
extern T0* GE_new1485(T1 initialize);
/* New instance of type ET_ECF_FILE_RULE */
extern T0* GE_new1487(T1 initialize);
/* New instance of type ET_ECF_FILE_RULES */
extern T0* GE_new1488(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_LIBRARIES */
extern T0* GE_new1490(T1 initialize);
/* New instance of type ET_ECF_ACTION */
extern T0* GE_new1492(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ACTION] */
extern T0* GE_new1493(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_OPTIONS] */
extern T0* GE_new1497(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_OPTIONS]] */
extern T0* GE_new1498(T1 initialize);
/* New instance of type ET_ECF_ROOT_ALL_CLASSES */
extern T0* GE_new1500(T1 initialize);
/* New instance of type ET_ECF_ROOT_CLASS */
extern T0* GE_new1501(T1 initialize);
/* New instance of type ET_ECF_ORED_CONDITIONS */
extern T0* GE_new1503(T1 initialize);
/* New instance of type ET_ECF_ANDED_CONDITIONS */
extern T0* GE_new1505(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
extern T0* GE_new1506(T1 initialize);
/* New instance of type ET_ECF_VISIBLE_CLASS */
extern T0* GE_new1508(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1509(T1 initialize);
/* New instance of type ET_ECF_BUILD_CONDITION */
extern T0* GE_new1518(T1 initialize);
/* New instance of type ET_ECF_CONCURRENCY_CONDITION */
extern T0* GE_new1519(T1 initialize);
/* New instance of type ET_ECF_CUSTOM_CONDITION */
extern T0* GE_new1520(T1 initialize);
/* New instance of type ET_ECF_DOTNET_CONDITION */
extern T0* GE_new1521(T1 initialize);
/* New instance of type ET_ECF_DYNAMIC_RUNTIME_CONDITION */
extern T0* GE_new1522(T1 initialize);
/* New instance of type ET_ECF_PLATFORM_CONDITION */
extern T0* GE_new1523(T1 initialize);
/* New instance of type ET_ECF_COMPILER_VERSION_CONDITION */
extern T0* GE_new1524(T1 initialize);
/* New instance of type ET_ECF_MSIL_CLR_VERSION_CONDITION */
extern T0* GE_new1525(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_SYSTEM] */
extern T0* GE_new1526(T1 initialize);
/* New instance of type ET_PARENTHESIS_EXPRESSION */
extern T0* GE_new1528(T1 initialize);
/* New instance of type ET_REGULAR_MANIFEST_STRING */
extern T0* GE_new1532(T1 initialize);
/* New instance of type ET_INFIX_FREE_NAME */
extern T0* GE_new1533(T1 initialize);
/* New instance of type ET_PARENT_CLAUSE_LIST */
extern T0* GE_new1534(T1 initialize);
/* New instance of type ET_CREATOR_LIST */
extern T0* GE_new1537(T1 initialize);
/* New instance of type [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE] */
extern T0* GE_new1540(T1 initialize);
/* New instance of type [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE] */
extern T0* GE_new1542(T1 initialize);
/* New instance of type UT_TRISTATE */
extern T0* GE_new1546(T1 initialize);
/* New instance of type [attached] KL_AGENT_ROUTINES [[attached] ANY] */
extern T0* GE_new1547(T1 initialize);
/* New instance of type [attached] TUPLE [UT_TRISTATE] */
extern T0* GE_new1548(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ANY], [attached] PROCEDURE [[attached] TUPLE]] */
extern T0* GE_new1549(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [[attached] ET_MASTER_CLASS]] */
extern T0* GE_new1550(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE] */
extern T0* GE_new1551(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], detachable FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
extern T0* GE_new1553(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_MASTER_CLASS], [attached] BOOLEAN]] */
extern T0* GE_new1554(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_MASTER_CLASS], [attached] BOOLEAN], detachable FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
extern T0* GE_new1555(T1 initialize);
/* New instance of type UC_UTF8_ROUTINES */
extern T0* GE_new1556(T1 initialize);
/* New instance of type UC_UTF8_STRING */
extern T0* GE_new1557(T1 initialize);
/* New instance of type XM_EIFFEL_INPUT_STREAM */
extern T0* GE_new1558(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET] */
extern T0* GE_new1562(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1564(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT] */
extern T0* GE_new1566(T1 initialize);
/* New instance of type KL_CHARACTER_BUFFER */
extern T0* GE_new1569(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_QUERY] */
extern T0* GE_new1572(T6 a1, T1 initialize);
/* New instance of type ET_ALIAS_NAME */
extern T0* GE_new1573(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_QUERY] */
extern T0* GE_new1574(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_PROCEDURE] */
extern T0* GE_new1575(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_PROCEDURE] */
extern T0* GE_new1576(T1 initialize);
/* New instance of type KL_STRING_INPUT_STREAM */
extern T0* GE_new1577(T1 initialize);
/* New instance of type ET_TEXT_GROUP */
extern T0* GE_new1578(T1 initialize);
/* New instance of type ET_OBJECT_TEST_LIST */
extern T0* GE_new1583(T1 initialize);
/* New instance of type ET_ACROSS_COMPONENT_LIST */
extern T0* GE_new1585(T1 initialize);
/* New instance of type ET_CREATOR */
extern T0* GE_new1625(T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE */
extern T0* GE_new1631(T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE */
extern T0* GE_new1655(T1 initialize);
/* New instance of type ET_ELSEIF_PART */
extern T0* GE_new1675(T1 initialize);
/* New instance of type ET_ELSEIF_EXPRESSION */
extern T0* GE_new1676(T1 initialize);
/* New instance of type ET_WHEN_PART */
extern T0* GE_new1677(T1 initialize);
/* New instance of type ET_CONSTRAINED_FORMAL_PARAMETER */
extern T0* GE_new1712(T1 initialize);
/* New instance of type ET_FILE_POSITION */
extern T0* GE_new1716(T1 initialize);
/* New instance of type ET_TAGGED_ASSERTION */
extern T0* GE_new1718(T1 initialize);
/* New instance of type [attached] DS_QUICK_SORTER [[attached] ET_QUERY] */
extern T0* GE_new1721(T1 initialize);
/* New instance of type [attached] DS_QUICK_SORTER [[attached] ET_PROCEDURE] */
extern T0* GE_new1722(T1 initialize);
/* New instance of type ET_REDECLARED_FEATURE */
extern T0* GE_new1724(T1 initialize);
/* New instance of type ET_CONVERT_FEATURE_LIST */
extern T0* GE_new1726(T1 initialize);
/* New instance of type ET_ALIASED_FEATURE_NAME */
extern T0* GE_new1728(T1 initialize);
/* New instance of type ET_FEATURE_IDS */
extern T0* GE_new1730(T1 initialize);
/* New instance of type ET_RENAME */
extern T0* GE_new1731(T1 initialize);
/* New instance of type ET_POSTCONDITIONS */
extern T0* GE_new1734(T1 initialize);
/* New instance of type ET_INVARIANTS */
extern T0* GE_new1735(T1 initialize);
/* New instance of type CONSOLE */
extern T0* GE_new1748(T1 initialize);
/* New instance of type ET_LIKE_N */
extern T0* GE_new1749(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new1750(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_BASE_TYPE] */
extern T0* GE_new1753(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE] */
extern T0* GE_new1754(T1 initialize);
/* New instance of type [attached] ARRAY [[attached] IMMUTABLE_STRING_32] */
extern T0* GE_new1755(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] IMMUTABLE_STRING_32] */
extern T0* GE_new1756(T6 a1, T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8] */
extern T0* GE_new1757(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_XACE_TARGET] */
extern T0* GE_new1758(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER] */
extern T0* GE_new1759(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST [[attached] ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new1762(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_STACK [[attached] YY_BUFFER] */
extern T0* GE_new1763(T1 initialize);
/* New instance of type UT_SYNTAX_ERROR */
extern T0* GE_new1764(T1 initialize);
/* New instance of type UT_TOO_MANY_INCLUDES_ERROR */
extern T0* GE_new1765(T1 initialize);
/* New instance of type ET_DYNAMIC_TARGET_LIST */
extern T0* GE_new1768(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] NATIVE_STRING] */
extern T0* GE_new1771(T6 a1, T1 initialize);
/* New instance of type [attached] ARRAY [detachable STRING_8] */
extern T0* GE_new1772(T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER_CONTEXT */
extern T0* GE_new1773(T1 initialize);
/* New instance of type [attached] DS_LINKED_QUEUE [detachable STRING_8] */
extern T0* GE_new1776(T1 initialize);
/* New instance of type [attached] DS_LINKED_QUEUE [[attached] STRING_8] */
extern T0* GE_new1777(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
extern T0* GE_new1778(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
extern T0* GE_new1779(T1 initialize);
/* New instance of type [attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE] */
extern T0* GE_new1780(T1 initialize);
/* New instance of type [attached] KL_EQUALITY_TESTER [[attached] XM_NAMESPACE] */
extern T0* GE_new1783(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] XM_NAMESPACE] */
extern T0* GE_new1784(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE] */
extern T0* GE_new1785(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] XM_NAMESPACE] */
extern T0* GE_new1786(T6 a1, T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1787(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1788(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1789(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1792(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new1793(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new1794(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new1795(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS] */
extern T0* GE_new1796(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1797(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1801(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1802(T6 a1, T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER1 */
extern T0* GE_new1803(T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER2 */
extern T0* GE_new1804(T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
extern T0* GE_new1805(T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER3 */
extern T0* GE_new1806(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS] */
extern T0* GE_new1807(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE] */
extern T0* GE_new1808(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_UNIVERSE] */
extern T0* GE_new1809(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE] */
extern T0* GE_new1812(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_PARENT_ITEM] */
extern T0* GE_new1814(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_ITEM] */
extern T0* GE_new1816(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_CLIENT_ITEM] */
extern T0* GE_new1817(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_ITEM] */
extern T0* GE_new1818(T1 initialize);
/* New instance of type ET_BRACED_TYPE_LIST */
extern T0* GE_new1820(T1 initialize);
/* New instance of type XM_EIFFEL_CHARACTER_ENTITY */
extern T0* GE_new1822(T1 initialize);
/* New instance of type attached DS_BILINKABLE [[attached] XM_POSITION] */
extern T0* GE_new1825(T1 initialize);
/* New instance of type [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_POSITION] */
extern T0* GE_new1826(T1 initialize);
/* New instance of type attached DS_LINKABLE [[attached] XM_EIFFEL_SCANNER] */
extern T0* GE_new1828(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1829(T6 a1, T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8] */
extern T0* GE_new1834(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1835(T1 initialize);
/* New instance of type [attached] KL_EQUALITY_TESTER [[attached] XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1839(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1840(T1 initialize);
/* New instance of type [attached] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1841(T1 initialize);
/* New instance of type [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1842(T1 initialize);
/* New instance of type attached DS_BILINKABLE [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1844(T1 initialize);
/* New instance of type [attached] DS_BILINKED_LIST_CURSOR [[attached] STRING_8] */
extern T0* GE_new1846(T1 initialize);
/* New instance of type attached DS_BILINKABLE [[attached] STRING_8] */
extern T0* GE_new1848(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER] */
extern T0* GE_new1849(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ADAPTED_LIBRARY] */
extern T0* GE_new1850(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY] */
extern T0* GE_new1851(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_LIBRARY] */
extern T0* GE_new1852(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_LIBRARY] */
extern T0* GE_new1854(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY] */
extern T0* GE_new1855(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_LIBRARY] */
extern T0* GE_new1856(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1857(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1858(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1859(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LACE_CLUSTER] */
extern T0* GE_new1861(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1862(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1863(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST_LIST] */
extern T0* GE_new1864(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_OBJECT_TEST_LIST] */
extern T0* GE_new1865(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new1866(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new1867(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new1868(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new1869(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ASSERTION_ITEM] */
extern T0* GE_new1870(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM] */
extern T0* GE_new1871(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ASSERTION_ITEM] */
extern T0* GE_new1872(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY] */
extern T0* GE_new1874(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE] */
extern T0* GE_new1876(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1878(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_NAMED_CLASS] */
extern T0* GE_new1880(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS] */
extern T0* GE_new1882(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS] */
extern T0* GE_new1886(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS] */
extern T0* GE_new1887(T1 initialize);
/* New instance of type [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER] */
extern T0* GE_new1892(T1 initialize);
/* New instance of type attached DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER] */
extern T0* GE_new1894(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_TYPE */
extern T0* GE_new1895(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME] */
extern T0* GE_new1896(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_FLATTENED_FEATURE] */
extern T0* GE_new1897(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_FEATURE_NAME] */
extern T0* GE_new1903(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE] */
extern T0* GE_new1904(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME] */
extern T0* GE_new1905(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ALIAS_NAME] */
extern T0* GE_new1909(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ALIAS_NAME] */
extern T0* GE_new1910(T6 a1, T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME] */
extern T0* GE_new1912(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST] */
extern T0* GE_new1913(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_CLIENT_LIST] */
extern T0* GE_new1914(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST] */
extern T0* GE_new1915(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS] */
extern T0* GE_new1917(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT] */
extern T0* GE_new1918(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_CLIENT] */
extern T0* GE_new1919(T6 a1, T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME] */
extern T0* GE_new1920(T1 initialize);
/* New instance of type ET_CALL_NAME_TESTER */
extern T0* GE_new1921(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_CALL_NAME] */
extern T0* GE_new1923(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME] */
extern T0* GE_new1924(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME] */
extern T0* GE_new1925(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32] */
extern T0* GE_new1926(T1 initialize);
/* New instance of type ET_REPLICATED_FEATURE */
extern T0* GE_new1930(T1 initialize);
/* New instance of type ET_RENAME_LIST */
extern T0* GE_new1931(T1 initialize);
/* New instance of type ET_EXPORT_LIST */
extern T0* GE_new1932(T1 initialize);
/* New instance of type ET_ALL_EXPORT */
extern T0* GE_new1933(T1 initialize);
/* New instance of type ET_FEATURE_EXPORT */
extern T0* GE_new1934(T1 initialize);
/* New instance of type ET_KEYWORD_FEATURE_NAME_LIST */
extern T0* GE_new1935(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE] */
extern T0* GE_new1936(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new1937(T1 initialize);
/* New instance of type ET_DOTNET_SIGNATURE_TESTER */
extern T0* GE_new1938(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1939(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1941(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1943(T1 initialize);
/* New instance of type [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE] */
extern T0* GE_new1944(T1 initialize);
/* New instance of type attached DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE] */
extern T0* GE_new1946(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new1947(T1 initialize);
/* New instance of type attached DS_LINKED_LIST [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new1949(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8] */
extern T0* GE_new1950(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32] */
extern T0* GE_new1951(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_CLASS] */
extern T0* GE_new1956(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE] */
extern T0* GE_new1959(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_QUERY] */
extern T0* GE_new1961(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]] */
extern T0* GE_new1963(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]] */
extern T0* GE_new1964(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [[attached] INTEGER_32]] */
extern T0* GE_new1965(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1968(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ACROSS_COMPONENT] */
extern T0* GE_new1970(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32] */
extern T0* GE_new1972(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] NATURAL_8] */
extern T0* GE_new1978(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] NATURAL_8, [attached] ET_CLASS_NAME] */
extern T0* GE_new1979(T1 initialize);
/* New instance of type STRING_8_SEARCHER */
extern T0* GE_new1980(T1 initialize);
/* New instance of type attached ARRAYED_LIST [[attached] INTEGER_32] */
extern T0* GE_new1982(T1 initialize);
/* New instance of type ET_XACE_INVALID_EXPRESSION_ERROR */
extern T0* GE_new1986(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE] */
extern T0* GE_new1988(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE] */
extern T0* GE_new1989(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1990(T1 initialize);
/* New instance of type [attached] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE] */
extern T0* GE_new1991(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]] */
extern T0* GE_new1992(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE]] */
extern T0* GE_new1993(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE], [attached] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]]] */
extern T0* GE_new1994(T1 initialize);
/* New instance of type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
extern T0* GE_new1998(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE] */
extern T0* GE_new2001(T1 initialize);
/* New instance of type XM_COMMENT */
extern T0* GE_new2002(T1 initialize);
/* New instance of type XM_PROCESSING_INSTRUCTION */
extern T0* GE_new2003(T1 initialize);
/* New instance of type XM_CHARACTER_DATA */
extern T0* GE_new2004(T1 initialize);
/* New instance of type [attached] DS_CELL [detachable ET_CLASS] */
extern T0* GE_new2009(T1 initialize);
/* New instance of type [attached] TUPLE [detachable DS_CELL [detachable ET_CLASS]] */
extern T0* GE_new2010(T1 initialize);
/* New instance of type ST_SPLITTER */
extern T0* GE_new2012(T1 initialize);
/* New instance of type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
extern T0* GE_new2014(T1 initialize);
/* New instance of type [attached] TUPLE [ET_EIFFEL_PREPARSER, [attached] DS_ARRAYED_LIST [[attached] STRING_8]] */
extern T0* GE_new2015(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8] */
extern T0* GE_new2022(T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE_LIST */
extern T0* GE_new2027(T1 initialize);
/* New instance of type ET_TRUE_CONSTANT */
extern T0* GE_new2032(T1 initialize);
/* New instance of type ET_SEEDED_QUERY_COMPARATOR */
extern T0* GE_new2034(T1 initialize);
/* New instance of type ET_SEEDED_PROCEDURE_COMPARATOR */
extern T0* GE_new2037(T1 initialize);
/* New instance of type ET_CLIENTS */
extern T0* GE_new2040(T1 initialize);
/* New instance of type [attached] TUPLE [detachable ET_CLIENT_LIST] */
extern T0* GE_new2042(T1 initialize);
/* New instance of type ET_FREE_OPERATOR */
extern T0* GE_new2044(T1 initialize);
/* New instance of type ET_C3_CHARACTER_CONSTANT */
extern T0* GE_new2045(T1 initialize);
/* New instance of type ET_VERBATIM_STRING */
extern T0* GE_new2046(T1 initialize);
/* New instance of type ET_SPECIAL_MANIFEST_STRING */
extern T0* GE_new2047(T1 initialize);
/* New instance of type ET_UNDERSCORED_INTEGER_CONSTANT */
extern T0* GE_new2048(T1 initialize);
/* New instance of type ET_HEXADECIMAL_INTEGER_CONSTANT */
extern T0* GE_new2049(T1 initialize);
/* New instance of type ET_OCTAL_INTEGER_CONSTANT */
extern T0* GE_new2050(T1 initialize);
/* New instance of type ET_BINARY_INTEGER_CONSTANT */
extern T0* GE_new2051(T1 initialize);
/* New instance of type ET_REGULAR_REAL_CONSTANT */
extern T0* GE_new2052(T1 initialize);
/* New instance of type ET_UNDERSCORED_REAL_CONSTANT */
extern T0* GE_new2053(T1 initialize);
/* New instance of type ET_SYMBOL_OPERATOR */
extern T0* GE_new2054(T1 initialize);
/* New instance of type ET_SEMICOLON_SYMBOL */
extern T0* GE_new2055(T1 initialize);
/* New instance of type ET_QUESTION_MARK_SYMBOL */
extern T0* GE_new2056(T1 initialize);
/* New instance of type ET_KEYWORD_OPERATOR */
extern T0* GE_new2057(T1 initialize);
/* New instance of type ET_VOID */
extern T0* GE_new2058(T1 initialize);
/* New instance of type ET_AGENT_KEYWORD */
extern T0* GE_new2059(T1 initialize);
/* New instance of type ET_FALSE_CONSTANT */
extern T0* GE_new2060(T1 initialize);
/* New instance of type ET_RETRY_INSTRUCTION */
extern T0* GE_new2061(T1 initialize);
/* New instance of type ET_PRECURSOR_KEYWORD */
extern T0* GE_new2062(T1 initialize);
/* New instance of type ET_C1_CHARACTER_CONSTANT */
extern T0* GE_new2063(T1 initialize);
/* New instance of type ET_C2_CHARACTER_CONSTANT */
extern T0* GE_new2064(T1 initialize);
/* New instance of type ET_INDEXING_LIST */
extern T0* GE_new2065(T1 initialize);
/* New instance of type ET_TAGGED_INDEXING */
extern T0* GE_new2066(T1 initialize);
/* New instance of type ET_INDEXING_TERM_LIST */
extern T0* GE_new2068(T1 initialize);
/* New instance of type ET_INDEXING */
extern T0* GE_new2069(T1 initialize);
/* New instance of type ET_CUSTOM_ATTRIBUTE */
extern T0* GE_new2070(T1 initialize);
/* New instance of type ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD */
extern T0* GE_new2071(T1 initialize);
/* New instance of type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
extern T0* GE_new2072(T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new2073(T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new2074(T1 initialize);
/* New instance of type ET_CONVERT_FUNCTION */
extern T0* GE_new2075(T1 initialize);
/* New instance of type ET_CONVERT_PROCEDURE */
extern T0* GE_new2076(T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE_LIST */
extern T0* GE_new2077(T1 initialize);
/* New instance of type ET_DO_FUNCTION */
extern T0* GE_new2079(T1 initialize);
/* New instance of type ET_ONCE_FUNCTION */
extern T0* GE_new2080(T1 initialize);
/* New instance of type ET_DEFERRED_FUNCTION */
extern T0* GE_new2081(T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE */
extern T0* GE_new2082(T1 initialize);
/* New instance of type ET_PREFIX_NAME */
extern T0* GE_new2083(T1 initialize);
/* New instance of type ET_PREFIX_FREE_NAME */
extern T0* GE_new2084(T1 initialize);
/* New instance of type ET_INFIX_NAME */
extern T0* GE_new2085(T1 initialize);
/* New instance of type ET_ALIAS_FREE_NAME */
extern T0* GE_new2086(T1 initialize);
/* New instance of type ET_FORMAL_COMMA_ARGUMENT */
extern T0* GE_new2087(T1 initialize);
/* New instance of type ET_LOCAL_COMMA_VARIABLE */
extern T0* GE_new2089(T1 initialize);
/* New instance of type ET_CLASS_ASSERTION */
extern T0* GE_new2091(T1 initialize);
/* New instance of type ET_VARIANT */
extern T0* GE_new2092(T1 initialize);
/* New instance of type ET_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new2093(T1 initialize);
/* New instance of type ET_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new2095(T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_BRACED_TYPE */
extern T0* GE_new2097(T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_TYPE */
extern T0* GE_new2098(T1 initialize);
/* New instance of type ET_ASSIGNER_INSTRUCTION */
extern T0* GE_new2100(T1 initialize);
/* New instance of type ET_ASSIGNMENT */
extern T0* GE_new2101(T1 initialize);
/* New instance of type ET_ASSIGNMENT_ATTEMPT */
extern T0* GE_new2102(T1 initialize);
/* New instance of type ET_KEYWORD_EXPRESSION */
extern T0* GE_new2103(T1 initialize);
/* New instance of type ET_LOOP_INSTRUCTION */
extern T0* GE_new2104(T1 initialize);
/* New instance of type ET_BANG_INSTRUCTION */
extern T0* GE_new2106(T1 initialize);
/* New instance of type ET_CREATE_INSTRUCTION */
extern T0* GE_new2107(T1 initialize);
/* New instance of type ET_CREATION_REGION */
extern T0* GE_new2108(T1 initialize);
/* New instance of type ET_IF_INSTRUCTION */
extern T0* GE_new2109(T1 initialize);
/* New instance of type ET_ELSEIF_PART_LIST */
extern T0* GE_new2110(T1 initialize);
/* New instance of type ET_IF_EXPRESSION */
extern T0* GE_new2111(T1 initialize);
/* New instance of type ET_ELSEIF_EXPRESSION_LIST */
extern T0* GE_new2112(T1 initialize);
/* New instance of type ET_INSPECT_INSTRUCTION */
extern T0* GE_new2113(T1 initialize);
/* New instance of type ET_WHEN_PART_LIST */
extern T0* GE_new2114(T1 initialize);
/* New instance of type ET_CHOICE_LIST */
extern T0* GE_new2115(T1 initialize);
/* New instance of type ET_CHOICE_RANGE */
extern T0* GE_new2116(T1 initialize);
/* New instance of type ET_DEBUG_INSTRUCTION */
extern T0* GE_new2118(T1 initialize);
/* New instance of type ET_MANIFEST_STRING_LIST */
extern T0* GE_new2119(T1 initialize);
/* New instance of type ET_PRECURSOR_INSTRUCTION */
extern T0* GE_new2120(T1 initialize);
/* New instance of type ET_STATIC_CALL_INSTRUCTION */
extern T0* GE_new2121(T1 initialize);
/* New instance of type ET_STATIC_CALL_EXPRESSION */
extern T0* GE_new2122(T1 initialize);
/* New instance of type ET_PRECURSOR_EXPRESSION */
extern T0* GE_new2123(T1 initialize);
/* New instance of type ET_CURRENT_ADDRESS */
extern T0* GE_new2124(T1 initialize);
/* New instance of type ET_RESULT_ADDRESS */
extern T0* GE_new2125(T1 initialize);
/* New instance of type ET_EXPRESSION_ADDRESS */
extern T0* GE_new2126(T1 initialize);
/* New instance of type ET_PARENTHESIZED_EXPRESSION */
extern T0* GE_new2127(T1 initialize);
/* New instance of type ET_INFIX_EXPRESSION */
extern T0* GE_new2128(T1 initialize);
/* New instance of type ET_INFIX_AND_THEN_OPERATOR */
extern T0* GE_new2130(T1 initialize);
/* New instance of type ET_INFIX_OR_ELSE_OPERATOR */
extern T0* GE_new2132(T1 initialize);
/* New instance of type ET_MANIFEST_TYPE */
extern T0* GE_new2133(T1 initialize);
/* New instance of type ET_PREFIX_EXPRESSION */
extern T0* GE_new2134(T1 initialize);
/* New instance of type ET_OLD_EXPRESSION */
extern T0* GE_new2135(T1 initialize);
/* New instance of type ET_BRACKET_EXPRESSION */
extern T0* GE_new2136(T1 initialize);
/* New instance of type ET_MANIFEST_ARRAY */
extern T0* GE_new2137(T1 initialize);
/* New instance of type ET_STRIP_EXPRESSION */
extern T0* GE_new2138(T1 initialize);
/* New instance of type ET_CALL_AGENT */
extern T0* GE_new2139(T1 initialize);
/* New instance of type ET_DO_FUNCTION_INLINE_AGENT */
extern T0* GE_new2140(T1 initialize);
/* New instance of type ET_ONCE_FUNCTION_INLINE_AGENT */
extern T0* GE_new2141(T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
extern T0* GE_new2142(T1 initialize);
/* New instance of type ET_DO_PROCEDURE_INLINE_AGENT */
extern T0* GE_new2144(T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE_INLINE_AGENT */
extern T0* GE_new2145(T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
extern T0* GE_new2146(T1 initialize);
/* New instance of type ET_AGENT_OPEN_TARGET */
extern T0* GE_new2147(T1 initialize);
/* New instance of type ET_AGENT_ARGUMENT_OPERAND_LIST */
extern T0* GE_new2148(T1 initialize);
/* New instance of type ET_AGENT_TYPED_OPEN_ARGUMENT */
extern T0* GE_new2149(T1 initialize);
/* New instance of type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
extern T0* GE_new2150(T1 initialize);
/* New instance of type ET_CONSTRAINT_NAMED_TYPE */
extern T0* GE_new2151(T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE */
extern T0* GE_new2152(T1 initialize);
/* New instance of type ET_LOOP_INVARIANTS */
extern T0* GE_new2153(T1 initialize);
/* New instance of type ET_LIKE_FEATURE */
extern T0* GE_new2154(T1 initialize);
/* New instance of type ET_CHECK_INSTRUCTION */
extern T0* GE_new2155(T1 initialize);
/* New instance of type ET_ACROSS_INSTRUCTION */
extern T0* GE_new2156(T1 initialize);
/* New instance of type ET_UNQUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new2157(T1 initialize);
/* New instance of type ET_FEATURE_ADDRESS */
extern T0* GE_new2158(T1 initialize);
/* New instance of type ET_OLD_OBJECT_TEST */
extern T0* GE_new2159(T1 initialize);
/* New instance of type ET_ONCE_MANIFEST_STRING */
extern T0* GE_new2160(T1 initialize);
/* New instance of type ET_ACROSS_EXPRESSION */
extern T0* GE_new2161(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_INSTRUCTION] */
extern T0* GE_new2163(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_INSTRUCTION] */
extern T0* GE_new2164(T1 initialize);
/* New instance of type HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
extern T0* GE_new2166(T1 initialize);
/* New instance of type [attached] TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
extern T0* GE_new2169(T1 initialize);
/* New instance of type attached DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS] */
extern T0* GE_new2191(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new2196(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new2197(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_FEATURE_NAME_ITEM] */
extern T0* GE_new2199(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME_ITEM] */
extern T0* GE_new2200(T1 initialize);
/* New instance of type INTEGER_OVERFLOW_CHECKER */
extern T0* GE_new2202(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]] */
extern T0* GE_new2203(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]] */
extern T0* GE_new2204(T6 a1, T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new2205(T1 initialize);
/* New instance of type attached DS_LINKABLE [[attached] ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new2207(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new2208(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new2209(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new2210(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new2211(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER] */
extern T0* GE_new2212(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new2213(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new2214(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new2215(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new2216(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new2217(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new2218(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new2219(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE] */
extern T0* GE_new2221(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new2222(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION] */
extern T0* GE_new2223(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_ACTION] */
extern T0* GE_new2224(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ACTION] */
extern T0* GE_new2225(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new2226(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM] */
extern T0* GE_new2227(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_OPTIONS] */
extern T0* GE_new2228(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS] */
extern T0* GE_new2233(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
extern T0* GE_new2234(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new2235(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new2236(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new2237(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_PARENT_LIST] */
extern T0* GE_new2238(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_LIST] */
extern T0* GE_new2239(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_CREATOR] */
extern T0* GE_new2240(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CREATOR] */
extern T0* GE_new2241(T1 initialize);
/* New instance of type attached DS_LINKABLE [[attached] XM_DOCUMENT_NODE] */
extern T0* GE_new2243(T1 initialize);
/* New instance of type [attached] DS_LINKED_QUEUE [[attached] CHARACTER_8] */
extern T0* GE_new2249(T1 initialize);
/* New instance of type UC_UTF16_ROUTINES */
extern T0* GE_new2250(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET] */
extern T0* GE_new2251(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ADAPTED_UNIVERSE] */
extern T0* GE_new2252(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE] */
extern T0* GE_new2253(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_UNIVERSE] */
extern T0* GE_new2254(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_TARGET_PARENT] */
extern T0* GE_new2256(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT] */
extern T0* GE_new2257(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET_PARENT] */
extern T0* GE_new2258(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new2260(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new2261(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable DS_HASH_SET [[attached] STRING_8]] */
extern T0* GE_new2262(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable DS_HASH_SET [[attached] STRING_8]] */
extern T0* GE_new2266(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8] */
extern T0* GE_new2267(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_XACE_TARGET] */
extern T0* GE_new2268(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_TARGET] */
extern T0* GE_new2269(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_TARGET] */
extern T0* GE_new2270(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_XACE_CLUSTER] */
extern T0* GE_new2271(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_CLUSTER] */
extern T0* GE_new2272(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_CLUSTER] */
extern T0* GE_new2273(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new2274(T1 initialize);
/* New instance of type attached DS_LINKABLE [[attached] ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new2276(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] YY_BUFFER] */
extern T0* GE_new2277(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] YY_BUFFER] */
extern T0* GE_new2278(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_DYNAMIC_TARGET] */
extern T0* GE_new2279(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET] */
extern T0* GE_new2280(T1 initialize);
/* New instance of type [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
extern T0* GE_new2282(T1 initialize);
/* New instance of type [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
extern T0* GE_new2283(T1 initialize);
/* New instance of type attached DS_LINKABLE [detachable STRING_8] */
extern T0* GE_new2285(T1 initialize);
/* New instance of type attached DS_LINKABLE [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
extern T0* GE_new2287(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new2288(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS] */
extern T0* GE_new2289(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_TYPE_ITEM] */
extern T0* GE_new2293(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_TYPE_ITEM] */
extern T0* GE_new2294(T1 initialize);
/* New instance of type [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new2295(T1 initialize);
/* New instance of type attached DS_BILINKABLE [[attached] XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new2296(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_CLUSTER] */
extern T0* GE_new2298(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER] */
extern T0* GE_new2299(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLUSTER] */
extern T0* GE_new2300(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_CLASS] */
extern T0* GE_new2302(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER] */
extern T0* GE_new2303(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_FORMAL_PARAMETER] */
extern T0* GE_new2304(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER] */
extern T0* GE_new2305(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER] */
extern T0* GE_new2306(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME] */
extern T0* GE_new2308(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_RENAME] */
extern T0* GE_new2309(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_CALL_NAME] */
extern T0* GE_new2317(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_RENAME] */
extern T0* GE_new2318(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME] */
extern T0* GE_new2319(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME] */
extern T0* GE_new2320(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME] */
extern T0* GE_new2322(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME] */
extern T0* GE_new2329(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32] */
extern T0* GE_new2330(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_REPLICABLE_FEATURE] */
extern T0* GE_new2331(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE] */
extern T0* GE_new2334(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_RENAME_ITEM] */
extern T0* GE_new2336(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_RENAME_ITEM] */
extern T0* GE_new2337(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_EXPORT] */
extern T0* GE_new2339(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPORT] */
extern T0* GE_new2340(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE] */
extern T0* GE_new2341(T1 initialize);
/* New instance of type attached DS_LINKABLE [[attached] ET_ADAPTED_FEATURE] */
extern T0* GE_new2343(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new2344(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new2345(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new2346(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new2347(T6 a1, T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new2348(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new2349(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]] */
extern T0* GE_new2352(T6 a1, T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE] */
extern T0* GE_new2357(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]] */
extern T0* GE_new2358(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new2359(T1 initialize);
/* New instance of type attached DS_LINKABLE [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new2361(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE] */
extern T0* GE_new2362(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_LIKE_FEATURE] */
extern T0* GE_new2363(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE] */
extern T0* GE_new2364(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE] */
extern T0* GE_new2365(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8] */
extern T0* GE_new2368(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]] */
extern T0* GE_new2369(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME] */
extern T0* GE_new2370(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]] */
extern T0* GE_new2371(T6 a1, T1 initialize);
/* New instance of type ET_CLUSTER_ERROR */
extern T0* GE_new2372(T1 initialize);
/* New instance of type ET_SYNTAX_ERROR */
extern T0* GE_new2373(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_ERROR */
extern T0* GE_new2374(T1 initialize);
/* New instance of type [attached] TUPLE [ET_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2377(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_CLUSTER] */
extern T0* GE_new2378(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_CLUSTER]] */
extern T0* GE_new2379(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_TARGET, STRING_8] */
extern T0* GE_new2380(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new2382(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_ADAPTED_LIBRARY]] */
extern T0* GE_new2383(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new2384(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY]] */
extern T0* GE_new2385(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] STRING_8]] */
extern T0* GE_new2388(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_OPTIONS, STRING_8] */
extern T0* GE_new2389(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8] */
extern T0* GE_new2395(T1 initialize);
/* New instance of type [attached] TUPLE [ET_XACE_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2397(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2398(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new2400(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new2402(T1 initialize);
/* New instance of type attached DS_LINKABLE [[attached] XM_ELEMENT_NODE] */
extern T0* GE_new2407(T1 initialize);
/* New instance of type [attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8] */
extern T0* GE_new2410(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new2418(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG]] */
extern T0* GE_new2419(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_INTERNAL_UNIVERSE, ET_ECF_STATE] */
extern T0* GE_new2420(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new2421(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE]] */
extern T0* GE_new2422(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new2423(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY]] */
extern T0* GE_new2424(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new2425(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG]] */
extern T0* GE_new2426(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new2427(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE]] */
extern T0* GE_new2428(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new2429(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT]] */
extern T0* GE_new2430(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new2431(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE]] */
extern T0* GE_new2432(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new2433(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8] */
extern T0* GE_new2444(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] LX_WILDCARD] */
extern T0* GE_new2446(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [[attached] LX_WILDCARD]] */
extern T0* GE_new2447(T1 initialize);
/* New instance of type [attached] TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
extern T0* GE_new2448(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [[attached] STRING_8]] */
extern T0* GE_new2449(T1 initialize);
/* New instance of type [attached] TUPLE [KL_STRING_ROUTINES, STRING_8] */
extern T0* GE_new2450(T1 initialize);
/* New instance of type LX_DFA_WILDCARD */
extern T0* GE_new2452(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] STRING_8] */
extern T0* GE_new2457(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new2459(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new2461(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_INDEXING_ITEM] */
extern T0* GE_new2463(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_ITEM] */
extern T0* GE_new2464(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_INDEXING_TERM_ITEM] */
extern T0* GE_new2465(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM_ITEM] */
extern T0* GE_new2466(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new2467(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new2469(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_FEATURE_CLAUSE] */
extern T0* GE_new2470(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_CLAUSE] */
extern T0* GE_new2471(T1 initialize);
/* New instance of type ET_STANDARD_ONCE_KEYS */
extern T0* GE_new2472(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ELSEIF_PART] */
extern T0* GE_new2475(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_PART] */
extern T0* GE_new2476(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ELSEIF_EXPRESSION] */
extern T0* GE_new2477(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_EXPRESSION] */
extern T0* GE_new2478(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_WHEN_PART] */
extern T0* GE_new2479(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_WHEN_PART] */
extern T0* GE_new2480(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_CHOICE_ITEM] */
extern T0* GE_new2482(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CHOICE_ITEM] */
extern T0* GE_new2483(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new2485(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new2486(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new2487(T1 initialize);
/* New instance of type ET_INFIX_CAST_EXPRESSION */
extern T0* GE_new2489(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_CURRENT_TARGET */
extern T0* GE_new2493(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new2495(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new2497(T1 initialize);
/* New instance of type [attached] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS] */
extern T0* GE_new2499(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] NATURAL_64] */
extern T0* GE_new2501(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new2502(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new2503(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new2504(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_CLUSTER] */
extern T0* GE_new2505(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER] */
extern T0* GE_new2506(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER] */
extern T0* GE_new2507(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new2508(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new2509(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new2510(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new2512(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new2513(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new2514(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new2516(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new2517(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new2518(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new2520(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new2521(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new2522(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new2524(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new2525(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new2526(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new2528(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new2529(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new2530(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new2532(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new2533(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new2534(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE] */
extern T0* GE_new2536(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_FILE_RULE] */
extern T0* GE_new2537(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_FILE_RULE] */
extern T0* GE_new2538(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new2539(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new2540(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new2541(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new2542(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new2543(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new2544(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM] */
extern T0* GE_new2545(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_CONDITION_ITEM] */
extern T0* GE_new2546(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CONDITION_ITEM] */
extern T0* GE_new2547(T1 initialize);
/* New instance of type attached DS_LINKABLE [[attached] CHARACTER_8] */
extern T0* GE_new2549(T1 initialize);
/* New instance of type attached DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
extern T0* GE_new2551(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER] */
extern T0* GE_new2555(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE] */
extern T0* GE_new2558(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]] */
extern T0* GE_new2559(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]] */
extern T0* GE_new2563(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME] */
extern T0* GE_new2564(T1 initialize);
/* New instance of type [attached] TUPLE [ET_GROUP] */
extern T0* GE_new2565(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]]] */
extern T0* GE_new2566(T1 initialize);
/* New instance of type AP_OPTION_COMPARATOR */
extern T0* GE_new2567(T1 initialize);
/* New instance of type [attached] DS_QUICK_SORTER [[attached] AP_OPTION] */
extern T0* GE_new2568(T1 initialize);
/* New instance of type KL_CHARACTER_ROUTINES */
extern T0* GE_new2577(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
extern T0* GE_new2578(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new2580(T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_SUBLIST */
extern T0* GE_new2581(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new2583(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new2594(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new2595(T1 initialize);
/* New instance of type ET_NULL_INSTRUCTION */
extern T0* GE_new2596(T1 initialize);
/* New instance of type ET_PARENTHESIS_INSTRUCTION */
extern T0* GE_new2597(T1 initialize);
/* New instance of type ET_PARENTHESIS_SYMBOL */
extern T0* GE_new2615(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
extern T0* GE_new2621(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
extern T0* GE_new2622(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]] */
extern T0* GE_new2646(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]] */
extern T0* GE_new2650(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8] */
extern T0* GE_new2651(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new2653(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new2654(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new2655(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] LX_WILDCARD] */
extern T0* GE_new2657(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] LX_WILDCARD] */
extern T0* GE_new2661(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8] */
extern T0* GE_new2662(T1 initialize);
/* New instance of type LX_WILDCARD_PARSER */
extern T0* GE_new2664(T1 initialize);
/* New instance of type LX_DESCRIPTION */
extern T0* GE_new2665(T1 initialize);
/* New instance of type LX_FULL_DFA */
extern T0* GE_new2666(T1 initialize);
/* New instance of type ET_UNIVERSE_ERROR */
extern T0* GE_new2670(T1 initialize);
/* New instance of type ET_DYNAMIC_EQUALITY_EXPRESSION */
extern T0* GE_new2675(T1 initialize);
/* New instance of type ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new2676(T1 initialize);
/* New instance of type ET_CONVERT_BUILTIN_EXPRESSION */
extern T0* GE_new2684(T1 initialize);
/* New instance of type ET_CONVERT_FROM_EXPRESSION */
extern T0* GE_new2685(T1 initialize);
/* New instance of type ET_CONVERT_TO_EXPRESSION */
extern T0* GE_new2686(T1 initialize);
/* New instance of type [attached] DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
extern T0* GE_new2697(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE] */
extern T0* GE_new2702(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
extern T0* GE_new2704(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_FILE_RULE] */
extern T0* GE_new2705(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]] */
extern T0* GE_new2706(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_FILE_RULES] */
extern T0* GE_new2707(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]] */
extern T0* GE_new2708(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_STATE] */
extern T0* GE_new2709(T1 initialize);
/* New instance of type attached DS_LINKABLE [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new2712(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new2718(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new2719(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new2720(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new2721(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new2722(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] LX_RULE] */
extern T0* GE_new2723(T1 initialize);
/* New instance of type LX_START_CONDITIONS */
extern T0* GE_new2724(T1 initialize);
/* New instance of type LX_ACTION_FACTORY */
extern T0* GE_new2725(T1 initialize);
/* New instance of type LX_SYMBOL_CLASS */
extern T0* GE_new2726(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8] */
extern T0* GE_new2727(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS] */
extern T0* GE_new2728(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] LX_SYMBOL_CLASS] */
extern T0* GE_new2729(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA] */
extern T0* GE_new2730(T1 initialize);
/* New instance of type LX_NFA */
extern T0* GE_new2731(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] LX_NFA] */
extern T0* GE_new2732(T6 a1, T1 initialize);
/* New instance of type LX_RULE */
extern T0* GE_new2735(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8] */
extern T0* GE_new2736(T1 initialize);
/* New instance of type LX_EQUIVALENCE_CLASSES */
extern T0* GE_new2737(T1 initialize);
/* New instance of type LX_UNRECOGNIZED_RULE_ERROR */
extern T0* GE_new2738(T1 initialize);
/* New instance of type LX_MISSING_QUOTE_ERROR */
extern T0* GE_new2739(T1 initialize);
/* New instance of type LX_BAD_CHARACTER_CLASS_ERROR */
extern T0* GE_new2740(T1 initialize);
/* New instance of type LX_BAD_CHARACTER_ERROR */
extern T0* GE_new2741(T1 initialize);
/* New instance of type LX_FULL_AND_META_ERROR */
extern T0* GE_new2742(T1 initialize);
/* New instance of type LX_FULL_AND_REJECT_ERROR */
extern T0* GE_new2743(T1 initialize);
/* New instance of type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
extern T0* GE_new2744(T1 initialize);
/* New instance of type LX_CHARACTER_OUT_OF_RANGE_ERROR */
extern T0* GE_new2745(T1 initialize);
/* New instance of type [attached] ARRAY [[attached] LX_RULE] */
extern T0* GE_new2746(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] LX_RULE] */
extern T0* GE_new2747(T6 a1, T1 initialize);
/* New instance of type LX_DFA_STATE */
extern T0* GE_new2748(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE] */
extern T0* GE_new2749(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] LX_DFA_STATE] */
extern T0* GE_new2750(T1 initialize);
/* New instance of type LX_SYMBOL_PARTITIONS */
extern T0* GE_new2752(T1 initialize);
/* New instance of type [attached] KL_ARRAY_ROUTINES [[attached] LX_RULE] */
extern T0* GE_new2753(T1 initialize);
/* New instance of type [attached] ARRAY [detachable LX_RULE] */
extern T0* GE_new2754(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable LX_RULE] */
extern T0* GE_new2755(T6 a1, T1 initialize);
/* New instance of type LX_START_CONDITION */
extern T0* GE_new2756(T1 initialize);
/* New instance of type [attached] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE] */
extern T0* GE_new2757(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] LX_NFA] */
extern T0* GE_new2759(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32] */
extern T0* GE_new2760(T1 initialize);
/* New instance of type LX_NFA_STATE */
extern T0* GE_new2761(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_LIBRARY] */
extern T0* GE_new2763(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] DS_HASH_SET [[attached] STRING_8]] */
extern T0* GE_new2771(T1 initialize);
/* New instance of type ET_AST_NULL_LEAF */
extern T0* GE_new2776(T1 initialize);
/* New instance of type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
extern T0* GE_new2777(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] LX_RULE] */
extern T0* GE_new2778(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_RULE] */
extern T0* GE_new2779(T1 initialize);
/* New instance of type [attached] KL_ARRAY_ROUTINES [[attached] STRING_8] */
extern T0* GE_new2780(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] LX_START_CONDITION] */
extern T0* GE_new2781(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] LX_START_CONDITION] */
extern T0* GE_new2782(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_START_CONDITION] */
extern T0* GE_new2783(T1 initialize);
/* New instance of type [attached] LX_SYMBOL_CLASS_TRANSITION [[attached] LX_NFA_STATE] */
extern T0* GE_new2788(T1 initialize);
/* New instance of type [attached] LX_EPSILON_TRANSITION [[attached] LX_NFA_STATE] */
extern T0* GE_new2790(T1 initialize);
/* New instance of type [attached] LX_SYMBOL_TRANSITION [[attached] LX_NFA_STATE] */
extern T0* GE_new2793(T1 initialize);
/* New instance of type LX_ACTION */
extern T0* GE_new2795(T1 initialize);
/* New instance of type [attached] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]] */
extern T0* GE_new2796(T1 initialize);
/* New instance of type [attached] DS_BILINKABLE [[attached] INTEGER_32] */
extern T0* GE_new2797(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]] */
extern T0* GE_new2798(T6 a1, T1 initialize);
/* New instance of type [attached] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE] */
extern T0* GE_new2800(T1 initialize);
/* New instance of type [attached] DS_BUBBLE_SORTER [[attached] LX_RULE] */
extern T0* GE_new2802(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] LX_NFA_STATE] */
extern T0* GE_new2804(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE] */
extern T0* GE_new2807(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE] */
extern T0* GE_new2808(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] LX_DFA_STATE] */
extern T0* GE_new2811(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE] */
extern T0* GE_new2812(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_DFA_STATE] */
extern T0* GE_new2813(T1 initialize);
/* New instance of type [attached] KL_ARRAY [[attached] LX_RULE] */
extern T0* GE_new2814(T1 initialize);
/* New instance of type [attached] ARRAY [detachable LX_DFA_STATE] */
extern T0* GE_new2815(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable LX_DFA_STATE] */
extern T0* GE_new2816(T6 a1, T1 initialize);
/* New instance of type [attached] KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
extern T0* GE_new2817(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA] */
extern T0* GE_new2818(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] LX_NFA, [attached] INTEGER_32] */
extern T0* GE_new2820(T1 initialize);
/* New instance of type CHARACTER_PROPERTY */
extern T0* GE_new2821(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_LIBRARY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2823(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2824(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2825(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_DOTNET_GAC_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2826(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2827(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LIBRARY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2828(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new2830(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION]] */
extern T0* GE_new2831(T1 initialize);
/* New instance of type [attached] DS_SHELL_SORTER [[attached] INTEGER_32] */
extern T0* GE_new2836(T1 initialize);
/* New instance of type [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE] */
extern T0* GE_new2838(T1 initialize);
/* New instance of type [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE] */
extern T0* GE_new2841(T1 initialize);
/* New instance of type [attached] KL_ARRAY [[attached] STRING_8] */
extern T0* GE_new2844(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] NATURAL_16] */
extern T0* GE_new2845(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] NATURAL_32] */
extern T0* GE_new2846(T6 a1, T1 initialize);
/* New instance of type [attached] ARRAY [[attached] NATURAL_16] */
extern T0* GE_new2847(T1 initialize);
/* New instance of type [attached] ARRAY [[attached] NATURAL_32] */
extern T0* GE_new2848(T1 initialize);
/* GEC.execute */
extern T0* T25c58(GE_context* ac);
/* GEC.report_cannot_read_error */
extern void T25f64(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error */
extern void T53f181(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T53f183(GE_context* ac, T0* C, T0* a1);
/* MUTEX.unlock */
extern void T158f12(GE_context* ac, T0* C);
/* MUTEX.eif_thr_mutex_unlock */
extern void T158f15(GE_context* ac, T0* C, T14 a1);
/* MUTEX.default_pointer */
extern T14 T158f5(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.set_has_error */
extern void T53f185(GE_context* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T53f183p1(GE_context* ac, T0* C, T0* a1);
/* MUTEX.lock */
extern void T158f11(GE_context* ac, T0* C);
/* MUTEX.current_thread_id */
extern T14 T158f6(GE_context* ac, T0* C);
/* MUTEX.eif_thr_mutex_lock */
extern void T158f14(GE_context* ac, T0* C, T14 a1);
/* ET_NULL_ERROR_HANDLER.message */
extern T0* T53f176(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error */
extern void T36f180(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T36f182(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_error */
extern void T36f184(GE_context* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T36f182p1(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_line */
extern void T161f6(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_new_line */
extern void T161f9(GE_context* ac, T0* C);
/* KL_STDERR_FILE.put_string */
extern void T161f7(GE_context* ac, T0* C, T0* a1);
/* CONSOLE.put_string */
extern void T1748f21(GE_context* ac, T0* C, T0* a1);
/* CONSOLE.console_ps */
extern void T1748f26(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDERR_FILE.console */
extern T0* T161f2(GE_context* ac, T0* C);
/* STD_FILES.error */
extern T0* T485f4(GE_context* ac, T0* C);
/* CONSOLE.make_open_stderr */
extern T0* T1748c23(GE_context* ac, T0* a1);
/* CONSOLE.set_write_mode */
extern void T1748f25(GE_context* ac, T0* C);
/* CONSOLE.console_def */
extern T14 T1748f12(GE_context* ac, T0* C, T6 a1);
/* CONSOLE.make_with_name */
extern void T1748f24(GE_context* ac, T0* C, T0* a1);
/* STRING_8.make_empty */
extern T0* T17c55(GE_context* ac);
/* STRING_8.make */
extern void T17f45(GE_context* ac, T0* C, T6 a1);
/* STRING_8.make */
extern T0* T17c45(GE_context* ac, T6 a1);
/* SPECIAL [CHARACTER_8].make_filled */
extern T0* T15c13(GE_context* ac, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].fill_with */
extern void T15f15(GE_context* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].extend */
extern void T15f19(GE_context* ac, T0* C, T2 a1);
/* INTEGER_32.min */
extern T6 T6f16(GE_context* ac, T6* C, T6 a1);
/* INTEGER_32.is_less_equal */
extern T1 T6f7(GE_context* ac, T6* C, T6 a1);
/* SPECIAL [CHARACTER_8].make_empty */
extern void T15f18(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].make_empty */
extern T0* T15c18(GE_context* ac, T6 a1);
/* CONSOLE.default_pointer */
extern T14 T1748f9(GE_context* ac, T0* C);
/* CONSOLE.set_name */
extern void T1748f28(GE_context* ac, T0* C, T0* a1);
/* FILE_INFO.file_name_to_pointer */
extern T0* T157f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* C_STRING.set_string */
extern void T31f11(GE_context* ac, T0* C, T0* a1);
/* C_STRING.set_substring */
extern void T31f13(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* MANAGED_POINTER.put_natural_8 */
extern void T154f15(GE_context* ac, T0* C, T8 a1, T6 a2);
/* POINTER.memory_copy */
extern void T14f16(GE_context* ac, T14* C, T14 a1, T6 a2);
/* POINTER.c_memcpy */
extern void T14f17(GE_context* ac, T14* C, T14 a1, T14 a2, T6 a3);
/* NATURAL_32.to_natural_8 */
extern T8 T10f6(GE_context* ac, T10* C);
/* C_STRING.make_shared_from_pointer_and_count */
extern void T31f10(GE_context* ac, T0* C, T14 a1, T6 a2);
/* C_STRING.make_shared_from_pointer_and_count */
extern T0* T31c10(GE_context* ac, T14 a1, T6 a2);
/* MANAGED_POINTER.share_from_pointer */
extern T0* T154c14(GE_context* ac, T14 a1, T6 a2);
/* MANAGED_POINTER.increment_counter */
extern void T154f12(GE_context* ac, T0* C);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_8_0_pointer */
extern void T598f14(GE_context* ac, T598* C, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* [attached] CELL [[attached] INTEGER_32].put */
extern void T599f2(GE_context* ac, T0* C, T6 a1);
/* [attached] CELL [[attached] INTEGER_32].put */
extern T0* T599c2(GE_context* ac, T6 a1);
/* NATURAL_32.is_less_equal */
extern T1 T10f5(GE_context* ac, T10* C, T10 a1);
/* UTF_CONVERTER.to_natural_32 */
extern T10 T598f10(GE_context* ac, T598* C, T0* a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parsed_natural_32 */
extern T10 T2166f12(GE_context* ac, T0* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_string_with_type */
extern void T2166f19(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T2166f19ot1(T0* a1, T0** a2);
extern T1 T2166f19ot2(T0* a1, T0** a2);
/* NATURAL_32.is_valid_character_8_code */
extern T1 T10f19(GE_context* ac, T10* C);
/* INTEGER_32.to_natural_32 */
extern T10 T6f17(GE_context* ac, T6* C);
/* CHARACTER_32.is_character_8 */
extern T1 T3f3(GE_context* ac, T3* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_character */
extern void T2166f22(GE_context* ac, T0* C, T2 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflowed */
extern T1 T2166f16(GE_context* ac, T0* C);
/* INTEGER_OVERFLOW_CHECKER.will_overflow */
extern T1 T2202f7(GE_context* ac, T0* C, T11 a1, T11 a2, T6 a3, T6 a4);
/* NATURAL_64.is_greater */
extern T1 T11f11(GE_context* ac, T11* C, T11 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflow_checker */
extern T0* T2166f15(GE_context* ac, T0* C);
/* INTEGER_OVERFLOW_CHECKER.make */
extern T0* T2202c13(GE_context* ac);
/* NATURAL_64.to_natural_64 */
extern T11 T11f13(GE_context* ac, T11* C);
/* NATURAL_32.to_natural_64 */
extern T11 T10f18(GE_context* ac, T10* C);
/* NATURAL_16.to_natural_64 */
extern T11 T9f14(GE_context* ac, T9* C);
/* NATURAL_8.to_natural_64 */
extern T11 T8f16(GE_context* ac, T8* C);
/* INTEGER_64.to_natural_64 */
extern T11 T7f10(GE_context* ac, T7* C);
/* INTEGER_16.to_natural_64 */
extern T11 T5f7(GE_context* ac, T5* C);
/* INTEGER_8.to_natural_64 */
extern T11 T4f7(GE_context* ac, T4* C);
/* [attached] SPECIAL [[attached] NATURAL_64].extend */
extern void T2501f5(GE_context* ac, T0* C, T11 a1);
/* [attached] SPECIAL [[attached] NATURAL_64].make_empty */
extern T0* T2501c4(GE_context* ac, T6 a1);
/* STRING_8.has */
extern T1 T17f42(GE_context* ac, T0* C, T2 a1);
/* STRING_8.area_lower */
extern T6 T17f10(GE_context* ac, T0* C);
/* INTEGER_32.to_natural_64 */
extern T11 T6f25(GE_context* ac, T6* C);
/* CHARACTER_8.is_less_equal */
extern T1 T2f7(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.is_less */
extern T1 T2f6(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.natural_32_code */
extern T10 T2f12(GE_context* ac, T2* C);
/* CHARACTER_8.is_greater_equal */
extern T1 T2f5(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.is_hexa_digit */
extern T1 T2f29(GE_context* ac, T2* C);
/* NATURAL_8.is_greater */
extern T1 T8f2(GE_context* ac, T8* C, T8 a1);
/* CHARACTER_8.character_types */
extern T8 T2f10(GE_context* ac, T2* C, T6 a1);
/* CHARACTER_8.internal_character_types */
extern T0* T2f13(GE_context* ac, T2* C);
/* [attached] SPECIAL [[attached] NATURAL_8].fill_with */
extern void T606f8(GE_context* ac, T0* C, T8 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] NATURAL_8].extend */
extern void T606f7(GE_context* ac, T0* C, T8 a1);
/* [attached] SPECIAL [[attached] NATURAL_8].make_empty */
extern void T606f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] NATURAL_8].make_empty */
extern T0* T606c6(GE_context* ac, T6 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.reset */
extern void T2166f18(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.ctoi_convertor */
extern T0* T598f11(GE_context* ac, T598* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_trailing_separators_acceptable */
extern void T2166f21(GE_context* ac, T0* C, T1 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_leading_separators_acceptable */
extern void T2166f20(GE_context* ac, T0* C, T1 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.make */
extern T0* T2166c17(GE_context* ac);
/* STRING_8.make_from_string */
extern T0* T17c68(GE_context* ac, T0* a1);
/* SPECIAL [CHARACTER_8].copy_data */
extern void T15f12(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_8].force */
extern void T15f17(GE_context* ac, T0* C, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].move_data */
extern void T15f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].overlapping_move */
extern void T15f21(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].non_overlapping_move */
extern void T15f20(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UTF_CONVERTER.is_hexa_decimal */
extern T1 T598f9(GE_context* ac, T598* C, T0* a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.is_integral_integer */
extern T1 T2166f14(GE_context* ac, T0* C);
/* INTEGER_32.is_greater_equal */
extern T1 T6f13(GE_context* ac, T6* C, T6 a1);
/* UTF_CONVERTER.utf_8_bytes_count */
extern T6 T598f6(GE_context* ac, T598* C, T0* a1, T6 a2, T6 a3);
/* INTEGER_32.do_nothing */
extern void T6f33(GE_context* ac, T6* C);
/* FILE_INFO.multi_byte_to_utf_16 */
extern T6 T157f10(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* FILE_INFO.default_pointer */
extern T14 T157f9(GE_context* ac, T0* C);
/* C_STRING.item */
extern T14 T31f4(GE_context* ac, T0* C);
/* C_STRING.make */
extern T0* T31c9(GE_context* ac, T0* a1);
/* C_STRING.make_empty */
extern void T31f7(GE_context* ac, T0* C, T6 a1);
/* C_STRING.make_empty */
extern T0* T31c7(GE_context* ac, T6 a1);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_16_0_pointer */
extern void T598f13(GE_context* ac, T598* C, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* MANAGED_POINTER.put_natural_16 */
extern void T154f16(GE_context* ac, T0* C, T9 a1, T6 a2);
/* NATURAL_32.to_natural_16 */
extern T9 T10f11(GE_context* ac, T10* C);
/* NATURAL_32.is_greater */
extern T1 T10f10(GE_context* ac, T10* C, T10 a1);
/* UTF_CONVERTER.utf_16_bytes_count */
extern T6 T598f7(GE_context* ac, T598* C, T0* a1, T6 a2, T6 a3);
/* MANAGED_POINTER.resize */
extern void T154f11(GE_context* ac, T0* C, T6 a1);
/* POINTER.memory_set */
extern void T14f12(GE_context* ac, T14* C, T6 a1, T6 a2);
/* POINTER.c_memset */
extern void T14f15(GE_context* ac, T14* C, T14 a1, T6 a2, T6 a3);
/* EXCEPTIONS.raise */
extern void T604f2(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.raise */
extern void T142f16(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.raise */
extern void T20f19(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.code */
extern T6 T142f8(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.default_pointer */
extern T14 T20f9(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.set_last_exception */
extern void T20f17(GE_context* ac, T0* C, T0* a1);
/* [attached] CELL [detachable EXCEPTION].put */
extern void T26f2(GE_context* ac, T0* C, T0* a1);
/* [attached] CELL [detachable EXCEPTION].put */
extern T0* T26c2(GE_context* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.last_exception_cell */
extern T0* T20f2(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.in_rescue */
extern T1 T20f8(GE_context* ac, T0* C);
/* DEVELOPER_EXCEPTION.is_ignored */
extern T1 T142f7(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.is_ignored */
extern T1 T20f13(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].has */
extern T1 T27f34(GE_context* ac, T0* C, T6 a1);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].same_keys */
extern T1 T27f26(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].hash_code_of */
extern T6 T27f25(GE_context* ac, T0* C, T6 a1);
/* INTEGER_32.hash_code */
extern T6 T6f18(GE_context* ac, T6* C);
/* ISE_EXCEPTION_MANAGER.ignored_exceptions */
extern T0* T20f3(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].make */
extern T0* T27c35(GE_context* ac, T6 a1);
/* [attached] SPECIAL [[attached] INTEGER_32].make_filled */
extern T0* T149c9(GE_context* ac, T6 a1, T6 a2);
/* [attached] SPECIAL [[attached] INTEGER_32].fill_with */
extern void T149f12(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] INTEGER_32].extend */
extern void T149f13(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] BOOLEAN].make_filled */
extern T0* T150c6(GE_context* ac, T1 a1, T6 a2);
/* [attached] SPECIAL [[attached] BOOLEAN].fill_with */
extern void T150f9(GE_context* ac, T0* C, T1 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] BOOLEAN].extend */
extern void T150f11(GE_context* ac, T0* C, T1 a1);
/* [attached] SPECIAL [[attached] BOOLEAN].make_empty */
extern void T150f8(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] BOOLEAN].make_empty */
extern T0* T150c8(GE_context* ac, T6 a1);
/* [attached] SPECIAL [[attached] INTEGER_32].make_empty */
extern void T149f8(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] INTEGER_32].make_empty */
extern T0* T149c8(GE_context* ac, T6 a1);
/* PRIMES.higher_prime */
extern T6 T148f1(GE_context* ac, T0* C, T6 a1);
/* PRIMES.is_prime */
extern T1 T148f3(GE_context* ac, T0* C, T6 a1);
/* PRIMES.default_create */
extern T0* T148c5(GE_context* ac);
/* DEVELOPER_EXCEPTION.exception_manager */
extern T0* T142f6(GE_context* ac, T0* C);
/* DEVELOPER_EXCEPTION.default_create */
extern T0* T142c10(GE_context* ac);
/* EXCEPTIONS.default_create */
extern T0* T604c1(GE_context* ac);
/* MANAGED_POINTER.default_pointer */
extern T14 T154f4(GE_context* ac, T0* C);
/* POINTER.memory_realloc */
extern T14 T14f3(GE_context* ac, T14* C, T6 a1);
/* POINTER.c_realloc */
extern T14 T14f7(GE_context* ac, T14* C, T14 a1, T6 a2);
/* INTEGER_32.max */
extern T6 T6f14(GE_context* ac, T6* C, T6 a1);
/* MANAGED_POINTER.make */
extern T0* T154c9(GE_context* ac, T6 a1);
/* POINTER.memory_calloc */
extern T14 T14f2(GE_context* ac, T14* C, T6 a1, T6 a2);
/* POINTER.c_calloc */
extern T14 T14f5(GE_context* ac, T14* C, T6 a1, T6 a2);
/* CONSOLE.buffered_file_info */
extern T0* T1748f10(GE_context* ac, T0* C);
/* FILE_INFO.make */
extern T0* T157c19(GE_context* ac);
/* FILE_INFO.make_filled_area */
extern void T157f21(GE_context* ac, T0* C, T8 a1, T6 a2);
/* [attached] SPECIAL [[attached] NATURAL_8].make_filled */
extern T0* T606c5(GE_context* ac, T8 a1, T6 a2);
/* FILE_INFO.stat_size */
extern T6 T157f7(GE_context* ac, T0* C);
/* KL_STDERR_FILE.io */
extern T0* T161f4(GE_context* ac, T0* C);
/* STD_FILES.set_output_default */
extern void T485f8(GE_context* ac, T0* C);
/* STD_FILES.output */
extern T0* T485f3(GE_context* ac, T0* C);
/* CONSOLE.make_open_stdout */
extern T0* T1748c19(GE_context* ac, T0* a1);
/* STD_FILES.default_create */
extern T0* T485c6(GE_context* ac);
/* KL_STRING_ROUTINES.as_string */
extern T0* T38f5(GE_context* ac, T0* C, T0* a1);
extern T1 T38f5ot1(T0* a1, T0** a2);
/* UC_UTF8_STRING.string */
extern T0* T1557f23(GE_context* ac, T0* C);
/* UC_UTF8_STRING.next_byte_index */
extern T6 T1557f39(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_byte_count */
extern T6 T1556f3(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.utf8 */
extern T0* T1557f42(GE_context* ac, T0* C);
/* UC_UTF8_ROUTINES.default_create */
extern T0* T1556c36(GE_context* ac);
/* KL_INTEGER_ROUTINES.to_character */
extern T2 T313f1(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.integer_ */
extern T0* T1557f47(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.default_create */
extern T0* T313c5(GE_context* ac);
/* KL_PLATFORM.maximum_character_code */
extern T6 T312f1(GE_context* ac, T0* C);
/* UC_UTF8_STRING.platform */
extern T0* T1557f38(GE_context* ac, T0* C);
/* KL_PLATFORM.default_create */
extern T0* T312c3(GE_context* ac);
/* UC_UTF8_STRING.item_code_at_byte_index */
extern T6 T1557f36(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_next_value */
extern T6 T1556f6(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.encoded_first_value */
extern T6 T1556f4(GE_context* ac, T0* C, T2 a1);
/* STRING_8.append_character */
extern void T17f50(GE_context* ac, T0* C, T2 a1);
/* STRING_8.reset_hash_codes */
extern void T17f51(GE_context* ac, T0* C);
/* STRING_8.resize */
extern void T17f52(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area_with_default */
extern T0* T15f4(GE_context* ac, T0* C, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].aliased_resized_area */
extern T0* T15f5(GE_context* ac, T0* C, T6 a1);
/* STRING_8.additional_space */
extern T6 T17f9(GE_context* ac, T0* C);
/* STRING_8.capacity */
extern T6 T17f8(GE_context* ac, T0* C);
/* UC_UTF8_STRING.byte_item */
extern T2 T1557f34(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.old_item */
extern T2 T1557f52(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.set_count */
extern void T1557f83(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.reset_byte_index_cache */
extern void T1557f93(GE_context* ac, T0* C);
/* STRING_8.string */
extern T0* T17f23(GE_context* ac, T0* C);
/* UC_UTF8_STRING.as_string */
extern T0* T1557f22(GE_context* ac, T0* C);
/* UC_UTF8_STRING.to_utf8 */
extern T0* T1557f46(GE_context* ac, T0* C);
/* KL_ANY_ROUTINES.same_types */
extern T1 T164f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.any_ */
extern T0* T38f2(GE_context* ac, T0* C);
/* KL_ANY_ROUTINES.default_create */
extern T0* T164c3(GE_context* ac);
/* KL_STDERR_FILE.string_ */
extern T0* T161f1(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.default_create */
extern T0* T38c19(GE_context* ac);
/* ET_ERROR_HANDLER.message */
extern T0* T36f175(GE_context* ac, T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.make */
extern T0* T100c8(GE_context* ac, T0* a1);
/* [attached] ARRAY [[attached] STRING_8].put */
extern void T449f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] ARRAY [[attached] STRING_8].make_filled */
extern T0* T449c7(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [attached] ARRAY [[attached] STRING_8].make_filled_area */
extern void T449f9(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] STRING_8].make_filled */
extern T0* T208c12(GE_context* ac, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] STRING_8].fill_with */
extern void T208f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] STRING_8].extend */
extern void T208f11(GE_context* ac, T0* C, T0* a1);
/* [attached] SPECIAL [[attached] STRING_8].make_empty */
extern void T208f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] STRING_8].make_empty */
extern T0* T208c6(GE_context* ac, T6 a1);
/* GEC.process_system */
extern void T25f63(GE_context* ac, T0* C, T0* a1);
/* KL_SHELL_COMMAND.execute */
extern void T85f13(GE_context* ac, T0* C);
/* KL_SHELL_COMMAND.operating_system */
extern T0* T85f6(GE_context* ac, T0* C);
/* KL_OPERATING_SYSTEM.default_create */
extern T0* T97c6(GE_context* ac);
/* KL_SHELL_COMMAND.system */
extern void T85f14(GE_context* ac, T0* C, T0* a1);
/* KL_SHELL_COMMAND.system_call */
extern T6 T85f9(GE_context* ac, T0* C, T14 a1);
/* NATIVE_STRING.item */
extern T14 T500f3(GE_context* ac, T0* C);
/* NATIVE_STRING.make */
extern T0* T500c9(GE_context* ac, T0* a1);
/* NATIVE_STRING.set_string */
extern void T500f12(GE_context* ac, T0* C, T0* a1);
/* NATIVE_STRING.set_substring */
extern void T500f13(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* NATIVE_STRING.unit_size */
extern T6 T500f5(GE_context* ac, T0* C);
/* NATIVE_STRING.upper_cell */
extern T0* T500f7(GE_context* ac, T0* C);
/* NATIVE_STRING.make_empty */
extern void T500f11(GE_context* ac, T0* C, T6 a1);
/* KL_SHELL_COMMAND.default_shell */
extern T0* T85f8(GE_context* ac, T0* C);
/* STRING_32.make_empty */
extern T0* T18c14(GE_context* ac);
/* STRING_32.make */
extern void T18f15(GE_context* ac, T0* C, T6 a1);
/* STRING_32.make */
extern T0* T18c15(GE_context* ac, T6 a1);
/* SPECIAL [CHARACTER_32].make_filled */
extern T0* T16c7(GE_context* ac, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].fill_with */
extern void T16f12(GE_context* ac, T0* C, T3 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].extend */
extern void T16f11(GE_context* ac, T0* C, T3 a1);
/* SPECIAL [CHARACTER_32].make_empty */
extern void T16f10(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_32].make_empty */
extern T0* T16c10(GE_context* ac, T6 a1);
/* KL_SHELL_COMMAND.item */
extern T0* T85f10(GE_context* ac, T0* C, T0* a1);
/* NATIVE_STRING.string */
extern T0* T500f6(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_8_0_pointer_to_escaped_string_32 */
extern T0* T598f2(GE_context* ac, T598* C, T0* a1);
/* UTF_CONVERTER.utf_8_0_pointer_into_escaped_string_32 */
extern void T598f18(GE_context* ac, T598* C, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_8_0_subpointer_into_escaped_string_32 */
extern void T598f23(GE_context* ac, T598* C, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* UTF_CONVERTER.escape_code_into */
extern void T598f24(GE_context* ac, T598* C, T0* a1, T9 a2);
/* NATURAL_16.to_hex_string */
extern T0* T9f7(GE_context* ac, T9* C);
/* STRING_8.put */
extern void T17f66(GE_context* ac, T0* C, T2 a1, T6 a2);
/* INTEGER_32.to_hex_character */
extern T2 T6f28(GE_context* ac, T6* C);
/* CHARACTER_8.plus */
extern T2 T2f27(GE_context* ac, T2* C, T6 a1);
/* CHARACTER_8.minus */
extern T2 T2f26(GE_context* ac, T2* C, T6 a1);
/* NATURAL_16.to_integer_32 */
extern T6 T9f11(GE_context* ac, T9* C);
/* STRING_8.make_filled */
extern T0* T17c57(GE_context* ac, T2 a1, T6 a2);
/* STRING_8.fill_character */
extern void T17f61(GE_context* ac, T0* C, T2 a1);
/* STRING_32.append_string_general */
extern void T18f16(GE_context* ac, T0* C, T0* a1);
/* STRING_32.append */
extern void T18f16p1(GE_context* ac, T0* C, T0* a1);
/* STRING_32.reset_hash_codes */
extern void T18f22(GE_context* ac, T0* C);
/* STRING_32.set_count */
extern void T18f21(GE_context* ac, T0* C, T6 a1);
/* STRING_32.append_code */
extern void T18f20(GE_context* ac, T0* C, T10 a1);
/* STRING_32.put_code */
extern void T18f23(GE_context* ac, T0* C, T10 a1, T6 a2);
/* STRING_32.resize */
extern void T18f19(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_32].aliased_resized_area_with_default */
extern T0* T16f3(GE_context* ac, T0* C, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].aliased_resized_area */
extern T0* T16f4(GE_context* ac, T0* C, T6 a1);
/* STRING_32.capacity */
extern T6 T18f6(GE_context* ac, T0* C);
/* STRING_32.append */
extern void T18f18(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_32].copy_data */
extern void T16f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_32].force */
extern void T16f14(GE_context* ac, T0* C, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].move_data */
extern void T16f13(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].overlapping_move */
extern void T16f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].non_overlapping_move */
extern void T16f15(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_32.additional_space */
extern T6 T18f5(GE_context* ac, T0* C);
/* NATURAL_8.to_hex_string */
extern T0* T8f11(GE_context* ac, T8* C);
/* NATURAL_8.to_integer_32 */
extern T6 T8f14(GE_context* ac, T8* C);
/* NATURAL_16.is_less_equal */
extern T1 T9f5(GE_context* ac, T9* C, T9 a1);
/* STRING_32.append_character */
extern void T18f17(GE_context* ac, T0* C, T3 a1);
/* NATURAL_8.to_natural_16 */
extern T9 T8f9(GE_context* ac, T8* C);
/* STRING_32.extend */
extern void T18f25(GE_context* ac, T0* C, T3 a1);
/* NATURAL_8.is_less_equal */
extern T1 T8f6(GE_context* ac, T8* C, T8 a1);
/* MANAGED_POINTER.read_natural_8 */
extern T8 T154f5(GE_context* ac, T0* C, T6 a1);
/* TYPED_POINTER [[attached] NATURAL_8].memory_copy */
extern void T1538f2(GE_context* ac, T1538* C, T14 a1, T6 a2);
/* TYPED_POINTER [[attached] NATURAL_8].c_memcpy */
extern void T1538f3(GE_context* ac, T1538* C, T14 a1, T14 a2, T6 a3);
/* STRING_32.grow */
extern void T18f24(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.utf_16_0_pointer_to_escaped_string_32 */
extern T0* T598f1(GE_context* ac, T598* C, T0* a1);
/* UTF_CONVERTER.utf_16_0_pointer_into_escaped_string_32 */
extern void T598f17(GE_context* ac, T598* C, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_16_0_subpointer_into_escaped_string_32 */
extern void T598f22(GE_context* ac, T598* C, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* NATURAL_32.is_greater_equal */
extern T1 T10f14(GE_context* ac, T10* C, T10 a1);
/* NATURAL_16.to_natural_32 */
extern T10 T9f4(GE_context* ac, T9* C);
/* MANAGED_POINTER.read_natural_16 */
extern T9 T154f7(GE_context* ac, T0* C, T6 a1);
/* TYPED_POINTER [[attached] NATURAL_16].memory_copy */
extern void T2000f2(GE_context* ac, T2000* C, T14 a1, T6 a2);
/* TYPED_POINTER [[attached] NATURAL_16].c_memcpy */
extern void T2000f3(GE_context* ac, T2000* C, T14 a1, T14 a2, T6 a3);
/* NATIVE_STRING.make_from_pointer */
extern T0* T500c10(GE_context* ac, T14 a1);
/* MANAGED_POINTER.make_from_pointer */
extern T0* T154c13(GE_context* ac, T14 a1, T6 a2);
/* POINTER.memory_alloc */
extern T14 T14f9(GE_context* ac, T14* C, T6 a1);
/* POINTER.c_malloc */
extern T14 T14f10(GE_context* ac, T14* C, T6 a1);
/* NATIVE_STRING.pointer_length_in_bytes */
extern T6 T500f4(GE_context* ac, T0* C, T14 a1);
/* NATURAL_64.to_integer_32 */
extern T6 T11f2(GE_context* ac, T11* C);
/* NATURAL_64.is_less_equal */
extern T1 T11f14(GE_context* ac, T11* C, T11 a1);
/* NATIVE_STRING.c_pointer_length_in_bytes */
extern T11 T500f8(GE_context* ac, T0* C, T14 a1);
/* KL_SHELL_COMMAND.eif_getenv */
extern T14 T85f11(GE_context* ac, T0* C, T14 a1);
/* UC_UTF8_STRING.old_is_empty */
extern T1 T1557f20(GE_context* ac, T0* C);
/* STRING_8.is_empty */
extern T1 T17f15(GE_context* ac, T0* C);
/* INTEGER_32.out */
extern T0* T6f3(GE_context* ac, T6* C);
/* STRING_8.append_integer */
extern void T17f46(GE_context* ac, T0* C, T6 a1);
/* GEC.c_compile_using_make */
extern T1 T25f53(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.parameter */
extern T0* T47f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable STRING_8].last */
extern T0* T176f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable STRING_8].is_empty */
extern T1 T176f8(GE_context* ac, T0* C);
/* KL_SHELL_COMMAND.make */
extern T0* T85c12(GE_context* ac, T0* a1);
/* KL_SHELL_COMMAND.string_ */
extern T0* T85f7(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.absolute_pathname */
extern T0* T147f1(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname */
extern T0* T147f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.appended_string */
extern T0* T38f13(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T38f13ot1(T0* a1, T0** a2);
extern T1 T38f13ot2(T0* a1, T0** a2);
/* STRING_8.append_string */
extern void T17f56(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append */
extern void T17f48(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.area_lower */
extern T6 T1557f53(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.concat */
extern T0* T38f8(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T38f8ot1(T0* a1, T0** a2);
extern T1 T38f8ot2(T0* a1, T0** a2);
/* UC_UTF8_STRING.prefixed_string */
extern T0* T1557f14(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.make */
extern void T1557f73(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.make */
extern T0* T1557c73(GE_context* ac, T6 a1);
/* UC_UTF8_STRING.old_set_count */
extern void T1557f81(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.reset_hash_codes */
extern void T1557f96(GE_context* ac, T0* C);
/* UC_UTF8_STRING.byte_capacity */
extern T6 T1557f55(GE_context* ac, T0* C);
/* UC_UTF8_STRING.capacity */
extern T6 T1557f55p1(GE_context* ac, T0* C);
/* UC_UTF8_STRING.make */
extern void T1557f73p1(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.substring_byte_count */
extern T6 T1556f22(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
extern T1 T1556f22ot1(T0* a1, T0** a2);
extern T1 T1556f22ot2(T0* a1, T0** a2);
/* UC_UTF8_ROUTINES.code_byte_count */
extern T6 T1556f24(GE_context* ac, T0* C, T6 a1);
/* NATURAL_32.to_integer_32 */
extern T6 T10f20(GE_context* ac, T10* C);
/* UC_UTF8_STRING.shifted_byte_index */
extern T6 T1557f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.byte_index */
extern T6 T1557f35(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.dummy_uc_string */
extern T0* T1556f27(GE_context* ac, T0* C);
/* UC_STRING.make_empty */
extern T0* T163c9(GE_context* ac);
/* UC_STRING.make */
extern void T163f10(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.old_set_count */
extern void T163f13(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.reset_hash_codes */
extern void T163f14(GE_context* ac, T0* C);
/* UC_STRING.set_count */
extern void T163f12(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.byte_capacity */
extern T6 T163f8(GE_context* ac, T0* C);
/* UC_STRING.capacity */
extern T6 T163f8p1(GE_context* ac, T0* C);
/* UC_STRING.make */
extern void T163f10p1(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.reset_byte_index_cache */
extern void T163f11(GE_context* ac, T0* C);
/* UC_UTF8_ROUTINES.character_byte_count */
extern T6 T1556f23(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.any_ */
extern T0* T1556f25(GE_context* ac, T0* C);
/* UC_UTF8_STRING.append_string */
extern void T1557f68(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.append */
extern void T1557f87(GE_context* ac, T0* C, T0* a1);
extern T1 T1557f87ot1(T0* a1, T0** a2);
extern T1 T1557f87ot2(T0* a1);
/* UC_UTF8_STRING.dummy_uc_string */
extern T0* T1557f59(GE_context* ac, T0* C);
/* UC_UTF8_STRING.gobo_append_substring */
extern void T1557f70(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_substring_at_byte_index */
extern void T1557f91(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
extern T1 T1557f91ot1(T0* a1, T0** a2);
extern T1 T1557f91ot2(T0* a1, T0** a2);
extern T1 T1557f91ot3(T0* a1, T0** a2);
/* UC_UTF8_STRING.put_code_at_byte_index */
extern void T1557f102(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_character_at_byte_index */
extern void T1557f90(GE_context* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_byte */
extern void T1557f103(GE_context* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.old_put */
extern void T1557f89(GE_context* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.resize_byte_storage */
extern void T1557f88(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.resize */
extern void T1557f104(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.cloned_string */
extern T0* T1557f44(GE_context* ac, T0* C);
/* UC_UTF8_STRING.twin */
extern T0* T1557f18(GE_context* ac, T0* C);
/* UC_UTF8_STRING.copy */
extern void T1557f80(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.copy */
extern void T1557f80p1(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].resized_area */
extern T0* T15f7(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.append */
extern void T1557f87p1(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.additional_space */
extern T6 T1557f60(GE_context* ac, T0* C);
/* UC_UTF8_STRING.as_string_8 */
extern T0* T1557f19(GE_context* ac, T0* C);
/* STRING_8.put_code */
extern void T17f54(GE_context* ac, T0* C, T10 a1, T6 a2);
/* UC_UTF8_STRING.put_code */
extern void T1557f82(GE_context* ac, T0* C, T10 a1, T6 a2);
/* UC_UTF8_STRING.put_item_code */
extern void T1557f101(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.move_bytes_right */
extern void T1557f98(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.move_bytes_left */
extern void T1557f97(GE_context* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.valid_code */
extern T1 T17f34(GE_context* ac, T0* C, T10 a1);
/* UC_UTF8_STRING.valid_code */
extern T1 T1557f45(GE_context* ac, T0* C, T10 a1);
/* STRING_8.set_count */
extern void T17f47(GE_context* ac, T0* C, T6 a1);
/* STRING_8.as_string_8 */
extern T0* T17f22(GE_context* ac, T0* C);
/* UC_UTF8_STRING.any_ */
extern T0* T1557f43(GE_context* ac, T0* C);
/* UC_UTF8_STRING.append_character */
extern void T1557f69(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.item */
extern T2 T1557f9(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.character_item_at_byte_index */
extern T2 T1557f40(GE_context* ac, T0* C, T6 a1);
/* STRING_8.item */
extern T2 T17f16(GE_context* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.cloned_string */
extern T0* T38f7(GE_context* ac, T0* C, T0* a1);
/* STRING_8.twin */
extern T0* T17f12(GE_context* ac, T0* C);
/* STRING_8.copy */
extern void T17f60(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.string_ */
extern T0* T147f21(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.cwd */
extern T0* T147f13(GE_context* ac, T0* C);
/* PATH.utf_8_name */
extern T0* T542f6(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_32_string_to_utf_8_string_8 */
extern T0* T598f3(GE_context* ac, T598* C, T0* a1);
/* UTF_CONVERTER.utf_32_string_into_utf_8_string_8 */
extern void T598f19(GE_context* ac, T598* C, T0* a1, T0* a2);
/* STRING_8.extend */
extern void T17f77(GE_context* ac, T0* C, T2 a1);
/* IMMUTABLE_STRING_32.code */
extern T10 T19f6(GE_context* ac, T0* C, T6 a1);
/* STRING_8.grow */
extern void T17f76(GE_context* ac, T0* C, T6 a1);
/* PATH.name */
extern T0* T542f4(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_8_string_8_to_escaped_string_32 */
extern T0* T598f5(GE_context* ac, T598* C, T0* a1);
/* UTF_CONVERTER.utf_8_string_8_into_escaped_string_32 */
extern void T598f21(GE_context* ac, T598* C, T0* a1, T0* a2);
/* IMMUTABLE_STRING_32.make_from_string */
extern T0* T19c12(GE_context* ac, T0* a1);
/* STRING_32.area_lower */
extern T6 T18f8(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_16le_string_8_to_escaped_string_32 */
extern T0* T598f4(GE_context* ac, T598* C, T0* a1);
/* UTF_CONVERTER.utf_16le_string_8_into_escaped_string_32 */
extern void T598f20(GE_context* ac, T598* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.current_working_path */
extern T0* T145f3(GE_context* ac, T0* C);
/* PATH.make_from_pointer */
extern T0* T542c17(GE_context* ac, T14 a1);
/* PATH.reset_internal_data */
extern void T542f20(GE_context* ac, T0* C);
/* PATH.normalize */
extern void T542f19(GE_context* ac, T0* C);
/* STRING_8.remove_tail */
extern void T17f59(GE_context* ac, T0* C, T6 a1);
/* PATH.directory_separator */
extern T2 T542f13(GE_context* ac, T0* C);
/* STRING_8.remove_head */
extern void T17f67(GE_context* ac, T0* C, T6 a1);
/* STRING_8.keep_tail */
extern void T17f71(GE_context* ac, T0* C, T6 a1);
/* PATH.root_end_position */
extern T6 T542f12(GE_context* ac, T0* C);
/* PATH.next_directory_separator */
extern T6 T542f15(GE_context* ac, T0* C, T6 a1);
/* CHARACTER_8.as_lower */
extern T2 T2f23(GE_context* ac, T2* C);
/* CHARACTER_8.is_upper */
extern T1 T2f24(GE_context* ac, T2* C);
/* STRING_8.keep_head */
extern void T17f64(GE_context* ac, T0* C, T6 a1);
/* PATH.is_character */
extern T1 T542f8(GE_context* ac, T0* C, T0* a1, T6 a2, T2 a3);
/* C_STRING.substring */
extern T0* T31f3(GE_context* ac, T0* C, T6 a1, T6 a2);
/* C_STRING.read_substring_into */
extern void T31f12(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* NATURAL_8.to_natural_32 */
extern T10 T8f5(GE_context* ac, T8* C);
/* PATH.unit_size */
extern T6 T542f5(GE_context* ac, T0* C);
/* PATH.pointer_length_in_bytes */
extern T6 T542f7(GE_context* ac, T0* C, T14 a1);
/* PATH.c_pointer_length_in_bytes */
extern T11 T542f14(GE_context* ac, T0* C, T14 a1);
/* PATH.make_from_string */
extern T0* T542c16(GE_context* ac, T0* a1);
/* PATH.internal_append_into */
extern void T542f18(GE_context* ac, T0* C, T0* a1, T0* a2, T2 a3);
/* UTF_CONVERTER.escaped_utf_32_string_into_utf_8_string_8 */
extern void T598f16(GE_context* ac, T598* C, T0* a1, T0* a2);
/* UTF_CONVERTER.escaped_utf_32_string_into_utf_16le_string_8 */
extern void T598f15(GE_context* ac, T598* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.eif_dir_current */
extern T6 T145f5(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.execution_environment */
extern T0* T147f23(GE_context* ac, T0* C);
/* EXECUTION_ENVIRONMENT.default_create */
extern T0* T145c9(GE_context* ac);
/* KL_UNIX_FILE_SYSTEM.is_absolute_pathname */
extern T1 T147f12(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.absolute_pathname */
extern T0* T146f1(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.current_drive */
extern T0* T146f15(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_directory_separator */
extern T1 T146f18(GE_context* ac, T0* C, T2 a1);
/* KL_WINDOWS_FILE_SYSTEM.secondary_directory_separator */
extern T2 T146f26(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.string_ */
extern T0* T146f14(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname */
extern T0* T146f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.cwd */
extern T0* T146f13(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.execution_environment */
extern T0* T146f25(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_relative_pathname */
extern T1 T146f5(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_absolute_pathname */
extern T1 T146f12(GE_context* ac, T0* C, T0* a1);
/* GEC.file_system */
extern T0* T25f52(GE_context* ac, T0* C);
/* GEC.unix_file_system */
extern T0* T25f57(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.make */
extern T0* T147c31(GE_context* ac);
/* KL_OPERATING_SYSTEM.is_unix */
extern T1 T97f2(GE_context* ac, T0* C);
/* KL_OPERATING_SYSTEM.current_working_directory */
extern T0* T97f4(GE_context* ac, T0* C);
/* KL_OPERATING_SYSTEM.execution_environment */
extern T0* T97f5(GE_context* ac, T0* C);
/* STRING_8.is_equal */
extern T1 T17f28(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].same_items */
extern T1 T15f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_OPERATING_SYSTEM.variable_value */
extern T0* T97f3(GE_context* ac, T0* C, T0* a1);
/* STRING_32.as_string_8 */
extern T0* T18f7(GE_context* ac, T0* C);
/* EXECUTION_ENVIRONMENT.item */
extern T0* T145f2(GE_context* ac, T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.eif_getenv */
extern T14 T145f4(GE_context* ac, T0* C, T14 a1);
/* GEC.windows_file_system */
extern T0* T25f56(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.make */
extern T0* T146c34(GE_context* ac);
/* GEC.c_compile_using_script */
extern T1 T25f51(GE_context* ac, T0* C);
/* UC_UTF8_STRING.plus */
extern T0* T1557f11(GE_context* ac, T0* C, T0* a1);
/* STRING_8.plus */
extern T0* T17f7(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append_string_general */
extern void T17f49(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append */
extern void T17f49p1(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append_code */
extern void T17f53(GE_context* ac, T0* C, T10 a1);
/* STRING_8.new_string */
extern T0* T17f5(GE_context* ac, T0* C, T6 a1);
/* KL_OPERATING_SYSTEM.is_windows */
extern T1 T97f1(GE_context* ac, T0* C);
/* GEC.operating_system */
extern T0* T25f50(GE_context* ac, T0* C);
/* GEC.no_c_compile */
extern T1 T25f49(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.put_new_line */
extern void T162f8(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.put_integer */
extern void T162f7(GE_context* ac, T0* C, T6 a1);
/* KL_STDOUT_FILE.put_integer_64 */
extern void T162f11(GE_context* ac, T0* C, T7 a1);
/* KL_STDOUT_FILE.put_character */
extern void T162f10(GE_context* ac, T0* C, T2 a1);
/* CONSOLE.put_character */
extern void T1748f22(GE_context* ac, T0* C, T2 a1);
/* CONSOLE.console_pc */
extern void T1748f27(GE_context* ac, T0* C, T14 a1, T2 a2);
/* KL_STDOUT_FILE.console */
extern T0* T162f2(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.io */
extern T0* T162f4(GE_context* ac, T0* C);
/* INTEGER_32.to_integer_64 */
extern T7 T6f19(GE_context* ac, T6* C);
/* KL_STDOUT_FILE.put_string */
extern void T162f6(GE_context* ac, T0* C, T0* a1);
/* KL_STDOUT_FILE.string_ */
extern T0* T162f1(GE_context* ac, T0* C);
/* ET_C_GENERATOR.generate */
extern void T84f505(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].wipe_out */
extern void T57f74(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].slots_wipe_out */
extern void T57f83(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].clashes_wipe_out */
extern void T57f82(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].key_storage_wipe_out */
extern void T57f81(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] STRING_8].keep_head */
extern void T208f7(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] STRING_8].set_count */
extern void T208f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item_storage_wipe_out */
extern void T57f80(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].unset_found_item */
extern void T57f56(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].move_all_cursors_after */
extern void T57f79(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].set_next_cursor */
extern void T62f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].set_after */
extern void T62f17(GE_context* ac, T0* C);
/* ET_C_GENERATOR.generate_compilation_script */
extern void T84f509(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.generate_compilation_makefile */
extern void T84f544(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.report_cannot_write_error */
extern void T84f511(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.error_handler */
extern T0* T84f129(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.make */
extern T0* T413c8(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.set_fatal_error */
extern void T84f510(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.close */
extern void T411f34(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_close */
extern void T411f40(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.default_pointer */
extern T14 T411f18(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_close */
extern void T411f48(GE_context* ac, T0* C, T14 a1);
/* UT_TEMPLATE_EXPANDER.expand_from_values */
extern T0* T452f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].value */
extern T0* T57f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item_storage_item */
extern T0* T57f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].position_of_key */
extern T6 T57f47(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].clashes_item */
extern T6 T57f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].key_storage_item */
extern T0* T57f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].hash_position */
extern T6 T57f29(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.hash_code */
extern T6 T1557f8(GE_context* ac, T0* C);
/* UC_UTF8_STRING.hash_code */
extern T6 T1557f8p1(GE_context* ac, T0* C);
/* STRING_8.hash_code */
extern T6 T17f24(GE_context* ac, T0* C);
/* [attached] KL_AGENT_HASH_FUNCTION [[attached] STRING_8].hash_code */
extern T6 T210f2(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].slots_item */
extern T6 T57f22(GE_context* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.append_substring_to_string */
extern void T38f23(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
extern T1 T38f23ot1(T0* a1, T0** a2);
/* KL_STRING_ROUTINES.appended_substring */
extern T0* T38f12(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
extern T1 T38f12ot1(T0* a1, T0** a2);
extern T1 T38f12ot2(T0* a1, T0** a2);
/* UC_UTF8_STRING.new_empty_string */
extern T0* T1557f17(GE_context* ac, T0* C, T6 a1);
/* UT_TEMPLATE_EXPANDER.string_ */
extern T0* T452f2(GE_context* ac, T0* C);
/* ET_C_GENERATOR.template_expander */
extern T0* T84f195(GE_context* ac, T0* C);
/* UT_TEMPLATE_EXPANDER.make */
extern T0* T452c3(GE_context* ac);
/* KL_TEXT_OUTPUT_FILE.is_open_write */
extern T1 T411f23(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_open_write */
extern T1 T411f19(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T411f29(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.is_closed */
extern T1 T411f17(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_closed */
extern T1 T411f22(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_write */
extern void T411f41(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T411f41p1(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_open */
extern T14 T411f21(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.internal_name_pointer */
extern T0* T411f20(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.string_name */
extern T0* T411f14(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.make */
extern T0* T411c27(GE_context* ac, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_make */
extern void T411f39(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.make_with_name */
extern void T411f47(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.set_name */
extern void T411f52(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.buffered_file_info */
extern T0* T411f25(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.string_ */
extern T0* T411f12(GE_context* ac, T0* C);
/* ET_C_GENERATOR.operating_system */
extern T0* T84f128(GE_context* ac, T0* C);
/* ET_C_GENERATOR.generate_compilation_shell_script */
extern void T84f543(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* KL_TEXT_OUTPUT_FILE.change_mode */
extern void T411f38(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.old_change_mode */
extern void T411f46(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.file_chmod */
extern void T411f51(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.old_exists */
extern T1 T411f16(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_exists */
extern T1 T411f26(GE_context* ac, T0* C, T14 a1);
/* KL_UNIX_FILE_SYSTEM.file_exists */
extern T1 T147f11(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.exists */
extern T1 T33f32(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_plain */
extern T1 T33f34(GE_context* ac, T0* C);
/* FILE_INFO.is_plain */
extern T1 T157f13(GE_context* ac, T0* C);
/* FILE_INFO.file_info */
extern T6 T157f14(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.buffered_file_info */
extern T0* T33f29(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.set_buffer */
extern void T33f73(GE_context* ac, T0* C);
/* FILE_INFO.fast_update */
extern void T157f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* FILE_INFO.eif_file_stat */
extern T6 T157f12(GE_context* ac, T0* C, T14 a1, T14 a2, T1 a3);
/* KL_TEXT_INPUT_FILE.internal_name_pointer */
extern T0* T33f23(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_exists */
extern T1 T33f15(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_exists */
extern T1 T33f30(GE_context* ac, T0* C, T14 a1);
/* KL_TEXT_INPUT_FILE.old_is_closed */
extern T1 T33f12(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.string_name */
extern T0* T33f13(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.reset */
extern void T33f74(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.tmp_file */
extern T0* T147f22(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.file_exists */
extern T1 T146f11(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_file */
extern T0* T146f24(GE_context* ac, T0* C);
/* UC_UTF8_STRING.remove_tail */
extern void T1557f71(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.keep_head */
extern void T1557f74(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.wipe_out */
extern void T1557f92(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.has_extension */
extern T1 T147f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.has_extension */
extern T1 T146f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.file_system */
extern T0* T84f115(GE_context* ac, T0* C);
/* ET_C_GENERATOR.unix_file_system */
extern T0* T84f435(GE_context* ac, T0* C);
/* ET_C_GENERATOR.windows_file_system */
extern T0* T84f434(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].item */
extern T0* T62f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_item */
extern T0* T57f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].forth */
extern void T62f16(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_forth */
extern void T57f85(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].add_traversing_cursor */
extern void T57f87(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].set_position */
extern void T62f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].remove_traversing_cursor */
extern void T57f86(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].after */
extern T1 T62f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].start */
extern void T62f15(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_start */
extern void T57f84(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_off */
extern T1 T57f42(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].off */
extern T1 T62f11(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].is_empty */
extern T1 T57f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].back */
extern void T62f14(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_back */
extern void T57f89(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].set_before */
extern void T62f20(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].key */
extern T0* T62f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_key */
extern T0* T57f40(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].is_last */
extern T1 T62f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_is_last */
extern T1 T57f43(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].before */
extern T1 T62f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].finish */
extern void T62f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_finish */
extern void T57f88(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].new_cursor */
extern T0* T57f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].make */
extern T0* T62c12(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item */
extern T0* T57f45(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].search_position */
extern void T57f57(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.add_external_c_files */
extern void T84f542(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_DIRECTORY.close */
extern void T451f34(GE_context* ac, T0* C);
/* KL_DIRECTORY.old_close */
extern void T451f36(GE_context* ac, T0* C);
/* KL_DIRECTORY.default_pointer */
extern T14 T451f17(GE_context* ac, T0* C);
/* KL_DIRECTORY.dir_close */
extern void T451f40(GE_context* ac, T0* C, T14 a1);
/* KL_STRING_ROUTINES.replaced_all_substrings */
extern T0* T38f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_STRING_ROUTINES.substring_index */
extern T6 T38f15(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* UC_UTF8_STRING.item_code */
extern T6 T1557f56(GE_context* ac, T0* C, T6 a1);
/* STRING_8.item_code */
extern T6 T17f13(GE_context* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.platform */
extern T0* T38f16(GE_context* ac, T0* C);
/* UC_UTF8_STRING.substring_index */
extern T6 T1557f26(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T1557f26ot1(T0* a1, T0** a2);
extern T1 T1557f26ot2(T0* a1, T0** a2);
/* STRING_8.substring_index */
extern T6 T17f38(GE_context* ac, T0* C, T0* a1, T6 a2);
/* STRING_8_SEARCHER.substring_index */
extern T6 T1980f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_8_SEARCHER.substring_index_with_deltas */
extern T6 T1980f2(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_8_SEARCHER.internal_initialize_deltas */
extern void T1980f8(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* STRING_8.string_searcher */
extern T0* T17f40(GE_context* ac, T0* C);
/* STRING_8_SEARCHER.make */
extern T0* T1980c6(GE_context* ac);
/* ET_C_GENERATOR.multithreaded_mode */
extern T1 T84f264(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].force_last */
extern void T57f54(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].key_storage_put */
extern void T57f62(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] STRING_8].force */
extern void T207f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].slots_put */
extern void T57f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].clashes_put */
extern void T57f60(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].resize */
extern void T57f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].clashes_resize */
extern void T57f67(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].aliased_resized_area_with_default */
extern T0* T209f1(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] INTEGER_32].aliased_resized_area_with_default */
extern T0* T149f4(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] SPECIAL [[attached] INTEGER_32].aliased_resized_area */
extern T0* T149f5(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].special_integer_ */
extern T0* T57f28(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].default_create */
extern T0* T209c6(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].key_storage_resize */
extern void T57f66(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] STRING_8].aliased_resized_area */
extern T0* T207f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] STRING_8].aliased_resized_area */
extern T0* T208f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item_storage_resize */
extern void T57f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].slots_resize */
extern void T57f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].new_modulus */
extern T6 T57f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].new_capacity */
extern T6 T57f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item_storage_put */
extern void T57f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.extension */
extern T0* T147f9(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.extension */
extern T0* T146f9(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.ends_with */
extern T1 T1557f25(GE_context* ac, T0* C, T0* a1);
/* STRING_8.area_upper */
extern T6 T17f21(GE_context* ac, T0* C);
/* UC_UTF8_STRING.area_upper */
extern T6 T1557f49(GE_context* ac, T0* C);
/* STRING_8.ends_with */
extern T1 T17f32(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.read_entry */
extern void T451f33(GE_context* ac, T0* C);
/* KL_DIRECTORY.last_entry_8 */
extern T0* T451f15(GE_context* ac, T0* C);
/* FILE_INFO.pointer_to_file_name_8 */
extern T0* T157f15(GE_context* ac, T0* C, T14 a1);
/* C_STRING.string */
extern T0* T31f5(GE_context* ac, T0* C);
/* C_STRING.c_strlen */
extern T6 T31f6(GE_context* ac, T0* C, T14 a1);
/* C_STRING.make_shared_from_pointer */
extern T0* T31c14(GE_context* ac, T14 a1);
/* FILE_INFO.utf_16_to_multi_byte */
extern T6 T157f18(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_DIRECTORY.file_info */
extern T0* T451f24(GE_context* ac, T0* C);
/* KL_DIRECTORY.readentry */
extern void T451f38(GE_context* ac, T0* C);
/* KL_DIRECTORY.eif_dir_next */
extern T14 T451f22(GE_context* ac, T0* C, T14 a1);
/* ET_C_GENERATOR.report_cannot_read_error */
extern void T84f610(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.is_open_read */
extern T1 T451f26(GE_context* ac, T0* C);
/* KL_DIRECTORY.is_closed */
extern T1 T451f16(GE_context* ac, T0* C);
/* KL_DIRECTORY.open_read */
extern void T451f32(GE_context* ac, T0* C);
/* KL_DIRECTORY.old_open_read */
extern void T451f37(GE_context* ac, T0* C);
/* KL_DIRECTORY.dir_open */
extern T14 T451f19(GE_context* ac, T0* C, T14 a1);
/* KL_DIRECTORY.internal_name_pointer */
extern T0* T451f18(GE_context* ac, T0* C);
/* KL_DIRECTORY.old_is_readable */
extern T1 T451f13(GE_context* ac, T0* C);
/* KL_DIRECTORY.eif_dir_is_readable */
extern T1 T451f28(GE_context* ac, T0* C, T14 a1);
/* KL_DIRECTORY.old_exists */
extern T1 T451f12(GE_context* ac, T0* C);
/* KL_DIRECTORY.eif_dir_exists */
extern T1 T451f27(GE_context* ac, T0* C, T14 a1);
/* KL_DIRECTORY.make */
extern void T451f30(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.make */
extern T0* T451c30(GE_context* ac, T0* a1);
/* KL_DIRECTORY.old_make */
extern void T451f35(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.make_with_name */
extern void T451f39(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.set_name */
extern void T451f41(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.string_ */
extern T0* T451f23(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring */
extern T0* T410f57(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_end_position */
extern T6 T410f79(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_start_position */
extern T6 T410f70(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.recognizes */
extern T1 T410f55(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_matched */
extern T1 T410f58(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].set_key_equality_tester */
extern void T57f53(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.string_equality_tester */
extern T0* T84f479(GE_context* ac, T0* C);
/* KL_STRING_EQUALITY_TESTER.default_create */
extern T0* T179c2(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_map */
extern void T57f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_map */
extern T0* T57c52(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_with_equality_testers */
extern void T57f55(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_sparse_container */
extern void T57f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].set_internal_cursor */
extern void T57f72(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_slots */
extern void T57f71(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_clashes */
extern void T57f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_key_storage */
extern void T57f69(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] STRING_8].make */
extern T0* T207f2(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] STRING_8].default_create */
extern T0* T207c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_item_storage */
extern void T57f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].found_item */
extern T0* T57f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].found */
extern T1 T57f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].search */
extern void T57f77(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].force */
extern void T57f91(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_EXECUTION_ENVIRONMENT.interpreted_string */
extern T0* T107f4(GE_context* ac, T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.variable_value */
extern T0* T107f3(GE_context* ac, T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.environment_impl */
extern T0* T107f1(GE_context* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.string_ */
extern T0* T107f2(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.replace_all */
extern T0* T410f232(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replace_all_to_string */
extern void T410f306(GE_context* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_unbounded_substring */
extern void T410f320(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_substring */
extern void T410f318(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_it */
extern void T410f333(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_start */
extern T1 T410f150(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_internal */
extern T6 T410f233(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_type */
extern T6 T410f297(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.match_not_repeated_characters */
extern T6 T410f296(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.infinity */
extern T6 T410f59(GE_context* ac, T0* C);
/* KL_PLATFORM.maximum_integer */
extern T6 T312f2(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.platform */
extern T0* T410f195(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_characters */
extern T6 T410f295(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_BYTE_CODE.character_item */
extern T6 T1337f8(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_classes */
extern T6 T410f294(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.character_set_has */
extern T1 T1337f10(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_refs */
extern T6 T410f293(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_ref */
extern T6 T410f299(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.space_set */
extern T0* T410f151(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.make */
extern T0* T1338c5(GE_context* ac, T0* a1);
/* RX_CHARACTER_SET.add_string */
extern void T1338f10(GE_context* ac, T0* C, T0* a1);
/* RX_CHARACTER_SET.add_character */
extern void T1338f9(GE_context* ac, T0* C, T6 a1);
/* RX_CHARACTER_SET.make_empty */
extern void T1338f4(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.make_empty */
extern T0* T1338c4(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] BOOLEAN].make_filled */
extern T0* T764f3(GE_context* ac, T0* C, T1 a1, T6 a2);
/* RX_CHARACTER_SET.special_boolean_ */
extern T0* T1338f3(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] BOOLEAN].default_create */
extern T0* T764c5(GE_context* ac);
/* RX_PCRE_REGULAR_EXPRESSION.digit_set */
extern T0* T410f167(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.has */
extern T1 T1338f2(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ims_options */
extern void T410f331(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_dotall */
extern T1 T410f86(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_multiline */
extern T1 T410f85(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_caseless */
extern T1 T410f84(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_match_count */
extern void T410f340(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_next_start */
extern void T410f339(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_recursive */
extern T6 T410f292(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* RX_BYTE_CODE.integer_item */
extern T6 T1337f11(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.next_matching_alternate */
extern T6 T410f290(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_additional_bracket */
extern T6 T410f271(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.opcode_item */
extern T6 T1337f7(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.special_integer_ */
extern T0* T410f54(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.flip_case */
extern T6 T1339f4(GE_context* ac, T0* C, T6 a1);
/* RX_CASE_MAPPING.to_lower */
extern T6 T1339f3(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replacement_to_string */
extern void T410f319(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.append_code */
extern void T1557f76(GE_context* ac, T0* C, T10 a1);
/* UC_UTF8_STRING.append_item_code */
extern void T1557f95(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_captured_substring_to_string */
extern void T410f334(GE_context* ac, T0* C, T0* a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.string_ */
extern T0* T410f228(GE_context* ac, T0* C);
/* ET_C_GENERATOR.execution_environment */
extern T0* T84f127(GE_context* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.default_create */
extern T0* T107c5(GE_context* ac);
/* KL_STRING_ROUTINES.new_empty_string */
extern T0* T38f10(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T38f10ot1(T0* a1, T0** a2);
/* UC_UTF8_STRING.old_wipe_out */
extern void T1557f77(GE_context* ac, T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T1557f77p1(GE_context* ac, T0* C);
/* STRING_8.wipe_out */
extern void T17f74(GE_context* ac, T0* C);
/* ET_C_GENERATOR.string_ */
extern T0* T84f126(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match */
extern void T410f305(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].item */
extern T0* T171f17(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.current_system */
extern T0* T84f278(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_case_insensitive */
extern void T410f304(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_caseless */
extern void T410f317(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T410f303(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T410f303p1(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_startline */
extern void T410f316(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_startline */
extern T1 T410f231(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.first_significant_code */
extern T6 T410f190(GE_context* ac, T0* C, T6 a1, T6 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.find_firstchar */
extern T6 T410f230(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_anchored */
extern void T410f315(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.can_anchored */
extern T1 T410f229(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.ims_options */
extern T6 T410f148(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_dotall */
extern T6 T410f132(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_multiline */
extern T6 T410f130(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_caseless */
extern T6 T410f128(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_regexp */
extern void T410f314(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3, T6 a4);
/* RX_BYTE_CODE.set_count */
extern void T1337f18(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.find_fixed_code_length */
extern T6 T410f64(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.put_integer */
extern void T1337f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_branch */
extern void T410f332(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.meta_set */
extern T0* T410f147(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.maxlit */
extern T6 T410f146(GE_context* ac, T0* C);
/* RX_BYTE_CODE.append_character */
extern void T1337f19(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.put_character */
extern void T1337f25(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.resize_byte_code */
extern void T1337f24(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.special_integer_ */
extern T0* T1337f9(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_escape */
extern T6 T410f141(GE_context* ac, T0* C, T6 a1, T1 a2);
/* RX_PCRE_REGULAR_EXPRESSION.scan_hex_number */
extern T6 T410f223(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.xdigit_set */
extern T0* T410f245(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_octal_number */
extern T6 T410f222(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.escape_character */
extern T6 T410f218(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.to_option_ims */
extern T6 T410f135(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ichanged */
extern void T410f330(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_dotall */
extern T6 T410f133(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_multiline */
extern T6 T410f131(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_caseless */
extern T6 T410f129(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_decimal_number */
extern T6 T410f110(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_repeats */
extern void T410f337(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5);
/* RX_BYTE_CODE.append_subcopy */
extern void T1337f23(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.put_opcode */
extern void T1337f22(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.move_right */
extern void T1337f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_single_repeat */
extern void T410f338(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* RX_PCRE_REGULAR_EXPRESSION.compile_character_class */
extern void T410f336(GE_context* ac, T0* C);
/* RX_BYTE_CODE.append_character_set */
extern void T1337f20(GE_context* ac, T0* C, T0* a1, T1 a2);
/* RX_BYTE_CODE.resize_character_sets */
extern void T1337f26(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] BOOLEAN].aliased_resized_area_with_default */
extern T0* T764f4(GE_context* ac, T0* C, T0* a1, T1 a2, T6 a3);
/* [attached] SPECIAL [[attached] BOOLEAN].aliased_resized_area_with_default */
extern T0* T150f5(GE_context* ac, T0* C, T1 a1, T6 a2);
/* [attached] SPECIAL [[attached] BOOLEAN].aliased_resized_area */
extern T0* T150f4(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.special_boolean_ */
extern T0* T1337f12(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.add_set */
extern void T1338f8(GE_context* ac, T0* C, T0* a1);
/* RX_CHARACTER_SET.add_negated_set */
extern void T1338f7(GE_context* ac, T0* C, T0* a1);
/* [attached] ARRAY [[attached] RX_CHARACTER_SET].item */
extern T0* T1342f4(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.class_sets */
extern T0* T410f159(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.default_word_set */
extern T0* T410f76(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.punct_set */
extern T0* T410f244(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.print_set */
extern T0* T410f243(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.graph_set */
extern T0* T410f242(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.cntrl_set */
extern T0* T410f241(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.ascii_set */
extern T0* T410f240(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alnum_set */
extern T0* T410f239(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.upper_set */
extern T0* T410f238(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.lower_set */
extern T0* T410f237(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alpha_set */
extern T0* T410f235(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_name */
extern T6 T410f157(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] ARRAY [[attached] STRING_8].item */
extern T0* T449f5(GE_context* ac, T0* C, T6 a1);
/* [attached] ARRAY [[attached] STRING_8].count */
extern T6 T449f6(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.class_names */
extern T0* T410f236(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_syntax */
extern T6 T410f155(GE_context* ac, T0* C, T6 a1);
/* RX_CHARACTER_SET.wipe_out */
extern void T1338f6(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.actual_set */
extern T0* T410f152(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.compile_counted_repeats */
extern T1 T410f88(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.scan_comment */
extern void T410f335(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_undef */
extern T1 T410f61(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.append_integer */
extern void T1337f16(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.append_opcode */
extern void T1337f15(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_error */
extern void T410f313(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_internal_options */
extern void T410f312(GE_context* ac, T0* C);
/* RX_BYTE_CODE.wipe_out */
extern void T1337f14(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T410f311(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T410f311p1(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern T0* T410c302(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].make_filled */
extern T0* T209f5(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern void T410f302p1(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_options */
extern void T410f310(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_strict */
extern void T410f329(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_greedy */
extern void T410f328(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_eol */
extern void T410f327(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_bol */
extern void T410f326(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dollar_endonly */
extern void T410f325(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_empty_allowed */
extern void T410f324(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_extended */
extern void T410f323(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dotall */
extern void T410f322(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_multiline */
extern void T410f321(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_word_set */
extern void T410f309(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_character_case_mapping */
extern void T410f308(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.default_character_case_mapping */
extern T0* T410f75(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.make */
extern T0* T1339c6(GE_context* ac, T0* a1, T0* a2);
/* RX_CASE_MAPPING.add */
extern void T1339f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* RX_CASE_MAPPING.make_default */
extern void T1339f7(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.clear */
extern void T1339f9(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.special_integer_ */
extern T0* T1339f5(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T410f307(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T410f307p1(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.wipe_out */
extern void T38f20(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.empty_pattern_buffer */
extern T0* T410f74(GE_context* ac, T0* C);
/* RX_BYTE_CODE.make */
extern T0* T1337c13(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].twin */
extern T0* T57f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].copy */
extern void T57f92(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].copy */
extern void T57f92p1(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].clone_clashes */
extern void T57f97(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] INTEGER_32].resized_area */
extern T0* T149f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] INTEGER_32].copy_data */
extern void T149f15(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [attached] SPECIAL [[attached] INTEGER_32].force */
extern void T149f11(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] SPECIAL [[attached] INTEGER_32].move_data */
extern void T149f17(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] INTEGER_32].overlapping_move */
extern void T149f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] INTEGER_32].non_overlapping_move */
extern void T149f18(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].clone_slots */
extern void T57f96(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].clone_key_storage */
extern void T57f95(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] STRING_8].resized_area */
extern T0* T208f5(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] STRING_8].copy_data */
extern void T208f13(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [attached] SPECIAL [[attached] STRING_8].force */
extern void T208f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] STRING_8].move_data */
extern void T208f14(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] STRING_8].overlapping_move */
extern void T208f17(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] STRING_8].non_overlapping_move */
extern void T208f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].clone_item_storage */
extern void T57f94(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].valid_cursor */
extern T1 T57f49(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.c_config */
extern T0* T84f125(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.parse_file */
extern void T588f180(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.parse */
extern void T588f184(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_pop_last_value */
extern void T588f197(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_push_error_value */
extern void T588f196(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ANY].force */
extern void T280f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ANY].fill_with */
extern void T279f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ANY].extend */
extern void T279f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ANY].aliased_resized_area */
extern T0* T280f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ANY].aliased_resized_area */
extern T0* T279f3(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_do_action */
extern void T588f195(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] BOOLEAN].force */
extern void T764f6(GE_context* ac, T0* C, T0* a1, T1 a2, T6 a3);
/* [attached] KL_SPECIAL_ROUTINES [[attached] BOOLEAN].aliased_resized_area */
extern T0* T764f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* UT_CONFIG_PARSER.is_defined */
extern T1 T588f136(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].has */
extern T1 T57f50(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.process_include */
extern void T588f208(GE_context* ac, T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.make */
extern T0* T1765c8(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] YY_BUFFER].put */
extern void T1763f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] YY_BUFFER].force */
extern void T2278f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] YY_BUFFER].fill_with */
extern void T2277f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] YY_BUFFER].extend */
extern void T2277f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32].put */
extern void T853f13(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.execution_environment */
extern T0* T588f162(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [[attached] YY_BUFFER].is_full */
extern T1 T1763f5(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.undefine_value */
extern void T588f207(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].remove */
extern void T57f98(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].remove_position */
extern void T57f99(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].key_storage_keep_head */
extern void T57f103(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item_storage_keep_head */
extern void T57f102(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].move_cursors_forth */
extern void T57f101(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].internal_set_key_equality_tester */
extern void T57f100(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.ignored */
extern T1 T588f133(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_push_last_value */
extern void T588f194(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.accept */
extern void T588f193(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_do_error_action */
extern void T588f191(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.report_error */
extern void T588f206(GE_context* ac, T0* C, T0* a1);
extern T1 T588f206ot1(T0* a1, T0** a2);
/* UT_SYNTAX_ERROR.make */
extern T0* T1764c8(GE_context* ac, T0* a1, T6 a2);
/* UT_CONFIG_PARSER.report_eof_expected_error */
extern void T588f205(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.read_token */
extern void T588f190(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_execute_action */
extern void T588f204(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_set_beginning_of_line */
extern void T588f213(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_beginning_of_line */
extern void T271f28(GE_context* ac, T0* C, T1 a1);
/* YY_BUFFER.set_beginning_of_line */
extern void T272f17(GE_context* ac, T0* C, T1 a1);
/* UT_CONFIG_PARSER.text_item */
extern T2 T588f161(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.text_substring */
extern T0* T588f155(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.substring */
extern T0* T1569f6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UT_CONFIG_PARSER.text_count */
extern T6 T588f154(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.string_ */
extern T0* T588f150(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.text */
extern T0* T588f149(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.set_start_condition */
extern void T588f211(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_execute_eof_action */
extern void T588f203(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.terminate */
extern void T588f212(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.wrap */
extern T1 T588f128(GE_context* ac, T0* C);
extern T1 T588f128ot1(T0* a1, T0** a2);
/* [attached] DS_ARRAYED_STACK [[attached] YY_BUFFER].remove */
extern void T1763f10(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] YY_BUFFER].keep_head */
extern void T2277f5(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] YY_BUFFER].set_count */
extern void T2277f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32].remove */
extern void T853f10(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] INTEGER_32].keep_head */
extern void T149f14(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] INTEGER_32].set_count */
extern void T149f16(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32].item */
extern T6 T853f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [[attached] YY_BUFFER].item */
extern T0* T1763f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [[attached] YY_BUFFER].is_empty */
extern T1 T1763f6(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_refill_input_buffer */
extern void T588f202(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_set_content */
extern void T588f200(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.count */
extern T6 T1569f4(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.fill */
extern void T271f20(GE_context* ac, T0* C);
/* KL_CHARACTER_BUFFER.fill_from_stream */
extern T6 T1569f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_CHARACTER_BUFFER.put */
extern void T1569f10(GE_context* ac, T0* C, T2 a1, T6 a2);
/* YY_FILE_BUFFER.compact_left */
extern void T271f22(GE_context* ac, T0* C);
/* KL_CHARACTER_BUFFER.move_left */
extern void T1569f11(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_8.subcopy */
extern void T17f79(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_FILE_BUFFER.resize */
extern void T271f24(GE_context* ac, T0* C);
/* KL_CHARACTER_BUFFER.resize */
extern void T1569f12(GE_context* ac, T0* C, T6 a1);
/* YY_FILE_BUFFER.default_capacity */
extern T6 T271f13(GE_context* ac, T0* C);
/* YY_BUFFER.fill */
extern void T272f15(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_index */
extern void T271f18(GE_context* ac, T0* C, T6 a1);
/* YY_BUFFER.set_index */
extern void T272f13(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_null_trans_state */
extern T6 T588f127(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_previous_state */
extern T6 T588f126(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.fatal_error */
extern void T588f201(GE_context* ac, T0* C, T0* a1);
/* UT_MESSAGE.make */
extern T0* T103c8(GE_context* ac, T0* a1);
/* KL_CHARACTER_BUFFER.item */
extern T2 T1569f3(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].force */
extern void T209f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].aliased_resized_area */
extern T0* T209f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* UT_CONFIG_PARSER.special_integer_ */
extern T0* T588f104(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_init_value_stacks */
extern void T588f189(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_clear_all */
extern void T588f198(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.clear_all */
extern void T588f209(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.clear_stacks */
extern void T588f214(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_clear_value_stacks */
extern void T588f215(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] BOOLEAN].keep_head */
extern void T150f12(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] BOOLEAN].set_count */
extern void T150f13(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ANY].keep_head */
extern void T279f5(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ANY].set_count */
extern void T279f8(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.abort */
extern void T588f192(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.set_input_buffer */
extern void T588f183(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_load_input_buffer */
extern void T588f188(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_position */
extern void T271f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* YY_BUFFER.set_position */
extern void T272f14(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UT_CONFIG_PARSER.new_file_buffer */
extern T0* T588f103(GE_context* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.make */
extern T0* T271c17(GE_context* ac, T0* a1);
/* YY_FILE_BUFFER.make_with_size */
extern void T271f21(GE_context* ac, T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.make_with_size */
extern T0* T271c21(GE_context* ac, T0* a1, T6 a2);
/* YY_FILE_BUFFER.set_file */
extern void T271f23(GE_context* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.set_file_with_size */
extern void T271f25(GE_context* ac, T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.flush */
extern void T271f26(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.new_default_buffer */
extern T0* T271f15(GE_context* ac, T0* C, T6 a1);
/* KL_CHARACTER_BUFFER.make */
extern T0* T1569c9(GE_context* ac, T6 a1);
/* ET_C_GENERATOR.console_application_mode */
extern T1 T84f438(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.define_value */
extern void T588f179(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UT_CONFIG_PARSER.make */
extern T0* T588c178(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32].make */
extern T0* T853c8(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].make */
extern T0* T209f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] YY_BUFFER].make */
extern T0* T1763c8(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] YY_BUFFER].make */
extern T0* T2278f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] YY_BUFFER].make_empty */
extern T0* T2277c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] YY_BUFFER].default_create */
extern T0* T2278c2(GE_context* ac);
/* UT_CONFIG_PARSER.string_equality_tester */
extern T0* T588f97(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.make_parser_skeleton */
extern void T588f182(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_build_parser_tables */
extern void T588f187(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yycheck_template */
extern T0* T588f82(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yyfixed_array */
extern T0* T588f173(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].to_special */
extern T0* T209f4(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yytable_template */
extern T0* T588f81(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yypgoto_template */
extern T0* T588f135(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yypact_template */
extern T0* T588f134(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yydefgoto_template */
extern T0* T588f132(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yydefact_template */
extern T0* T588f129(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytypes2_template */
extern T0* T588f123(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytypes1_template */
extern T0* T588f121(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yyr1_template */
extern T0* T588f116(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytranslate_template */
extern T0* T588f115(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytranslate_template_2 */
extern void T588f217(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yyarray_subcopy */
extern void T588f224(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* [attached] KL_ARRAY_ROUTINES [[attached] INTEGER_32].subcopy */
extern void T584f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* [attached] ARRAY [[attached] INTEGER_32].subcopy */
extern void T402f17(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* UT_CONFIG_PARSER.integer_array_ */
extern T0* T588f177(GE_context* ac, T0* C);
/* [attached] KL_ARRAY_ROUTINES [[attached] INTEGER_32].default_create */
extern T0* T584c2(GE_context* ac);
/* UT_CONFIG_PARSER.yytranslate_template_1 */
extern void T588f216(GE_context* ac, T0* C, T0* a1);
/* [attached] ARRAY [[attached] INTEGER_32].make_filled */
extern T0* T402c10(GE_context* ac, T6 a1, T6 a2, T6 a3);
/* [attached] ARRAY [[attached] INTEGER_32].make_filled_area */
extern void T402f12(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UT_CONFIG_PARSER.yy_create_value_stacks */
extern void T588f186(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] BOOLEAN].make */
extern T0* T764f1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ANY].make */
extern T0* T280f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ANY].make_empty */
extern T0* T279c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ANY].default_create */
extern T0* T280c3(GE_context* ac);
/* UT_CONFIG_PARSER.make_scanner */
extern void T588f181(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.make_with_buffer */
extern void T588f185(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T588f199(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T588f199p1(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_build_tables */
extern void T588f210(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_accept_template */
extern T0* T588f169(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_fixed_array */
extern T0* T588f175(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_meta_template */
extern T0* T588f168(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_ec_template */
extern T0* T588f167(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_ec_template_2 */
extern void T588f223(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_array_subcopy */
extern void T588f225(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* UT_CONFIG_PARSER.yy_ec_template_1 */
extern void T588f222(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_def_template */
extern T0* T588f166(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_base_template */
extern T0* T588f165(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_chk_template */
extern T0* T588f164(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_chk_template_2 */
extern void T588f221(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_chk_template_1 */
extern void T588f220(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_nxt_template */
extern T0* T588f163(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_nxt_template_2 */
extern void T588f219(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_nxt_template_1 */
extern void T588f218(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.empty_buffer */
extern T0* T588f83(GE_context* ac, T0* C);
/* YY_BUFFER.make */
extern T0* T272c12(GE_context* ac, T0* a1);
/* YY_BUFFER.make_from_buffer */
extern void T272f16(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.fill_from_string */
extern void T1569f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* YY_BUFFER.new_default_buffer */
extern T0* T272f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].put_new */
extern void T57f90(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.right_adjust */
extern void T38f22(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.left_adjust */
extern void T38f21(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.remove_head */
extern void T1557f79(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.keep_tail */
extern void T1557f99(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.read_line */
extern void T33f63(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.unread_character */
extern void T33f68(GE_context* ac, T0* C, T2 a1);
/* [attached] KL_LINKABLE [[attached] CHARACTER_8].put_right */
extern void T155f4(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_LINKABLE [[attached] CHARACTER_8].make */
extern T0* T155c3(GE_context* ac, T2 a1);
/* KL_TEXT_INPUT_FILE.string_ */
extern T0* T33f28(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.nested_pathname */
extern T0* T147f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.nested_pathname */
extern T0* T146f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.generate_c_code */
extern void T84f508(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.dummy_feature */
extern T0* T84f280(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.make */
extern T0* T332c31(GE_context* ac, T0* a1, T0* a2, T0* a3);
extern T1 T332f31ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_set_reference_field_feature */
extern void T80f99(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.use_all_attributes */
extern void T80f100(GE_context* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_set_reference_field_dynamic_types */
extern void T319f23(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_set_reference_field_dynamic_types */
extern void T91f115(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_giaaa_error */
extern void T53f187(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_internal_error */
extern void T53f189(GE_context* ac, T0* C, T0* a1);
/* KL_STANDARD_FILES.error */
extern T0* T160f1(GE_context* ac, T0* C);
/* KL_STDERR_FILE.make */
extern T0* T161c5(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.std */
extern T0* T53f13(GE_context* ac, T0* C);
/* KL_STANDARD_FILES.default_create */
extern T0* T160c4(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.set_has_internal_error */
extern void T53f191(GE_context* ac, T0* C, T1 a1);
/* ET_INTERNAL_ERROR.make_giaaa */
extern T0* T549c13(GE_context* ac);
/* ET_ERROR_HANDLER.report_giaaa_error */
extern void T36f186(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_internal_error */
extern void T36f188(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.std */
extern T0* T36f23(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.set_has_internal_error */
extern void T36f190(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.error_handler */
extern T0* T91f77(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_fatal_error */
extern void T91f103(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_formal_argument_dynamic_types */
extern void T91f118(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.item */
extern T0* T414f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].item */
extern T0* T315f9(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_reference_field_feature */
extern void T80f98(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_reference_field_dynamic_types */
extern void T319f22(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_reference_field_dynamic_types */
extern void T91f114(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_result_dynamic_types */
extern void T91f113(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_new_type_instance_of_feature */
extern void T80f97(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T319f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T91f112(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.create_meta_type */
extern void T80f96(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.meta_type */
extern T0* T80f67(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.make_generic */
extern T0* T93c109(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.put_first */
extern void T333f27(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM].force */
extern void T848f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T845f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM].extend */
extern void T845f8(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.fixed_array */
extern T0* T333f11(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T848c3(GE_context* ac);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T333c26(GE_context* ac, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T333f26p1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T848f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T845c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.right_bracket_symbol */
extern T0* T94f230(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_bracket */
extern T0* T474c72(GE_context* ac);
/* ET_SYMBOL.make_leaf */
extern void T474f83(GE_context* ac, T0* C);
/* ET_SYMBOL.tokens */
extern T0* T474f14(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_create */
extern T0* T94c1512(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_bracket_symbol */
extern T0* T94f229(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.make */
extern T0* T846c102(GE_context* ac);
/* ET_BRACKET_SYMBOL.make_leaf */
extern void T846f104(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.tokens */
extern T0* T846f14(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T333f9(GE_context* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.name */
extern T0* T2087f5(GE_context* ac, T0* C);
/* ET_IDENTIFIER.identifier */
extern T0* T232f83(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.name */
extern T0* T350f5(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.put_last */
extern void T373f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET].force */
extern void T1259f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET].fill_with */
extern void T1258f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET].extend */
extern void T1258f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.fixed_array */
extern T0* T373f5(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET].default_create */
extern T0* T1259c3(GE_context* ac);
/* ET_FORMAL_COMMA_ARGUMENT.type */
extern T0* T2087f4(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.type */
extern T0* T350f4(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.argument_type_set */
extern T0* T416f24(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.item */
extern T0* T373f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.argument_type_set */
extern T0* T332f26(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.formal_argument */
extern T0* T347f7(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT.formal_argument */
extern T0* T350f6(GE_context* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.formal_argument */
extern T0* T2087f6(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.item */
extern T0* T347f6(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.make_with_capacity */
extern T0* T373c9(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET].make */
extern T0* T1259f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET].make_empty */
extern T0* T1258c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T319f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T91f60(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.make */
extern T0* T595c15(GE_context* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type */
extern void T595f20(GE_context* ac, T0* C, T0* a1);
extern T1 T595f20ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_TYPE_HASH_LIST.force_last */
extern void T377f22(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE].force */
extern void T834f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE].fill_with */
extern void T833f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE].extend */
extern void T833f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.fixed_array */
extern T0* T377f5(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE].default_create */
extern T0* T834c3(GE_context* ac);
/* ET_DYNAMIC_TYPE_HASH_LIST.hash_position */
extern T6 T377f12(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.modulus */
extern T6 T377f15(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_HASH_LIST.resize */
extern void T377f18(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.special_integer_ */
extern T0* T377f7(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T834f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T833f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.new_modulus */
extern T6 T377f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.new_capacity */
extern T6 T377f13(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.capacity */
extern T6 T377f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_HASH_LIST.put_last */
extern void T377f19(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.append_last */
extern void T377f21(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.make_with_capacity */
extern T0* T377c17(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE].make */
extern T0* T834f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE].make_empty */
extern T0* T833c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.alive_conforming_descendants */
extern T0* T319f11(GE_context* ac, T0* C, T0* a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].found_item */
extern T0* T527f37(GE_context* ac, T0* C);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T527f30(GE_context* ac, T0* C, T6 a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].found */
extern T1 T527f35(GE_context* ac, T0* C);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].search */
extern void T527f43(GE_context* ac, T0* C, T0* a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].search_position */
extern void T527f47(GE_context* ac, T0* C, T0* a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].hash_position */
extern T6 T527f28(GE_context* ac, T0* C, T0* a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T527f32(GE_context* ac, T0* C, T6 a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].clashes_item */
extern T6 T527f21(GE_context* ac, T0* C, T6 a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].slots_item */
extern T6 T527f24(GE_context* ac, T0* C, T6 a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_map_default */
extern T0* T527c40(GE_context* ac);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_map */
extern void T527f44(GE_context* ac, T0* C, T6 a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T527f48(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_sparse_container */
extern void T527f51(GE_context* ac, T0* C, T6 a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T527f57(GE_context* ac, T0* C, T0* a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].new_cursor */
extern T0* T527f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make */
extern T0* T1750c8(GE_context* ac, T0* a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].unset_found_item */
extern void T527f56(GE_context* ac, T0* C);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_slots */
extern void T527f55(GE_context* ac, T0* C, T6 a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].new_modulus */
extern T6 T527f31(GE_context* ac, T0* C, T6 a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_clashes */
extern void T527f54(GE_context* ac, T0* C, T6 a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_key_storage */
extern void T527f53(GE_context* ac, T0* C, T6 a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_item_storage */
extern void T527f52(GE_context* ac, T0* C, T6 a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].default_capacity */
extern T6 T527f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.alive_conforming_descendants */
extern T0* T91f58(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.object_id_dynamic_type_set */
extern T0* T319f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.mark_type_alive */
extern void T319f16(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_alive_conforming_descendants */
extern void T319f21(GE_context* ac, T0* C, T0* a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].forth */
extern void T527f42(GE_context* ac, T0* C);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_forth */
extern void T527f46(GE_context* ac, T0* C, T0* a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T527f50(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].set_next_cursor */
extern void T1750f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].set_position */
extern void T1750f11(GE_context* ac, T0* C, T6 a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T527f49(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].set_after */
extern void T1750f9(GE_context* ac, T0* C);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T527f34(GE_context* ac, T0* C);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_item */
extern T0* T527f26(GE_context* ac, T0* C, T0* a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].key_for_iteration */
extern T0* T527f27(GE_context* ac, T0* C);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_key */
extern T0* T527f25(GE_context* ac, T0* C, T0* a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].after */
extern T1 T527f20(GE_context* ac, T0* C);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_after */
extern T1 T527f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].after */
extern T1 T1750f4(GE_context* ac, T0* C);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].start */
extern void T527f41(GE_context* ac, T0* C);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_start */
extern void T527f45(GE_context* ac, T0* C, T0* a1);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_off */
extern T1 T527f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].off */
extern T1 T1750f7(GE_context* ac, T0* C);
/* attached DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].is_empty */
extern T1 T527f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_regular */
extern void T416f36(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_regular */
extern void T332f33(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.item */
extern T0* T418f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.current_system */
extern T0* T319f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_type_alive */
extern void T91f92(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_alive_conforming_descendants */
extern void T91f97(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_system */
extern T0* T91f61(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.dynamic_type */
extern T0* T80f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.initialize_dynamic_types */
extern void T80f85(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_DYNAMIC_SYSTEM.propagate_alive_conforming_descendants */
extern void T80f95(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.propagate_attribute_type_sets */
extern void T80f94(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.propagate_type_of_type_result_type */
extern void T80f93(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.initialize_predicate_type */
extern void T80f92(GE_context* ac, T0* C, T0* a1);
extern T1 T80f92ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_FUNCTION_TYPE.set_set_rout_disp_final_feature */
extern void T587f66(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_set_rout_disp_final_feature */
extern void T586f66(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_predicate_class */
extern T1 T95f93(GE_context* ac, T0* C);
/* ET_CLASS.class_codes */
extern T0* T95f109(GE_context* ac, T0* C);
/* ET_CLASS_CODES.default_create */
extern T0* T540c35(GE_context* ac);
/* ET_DYNAMIC_SYSTEM.initialize_function_type */
extern void T80f91(GE_context* ac, T0* C, T0* a1);
extern T1 T80f91ot1(T0* a1, T0** a2);
/* ET_CLASS.is_function_class */
extern T1 T95f92(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_procedure_type */
extern void T80f90(GE_context* ac, T0* C, T0* a1);
extern T1 T80f90ot1(T0* a1, T0** a2);
/* ET_CLASS.is_procedure_class */
extern T1 T95f91(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_typed_pointer_type */
extern void T80f89(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_typed_pointer_class */
extern T1 T95f130(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_array_type */
extern void T80f88(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_array_class */
extern T1 T95f129(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_special_type */
extern void T80f87(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_special_class */
extern T1 T95f89(GE_context* ac, T0* C);
/* ET_CLASS.has_interface_error */
extern T1 T95f72(GE_context* ac, T0* C);
/* ET_CLASS.interface_checked */
extern T1 T95f59(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_fatal_error */
extern void T80f84(GE_context* ac, T0* C);
/* ET_CLASS.has_implementation_error */
extern T1 T95f108(GE_context* ac, T0* C);
/* ET_CLASS.implementation_checked */
extern T1 T95f81(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_type_mark */
extern T0* T94f22(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_separate_mark */
extern void T472f15(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLICIT_TYPE_MARK.set_attached_mark */
extern void T472f16(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLICIT_TYPE_MARK.make */
extern T0* T472c14(GE_context* ac);
/* ET_TOKEN_CONSTANTS.implicit_separate_type_mark */
extern T0* T94f21(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.tokens */
extern T0* T80f64(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_dynamic_type */
extern T0* T80f56(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.register_dynamic_type */
extern void T80f86(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_index */
extern void T95f248(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].force_last */
extern void T315f15(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].resize */
extern void T315f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].new_capacity */
extern T6 T315f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].extendible */
extern T1 T315f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.make */
extern T0* T320c49(GE_context* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type */
extern void T378f17(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make_empty */
extern T0* T378c13(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].make */
extern T0* T383c36(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T383f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].new_cursor */
extern T0* T383f17(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE].make */
extern T0* T1276c9(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].unset_found_item */
extern void T383f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].make_slots */
extern void T383f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].new_modulus */
extern T6 T383f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].make_clashes */
extern void T383f43(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].make_key_storage */
extern void T383f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].make_item_storage */
extern void T383f41(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.empty_features */
extern T0* T320f24(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.make */
extern T0* T414c13(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_FEATURE].make */
extern T0* T1328f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_FEATURE].make_empty */
extern T0* T1327c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.fixed_array */
extern T0* T414f5(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_FEATURE].default_create */
extern T0* T1328c3(GE_context* ac);
/* ET_CLASS.hash_code */
extern T6 T95f165(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_predicate_type */
extern T0* T80f62(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.make */
extern T0* T587c52(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_FUNCTION_TYPE.make_type */
extern void T587f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.empty_features */
extern T0* T587f40(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.empty_dynamic_type_sets */
extern T0* T80f63(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.make */
extern T0* T373c14(GE_context* ac);
/* ET_DYNAMIC_SYSTEM.new_function_type */
extern T0* T80f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.new_procedure_type */
extern T0* T80f60(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.make */
extern T0* T586c52(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.make_type */
extern void T586f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.empty_features */
extern T0* T586f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_type_type */
extern T0* T80f59(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_class */
extern T1 T95f90(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_tuple_type */
extern T0* T80f58(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.make */
extern T0* T412c50(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.make_type */
extern void T412f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.empty_features */
extern T0* T412f41(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_special_type */
extern T0* T80f57(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.make */
extern T0* T434c50(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.make_type */
extern void T434f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.empty_features */
extern T0* T434f40(GE_context* ac, T0* C);
/* ET_CLASS.is_tuple_class */
extern T1 T95f76(GE_context* ac, T0* C);
/* ET_CLASS.is_generic */
extern T1 T95f164(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.tokens */
extern T0* T332f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.empty_dynamic_type_sets */
extern T0* T332f17(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.make */
extern T0* T592c78(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.empty_clients */
extern T0* T94f186(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.make */
extern T0* T700c12(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_ITEM].make */
extern T0* T1818f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CLIENT_ITEM].make_empty */
extern T0* T1817c4(GE_context* ac, T6 a1);
/* ET_CLIENT_LIST.fixed_array */
extern T0* T700f3(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_ITEM].default_create */
extern T0* T1818c2(GE_context* ac);
/* ET_TOKEN_CONSTANTS.end_keyword */
extern T0* T94f92(GE_context* ac, T0* C);
/* ET_KEYWORD.make_end */
extern T0* T539c40(GE_context* ac);
/* ET_KEYWORD.make_token */
extern void T539f37(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_leaf */
extern void T539f38(GE_context* ac, T0* C);
/* ET_KEYWORD.tokens */
extern T0* T539f10(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.tokens */
extern T0* T592f59(GE_context* ac, T0* C);
/* ET_IDENTIFIER.make */
extern T0* T232c111(GE_context* ac, T0* a1);
/* ET_IDENTIFIER.make_with_hash_code */
extern void T232f121(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_with_hash_code */
extern T0* T232c121(GE_context* ac, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_leaf */
extern void T232f122(GE_context* ac, T0* C);
/* ET_IDENTIFIER.new_hash_code */
extern T6 T232f10(GE_context* ac, T0* C, T0* a1);
/* CHARACTER_8.upper */
extern T2 T2f22(GE_context* ac, T2* C);
/* CHARACTER_8.is_lower */
extern T1 T2f25(GE_context* ac, T2* C);
/* ET_C_GENERATOR.close_cpp_file */
extern void T84f541(GE_context* ac, T0* C);
/* ET_C_GENERATOR.close_c_file */
extern void T84f540(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.delete_file */
extern void T147f33(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.delete */
extern void T33f76(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_delete */
extern void T33f79(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_unlink */
extern void T33f81(GE_context* ac, T0* C, T14 a1);
/* KL_WINDOWS_FILE_SYSTEM.delete_file */
extern void T146f36(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_file */
extern void T84f539(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.rename_file */
extern void T147f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_TEXT_INPUT_FILE.change_name */
extern void T33f75(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.old_change_name */
extern void T33f78(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.rename_file */
extern void T33f80(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.set_name */
extern void T33f72(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.file_rename */
extern void T33f82(GE_context* ac, T0* C, T14 a1, T14 a2);
/* KL_TEXT_INPUT_FILE.same_physical_file */
extern T1 T33f35(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.canonical_pathname */
extern T0* T147f4(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname_to_string */
extern T0* T147f18(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.item */
extern T0* T603f8(GE_context* ac, T0* C, T6 a1);
/* [attached] ARRAY [detachable STRING_8].item */
extern T0* T1772f4(GE_context* ac, T0* C, T6 a1);
/* KL_PATHNAME.is_parent */
extern T1 T603f7(GE_context* ac, T0* C, T6 a1);
/* KL_PATHNAME.is_current */
extern T1 T603f11(GE_context* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.root_directory */
extern T0* T147f15(GE_context* ac, T0* C);
/* KL_PATHNAME.set_canonical */
extern void T603f21(GE_context* ac, T0* C);
/* KL_PATHNAME.append_current */
extern void T603f23(GE_context* ac, T0* C);
/* KL_PATHNAME.append_name */
extern void T603f28(GE_context* ac, T0* C, T0* a1);
/* [attached] ARRAY [detachable STRING_8].force */
extern void T1772f11(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable STRING_8].move_data */
extern void T620f10(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable STRING_8].overlapping_move */
extern void T620f12(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable STRING_8].force */
extern void T620f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable STRING_8].non_overlapping_move */
extern void T620f11(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] ARRAY [detachable STRING_8].capacity */
extern T6 T1772f7(GE_context* ac, T0* C);
/* [attached] ARRAY [detachable STRING_8].set_area */
extern void T1772f14(GE_context* ac, T0* C, T0* a1);
/* [attached] SPECIAL [detachable STRING_8].aliased_resized_area */
extern T0* T620f4(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable STRING_8].fill_with */
extern void T620f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable STRING_8].extend */
extern void T620f9(GE_context* ac, T0* C, T0* a1);
/* [attached] ARRAY [detachable STRING_8].make_empty_area */
extern void T1772f13(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable STRING_8].make_empty */
extern void T620f5(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable STRING_8].make_empty */
extern T0* T620c5(GE_context* ac, T6 a1);
/* [attached] ARRAY [detachable STRING_8].additional_space */
extern T6 T1772f6(GE_context* ac, T0* C);
/* [attached] ARRAY [detachable STRING_8].empty_area */
extern T1 T1772f5(GE_context* ac, T0* C);
/* [attached] ARRAY [detachable STRING_8].put */
extern void T1772f10(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.string_to_pathname */
extern T0* T147f19(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.append_parent */
extern void T603f24(GE_context* ac, T0* C);
/* KL_PATHNAME.set_relative */
extern void T603f22(GE_context* ac, T0* C, T1 a1);
/* KL_PATHNAME.make */
extern T0* T603c20(GE_context* ac);
/* [attached] ARRAY [detachable STRING_8].make_filled */
extern T0* T1772c9(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [attached] ARRAY [detachable STRING_8].make_filled_area */
extern void T1772f12(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable STRING_8].make_filled */
extern T0* T620c8(GE_context* ac, T0* a1, T6 a2);
/* KL_WINDOWS_FILE_SYSTEM.canonical_pathname */
extern T0* T146f4(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.pathname_to_string */
extern T0* T146f21(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.root_directory */
extern T0* T146f17(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.string_to_pathname */
extern T0* T146f20(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_drive */
extern void T603f27(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_sharename */
extern void T603f26(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_hostname */
extern void T603f25(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.file_system */
extern T0* T33f43(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.unix_file_system */
extern T0* T33f53(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.windows_file_system */
extern T0* T33f52(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.operating_system */
extern T0* T33f51(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.time_stamp */
extern T6 T33f42(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.date */
extern T6 T33f50(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.eif_file_date */
extern T6 T33f56(GE_context* ac, T0* C, T14 a1);
/* KL_TEXT_INPUT_FILE.count */
extern T6 T33f41(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_count */
extern T6 T33f49(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_size */
extern T6 T33f55(GE_context* ac, T0* C, T14 a1);
/* FILE_INFO.size */
extern T6 T157f17(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_write */
extern T1 T33f54(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.inode */
extern T6 T33f40(GE_context* ac, T0* C);
/* FILE_INFO.inode */
extern T6 T157f16(GE_context* ac, T0* C);
/* UC_UTF8_STRING.same_string */
extern T1 T1557f54(GE_context* ac, T0* C, T0* a1);
/* STRING_8.same_string */
extern T1 T17f14(GE_context* ac, T0* C, T0* a1);
/* STRING_8.same_characters */
extern T1 T17f20(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_TEXT_INPUT_FILE.tmp_file1 */
extern T0* T33f39(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.rename_file */
extern void T146f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].wipe_out */
extern void T405f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T405f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T405f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T405f41(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE].keep_head */
extern void T833f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE].set_count */
extern void T833f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T405f40(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_DYNAMIC_FEATURE].keep_head */
extern void T1322f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_DYNAMIC_FEATURE].set_count */
extern void T1322f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].unset_found_item */
extern void T405f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T405f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].set_next_cursor */
extern void T1325f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].set_after */
extern void T1325f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].wipe_out */
extern void T404f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].slots_wipe_out */
extern void T404f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].clashes_wipe_out */
extern void T404f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].key_storage_wipe_out */
extern void T404f47(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_INLINE_CONSTANT].keep_head */
extern void T1318f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_INLINE_CONSTANT].set_count */
extern void T1318f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].item_storage_wipe_out */
extern void T404f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].unset_found_item */
extern void T404f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].move_all_cursors_after */
extern void T404f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].set_next_cursor */
extern void T1317f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].set_after */
extern void T1317f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].wipe_out */
extern void T403f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].slots_wipe_out */
extern void T403f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].clashes_wipe_out */
extern void T403f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].key_storage_wipe_out */
extern void T403f48(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_FEATURE].keep_head */
extern void T1310f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_FEATURE].set_count */
extern void T1310f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].item_storage_wipe_out */
extern void T403f47(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_CONSTANT].keep_head */
extern void T1313f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CONSTANT].set_count */
extern void T1313f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].unset_found_item */
extern void T403f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].move_all_cursors_after */
extern void T403f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE].set_next_cursor */
extern void T1312f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE].set_after */
extern void T1312f9(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] INTEGER_32].fill_with */
extern void T402f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].wipe_out */
extern void T401f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].slots_wipe_out */
extern void T401f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].clashes_wipe_out */
extern void T401f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].key_storage_wipe_out */
extern void T401f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].item_storage_wipe_out */
extern void T401f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].unset_found_item */
extern void T401f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].move_all_cursors_after */
extern void T401f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FEATURE].set_next_cursor */
extern void T1309f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FEATURE].set_after */
extern void T1309f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].wipe_out */
extern void T407f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].slots_wipe_out */
extern void T407f58(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].clashes_wipe_out */
extern void T407f57(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].key_storage_wipe_out */
extern void T407f56(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].item_storage_wipe_out */
extern void T407f55(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].unset_found_item */
extern void T407f54(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].move_all_cursors_after */
extern void T407f53(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8].set_next_cursor */
extern void T1331f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8].set_after */
extern void T1331f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].wipe_out */
extern void T109f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].slots_wipe_out */
extern void T109f65(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].clashes_wipe_out */
extern void T109f64(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].key_storage_wipe_out */
extern void T109f63(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].item_storage_wipe_out */
extern void T109f62(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].unset_found_item */
extern void T109f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].move_all_cursors_after */
extern void T109f61(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8].set_next_cursor */
extern void T544f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8].set_after */
extern void T544f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].forth */
extern void T407f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].cursor_forth */
extern void T407f52(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].add_traversing_cursor */
extern void T407f66(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8].set_position */
extern void T1331f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].remove_traversing_cursor */
extern void T407f65(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].clashes_item */
extern T6 T407f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].key_for_iteration */
extern T0* T407f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].cursor_key */
extern T0* T407f41(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].key_storage_item */
extern T0* T407f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].item_for_iteration */
extern T1 T407f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].cursor_item */
extern T1 T407f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].item_storage_item */
extern T1 T407f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].after */
extern T1 T407f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].cursor_after */
extern T1 T407f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8].after */
extern T1 T1331f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].start */
extern void T407f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].cursor_start */
extern void T407f51(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].cursor_off */
extern T1 T407f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8].off */
extern T1 T1331f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].is_empty */
extern T1 T407f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].forth */
extern void T109f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].cursor_forth */
extern void T109f66(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].add_traversing_cursor */
extern void T109f72(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8].set_position */
extern void T544f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].remove_traversing_cursor */
extern void T109f71(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].clashes_item */
extern T6 T109f20(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.include_runtime_file */
extern void T84f538(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] STRING_8].item_for_iteration */
extern T0* T109f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].cursor_item */
extern T0* T109f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].item_storage_item */
extern T0* T109f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].after */
extern T1 T109f22(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].cursor_after */
extern T1 T109f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8].after */
extern T1 T544f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].start */
extern void T109f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].cursor_start */
extern void T109f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].cursor_off */
extern T1 T109f34(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8].off */
extern T1 T544f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].is_empty */
extern T1 T109f33(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_end_extern_c */
extern void T84f537(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_main_function */
extern void T84f536(GE_context* ac, T0* C);
/* ET_C_GENERATOR.dedent */
extern void T84f586(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.remove_last */
extern void T373f11(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET].keep_head */
extern void T1259f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET].keep_head */
extern void T1258f8(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET].set_count */
extern void T1258f10(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_creation_expression */
extern void T84f609(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].wipe_out */
extern void T380f13(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_EXPRESSION].keep_head */
extern void T1265f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_EXPRESSION].set_count */
extern void T1265f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].move_all_cursors_after */
extern void T380f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EXPRESSION].set_next_cursor */
extern void T1267f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EXPRESSION].set_after */
extern void T1267f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attachment_expression */
extern void T84f644(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_boxed_attribute_item_access */
extern void T84f614(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_void_expression */
extern void T84f622(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_expression */
extern void T84f621(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_item_name */
extern void T84f604(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_expression */
extern void T84f666(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_cast */
extern void T84f659(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_name */
extern void T84f603(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].wipe_out */
extern void T368f17(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].move_all_cursors_after */
extern void T368f24(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] INTEGER_32].set_next_cursor */
extern void T1255f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] INTEGER_32].set_after */
extern void T1255f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].force_last_new */
extern void T57f78(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].item */
extern T6 T368f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].sort */
extern void T368f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_QUICK_SORTER [[attached] INTEGER_32].sort */
extern void T464f3(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_QUICK_SORTER [[attached] INTEGER_32].sort_with_comparator */
extern void T464f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_QUICK_SORTER [[attached] INTEGER_32].subsort_with_comparator */
extern void T464f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [attached] ARRAY [[attached] INTEGER_32].force */
extern void T402f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] ARRAY [[attached] INTEGER_32].capacity */
extern T6 T402f7(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] INTEGER_32].set_area */
extern void T402f16(GE_context* ac, T0* C, T0* a1);
/* [attached] ARRAY [[attached] INTEGER_32].make_empty_area */
extern void T402f15(GE_context* ac, T0* C, T6 a1);
/* [attached] ARRAY [[attached] INTEGER_32].additional_space */
extern T6 T402f6(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] INTEGER_32].empty_area */
extern T1 T402f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].swap */
extern void T368f26(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].replace */
extern void T368f23(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32].less_than */
extern T1 T589f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32].detachable_less_than */
extern T1 T589f2(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32].attached_less_than */
extern T1 T589f3(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] ARRAY [[attached] INTEGER_32].put */
extern void T402f13(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.dynamic_type_id_sorter */
extern T0* T84f232(GE_context* ac, T0* C);
/* [attached] DS_QUICK_SORTER [[attached] INTEGER_32].make */
extern T0* T464c2(GE_context* ac, T0* a1);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32].make */
extern T0* T589c4(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].is_empty */
extern T1 T368f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].put_last */
extern void T368f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].resize */
extern void T368f21(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.argument_type_set_in_feature */
extern T0* T84f257(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].item */
extern T0* T380f6(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_creation_procedure_name */
extern void T84f658(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_type_name */
extern void T84f605(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.new_temp_variable */
extern T0* T84f136(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].force_last */
extern void T368f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].new_capacity */
extern T6 T368f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].extendible */
extern T1 T368f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_DYNAMIC_TYPE].force_last */
extern void T376f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_TYPE].force */
extern void T1262f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_DYNAMIC_TYPE].fill_with */
extern void T1261f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_DYNAMIC_TYPE].extend */
extern void T1261f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_DYNAMIC_TYPE].resize */
extern void T376f16(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T1262f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T1261f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_DYNAMIC_TYPE].new_capacity */
extern T6 T376f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_DYNAMIC_TYPE].extendible */
extern T1 T376f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].force_last */
extern void T375f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER].force */
extern void T282f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_IDENTIFIER].fill_with */
extern void T281f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_IDENTIFIER].extend */
extern void T281f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].resize */
extern void T375f12(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER].aliased_resized_area */
extern T0* T282f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_IDENTIFIER].aliased_resized_area */
extern T0* T281f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].new_capacity */
extern T6 T375f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].extendible */
extern T1 T375f7(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_temporary */
extern void T232f118(GE_context* ac, T0* C, T1 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].item */
extern T0* T375f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_DYNAMIC_TYPE].replace */
extern void T376f11(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.same_declaration_types */
extern T1 T84f439(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST [detachable ET_DYNAMIC_TYPE].item */
extern T0* T376f9(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_writable */
extern void T84f657(GE_context* ac, T0* C, T0* a1);
extern T1 T84f657ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_attribute_access */
extern void T84f584(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_name */
extern void T84f606(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_type_cast */
extern void T84f580(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.current_keyword */
extern T0* T94f27(GE_context* ac, T0* C);
/* ET_CURRENT.make */
extern T0* T390c32(GE_context* ac);
/* ET_CURRENT.make_token */
extern void T390f34(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.make_leaf */
extern void T390f35(GE_context* ac, T0* C);
/* ET_CURRENT.tokens */
extern T0* T390f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.tokens */
extern T0* T84f275(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].remove */
extern void T273f43(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].remove_position */
extern void T273f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].key_storage_put */
extern void T273f73(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].item_storage_put */
extern void T273f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].key_storage_keep_head */
extern void T273f72(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].item_storage_keep_head */
extern void T273f71(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_IDENTIFIER].keep_head */
extern void T281f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_IDENTIFIER].set_count */
extern void T281f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].clashes_put */
extern void T273f60(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].slots_put */
extern void T273f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].clashes_item */
extern T6 T273f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].move_cursors_forth */
extern void T273f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER].set_position */
extern void T816f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER].set_next_cursor */
extern void T816f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER].set_after */
extern void T816f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].internal_set_key_equality_tester */
extern void T273f69(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].key_equality_tester */
extern T0* T273f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].slots_item */
extern T6 T273f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].hash_position */
extern T6 T273f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].key_storage_item */
extern T0* T273f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].item_storage_item */
extern T0* T273f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].search_position */
extern void T273f44(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TESTER.test */
extern T1 T408f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.same_identifier */
extern T1 T232f24(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.same_case_insensitive */
extern T1 T38f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* CHARACTER_8.lower */
extern T2 T2f21(GE_context* ac, T2* C);
/* UC_UNICODE_ROUTINES.lower_code */
extern T6 T1419f1(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_codes */
extern T0* T1419f2(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_plane */
extern T0* T1419f5(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]].make_filled */
extern T0* T2203c4(GE_context* ac, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]].fill_with */
extern void T2203f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]].extend */
extern void T2203f8(GE_context* ac, T0* C, T0* a1);
/* [attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]].make_empty */
extern void T2203f6(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.empty_lower_code_segment */
extern T0* T1419f12(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.to_integer */
extern T6 T313f4(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.integer_ */
extern T0* T1419f23(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1 */
extern T0* T1419f4(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1_segment_4 */
extern T0* T1419f22(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]].make_filled */
extern T0* T2204c4(GE_context* ac, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]].fill_with */
extern void T2204f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]].extend */
extern void T2204f8(GE_context* ac, T0* C, T0* a1);
/* [attached] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]].make_empty */
extern void T2204f6(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_code_plane_0 */
extern T0* T1419f3(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_255 */
extern T0* T1419f21(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_167 */
extern T0* T1419f20(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_166 */
extern T0* T1419f19(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_44 */
extern T0* T1419f18(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_36 */
extern T0* T1419f17(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_33 */
extern T0* T1419f16(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_31 */
extern T0* T1419f15(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_30 */
extern T0* T1419f14(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_16 */
extern T0* T1419f13(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_5 */
extern T0* T1419f11(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_4 */
extern T0* T1419f10(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_3 */
extern T0* T1419f9(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_2 */
extern T0* T1419f8(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_1 */
extern T0* T1419f7(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_0 */
extern T0* T1419f6(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.unicode */
extern T0* T38f14(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.default_create */
extern T0* T1419c52(GE_context* ac);
/* ET_IDENTIFIER.string_ */
extern T0* T232f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].unset_found_item */
extern void T273f49(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_local_variable */
extern void T84f673(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_local_name */
extern void T84f678(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].has */
extern T1 T273f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].force_last */
extern void T273f42(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].resize */
extern void T273f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].clashes_resize */
extern void T273f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].special_integer_ */
extern T0* T273f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].key_storage_resize */
extern void T273f67(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].item_storage_resize */
extern void T273f66(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].slots_resize */
extern void T273f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].new_modulus */
extern T6 T273f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].new_capacity */
extern T6 T273f19(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_across_cursor */
extern void T84f672(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_cursor_name */
extern void T84f677(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_temporary_variable */
extern void T84f671(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_temporary */
extern T1 T232f29(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_formal_argument */
extern void T84f670(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_argument_name */
extern void T84f629(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].force */
extern void T379f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION].force */
extern void T1266f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_EXPRESSION].fill_with */
extern void T1265f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_EXPRESSION].extend */
extern void T1265f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].resize */
extern void T379f11(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION].aliased_resized_area */
extern T0* T1266f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_EXPRESSION].aliased_resized_area */
extern T0* T1265f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].new_capacity */
extern T6 T379f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].extendible */
extern T1 T379f6(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.fill_call_operands */
extern void T84f656(GE_context* ac, T0* C, T6 a1);
extern T1 T84f656ot1(T0* a1, T0** a2);
/* [attached] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].prune */
extern void T379f10(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.mark_temp_variable_free */
extern void T84f585(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.is_temp_variable_frozen */
extern T1 T84f277(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].i_th */
extern T0* T379f5(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].put_last */
extern void T380f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].resize */
extern void T380f16(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_operand */
extern void T84f655(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.arguments */
extern T0* T444f6(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.name */
extern T0* T444f10(GE_context* ac, T0* C);
/* ET_C_GENERATOR.dynamic_type_set */
extern T0* T84f245(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.item */
extern T0* T382f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.valid_index */
extern T1 T382f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.valid_index */
extern T1 T373f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.force_last */
extern void T373f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.resize */
extern void T373f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T1259f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T1258f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.new_capacity */
extern T6 T373f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.capacity */
extern T6 T373f6(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.make */
extern T0* T444c28(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.create_keyword */
extern T0* T94f244(GE_context* ac, T0* C);
/* ET_KEYWORD.make_create */
extern T0* T539c42(GE_context* ac);
/* ET_CREATE_EXPRESSION.tokens */
extern T0* T444f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.make */
extern T0* T445c5(GE_context* ac, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_show_console_call */
extern void T84f608(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] INTEGER_32].item */
extern T6 T402f4(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_routine_name */
extern void T84f601(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T84f601ot1(T0* a1, T0** a2);
/* ET_CLASS.upper_name */
extern T0* T95f150(GE_context* ac, T0* C);
/* ET_IDENTIFIER.upper_name */
extern T0* T232f22(GE_context* ac, T0* C);
/* UC_UTF8_STRING.as_upper */
extern T0* T1557f27(GE_context* ac, T0* C);
/* UC_UTF8_STRING.to_upper */
extern void T1557f85(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code */
extern T6 T1419f29(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.upper_codes */
extern T0* T1419f30(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_plane */
extern T0* T1419f33(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_segment */
extern T0* T1419f40(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1 */
extern T0* T1419f32(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1_segment_4 */
extern T0* T1419f51(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0 */
extern T0* T1419f31(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_255 */
extern T0* T1419f50(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_167 */
extern T0* T1419f49(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_166 */
extern T0* T1419f48(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_45 */
extern T0* T1419f47(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_44 */
extern T0* T1419f46(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_36 */
extern T0* T1419f45(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_33 */
extern T0* T1419f44(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_31 */
extern T0* T1419f43(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_30 */
extern T0* T1419f42(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_29 */
extern T0* T1419f41(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_5 */
extern T0* T1419f39(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_4 */
extern T0* T1419f38(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_3 */
extern T0* T1419f37(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_2 */
extern T0* T1419f36(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_1 */
extern T0* T1419f35(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_0 */
extern T0* T1419f34(GE_context* ac, T0* C);
/* UC_UTF8_STRING.unicode */
extern T0* T1557f57(GE_context* ac, T0* C);
/* STRING_8.as_upper */
extern T0* T17f31(GE_context* ac, T0* C);
/* STRING_8.to_upper */
extern void T17f70(GE_context* ac, T0* C);
/* STRING_8.to_upper_area */
extern void T17f73(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_escaped_string */
extern void T84f602(GE_context* ac, T0* C, T0* a1);
/* UT_INTEGER_FORMATTER.put_octal_integer */
extern void T480f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.integer_formatter_ */
extern T0* T84f262(GE_context* ac, T0* C);
/* UT_INTEGER_FORMATTER.default_create */
extern T0* T480c1(GE_context* ac);
/* ET_C_GENERATOR.print_temp_name */
extern void T84f579(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.temp_variable */
extern T0* T84f146(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_type_declaration */
extern void T84f575(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_eif_any_type_name */
extern void T84f547(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_indentation */
extern void T84f577(GE_context* ac, T0* C);
/* ET_C_GENERATOR.indent */
extern void T84f576(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_types_array */
extern void T84f535(GE_context* ac, T0* C);
extern T1 T84f535ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_SYSTEM.is_new_instance_type */
extern T1 T80f68(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].has */
extern T1 T109f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].search_position */
extern void T109f48(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].hash_position */
extern T6 T109f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].key_storage_item */
extern T0* T109f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].key_equality_tester */
extern T0* T109f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].slots_item */
extern T6 T109f21(GE_context* ac, T0* C, T6 a1);
/* STRING_8.replace_substring_all */
extern void T17f78(GE_context* ac, T0* C, T0* a1, T0* a2);
/* SPECIAL [CHARACTER_8].resized_area_with_default */
extern T0* T15f8(GE_context* ac, T0* C, T2 a1, T6 a2);
/* attached ARRAYED_LIST [[attached] INTEGER_32].area */
extern T0* T1982f3(GE_context* ac, T0* C);
/* STRING_8_SEARCHER.substring_index_list_with_deltas */
extern T0* T1980f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* attached ARRAYED_LIST [[attached] INTEGER_32].extend */
extern void T1982f9(GE_context* ac, T0* C, T6 a1);
/* attached ARRAYED_LIST [[attached] INTEGER_32].additional_space */
extern T6 T1982f5(GE_context* ac, T0* C);
/* attached ARRAYED_LIST [[attached] INTEGER_32].capacity */
extern T6 T1982f6(GE_context* ac, T0* C);
/* attached ARRAYED_LIST [[attached] INTEGER_32].count */
extern T6 T1982f4(GE_context* ac, T0* C);
/* attached ARRAYED_LIST [[attached] INTEGER_32].make */
extern T0* T1982c8(GE_context* ac, T6 a1);
/* STRING_8_SEARCHER.initialize_deltas */
extern void T1980f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_deferred */
extern T1 T95f115(GE_context* ac, T0* C);
/* ET_CLASS.has_deferred_mark */
extern T1 T95f114(GE_context* ac, T0* C);
/* ET_KEYWORD.is_deferred */
extern T1 T539f32(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_special_item_name */
extern void T84f607(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.item_feature_name */
extern T0* T94f29(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].wipe_out */
extern void T315f12(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T315f17(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_TYPE].set_next_cursor */
extern void T835f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_TYPE].set_after */
extern void T835f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].sort */
extern void T315f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_QUICK_SORTER [[attached] ET_DYNAMIC_TYPE].sort */
extern void T438f3(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_QUICK_SORTER [[attached] ET_DYNAMIC_TYPE].sort_with_comparator */
extern void T438f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_QUICK_SORTER [[attached] ET_DYNAMIC_TYPE].subsort_with_comparator */
extern void T438f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].swap */
extern void T315f22(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].replace */
extern void T315f21(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TYPE_COMPARATOR_BY_ID.less_than */
extern T1 T439f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].is_empty */
extern T1 T315f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].append_last */
extern void T315f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].extend_last */
extern void T315f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE].forth */
extern void T1276f14(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].cursor_forth */
extern void T383f48(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T383f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE].set_next_cursor */
extern void T1276f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE].set_position */
extern void T1276f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T383f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE].set_after */
extern void T1276f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].clashes_item */
extern T6 T383f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE].item */
extern T0* T1276f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].cursor_item */
extern T0* T383f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T383f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE].after */
extern T1 T1276f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE].start */
extern void T1276f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].cursor_start */
extern void T383f47(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].cursor_off */
extern T1 T383f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE].off */
extern T1 T1276f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].is_empty */
extern T1 T383f20(GE_context* ac, T0* C);
/* [attached] DS_QUICK_SORTER [[attached] ET_DYNAMIC_TYPE].make */
extern T0* T438c2(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.dynamic_type_comparator */
extern T0* T84f154(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_COMPARATOR_BY_ID.make */
extern T0* T439c2(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].make */
extern T0* T315c11(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T315f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].new_cursor */
extern T0* T315f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_TYPE].make */
extern T0* T835c5(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].found_item */
extern T0* T405f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T405f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].found */
extern T1 T405f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].search */
extern void T405f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].search_position */
extern void T405f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].hash_position */
extern T6 T405f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T405f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].clashes_item */
extern T6 T405f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].slots_item */
extern T6 T405f21(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_dynamic_type_id_set_constants */
extern void T84f534(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].forth */
extern void T57f76(GE_context* ac, T0* C);
/* UC_UTF8_STRING.occurrences */
extern T6 T1557f10(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.code_occurrences */
extern T6 T1557f41(GE_context* ac, T0* C, T6 a1);
/* STRING_8.occurrences */
extern T6 T17f29(GE_context* ac, T0* C, T2 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].key_for_iteration */
extern T0* T57f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item_for_iteration */
extern T0* T57f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].after */
extern T1 T57f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_after */
extern T1 T57f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].start */
extern void T57f75(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_init_const_function */
extern void T84f533(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].forth */
extern void T404f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].cursor_forth */
extern void T404f51(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].add_traversing_cursor */
extern void T404f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].set_position */
extern void T1317f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].remove_traversing_cursor */
extern void T404f53(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].clashes_item */
extern T6 T404f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].item_for_iteration */
extern T0* T404f20(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].cursor_item */
extern T0* T404f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].item_storage_item */
extern T0* T404f36(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.constant */
extern T0* T2160f16(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_inline_constant_name */
extern void T84f599(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].key_for_iteration */
extern T0* T404f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].cursor_key */
extern T0* T404f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].key_storage_item */
extern T0* T404f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].after */
extern T1 T404f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].cursor_after */
extern T1 T404f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].after */
extern T1 T1317f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].start */
extern void T404f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].cursor_start */
extern void T404f50(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].cursor_off */
extern T1 T404f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].off */
extern T1 T1317f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].is_empty */
extern T1 T404f23(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].forth */
extern void T403f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].cursor_forth */
extern void T403f52(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].add_traversing_cursor */
extern void T403f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE].set_position */
extern void T1312f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].remove_traversing_cursor */
extern void T403f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].clashes_item */
extern T6 T403f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].item_for_iteration */
extern T0* T403f23(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].cursor_item */
extern T0* T403f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].item_storage_item */
extern T0* T403f20(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_once_value_name */
extern void T84f598(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_once_status_name */
extern void T84f600(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].has */
extern T1 T401f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].search_position */
extern void T401f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].hash_position */
extern T6 T401f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].key_storage_item */
extern T0* T401f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].clashes_item */
extern T6 T401f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].slots_item */
extern T6 T401f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].key_for_iteration */
extern T0* T403f22(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].cursor_key */
extern T0* T403f27(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].key_storage_item */
extern T0* T403f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].after */
extern T1 T403f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].cursor_after */
extern T1 T403f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE].after */
extern T1 T1312f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].start */
extern void T403f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].cursor_start */
extern void T403f51(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].cursor_off */
extern T1 T403f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE].off */
extern T1 T1312f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].is_empty */
extern T1 T403f28(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_constants_declaration */
extern void T84f532(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_functions */
extern void T84f531(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].wipe_out */
extern void T384f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T384f53(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T384f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T384f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T384f50(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].keep_head */
extern void T1274f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].set_count */
extern void T1274f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].unset_found_item */
extern void T384f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T384f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].set_next_cursor */
extern void T1279f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].set_after */
extern void T1279f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].forth */
extern void T384f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_forth */
extern void T384f47(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T384f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].set_position */
extern void T1279f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T384f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].clashes_item */
extern T6 T384f24(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_deep_twin_polymorphic_call_function */
extern void T84f597(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_entity_value */
extern void T84f634(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_default_name */
extern void T84f581(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].wipe_out */
extern void T381f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].slots_wipe_out */
extern void T381f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].clashes_wipe_out */
extern void T381f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].key_storage_wipe_out */
extern void T381f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].item_storage_wipe_out */
extern void T381f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].unset_found_item */
extern void T381f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].move_all_cursors_after */
extern void T381f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].set_next_cursor */
extern void T1273f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].set_after */
extern void T1273f7(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_binary_search_polymorphic_call */
extern void T84f654(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_adapted_deep_twin_call */
extern void T84f653(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_deep_twin_call */
extern T0* T84f653ac1(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [attached] PROCEDURE [[attached] TUPLE].set_rout_disp_final */
extern void T475f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_C_GENERATOR.print_deep_twin_call */
extern void T84f669(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_target_expression */
extern void T84f648(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_adapted_expression */
extern void T84f661(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].item */
extern T0* T381f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].item_storage_item */
extern T0* T381f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].search_position */
extern void T381f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].hash_position */
extern T6 T381f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].key_storage_item */
extern T6 T381f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].clashes_item */
extern T6 T381f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].slots_item */
extern T6 T381f21(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_attribute_type_id_access */
extern void T84f630(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_type_id_name */
extern void T84f616(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].force_last */
extern void T381f36(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].key_storage_put */
extern void T381f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].slots_put */
extern void T381f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].clashes_put */
extern void T381f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].resize */
extern void T381f40(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].clashes_resize */
extern void T381f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].special_integer_ */
extern T0* T381f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].key_storage_resize */
extern void T381f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].item_storage_resize */
extern void T381f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].slots_resize */
extern void T381f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].new_modulus */
extern T6 T381f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].new_capacity */
extern T6 T381f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].item_storage_put */
extern void T381f43(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.print_current_name */
extern void T84f628(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T384f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_item */
extern T0* T384f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T384f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].after */
extern T1 T384f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_after */
extern T1 T384f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].after */
extern T1 T1279f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].start */
extern void T384f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_start */
extern void T384f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_off */
extern T1 T384f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].off */
extern T1 T1279f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].is_empty */
extern T1 T384f22(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_function */
extern void T84f596(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T84f596ac1(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #2 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T84f596ac2(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #3 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T84f596ac3(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #4 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T84f596ac4(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #5 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T84f596ac5(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #6 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T84f596ac6(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #7 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T84f596ac7(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #8 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T84f596ac8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #9 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T84f596ac9(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #10 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T84f596ac10(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #11 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T84f596ac11(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #12 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T84f596ac12(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T84f596ot1(T0* a1, T0** a2);
extern T1 T84f596ot2(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_attribute_tuple_item_access */
extern void T84f595(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_tuple_item_name */
extern void T84f619(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_special_indexed_item_access */
extern void T84f651(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.reset_temp_variables */
extern void T84f587(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable ET_DYNAMIC_TYPE].wipe_out */
extern void T376f12(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_DYNAMIC_TYPE].keep_head */
extern void T1261f7(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_DYNAMIC_TYPE].set_count */
extern void T1261f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T376f15(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_TYPE].set_next_cursor */
extern void T1263f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_TYPE].set_after */
extern void T1263f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_set_deep_twined_attribute */
extern void T84f652(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_deep_twined_attribute */
extern void T84f668(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_types */
extern void T378f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].force_last_new */
extern void T384f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].key_storage_put */
extern void T384f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].item_storage_put */
extern void T384f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].force */
extern void T1275f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].fill_with */
extern void T1274f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].extend */
extern void T1274f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].slots_put */
extern void T384f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].clashes_put */
extern void T384f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].slots_item */
extern T6 T384f38(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].hash_position */
extern T6 T384f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].resize */
extern void T384f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].clashes_resize */
extern void T384f66(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T384f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].key_storage_resize */
extern void T384f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].item_storage_resize */
extern void T384f64(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T1275f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T1274f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T384f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].slots_resize */
extern void T384f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].new_modulus */
extern T6 T384f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].new_capacity */
extern T6 T384f34(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.force_last */
extern void T382f11(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.fixed_array */
extern T0* T382f5(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].default_create */
extern T0* T1275c3(GE_context* ac);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.resize */
extern void T382f9(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.new_capacity */
extern T6 T382f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.capacity */
extern T6 T382f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make */
extern T0* T378c18(GE_context* ac, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset */
extern void T378f16(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.wipe_out */
extern void T377f20(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE].keep_head */
extern void T834f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].found_item */
extern T0* T384f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].found */
extern T1 T384f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].search */
extern void T384f43(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].search_position */
extern void T384f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].force_last */
extern void T383f40(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].slots_put */
extern void T383f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].clashes_put */
extern void T383f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].slots_item */
extern T6 T383f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].hash_position */
extern T6 T383f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].resize */
extern void T383f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].clashes_resize */
extern void T383f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T383f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].key_storage_resize */
extern void T383f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].item_storage_resize */
extern void T383f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T383f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].slots_resize */
extern void T383f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].new_capacity */
extern T6 T383f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].item_storage_put */
extern void T383f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].search_position */
extern void T383f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].key_equality_tester */
extern T0* T383f30(GE_context* ac, T0* C);
/* ET_C_GENERATOR.result_type_set_in_feature */
extern T0* T84f238(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_special_count_access */
extern void T84f583(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_count_name */
extern void T84f624(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.first */
extern T0* T414f4(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_special_item_access */
extern void T84f594(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_TOKEN_CONSTANTS.result_keyword */
extern T0* T94f28(GE_context* ac, T0* C);
/* ET_RESULT.make */
extern T0* T422c31(GE_context* ac);
/* ET_RESULT.make_token */
extern void T422f33(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT.make_leaf */
extern void T422f34(GE_context* ac, T0* C);
/* ET_RESULT.tokens */
extern T0* T422f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_special_capacity_access */
extern void T84f582(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_capacity_name */
extern void T84f623(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_result_name */
extern void T84f578(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].wipe_out */
extern void T400f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].slots_wipe_out */
extern void T400f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].clashes_wipe_out */
extern void T400f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].key_storage_wipe_out */
extern void T400f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].item_storage_wipe_out */
extern void T400f48(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE].keep_head */
extern void T1303f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE].set_count */
extern void T1303f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].unset_found_item */
extern void T400f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].move_all_cursors_after */
extern void T400f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE].set_next_cursor */
extern void T1302f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE].set_after */
extern void T1302f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].forth */
extern void T400f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].cursor_forth */
extern void T400f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].add_traversing_cursor */
extern void T400f53(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE].set_position */
extern void T1302f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].remove_traversing_cursor */
extern void T400f52(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].clashes_item */
extern T6 T400f23(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_manifest_tuple_function */
extern void T84f530(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].item_for_iteration */
extern T0* T400f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].cursor_item */
extern T0* T400f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].item_storage_item */
extern T0* T400f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T400f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].cursor_after */
extern T1 T400f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T1302f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].start */
extern void T400f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].cursor_start */
extern void T400f45(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].cursor_off */
extern T1 T400f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE].off */
extern T1 T1302f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].is_empty */
extern T1 T400f21(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_big_manifest_array_function */
extern void T84f529(GE_context* ac, T0* C, T0* a1);
extern T1 T84f529ot1(T0* a1, T0** a2);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].wipe_out */
extern void T383f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T383f53(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T383f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T383f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T383f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T383f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].forth */
extern void T383f38(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_manifest_array_function */
extern void T84f528(GE_context* ac, T0* C, T0* a1);
extern T1 T84f528ot1(T0* a1, T0** a2);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T383f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].after */
extern T1 T383f22(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].cursor_after */
extern T1 T383f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].start */
extern void T383f37(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_tuple_label_call_functions */
extern void T84f527(GE_context* ac, T0* C);
extern T1 T84f527ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_polymorphic_call_function */
extern void T84f588(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T84f588ot1(T0* a1, T0** a2);
extern T1 T84f588ot2(T0* a1, T0** a2);
/* ET_MANIFEST_TUPLE.wipe_out */
extern void T399f32(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION_ITEM].keep_head */
extern void T1300f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_EXPRESSION_ITEM].keep_head */
extern void T1298f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_EXPRESSION_ITEM].set_count */
extern void T1298f9(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.fixed_array */
extern T0* T399f6(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION_ITEM].default_create */
extern T0* T1300c3(GE_context* ac);
/* ET_C_GENERATOR.print_binary_search_polymorphic_calls */
extern void T84f635(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T6 a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.print_named_procedure_call */
extern void T84f633(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_procedure_call */
extern void T84f664(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_inlined_procedure_call */
extern void T84f676(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].first */
extern T0* T380f10(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_procedure_call */
extern void T84f675(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_procedure_call */
extern void T84f695(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_set_object_comparison_call */
extern void T84f766(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_adapted_attribute_access */
extern void T84f679(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_boxed_attribute_access */
extern void T84f696(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_builtin_special_procedure_call */
extern void T84f694(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_put_call */
extern void T84f765(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_procedure_call */
extern void T84f693(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_set_item_call */
extern void T84f764(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_unboxed_expression */
extern void T84f647(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_procedure_call */
extern void T84f692(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_fast_call_call */
extern void T84f763(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_call_call */
extern void T84f762(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_routine_call_call */
extern void T84f964(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T84f964ot1(T0* a1, T0** a2);
extern T1 T84f964ot2(T0* a1, T0** a2);
extern T1 T84f964ot3(T0* a1, T0** a2);
extern T1 T84f964ot4(T0* a1, T0** a2);
extern T1 T84f964ot5(T0* a1, T0** a2);
extern T1 T84f964ot6(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_call_operands_unfrozen */
extern void T84f968(GE_context* ac, T0* C);
extern T1 T84f968ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_temp_variable_unfrozen */
extern void T84f970(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.make */
extern T0* T424c12(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_CALL_EXPRESSION.set_target */
extern void T396f27(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.new_agent_tuple_item_expression */
extern T0* T84f433(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].replace */
extern void T398f11(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_QUALIFIED_CALL_EXPRESSION.make */
extern T0* T396c26(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.make_qualified_call */
extern void T396f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_tuple_label */
extern void T232f120(GE_context* ac, T0* C, T1 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].item */
extern T0* T398f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].put_last */
extern void T398f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].force */
extern void T966f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].fill_with */
extern void T967f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].extend */
extern void T967f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].resize */
extern void T398f9(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T966f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T967f4(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.mark_call_operands_frozen */
extern void T84f967(GE_context* ac, T0* C);
extern T1 T84f967ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_temp_variable_frozen */
extern void T84f969(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset_with_types */
extern void T378f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.result_type_set */
extern T0* T586f33(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_typed_default_entity_value */
extern void T84f965(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.is_ise */
extern T1 T81f40(GE_context* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.is_ise */
extern T1 T87f47(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_procedure */
extern T1 T416f25(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_procedure */
extern T1 T332f18(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_pointer_ref_procedure_call */
extern void T84f691(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_set_item_call */
extern void T84f761(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_procedure_call */
extern void T84f690(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_free_call */
extern void T84f760(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_c_call */
extern void T84f963(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T1 a5);
/* ET_C_GENERATOR.print_builtin_ise_runtime_procedure_call */
extern void T84f689(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_unmark_object_call */
extern void T84f759(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_unlock_marking_call */
extern void T84f758(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_reference_field_at_call */
extern void T84f757(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_reference_field_call */
extern void T84f756(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_64_field_at_call */
extern void T84f755(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_64_field_call */
extern void T84f754(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_32_field_at_call */
extern void T84f753(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_32_field_call */
extern void T84f752(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pointer_field_at_call */
extern void T84f751(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pointer_field_call */
extern void T84f750(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_64_field_at_call */
extern void T84f749(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_64_field_call */
extern void T84f748(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_32_field_at_call */
extern void T84f747(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_32_field_call */
extern void T84f746(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_16_field_at_call */
extern void T84f745(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_16_field_call */
extern void T84f744(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_8_field_at_call */
extern void T84f743(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_8_field_call */
extern void T84f742(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_64_field_at_call */
extern void T84f741(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_64_field_call */
extern void T84f740(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_32_field_at_call */
extern void T84f739(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_32_field_call */
extern void T84f738(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_16_field_at_call */
extern void T84f737(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_16_field_call */
extern void T84f736(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_8_field_at_call */
extern void T84f735(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_8_field_call */
extern void T84f734(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_32_field_at_call */
extern void T84f733(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_32_field_call */
extern void T84f732(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_8_field_at_call */
extern void T84f731(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_8_field_call */
extern void T84f730(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_boolean_field_at_call */
extern void T84f729(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_boolean_field_call */
extern void T84f728(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_mark_object_call */
extern void T84f727(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_lock_marking_call */
extern void T84f726(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_exception_manager_procedure_call */
extern void T84f688(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_exception_manager_developer_raise_call */
extern void T84f725(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_procedure_call */
extern void T84f687(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_set_item_call */
extern void T84f724(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_procedure_call */
extern void T84f686(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_object_id_free_call */
extern void T84f723(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_procedure_call */
extern void T84f685(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_cwin_local_free_call */
extern void T84f722(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_procedure_call */
extern void T84f684(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_set_item_call */
extern void T84f721(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_procedure_call */
extern void T84f683(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_set_item_call */
extern void T84f720(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_procedure_call */
extern void T84f682(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_call */
extern void T84f719(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T84f719ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_info_message_call */
extern void T84f962(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_copy_call */
extern void T84f718(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_DYNAMIC_PRECURSOR.is_builtin */
extern T1 T416f20(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin */
extern T1 T332f27(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_tuple_label_setter_call */
extern void T84f663(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T84f663ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_adapted_named_query_call */
extern void T84f632(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_named_query_call */
extern T0* T84f632ac1(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T84f632ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_adapted_query_call */
extern void T84f662(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_query_call */
extern T0* T84f662ac1(GE_context* ac, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_query_call */
extern void T84f674(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T84f674ot1(T0* a1, T0** a2);
extern T1 T84f674ot2(T0* a1, T0** a2);
extern T1 T84f674ot3(T0* a1, T0** a2);
extern T1 T84f674ot4(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_non_inlined_query_call */
extern void T84f681(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_query_call */
extern void T84f680(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_query_call */
extern void T84f717(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_runtime_name_call */
extern void T84f961(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_type_id_call */
extern void T84f960(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_expanded_call */
extern void T84f959(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_deferred_call */
extern void T84f958(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_attached_call */
extern void T84f957(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_has_default_call */
extern void T84f956(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_count_call */
extern void T84f955(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_default_call */
extern void T84f954(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_query_call */
extern void T84f716(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_object_comparison_call */
extern void T84f953(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_count_call */
extern void T84f952(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T84f952ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_special_query_call */
extern void T84f715(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_item_call */
extern void T84f951(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_element_size_call */
extern void T84f950(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T84f950ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_special_count_call */
extern void T84f949(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_capacity_call */
extern void T84f948(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_base_address_call */
extern void T84f947(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_query_call */
extern void T84f714(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_positive_infinity_call */
extern void T84f946(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_negative_infinity_call */
extern void T84f945(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_nan_call */
extern void T84f944(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_item_call */
extern void T84f943(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_query_call */
extern void T84f713(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_real_call */
extern void T84f942(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_integer_64_call */
extern void T84f941(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_integer_call */
extern void T84f940(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_to_double_call */
extern void T84f939(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_quotient_call */
extern void T84f938(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_product_call */
extern void T84f937(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_power_call */
extern void T84f936(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_plus_call */
extern void T84f935(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_opposite_call */
extern void T84f934(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_minus_call */
extern void T84f933(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_positive_infinity_call */
extern void T84f932(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_negative_infinity_call */
extern void T84f931(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_nan_call */
extern void T84f930(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_less_call */
extern void T84f929(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_identity_call */
extern void T84f928(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_floor_real_64_call */
extern void T84f927(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_floor_real_32_call */
extern void T84f926(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ceiling_real_64_call */
extern void T84f925(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ceiling_real_32_call */
extern void T84f924(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_query_call */
extern void T84f712(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_item_call */
extern void T84f923(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_query_call */
extern void T84f711(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_to_integer_32_call */
extern void T84f922(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_plus_call */
extern void T84f921(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_is_default_pointer_call */
extern void T84f920(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.current_universe_impl */
extern T0* T84f276(GE_context* ac, T0* C);
/* ET_CLASS.universe */
extern T0* T95f87(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_pointer_hash_code_call */
extern void T84f919(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_query_call */
extern void T84f710(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_wide_character_bytes_call */
extern void T84f918(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_real_bytes_call */
extern void T84f917(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_pointer_bytes_call */
extern void T84f916(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_windows_call */
extern void T84f915(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vxworks_call */
extern void T84f914(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vms_call */
extern void T84f913(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_unix_call */
extern void T84f912(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_thread_capable_call */
extern void T84f911(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_scoop_capable_call */
extern void T84f910(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_mac_call */
extern void T84f909(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_dotnet_call */
extern void T84f908(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_64_bits_call */
extern void T84f907(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_integer_bytes_call */
extern void T84f906(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_double_bytes_call */
extern void T84f905(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_character_bytes_call */
extern void T84f904(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_boolean_bytes_call */
extern void T84f903(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_query_call */
extern void T84f709(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_find_referers_call */
extern void T84f902(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_declaration_type_cast */
extern void T84f642(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_ise_runtime_query_call */
extern void T84f708(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_type_id_from_name_call */
extern void T84f901(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_query_c_call */
extern void T84f966(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T1 a5);
/* ET_C_GENERATOR.print_builtin_ise_runtime_type_conforms_to_call */
extern void T84f900(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_storable_version_of_type_call */
extern void T84f899(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_at_offset_call */
extern void T84f898(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_at_call */
extern void T84f897(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_call */
extern void T84f896(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_64_field_at_call */
extern void T84f895(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_64_field_call */
extern void T84f894(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_32_field_at_call */
extern void T84f893(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_32_field_call */
extern void T84f892(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_raw_reference_field_at_offset_call */
extern void T84f891(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_raw_reference_field_at_call */
extern void T84f890(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pointer_field_at_call */
extern void T84f889(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pointer_field_call */
extern void T84f888(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_persistent_field_count_of_type_call */
extern void T84f887(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_once_objects_call */
extern void T84f886(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_object_size_call */
extern void T84f885(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_type_instance_of_call */
extern void T84f884(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_tuple_instance_of_call */
extern void T84f883(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_special_of_reference_instance_of_call */
extern void T84f882(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_instance_of_call */
extern void T84f881(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_64_field_at_call */
extern void T84f880(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_64_field_call */
extern void T84f879(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_32_field_at_call */
extern void T84f878(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_32_field_call */
extern void T84f877(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_16_field_at_call */
extern void T84f876(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_16_field_call */
extern void T84f875(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_8_field_at_call */
extern void T84f874(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_8_field_call */
extern void T84f873(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_tuple_type_call */
extern void T84f872(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_tuple_call */
extern void T84f871(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_type_call */
extern void T84f870(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_or_basic_type_call */
extern void T84f869(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_call */
extern void T84f868(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_expanded_call */
extern void T84f867(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_copy_semantics_item_call */
extern void T84f866(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_call */
extern void T84f865(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_object_marked_call */
extern void T84f864(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_field_transient_of_type_call */
extern void T84f863(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_field_expanded_of_type_call */
extern void T84f862(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_expanded_call */
extern void T84f861(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_copy_semantics_field_call */
extern void T84f860(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_attached_type_call */
extern void T84f859(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_64_field_at_call */
extern void T84f858(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_64_field_call */
extern void T84f857(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_32_field_at_call */
extern void T84f856(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_32_field_call */
extern void T84f855(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_16_field_at_call */
extern void T84f854(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_16_field_call */
extern void T84f853(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_8_field_at_call */
extern void T84f852(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_8_field_call */
extern void T84f851(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generic_parameter_count_call */
extern void T84f850(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generator_of_type_call */
extern void T84f849(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generating_type_of_type_call */
extern void T84f848(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_type_of_type_call */
extern void T84f847(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_static_type_of_type_call */
extern void T84f846(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_offset_of_type_call */
extern void T84f845(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_name_of_type_call */
extern void T84f844(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_count_of_type_call */
extern void T84f843(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_eif_gen_param_id_call */
extern void T84f842(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_dynamic_type_at_offset_call */
extern void T84f841(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_dynamic_type_call */
extern void T84f840(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_detachable_type_call */
extern void T84f839(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_compiler_version_call */
extern void T84f838(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_check_assert_call */
extern void T84f837(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_32_field_at_call */
extern void T84f836(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_32_field_call */
extern void T84f835(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_8_field_at_call */
extern void T84f834(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_8_field_call */
extern void T84f833(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_boolean_field_at_call */
extern void T84f832(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_boolean_field_call */
extern void T84f831(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_attached_type_call */
extern void T84f830(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_query_call */
extern void T84f707(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_item_call */
extern void T84f829(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_query_call */
extern void T84f706(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_64_call */
extern void T84f828(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_32_call */
extern void T84f827(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_call */
extern void T84f826(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_double_call */
extern void T84f825(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_character_32_call */
extern void T84f824(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_character_8_call */
extern void T84f823(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_quotient_call */
extern void T84f822(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_product_call */
extern void T84f821(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_power_call */
extern void T84f820(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_plus_call */
extern void T84f819(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_opposite_call */
extern void T84f818(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_minus_call */
extern void T84f817(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_is_less_call */
extern void T84f816(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_integer_remainder_call */
extern void T84f815(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_integer_quotient_call */
extern void T84f814(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_identity_call */
extern void T84f813(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_xor_call */
extern void T84f812(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_shift_right_call */
extern void T84f811(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_shift_left_call */
extern void T84f810(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_or_call */
extern void T84f809(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_not_call */
extern void T84f808(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_and_call */
extern void T84f807(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_64_call */
extern void T84f806(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_32_call */
extern void T84f805(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_16_call */
extern void T84f804(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_8_call */
extern void T84f803(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_64_call */
extern void T84f802(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_32_call */
extern void T84f801(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_16_call */
extern void T84f800(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_8_call */
extern void T84f799(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_query_call */
extern void T84f705(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_object_id_call */
extern void T84f798(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_id_object_call */
extern void T84f797(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_query_call */
extern void T84f704(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_item_call */
extern void T84f796(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_fast_item_call */
extern void T84f795(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_query_call */
extern void T84f703(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_cwin_error_text_call */
extern void T84f794(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_character_size_call */
extern void T84f793(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_facility_call */
extern void T84f792(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_code_call */
extern void T84f791(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_call */
extern void T84f790(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_c_strlen_call */
extern void T84f789(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_query_call */
extern void T84f702(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_item_call */
extern void T84f788(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_query_call */
extern void T84f701(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_to_character_32_call */
extern void T84f787(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_to_character_8_call */
extern void T84f786(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_natural_32_code_call */
extern void T84f785(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_code_call */
extern void T84f784(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_query_call */
extern void T84f700(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_item_call */
extern void T84f783(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_query_call */
extern void T84f699(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_xor_call */
extern void T84f782(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_else_call */
extern void T84f781(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_call */
extern void T84f780(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_not_call */
extern void T84f779(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_implies_call */
extern void T84f778(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_then_call */
extern void T84f777(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_call */
extern void T84f776(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_query_call */
extern void T84f698(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_i_th_argument_string_call */
extern void T84f775(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_i_th_argument_pointer_call */
extern void T84f774(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_argument_count_call */
extern void T84f773(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_query_call */
extern void T84f697(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call */
extern void T84f772(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T84f772ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_same_type_call */
extern void T84f771(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_is_equal_call */
extern void T84f770(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generator_call */
extern void T84f769(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generating_type_call */
extern void T84f768(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_TOKEN_CONSTANTS.detachable_like_current */
extern T0* T94f48(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.make */
extern T0* T498c70(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.like_keyword */
extern T0* T94f245(GE_context* ac, T0* C);
/* ET_KEYWORD.make_like */
extern T0* T539c43(GE_context* ac);
/* ET_LIKE_CURRENT.tokens */
extern T0* T498f10(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_keyword */
extern T0* T94f71(GE_context* ac, T0* C);
/* ET_KEYWORD.make_detachable */
extern T0* T539c36(GE_context* ac);
/* ET_C_GENERATOR.print_builtin_any_deep_twin_call */
extern void T84f767(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].force_last */
extern void T403f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].key_storage_put */
extern void T403f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE].force */
extern void T1311f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FEATURE].fill_with */
extern void T1310f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FEATURE].extend */
extern void T1310f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].slots_put */
extern void T403f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].clashes_put */
extern void T403f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].slots_item */
extern T6 T403f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].hash_position */
extern T6 T403f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].resize */
extern void T403f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].clashes_resize */
extern void T403f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].special_integer_ */
extern T0* T403f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].key_storage_resize */
extern void T403f64(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE].aliased_resized_area */
extern T0* T1311f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_FEATURE].aliased_resized_area */
extern T0* T1310f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].item_storage_resize */
extern void T403f63(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CONSTANT].aliased_resized_area */
extern T0* T1316f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_CONSTANT].aliased_resized_area */
extern T0* T1313f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].slots_resize */
extern void T403f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].new_modulus */
extern T6 T403f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].new_capacity */
extern T6 T403f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].item_storage_put */
extern void T403f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CONSTANT].force */
extern void T1316f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CONSTANT].fill_with */
extern void T1313f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CONSTANT].extend */
extern void T1313f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].search_position */
extern void T403f53(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.set_polymorphic_call_argument_type_sets */
extern void T84f631(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T84f631ot1(T0* a1, T0** a2);
extern T1 T84f631ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_static_type */
extern void T378f19(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.put_last */
extern void T382f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_call_agent */
extern T1 T429f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_call_agent */
extern T1 T424f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_tuple_label */
extern T1 T429f8(GE_context* ac, T0* C);
/* ET_C_GENERATOR.dynamic_type_set_in_feature */
extern T0* T84f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.dynamic_type_set */
extern T0* T416f27(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.dynamic_type_set */
extern T0* T332f19(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.expression */
extern T0* T399f9(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.item */
extern T0* T399f12(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_name */
extern void T84f627(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T84f627ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_call_name_comment */
extern void T84f626(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T84f626ot1(T0* a1, T0** a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].force_last_new */
extern void T381f34(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].has */
extern T1 T381f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].replace */
extern void T380f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_MANIFEST_TUPLE.put_first */
extern void T399f30(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION_ITEM].force */
extern void T1300f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_EXPRESSION_ITEM].fill_with */
extern void T1298f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_EXPRESSION_ITEM].extend */
extern void T1298f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.resize */
extern void T399f29(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T1300f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T1298f4(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.capacity */
extern T6 T399f7(GE_context* ac, T0* C);
/* ET_C_GENERATOR.fill_call_formal_arguments */
extern void T84f625(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.static_feature */
extern T0* T429f7(GE_context* ac, T0* C);
/* ET_CLASS.seeded_procedure */
extern T0* T95f161(GE_context* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.seeded_feature */
extern T0* T352f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.static_feature */
extern T0* T424f9(GE_context* ac, T0* C);
/* ET_CLASS.seeded_query */
extern T0* T95f160(GE_context* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.seeded_feature */
extern T0* T351f4(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.formal_argument */
extern T0* T84f231(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].put_last */
extern void T375f13(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_argument */
extern void T232f119(GE_context* ac, T0* C, T1 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].force_last */
extern void T380f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].new_capacity */
extern T6 T380f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].extendible */
extern T1 T380f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_next */
extern void T424f13(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.same_declared_signature */
extern T1 T84f144(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T84f144ot1(T0* a1);
extern T1 T84f144ot2(T0* a1);
extern T1 T84f144ot3(T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_tuple_label */
extern T1 T424f7(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_feature */
extern void T84f526(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].wipe_out */
extern void T387f11(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_EQUALITY_EXPRESSION].keep_head */
extern void T1290f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_EQUALITY_EXPRESSION].set_count */
extern void T1290f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].move_all_cursors_after */
extern void T387f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EQUALITY_EXPRESSION].set_next_cursor */
extern void T1292f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EQUALITY_EXPRESSION].set_after */
extern void T1292f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_equality_function */
extern void T84f593(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_BRACKET_SYMBOL.is_not_equal */
extern T1 T846f66(GE_context* ac, T0* C);
/* ET_SYMBOL.is_not_equal */
extern T1 T474f66(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_equality_expression */
extern void T84f650(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].force_last */
extern void T387f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION].force */
extern void T1291f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_EQUALITY_EXPRESSION].fill_with */
extern void T1290f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_EQUALITY_EXPRESSION].extend */
extern void T1290f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].resize */
extern void T387f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T1291f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T1290f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].new_capacity */
extern T6 T387f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].extendible */
extern T1 T387f7(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_target_operand */
extern void T84f667(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_equality_function_name */
extern void T84f649(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_static_routine_name */
extern void T84f665(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T84f665ot1(T0* a1, T0** a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].item */
extern T0* T387f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].wipe_out */
extern void T386f11(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION].keep_head */
extern void T1286f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION].set_count */
extern void T1286f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].move_all_cursors_after */
extern void T386f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_EQUALITY_EXPRESSION].set_next_cursor */
extern void T1288f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_EQUALITY_EXPRESSION].set_after */
extern void T1288f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_equality_function */
extern void T84f592(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_BRACKET_SYMBOL.is_not_tilde */
extern T1 T846f65(GE_context* ac, T0* C);
/* ET_SYMBOL.is_not_tilde */
extern T1 T474f65(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_equality_expression */
extern void T84f646(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].force_last */
extern void T386f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION].force */
extern void T1287f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION].fill_with */
extern void T1286f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION].extend */
extern void T1286f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].resize */
extern void T386f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T1287f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T1286f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].new_capacity */
extern T6 T386f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].extendible */
extern T1 T386f7(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_object_equality_function_name */
extern void T84f645(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].item */
extern T0* T386f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].wipe_out */
extern void T385f11(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_OBJECT_TEST].keep_head */
extern void T1282f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_OBJECT_TEST].set_count */
extern void T1282f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].move_all_cursors_after */
extern void T385f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_TEST].set_next_cursor */
extern void T1284f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_TEST].set_after */
extern void T1284f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_function */
extern void T84f591(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE_HASH_LIST.is_empty */
extern T1 T377f9(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_function_name */
extern void T84f643(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].item */
extern T0* T385f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT].wipe_out */
extern void T388f11(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_AGENT].keep_head */
extern void T1294f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_AGENT].set_count */
extern void T1294f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT].move_all_cursors_after */
extern void T388f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_AGENT].set_next_cursor */
extern void T1296f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_AGENT].set_after */
extern void T1296f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_agent_declaration */
extern void T84f590(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T84f590ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_agent_closed_operand_access */
extern void T84f641(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_agent_creation_name */
extern void T84f640(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_agent_body_declaration */
extern void T84f639(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.put_first */
extern void T391f16(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T391f9(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.resize */
extern void T391f15(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.capacity */
extern T6 T391f8(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.wipe_out */
extern void T391f14(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_agent_open_operand_access */
extern void T84f638(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_function_name */
extern void T84f637(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.make */
extern T0* T345c103(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.tuple_keyword */
extern T0* T94f94(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.tokens */
extern T0* T345f23(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_type_mark */
extern T0* T94f36(GE_context* ac, T0* C);
/* ET_IDENTIFIER.set_agent_closed_operand */
extern void T232f115(GE_context* ac, T0* C, T1 a1);
/* ET_IDENTIFIER.set_agent_open_operand */
extern void T232f112(GE_context* ac, T0* C, T1 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT].item */
extern T0* T388f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_semistrict */
extern T1 T416f19(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.is_semistrict */
extern T1 T332f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].remove_last */
extern void T406f13(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_FEATURE].keep_head */
extern void T1327f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_FEATURE].set_count */
extern void T1327f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].move_last_cursors_after */
extern void T406f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T1329f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_FEATURE].set_after */
extern void T1329f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].last */
extern T0* T406f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].is_empty */
extern T1 T406f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].force_last */
extern void T406f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_FEATURE].force */
extern void T1328f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_FEATURE].fill_with */
extern void T1327f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_FEATURE].extend */
extern void T1327f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].resize */
extern void T406f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T1328f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T1327f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T406f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].extendible */
extern T1 T406f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_generated */
extern void T416f35(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_generated */
extern void T332f32(GE_context* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_object_allocation_functions */
extern void T84f525(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_allocation_function */
extern void T84f589(GE_context* ac, T0* C, T0* a1);
extern T1 T84f589ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_dispose_registration */
extern void T84f636(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T84f636ot1(T0* a1, T0** a2);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].force_last_new */
extern void T405f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].key_storage_put */
extern void T405f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].item_storage_put */
extern void T405f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].force */
extern void T1326f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_DYNAMIC_FEATURE].fill_with */
extern void T1322f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_DYNAMIC_FEATURE].extend */
extern void T1322f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].slots_put */
extern void T405f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].clashes_put */
extern void T405f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].resize */
extern void T405f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].clashes_resize */
extern void T405f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T405f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].key_storage_resize */
extern void T405f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].item_storage_resize */
extern void T405f52(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T1326f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T1322f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].slots_resize */
extern void T405f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].new_modulus */
extern T6 T405f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].new_capacity */
extern T6 T405f32(GE_context* ac, T0* C, T6 a1);
/* ET_COMPOUND.is_empty */
extern T1 T456f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_procedure_call_functions */
extern void T84f524(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_next */
extern void T429f14(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_polymorphic_query_call_functions */
extern void T84f523(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_new_immutable_string_32_function */
extern void T84f522(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_new_string_32_function */
extern void T84f521(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_new_string_8_function */
extern void T84f520(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_default_declarations */
extern void T84f519(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_default_declaration */
extern void T84f574(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_object_value */
extern void T84f620(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T84f620ot1(T0* a1, T0** a2);
extern T1 T84f620ot2(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_default_attribute_value */
extern void T84f660(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.flush_to_c_file */
extern void T84f518(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T411f35(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_append */
extern void T411f44(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T411f44p1(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_types */
extern void T84f517(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_type_struct */
extern void T84f573(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_flags_name */
extern void T84f617(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_struct_name */
extern void T84f615(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_struct */
extern void T84f572(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T84f572ot1(T0* a1, T0** a2);
extern T1 T84f572ot2(T0* a1, T0** a2);
extern T1 T84f572ot3(T0* a1, T0** a2);
/* ET_C_GENERATOR.print */
extern void T84f618(GE_context* ac, T0* C, T0* a1);
/* STD_FILES.put_string */
extern void T485f7(GE_context* ac, T0* C, T0* a1);
/* STD_FILES.standard_default */
extern T0* T485f2(GE_context* ac, T0* C);
/* STRING_8.out */
extern T0* T17f17(GE_context* ac, T0* C);
/* ET_C_GENERATOR.io */
extern T0* T84f268(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_struct_name */
extern void T84f611(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].has_cycle */
extern T1 T419f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].sort */
extern void T419f15(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] BOOLEAN].item */
extern T1 T1346f4(GE_context* ac, T0* C, T6 a1);
/* [attached] ARRAY [[attached] BOOLEAN].put */
extern void T1346f6(GE_context* ac, T0* C, T1 a1, T6 a2);
/* [attached] ARRAY [[attached] BOOLEAN].make_filled */
extern T0* T1346c5(GE_context* ac, T1 a1, T6 a2, T6 a3);
/* [attached] ARRAY [[attached] BOOLEAN].make_filled_area */
extern void T1346f7(GE_context* ac, T0* C, T1 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].put_last */
extern void T315f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].replace */
extern void T1345f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].item */
extern T0* T1345f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].cloned_object */
extern T0* T1345f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].twin */
extern T0* T1345f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].copy */
extern void T1345f16(GE_context* ac, T0* C, T0* a1);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].resized_area */
extern T0* T1963f4(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].copy_data */
extern void T1963f10(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].force */
extern void T1963f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].extend */
extern void T1963f12(GE_context* ac, T0* C, T0* a1);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].move_data */
extern void T1963f13(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].overlapping_move */
extern void T1963f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].fill_with */
extern void T1963f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].non_overlapping_move */
extern void T1963f15(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].make_empty */
extern T0* T1963c6(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].new_cursor */
extern T0* T1345f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [[attached] INTEGER_32]].make */
extern T0* T1965c5(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].set_internal_cursor */
extern void T1345f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].valid_cursor */
extern T1 T1345f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].move_all_cursors_after */
extern void T1345f18(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [[attached] INTEGER_32]].set_next_cursor */
extern void T1965f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [[attached] INTEGER_32]].set_after */
extern void T1965f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].cloned_object */
extern T0* T368f12(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].twin */
extern T0* T368f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].copy */
extern void T368f27(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].new_cursor */
extern T0* T368f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] INTEGER_32].make */
extern T0* T1255c5(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].set_internal_cursor */
extern void T368f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].valid_cursor */
extern T1 T368f15(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].reset */
extern void T419f20(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_boxed_type_definition */
extern void T84f571(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_type_definition */
extern void T84f570(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_function */
extern void T84f569(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_type_id_access */
extern void T84f613(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_type_declaration */
extern void T84f612(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].force_relation */
extern void T419f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].put_indexed_relation */
extern void T419f19(GE_context* ac, T0* C, T6 a1, T6 a2);
/* attached DS_LINKABLE [[attached] INTEGER_32].put_right */
extern void T629f4(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] INTEGER_32].make */
extern T0* T629c3(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].count */
extern T6 T419f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].index_of */
extern T6 T419f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].found_item */
extern T6 T507f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].item_storage_item */
extern T6 T507f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].found */
extern T1 T507f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].search */
extern void T507f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].search_position */
extern void T507f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].hash_position */
extern T6 T507f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T507f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].clashes_item */
extern T6 T507f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].slots_item */
extern T6 T507f22(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_type_definition */
extern void T84f568(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_pointer_type_definition */
extern void T84f567(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_64_type_definition */
extern void T84f566(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_32_type_definition */
extern void T84f565(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_64_type_definition */
extern void T84f564(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_32_type_definition */
extern void T84f563(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_16_type_definition */
extern void T84f562(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_8_type_definition */
extern void T84f561(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_64_type_definition */
extern void T84f560(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_32_type_definition */
extern void T84f559(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_16_type_definition */
extern void T84f558(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_8_type_definition */
extern void T84f557(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_32_type_definition */
extern void T84f556(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_8_type_definition */
extern void T84f555(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boolean_type_definition */
extern void T84f554(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].force */
extern void T419f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].put */
extern void T419f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].put_last */
extern void T1345f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]].force */
extern void T1964f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].put_new */
extern void T507f38(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].key_storage_put */
extern void T507f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].item_storage_put */
extern void T507f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].slots_put */
extern void T507f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].clashes_put */
extern void T507f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].unset_found_item */
extern void T507f42(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].resize */
extern void T1345f12(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]].aliased_resized_area */
extern T0* T1964f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].aliased_resized_area */
extern T0* T1963f5(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].resize */
extern void T507f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].clashes_resize */
extern void T507f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T507f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].key_storage_resize */
extern void T507f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].item_storage_resize */
extern void T507f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].slots_resize */
extern void T507f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].new_modulus */
extern T6 T507f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].capacity */
extern T6 T419f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].has */
extern T1 T419f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].has */
extern T1 T507f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].make_default */
extern T0* T419c12(GE_context* ac);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].make */
extern void T419f16(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].make */
extern T0* T419c16(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].make */
extern T0* T1345c11(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]].make */
extern T0* T1964f1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]].default_create */
extern T0* T1964c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].make */
extern void T368f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].make */
extern T0* T368c19(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_map */
extern T0* T507c35(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T507f40(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_sparse_container */
extern void T507f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T507f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].new_cursor */
extern T0* T507f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make */
extern T0* T1359c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_slots */
extern void T507f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_clashes */
extern void T507f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_key_storage */
extern void T507f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_item_storage */
extern void T507f56(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_aliased_double_type_definition */
extern void T84f553(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.double_class_name */
extern T0* T94f35(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_real_type_definition */
extern void T84f552(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.real_class_name */
extern T0* T94f34(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_natural_type_definition */
extern void T84f551(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.natural_class_name */
extern T0* T94f33(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_integer_type_definition */
extern void T84f550(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.integer_class_name */
extern T0* T94f32(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_wide_character_type_definition */
extern void T84f549(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.wide_character_class_name */
extern T0* T94f31(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_character_type_definition */
extern void T84f548(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.character_class_name */
extern T0* T94f30(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_start_extern_c */
extern void T84f516(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_runtime_header_file */
extern void T84f515(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_C_GENERATOR.include_runtime_c_file */
extern void T84f546(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] STRING_8].force_last */
extern void T109f45(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].slots_put */
extern void T109f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] STRING_8].clashes_put */
extern void T109f52(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] STRING_8].resize */
extern void T109f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].clashes_resize */
extern void T109f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].special_integer_ */
extern T0* T109f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].key_storage_resize */
extern void T109f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].item_storage_resize */
extern void T109f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].slots_resize */
extern void T109f67(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].new_modulus */
extern T6 T109f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].new_capacity */
extern T6 T109f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].item_storage_put */
extern void T109f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].force_last */
extern void T407f48(GE_context* ac, T0* C, T1 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].key_storage_put */
extern void T407f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].slots_put */
extern void T407f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].clashes_put */
extern void T407f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].slots_item */
extern T6 T407f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].hash_position */
extern T6 T407f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].resize */
extern void T407f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].clashes_resize */
extern void T407f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].special_integer_ */
extern T0* T407f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].key_storage_resize */
extern void T407f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].item_storage_resize */
extern void T407f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].slots_resize */
extern void T407f67(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].new_modulus */
extern T6 T407f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].new_capacity */
extern T6 T407f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].item_storage_put */
extern void T407f59(GE_context* ac, T0* C, T1 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].search_position */
extern void T407f49(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].replace */
extern void T407f47(GE_context* ac, T0* C, T1 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].item */
extern T1 T407f34(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].has */
extern T1 T407f33(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.exception_trace_mode */
extern T1 T84f190(GE_context* ac, T0* C);
/* ET_C_GENERATOR.trace_mode */
extern T1 T84f114(GE_context* ac, T0* C);
/* ET_C_GENERATOR.generate_ids */
extern void T84f514(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_id */
extern void T416f38(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_id */
extern void T332f37(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.sort_types */
extern void T84f545(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].put_relation */
extern void T419f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].force */
extern void T383f65(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.open_cpp_file */
extern void T84f513(GE_context* ac, T0* C);
/* ET_C_GENERATOR.open_c_file */
extern void T84f512(GE_context* ac, T0* C);
/* ET_C_GENERATOR.set_split_threshold */
extern void T84f504(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.set_split_mode */
extern void T84f503(GE_context* ac, T0* C, T1 a1);
/* GEC.no_split */
extern T1 T25f47(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.parameter */
extern T1 T48f12(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] BOOLEAN].last */
extern T1 T182f7(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] BOOLEAN].is_empty */
extern T1 T182f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.set_finalize_mode */
extern void T84f502(GE_context* ac, T0* C, T1 a1);
/* GEC.is_finalize */
extern T1 T25f30(GE_context* ac, T0* C);
/* ET_C_GENERATOR.set_use_boehm_gc */
extern void T84f501(GE_context* ac, T0* C, T1 a1);
/* GEC.use_boehm_gc */
extern T1 T25f46(GE_context* ac, T0* C);
/* ET_C_GENERATOR.make */
extern T0* T84c500(GE_context* ac, T0* a1, T0* a2);
/* ET_C_GENERATOR.make_external_regexps */
extern void T84f507(GE_context* ac, T0* C);
/* ET_C_GENERATOR.make_rescue_data */
extern void T84f506(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].set_equality_tester */
extern void T273f41(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.identifier_tester */
extern T0* T84f112(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TESTER.default_create */
extern T0* T408c2(GE_context* ac);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].make */
extern T0* T273c37(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].set_internal_cursor */
extern void T273f50(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].new_cursor */
extern T0* T273f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER].make */
extern T0* T816c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].make_slots */
extern void T273f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].make_clashes */
extern void T273f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].make_key_storage */
extern void T273f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].make_item_storage */
extern void T273f45(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER].make */
extern T0* T282f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_IDENTIFIER].make_empty */
extern T0* T281c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER].default_create */
extern T0* T282c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].set_key_equality_tester */
extern void T407f43(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make */
extern T0* T407c42(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make_with_equality_testers */
extern void T407f50(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make_sparse_container */
extern void T407f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].set_internal_cursor */
extern void T407f75(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].new_cursor */
extern T0* T407f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8].make */
extern T0* T1331c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make_slots */
extern void T407f74(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make_clashes */
extern void T407f73(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make_key_storage */
extern void T407f72(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make_item_storage */
extern void T407f71(GE_context* ac, T0* C, T6 a1);
/* attached KL_EQUALITY_TESTER [[attached] STRING_8].default_create */
extern T0* T206c2(GE_context* ac);
/* [attached] DS_HASH_SET [[attached] STRING_8].set_equality_tester */
extern void T109f42(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].make */
extern void T109f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].make */
extern T0* T109c41(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].set_internal_cursor */
extern void T109f58(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].new_cursor */
extern T0* T109f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8].make */
extern T0* T544c9(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].make_slots */
extern void T109f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].make_clashes */
extern void T109f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].make_key_storage */
extern void T109f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].make_item_storage */
extern void T109f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].make */
extern T0* T406c11(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].set_internal_cursor */
extern void T406f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T406f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_FEATURE].make */
extern T0* T1329c5(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].make_map */
extern T0* T405c33(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T405f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].make_sparse_container */
extern void T405f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T405f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].new_cursor */
extern T0* T405f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].make */
extern T0* T1325c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].make_slots */
extern void T405f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].make_clashes */
extern void T405f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].make_key_storage */
extern void T405f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].make_item_storage */
extern void T405f55(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].make */
extern T0* T1326f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_DYNAMIC_FEATURE].make_empty */
extern T0* T1322c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].default_create */
extern T0* T1326c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].make_map */
extern T0* T404c39(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].make_with_equality_testers */
extern void T404f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].make_sparse_container */
extern void T404f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].set_internal_cursor */
extern void T404f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].new_cursor */
extern T0* T404f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].make */
extern T0* T1317c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].make_slots */
extern void T404f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].new_modulus */
extern T6 T404f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].make_clashes */
extern void T404f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].make_key_storage */
extern void T404f56(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT].make */
extern T0* T1321f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_INLINE_CONSTANT].make_empty */
extern T0* T1318c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT].default_create */
extern T0* T1321c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].make_item_storage */
extern void T404f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_map */
extern T0* T403c39(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_with_equality_testers */
extern void T403f44(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_sparse_container */
extern void T403f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].set_internal_cursor */
extern void T403f70(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].new_cursor */
extern T0* T403f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE].make */
extern T0* T1312c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_slots */
extern void T403f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_clashes */
extern void T403f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_key_storage */
extern void T403f67(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE].make */
extern T0* T1311f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_FEATURE].make_empty */
extern T0* T1310c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE].default_create */
extern T0* T1311c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_item_storage */
extern void T403f66(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CONSTANT].make */
extern T0* T1316f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CONSTANT].make_empty */
extern T0* T1313c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CONSTANT].default_create */
extern T0* T1316c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_map */
extern T0* T401c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_with_equality_testers */
extern void T401f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_sparse_container */
extern void T401f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].set_internal_cursor */
extern void T401f49(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].new_cursor */
extern T0* T401f25(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FEATURE].make */
extern T0* T1309c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_slots */
extern void T401f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].new_modulus */
extern T6 T401f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_clashes */
extern void T401f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_key_storage */
extern void T401f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_item_storage */
extern void T401f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T400c35(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].set_internal_cursor */
extern void T400f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].new_cursor */
extern T0* T400f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T1302c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].make_slots */
extern void T400f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].new_modulus */
extern T6 T400f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].make_clashes */
extern void T400f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].make_key_storage */
extern void T400f40(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].make_item_storage */
extern void T400f39(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T1304f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE].make_empty */
extern T0* T1303c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE].default_create */
extern T0* T1304c3(GE_context* ac);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern T0* T399c28(GE_context* ac, T6 a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern void T399f28p1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION_ITEM].make */
extern T0* T1300f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_EXPRESSION_ITEM].make_empty */
extern T0* T1298c5(GE_context* ac, T6 a1);
/* ET_MANIFEST_TUPLE.tokens */
extern T0* T399f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T398c8(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].set_internal_cursor */
extern void T398f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].new_cursor */
extern T0* T398f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T1301c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T966f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].make_empty */
extern T0* T967c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].default_create */
extern T0* T966c3(GE_context* ac);
/* ET_UNQUALIFIED_CALL_EXPRESSION.make */
extern T0* T397c28(GE_context* ac, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL_INSTRUCTION.make */
extern T0* T392c9(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_INSTRUCTION.make_qualified_call */
extern void T392f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T391f13(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T391c13(GE_context* ac, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T391f13p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_parenthesis_symbol */
extern T0* T94f241(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_parenthesis */
extern T0* T474c74(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_parenthesis_symbol */
extern T0* T94f240(GE_context* ac, T0* C);
/* ET_SYMBOL.make_left_parenthesis */
extern T0* T474c73(GE_context* ac);
/* ET_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T391f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT].make */
extern T0* T388c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT].set_internal_cursor */
extern void T388f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT].new_cursor */
extern T0* T388f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_AGENT].make */
extern T0* T1296c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT].make */
extern T0* T1295f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_AGENT].make_empty */
extern T0* T1294c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT].default_create */
extern T0* T1295c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].make */
extern T0* T387c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].set_internal_cursor */
extern void T387f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].new_cursor */
extern T0* T387f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EQUALITY_EXPRESSION].make */
extern T0* T1292c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION].make */
extern T0* T1291f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_EQUALITY_EXPRESSION].make_empty */
extern T0* T1290c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION].default_create */
extern T0* T1291c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T386c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].set_internal_cursor */
extern void T386f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].new_cursor */
extern T0* T386f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T1288c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T1287f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION].make_empty */
extern T0* T1286c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION].default_create */
extern T0* T1287c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].make */
extern T0* T385c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].set_internal_cursor */
extern void T385f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].new_cursor */
extern T0* T385f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_TEST].make */
extern T0* T1284c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST].make */
extern T0* T1283f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_OBJECT_TEST].make_empty */
extern T0* T1282c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST].default_create */
extern T0* T1283c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_map */
extern T0* T384c39(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T384f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_sparse_container */
extern void T384f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T384f71(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].new_cursor */
extern T0* T384f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make */
extern T0* T1279c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_slots */
extern void T384f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_clashes */
extern void T384f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_key_storage */
extern void T384f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_item_storage */
extern void T384f67(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T1275f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].make_empty */
extern T0* T1274c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.make_with_capacity */
extern T0* T382c8(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].make_map */
extern T0* T381c33(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].make_with_equality_testers */
extern void T381f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].make_sparse_container */
extern void T381f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].set_internal_cursor */
extern void T381f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].new_cursor */
extern T0* T381f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].make */
extern T0* T1273c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].make_slots */
extern void T381f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].make_clashes */
extern void T381f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].make_key_storage */
extern void T381f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].make_item_storage */
extern void T381f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].make */
extern T0* T380c12(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].set_internal_cursor */
extern void T380f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].new_cursor */
extern T0* T380f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EXPRESSION].make */
extern T0* T1267c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION].make */
extern T0* T1266f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_EXPRESSION].make_empty */
extern T0* T1265c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPRESSION].default_create */
extern T0* T1266c3(GE_context* ac);
/* [attached] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].make */
extern T0* T379c8(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_DYNAMIC_TYPE].make */
extern T0* T376c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T376f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_DYNAMIC_TYPE].new_cursor */
extern T0* T376f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_TYPE].make */
extern T0* T1263c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_TYPE].make */
extern T0* T1262f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_DYNAMIC_TYPE].make_empty */
extern T0* T1261c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_TYPE].default_create */
extern T0* T1262c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].make */
extern T0* T375c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].set_internal_cursor */
extern void T375f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].new_cursor */
extern T0* T375f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_IDENTIFIER].make */
extern T0* T1260c3(GE_context* ac, T0* a1);
/* KL_STRING_OUTPUT_STREAM.make */
extern T0* T374c4(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.null_output_stream */
extern T0* T84f279(GE_context* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.make */
extern T0* T186c3(GE_context* ac, T0* a1);
/* ET_CLASS.lower_name */
extern T0* T95f104(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_class */
extern T0* T94f1(GE_context* ac, T0* C);
/* ET_CLASS.set_implementation_error */
extern void T95f244(GE_context* ac, T0* C);
/* ET_CLASS.set_interface_error */
extern void T95f243(GE_context* ac, T0* C);
/* ET_CLASS.set_flattening_error */
extern void T95f242(GE_context* ac, T0* C);
/* ET_CLASS.set_ancestors_error */
extern void T95f241(GE_context* ac, T0* C);
/* ET_CLASS.set_syntax_error */
extern void T95f240(GE_context* ac, T0* C);
/* ET_CLASS.set_group */
extern void T95f239(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.unknown_group */
extern T0* T94f2(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.make */
extern T0* T536c30(GE_context* ac);
/* ET_CLASS.make_unknown */
extern T0* T95c238(GE_context* ac);
/* ET_CLASS.make */
extern void T95f245(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.make */
extern T0* T95c245(GE_context* ac, T0* a1);
/* ET_CLASS_CODES.class_code */
extern T8 T540f1(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].found_item */
extern T8 T1411f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].item_storage_item */
extern T8 T1411f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].found */
extern T1 T1411f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].search */
extern void T1411f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].search_position */
extern void T1411f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].hash_position */
extern T6 T1411f23(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_NAME_TESTER.test */
extern T1 T696f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.same_class_name */
extern T1 T232f45(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].key_storage_item */
extern T0* T1411f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].clashes_item */
extern T6 T1411f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].slots_item */
extern T6 T1411f26(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS_CODES.codes_by_name */
extern T0* T540f2(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.iteration_cursor_class_name */
extern T0* T94f150(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.iterable_class_name */
extern T0* T94f149(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disposable_class_name */
extern T0* T94f148(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.system_object_class_name */
extern T0* T94f147(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.any_class_name */
extern T0* T94f146(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.array_class_name */
extern T0* T94f145(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.typed_pointer_class_name */
extern T0* T94f144(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_class_name */
extern T0* T94f143(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.special_class_name */
extern T0* T94f142(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.routine_class_name */
extern T0* T94f141(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.procedure_class_name */
extern T0* T94f140(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.predicate_class_name */
extern T0* T94f139(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.function_class_name */
extern T0* T94f138(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.tuple_class_name */
extern T0* T94f137(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_class_name */
extern T0* T94f136(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_class_name */
extern T0* T94f135(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_class_name */
extern T0* T94f134(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_class_name */
extern T0* T94f133(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_class_name */
extern T0* T94f132(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_class_name */
extern T0* T94f131(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_class_name */
extern T0* T94f130(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_class_name */
extern T0* T94f129(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_class_name */
extern T0* T94f128(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_class_name */
extern T0* T94f127(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_class_name */
extern T0* T94f126(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_class_name */
extern T0* T94f125(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_class_name */
extern T0* T94f124(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].force_last */
extern void T1411f37(GE_context* ac, T0* C, T8 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].key_storage_put */
extern void T1411f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME].force */
extern void T831f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CLASS_NAME].fill_with */
extern void T832f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CLASS_NAME].extend */
extern void T832f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].slots_put */
extern void T1411f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].clashes_put */
extern void T1411f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].resize */
extern void T1411f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].clashes_resize */
extern void T1411f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].special_integer_ */
extern T0* T1411f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].key_storage_resize */
extern void T1411f49(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME].aliased_resized_area */
extern T0* T831f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_CLASS_NAME].aliased_resized_area */
extern T0* T832f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].item_storage_resize */
extern void T1411f48(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] NATURAL_8].aliased_resized_area */
extern T0* T1978f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] NATURAL_8].aliased_resized_area */
extern T0* T606f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].slots_resize */
extern void T1411f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].new_modulus */
extern T6 T1411f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].new_capacity */
extern T6 T1411f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].item_storage_put */
extern void T1411f41(GE_context* ac, T0* C, T8 a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] NATURAL_8].force */
extern void T1978f4(GE_context* ac, T0* C, T0* a1, T8 a2, T6 a3);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].unset_found_item */
extern void T1411f40(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_class_name */
extern T0* T94f123(GE_context* ac, T0* C);
/* ET_CLASS_CODES.tokens */
extern T0* T540f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].set_key_equality_tester */
extern void T1411f36(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_CODES.class_name_tester */
extern T0* T540f4(GE_context* ac, T0* C);
/* ET_CLASS_NAME_TESTER.default_create */
extern T0* T696c2(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_map */
extern T0* T1411c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_with_equality_testers */
extern void T1411f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_sparse_container */
extern void T1411f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].set_internal_cursor */
extern void T1411f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].new_cursor */
extern T0* T1411f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make */
extern T0* T1979c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_slots */
extern void T1411f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_clashes */
extern void T1411f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_key_storage */
extern void T1411f52(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME].make */
extern T0* T831f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CLASS_NAME].make_empty */
extern T0* T832c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME].default_create */
extern T0* T831c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_item_storage */
extern void T1411f51(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] NATURAL_8].make */
extern T0* T1978f2(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] NATURAL_8].default_create */
extern T0* T1978c3(GE_context* ac);
/* MUTEX.make */
extern T0* T158c9(GE_context* ac);
/* MUTEX.eif_thr_mutex_create */
extern T14 T158f4(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.class_keyword */
extern T0* T94f91(GE_context* ac, T0* C);
/* ET_KEYWORD.make_class */
extern T0* T539c39(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_procedures */
extern T0* T94f90(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.make_with_capacity */
extern T0* T352c8(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PROCEDURE].make */
extern T0* T1576f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_PROCEDURE].make_empty */
extern T0* T1575c5(GE_context* ac, T6 a1);
/* ET_PROCEDURE_LIST.fixed_array */
extern T0* T352f7(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PROCEDURE].default_create */
extern T0* T1576c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_queries */
extern T0* T94f89(GE_context* ac, T0* C);
/* ET_QUERY_LIST.make_with_capacity */
extern T0* T351c8(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_QUERY].make */
extern T0* T1574f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_QUERY].make_empty */
extern T0* T1572c5(GE_context* ac, T6 a1);
/* ET_QUERY_LIST.fixed_array */
extern T0* T351f7(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_QUERY].default_create */
extern T0* T1574c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_ancestors */
extern T0* T94f88(GE_context* ac, T0* C);
/* ET_BASE_TYPE_LIST.make_with_capacity */
extern T0* T538c7(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE].make */
extern T0* T1754f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_BASE_TYPE].make_empty */
extern T0* T1753c5(GE_context* ac, T6 a1);
/* ET_BASE_TYPE_LIST.fixed_array */
extern T0* T538f5(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE].default_create */
extern T0* T1754c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.unknown_class_name */
extern T0* T94f87(GE_context* ac, T0* C);
/* ET_CLASS.tokens */
extern T0* T95f159(GE_context* ac, T0* C);
/* GEC.tokens */
extern T0* T25f45(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.record_end_time */
extern void T81f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.print_time */
extern void T81f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STDOUT_FILE.put_line */
extern void T162f9(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.out */
extern T0* T372f9(GE_context* ac, T0* C);
/* DT_DATE_TIME_DURATION.append_to_string */
extern void T372f18(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.append_time_to_string */
extern void T372f23(GE_context* ac, T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.append_decimal_integer */
extern void T313f6(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DT_DATE_TIME_DURATION.integer_ */
extern T0* T372f14(GE_context* ac, T0* C);
/* DT_DATE_TIME_DURATION.append_date_to_string */
extern void T372f22(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.set_canonical */
extern void T372f17(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.make_canonical_from_dates */
extern void T372f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.make_precise */
extern void T372f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise */
extern T0* T372c16(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise_time_duration */
extern void T372f20(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_DATE_TIME_DURATION.make_date_duration */
extern void T372f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.days_in_current_month */
extern T6 T355f43(GE_context* ac, T0* C);
/* DT_DATE_TIME.days_in_month */
extern T6 T355f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.leap_year */
extern T1 T355f38(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.days_in_previous_month */
extern T6 T355f42(GE_context* ac, T0* C);
/* DT_DATE_TIME.is_less */
extern T1 T355f41(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.millisecond_count */
extern T6 T355f40(GE_context* ac, T0* C);
/* DT_DATE_TIME.day */
extern T6 T355f10(GE_context* ac, T0* C);
/* DT_DATE_TIME.month */
extern T6 T355f9(GE_context* ac, T0* C);
/* DT_DATE_TIME.year */
extern T6 T355f8(GE_context* ac, T0* C);
/* DT_DATE_TIME.add_duration */
extern void T355f62(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.add_milliseconds */
extern void T355f66(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_normalized_time_storage */
extern void T355f69(GE_context* ac, T0* C, T7 a1);
/* DT_DATE_TIME.add_days */
extern void T355f70(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_from_epoch_days */
extern void T355f68(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_year_month_day */
extern void T355f57(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_to_y2k_days */
extern T6 T355f46(GE_context* ac, T0* C);
/* DT_DATE_TIME.epoch_days */
extern T6 T355f11(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_days_at_month */
extern T6 T355f24(GE_context* ac, T0* C);
/* DT_DATE_TIME.days_at_month */
extern T6 T355f23(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.epoch_leap_years */
extern T6 T355f22(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.div */
extern T6 T313f2(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.integer_ */
extern T0* T355f21(GE_context* ac, T0* C);
/* DT_DATE_TIME.set_day */
extern void T355f67(GE_context* ac, T0* C, T6 a1);
/* INTEGER_64.to_integer */
extern T6 T7f7(GE_context* ac, T7* C);
/* DT_DATE_TIME_DURATION.millisecond_count */
extern T6 T372f15(GE_context* ac, T0* C);
/* DT_DATE_TIME.add_years_months_days */
extern void T355f65(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_time */
extern void T355f61(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.set_date */
extern void T355f60(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.tmp_date_time */
extern T0* T372f8(GE_context* ac, T0* C);
/* DT_DATE_TIME.make */
extern T0* T355c59(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* DT_DATE_TIME.make_time */
extern void T355f64(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.make_date */
extern void T355f63(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.minus */
extern T0* T355f12(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.duration */
extern T0* T355f16(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.millisecond */
extern T6 T355f7(GE_context* ac, T0* C);
/* DT_DATE_TIME.second */
extern T6 T355f6(GE_context* ac, T0* C);
/* DT_DATE_TIME.minute */
extern T6 T355f5(GE_context* ac, T0* C);
/* DT_DATE_TIME.hour */
extern T6 T355f4(GE_context* ac, T0* C);
/* DT_DATE_TIME.day_count */
extern T6 T355f3(GE_context* ac, T0* C);
/* DT_SYSTEM_CLOCK.date_time_now */
extern T0* T354f10(GE_context* ac, T0* C);
/* DT_SYSTEM_CLOCK.set_date_time_to_now */
extern void T354f12(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.set_precise_hour_minute_second */
extern void T355f58(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_SYSTEM_CLOCK.set_local_time */
extern void T354f13(GE_context* ac, T0* C);
/* C_DATE.second_now */
extern T6 T850f6(GE_context* ac, T0* C);
/* C_DATE.get_tm_sec */
extern T6 T850f13(GE_context* ac, T0* C, T14 a1);
/* C_DATE.minute_now */
extern T6 T850f5(GE_context* ac, T0* C);
/* C_DATE.get_tm_min */
extern T6 T850f12(GE_context* ac, T0* C, T14 a1);
/* C_DATE.hour_now */
extern T6 T850f4(GE_context* ac, T0* C);
/* C_DATE.get_tm_hour */
extern T6 T850f11(GE_context* ac, T0* C, T14 a1);
/* C_DATE.day_now */
extern T6 T850f15(GE_context* ac, T0* C);
/* C_DATE.get_tm_mday */
extern T6 T850f10(GE_context* ac, T0* C, T14 a1);
/* C_DATE.month_now */
extern T6 T850f8(GE_context* ac, T0* C);
/* C_DATE.get_tm_mon */
extern T6 T850f9(GE_context* ac, T0* C, T14 a1);
/* C_DATE.year_now */
extern T6 T850f7(GE_context* ac, T0* C);
/* C_DATE.get_tm_year */
extern T6 T850f14(GE_context* ac, T0* C, T14 a1);
/* C_DATE.update */
extern void T850f23(GE_context* ac, T0* C);
/* POINTER.memory_free */
extern void T14f11(GE_context* ac, T14* C);
/* POINTER.default_pointer */
extern T14 T14f8(GE_context* ac, T14* C);
/* POINTER.c_free */
extern void T14f13(GE_context* ac, T14* C, T14 a1);
/* C_DATE.get_millitm */
extern T6 T850f21(GE_context* ac, T0* C, T14 a1);
/* C_DATE.tm_structure_size */
extern T6 T850f20(GE_context* ac, T0* C);
/* C_DATE.localtime */
extern T14 T850f19(GE_context* ac, T0* C, T14 a1);
/* C_DATE.gmtime */
extern T14 T850f18(GE_context* ac, T0* C, T14 a1);
/* C_DATE.get_time */
extern void T850f25(GE_context* ac, T0* C, T14 a1, T14 a2);
/* C_DATE.ftime */
extern void T850f24(GE_context* ac, T0* C, T14 a1);
/* C_DATE.time_t_structure_size */
extern T6 T850f17(GE_context* ac, T0* C);
/* C_DATE.timeb_structure_size */
extern T6 T850f16(GE_context* ac, T0* C);
/* C_DATE.default_create */
extern T0* T850c22(GE_context* ac);
/* DT_DATE_TIME.make_from_storage */
extern T0* T355c56(GE_context* ac, T6 a1, T6 a2);
/* DT_SHARED_SYSTEM_CLOCK.system_clock */
extern T0* T353f1(GE_context* ac, T0* C);
/* DT_SYSTEM_CLOCK.make */
extern T0* T354c11(GE_context* ac);
/* DT_SHARED_SYSTEM_CLOCK.default_create */
extern T0* T353c2(GE_context* ac);
/* ET_SYSTEM_PROCESSOR.stop_requested */
extern T1 T81f42(GE_context* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.record_end_time */
extern void T87f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.print_time */
extern void T87f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.stop_requested */
extern T1 T87f40(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile */
extern void T80f76(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.compile_system */
extern void T80f79(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.build_dynamic_type_sets */
extern void T80f83(GE_context* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T319f19(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T91f95(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_validity */
extern void T91f99(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_call_validity */
extern void T91f104(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_target_validity */
extern void T91f106(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f106ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.seeded_dynamic_feature */
extern T0* T429f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.seeded_dynamic_feature */
extern T0* T424f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_catcall_error */
extern void T91f110(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_catcall_error */
extern void T53f202(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info_message */
extern void T53f184(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_eiffel_error */
extern void T53f190(GE_context* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_catcall_error */
extern void T36f201(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info_message */
extern void T36f183(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_eiffel_error */
extern void T36f189(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.append_catcall_error_message */
extern void T91f111(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.position */
extern T0* T429f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.position */
extern T0* T424f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.string_ */
extern T0* T91f57(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.shared_error_message */
extern T0* T91f56(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_feature_dynamic_type_sets */
extern void T91f98(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.wipe_out */
extern void T373f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].wipe_out */
extern void T507f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T507f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T507f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T507f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T507f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T507f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].set_next_cursor */
extern void T1359f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].set_after */
extern void T1359f7(GE_context* ac, T0* C);
/* [attached] DS_CELL [[attached] INTEGER_32].put */
extern void T506f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_built */
extern void T416f41(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_built */
extern void T332f39(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_validity */
extern void T91f102(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE.wipe_out */
extern void T523f12(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].wipe_out */
extern void T1395f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].slots_wipe_out */
extern void T1395f55(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].clashes_wipe_out */
extern void T1395f54(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].key_storage_wipe_out */
extern void T1395f53(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].item_storage_wipe_out */
extern void T1395f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].unset_found_item */
extern void T1395f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].move_all_cursors_after */
extern void T1395f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32].set_next_cursor */
extern void T1972f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32].set_after */
extern void T1972f10(GE_context* ac, T0* C);
/* ET_ACROSS_CURSOR_SCOPE.wipe_out */
extern void T522f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].wipe_out */
extern void T1394f11(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT].keep_head */
extern void T1392f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT].set_count */
extern void T1392f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].move_all_cursors_after */
extern void T1394f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ACROSS_COMPONENT].set_next_cursor */
extern void T1970f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ACROSS_COMPONENT].set_after */
extern void T1970f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].wipe_out */
extern void T521f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].slots_wipe_out */
extern void T521f53(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].clashes_wipe_out */
extern void T521f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].key_storage_wipe_out */
extern void T521f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].item_storage_wipe_out */
extern void T521f50(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT].keep_head */
extern void T1375f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT].set_count */
extern void T1375f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].unset_found_item */
extern void T521f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].move_all_cursors_after */
extern void T521f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].set_next_cursor */
extern void T1388f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].set_after */
extern void T1388f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].forth */
extern void T521f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].cursor_forth */
extern void T521f47(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].add_traversing_cursor */
extern void T521f56(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].set_position */
extern void T1388f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].remove_traversing_cursor */
extern void T521f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].clashes_item */
extern T6 T521f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].item_for_iteration */
extern T0* T521f23(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].cursor_item */
extern T0* T521f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].item_storage_item */
extern T0* T521f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].after */
extern T1 T521f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].cursor_after */
extern T1 T521f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].after */
extern T1 T1388f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].start */
extern void T521f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].cursor_start */
extern void T521f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].cursor_off */
extern T1 T521f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].off */
extern T1 T1388f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].is_empty */
extern T1 T521f27(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.wipe_out */
extern void T519f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].wipe_out */
extern void T1387f11(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_NAMED_OBJECT_TEST].keep_head */
extern void T1385f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_NAMED_OBJECT_TEST].set_count */
extern void T1385f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T1387f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T1968f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NAMED_OBJECT_TEST].set_after */
extern void T1968f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].wipe_out */
extern void T518f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].slots_wipe_out */
extern void T518f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].clashes_wipe_out */
extern void T518f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].key_storage_wipe_out */
extern void T518f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].item_storage_wipe_out */
extern void T518f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].unset_found_item */
extern void T518f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T518f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T1380f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].set_after */
extern void T1380f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].forth */
extern void T518f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].cursor_forth */
extern void T518f45(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].add_traversing_cursor */
extern void T518f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].set_position */
extern void T1380f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].remove_traversing_cursor */
extern void T518f53(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].clashes_item */
extern T6 T518f33(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_context */
extern void T91f100(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.reset */
extern void T517f52(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.wipe_out */
extern void T517f54(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_TYPE].keep_head */
extern void T1379f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_TYPE].keep_head */
extern void T349f7(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_TYPE].set_count */
extern void T349f9(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.fixed_array */
extern T0* T517f4(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_TYPE].default_create */
extern T0* T1379c3(GE_context* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tokens */
extern T0* T91f67(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].force_last */
extern void T516f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT].force */
extern void T1376f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT].fill_with */
extern void T1375f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT].extend */
extern void T1375f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].resize */
extern void T516f16(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T1376f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T1375f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].new_capacity */
extern T6 T516f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].extendible */
extern T1 T516f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].item_for_iteration */
extern T0* T518f23(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].cursor_item */
extern T0* T518f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].item_storage_item */
extern T0* T518f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].after */
extern T1 T518f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].cursor_after */
extern T1 T518f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].after */
extern T1 T1380f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].start */
extern void T518f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].cursor_start */
extern void T518f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].cursor_off */
extern T1 T518f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].off */
extern T1 T1380f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].is_empty */
extern T1 T518f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_preconditions_attachment_scope */
extern void T91f105(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_attachment_scope */
extern void T91f109(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].force_last */
extern void T525f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE].force */
extern void T1399f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ATTACHMENT_SCOPE].fill_with */
extern void T1398f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ATTACHMENT_SCOPE].extend */
extern void T1398f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].resize */
extern void T525f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T1399f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T1398f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].new_capacity */
extern T6 T525f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].extendible */
extern T1 T525f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].forth */
extern void T530f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].cursor_forth */
extern void T530f51(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].add_traversing_cursor */
extern void T530f58(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].set_next_cursor */
extern void T1406f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].set_position */
extern void T1406f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].remove_traversing_cursor */
extern void T530f57(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].set_after */
extern void T1406f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].clashes_item */
extern T6 T530f28(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE.merge_scope */
extern void T523f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].forth */
extern void T1395f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].cursor_forth */
extern void T1395f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].add_traversing_cursor */
extern void T1395f69(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32].set_position */
extern void T1972f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].remove_traversing_cursor */
extern void T1395f68(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].clashes_item */
extern T6 T1395f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].remove */
extern void T1395f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].remove_position */
extern void T1395f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].key_storage_put */
extern void T1395f75(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].item_storage_put */
extern void T1395f74(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].key_storage_keep_head */
extern void T1395f73(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].item_storage_keep_head */
extern void T1395f72(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].clashes_put */
extern void T1395f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].slots_put */
extern void T1395f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].move_cursors_forth */
extern void T1395f71(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].internal_set_key_equality_tester */
extern void T1395f70(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].key_equality_tester */
extern T0* T1395f23(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].slots_item */
extern T6 T1395f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].hash_position */
extern T6 T1395f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].key_storage_item */
extern T6 T1395f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].item_storage_item */
extern T6 T1395f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].search_position */
extern void T1395f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].has */
extern T1 T1395f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].item_for_iteration */
extern T6 T1395f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].cursor_item */
extern T6 T1395f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].after */
extern T1 T1395f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].cursor_after */
extern T1 T1395f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32].after */
extern T1 T1972f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].start */
extern void T1395f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].cursor_start */
extern void T1395f58(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].cursor_off */
extern T1 T1395f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32].off */
extern T1 T1972f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].is_empty */
extern T1 T1395f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].is_last */
extern T1 T530f25(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].cursor_is_last */
extern T1 T530f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].is_empty */
extern T1 T530f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].item_for_iteration */
extern T0* T530f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].cursor_item */
extern T0* T530f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].item_storage_item */
extern T0* T530f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].start */
extern void T530f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].cursor_start */
extern void T530f50(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].cursor_off */
extern T1 T530f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].off */
extern T1 T1406f5(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.copy_scope */
extern void T523f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].append_last */
extern void T1395f40(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].extend_last */
extern void T1395f57(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32].forth */
extern void T1972f14(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].put_last */
extern void T1395f67(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].compress */
extern void T1395f76(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].move_all_cursors */
extern void T1395f77(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32].item */
extern T6 T1972f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32].start */
extern void T1972f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].new_cursor */
extern T0* T1395f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32].make */
extern T0* T1972c9(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].resize */
extern void T1395f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].clashes_resize */
extern void T1395f66(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].special_integer_ */
extern T0* T1395f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].key_storage_resize */
extern void T1395f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].item_storage_resize */
extern void T1395f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].slots_resize */
extern void T1395f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].new_modulus */
extern T6 T1395f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].new_capacity */
extern T6 T1395f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].extendible */
extern T1 T1395f18(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_attachment_scope */
extern T0* T91f85(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].remove_last */
extern void T525f13(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_ATTACHMENT_SCOPE].keep_head */
extern void T1398f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ATTACHMENT_SCOPE].set_count */
extern void T1398f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].move_last_cursors_after */
extern void T525f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ATTACHMENT_SCOPE].set_next_cursor */
extern void T1400f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ATTACHMENT_SCOPE].set_after */
extern void T1400f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].last */
extern T0* T525f6(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.make */
extern T0* T523c11(GE_context* ac);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].make */
extern T0* T1395c38(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].set_internal_cursor */
extern void T1395f50(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].make_slots */
extern void T1395f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].make_clashes */
extern void T1395f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].make_key_storage */
extern void T1395f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].make_item_storage */
extern void T1395f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].is_empty */
extern T1 T525f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_assertions_attachment_scope */
extern void T91f108(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.build_scope */
extern void T524f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.assertion */
extern T0* T529f9(GE_context* ac, T0* C, T6 a1);
/* ET_PRECONDITIONS.item */
extern T0* T529f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].first */
extern T0* T530f20(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].force_last */
extern void T530f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].key_storage_put */
extern void T530f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].slots_put */
extern void T530f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].clashes_put */
extern void T530f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].slots_item */
extern T6 T530f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].hash_position */
extern T6 T530f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].resize */
extern void T530f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].clashes_resize */
extern void T530f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].special_integer_ */
extern T0* T530f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].key_storage_resize */
extern void T530f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].item_storage_resize */
extern void T530f54(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS].aliased_resized_area */
extern T0* T1409f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ASSERTIONS].aliased_resized_area */
extern T0* T1407f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].key_storage_item */
extern T0* T530f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].slots_resize */
extern void T530f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].new_modulus */
extern T6 T530f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].new_capacity */
extern T6 T530f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].item_storage_put */
extern void T530f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS].force */
extern void T1409f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ASSERTIONS].fill_with */
extern void T1407f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ASSERTIONS].extend */
extern void T1407f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].search_position */
extern void T530f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].unset_found_item */
extern void T530f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.add_precursors_with_preconditions_recursive */
extern void T91f107(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_LIST.item */
extern T0* T533f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_map */
extern T0* T530c38(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_with_equality_testers */
extern void T530f42(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_sparse_container */
extern void T530f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].set_internal_cursor */
extern void T530f63(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].new_cursor */
extern T0* T530f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make */
extern T0* T1406c7(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_slots */
extern void T530f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_clashes */
extern void T530f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_key_storage */
extern void T530f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_item_storage */
extern void T530f59(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS].make */
extern T0* T1409f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ASSERTIONS].make_empty */
extern T0* T1407c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS].default_create */
extern T0* T1409c3(GE_context* ac);
/* ET_FEATURE_CHECKER.check_preconditions_validity */
extern void T505f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECONDITIONS.set_validity_error */
extern void T529f21(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.set_validity_checked */
extern void T529f20(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.free_context */
extern void T505f67(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.tokens */
extern T0* T505f41(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.keep_object_tests */
extern void T519f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].keep_first */
extern void T1387f12(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.current_system */
extern T0* T505f42(GE_context* ac, T0* C);
/* ET_CLASS.current_system */
extern T0* T95f83(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.build_scope */
extern void T520f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwbe0a_error */
extern void T53f208(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_validity_error */
extern void T53f203(GE_context* ac, T0* C, T0* a1);
/* KL_STANDARD_FILES.output */
extern T0* T160f2(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.make */
extern T0* T162c5(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.report_info */
extern void T53f182(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vwbe0a */
extern T0* T1418c783(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.set_compilers */
extern void T1418f784(GE_context* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.filename */
extern T0* T1418f21(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.default_message_template */
extern T0* T1418f19(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.null_position */
extern T0* T1418f12(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.make_default */
extern T0* T241c12(GE_context* ac);
/* ET_VALIDITY_ERROR.template_code */
extern T0* T1418f15(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T53f27(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwbe0a_error */
extern void T36f207(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_validity_error */
extern void T36f202(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info */
extern void T36f181(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T36f26(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_type */
extern T1 T517f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_expression_validity */
extern void T505f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_expression_supplier */
extern void T505f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_expression_supplier */
extern void T1250f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.add_supplier */
extern void T1250f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].force_last */
extern void T866f67(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].slots_put */
extern void T866f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].clashes_put */
extern void T866f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].slots_item */
extern T6 T866f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].hash_position */
extern T6 T866f30(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.hash_code */
extern T6 T672f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].resize */
extern void T866f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].clashes_resize */
extern void T866f72(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].special_integer_ */
extern T0* T866f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].key_storage_resize */
extern void T866f71(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].item_storage_resize */
extern void T866f70(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1882f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1880f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].key_storage_item */
extern T0* T866f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].item_storage_item */
extern T0* T866f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].clashes_item */
extern T6 T866f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].slots_resize */
extern void T866f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].new_modulus */
extern T6 T866f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].new_capacity */
extern T6 T866f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].item_storage_put */
extern void T866f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS].force */
extern void T1882f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_NAMED_CLASS].fill_with */
extern void T1880f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_NAMED_CLASS].extend */
extern void T1880f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].search_position */
extern void T866f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].key_equality_tester */
extern T0* T866f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].unset_found_item */
extern void T866f46(GE_context* ac, T0* C);
/* ET_CLASS.is_none */
extern T1 T95f163(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.actual_class */
extern T0* T672f23(GE_context* ac, T0* C);
/* ET_CLASS.actual_class */
extern T0* T95f61(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.count */
extern T6 T519f3(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.new_context */
extern T0* T505f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].remove_last */
extern void T516f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].move_last_cursors_after */
extern void T516f17(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT].set_next_cursor */
extern void T1377f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT].set_after */
extern void T1377f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].last */
extern T0* T516f6(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.make_with_capacity */
extern T0* T517c51(GE_context* ac, T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.make_ast_list_with_capacity */
extern void T517f53(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_TYPE].make */
extern T0* T1379f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_TYPE].make_empty */
extern T0* T349c5(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].is_empty */
extern T1 T516f10(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.current_universe_impl */
extern T0* T505f43(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.error_handler */
extern T0* T505f50(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_fatal_error */
extern void T505f68(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_feature_validity */
extern void T91f101(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_precursor */
extern T1 T332f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_current_type_needed */
extern void T416f39(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_current_type_needed */
extern void T332f38(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_dynamic_type_sets */
extern void T416f40(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.set_dynamic_type_sets */
extern void T332f35(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T319f15(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T91f91(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T319f14(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T91f90(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_assertion */
extern void T319f18(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_assertion */
extern void T91f94(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_debug */
extern void T319f17(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_debug */
extern void T91f93(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_creation */
extern void T416f37(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_creation */
extern void T332f34(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.is_creation_directly_exported_to */
extern T1 T95f103(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_directly_exported_to */
extern T1 T1537f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_directly_exported_to */
extern T1 T1625f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.has_feature_name */
extern T1 T1625f12(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.has_class */
extern T1 T2040f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT.base_class */
extern T0* T716f3(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.has_class */
extern T1 T700f6(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR.is_empty */
extern T1 T1625f11(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc5a_error */
extern void T53f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_system_error */
extern void T53f188(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc5a */
extern T0* T548c32(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T53f17(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc5a_error */
extern void T36f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_system_error */
extern void T36f187(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T36f16(GE_context* ac, T0* C);
/* ET_CLASS.named_query */
extern T0* T95f102(GE_context* ac, T0* C, T0* a1);
/* ET_QUERY_LIST.named_feature */
extern T0* T351f5(GE_context* ac, T0* C, T0* a1);
extern T1 T351f5ot1(T0* a1, T0** a2);
/* ET_CLASS.named_procedure */
extern T0* T95f101(GE_context* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.named_feature */
extern T0* T352f5(GE_context* ac, T0* C, T0* a1);
extern T1 T352f5ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vsrc1a_error */
extern void T53f194(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_vsrc1a */
extern T0* T548c31(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T53f16(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vsrc1a_error */
extern void T36f193(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T36f15(GE_context* ac, T0* C);
/* ET_CLASS.has_syntax_error */
extern T1 T95f97(GE_context* ac, T0* C);
/* ET_CLASS.is_parsed */
extern T1 T95f96(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc4a_error */
extern void T53f186(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc4a */
extern T0* T548c28(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T53f12(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc4a_error */
extern void T36f185(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T36f12(GE_context* ac, T0* C);
/* ET_CLASS.is_preparsed */
extern T1 T95f212(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc6a_error */
extern void T53f193(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_ERROR.make_gvsrc6a */
extern T0* T548c30(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T53f15(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc6a_error */
extern void T36f192(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T36f14(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_create_feature_name */
extern T0* T94f4(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc3a_error */
extern void T53f192(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.make_gvsrc3a */
extern T0* T548c29(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T53f14(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc3a_error */
extern void T36f191(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T36f13(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.error_handler */
extern T0* T80f65(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile_kernel */
extern void T80f81(GE_context* ac, T0* C, T0* a1);
extern T1 T80f81ot1(T0* a1, T0** a2);
/* ET_TOKEN_CONSTANTS.set_exception_data_feature_name */
extern T0* T94f20(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.once_raise_feature_name */
extern T0* T94f19(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.last_exception_feature_name */
extern T0* T94f18(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.init_exception_manager_feature_name */
extern T0* T94f17(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe6a_error */
extern void T53f201(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkfe6a */
extern T0* T1418c779(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [attached] ARRAY [[attached] ET_TYPE].item */
extern T0* T348f4(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T53f23(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe6a_error */
extern void T36f200(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T36f22(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe4a_error */
extern void T53f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe4a */
extern T0* T1418c778(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T53f22(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe4a_error */
extern void T36f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T36f21(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_rout_disp_final_feature_name */
extern T0* T94f16(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.rout_disp_feature_name */
extern T0* T94f15(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.closed_operands_feature_name */
extern T0* T94f14(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_pointer_feature_name */
extern T0* T94f11(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_item_feature_name */
extern T0* T94f10(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.older_ise_version */
extern T1 T81f44(GE_context* ac, T0* C, T0* a1);
/* UT_VERSION.is_less */
extern T1 T88f10(GE_context* ac, T0* C, T0* a1);
/* UT_VERSION.build */
extern T6 T88f9(GE_context* ac, T0* C);
/* UT_VERSION.has_build */
extern T1 T88f8(GE_context* ac, T0* C);
/* UT_VERSION.revision */
extern T6 T88f7(GE_context* ac, T0* C);
/* UT_VERSION.has_revision */
extern T1 T88f6(GE_context* ac, T0* C);
/* UT_VERSION.minor */
extern T6 T88f5(GE_context* ac, T0* C);
/* UT_VERSION.has_minor */
extern T1 T88f13(GE_context* ac, T0* C);
/* UT_VERSION.major */
extern T6 T88f12(GE_context* ac, T0* C);
/* UT_VERSION.has_major */
extern T1 T88f11(GE_context* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.older_ise_version */
extern T1 T87f44(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.ise_6_0_6_7057 */
extern T0* T80f66(GE_context* ac, T0* C);
/* UT_VERSION.make */
extern T0* T88c17(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_TOKEN_CONSTANTS.upper_feature_name */
extern T0* T94f9(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.lower_feature_name */
extern T0* T94f8(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.area_feature_name */
extern T0* T94f7(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.capacity_feature_name */
extern T0* T94f6(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe3a_error */
extern void T53f199(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvkfe3a */
extern T0* T1418c777(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T53f21(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe3a_error */
extern void T36f198(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T36f20(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe1a_error */
extern void T53f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe1a */
extern T0* T1418c776(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T53f20(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe1a_error */
extern void T36f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T36f19(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe2a_error */
extern void T53f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe2a */
extern T0* T1418c775(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T53f19(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe2a_error */
extern void T36f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T36f18(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.count_feature_name */
extern T0* T94f5(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvknl1a_error */
extern void T53f196(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvknl1a */
extern T0* T548c33(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T53f18(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvknl1a_error */
extern void T36f195(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T36f17(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.compile_degree_6 */
extern void T81f59(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_6_metrics */
extern void T81f71(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_6 */
extern void T87f61(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_6_metrics */
extern void T87f73(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.activate_dynamic_type_set_builder */
extern void T80f80(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.compile_all */
extern void T80f78(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.compile_all */
extern T0* T80f78ac1(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]].set_rout_disp_final */
extern void T317f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_DYNAMIC_SYSTEM.compile_all_features */
extern void T80f82(GE_context* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.item */
extern T0* T352f6(GE_context* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.item */
extern T0* T351f6(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM_PROCESSOR.compile_all */
extern void T81f58(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_PROCESSOR.compile_all */
extern T0* T81f58ac1(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].force_last */
extern void T365f16(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS].force */
extern void T1252f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CLASS].fill_with */
extern void T1251f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CLASS].extend */
extern void T1251f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].resize */
extern void T365f20(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS].aliased_resized_area */
extern T0* T1252f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_CLASS].aliased_resized_area */
extern T0* T1251f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].new_capacity */
extern T6 T365f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].extendible */
extern T1 T365f7(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM_PROCESSOR.compile_classes */
extern void T81f66(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_3 */
extern void T81f84(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_3_metrics */
extern void T81f96(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_metrics */
extern void T81f104(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.report_processor_metrics */
extern void T81f105(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM_PROCESSOR.report_processed_class_count_stack */
extern void T81f106(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.total_processed_class_count */
extern T6 T81f39(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_implementation_internal_error */
extern void T81f95(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].item */
extern T0* T365f9(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM_PROCESSOR.check_implementation_validity */
extern void T81f94(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.reset_processed_class_count */
extern void T81f103(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.reset_total_processed_class_count */
extern void T81f102(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_ast_processor */
extern T0* T94f25(GE_context* ac, T0* C);
/* ET_AST_NULL_PROCESSOR.make */
extern T0* T367c1(GE_context* ac);
/* ET_SYSTEM_PROCESSOR.tokens */
extern T0* T81f45(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.compile_degree_4 */
extern void T81f83(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_4_metrics */
extern void T81f93(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_interface_internal_error */
extern void T81f92(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.check_interface_validity */
extern void T81f91(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.features_flattened */
extern T1 T95f55(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_flattening_internal_error */
extern void T81f90(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.flatten_features */
extern void T81f89(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.ancestors_built */
extern T1 T95f112(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_ancestors_internal_error */
extern void T81f88(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.build_ancestors */
extern void T81f87(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_5 */
extern void T81f82(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_PROCESSOR.check_provider_validity */
extern void T81f86(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_5_2 */
extern void T81f85(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_PROCESSOR.report_degree_5_2_metrics */
extern void T81f101(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_syntax_internal_error */
extern void T81f100(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.parse_classes */
extern void T81f99(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.remove_unmarked_classes */
extern void T81f98(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].keep_first */
extern void T365f18(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CLASS].keep_head */
extern void T1251f7(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CLASS].set_count */
extern void T1251f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].move_all_cursors_after */
extern void T365f21(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].set_next_cursor */
extern void T1253f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].set_after */
extern void T1253f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].replace */
extern void T365f17(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_CLASS.is_marked */
extern T1 T95f173(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.parse_marked_classes */
extern void T81f97(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.nested_benchmark_start_time */
extern T0* T81f43(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].make */
extern T0* T365c15(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].set_internal_cursor */
extern void T365f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].new_cursor */
extern T0* T365f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].make */
extern T0* T1253c9(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS].make */
extern T0* T1252f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CLASS].make_empty */
extern T0* T1251c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS].default_create */
extern T0* T1252c3(GE_context* ac);
/* ET_SYSTEM_MULTIPROCESSOR.compile_all */
extern void T87f60(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.compile_all */
extern T0* T87f60ac1(GE_context* ac, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_classes */
extern void T87f68(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_3 */
extern void T87f84(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_3_metrics */
extern void T87f99(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_metrics */
extern void T87f107(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.report_processor_metrics_recursive */
extern void T87f108(GE_context* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.report_processor_metrics */
extern void T87f109(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_processed_class_count_stack */
extern void T87f110(GE_context* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.total_processed_class_count */
extern T6 T87f42(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_SYSTEM_PROCESSOR].item */
extern T0* T501f7(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM_MULTIPROCESSOR.total_processed_class_count_recursive */
extern T6 T87f41(GE_context* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.set_implementation_internal_error */
extern void T87f98(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.check_implementation_validity */
extern void T87f97(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.check_implementation_validity */
extern T0* T87f97ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.check_implementation_validity */
extern void T87f97p1(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.reset_processed_class_count */
extern void T87f106(GE_context* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.reset_total_processed_class_count */
extern void T87f105(GE_context* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.tokens */
extern T0* T87f45(GE_context* ac, T0* C);
/* WORKER_THREAD.launch */
extern void T502f10(GE_context* ac, T0* C);
/* WORKER_THREAD.launch_with_attributes */
extern void T502f12(GE_context* ac, T0* C, T0* a1);
/* WORKER_THREAD.last_created_thread */
extern T14 T502f6(GE_context* ac, T0* C);
/* WORKER_THREAD.thr_set_terminated */
extern void T502f14(GE_context* ac, T0* C, T1 a1);
/* WORKER_THREAD.thr_set_terminated */
extern void T502a14(T0* C, T1 a1);
/* WORKER_THREAD.thr_main */
extern void T502f13(GE_context* ac, T0* C, T6 a1);
/* WORKER_THREAD.thr_main */
extern void T502a13(T0* C, T6 a1);
/* WORKER_THREAD.execute_procedure */
extern void T502f16(GE_context* ac, T0* C);
/* WORKER_THREAD.default_pointer */
extern T14 T502f8(GE_context* ac, T0* C);
/* WORKER_THREAD.create_thread_with_attr */
extern void T502f15(GE_context* ac, T0* C, T0* a1, T14 a2, T14 a3, T14 a4);
/* THREAD_ATTRIBUTES.item */
extern T14 T1352f4(GE_context* ac, T0* C);
/* WORKER_THREAD.is_launchable */
extern T1 T502f5(GE_context* ac, T0* C);
/* MUTEX.is_set */
extern T1 T158f3(GE_context* ac, T0* C);
/* [attached] CELL [[attached] BOOLEAN].put */
extern void T1353f2(GE_context* ac, T0* C, T1 a1);
/* [attached] CELL [[attached] BOOLEAN].put */
extern T0* T1353c2(GE_context* ac, T1 a1);
/* WORKER_THREAD.is_last_launch_successful_cell */
extern T0* T502f7(GE_context* ac, T0* C);
/* THREAD_ATTRIBUTES.make */
extern T0* T1352c7(GE_context* ac);
/* THREAD_ATTRIBUTES.set_priority */
extern void T1352f9(GE_context* ac, T0* C, T6 a1);
/* THREAD_ATTRIBUTES.c_set_priority */
extern void T1352f10(GE_context* ac, T0* C, T14 a1, T6 a2);
/* THREAD_ATTRIBUTES.default_priority */
extern T6 T1352f5(GE_context* ac, T0* C);
/* THREAD_ATTRIBUTES.mem_make */
extern void T1352f8(GE_context* ac, T0* C);
/* THREAD_ATTRIBUTES.structure_size */
extern T6 T1352f6(GE_context* ac, T0* C);
/* WORKER_THREAD.make */
extern T0* T502c9(GE_context* ac, T0* a1);
/* WORKER_THREAD.thread_make */
extern void T502f11(GE_context* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_4 */
extern void T87f83(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_4_metrics */
extern void T87f96(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_interface_internal_error */
extern void T87f95(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.check_interface_validity */
extern void T87f94(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flattening_internal_error */
extern void T87f93(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.flatten_features */
extern void T87f92(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_ancestors_internal_error */
extern void T87f91(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.build_ancestors */
extern void T87f90(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_5 */
extern void T87f82(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_MULTIPROCESSOR.check_provider_validity */
extern void T87f89(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_5_2 */
extern void T87f88(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_5_2_metrics */
extern void T87f104(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_syntax_internal_error */
extern void T87f103(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.parse_classes */
extern void T87f102(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.parse_classes */
extern T0* T87f102ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.parse_classes */
extern void T87f102p1(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.remove_unmarked_classes */
extern void T87f101(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.parse_marked_classes */
extern void T87f100(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.parse_marked_classes */
extern T0* T87f100ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.parse_marked_classes */
extern void T87f100p1(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.nested_benchmark_start_time */
extern T0* T87f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_dynamic_type_set_builder */
extern void T80f75(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern T0* T91c89(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_CELL [[attached] INTEGER_32].make */
extern T0* T506c2(GE_context* ac, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_feature */
extern T0* T91f84(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_feature */
extern T0* T91f68(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern T0* T596c77(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DEFERRED_PROCEDURE.make */
extern void T596f77p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.deferred_keyword */
extern T0* T94f724(GE_context* ac, T0* C);
/* ET_KEYWORD.make_deferred */
extern T0* T539c87(GE_context* ac);
/* ET_DEFERRED_PROCEDURE.tokens */
extern T0* T596f57(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_type */
extern T0* T91f66(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.make */
extern T0* T505c65(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].make */
extern T0* T526c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].set_internal_cursor */
extern void T526f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].new_cursor */
extern T0* T526f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INDEXING_TERM].make */
extern T0* T1405c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM].make */
extern T0* T1402f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_INDEXING_TERM].make_empty */
extern T0* T1404c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM].default_create */
extern T0* T1402c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].make */
extern T0* T525c11(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].set_internal_cursor */
extern void T525f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].new_cursor */
extern T0* T525f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ATTACHMENT_SCOPE].make */
extern T0* T1400c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE].make */
extern T0* T1399f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ATTACHMENT_SCOPE].make_empty */
extern T0* T1398c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE].default_create */
extern T0* T1399c3(GE_context* ac);
/* ET_ATTACHMENT_SCOPE_BUILDER.make */
extern T0* T524c3(GE_context* ac);
/* ET_ACROSS_CURSOR_SCOPE.make */
extern T0* T522c6(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].make */
extern T0* T1394c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].set_internal_cursor */
extern void T1394f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].new_cursor */
extern T0* T1394f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ACROSS_COMPONENT].make */
extern T0* T1970c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT].make */
extern T0* T1393f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT].make_empty */
extern T0* T1392c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT].default_create */
extern T0* T1393c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_map */
extern T0* T521c41(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_with_equality_testers */
extern void T521f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_sparse_container */
extern void T521f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].set_internal_cursor */
extern void T521f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].new_cursor */
extern T0* T521f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make */
extern T0* T1388c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_slots */
extern void T521f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].new_modulus */
extern T6 T521f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_clashes */
extern void T521f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_key_storage */
extern void T521f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_item_storage */
extern void T521f57(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT].make */
extern T0* T1376f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT].make_empty */
extern T0* T1375c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT].default_create */
extern T0* T1376c3(GE_context* ac);
/* ET_OBJECT_TEST_SCOPE_BUILDER.make */
extern T0* T520c8(GE_context* ac, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.tokens */
extern T0* T520f6(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.make */
extern T0* T519c6(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].make */
extern T0* T1387c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T1387f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T1387f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NAMED_OBJECT_TEST].make */
extern T0* T1968c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST].make */
extern T0* T1386f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_NAMED_OBJECT_TEST].make_empty */
extern T0* T1385c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST].default_create */
extern T0* T1386c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_map */
extern T0* T518c39(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_with_equality_testers */
extern void T518f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_sparse_container */
extern void T518f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T518f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T518f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make */
extern T0* T1380c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_slots */
extern void T518f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].new_modulus */
extern T6 T518f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_clashes */
extern void T518f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_key_storage */
extern void T518f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_item_storage */
extern void T518f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].make */
extern T0* T516c12(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].set_internal_cursor */
extern void T516f15(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].new_cursor */
extern T0* T516f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT].make */
extern T0* T1377c5(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].make */
extern T0* T515c11(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].set_internal_cursor */
extern void T515f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].new_cursor */
extern T0* T515f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].make */
extern T0* T1374c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].make */
extern T0* T1371f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].make_empty */
extern T0* T1373c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].default_create */
extern T0* T1371c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].make */
extern T0* T514c11(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].set_internal_cursor */
extern void T514f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].new_cursor */
extern T0* T514f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].make */
extern T0* T1370c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].make */
extern T0* T1368f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].make_empty */
extern T0* T1369c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].default_create */
extern T0* T1368c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].make */
extern T0* T513c11(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].set_internal_cursor */
extern void T513f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].new_cursor */
extern T0* T513f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].make */
extern T0* T1367c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].make */
extern T0* T1365f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].make_empty */
extern T0* T1366c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].default_create */
extern T0* T1365c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].make */
extern T0* T512c12(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].set_internal_cursor */
extern void T512f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].new_cursor */
extern T0* T512f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INLINE_AGENT].make */
extern T0* T1364c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_AGENT].make */
extern T0* T1361f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_INLINE_AGENT].make_empty */
extern T0* T1363c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_AGENT].default_create */
extern T0* T1361c3(GE_context* ac);
/* ET_FEATURE_CHECKER.dummy_feature */
extern T0* T505f47(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.make */
extern T0* T510c18(GE_context* ac, T0* a1);
/* ET_TYPE_CHECKER.dummy_feature */
extern T0* T510f12(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.tokens */
extern T0* T510f17(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.make */
extern void T510f18p1(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.make */
extern void T505f65p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make_feature_checker */
extern void T91f96(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_context */
extern T0* T91f62(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern void T91f96p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_new_instance_types */
extern void T80f74(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_catcall_warning_mode */
extern void T80f73(GE_context* ac, T0* C, T1 a1);
/* GEC.catcall_warning_mode */
extern T1 T25f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_catcall_error_mode */
extern void T80f72(GE_context* ac, T0* C, T1 a1);
/* GEC.catcall_error_mode */
extern T1 T25f42(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_full_class_checking */
extern void T80f71(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_dbc_mode */
extern void T81f56(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_dbc_mode_only */
extern void T81f69(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flat_dbc_mode */
extern void T87f58(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flat_dbc_mode_only */
extern void T87f71(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_mode */
extern void T81f55(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_mode_only */
extern void T81f68(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flat_mode */
extern void T87f57(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flat_mode_only */
extern void T87f70(GE_context* ac, T0* C, T1 a1);
/* GEC.is_gelint */
extern T1 T25f41(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.make */
extern T0* T80c70(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.make */
extern T0* T80f70ac1(GE_context* ac, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.make */
extern T0* T319c13(GE_context* ac, T0* a1);
/* ET_DYNAMIC_SYSTEM.make_basic_types */
extern void T80f77(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.compile */
extern void T81f54(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_PROCESSOR.compile */
extern T0* T81f54ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM_PROCESSOR.compile */
extern T0* T81f54ac2(GE_context* ac, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_marked_classes */
extern void T81f67(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_marked */
extern void T95f251(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile */
extern void T87f56(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.compile */
extern T0* T87f56ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM_MULTIPROCESSOR.compile */
extern T0* T87f56ac2(GE_context* ac, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_marked_classes */
extern void T87f69(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.benchmark_start_time */
extern T0* T81f46(GE_context* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.benchmark_start_time */
extern T0* T87f48(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_metrics_shown */
extern void T81f53(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_metrics_shown_only */
extern void T81f65(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_metrics_shown */
extern void T87f55(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_metrics_shown_only */
extern void T87f67(GE_context* ac, T0* C, T1 a1);
/* GEC.is_metrics */
extern T1 T25f40(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_nested_benchmark_shown */
extern void T81f52(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_nested_benchmark_shown_only */
extern void T81f64(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_nested_benchmark_shown */
extern void T87f54(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_nested_benchmark_shown_only */
extern void T87f66(GE_context* ac, T0* C, T1 a1);
/* GEC.is_nested_benchmark */
extern T1 T25f39(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_benchmark_shown */
extern void T81f51(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_benchmark_shown_only */
extern void T81f63(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_benchmark_shown */
extern void T87f53(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_benchmark_shown_only */
extern void T87f65(GE_context* ac, T0* C, T1 a1);
/* GEC.is_silent */
extern T1 T25f44(GE_context* ac, T0* C);
/* GEC.is_no_benchmark */
extern T1 T25f38(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_ise_version */
extern void T81f50(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_ise_version_only */
extern void T81f62(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_default_keyword_usage_only */
extern void T81f72(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_ecma_version_only */
extern void T81f81(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_use_detachable_keyword_only */
extern void T81f80(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_attached_keyword_only */
extern void T81f79(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_reference_keyword_only */
extern void T81f78(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_note_keyword_only */
extern void T81f77(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_attribute_keyword_only */
extern void T81f76(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_ise_version */
extern void T87f52(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_ise_version_only */
extern void T87f64(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_default_keyword_usage_only */
extern void T87f81(GE_context* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.set_ecma_version_only */
extern void T87f80(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_detachable_keyword_only */
extern void T87f79(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_attached_keyword_only */
extern void T87f78(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_reference_keyword_only */
extern void T87f77(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_note_keyword_only */
extern void T87f76(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_attribute_keyword_only */
extern void T87f75(GE_context* ac, T0* C, T1 a1);
/* GEC.ise_latest */
extern T0* T25f37(GE_context* ac, T0* C);
/* UT_VERSION.make_latest */
extern T0* T88c16(GE_context* ac);
/* ET_SYSTEM_PROCESSOR.set_error_handler */
extern void T81f49(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_error_handler_only */
extern void T81f61(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_error_handler */
extern void T87f51(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_error_handler_only */
extern void T87f63(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.make */
extern T0* T81c48(GE_context* ac);
/* ET_TOKEN_CONSTANTS.standard_error_handler */
extern T0* T94f23(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.make */
extern T0* T364c13(GE_context* ac, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.make_with_feature_checker */
extern void T364f14(GE_context* ac, T0* C, T0* a1);
/* ET_SUPPLIER_BUILDER.set */
extern void T1250f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.make */
extern T0* T1250c5(GE_context* ac);
/* ET_SUPPLIER_BUILDER.dummy_suppliers */
extern T0* T1250f4(GE_context* ac, T0* C);
/* ET_SUPPLIER_BUILDER.tokens */
extern T0* T1250f3(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].make */
extern T0* T866c36(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].set_internal_cursor */
extern void T866f47(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].new_cursor */
extern T0* T866f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].make */
extern T0* T1807c9(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].make_slots */
extern void T866f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].make_clashes */
extern void T866f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].make_key_storage */
extern void T866f43(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].make_item_storage */
extern void T866f42(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS].make */
extern T0* T1882f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_NAMED_CLASS].make_empty */
extern T0* T1880c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS].default_create */
extern T0* T1882c3(GE_context* ac);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].make */
extern T0* T1249c35(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].set_internal_cursor */
extern void T1249f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].new_cursor */
extern T0* T1249f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_QUERY].make */
extern T0* T1961c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].unset_found_item */
extern void T1249f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].make_slots */
extern void T1249f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].new_modulus */
extern T6 T1249f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].make_clashes */
extern void T1249f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].make_key_storage */
extern void T1249f40(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].make_item_storage */
extern void T1249f39(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].make */
extern T0* T1248c35(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].set_internal_cursor */
extern void T1248f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].new_cursor */
extern T0* T1248f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE].make */
extern T0* T1959c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].unset_found_item */
extern void T1248f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].make_slots */
extern void T1248f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].new_modulus */
extern T6 T1248f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].make_clashes */
extern void T1248f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].make_key_storage */
extern void T1248f40(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].make_item_storage */
extern void T1248f39(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.make_class_processor */
extern void T364f15(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.tokens */
extern T0* T364f8(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.make */
extern T0* T363c15(GE_context* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern T0* T1240c6(GE_context* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern void T1240f6p1(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.tokens */
extern T0* T1240f4(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.make */
extern T0* T1231c10(GE_context* ac, T0* a1);
/* ET_SIGNATURE_CHECKER.make */
extern void T1231f10p1(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.tokens */
extern T0* T1231f6(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1227c19(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].set_key_equality_tester */
extern void T1941f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_map */
extern T0* T1941c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_with_equality_testers */
extern void T1941f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_sparse_container */
extern void T1941f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1941f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].new_cursor */
extern T0* T1941f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make */
extern T0* T2357c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].unset_found_item */
extern void T1941f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_slots */
extern void T1941f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].new_modulus */
extern T6 T1941f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_clashes */
extern void T1941f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_key_storage */
extern void T1941f58(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE].make */
extern T0* T2349f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DOTNET_FEATURE].make_empty */
extern T0* T2347c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE].default_create */
extern T0* T2349c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_item_storage */
extern void T1941f57(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].make */
extern T0* T2358f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].make_empty */
extern T0* T2352c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].default_create */
extern T0* T2358c3(GE_context* ac);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].set_equality_tester */
extern void T1939f32(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.make */
extern T0* T1938c2(GE_context* ac);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].make */
extern T0* T1939c31(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1939f42(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].new_cursor */
extern T0* T1939f25(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_FEATURE].make */
extern T0* T2348c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].unset_found_item */
extern void T1939f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].make_slots */
extern void T1939f40(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].new_modulus */
extern T6 T1939f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].make_clashes */
extern void T1939f39(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].make_key_storage */
extern void T1939f38(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].make_item_storage */
extern void T1939f37(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1227f19p1(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1227f12(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1226c25(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_map */
extern T0* T1926c42(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_with_equality_testers */
extern void T1926f49(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_sparse_container */
extern void T1926f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].set_internal_cursor */
extern void T1926f75(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].new_cursor */
extern T0* T1926f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make */
extern T0* T2330c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].unset_found_item */
extern void T1926f53(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_slots */
extern void T1926f74(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].new_modulus */
extern T6 T1926f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_clashes */
extern void T1926f73(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_key_storage */
extern void T1926f72(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_item_storage */
extern void T1926f71(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE].make */
extern T0* T2334f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_REPLICABLE_FEATURE].make_empty */
extern T0* T2331c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE].default_create */
extern T0* T2334c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].set_key_equality_tester */
extern void T1925f36(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.alias_name_tester */
extern T0* T1226f17(GE_context* ac, T0* C);
/* ET_ALIAS_NAME_TESTER.default_create */
extern T0* T1222c2(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_map */
extern T0* T1925c35(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_with_equality_testers */
extern void T1925f41(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_sparse_container */
extern void T1925f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].set_internal_cursor */
extern void T1925f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].new_cursor */
extern T0* T1925f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make */
extern T0* T2329c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].unset_found_item */
extern void T1925f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_slots */
extern void T1925f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].new_modulus */
extern T6 T1925f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_clashes */
extern void T1925f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_key_storage */
extern void T1925f59(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ALIAS_NAME].make */
extern T0* T1909f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ALIAS_NAME].make_empty */
extern T0* T1910c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ALIAS_NAME].default_create */
extern T0* T1909c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_item_storage */
extern void T1925f58(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME].make */
extern T0* T1905f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_FEATURE_NAME].make_empty */
extern T0* T1903c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME].default_create */
extern T0* T1905c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].set_key_equality_tester */
extern void T1924f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_map */
extern T0* T1924c43(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_with_equality_testers */
extern void T1924f52(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_sparse_container */
extern void T1924f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].set_internal_cursor */
extern void T1924f77(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].new_cursor */
extern T0* T1924f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME].make */
extern T0* T2322c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].unset_found_item */
extern void T1924f58(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_slots */
extern void T1924f76(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].new_modulus */
extern T6 T1924f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_clashes */
extern void T1924f75(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_key_storage */
extern void T1924f74(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME].make */
extern T0* T2319f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CALL_NAME].make_empty */
extern T0* T2317c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME].default_create */
extern T0* T2319c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_item_storage */
extern void T1924f73(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].set_equality_tester */
extern void T1923f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].make */
extern T0* T1923c37(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].set_internal_cursor */
extern void T1923f51(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].new_cursor */
extern T0* T1923f20(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME].make */
extern T0* T2320c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].unset_found_item */
extern void T1923f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].make_slots */
extern void T1923f49(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].new_modulus */
extern T6 T1923f36(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].make_clashes */
extern void T1923f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].make_key_storage */
extern void T1923f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].make_item_storage */
extern void T1923f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].set_key_equality_tester */
extern void T1920f41(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.call_name_tester */
extern T0* T1226f19(GE_context* ac, T0* C);
/* ET_CALL_NAME_TESTER.default_create */
extern T0* T1921c2(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_map */
extern T0* T1920c40(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_with_equality_testers */
extern void T1920f49(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_sparse_container */
extern void T1920f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].set_internal_cursor */
extern void T1920f79(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].new_cursor */
extern T0* T1920f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME].make */
extern T0* T2308c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].unset_found_item */
extern void T1920f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_slots */
extern void T1920f78(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].new_modulus */
extern T6 T1920f39(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_clashes */
extern void T1920f77(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_key_storage */
extern void T1920f76(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_item_storage */
extern void T1920f75(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_RENAME].make */
extern T0* T2318f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_RENAME].make_empty */
extern T0* T2309c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_RENAME].default_create */
extern T0* T2318c3(GE_context* ac);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1226f25p1(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1226f18(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].set_key_equality_tester */
extern void T1218f45(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.feature_name_tester */
extern T0* T363f12(GE_context* ac, T0* C);
/* ET_FEATURE_NAME_TESTER.default_create */
extern T0* T1219c2(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_map */
extern T0* T1218c44(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_with_equality_testers */
extern void T1218f54(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_sparse_container */
extern void T1218f66(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].set_internal_cursor */
extern void T1218f73(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].new_cursor */
extern T0* T1218f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make */
extern T0* T1896c9(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].unset_found_item */
extern void T1218f58(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_slots */
extern void T1218f72(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].new_modulus */
extern T6 T1218f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_clashes */
extern void T1218f71(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_key_storage */
extern void T1218f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_item_storage */
extern void T1218f69(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE].make */
extern T0* T1904f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_FLATTENED_FEATURE].make_empty */
extern T0* T1897c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE].default_create */
extern T0* T1904c3(GE_context* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern T0* T1239c8(GE_context* ac, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern void T1239f8p1(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1239f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.set_classes_to_be_processed */
extern void T1238f8(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.make */
extern T0* T1238c7(GE_context* ac, T0* a1);
/* ET_PARENT_CHECKER3.make */
extern void T1238f7p1(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.tokens */
extern T0* T1238f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].make */
extern T0* T1237c32(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].set_internal_cursor */
extern void T1237f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].new_cursor */
extern T0* T1237f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CLASS].make */
extern T0* T1956c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].unset_found_item */
extern void T1237f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].make_slots */
extern void T1237f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].new_modulus */
extern T6 T1237f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].make_clashes */
extern void T1237f36(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].make_key_storage */
extern void T1237f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].make_item_storage */
extern void T1237f34(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.make */
extern void T363f15p1(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.tokens */
extern T0* T363f11(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.make */
extern T0* T362c29(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_map */
extern T0* T1236c39(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_with_equality_testers */
extern void T1236f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_sparse_container */
extern void T1236f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].set_internal_cursor */
extern void T1236f76(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].new_cursor */
extern T0* T1236f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32].make */
extern T0* T1951c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].unset_found_item */
extern void T1236f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_slots */
extern void T1236f75(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].new_modulus */
extern T6 T1236f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_clashes */
extern void T1236f74(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_key_storage */
extern void T1236f73(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_item_storage */
extern void T1236f72(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.make */
extern T0* T1235c10(GE_context* ac, T0* a1);
/* ET_PRECURSOR_CHECKER.dummy_feature */
extern T0* T1235f6(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.make */
extern T0* T1724c27(GE_context* ac, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.other_seeds */
extern T0* T1247f10(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.first_seed */
extern T6 T1247f9(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.make */
extern T0* T1247c22(GE_context* ac, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.current_system */
extern T0* T1235f7(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.make */
extern void T1235f10p1(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.tokens */
extern T0* T1235f5(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.make */
extern T0* T1234c12(GE_context* ac, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.make */
extern void T1234f12p1(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.tokens */
extern T0* T1234f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_map */
extern T0* T1950c33(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_with_equality_testers */
extern void T1950f34(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_sparse_container */
extern void T1950f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].set_internal_cursor */
extern void T1950f41(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].new_cursor */
extern T0* T1950f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make */
extern T0* T2368c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].unset_found_item */
extern void T1950f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_slots */
extern void T1950f39(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].new_modulus */
extern T6 T1950f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_clashes */
extern void T1950f38(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_key_storage */
extern void T1950f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_item_storage */
extern void T1950f36(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].make */
extern T0* T2369f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].make_empty */
extern T0* T2371c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].default_create */
extern T0* T2369c3(GE_context* ac);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern T0* T1233c8(GE_context* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern void T1233f8p1(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.tokens */
extern T0* T1233f5(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.make */
extern T0* T1232c9(GE_context* ac, T0* a1);
/* ET_PARENT_CHECKER2.make */
extern void T1232f9p1(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.tokens */
extern T0* T1232f5(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern T0* T1230c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].make_default */
extern T0* T1944c10(GE_context* ac);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].make */
extern void T1944f13(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_map */
extern T0* T2362c33(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_with_equality_testers */
extern void T2362f35(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_sparse_container */
extern void T2362f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].set_internal_cursor */
extern void T2362f47(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].new_cursor */
extern T0* T2362f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make */
extern T0* T2558c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].unset_found_item */
extern void T2362f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_slots */
extern void T2362f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].new_modulus */
extern T6 T2362f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_clashes */
extern void T2362f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_key_storage */
extern void T2362f44(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE].make */
extern T0* T2364f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LIKE_FEATURE].make_empty */
extern T0* T2363c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE].default_create */
extern T0* T2364c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_item_storage */
extern void T2362f43(GE_context* ac, T0* C, T6 a1);
/* attached DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].make */
extern T0* T1946c10(GE_context* ac, T6 a1);
/* attached DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].set_internal_cursor */
extern void T1946f13(GE_context* ac, T0* C, T0* a1);
/* attached DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].new_cursor */
extern T0* T1946f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].make */
extern T0* T2365c9(GE_context* ac, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern void T1230f8p1(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1230f7(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern T0* T1229c6(GE_context* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern void T1229f6p1(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.tokens */
extern T0* T1229f4(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern T0* T1228c7(GE_context* ac, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.tokens */
extern T0* T1228f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_map */
extern T0* T1225c41(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_with_equality_testers */
extern void T1225f42(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_sparse_container */
extern void T1225f43(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].set_internal_cursor */
extern void T1225f49(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].new_cursor */
extern T0* T1225f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].make */
extern T0* T1917c10(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].unset_found_item */
extern void T1225f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_slots */
extern void T1225f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].new_modulus */
extern T6 T1225f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_clashes */
extern void T1225f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_key_storage */
extern void T1225f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_item_storage */
extern void T1225f44(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT].make */
extern T0* T1918f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CLIENT].make_empty */
extern T0* T1919c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT].default_create */
extern T0* T1918c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].make */
extern T0* T1224c12(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].set_internal_cursor */
extern void T1224f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].new_cursor */
extern T0* T1224f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST].make */
extern T0* T1915c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST].make */
extern T0* T1913f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CLIENT_LIST].make_empty */
extern T0* T1914c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST].default_create */
extern T0* T1913c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].set_key_equality_tester */
extern void T1221f35(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.alias_name_tester */
extern T0* T362f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_map */
extern T0* T1221c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_with_equality_testers */
extern void T1221f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_sparse_container */
extern void T1221f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].set_internal_cursor */
extern void T1221f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].new_cursor */
extern T0* T1221f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make */
extern T0* T1912c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].unset_found_item */
extern void T1221f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_slots */
extern void T1221f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].new_modulus */
extern T6 T1221f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_clashes */
extern void T1221f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_key_storage */
extern void T1221f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_item_storage */
extern void T1221f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].make */
extern T0* T864c15(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].set_internal_cursor */
extern void T864f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].new_cursor */
extern T0* T864f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].make */
extern T0* T1876c9(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].make */
extern T0* T863c15(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].set_internal_cursor */
extern void T863f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].new_cursor */
extern T0* T863f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].make */
extern T0* T1874c9(GE_context* ac, T0* a1);
/* ET_FEATURE_FLATTENER.feature_name_tester */
extern T0* T362f22(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.make */
extern void T362f29p1(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.tokens */
extern T0* T362f21(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.make */
extern T0* T361c13(GE_context* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern T0* T1217c11(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].make_default */
extern T0* T1892c10(GE_context* ac);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].make */
extern void T1892f13(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].make_map */
extern T0* T2303c33(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].make_with_equality_testers */
extern void T2303f35(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].make_sparse_container */
extern void T2303f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].set_internal_cursor */
extern void T2303f47(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].new_cursor */
extern T0* T2303f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].make */
extern T0* T2555c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].unset_found_item */
extern void T2303f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].make_slots */
extern void T2303f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].new_modulus */
extern T6 T2303f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].make_clashes */
extern void T2303f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].make_key_storage */
extern void T2303f44(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER].make */
extern T0* T2305f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_FORMAL_PARAMETER].make_empty */
extern T0* T2304c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER].default_create */
extern T0* T2305c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].make_item_storage */
extern void T2303f43(GE_context* ac, T0* C, T6 a1);
/* attached DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].make */
extern T0* T1894c11(GE_context* ac, T6 a1);
/* attached DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].set_internal_cursor */
extern void T1894f14(GE_context* ac, T0* C, T0* a1);
/* attached DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1894f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER].make */
extern T0* T2306c9(GE_context* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern void T1217f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.tokens */
extern T0* T1217f9(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.make */
extern T0* T1216c8(GE_context* ac, T0* a1);
/* ET_PARENT_CHECKER1.tokens */
extern T0* T1216f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_map */
extern T0* T1215c40(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_with_equality_testers */
extern void T1215f46(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_sparse_container */
extern void T1215f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].set_internal_cursor */
extern void T1215f72(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].new_cursor */
extern T0* T1215f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make */
extern T0* T1887c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].unset_found_item */
extern void T1215f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_slots */
extern void T1215f71(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].new_modulus */
extern T6 T1215f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_clashes */
extern void T1215f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_key_storage */
extern void T1215f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_item_storage */
extern void T1215f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].make_default */
extern T0* T1214c11(GE_context* ac);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].make */
extern void T1214f16(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_map */
extern T0* T1886c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_with_equality_testers */
extern void T1886f40(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_sparse_container */
extern void T1886f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].set_internal_cursor */
extern void T1886f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].new_cursor */
extern T0* T1886f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_CLASS].make */
extern T0* T2302c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].unset_found_item */
extern void T1886f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_slots */
extern void T1886f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].new_modulus */
extern T6 T1886f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_clashes */
extern void T1886f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_key_storage */
extern void T1886f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_item_storage */
extern void T1886f56(GE_context* ac, T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.make */
extern void T361f13p1(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.tokens */
extern T0* T361f9(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.make */
extern T0* T360c6(GE_context* ac, T0* a1);
/* ET_PROVIDER_CHECKER.tokens */
extern T0* T360f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.make */
extern T0* T359c968(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.make_parser_skeleton */
extern void T359f970(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_build_parser_tables */
extern void T359f973(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yycheck_template */
extern T0* T359f635(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yyfixed_array */
extern T0* T359f695(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_38 */
extern void T359f1076(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyarray_subcopy */
extern void T359f1140(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.integer_array_ */
extern T0* T359f702(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yycheck_template_37 */
extern void T359f1075(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_36 */
extern void T359f1074(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_35 */
extern void T359f1073(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_34 */
extern void T359f1072(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_33 */
extern void T359f1071(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_32 */
extern void T359f1070(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_31 */
extern void T359f1069(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_30 */
extern void T359f1068(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_29 */
extern void T359f1067(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_28 */
extern void T359f1066(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_27 */
extern void T359f1065(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_26 */
extern void T359f1064(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_25 */
extern void T359f1063(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_24 */
extern void T359f1062(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_23 */
extern void T359f1061(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_22 */
extern void T359f1060(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_21 */
extern void T359f1059(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_20 */
extern void T359f1058(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_19 */
extern void T359f1057(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_18 */
extern void T359f1056(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_17 */
extern void T359f1055(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_16 */
extern void T359f1054(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_15 */
extern void T359f1053(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_14 */
extern void T359f1052(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_13 */
extern void T359f1051(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_12 */
extern void T359f1050(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_11 */
extern void T359f1049(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_10 */
extern void T359f1048(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_9 */
extern void T359f1047(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_8 */
extern void T359f1046(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_7 */
extern void T359f1045(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_6 */
extern void T359f1044(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_5 */
extern void T359f1043(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_4 */
extern void T359f1042(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_3 */
extern void T359f1041(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_2 */
extern void T359f1040(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_1 */
extern void T359f1039(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template */
extern T0* T359f630(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytable_template_38 */
extern void T359f1038(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_37 */
extern void T359f1037(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_36 */
extern void T359f1036(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_35 */
extern void T359f1035(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_34 */
extern void T359f1034(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_33 */
extern void T359f1033(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_32 */
extern void T359f1032(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_31 */
extern void T359f1031(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_30 */
extern void T359f1030(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_29 */
extern void T359f1029(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_28 */
extern void T359f1028(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_27 */
extern void T359f1027(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_26 */
extern void T359f1026(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_25 */
extern void T359f1025(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_24 */
extern void T359f1024(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_23 */
extern void T359f1023(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_22 */
extern void T359f1022(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_21 */
extern void T359f1021(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_20 */
extern void T359f1020(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_19 */
extern void T359f1019(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_18 */
extern void T359f1018(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_17 */
extern void T359f1017(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_16 */
extern void T359f1016(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_15 */
extern void T359f1015(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_14 */
extern void T359f1014(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_13 */
extern void T359f1013(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_12 */
extern void T359f1012(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_11 */
extern void T359f1011(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_10 */
extern void T359f1010(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_9 */
extern void T359f1009(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_8 */
extern void T359f1008(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_7 */
extern void T359f1007(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_6 */
extern void T359f1006(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_5 */
extern void T359f1005(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_4 */
extern void T359f1004(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_3 */
extern void T359f1003(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_2 */
extern void T359f1002(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_1 */
extern void T359f1001(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template */
extern T0* T359f626(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yypgoto_template_2 */
extern void T359f1000(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template_1 */
extern void T359f999(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template */
extern T0* T359f624(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yypact_template_9 */
extern void T359f998(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_8 */
extern void T359f997(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_7 */
extern void T359f996(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_6 */
extern void T359f995(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_5 */
extern void T359f994(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_4 */
extern void T359f993(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_3 */
extern void T359f992(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_2 */
extern void T359f991(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_1 */
extern void T359f990(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template */
extern T0* T359f622(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yydefgoto_template_2 */
extern void T359f989(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template_1 */
extern void T359f988(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template */
extern T0* T359f711(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yydefact_template_9 */
extern void T359f987(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_8 */
extern void T359f986(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_7 */
extern void T359f985(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_6 */
extern void T359f984(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_5 */
extern void T359f983(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_4 */
extern void T359f982(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_3 */
extern void T359f981(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_2 */
extern void T359f980(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_1 */
extern void T359f979(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes2_template */
extern T0* T359f704(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template */
extern T0* T359f692(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template_9 */
extern void T359f1136(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_8 */
extern void T359f1135(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_7 */
extern void T359f1134(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_6 */
extern void T359f1133(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_5 */
extern void T359f1132(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_4 */
extern void T359f1131(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_3 */
extern void T359f1130(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_2 */
extern void T359f1129(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_1 */
extern void T359f1128(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template */
extern T0* T359f688(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yyr1_template_5 */
extern void T359f1121(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_4 */
extern void T359f1120(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_3 */
extern void T359f1119(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_2 */
extern void T359f1118(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_1 */
extern void T359f1117(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytranslate_template */
extern T0* T359f684(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytranslate_template_2 */
extern void T359f1114(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytranslate_template_1 */
extern void T359f1113(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_create_value_stacks */
extern void T359f972(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].make */
extern T0* T1212f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_WRITABLE].make_empty */
extern T0* T1213c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].default_create */
extern T0* T1212c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].make */
extern T0* T1209f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_WHEN_PART_LIST].make_empty */
extern T0* T1211c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].default_create */
extern T0* T1209c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].make */
extern T0* T1206f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_WHEN_PART].make_empty */
extern T0* T1208c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].default_create */
extern T0* T1206c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_VARIANT].make */
extern T0* T1203f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_VARIANT].make_empty */
extern T0* T1205c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_VARIANT].default_create */
extern T0* T1203c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].make */
extern T0* T1200f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_TYPE_LIST].make_empty */
extern T0* T1202c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].default_create */
extern T0* T1200c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].make */
extern T0* T1197f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_TYPE_ITEM].make_empty */
extern T0* T1199c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].default_create */
extern T0* T1197c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE].make */
extern T0* T1195f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_TYPE].make_empty */
extern T0* T1196c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE].default_create */
extern T0* T1195c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].make */
extern T0* T1192f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_STRIP_EXPRESSION].make_empty */
extern T0* T1194c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].default_create */
extern T0* T1192c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].make */
extern T0* T1189f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].make_empty */
extern T0* T1191c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].default_create */
extern T0* T1189c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].make */
extern T0* T1187f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RENAME_LIST].make_empty */
extern T0* T1188c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].default_create */
extern T0* T1187c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].make */
extern T0* T1184f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RENAME_ITEM].make_empty */
extern T0* T1186c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].default_create */
extern T0* T1184c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUERY].make */
extern T0* T1182f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUERY].make_empty */
extern T0* T1183c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUERY].default_create */
extern T0* T1182c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make */
extern T0* T1179f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make_empty */
extern T0* T1181c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].default_create */
extern T0* T1179c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].make */
extern T0* T1177f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PROCEDURE].make_empty */
extern T0* T1178c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].default_create */
extern T0* T1177c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].make */
extern T0* T1175f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PRECONDITIONS].make_empty */
extern T0* T1176c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].default_create */
extern T0* T1175c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].make */
extern T0* T1172f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_POSTCONDITIONS].make_empty */
extern T0* T1174c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].default_create */
extern T0* T1172c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].make */
extern T0* T1169f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT_LIST].make_empty */
extern T0* T1171c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].default_create */
extern T0* T1169c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].make */
extern T0* T1166f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT_ITEM].make_empty */
extern T0* T1168c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].default_create */
extern T0* T1166c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].make */
extern T0* T1163f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT_CLAUSE_LIST].make_empty */
extern T0* T1165c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].default_create */
extern T0* T1163c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT].make */
extern T0* T1160f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT].make_empty */
extern T0* T1162c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT].default_create */
extern T0* T1160c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T1157f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].make_empty */
extern T0* T1159c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].default_create */
extern T0* T1157c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].make */
extern T0* T1154f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_OBSOLETE].make_empty */
extern T0* T1156c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].default_create */
extern T0* T1154c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].make */
extern T0* T1152f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_TUPLE].make_empty */
extern T0* T1153c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].default_create */
extern T0* T1152c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].make */
extern T0* T1149f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_LIST].make_empty */
extern T0* T1151c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].default_create */
extern T0* T1149c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].make */
extern T0* T1146f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_ITEM].make_empty */
extern T0* T1148c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T1146c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].make */
extern T0* T1143f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_ARRAY].make_empty */
extern T0* T1145c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].default_create */
extern T0* T1143c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].make */
extern T0* T1140f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOOP_INVARIANTS].make_empty */
extern T0* T1142c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].default_create */
extern T0* T1140c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T1138f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].make_empty */
extern T0* T1139c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].default_create */
extern T0* T1138c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T1135f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].make_empty */
extern T0* T1137c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T1135c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].make */
extern T0* T1132f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE].make_empty */
extern T0* T1134c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].default_create */
extern T0* T1132c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].make */
extern T0* T1129f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LIKE_TYPE].make_empty */
extern T0* T1131c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].default_create */
extern T0* T1129c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T1127f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].make_empty */
extern T0* T1128c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].default_create */
extern T0* T1127c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].make */
extern T0* T1124f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INVARIANTS].make_empty */
extern T0* T1126c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].default_create */
extern T0* T1124c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].make */
extern T0* T1121f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INSTRUCTION].make_empty */
extern T0* T1123c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].default_create */
extern T0* T1121c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].make */
extern T0* T1118f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INSPECT_INSTRUCTION].make_empty */
extern T0* T1120c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].default_create */
extern T0* T1118c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].make */
extern T0* T1115f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INLINE_AGENT].make_empty */
extern T0* T1117c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].default_create */
extern T0* T1115c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].make */
extern T0* T1112f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_LIST].make_empty */
extern T0* T1114c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].default_create */
extern T0* T1112c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].make */
extern T0* T1109f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_ITEM].make_empty */
extern T0* T1111c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].default_create */
extern T0* T1109c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].make */
extern T0* T1106f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM].make_empty */
extern T0* T1108c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].default_create */
extern T0* T1106c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].make */
extern T0* T1103f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_ITEM].make_empty */
extern T0* T1105c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].default_create */
extern T0* T1103c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].make */
extern T0* T1100f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_LIST].make_empty */
extern T0* T1102c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].default_create */
extern T0* T1100c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].make */
extern T0* T1097f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_IF_INSTRUCTION].make_empty */
extern T0* T1099c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].default_create */
extern T0* T1097c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].make */
extern T0* T1094f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_IF_EXPRESSION].make_empty */
extern T0* T1096c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].default_create */
extern T0* T1094c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].make */
extern T0* T1092f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].make_empty */
extern T0* T1093c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].default_create */
extern T0* T1092c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T1089f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].make_empty */
extern T0* T1091c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T1089c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].make */
extern T0* T1086f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER].make_empty */
extern T0* T1088c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].default_create */
extern T0* T1086c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T1084f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].make_empty */
extern T0* T1085c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].default_create */
extern T0* T1084c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T1081f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].make_empty */
extern T0* T1083c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T1081c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].make */
extern T0* T1078f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT].make_empty */
extern T0* T1080c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].default_create */
extern T0* T1078c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].make */
extern T0* T1075f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME_ITEM].make_empty */
extern T0* T1077c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].default_create */
extern T0* T1075c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].make */
extern T0* T1073f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME].make_empty */
extern T0* T1074c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].default_create */
extern T0* T1073c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].make */
extern T0* T1070f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_EXPORT].make_empty */
extern T0* T1072c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].default_create */
extern T0* T1070c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].make */
extern T0* T1067f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].make_empty */
extern T0* T1069c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].default_create */
extern T0* T1067c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].make */
extern T0* T1064f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE].make_empty */
extern T0* T1066c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].default_create */
extern T0* T1064c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].make */
extern T0* T1061f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXTERNAL_ALIAS].make_empty */
extern T0* T1063c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].default_create */
extern T0* T1061c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].make */
extern T0* T1058f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].make_empty */
extern T0* T1060c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].default_create */
extern T0* T1058c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].make */
extern T0* T1055f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPRESSION_ITEM].make_empty */
extern T0* T1057c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].default_create */
extern T0* T1055c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].make */
extern T0* T1053f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPRESSION].make_empty */
extern T0* T1054c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].default_create */
extern T0* T1053c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].make */
extern T0* T1051f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPORT_LIST].make_empty */
extern T0* T1052c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].default_create */
extern T0* T1051c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT].make */
extern T0* T1048f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPORT].make_empty */
extern T0* T1050c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT].default_create */
extern T0* T1048c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].make */
extern T0* T1045f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART_LIST].make_empty */
extern T0* T1047c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].default_create */
extern T0* T1045c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].make */
extern T0* T1042f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART].make_empty */
extern T0* T1044c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].default_create */
extern T0* T1042c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].make */
extern T0* T1039f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].make_empty */
extern T0* T1041c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].default_create */
extern T0* T1039c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].make */
extern T0* T1036f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION].make_empty */
extern T0* T1038c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].default_create */
extern T0* T1036c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].make */
extern T0* T1033f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_DEBUG_INSTRUCTION].make_empty */
extern T0* T1035c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].default_create */
extern T0* T1033c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].make */
extern T0* T1030f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATOR_LIST].make_empty */
extern T0* T1032c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].default_create */
extern T0* T1030c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR].make */
extern T0* T1027f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATOR].make_empty */
extern T0* T1029c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR].default_create */
extern T0* T1027c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].make */
extern T0* T1024f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATION_REGION].make_empty */
extern T0* T1026c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].default_create */
extern T0* T1024c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].make */
extern T0* T1021f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATE_EXPRESSION].make_empty */
extern T0* T1023c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].default_create */
extern T0* T1021c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].make */
extern T0* T1018f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_LIST].make_empty */
extern T0* T1020c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].default_create */
extern T0* T1018c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].make */
extern T0* T1015f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].make_empty */
extern T0* T1017c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T1015c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].make */
extern T0* T1012f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE].make_empty */
extern T0* T1014c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].default_create */
extern T0* T1012c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T1009f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_TYPE].make_empty */
extern T0* T1011c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].default_create */
extern T0* T1009c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].make */
extern T0* T1006f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_CREATOR].make_empty */
extern T0* T1008c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].default_create */
extern T0* T1006c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T1003f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T1005c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T1003c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T1000f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T1002c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T1000c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].make */
extern T0* T997f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTANT].make_empty */
extern T0* T999c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].default_create */
extern T0* T997c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].make */
extern T0* T994f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONDITIONAL].make_empty */
extern T0* T996c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].default_create */
extern T0* T994c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].make */
extern T0* T992f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_COMPOUND].make_empty */
extern T0* T993c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].default_create */
extern T0* T992c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].make */
extern T0* T989f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CLIENTS].make_empty */
extern T0* T991c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].default_create */
extern T0* T989c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].make */
extern T0* T986f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CLIENT_ITEM].make_empty */
extern T0* T988c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].default_create */
extern T0* T986c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLASS].make */
extern T0* T983f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CLASS].make_empty */
extern T0* T985c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLASS].default_create */
extern T0* T983c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].make */
extern T0* T980f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE_LIST].make_empty */
extern T0* T982c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].default_create */
extern T0* T980c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].make */
extern T0* T977f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE_ITEM].make_empty */
extern T0* T979c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].default_create */
extern T0* T977c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].make */
extern T0* T974f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE_CONSTANT].make_empty */
extern T0* T976c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].default_create */
extern T0* T974c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE].make */
extern T0* T971f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE].make_empty */
extern T0* T973c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE].default_create */
extern T0* T971c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].make */
extern T0* T968f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHECK_INSTRUCTION].make_empty */
extern T0* T970c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].default_create */
extern T0* T968c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].make */
extern T0* T963f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CALL_AGENT].make_empty */
extern T0* T965c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].default_create */
extern T0* T963c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].make */
extern T0* T960f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BRACKET_EXPRESSION].make_empty */
extern T0* T962c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].default_create */
extern T0* T960c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].make */
extern T0* T957f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ASSIGNER].make_empty */
extern T0* T959c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].default_create */
extern T0* T957c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].make */
extern T0* T954f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ALIAS_NAME].make_empty */
extern T0* T956c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].default_create */
extern T0* T954c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].make */
extern T0* T951f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_TARGET].make_empty */
extern T0* T953c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].default_create */
extern T0* T951c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T948f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make_empty */
extern T0* T950c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].default_create */
extern T0* T948c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T945f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make_empty */
extern T0* T947c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T945c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T942f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].make_empty */
extern T0* T944c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].default_create */
extern T0* T942c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T940f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T941c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T940c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T937f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T939c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T937c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T935f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].make_empty */
extern T0* T936c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T935c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].make */
extern T0* T932f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACROSS_INSTRUCTION].make_empty */
extern T0* T934c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].default_create */
extern T0* T932c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].make */
extern T0* T929f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACROSS_EXPRESSION].make_empty */
extern T0* T931c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].default_create */
extern T0* T929c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].make */
extern T0* T926f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].make_empty */
extern T0* T928c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].default_create */
extern T0* T926c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].make */
extern T0* T923f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BRACKET_SYMBOL].make_empty */
extern T0* T925c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].default_create */
extern T0* T923c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].make */
extern T0* T920f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_SEMICOLON_SYMBOL].make_empty */
extern T0* T922c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].default_create */
extern T0* T920c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_VOID].make */
extern T0* T917f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_VOID].make_empty */
extern T0* T919c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_VOID].default_create */
extern T0* T917c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].make */
extern T0* T914f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_SYMBOL_OPERATOR].make_empty */
extern T0* T916c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].default_create */
extern T0* T914c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].make */
extern T0* T911f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RETRY_INSTRUCTION].make_empty */
extern T0* T913c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].default_create */
extern T0* T911c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RESULT].make */
extern T0* T909f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RESULT].make_empty */
extern T0* T910c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RESULT].default_create */
extern T0* T909c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].make */
extern T0* T906f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_REAL_CONSTANT].make_empty */
extern T0* T908c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].default_create */
extern T0* T906c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].make */
extern T0* T903f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING].make_empty */
extern T0* T905c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].default_create */
extern T0* T903c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].make */
extern T0* T900f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_KEYWORD_OPERATOR].make_empty */
extern T0* T902c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].default_create */
extern T0* T900c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].make */
extern T0* T897f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INTEGER_CONSTANT].make_empty */
extern T0* T899c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].default_create */
extern T0* T897c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].make */
extern T0* T296f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_IDENTIFIER].make_empty */
extern T0* T294c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].default_create */
extern T0* T296c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].make */
extern T0* T894f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FREE_OPERATOR].make_empty */
extern T0* T896c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].default_create */
extern T0* T894c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CURRENT].make */
extern T0* T891f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CURRENT].make_empty */
extern T0* T893c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CURRENT].default_create */
extern T0* T891c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].make */
extern T0* T888f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHARACTER_CONSTANT].make_empty */
extern T0* T890c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].default_create */
extern T0* T888c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BREAK].make */
extern T0* T885f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BREAK].make_empty */
extern T0* T887c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BREAK].default_create */
extern T0* T885c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].make */
extern T0* T882f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BOOLEAN_CONSTANT].make_empty */
extern T0* T884c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].default_create */
extern T0* T882c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_POSITION].make */
extern T0* T879f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_POSITION].make_empty */
extern T0* T881c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_POSITION].default_create */
extern T0* T879c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].make */
extern T0* T876f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_SYMBOL].make_empty */
extern T0* T878c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].default_create */
extern T0* T876c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].make */
extern T0* T873f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PRECURSOR_KEYWORD].make_empty */
extern T0* T875c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].default_create */
extern T0* T873c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].make */
extern T0* T870f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_KEYWORD].make_empty */
extern T0* T872c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].default_create */
extern T0* T870c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].make */
extern T0* T867f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_KEYWORD].make_empty */
extern T0* T869c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].default_create */
extern T0* T867c3(GE_context* ac);
/* ET_EIFFEL_PARSER.special_integer_ */
extern T0* T359f651(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.make_eiffel_scanner */
extern void T359f969(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.tokens */
extern T0* T359f686(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.make_with_buffer */
extern void T359f971(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_load_input_buffer */
extern void T359f975(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_set_content */
extern void T359f977(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T359f974(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T359f974p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_build_tables */
extern void T359f976(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_acclist_template */
extern T0* T359f691(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_fixed_array */
extern T0* T359f696(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_3 */
extern void T359f1127(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_array_subcopy */
extern void T359f1141(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.yy_acclist_template_2 */
extern void T359f1126(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_1 */
extern void T359f1125(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template */
extern T0* T359f689(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_accept_template_3 */
extern void T359f1124(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template_2 */
extern void T359f1123(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template_1 */
extern void T359f1122(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_meta_template */
extern T0* T359f687(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template */
extern T0* T359f685(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template_2 */
extern void T359f1116(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_1 */
extern void T359f1115(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template */
extern T0* T359f683(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_def_template_3 */
extern void T359f1112(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template_2 */
extern void T359f1111(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template_1 */
extern void T359f1110(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template */
extern T0* T359f681(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_base_template_3 */
extern void T359f1109(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template_2 */
extern void T359f1108(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template_1 */
extern void T359f1107(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template */
extern T0* T359f679(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template_15 */
extern void T359f1106(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_14 */
extern void T359f1105(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_13 */
extern void T359f1104(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_12 */
extern void T359f1103(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_11 */
extern void T359f1102(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_10 */
extern void T359f1101(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_9 */
extern void T359f1100(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_8 */
extern void T359f1099(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_7 */
extern void T359f1098(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_6 */
extern void T359f1097(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_5 */
extern void T359f1096(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_4 */
extern void T359f1095(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_3 */
extern void T359f1094(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_2 */
extern void T359f1093(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_1 */
extern void T359f1092(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template */
extern T0* T359f677(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_nxt_template_15 */
extern void T359f1091(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_14 */
extern void T359f1090(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_13 */
extern void T359f1089(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_12 */
extern void T359f1088(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_11 */
extern void T359f1087(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_10 */
extern void T359f1086(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_9 */
extern void T359f1085(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_8 */
extern void T359f1084(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_7 */
extern void T359f1083(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_6 */
extern void T359f1082(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_5 */
extern void T359f1081(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_4 */
extern void T359f1080(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_3 */
extern void T359f1079(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_2 */
extern void T359f1078(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_1 */
extern void T359f1077(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.empty_buffer */
extern T0* T359f693(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T865c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].set_internal_cursor */
extern void T865f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_cursor */
extern T0* T865f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T1878c5(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].make */
extern T0* T862c11(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].set_internal_cursor */
extern void T862f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].new_cursor */
extern T0* T862f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ASSERTION_ITEM].make */
extern T0* T1872c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM].make */
extern T0* T1871f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ASSERTION_ITEM].make_empty */
extern T0* T1870c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM].default_create */
extern T0* T1871c3(GE_context* ac);
/* [attached] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST].make */
extern T0* T861c9(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT_LIST].make */
extern T0* T1868f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT_LIST].make_empty */
extern T0* T1869c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT_LIST].default_create */
extern T0* T1868c3(GE_context* ac);
/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].make */
extern T0* T860c10(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].make */
extern T0* T1867f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].make_empty */
extern T0* T1866c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].default_create */
extern T0* T1867c3(GE_context* ac);
/* [attached] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST].make */
extern T0* T859c9(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST_LIST].make */
extern T0* T1864f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_OBJECT_TEST_LIST].make_empty */
extern T0* T1865c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST_LIST].default_create */
extern T0* T1864c3(GE_context* ac);
/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T858c10(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T1863f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_OBJECT_TEST_LIST].make_empty */
extern T0* T1862c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].default_create */
extern T0* T1863c3(GE_context* ac);
/* [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL].make */
extern T0* T857c8(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD].make */
extern T0* T856c8(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T855c9(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T854c9(GE_context* ac, T6 a1);
/* KL_STANDARD_FILES.input */
extern T0* T160f3(GE_context* ac, T0* C);
/* KL_STDIN_FILE.make */
extern T0* T851c12(GE_context* ac);
/* ET_EIFFEL_PARSER.std */
extern T0* T359f653(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.make */
extern void T359f968p1(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.make */
extern T0* T358c7(GE_context* ac, T0* a1);
/* ET_MASTER_CLASS.make */
extern T0* T672c50(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.empty_master_classes */
extern T0* T94f761(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].make */
extern T0* T1796c14(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].set_internal_cursor */
extern void T1796f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].new_cursor */
extern T0* T1796f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS].make */
extern T0* T2289c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS].make */
extern T0* T829f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_MASTER_CLASS].make_empty */
extern T0* T830c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS].default_create */
extern T0* T829c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_classes */
extern T0* T94f760(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.tokens */
extern T0* T672f22(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_system */
extern T0* T94f3(GE_context* ac, T0* C);
/* ET_SYSTEM.make */
extern T0* T40c135(GE_context* ac, T0* a1);
/* ET_SYSTEM.set_default_class_mapping */
extern void T40f141(GE_context* ac, T0* C);
/* ET_SYSTEM.set_wide_character_ref_class_mapping */
extern void T40f195(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_class_mapping */
extern void T40f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.set_mapped_class */
extern void T672f53(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.set_marked */
extern void T672f51(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.is_unknown */
extern T1 T95f169(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_marked */
extern T1 T672f21(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.wide_character_ref_class_name */
extern T0* T94f214(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_ref_class_name */
extern T0* T94f197(GE_context* ac, T0* C);
/* ET_SYSTEM.set_wide_character_class_mapping */
extern void T40f194(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_string_class_mapping */
extern void T40f193(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.string_class_name */
extern T0* T94f207(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_8_class_name */
extern T0* T94f196(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_ref_class_mapping */
extern void T40f192(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.real_ref_class_name */
extern T0* T94f213(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_ref_class_name */
extern T0* T94f195(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_class_mapping */
extern void T40f191(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_natural_ref_class_mapping */
extern void T40f190(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.natural_ref_class_name */
extern T0* T94f212(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_ref_class_name */
extern T0* T94f194(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_class_mapping */
extern void T40f189(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_integer_ref_class_mapping */
extern void T40f188(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.integer_ref_class_name */
extern T0* T94f211(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_ref_class_name */
extern T0* T94f193(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_class_mapping */
extern void T40f187(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_double_ref_class_mapping */
extern void T40f186(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.double_ref_class_name */
extern T0* T94f210(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_ref_class_name */
extern T0* T94f192(GE_context* ac, T0* C);
/* ET_SYSTEM.set_double_class_mapping */
extern void T40f185(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_character_ref_class_mapping */
extern void T40f184(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.character_ref_class_name */
extern T0* T94f209(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_ref_class_name */
extern T0* T94f191(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_class_mapping */
extern void T40f183(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.tokens */
extern T0* T40f120(GE_context* ac, T0* C);
/* ET_SYSTEM.set_kernel_types */
extern void T40f140(GE_context* ac, T0* C);
/* ET_SYSTEM.set_wide_character_type */
extern void T40f182(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.make */
extern T0* T93c110(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_SYSTEM.set_typed_pointer_type */
extern void T40f181(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.like_current */
extern T0* T94f201(GE_context* ac, T0* C);
/* ET_SYSTEM.set_type_type */
extern void T40f180(GE_context* ac, T0* C);
/* ET_SYSTEM.set_system_string_type */
extern void T40f179(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.system_string_class_name */
extern T0* T94f208(GE_context* ac, T0* C);
/* ET_SYSTEM.set_system_object_type */
extern void T40f178(GE_context* ac, T0* C);
/* ET_PARENT_LIST.put_first */
extern void T699f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_ITEM].force */
extern void T1816f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_PARENT_ITEM].fill_with */
extern void T1814f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_PARENT_ITEM].extend */
extern void T1814f7(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_LIST.fixed_array */
extern T0* T699f9(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_ITEM].default_create */
extern T0* T1816c2(GE_context* ac);
/* ET_PARENT_LIST.make_with_capacity */
extern T0* T699c11(GE_context* ac, T6 a1);
/* ET_PARENT_LIST.make_with_capacity */
extern void T699f11p1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_ITEM].make */
extern T0* T1816f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_PARENT_ITEM].make_empty */
extern T0* T1814c4(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.inherit_keyword */
extern T0* T94f720(GE_context* ac, T0* C);
/* ET_KEYWORD.make_inherit */
extern T0* T539c83(GE_context* ac);
/* ET_PARENT_LIST.tokens */
extern T0* T699f8(GE_context* ac, T0* C);
/* ET_PARENT.make */
extern T0* T698c11(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_PARENT.tokens */
extern T0* T698f9(GE_context* ac, T0* C);
/* ET_PARENT.has_feature_adaptation */
extern T1 T698f8(GE_context* ac, T0* C);
/* ET_SYSTEM.set_string_type */
extern void T40f177(GE_context* ac, T0* C);
/* ET_SYSTEM.set_string_32_type */
extern void T40f176(GE_context* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.make */
extern T0* T701c6(GE_context* ac, T0* a1);
/* ET_BRACED_TYPE_LIST.make */
extern T0* T1820c8(GE_context* ac);
/* ET_BRACED_TYPE_LIST.make */
extern void T1820f8p1(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_TYPE_ITEM].make */
extern T0* T2294f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_TYPE_ITEM].make_empty */
extern T0* T2293c4(GE_context* ac, T6 a1);
/* ET_BRACED_TYPE_LIST.fixed_array */
extern T0* T1820f6(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_TYPE_ITEM].default_create */
extern T0* T2294c2(GE_context* ac);
/* ET_TOKEN_CONSTANTS.right_brace_symbol */
extern T0* T94f689(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_brace */
extern T0* T474c88(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_brace_symbol */
extern T0* T94f688(GE_context* ac, T0* C);
/* ET_SYMBOL.make_left_brace */
extern T0* T474c87(GE_context* ac);
/* ET_BRACED_TYPE_LIST.tokens */
extern T0* T1820f5(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_32_class_name */
extern T0* T94f206(GE_context* ac, T0* C);
/* ET_SYSTEM.set_string_8_type */
extern void T40f175(GE_context* ac, T0* C);
/* ET_SYSTEM.set_special_type */
extern void T40f174(GE_context* ac, T0* C);
/* ET_SYSTEM.set_routine_type */
extern void T40f173(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_64_type */
extern void T40f172(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_32_type */
extern void T40f171(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_type */
extern void T40f170(GE_context* ac, T0* C);
/* ET_SYSTEM.set_procedure_type */
extern void T40f169(GE_context* ac, T0* C);
/* ET_SYSTEM.set_predicate_type */
extern void T40f168(GE_context* ac, T0* C);
/* ET_SYSTEM.set_pointer_type */
extern void T40f167(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_64_type */
extern void T40f166(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_32_type */
extern void T40f165(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_16_type */
extern void T40f164(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_8_type */
extern void T40f163(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_type */
extern void T40f162(GE_context* ac, T0* C);
/* ET_SYSTEM.set_iterable_type */
extern void T40f161(GE_context* ac, T0* C);
/* ET_SYSTEM.set_ise_exception_manager_type */
extern void T40f160(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ise_exception_manager_class_name */
extern T0* T94f205(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_64_type */
extern void T40f159(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_32_type */
extern void T40f158(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_16_type */
extern void T40f157(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_8_type */
extern void T40f156(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_type */
extern void T40f155(GE_context* ac, T0* C);
/* ET_SYSTEM.set_immutable_string_32_type */
extern void T40f154(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.immutable_string_32_class_name */
extern T0* T94f204(GE_context* ac, T0* C);
/* ET_SYSTEM.set_function_type */
extern void T40f153(GE_context* ac, T0* C);
/* ET_SYSTEM.set_exception_manager_type */
extern void T40f152(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_class_name */
extern T0* T94f203(GE_context* ac, T0* C);
/* ET_SYSTEM.set_exception_type */
extern void T40f151(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_class_name */
extern T0* T94f202(GE_context* ac, T0* C);
/* ET_SYSTEM.set_double_type */
extern void T40f150(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_32_type */
extern void T40f149(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_8_type */
extern void T40f148(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_type */
extern void T40f147(GE_context* ac, T0* C);
/* ET_SYSTEM.set_boolean_type */
extern void T40f146(GE_context* ac, T0* C);
/* ET_SYSTEM.set_array_type */
extern void T40f145(GE_context* ac, T0* C);
/* ET_SYSTEM.set_tuple_type */
extern void T40f144(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T724c17(GE_context* ac, T0* a1);
/* ET_SYSTEM.set_none_type */
extern void T40f143(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_class */
extern void T672f52(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_first_local_non_override_class */
extern void T672f57(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.update_intrinsic_class */
extern void T672f59(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.set_intrinsic_class */
extern void T672f61(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T672f61ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T672f61ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T672f61ac3(GE_context* ac, T0* a1);
extern T1 T672f61ot1(T0* a1, T0** a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]].set_rout_disp_final */
extern void T680f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_MASTER_CLASS.mark_overridden */
extern void T672f58(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_overriding_class */
extern void T672f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].force_last */
extern void T1796f16(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS].force */
extern void T829f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_MASTER_CLASS].fill_with */
extern void T830f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_MASTER_CLASS].extend */
extern void T830f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].resize */
extern void T1796f22(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS].aliased_resized_area */
extern T0* T829f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_MASTER_CLASS].aliased_resized_area */
extern T0* T830f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].new_capacity */
extern T6 T1796f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].extendible */
extern T1 T1796f9(GE_context* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.is_override */
extern T1 T672f24(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_override */
extern T1 T95f126(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].do_all */
extern void T1796f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].item */
extern T0* T1796f7(GE_context* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.unmark_overridden */
extern void T672f62(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_overriding_class */
extern void T672f63(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].remove_first */
extern void T1796f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].remove */
extern void T1796f20(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_MASTER_CLASS].keep_head */
extern void T830f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_MASTER_CLASS].set_count */
extern void T830f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].move_left */
extern void T1796f27(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].move_cursors_left */
extern void T1796f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS].set_position */
extern void T2289f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].remove_last */
extern void T1796f25(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].move_last_cursors_after */
extern void T1796f31(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS].set_next_cursor */
extern void T2289f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS].set_after */
extern void T2289f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].first */
extern T0* T1796f11(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].is_empty */
extern T1 T1796f12(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].delete */
extern void T1796f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].move_all_cursors_after */
extern void T1796f24(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].force_first */
extern void T365f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].put */
extern void T365f25(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].move_cursors_right */
extern void T365f27(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].set_position */
extern void T1253f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].move_right */
extern void T365f26(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].put_last */
extern void T365f23(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_first_local_override_class */
extern void T672f56(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_in_override_group */
extern T1 T95f125(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_ignored_class */
extern void T672f55(GE_context* ac, T0* C, T0* a1);
/* ET_NONE_GROUP.make */
extern T0* T723c29(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.none_class_name */
extern T0* T94f200(GE_context* ac, T0* C);
/* ET_SYSTEM.set_any_type */
extern void T40f142(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.put_first */
extern void T700f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_ITEM].force */
extern void T1818f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CLIENT_ITEM].fill_with */
extern void T1817f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CLIENT_ITEM].extend */
extern void T1817f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT.make */
extern T0* T716c6(GE_context* ac, T0* a1, T0* a2);
/* ET_CLIENT_LIST.make_with_capacity */
extern T0* T700c10(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.separate_keyword */
extern T0* T94f199(GE_context* ac, T0* C);
/* ET_KEYWORD.make_separate */
extern T0* T539c41(GE_context* ac);
/* ET_TOKEN_CONSTANTS.detachable_separate_type_mark */
extern T0* T94f198(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.make */
extern T0* T717c18(GE_context* ac, T0* a1, T0* a2);
/* ET_SYSTEM.make_adapted */
extern void T40f139(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.default_read_only_value */
extern T1 T40f119(GE_context* ac, T0* C);
/* ET_SYSTEM.set_unknown_kernel_types */
extern void T40f138(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_convert_feature */
extern T0* T94f190(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_generic_class_type */
extern T0* T94f189(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.make */
extern T0* T333c30(GE_context* ac);
/* ET_ACTUAL_PARAMETER_LIST.make */
extern void T333f30p1(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.empty_actual_parameters */
extern T0* T94f188(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_tuple_type */
extern T0* T94f187(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_parents */
extern T0* T94f185(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_parent */
extern T0* T94f184(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_class_type */
extern T0* T94f183(GE_context* ac, T0* C);
/* ET_SYSTEM.set_system_name */
extern void T40f137(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].make */
extern void T171f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].make */
extern T0* T171c21(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].set_internal_cursor */
extern void T171f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].new_cursor */
extern T0* T171f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].make */
extern T0* T618c8(GE_context* ac, T0* a1);
/* ET_SYSTEM.initialize */
extern void T40f136(GE_context* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.make_empty */
extern T0* T264c6(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T810c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T810f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T810f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1859c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1858f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T1857c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T1858c3(GE_context* ac);
/* ET_CLUSTERS.make_empty */
extern T0* T791c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].make */
extern T0* T1849c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].set_internal_cursor */
extern void T1849f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].new_cursor */
extern T0* T1849f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLUSTER].make */
extern T0* T2300c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER].make */
extern T0* T2299f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CLUSTER].make_empty */
extern T0* T2298c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER].default_create */
extern T0* T2299c3(GE_context* ac);
/* ET_ADAPTED_LIBRARIES.make_empty */
extern T0* T237c6(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].make */
extern T0* T792c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].set_internal_cursor */
extern void T792f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].new_cursor */
extern T0* T792f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_LIBRARY].make */
extern T0* T1852c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY].make */
extern T0* T1851f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ADAPTED_LIBRARY].make_empty */
extern T0* T1850c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY].default_create */
extern T0* T1851c3(GE_context* ac);
/* ET_SYSTEM.initialize */
extern void T40f136p1(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].set_key_equality_tester */
extern void T314f39(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.class_name_tester */
extern T0* T40f118(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_map */
extern T0* T314c38(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_with_equality_testers */
extern void T314f41(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_sparse_container */
extern void T314f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].set_internal_cursor */
extern void T314f48(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].new_cursor */
extern T0* T314f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make */
extern T0* T828c10(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].unset_found_item */
extern void T314f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_slots */
extern void T314f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].new_modulus */
extern T6 T314f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_clashes */
extern void T314f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_key_storage */
extern void T314f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_item_storage */
extern void T314f43(GE_context* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS_CHECKER.tokens */
extern T0* T358f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.make */
extern T0* T357c134(GE_context* ac, T0* a1);
/* ET_EIFFEL_PREPARSER.make_eiffel_scanner */
extern void T357f135(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.tokens */
extern T0* T357f57(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.make_with_buffer */
extern void T357f136(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_load_input_buffer */
extern void T357f138(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_content */
extern void T357f140(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T357f137(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T357f137p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_build_tables */
extern void T357f139(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template */
extern T0* T357f88(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_fixed_array */
extern T0* T357f91(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_4 */
extern void T357f165(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_array_subcopy */
extern void T357f176(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PREPARSER.integer_array_ */
extern T0* T357f97(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_3 */
extern void T357f164(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_2 */
extern void T357f163(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_1 */
extern void T357f162(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template */
extern T0* T357f81(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_accept_template_3 */
extern void T357f161(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template_2 */
extern void T357f160(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template_1 */
extern void T357f159(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_meta_template */
extern T0* T357f78(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template */
extern T0* T357f72(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template_2 */
extern void T357f158(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_1 */
extern void T357f157(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template */
extern T0* T357f70(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_def_template_3 */
extern void T357f156(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_2 */
extern void T357f155(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_1 */
extern void T357f154(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template */
extern T0* T357f68(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_base_template_3 */
extern void T357f153(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template_2 */
extern void T357f152(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template_1 */
extern void T357f151(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template */
extern T0* T357f58(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template_10 */
extern void T357f150(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_9 */
extern void T357f149(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_8 */
extern void T357f148(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_7 */
extern void T357f147(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_6 */
extern void T357f146(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_5 */
extern void T357f145(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_4 */
extern void T357f144(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_3 */
extern void T357f143(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_2 */
extern void T357f142(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_1 */
extern void T357f141(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template */
extern T0* T357f90(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_10 */
extern void T357f175(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_9 */
extern void T357f174(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_8 */
extern void T357f173(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_7 */
extern void T357f172(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_6 */
extern void T357f171(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_5 */
extern void T357f170(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_4 */
extern void T357f169(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_3 */
extern void T357f168(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_2 */
extern void T357f167(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_1 */
extern void T357f166(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.special_integer_ */
extern T0* T357f61(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.empty_buffer */
extern T0* T357f82(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.std */
extern T0* T357f71(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.make_null */
extern void T81f60(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.make_null */
extern T0* T81c60(GE_context* ac);
/* ET_SYSTEM_PROCESSOR.set_qualified_anchored_types_cycle_detection_enabled_only */
extern void T81f75(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_unknown_builtin_reported_only */
extern void T81f74(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_preparse_shallow_mode_only */
extern void T81f73(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.make */
extern T0* T371c3(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.null_error_handler */
extern T0* T94f26(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.make_null */
extern T0* T53c178(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.make_null */
extern void T53f178p1(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.null_output_stream */
extern T0* T53f24(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_ast_factory */
extern T0* T94f24(GE_context* ac, T0* C);
/* ET_AST_FACTORY.make */
extern T0* T369c359(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].make_default */
extern T0* T368c16(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].default_capacity */
extern T6 T368f6(GE_context* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.make */
extern T0* T87c50(GE_context* ac, T6 a1);
/* ET_SYSTEM_MULTIPROCESSOR.make_single */
extern void T87f62(GE_context* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.make_null_single */
extern void T87f74(GE_context* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.set_qualified_anchored_types_cycle_detection_enabled_only */
extern void T87f87(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_unknown_builtin_reported_only */
extern void T87f86(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_preparse_shallow_mode_only */
extern void T87f85(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_SYSTEM_PROCESSOR].put_last */
extern void T501f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_SYSTEM_PROCESSOR].force */
extern void T1350f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_SYSTEM_PROCESSOR].fill_with */
extern void T1349f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_SYSTEM_PROCESSOR].extend */
extern void T1349f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_SYSTEM_PROCESSOR].make */
extern T0* T501c8(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_SYSTEM_PROCESSOR].set_internal_cursor */
extern void T501f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_SYSTEM_PROCESSOR].new_cursor */
extern T0* T501f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_SYSTEM_PROCESSOR].make */
extern T0* T1351c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_SYSTEM_PROCESSOR].make */
extern T0* T1350f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_SYSTEM_PROCESSOR].make_empty */
extern T0* T1349c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_SYSTEM_PROCESSOR].default_create */
extern T0* T1350c2(GE_context* ac);
/* GEC.thread_count */
extern T6 T25f36(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.parameter */
extern T6 T49f14(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] INTEGER_32].last */
extern T6 T185f7(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] INTEGER_32].is_empty */
extern T1 T185f6(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.set_verbose */
extern void T53f180(GE_context* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.set_verbose */
extern void T36f179(GE_context* ac, T0* C, T1 a1);
/* GEC.is_verbose */
extern T1 T25f35(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.set_ise */
extern void T53f179(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.set_ise */
extern void T36f178(GE_context* ac, T0* C);
/* GEC.parse_ace_file */
extern void T25f62(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.syntax_error */
extern T1 T77f141(GE_context* ac, T0* C);
/* ET_LACE_PARSER.parse_file */
extern void T77f248(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yyparse */
extern void T77f252(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_pop_last_value */
extern void T77f265(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.yy_push_error_value */
extern void T77f264(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_do_action */
extern void T77f263(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.add_external_value */
extern void T77f278(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.object_option */
extern T0* T77f223(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_identifier */
extern T0* T77f140(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_position */
extern void T232f116(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].force_last */
extern void T171f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].resize */
extern void T171f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].new_capacity */
extern T6 T171f15(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].extendible */
extern T1 T171f14(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.include_path_option */
extern T0* T77f222(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_gac_assembly */
extern T0* T77f174(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_public_key_token_id */
extern void T311f122(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_public_key_token */
extern void T311f127(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_culture_id */
extern void T311f121(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_culture */
extern void T311f126(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_version_id */
extern void T311f120(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_version */
extern void T311f125(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.tokens */
extern T0* T77f241(GE_context* ac, T0* C);
/* ET_LACE_AST_FACTORY.new_gac_assembly */
extern T0* T269f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make */
extern T0* T311c118(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_dotnet_gac_assembly */
extern void T311f123(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_dotnet_assembly */
extern void T311f128(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_from_system */
extern void T311f129(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_default_class_mapping */
extern void T311f134(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T311f188(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_class_mapping */
extern void T311f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_class */
extern T0* T311f103(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].force_last_new */
extern void T314f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].key_storage_put */
extern void T314f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].item_storage_put */
extern void T314f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].slots_put */
extern void T314f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].clashes_put */
extern void T314f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].slots_item */
extern T6 T314f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].hash_position */
extern T6 T314f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].resize */
extern void T314f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].clashes_resize */
extern void T314f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].special_integer_ */
extern T0* T314f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].key_storage_resize */
extern void T314f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].item_storage_resize */
extern void T314f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].key_storage_item */
extern T0* T314f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].clashes_item */
extern T6 T314f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].slots_resize */
extern void T314f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].new_capacity */
extern T6 T314f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].found_item */
extern T0* T314f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].item_storage_item */
extern T0* T314f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].found */
extern T1 T314f23(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].search */
extern void T314f49(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].search_position */
extern void T314f51(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_wide_character_class_mapping */
extern void T311f187(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_class_mapping */
extern void T311f186(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_ref_class_mapping */
extern void T311f185(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_class_mapping */
extern void T311f184(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_ref_class_mapping */
extern void T311f183(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_class_mapping */
extern void T311f182(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_ref_class_mapping */
extern void T311f181(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_class_mapping */
extern void T311f180(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_double_ref_class_mapping */
extern void T311f179(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_double_class_mapping */
extern void T311f178(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_ref_class_mapping */
extern void T311f177(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_class_mapping */
extern void T311f176(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.tokens */
extern T0* T311f110(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_kernel_types */
extern void T311f133(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_wide_character_type */
extern void T311f175(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_typed_pointer_type */
extern void T311f174(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_type_type */
extern void T311f173(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_system_string_type */
extern void T311f172(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_system_object_type */
extern void T311f171(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_type */
extern void T311f170(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_32_type */
extern void T311f169(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_8_type */
extern void T311f168(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_special_type */
extern void T311f167(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_routine_type */
extern void T311f166(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_64_type */
extern void T311f165(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_32_type */
extern void T311f164(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_type */
extern void T311f163(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_procedure_type */
extern void T311f162(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_predicate_type */
extern void T311f161(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_pointer_type */
extern void T311f160(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_64_type */
extern void T311f159(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_32_type */
extern void T311f158(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_16_type */
extern void T311f157(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_8_type */
extern void T311f156(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_type */
extern void T311f155(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_iterable_type */
extern void T311f154(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_ise_exception_manager_type */
extern void T311f153(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_64_type */
extern void T311f152(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_32_type */
extern void T311f151(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_16_type */
extern void T311f150(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_8_type */
extern void T311f149(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_type */
extern void T311f148(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_immutable_string_32_type */
extern void T311f147(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_function_type */
extern void T311f146(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_exception_manager_type */
extern void T311f145(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_exception_type */
extern void T311f144(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_double_type */
extern void T311f143(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_32_type */
extern void T311f142(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_8_type */
extern void T311f141(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_type */
extern void T311f140(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_boolean_type */
extern void T311f139(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_array_type */
extern void T311f138(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_tuple_type */
extern void T311f137(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_none_type */
extern void T311f136(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_imported_class */
extern void T672f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].force_first */
extern void T1796f15(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].put */
extern void T1796f23(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].move_cursors_right */
extern void T1796f30(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].move_right */
extern void T1796f29(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].put_last */
extern void T1796f28(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_any_type */
extern void T311f135(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_adapted */
extern void T311f132(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.default_read_only_value */
extern T1 T311f102(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_unknown_kernel_types */
extern void T311f131(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.initialize */
extern void T311f130(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.class_name_tester */
extern T0* T311f108(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLIES.make_empty */
extern T0* T648c5(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].make */
extern T0* T1792c12(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1792f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1792f11(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DOTNET_ASSEMBLY].make */
extern T0* T2288c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY].make */
extern T0* T1788f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DOTNET_ASSEMBLY].make_empty */
extern T0* T1789c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY].default_create */
extern T0* T1788c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_DOTNET_ASSEMBLY].force */
extern void T310f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LACE_DOTNET_ASSEMBLY].fill_with */
extern void T308f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LACE_DOTNET_ASSEMBLY].extend */
extern void T308f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T310f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_LACE_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T308f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_classname_prefix_id */
extern void T311f119(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_classname_prefix */
extern void T311f124(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_classname_prefix_id */
extern void T290f112(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T290f114(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.new_assembly */
extern T0* T77f171(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_AST_FACTORY.new_assembly */
extern T0* T269f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.make */
extern T0* T290c111(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.make_dotnet_assembly */
extern void T290f113(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.make_from_system */
extern void T290f115(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.set_default_class_mapping */
extern void T290f120(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T290f174(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_class_mapping */
extern void T290f175(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.master_class */
extern T0* T290f96(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_wide_character_class_mapping */
extern void T290f173(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_class_mapping */
extern void T290f172(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_ref_class_mapping */
extern void T290f171(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_class_mapping */
extern void T290f170(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_ref_class_mapping */
extern void T290f169(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_class_mapping */
extern void T290f168(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_ref_class_mapping */
extern void T290f167(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_class_mapping */
extern void T290f166(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_double_ref_class_mapping */
extern void T290f165(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_double_class_mapping */
extern void T290f164(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_ref_class_mapping */
extern void T290f163(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_class_mapping */
extern void T290f162(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.tokens */
extern T0* T290f103(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_kernel_types */
extern void T290f119(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T290f161(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T290f160(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_type_type */
extern void T290f159(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_system_string_type */
extern void T290f158(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_system_object_type */
extern void T290f157(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_type */
extern void T290f156(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_32_type */
extern void T290f155(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_8_type */
extern void T290f154(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_special_type */
extern void T290f153(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_routine_type */
extern void T290f152(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_64_type */
extern void T290f151(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_32_type */
extern void T290f150(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_type */
extern void T290f149(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_procedure_type */
extern void T290f148(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_predicate_type */
extern void T290f147(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_pointer_type */
extern void T290f146(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T290f145(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T290f144(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T290f143(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T290f142(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_type */
extern void T290f141(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_iterable_type */
extern void T290f140(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T290f139(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T290f138(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T290f137(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T290f136(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T290f135(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_type */
extern void T290f134(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T290f133(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_function_type */
extern void T290f132(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T290f131(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_exception_type */
extern void T290f130(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_double_type */
extern void T290f129(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_32_type */
extern void T290f128(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_8_type */
extern void T290f127(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_type */
extern void T290f126(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_boolean_type */
extern void T290f125(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_array_type */
extern void T290f124(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_tuple_type */
extern void T290f123(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_none_type */
extern void T290f122(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_any_type */
extern void T290f121(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.make_adapted */
extern void T290f118(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T290f95(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T290f117(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.initialize */
extern void T290f116(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T290f101(GE_context* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T264f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T810f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T1858f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T1857f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T1857f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T810f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1858f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1857f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T810f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T810f7(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLIES].force */
extern void T309f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLIES].fill_with */
extern void T307f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLIES].extend */
extern void T307f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLIES].aliased_resized_area */
extern T0* T309f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLIES].aliased_resized_area */
extern T0* T307f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_assemblies */
extern T0* T77f168(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_assemblies */
extern T0* T269f4(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.make */
extern T0* T264c10(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].put_last */
extern void T810f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].force */
extern void T306f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].fill_with */
extern void T293f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].extend */
extern void T293f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].aliased_resized_area */
extern T0* T306f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].aliased_resized_area */
extern T0* T293f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_EXCLUDE].force */
extern void T305f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LACE_EXCLUDE].fill_with */
extern void T304f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LACE_EXCLUDE].extend */
extern void T304f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_EXCLUDE].aliased_resized_area */
extern T0* T305f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_LACE_EXCLUDE].aliased_resized_area */
extern T0* T304f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_EXCLUDE.put_last */
extern void T288f7(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_EXCLUDE.make */
extern T0* T288c6(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].force */
extern void T303f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LACE_EXCLUDE].fill_with */
extern void T302f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LACE_EXCLUDE].extend */
extern void T302f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].aliased_resized_area */
extern T0* T303f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_LACE_EXCLUDE].aliased_resized_area */
extern T0* T302f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_CLUSTER.set_subclusters */
extern void T286f58(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_parent */
extern void T285f7(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_parent */
extern void T286f62(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_exclude */
extern void T286f57(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.new_cluster */
extern T0* T77f158(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].force_last */
extern void T270f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].key_storage_put */
extern void T270f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].slots_put */
extern void T270f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].clashes_put */
extern void T270f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].slots_item */
extern T6 T270f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].hash_position */
extern T6 T270f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].resize */
extern void T270f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].clashes_resize */
extern void T270f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].special_integer_ */
extern T0* T270f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].key_storage_resize */
extern void T270f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].item_storage_resize */
extern void T270f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].key_storage_item */
extern T0* T270f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].clashes_item */
extern T6 T270f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].slots_resize */
extern void T270f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].new_modulus */
extern T6 T270f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].new_capacity */
extern T6 T270f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].item_storage_put */
extern void T270f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].search_position */
extern void T270f44(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_EQUALITY_TESTER [[attached] ET_IDENTIFIER].test */
extern T1 T812f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.is_equal */
extern T1 T232f46(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.any_ */
extern T0* T232f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].unset_found_item */
extern void T270f39(GE_context* ac, T0* C);
/* ET_LACE_AST_FACTORY.new_cluster */
extern T0* T269f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_CLUSTER.make */
extern T0* T286c53(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T286f59(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T285f8(GE_context* ac, T0* C, T1 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTER].aliased_resized_area */
extern T0* T301f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_LACE_CLUSTER].aliased_resized_area */
extern T0* T299f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_qualified_subcluster */
extern T0* T77f156(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LACE_PARSER.report_error */
extern void T77f276(GE_context* ac, T0* C, T0* a1);
extern T1 T77f276ot1(T0* a1, T0** a2);
/* ET_LACE_ERROR_HANDLER.report_error */
extern void T78f9(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.report_error_message */
extern void T78f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.message */
extern T0* T78f6(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.integer_ */
extern T0* T77f219(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.add_subcluster */
extern void T286f61(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make_empty */
extern T0* T285c5(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].make */
extern T0* T820c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].set_internal_cursor */
extern void T820f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].new_cursor */
extern T0* T820f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LACE_CLUSTER].make */
extern T0* T1861c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTER].make */
extern T0* T301f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_CLUSTER].make_empty */
extern T0* T299c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTER].default_create */
extern T0* T301c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].found_item */
extern T0* T270f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].item_storage_item */
extern T0* T270f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].found */
extern T1 T270f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].search */
extern void T270f35(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_read_only */
extern void T286f56(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_recursive */
extern void T286f55(GE_context* ac, T0* C, T1 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTER].force */
extern void T301f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LACE_CLUSTER].fill_with */
extern void T299f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LACE_CLUSTER].extend */
extern void T299f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_abstract */
extern void T286f54(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTERS.put_last */
extern void T285f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].force_last */
extern void T820f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].resize */
extern void T820f14(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].new_capacity */
extern T6 T820f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].extendible */
extern T1 T820f7(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTERS].force */
extern void T300f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LACE_CLUSTERS].fill_with */
extern void T298f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LACE_CLUSTERS].extend */
extern void T298f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTERS].aliased_resized_area */
extern T0* T300f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_LACE_CLUSTERS].aliased_resized_area */
extern T0* T298f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_clusters */
extern T0* T77f151(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_clusters */
extern T0* T269f2(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make */
extern T0* T285c3(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].put_last */
extern void T820f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].force */
extern void T297f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LACE_CLUSTERS].fill_with */
extern void T292f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LACE_CLUSTERS].extend */
extern void T292f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].aliased_resized_area */
extern T0* T297f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_LACE_CLUSTERS].aliased_resized_area */
extern T0* T292f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_default_value */
extern T0* T77f146(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.trace_option */
extern T0* T77f240(GE_context* ac, T0* C);
/* ET_LACE_PARSER.metadata_cache_path_option */
extern T0* T77f239(GE_context* ac, T0* C);
/* ET_LACE_PARSER.msil_clr_version_option */
extern T0* T77f238(GE_context* ac, T0* C);
/* ET_LACE_PARSER.exception_trace_option */
extern T0* T77f237(GE_context* ac, T0* C);
/* ET_LACE_PARSER.no_value */
extern T0* T77f236(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yes_value */
extern T0* T77f235(GE_context* ac, T0* C);
/* ET_LACE_PARSER.console_application_option */
extern T0* T77f234(GE_context* ac, T0* C);
/* ET_LACE_PARSER.override_cluster_option */
extern T0* T77f233(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].force */
extern void T296f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_IDENTIFIER].fill_with */
extern void T294f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_IDENTIFIER].extend */
extern void T294f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].aliased_resized_area */
extern T0* T296f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_IDENTIFIER].aliased_resized_area */
extern T0* T294f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_SYSTEM].aliased_resized_area */
extern T0* T295f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_LACE_SYSTEM].aliased_resized_area */
extern T0* T291f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_system */
extern T0* T77f142(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_system */
extern T0* T269f1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.make */
extern T0* T283c149(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.set_default_class_mapping */
extern void T283f167(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_wide_character_ref_class_mapping */
extern void T283f229(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_class_mapping */
extern void T283f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.set_wide_character_class_mapping */
extern void T283f228(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_string_class_mapping */
extern void T283f227(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_real_ref_class_mapping */
extern void T283f226(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_real_class_mapping */
extern void T283f225(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_natural_ref_class_mapping */
extern void T283f224(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_natural_class_mapping */
extern void T283f223(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_integer_ref_class_mapping */
extern void T283f222(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_integer_class_mapping */
extern void T283f221(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_double_ref_class_mapping */
extern void T283f220(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_double_class_mapping */
extern void T283f219(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_character_ref_class_mapping */
extern void T283f218(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_character_class_mapping */
extern void T283f217(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.tokens */
extern T0* T283f141(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_kernel_types */
extern void T283f166(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_wide_character_type */
extern void T283f216(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_typed_pointer_type */
extern void T283f215(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_type_type */
extern void T283f214(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_system_string_type */
extern void T283f213(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_system_object_type */
extern void T283f212(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_string_type */
extern void T283f211(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_string_32_type */
extern void T283f210(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_string_8_type */
extern void T283f209(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_special_type */
extern void T283f208(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_routine_type */
extern void T283f207(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_real_64_type */
extern void T283f206(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_real_32_type */
extern void T283f205(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_real_type */
extern void T283f204(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_procedure_type */
extern void T283f203(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_predicate_type */
extern void T283f202(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_pointer_type */
extern void T283f201(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_64_type */
extern void T283f200(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_32_type */
extern void T283f199(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_16_type */
extern void T283f198(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_8_type */
extern void T283f197(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_type */
extern void T283f196(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_iterable_type */
extern void T283f195(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_ise_exception_manager_type */
extern void T283f194(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_64_type */
extern void T283f193(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_32_type */
extern void T283f192(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_16_type */
extern void T283f191(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_8_type */
extern void T283f190(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_type */
extern void T283f189(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_immutable_string_32_type */
extern void T283f188(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_function_type */
extern void T283f187(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_exception_manager_type */
extern void T283f186(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_exception_type */
extern void T283f185(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_double_type */
extern void T283f184(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_character_32_type */
extern void T283f183(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_character_8_type */
extern void T283f182(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_character_type */
extern void T283f181(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_boolean_type */
extern void T283f180(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_array_type */
extern void T283f179(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_tuple_type */
extern void T283f178(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_none_type */
extern void T283f177(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_any_type */
extern void T283f176(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.make_adapted */
extern void T283f165(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.default_read_only_value */
extern T1 T283f136(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_unknown_kernel_types */
extern void T283f164(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_system_name */
extern void T283f163(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.initialize */
extern void T283f162(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.initialize */
extern void T283f162p1(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.class_name_tester */
extern T0* T283f138(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_SYSTEM].force */
extern void T295f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LACE_SYSTEM].fill_with */
extern void T291f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LACE_SYSTEM].extend */
extern void T291f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_root_creation */
extern void T283f158(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_root_type */
extern void T283f157(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_dotnet_assemblies */
extern void T283f156(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_clusters */
extern void T283f155(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.set_system */
extern void T77f277(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_trace_mode */
extern void T283f154(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_exception_trace_mode */
extern void T283f153(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_console_application_mode */
extern void T283f152(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_external_object_pathnames */
extern void T283f151(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_external_include_pathnames */
extern void T283f150(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].forth */
extern void T273f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].cursor_forth */
extern void T273f57(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].add_traversing_cursor */
extern void T273f64(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].remove_traversing_cursor */
extern void T273f63(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_override */
extern void T286f60(GE_context* ac, T0* C, T1 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].item_for_iteration */
extern T0* T273f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].cursor_item */
extern T0* T273f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].after */
extern T1 T273f23(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].cursor_after */
extern T1 T273f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER].after */
extern T1 T816f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].start */
extern void T273f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].cursor_start */
extern void T273f56(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].cursor_off */
extern T1 T273f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER].off */
extern T1 T816f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].is_empty */
extern T1 T273f32(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_push_last_value */
extern void T77f262(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.accept */
extern void T77f261(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_do_error_action */
extern void T77f259(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.report_eof_expected_error */
extern void T77f275(GE_context* ac, T0* C);
/* ET_LACE_PARSER.read_token */
extern void T77f258(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_execute_action */
extern void T77f274(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.text_item */
extern T2 T77f221(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.string_ */
extern T0* T77f132(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_identifier_from_buffer */
extern T0* T77f220(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.platform */
extern T0* T77f218(GE_context* ac, T0* C);
/* STRING_8.to_integer */
extern T6 T17f25(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parsed_integer */
extern T6 T1416f13(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parse_string_with_type */
extern void T1416f17(GE_context* ac, T0* C, T0* a1, T6 a2);
/* STRING_TO_INTEGER_CONVERTOR.parse_character */
extern void T1416f23(GE_context* ac, T0* C, T2 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflowed */
extern T1 T1416f15(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.overflow_checker */
extern T0* T1416f14(GE_context* ac, T0* C);
/* CHARACTER_8.is_digit */
extern T1 T2f28(GE_context* ac, T2* C);
/* STRING_TO_INTEGER_CONVERTOR.reset */
extern void T1416f22(GE_context* ac, T0* C, T6 a1);
/* STRING_8.ctoi_convertor */
extern T0* T17f35(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators_acceptable */
extern void T1416f21(GE_context* ac, T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators_acceptable */
extern void T1416f20(GE_context* ac, T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators */
extern void T1416f19(GE_context* ac, T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators */
extern void T1416f18(GE_context* ac, T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.make */
extern T0* T1416c16(GE_context* ac);
/* ET_LACE_PARSER.set_start_condition */
extern void T77f282(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.text_substring */
extern T0* T77f215(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_LACE_PARSER.text */
extern T0* T77f199(GE_context* ac, T0* C);
/* ET_LACE_PARSER.text_count */
extern T6 T77f191(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_execute_eof_action */
extern void T77f273(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.terminate */
extern void T77f281(GE_context* ac, T0* C);
/* ET_LACE_PARSER.wrap */
extern T1 T77f126(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_refill_input_buffer */
extern void T77f272(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_set_content */
extern void T77f270(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_null_trans_state */
extern T6 T77f125(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.yy_previous_state */
extern T6 T77f217(GE_context* ac, T0* C);
/* ET_LACE_PARSER.fatal_error */
extern void T77f271(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_character */
extern void T161f8(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_PARSER.std */
extern T0* T77f188(GE_context* ac, T0* C);
/* ET_LACE_PARSER.special_integer_ */
extern T0* T77f161(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_init_value_stacks */
extern void T77f257(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_clear_all */
extern void T77f266(GE_context* ac, T0* C);
/* ET_LACE_PARSER.clear_all */
extern void T77f279(GE_context* ac, T0* C);
/* ET_LACE_PARSER.clear_stacks */
extern void T77f283(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_clear_value_stacks */
extern void T77f285(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].keep_head */
extern void T293f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].set_count */
extern void T293f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLIES].keep_head */
extern void T307f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLIES].set_count */
extern void T307f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_SYSTEM].keep_head */
extern void T291f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_SYSTEM].set_count */
extern void T291f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_DOTNET_ASSEMBLY].keep_head */
extern void T308f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_DOTNET_ASSEMBLY].set_count */
extern void T308f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_IDENTIFIER].keep_head */
extern void T294f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_IDENTIFIER].set_count */
extern void T294f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LACE_EXCLUDE].keep_head */
extern void T302f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LACE_EXCLUDE].set_count */
extern void T302f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_EXCLUDE].keep_head */
extern void T304f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_EXCLUDE].set_count */
extern void T304f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LACE_CLUSTERS].keep_head */
extern void T292f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LACE_CLUSTERS].set_count */
extern void T292f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_CLUSTERS].keep_head */
extern void T298f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_CLUSTERS].set_count */
extern void T298f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_CLUSTER].keep_head */
extern void T299f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_CLUSTER].set_count */
extern void T299f9(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.abort */
extern void T77f260(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].wipe_out */
extern void T171f27(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].move_all_cursors_after */
extern void T171f33(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].set_next_cursor */
extern void T618f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].set_after */
extern void T618f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].wipe_out */
extern void T273f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].slots_wipe_out */
extern void T273f55(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].clashes_wipe_out */
extern void T273f54(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].key_storage_wipe_out */
extern void T273f53(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].item_storage_wipe_out */
extern void T273f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].move_all_cursors_after */
extern void T273f51(GE_context* ac, T0* C);
/* ET_LACE_PARSER.set_input_buffer */
extern void T77f251(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_load_input_buffer */
extern void T77f256(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_file_buffer */
extern T0* T77f143(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].wipe_out */
extern void T270f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].slots_wipe_out */
extern void T270f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].clashes_wipe_out */
extern void T270f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].key_storage_wipe_out */
extern void T270f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].item_storage_wipe_out */
extern void T270f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].move_all_cursors_after */
extern void T270f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].set_next_cursor */
extern void T815f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].set_after */
extern void T815f7(GE_context* ac, T0* C);
/* ET_LACE_PARSER.reset */
extern void T77f250(GE_context* ac, T0* C);
/* ET_LACE_PARSER.reset_compressed_scanner_skeleton */
extern void T77f255(GE_context* ac, T0* C);
/* ET_LACE_PARSER.reset */
extern void T77f255p1(GE_context* ac, T0* C);
/* ET_LACE_PARSER.make */
extern T0* T77c247(GE_context* ac, T0* a1);
/* ET_LACE_PARSER.make_with_factory */
extern void T77f249(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_parser_skeleton */
extern void T77f254(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_build_parser_tables */
extern void T77f269(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yycheck_template */
extern T0* T77f187(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yyfixed_array */
extern T0* T77f242(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yycheck_template_2 */
extern void T77f291(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yyarray_subcopy */
extern void T77f298(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_LACE_PARSER.integer_array_ */
extern T0* T77f246(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yycheck_template_1 */
extern void T77f290(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yytable_template */
extern T0* T77f186(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytable_template_2 */
extern void T77f289(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yytable_template_1 */
extern void T77f288(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yypgoto_template */
extern T0* T77f185(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yypact_template */
extern T0* T77f184(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yydefgoto_template */
extern T0* T77f183(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yydefact_template */
extern T0* T77f182(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytypes2_template */
extern T0* T77f181(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytypes1_template */
extern T0* T77f180(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yyr1_template */
extern T0* T77f179(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytranslate_template */
extern T0* T77f178(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytranslate_template_2 */
extern void T77f287(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yytranslate_template_1 */
extern void T77f286(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_create_value_stacks */
extern void T77f268(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].make */
extern T0* T306f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].make_empty */
extern T0* T293c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].default_create */
extern T0* T306c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLIES].make */
extern T0* T309f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLIES].make_empty */
extern T0* T307c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLIES].default_create */
extern T0* T309c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_SYSTEM].make */
extern T0* T295f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_SYSTEM].make_empty */
extern T0* T291c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_SYSTEM].default_create */
extern T0* T295c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T310f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_DOTNET_ASSEMBLY].make_empty */
extern T0* T308c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_DOTNET_ASSEMBLY].default_create */
extern T0* T310c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].make */
extern T0* T303f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LACE_EXCLUDE].make_empty */
extern T0* T302c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].default_create */
extern T0* T303c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_EXCLUDE].make */
extern T0* T305f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_EXCLUDE].make_empty */
extern T0* T304c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_EXCLUDE].default_create */
extern T0* T305c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].make */
extern T0* T297f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LACE_CLUSTERS].make_empty */
extern T0* T292c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].default_create */
extern T0* T297c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTERS].make */
extern T0* T300f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_CLUSTERS].make_empty */
extern T0* T298c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTERS].default_create */
extern T0* T300c3(GE_context* ac);
/* ET_LACE_PARSER.make_lace_scanner */
extern void T77f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_with_buffer */
extern void T77f267(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_initialize */
extern void T77f280(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_initialize */
extern void T77f280p1(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_build_tables */
extern void T77f284(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_accept_template */
extern T0* T77f231(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_fixed_array */
extern T0* T77f244(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_meta_template */
extern T0* T77f230(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_ec_template */
extern T0* T77f229(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_ec_template_2 */
extern void T77f297(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_array_subcopy */
extern void T77f299(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_LACE_PARSER.yy_ec_template_1 */
extern void T77f296(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_def_template */
extern T0* T77f228(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_base_template */
extern T0* T77f227(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_chk_template */
extern T0* T77f226(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_chk_template_2 */
extern void T77f295(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_chk_template_1 */
extern void T77f294(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_nxt_template */
extern T0* T77f225(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_nxt_template_2 */
extern void T77f293(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_nxt_template_1 */
extern void T77f292(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.empty_buffer */
extern T0* T77f135(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].make */
extern T0* T270c33(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].make_with_equality_testers */
extern void T270f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].make_sparse_container */
extern void T270f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].set_internal_cursor */
extern void T270f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].new_cursor */
extern T0* T270f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].make */
extern T0* T815c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].make_slots */
extern void T270f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].make_clashes */
extern void T270f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].make_key_storage */
extern void T270f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].make_item_storage */
extern void T270f55(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_EQUALITY_TESTER [[attached] ET_IDENTIFIER].default_create */
extern T0* T812c2(GE_context* ac);
/* ET_LACE_AST_FACTORY.make */
extern T0* T269c7(GE_context* ac);
/* ET_LACE_ERROR_HANDLER.make_standard */
extern T0* T78c8(GE_context* ac);
/* ET_LACE_ERROR_HANDLER.std */
extern T0* T78f5(GE_context* ac, T0* C);
/* ET_LACE_ERROR_HANDLER.make_null */
extern T0* T78c7(GE_context* ac);
/* ET_LACE_ERROR_HANDLER.null_output_stream */
extern T0* T78f4(GE_context* ac, T0* C);
/* GEC.parse_ecf_file */
extern void T25f61(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.to_boolean */
extern T1 T1557f61(GE_context* ac, T0* C);
/* STRING_8.to_boolean */
extern T1 T17f43(GE_context* ac, T0* C);
/* UC_UTF8_STRING.is_boolean */
extern T1 T1557f31(GE_context* ac, T0* C);
/* STRING_8.is_boolean */
extern T1 T17f41(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.value */
extern T0* T61f8(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.has_error */
extern T1 T67f5(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_file */
extern void T66f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.parse_file */
extern T0* T66f206ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM_PARSER.parse_file */
extern T0* T66f206ac2(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8]].set_rout_disp_final */
extern void T226f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_SYSTEM_PARSER.build_system */
extern void T66f209(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.build_system */
extern T0* T66f209ac1(GE_context* ac);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_LIBRARY]].set_rout_disp_final */
extern void T240f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_LIBRARY.propagate_read_only */
extern void T260f35(GE_context* ac, T0* C);
/* ET_LIBRARY.set_read_only */
extern void T659f182(GE_context* ac, T0* C, T1 a1);
/* [attached] DS_CELL [detachable ET_ECF_SYSTEM].put */
extern void T220f3(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].wipe_out */
extern void T230f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].slots_wipe_out */
extern void T230f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].clashes_wipe_out */
extern void T230f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].key_storage_wipe_out */
extern void T230f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].item_storage_wipe_out */
extern void T230f42(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY].keep_head */
extern void T784f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY].set_count */
extern void T784f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].unset_found_item */
extern void T230f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].move_all_cursors_after */
extern void T230f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].set_next_cursor */
extern void T789f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].set_after */
extern void T789f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].wipe_out */
extern void T229f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].slots_wipe_out */
extern void T229f55(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].clashes_wipe_out */
extern void T229f54(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].key_storage_wipe_out */
extern void T229f53(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].item_storage_wipe_out */
extern void T229f52(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_ECF_LIBRARY].keep_head */
extern void T778f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_LIBRARY].set_count */
extern void T778f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].unset_found_item */
extern void T229f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].move_all_cursors_after */
extern void T229f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8].set_next_cursor */
extern void T777f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8].set_after */
extern void T777f9(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_dotnet_assemblies */
extern void T66f213(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T66f213ot1(T0* a1, T0** a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].force_last_new */
extern void T230f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].key_storage_put */
extern void T230f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].item_storage_put */
extern void T230f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY].force */
extern void T790f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY].fill_with */
extern void T784f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY].extend */
extern void T784f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].slots_put */
extern void T230f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].clashes_put */
extern void T230f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].slots_item */
extern T6 T230f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].hash_position */
extern T6 T230f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].resize */
extern void T230f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].clashes_resize */
extern void T230f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].special_integer_ */
extern T0* T230f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].key_storage_resize */
extern void T230f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].item_storage_resize */
extern void T230f54(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T790f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T784f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].key_storage_item */
extern T0* T230f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].clashes_item */
extern T6 T230f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].slots_resize */
extern void T230f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].new_modulus */
extern T6 T230f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].new_capacity */
extern T6 T230f21(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_dotnet_assembly */
extern T0* T219f2(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.make */
extern T0* T265c106(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.make_from_system */
extern void T265f107(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.set_default_class_mapping */
extern void T265f112(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T265f166(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_class_mapping */
extern void T265f167(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_class */
extern T0* T265f92(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_class_mapping */
extern void T265f165(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_class_mapping */
extern void T265f164(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_ref_class_mapping */
extern void T265f163(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_class_mapping */
extern void T265f162(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_ref_class_mapping */
extern void T265f161(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_class_mapping */
extern void T265f160(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_ref_class_mapping */
extern void T265f159(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_class_mapping */
extern void T265f158(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_ref_class_mapping */
extern void T265f157(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_class_mapping */
extern void T265f156(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_ref_class_mapping */
extern void T265f155(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_class_mapping */
extern void T265f154(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.tokens */
extern T0* T265f90(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_kernel_types */
extern void T265f111(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T265f153(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T265f152(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_type_type */
extern void T265f151(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_system_string_type */
extern void T265f150(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_system_object_type */
extern void T265f149(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_type */
extern void T265f148(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_32_type */
extern void T265f147(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_8_type */
extern void T265f146(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_special_type */
extern void T265f145(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_routine_type */
extern void T265f144(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_64_type */
extern void T265f143(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_32_type */
extern void T265f142(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_type */
extern void T265f141(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_procedure_type */
extern void T265f140(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_predicate_type */
extern void T265f139(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_pointer_type */
extern void T265f138(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T265f137(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T265f136(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T265f135(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T265f134(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_type */
extern void T265f133(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_iterable_type */
extern void T265f132(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T265f131(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T265f130(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T265f129(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T265f128(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T265f127(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_type */
extern void T265f126(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T265f125(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_function_type */
extern void T265f124(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T265f123(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_exception_type */
extern void T265f122(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_type */
extern void T265f121(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_32_type */
extern void T265f120(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_8_type */
extern void T265f119(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_type */
extern void T265f118(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_boolean_type */
extern void T265f117(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_array_type */
extern void T265f116(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_tuple_type */
extern void T265f115(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_none_type */
extern void T265f114(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_any_type */
extern void T265f113(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.make_adapted */
extern void T265f110(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T265f91(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T265f109(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.initialize */
extern void T265f108(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T265f99(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_dotnet_assembly */
extern void T267f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].found_item */
extern T0* T230f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].item_storage_item */
extern T0* T230f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].found */
extern T1 T230f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].search */
extern void T230f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].search_position */
extern void T230f46(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.as_lower */
extern T0* T1557f13(GE_context* ac, T0* C);
/* UC_UTF8_STRING.to_lower */
extern void T1557f84(GE_context* ac, T0* C);
/* STRING_8.as_lower */
extern T0* T17f26(GE_context* ac, T0* C);
/* STRING_8.to_lower */
extern void T17f69(GE_context* ac, T0* C);
/* STRING_8.to_lower_area */
extern void T17f72(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_ECF_SYSTEM_PARSER.operating_system */
extern T0* T66f26(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.full_filename */
extern T0* T66f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.dirname */
extern T0* T147f6(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.is_root_directory */
extern T1 T147f14(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.dirname */
extern T0* T146f6(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_root_directory */
extern T1 T146f16(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.is_relative_pathname */
extern T1 T147f5(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname_from_file_system */
extern T0* T147f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.any_ */
extern T0* T147f17(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname_from_file_system */
extern T0* T146f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.any_ */
extern T0* T146f19(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.windows_file_system */
extern T0* T66f20(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.file_system */
extern T0* T66f19(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.unix_file_system */
extern T0* T66f32(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.interpreted_string */
extern T0* T61f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_VARIABLES.string_ */
extern T0* T61f5(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.pathname */
extern T0* T267f22(GE_context* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T264f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T810f9(GE_context* ac, T0* C, T6 a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T264f2(GE_context* ac, T0* C);
/* ET_ECF_TARGET.fill_options */
extern void T70f55(GE_context* ac, T0* C, T0* a1);
extern T1 T70f55ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.set_trace_mode */
extern void T69f274(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_obsolete_routine_type_mode */
extern void T69f273(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_obsolete_routine_type_mode */
extern void T236f194(GE_context* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_detachable_type_mark */
extern T0* T94f81(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_detachable_mark */
extern void T472f19(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_implicit_attachment_type_mark */
extern void T69f272(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_implicit_attachment_type_mark */
extern void T236f193(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.tokens */
extern T0* T70f29(GE_context* ac, T0* C);
/* ET_ECF_OPTIONS.value */
extern T0* T581f13(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.fill_capabilities */
extern void T70f62(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_target_type_attachment_mode */
extern void T69f279(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_attachment_type_conformance_mode */
extern void T69f278(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_multithreaded_mode */
extern void T69f277(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.string_ */
extern T0* T70f30(GE_context* ac, T0* C);
/* ET_ECF_CAPABILITIES.support_value */
extern T0* T106f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.use_value */
extern T0* T106f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].found_item */
extern T0* T543f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].item_storage_item */
extern T0* T543f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].found */
extern T1 T543f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].search */
extern void T543f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].search_position */
extern void T543f45(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].hash_position */
extern T6 T543f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].key_storage_item */
extern T0* T543f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].clashes_item */
extern T6 T543f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].slots_item */
extern T6 T543f23(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_TARGET.fill_settings */
extern void T70f61(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_exception_trace_mode */
extern void T69f276(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_console_application_mode */
extern void T69f275(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.fill_root */
extern void T70f60(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.fill_root */
extern void T1501f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_root_creation */
extern void T69f281(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_root_type */
extern void T69f282(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_ALL_CLASSES.fill_root */
extern void T1500f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.unset_root_type */
extern void T69f280(GE_context* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.do_adapted */
extern void T237f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].do_all */
extern void T792f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].item */
extern T0* T792f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].forth */
extern void T229f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].cursor_forth */
extern void T229f49(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].add_traversing_cursor */
extern void T229f64(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8].set_position */
extern void T777f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].remove_traversing_cursor */
extern void T229f63(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].clashes_item */
extern T6 T229f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].item_for_iteration */
extern T0* T229f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].cursor_item */
extern T0* T229f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].item_storage_item */
extern T0* T229f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].after */
extern T1 T229f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].cursor_after */
extern T1 T229f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8].after */
extern T1 T777f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].start */
extern void T229f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].cursor_start */
extern void T229f48(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].cursor_off */
extern T1 T229f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8].off */
extern T1 T777f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].is_empty */
extern T1 T229f23(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_libraries */
extern void T66f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.parse_libraries */
extern T0* T66f212ac1(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.build_library */
extern void T66f215(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [attached] DS_CELL [detachable ET_ECF_LIBRARY].put */
extern void T259f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_library */
extern T0* T66f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].force_last_new */
extern void T229f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].key_storage_put */
extern void T229f61(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].item_storage_put */
extern void T229f60(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY].force */
extern void T783f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_LIBRARY].fill_with */
extern void T778f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_LIBRARY].extend */
extern void T778f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].slots_put */
extern void T229f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].clashes_put */
extern void T229f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].slots_item */
extern T6 T229f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].hash_position */
extern T6 T229f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].resize */
extern void T229f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].clashes_resize */
extern void T229f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].special_integer_ */
extern T0* T229f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].key_storage_resize */
extern void T229f67(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].item_storage_resize */
extern void T229f66(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T783f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T778f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].key_storage_item */
extern T0* T229f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].slots_resize */
extern void T229f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].new_modulus */
extern T6 T229f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].new_capacity */
extern T6 T229f36(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM_PARSER.fill_system_config */
extern void T66f216(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T66f216ot1(T0* a1, T0** a2);
extern T1 T66f216ot2(T0* a1, T0** a2);
/* ET_ECF_ERROR_HANDLER.report_eltm_error */
extern void T67f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_error */
extern void T67f31(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_error_message */
extern void T67f32(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_error_message */
extern void T67f32p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.message */
extern T0* T67f8(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.default_message */
extern T0* T268f9(GE_context* ac, T0* C);
/* ET_ECF_ERROR.message */
extern T0* T268f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.arguments */
extern T0* T268f6(GE_context* ac, T0* C);
/* KL_ARGUMENTS.make */
extern T0* T34c5(GE_context* ac);
/* KL_ARGUMENTS.argument */
extern T0* T34f2(GE_context* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.as_string_8 */
extern T0* T19f9(GE_context* ac, T0* C);
/* ARGUMENTS_32.argument */
extern T0* T547f1(GE_context* ac, T0* C, T6 a1);
/* [attached] ARRAY [[attached] IMMUTABLE_STRING_32].item */
extern T0* T1755f5(GE_context* ac, T0* C, T6 a1);
/* ARGUMENTS_32.internal_argument_array */
extern T0* T547f3(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] IMMUTABLE_STRING_32].put */
extern void T1755f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] ARRAY [[attached] IMMUTABLE_STRING_32].compare_objects */
extern void T1755f7(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] IMMUTABLE_STRING_32].make_filled */
extern T0* T1755c6(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [attached] ARRAY [[attached] IMMUTABLE_STRING_32].make_filled_area */
extern void T1755f9(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] IMMUTABLE_STRING_32].make_filled */
extern T0* T1756c6(GE_context* ac, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] IMMUTABLE_STRING_32].fill_with */
extern void T1756f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] IMMUTABLE_STRING_32].extend */
extern void T1756f8(GE_context* ac, T0* C, T0* a1);
/* [attached] SPECIAL [[attached] IMMUTABLE_STRING_32].make_empty */
extern void T1756f4(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] IMMUTABLE_STRING_32].make_empty */
extern T0* T1756c4(GE_context* ac, T6 a1);
/* IMMUTABLE_STRING_32.make_empty */
extern T0* T19c16(GE_context* ac);
/* IMMUTABLE_STRING_32.make */
extern void T19f17(GE_context* ac, T0* C, T6 a1);
/* KL_ARGUMENTS.internal_arguments */
extern T0* T34f4(GE_context* ac, T0* C);
/* ARGUMENTS_32.default_create */
extern T0* T547c5(GE_context* ac);
/* [attached] ARRAY [[attached] STRING_8].valid_index */
extern T1 T449f4(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.to_integer */
extern T6 T1557f29(GE_context* ac, T0* C);
/* UC_UTF8_STRING.ctoi_convertor */
extern T0* T1557f51(GE_context* ac, T0* C);
/* UC_UTF8_STRING.is_integer */
extern T1 T1557f28(GE_context* ac, T0* C);
/* UC_UTF8_STRING.is_valid_integer_or_natural */
extern T1 T1557f50(GE_context* ac, T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.is_integral_integer */
extern T1 T1416f12(GE_context* ac, T0* C);
/* STRING_8.is_integer */
extern T1 T17f37(GE_context* ac, T0* C);
/* STRING_8.is_valid_integer_or_natural */
extern T1 T17f39(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ERROR.string_ */
extern T0* T268f8(GE_context* ac, T0* C);
/* ET_ECF_ERROR.make_eltm */
extern T0* T268c105(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.filename */
extern T0* T268f14(GE_context* ac, T0* C);
/* ET_ECF_ERROR.default_message_template */
extern T0* T268f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.add_dependent_universes */
extern void T268f116(GE_context* ac, T0* C, T0* a1);
extern T1 T268f116ot1(T0* a1, T0** a2);
/* ET_ECF_TARGET.parent_path */
extern T0* T70f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].put_last */
extern void T1566f16(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT].force */
extern void T2257f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_TARGET_PARENT].fill_with */
extern void T2256f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_TARGET_PARENT].extend */
extern void T2256f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].make */
extern void T1566f13(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].make */
extern T0* T1566c13(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].set_internal_cursor */
extern void T1566f15(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].new_cursor */
extern T0* T1566f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET_PARENT].make */
extern T0* T2258c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT].make */
extern T0* T2257f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_TARGET_PARENT].make_empty */
extern T0* T2256c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT].default_create */
extern T0* T2257c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].item */
extern T0* T1564f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ERROR.add_parent_path */
extern void T268f117(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].item */
extern T0* T1566f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].force_last */
extern void T1566f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].resize */
extern void T1566f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT].aliased_resized_area */
extern T0* T2257f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_TARGET_PARENT].aliased_resized_area */
extern T0* T2256f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].new_capacity */
extern T6 T1566f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].extendible */
extern T1 T1566f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].make_default */
extern T0* T1566c11(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].default_capacity */
extern T6 T1566f8(GE_context* ac, T0* C);
/* ET_ECF_TARGETS.target_by_name */
extern T0* T255f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.string_ */
extern T0* T255f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].item */
extern T0* T1562f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_etam_error */
extern void T67f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_etam */
extern T0* T268c104(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_TARGETS.is_empty */
extern T1 T255f5(GE_context* ac, T0* C);
/* ET_ECF_TARGETS.count */
extern T6 T255f3(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].forth */
extern void T569f12(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].cursor_forth */
extern void T1542f15(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].add_traversing_cursor */
extern void T1542f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].set_next_cursor */
extern void T569f17(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].remove_traversing_cursor */
extern void T1542f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].set */
extern void T569f15(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_ECF_ERROR_HANDLER.report_eatb_error */
extern void T67f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatb */
extern T0* T268c103(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.attribute_value */
extern T0* T66f51(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_POSITION_TABLE.item */
extern T0* T637f2(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].forth */
extern void T1778f11(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].cursor_forth */
extern void T1779f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].add_traversing_cursor */
extern void T1779f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].set_next_cursor */
extern void T1778f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].remove_traversing_cursor */
extern void T1779f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].set */
extern void T1778f12(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].go_after */
extern void T1778f10(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].cursor_go_after */
extern void T1779f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].set_after */
extern void T1778f13(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].cursor_off */
extern T1 T1779f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].off */
extern T1 T1778f7(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].item */
extern T0* T1778f6(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].start */
extern void T1778f9(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].cursor_start */
extern void T1779f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].new_cursor */
extern T0* T1779f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].make */
extern T0* T1778c8(GE_context* ac, T0* a1);
/* XM_POSITION_TABLE.has */
extern T1 T637f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.is_false */
extern T1 T66f50(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.is_true */
extern T1 T66f49(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_targets */
extern T0* T66f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_ECF_TARGETS.put_last */
extern void T255f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].force_last */
extern void T1562f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET].force */
extern void T803f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_TARGET].fill_with */
extern void T801f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_TARGET].extend */
extern void T801f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].resize */
extern void T1562f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET].aliased_resized_area */
extern T0* T803f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_TARGET].aliased_resized_area */
extern T0* T801f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].new_capacity */
extern T6 T1562f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].extendible */
extern T1 T1562f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_targets */
extern T0* T219f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.make */
extern T0* T255c8(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].put_last */
extern void T1562f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].make */
extern T0* T1562c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].set_internal_cursor */
extern void T1562f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].new_cursor */
extern T0* T1562f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET].make */
extern T0* T2251c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET].make */
extern T0* T803f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_TARGET].make_empty */
extern T0* T801c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET].default_create */
extern T0* T803c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_target */
extern T0* T66f71(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
extern T1 T66f71ot1(T0* a1, T0** a2);
extern T1 T66f71ot2(T0* a1, T0** a2);
/* ET_ECF_TARGET.set_notes */
extern void T70f53(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_post_compile_actions */
extern void T70f52(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_pre_compile_actions */
extern void T70f51(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_resources */
extern void T70f50(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_objects */
extern void T70f49(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_makes */
extern void T70f48(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_linker_flags */
extern void T70f47(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_libraries */
extern void T70f46(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_includes */
extern void T70f45(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_cflags */
extern void T70f44(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_class_mappings */
extern void T70f43(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_file_rules */
extern void T70f42(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_dotnet_assemblies */
extern void T70f41(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_libraries */
extern void T70f40(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_clusters */
extern void T70f39(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.adapt_target_options */
extern void T66f233(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.adapt_options */
extern void T66f235(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_OPTIONS.set_primary_value */
extern void T581f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_value */
extern T0* T581f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SETTINGS.primary_value */
extern T0* T71f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.adapt_capabilities */
extern void T66f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ecf_1_5_0 */
extern T0* T66f67(GE_context* ac, T0* C);
/* ET_ECF_CAPABILITIES.set_primary_use_value */
extern void T106f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_CAPABILITIES.set_primary_use_value_id */
extern void T106f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].force_last */
extern void T543f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].key_storage_put */
extern void T543f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].slots_put */
extern void T543f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].clashes_put */
extern void T543f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].resize */
extern void T543f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].clashes_resize */
extern void T543f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].special_integer_ */
extern T0* T543f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].key_storage_resize */
extern void T543f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].item_storage_resize */
extern void T543f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].slots_resize */
extern void T543f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].new_modulus */
extern T6 T543f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].new_capacity */
extern T6 T543f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].item_storage_put */
extern void T543f46(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].unset_found_item */
extern void T543f44(GE_context* ac, T0* C);
/* ET_ECF_CAPABILITIES.set_primary_support_value */
extern void T106f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ecf_1_11_0 */
extern T0* T66f57(GE_context* ac, T0* C);
/* ET_ECF_CAPABILITIES.primary_use_value */
extern T0* T106f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.primary_use_value_id */
extern T0* T106f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.primary_support_value */
extern T0* T106f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_abstract */
extern void T70f38(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.set_version */
extern void T70f37(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_version */
extern T0* T66f114(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_VERSION.set_copyright */
extern void T1459f14(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_VERSION.set_company */
extern void T1459f13(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_VERSION.set_product */
extern void T1459f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_VERSION.make_major */
extern T0* T1459c11(GE_context* ac, T6 a1);
/* ET_ECF_VERSION.make_major_minor */
extern T0* T1459c10(GE_context* ac, T6 a1, T6 a2);
/* ET_ECF_ERROR_HANDLER.report_eats_error */
extern void T67f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eats */
extern T0* T268c107(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_VERSION.make_major_minor_release */
extern T0* T1459c9(GE_context* ac, T6 a1, T6 a2, T6 a3);
/* ET_ECF_VERSION.make */
extern T0* T1459c8(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_ECF_ERROR_HANDLER.report_eati_error */
extern void T67f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eati */
extern T0* T268c106(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_variable */
extern void T66f231(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_VARIABLES.set_primary_value */
extern void T61f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_VARIABLES.primary_value */
extern T0* T61f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_setting */
extern void T66f230(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_TARGET.set_root */
extern void T70f36(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_root */
extern T0* T66f110(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ROOT_CLASS.set_cluster_name */
extern void T1501f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.set_creation_procedure_name */
extern void T1501f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_root_class */
extern T0* T219f24(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.make */
extern T0* T1501c4(GE_context* ac, T0* a1);
/* ET_ECF_AST_FACTORY.new_root_all_classes */
extern T0* T219f23(GE_context* ac, T0* C);
/* ET_ECF_ROOT_ALL_CLASSES.make */
extern T0* T1500c1(GE_context* ac);
/* ET_ECF_TARGET.set_precompiled_library */
extern void T70f35(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_adapted_precompiled_library */
extern T0* T66f108(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_adapted_precompiled_library */
extern T0* T66f108ac1(GE_context* ac, T0* a1);
extern T1 T66f108ot1(T0* a1, T0** a2);
extern T1 T66f108ot2(T0* a1, T0** a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_OPTIONS]].set_rout_disp_final */
extern void T1498f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_conditions */
extern void T1455f29(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_visible_classes */
extern void T1455f28(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_class_renamings */
extern void T1455f27(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_class_options */
extern void T1455f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].do_all */
extern void T1506f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].item_storage_item */
extern T0* T1506f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].clashes_item */
extern T6 T1506f28(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_use_application_options */
extern void T1455f24(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_read_only */
extern void T1455f23(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_classname_prefix */
extern void T1455f22(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_eifgens_location */
extern void T1455f21(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_visible_classes */
extern T0* T66f137(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].force_last */
extern void T1509f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS].force */
extern void T2235f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS].fill_with */
extern void T2236f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS].extend */
extern void T2236f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].resize */
extern void T1509f12(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS].aliased_resized_area */
extern T0* T2235f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS].aliased_resized_area */
extern T0* T2236f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].new_capacity */
extern T6 T1509f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].extendible */
extern T1 T1509f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_visible_classes */
extern T0* T219f41(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].make */
extern T0* T1509c9(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].set_internal_cursor */
extern void T1509f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].new_cursor */
extern T0* T1509f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_VISIBLE_CLASS].make */
extern T0* T2237c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS].make */
extern T0* T2235f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS].make_empty */
extern T0* T2236c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS].default_create */
extern T0* T2235c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_visible_class */
extern T0* T66f169(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_VISIBLE_CLASS.set_new_feature_name */
extern void T1508f8(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_VISIBLE_CLASS.set_new_class_name */
extern void T1508f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_VISIBLE_CLASS.set_feature_name */
extern void T1508f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_visible_class */
extern T0* T219f44(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_VISIBLE_CLASS.make */
extern T0* T1508c5(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_renamings */
extern T0* T66f135(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_renaming */
extern void T66f236(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR_HANDLER.report_eatd_error */
extern void T67f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatd */
extern T0* T268c115(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_class_renamings */
extern T0* T219f40(GE_context* ac, T0* C);
/* ET_ECF_AST_FACTORY.case_insensitive_string_equality_tester */
extern T0* T219f51(GE_context* ac, T0* C);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.default_create */
extern T0* T212c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_options */
extern T0* T66f133(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_AST_FACTORY.new_options */
extern T0* T219f39(GE_context* ac, T0* C);
/* ET_ECF_OPTIONS.make */
extern T0* T581c14(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_OPTIONS.make */
extern T0* T581f14ac1(GE_context* ac, T0* a1);
/* [attached] FUNCTION [[attached] TUPLE [[attached] STRING_8], [attached] INTEGER_32].set_rout_disp_final */
extern void T214f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* KL_STRING_ROUTINES.case_insensitive_hash_code */
extern T6 T38f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].set_hash_function */
extern void T57f73(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_AGENT_HASH_FUNCTION [[attached] STRING_8].make */
extern T0* T210c3(GE_context* ac, T0* a1);
/* ET_ECF_OPTIONS.string_ */
extern T0* T581f10(GE_context* ac, T0* C);
/* ET_ECF_OPTIONS.case_insensitive_string_equality_tester */
extern T0* T581f9(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_description */
extern void T1455f20(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_class_options */
extern T0* T66f132(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].force_last */
extern void T1506f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].key_storage_put */
extern void T1506f46(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].slots_put */
extern void T1506f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].clashes_put */
extern void T1506f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].slots_item */
extern T6 T1506f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].hash_position */
extern T6 T1506f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].resize */
extern void T1506f43(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].clashes_resize */
extern void T1506f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].special_integer_ */
extern T0* T1506f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].key_storage_resize */
extern void T1506f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].item_storage_resize */
extern void T1506f49(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS].aliased_resized_area */
extern T0* T2233f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_OPTIONS].aliased_resized_area */
extern T0* T2228f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].key_storage_item */
extern T0* T1506f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].slots_resize */
extern void T1506f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].new_modulus */
extern T6 T1506f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].new_capacity */
extern T6 T1506f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].item_storage_put */
extern void T1506f42(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS].force */
extern void T2233f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_OPTIONS].fill_with */
extern void T2228f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_OPTIONS].extend */
extern void T2228f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].search_position */
extern void T1506f40(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].unset_found_item */
extern void T1506f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].found_item */
extern T0* T1506f25(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].found */
extern T1 T1506f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].search */
extern void T1506f36(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_class_options */
extern T0* T219f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].set_key_equality_tester */
extern void T1506f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_map */
extern T0* T1506c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_with_equality_testers */
extern void T1506f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_sparse_container */
extern void T1506f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].set_internal_cursor */
extern void T1506f56(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].new_cursor */
extern T0* T1506f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make */
extern T0* T2234c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_slots */
extern void T1506f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_clashes */
extern void T1506f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_key_storage */
extern void T1506f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_item_storage */
extern void T1506f52(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS].make */
extern T0* T2233f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_OPTIONS].make_empty */
extern T0* T2228c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS].default_create */
extern T0* T2233c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_conditions */
extern T0* T66f130(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T66f130ot1(T0* a1, T0** a2);
extern T1 T66f130ot2(T0* a1, T0** a2);
/* ET_ECF_ORED_CONDITIONS.put_last */
extern void T1503f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].force_last */
extern void T2226f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS].force */
extern void T2542f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS].fill_with */
extern void T2543f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS].extend */
extern void T2543f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].resize */
extern void T2226f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS].aliased_resized_area */
extern T0* T2542f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS].aliased_resized_area */
extern T0* T2543f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].new_capacity */
extern T6 T2226f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].extendible */
extern T1 T2226f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_ored_conditions */
extern T0* T219f37(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ORED_CONDITIONS.make */
extern T0* T1503c6(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].put_last */
extern void T2226f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].make */
extern T0* T2226c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].set_internal_cursor */
extern void T2226f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].new_cursor */
extern T0* T2226f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ANDED_CONDITIONS].make */
extern T0* T2544c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS].make */
extern T0* T2542f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS].make_empty */
extern T0* T2543c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS].default_create */
extern T0* T2542c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_condition */
extern T0* T66f168(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T66f168ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_version_condition */
extern T0* T66f184(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabj_error */
extern void T67f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabj */
extern T0* T268c114(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.make */
extern T0* T1525c7(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_COMPILER_VERSION_CONDITION.make */
extern T0* T1524c7(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabi_error */
extern void T67f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabi */
extern T0* T268c113(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabh_error */
extern void T67f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR.make_eabh */
extern T0* T268c112(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR_HANDLER.report_eabg_error */
extern void T67f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabg */
extern T0* T268c111(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabf_error */
extern void T67f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabf */
extern T0* T268c110(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* UT_VERSION.make_major_minor_revision */
extern T0* T88c20(GE_context* ac, T6 a1, T6 a2, T6 a3);
/* UT_VERSION.make_major_minor */
extern T0* T88c19(GE_context* ac, T6 a1, T6 a2);
/* UT_VERSION.make_major */
extern T0* T88c18(GE_context* ac, T6 a1);
/* ET_ECF_SYSTEM_PARSER.new_platform_condition */
extern T0* T66f183(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eatn_error */
extern void T67f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatn */
extern T0* T268c109(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_platform_condition */
extern T0* T219f50(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_PLATFORM_CONDITION.make */
extern T0* T1523c9(GE_context* ac, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.make_excluded */
extern T0* T1523c8(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eatx_error */
extern void T67f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatx */
extern T0* T268c108(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.new_multithreaded_condition */
extern T0* T66f181(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_concurrency_condition */
extern T0* T219f46(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_CONCURRENCY_CONDITION.make */
extern T0* T1519c10(GE_context* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.make_excluded */
extern T0* T1519c9(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_dynamic_runtime_condition */
extern T0* T66f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_dynamic_runtime_condition */
extern T0* T219f49(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.make */
extern T0* T1522c5(GE_context* ac, T1 a1);
/* ET_ECF_SYSTEM_PARSER.new_dotnet_condition */
extern T0* T66f177(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_dotnet_condition */
extern T0* T219f48(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_DOTNET_CONDITION.make */
extern T0* T1521c5(GE_context* ac, T1 a1);
/* ET_ECF_SYSTEM_PARSER.new_custom_condition */
extern T0* T66f175(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_custom_condition */
extern T0* T219f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_ECF_CUSTOM_CONDITION.make */
extern T0* T1520c13(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CUSTOM_CONDITION.make_excluded */
extern T0* T1520c12(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_concurrency_condition */
extern T0* T66f173(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ANDED_CONDITIONS.put_last */
extern void T1505f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].force_last */
extern void T2227f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM].force */
extern void T2545f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_CONDITION_ITEM].fill_with */
extern void T2546f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_CONDITION_ITEM].extend */
extern void T2546f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].resize */
extern void T2227f13(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM].aliased_resized_area */
extern T0* T2545f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_CONDITION_ITEM].aliased_resized_area */
extern T0* T2546f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].new_capacity */
extern T6 T2227f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].extendible */
extern T1 T2227f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM_PARSER.new_build_condition */
extern T0* T66f171(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_build_condition */
extern T0* T219f45(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_BUILD_CONDITION.make */
extern T0* T1518c8(GE_context* ac, T0* a1);
/* ET_ECF_BUILD_CONDITION.make_excluded */
extern T0* T1518c7(GE_context* ac, T0* a1);
/* ET_ECF_AST_FACTORY.new_anded_conditions */
extern T0* T219f43(GE_context* ac, T0* C);
/* ET_ECF_ANDED_CONDITIONS.make_empty */
extern T0* T1505c6(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].make */
extern T0* T2227c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].set_internal_cursor */
extern void T2227f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].new_cursor */
extern T0* T2227f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CONDITION_ITEM].make */
extern T0* T2547c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM].make */
extern T0* T2545f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_CONDITION_ITEM].make_empty */
extern T0* T2546c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM].default_create */
extern T0* T2545c3(GE_context* ac);
/* ET_ECF_AST_FACTORY.new_adapted_precompiled_library */
extern T0* T219f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.make */
extern T0* T1455c19(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.make_adapted_library */
extern void T1455f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.default_read_only_value */
extern T1 T1455f18(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_library */
extern T0* T94f282(GE_context* ac, T0* C);
/* ET_LIBRARY.make */
extern T0* T659c107(GE_context* ac, T0* a1, T0* a2);
/* ET_LIBRARY.make_from_system */
extern void T659f108(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.set_default_class_mapping */
extern void T659f113(GE_context* ac, T0* C);
/* ET_LIBRARY.set_wide_character_ref_class_mapping */
extern void T659f167(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_class_mapping */
extern void T659f168(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.set_wide_character_class_mapping */
extern void T659f166(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_string_class_mapping */
extern void T659f165(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_real_ref_class_mapping */
extern void T659f164(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_real_class_mapping */
extern void T659f163(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_natural_ref_class_mapping */
extern void T659f162(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_natural_class_mapping */
extern void T659f161(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_integer_ref_class_mapping */
extern void T659f160(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_integer_class_mapping */
extern void T659f159(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_double_ref_class_mapping */
extern void T659f158(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_double_class_mapping */
extern void T659f157(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_character_ref_class_mapping */
extern void T659f156(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_character_class_mapping */
extern void T659f155(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.tokens */
extern T0* T659f91(GE_context* ac, T0* C);
/* ET_LIBRARY.set_kernel_types */
extern void T659f112(GE_context* ac, T0* C);
/* ET_LIBRARY.set_wide_character_type */
extern void T659f154(GE_context* ac, T0* C);
/* ET_LIBRARY.set_typed_pointer_type */
extern void T659f153(GE_context* ac, T0* C);
/* ET_LIBRARY.set_type_type */
extern void T659f152(GE_context* ac, T0* C);
/* ET_LIBRARY.set_system_string_type */
extern void T659f151(GE_context* ac, T0* C);
/* ET_LIBRARY.set_system_object_type */
extern void T659f150(GE_context* ac, T0* C);
/* ET_LIBRARY.set_string_type */
extern void T659f149(GE_context* ac, T0* C);
/* ET_LIBRARY.set_string_32_type */
extern void T659f148(GE_context* ac, T0* C);
/* ET_LIBRARY.set_string_8_type */
extern void T659f147(GE_context* ac, T0* C);
/* ET_LIBRARY.set_special_type */
extern void T659f146(GE_context* ac, T0* C);
/* ET_LIBRARY.set_routine_type */
extern void T659f145(GE_context* ac, T0* C);
/* ET_LIBRARY.set_real_64_type */
extern void T659f144(GE_context* ac, T0* C);
/* ET_LIBRARY.set_real_32_type */
extern void T659f143(GE_context* ac, T0* C);
/* ET_LIBRARY.set_real_type */
extern void T659f142(GE_context* ac, T0* C);
/* ET_LIBRARY.set_procedure_type */
extern void T659f141(GE_context* ac, T0* C);
/* ET_LIBRARY.set_predicate_type */
extern void T659f140(GE_context* ac, T0* C);
/* ET_LIBRARY.set_pointer_type */
extern void T659f139(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_64_type */
extern void T659f138(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_32_type */
extern void T659f137(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_16_type */
extern void T659f136(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_8_type */
extern void T659f135(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_type */
extern void T659f134(GE_context* ac, T0* C);
/* ET_LIBRARY.set_iterable_type */
extern void T659f133(GE_context* ac, T0* C);
/* ET_LIBRARY.set_ise_exception_manager_type */
extern void T659f132(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_64_type */
extern void T659f131(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_32_type */
extern void T659f130(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_16_type */
extern void T659f129(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_8_type */
extern void T659f128(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_type */
extern void T659f127(GE_context* ac, T0* C);
/* ET_LIBRARY.set_immutable_string_32_type */
extern void T659f126(GE_context* ac, T0* C);
/* ET_LIBRARY.set_function_type */
extern void T659f125(GE_context* ac, T0* C);
/* ET_LIBRARY.set_exception_manager_type */
extern void T659f124(GE_context* ac, T0* C);
/* ET_LIBRARY.set_exception_type */
extern void T659f123(GE_context* ac, T0* C);
/* ET_LIBRARY.set_double_type */
extern void T659f122(GE_context* ac, T0* C);
/* ET_LIBRARY.set_character_32_type */
extern void T659f121(GE_context* ac, T0* C);
/* ET_LIBRARY.set_character_8_type */
extern void T659f120(GE_context* ac, T0* C);
/* ET_LIBRARY.set_character_type */
extern void T659f119(GE_context* ac, T0* C);
/* ET_LIBRARY.set_boolean_type */
extern void T659f118(GE_context* ac, T0* C);
/* ET_LIBRARY.set_array_type */
extern void T659f117(GE_context* ac, T0* C);
/* ET_LIBRARY.set_tuple_type */
extern void T659f116(GE_context* ac, T0* C);
/* ET_LIBRARY.set_none_type */
extern void T659f115(GE_context* ac, T0* C);
/* ET_LIBRARY.set_any_type */
extern void T659f114(GE_context* ac, T0* C);
/* ET_LIBRARY.make_adapted */
extern void T659f111(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.default_read_only_value */
extern T1 T659f92(GE_context* ac, T0* C);
/* ET_LIBRARY.set_unknown_kernel_types */
extern void T659f110(GE_context* ac, T0* C);
/* ET_LIBRARY.initialize */
extern void T659f109(GE_context* ac, T0* C);
/* ET_LIBRARY.initialize */
extern void T659f109p1(GE_context* ac, T0* C);
/* ET_LIBRARY.class_name_tester */
extern T0* T659f101(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.tokens */
extern T0* T1455f17(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_actions */
extern T0* T66f105(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].force_last */
extern void T1493f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION].force */
extern void T2223f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_ACTION].fill_with */
extern void T2224f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_ACTION].extend */
extern void T2224f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].resize */
extern void T1493f12(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION].aliased_resized_area */
extern T0* T2223f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_ACTION].aliased_resized_area */
extern T0* T2224f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].new_capacity */
extern T6 T1493f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].extendible */
extern T1 T1493f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_actions */
extern T0* T219f21(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].make */
extern T0* T1493c9(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].set_internal_cursor */
extern void T1493f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].new_cursor */
extern T0* T1493f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ACTION].make */
extern T0* T2225c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION].make */
extern T0* T2223f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_ACTION].make_empty */
extern T0* T2224c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION].default_create */
extern T0* T2223c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_action */
extern T0* T66f128(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T66f128ot1(T0* a1, T0** a2);
extern T1 T66f128ot2(T0* a1, T0** a2);
/* ET_ECF_ACTION.set_conditions */
extern void T1492f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ACTION.set_working_directory */
extern void T1492f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ACTION.set_must_succeed */
extern void T1492f8(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ACTION.set_description */
extern void T1492f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_action */
extern T0* T219f36(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ACTION.make */
extern T0* T1492c6(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_options */
extern void T66f229(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T66f229ot1(T0* a1, T0** a2);
extern T1 T66f229ot2(T0* a1, T0** a2);
/* ET_ECF_OPTIONS.set_description */
extern void T581f19(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_warning */
extern void T66f243(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_OPTIONS.set_primary_warning_value */
extern void T581f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_warning_value */
extern T0* T581f8(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_debug */
extern void T66f242(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_OPTIONS.set_primary_debug_value */
extern void T581f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_debug_value */
extern T0* T581f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_assertions */
extern void T66f241(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T66f241ot1(T0* a1, T0** a2);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].new_iterator */
extern T0* T57f30(GE_context* ac, T0* C);
/* ET_ECF_OPTIONS.set_primary_assertion_value */
extern void T581f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_assertion_value */
extern T0* T581f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_mappings */
extern T0* T66f102(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_mapping */
extern void T66f234(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_class_mappings */
extern T0* T219f20(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_adapted_libraries */
extern T0* T66f100(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ADAPTED_LIBRARIES.put_last */
extern void T1490f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].force_last */
extern void T2222f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY].force */
extern void T2540f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY].fill_with */
extern void T2539f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY].extend */
extern void T2539f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].resize */
extern void T2222f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T2540f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T2539f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].new_capacity */
extern T6 T2222f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].extendible */
extern T1 T2222f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_adapted_libraries */
extern T0* T219f19(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.make */
extern T0* T1490c5(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].put_last */
extern void T2222f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T2222c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].set_internal_cursor */
extern void T2222f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].new_cursor */
extern T0* T2222f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T2541c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T2540f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY].make_empty */
extern T0* T2539c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY].default_create */
extern T0* T2540c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_adapted_library */
extern T0* T66f127(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_adapted_library */
extern T0* T66f127ac1(GE_context* ac, T0* a1);
extern T1 T66f127ot1(T0* a1, T0** a2);
extern T1 T66f127ot2(T0* a1, T0** a2);
/* ET_ECF_ADAPTED_LIBRARY.set_notes */
extern void T260f32(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_conditions */
extern void T260f31(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_visible_classes */
extern void T260f30(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_class_renamings */
extern void T260f29(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_class_options */
extern void T260f28(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_use_application_options */
extern void T260f26(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_LIBRARY.set_read_only */
extern void T260f25(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_LIBRARY.set_classname_prefix */
extern void T260f24(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_description */
extern void T260f23(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_adapted_library */
extern T0* T219f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_LIBRARY.make */
extern T0* T260c22(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_LIBRARY.make_adapted_library */
extern void T260f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_LIBRARY.default_read_only_value */
extern T1 T260f18(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.tokens */
extern T0* T260f17(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_override_clusters */
extern T0* T66f98(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_CLUSTERS.put_last */
extern void T1464f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].force_last */
extern void T2212f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER].force */
extern void T2506f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_CLUSTER].fill_with */
extern void T2505f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_CLUSTER].extend */
extern void T2505f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].resize */
extern void T2212f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T2506f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T2505f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].new_capacity */
extern T6 T2212f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].extendible */
extern T1 T2212f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_clusters */
extern T0* T219f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.make */
extern T0* T1464c5(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].put_last */
extern void T2212f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].make */
extern T0* T2212c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].set_internal_cursor */
extern void T2212f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].new_cursor */
extern T0* T2212f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER].make */
extern T0* T2507c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER].make */
extern T0* T2506f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_CLUSTER].make_empty */
extern T0* T2505c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER].default_create */
extern T0* T2506c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_override_cluster */
extern T0* T66f126(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_override_cluster */
extern T0* T66f126ac1(GE_context* ac, T0* a1);
extern T1 T66f126ot1(T0* a1, T0** a2);
extern T1 T66f126ot2(T0* a1, T0** a2);
/* ET_ECF_CLUSTER.set_conditions */
extern void T1463f83(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_provider_groups */
extern void T1463f82(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_visible_classes */
extern void T1463f81(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_class_mappings */
extern void T1463f80(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_class_renamings */
extern void T1463f79(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_class_options */
extern void T1463f78(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_options */
extern void T1463f77(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_conditioned_file_rules */
extern void T1463f76(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_conditioned_subclusters */
extern void T1463f75(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_parent */
extern void T1464f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_parent */
extern void T1463f89(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_recursive */
extern void T1463f74(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_read_only */
extern void T1463f73(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_classname_prefix */
extern void T1463f72(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_hidden */
extern void T1463f71(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM_PARSER.new_provider_groups */
extern T0* T66f157(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_provider_group */
extern void T66f237(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_provider_groups */
extern T0* T219f42(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.set_overridden_group */
extern void T1463f86(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_overridden_group */
extern T0* T66f164(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.set_description */
extern void T1463f70(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_override */
extern void T1463f85(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_AST_FACTORY.new_cluster */
extern T0* T219f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_CLUSTER.make */
extern T0* T1463c69(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_CLUSTER.set_use_obsolete_syntax */
extern void T1463f88(GE_context* ac, T0* C, T1 a1);
/* UT_VERSION.is_less_equal */
extern T1 T88f15(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.ecf_1_4_0 */
extern T0* T1463f45(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T1463f87(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T1464f10(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM_PARSER.new_file_rules */
extern T0* T66f96(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_FILE_RULES.put_last */
extern void T1488f5(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].force_last */
extern void T2221f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE].force */
extern void T2536f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_FILE_RULE].fill_with */
extern void T2537f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_FILE_RULE].extend */
extern void T2537f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].resize */
extern void T2221f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T2536f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T2537f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].new_capacity */
extern T6 T2221f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].extendible */
extern T1 T2221f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_file_rules */
extern T0* T219f18(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.make */
extern T0* T1488c4(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].put_last */
extern void T2221f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].make */
extern T0* T2221c11(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].set_internal_cursor */
extern void T2221f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].new_cursor */
extern T0* T2221f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_FILE_RULE].make */
extern T0* T2538c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE].make */
extern T0* T2536f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_FILE_RULE].make_empty */
extern T0* T2537c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE].default_create */
extern T0* T2536c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_file_rule */
extern T0* T66f125(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T66f125ot1(T0* a1, T0** a2);
/* ET_ECF_FILE_RULE.set_description */
extern void T1487f13(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULE.set_conditions */
extern void T1487f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_file_rule */
extern T0* T219f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_FILE_RULE.make */
extern T0* T1487c11(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_FILE_RULE.compiled_regexp */
extern T0* T1487f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8].forth */
extern void T544f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION].put_last */
extern void T2433f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] RX_PCRE_REGULAR_EXPRESSION].force */
extern void T2653f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] RX_PCRE_REGULAR_EXPRESSION].fill_with */
extern void T2654f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] RX_PCRE_REGULAR_EXPRESSION].extend */
extern void T2654f7(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_compiled */
extern T1 T410f300(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8].item */
extern T0* T544f6(GE_context* ac, T0* C);
/* ET_ECF_FILE_RULE.operating_system */
extern T0* T1487f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8].start */
extern void T544f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T2433c9(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION].set_internal_cursor */
extern void T2433f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION].new_cursor */
extern T0* T2433f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T2655c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T2653f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] RX_PCRE_REGULAR_EXPRESSION].make_empty */
extern T0* T2654c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] RX_PCRE_REGULAR_EXPRESSION].default_create */
extern T0* T2653c2(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_resources */
extern T0* T66f94(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_RESOURCES.put_last */
extern void T1485f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].force_last */
extern void T2219f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE].force */
extern void T2532f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE].fill_with */
extern void T2533f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE].extend */
extern void T2533f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].resize */
extern void T2219f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE].aliased_resized_area */
extern T0* T2532f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE].aliased_resized_area */
extern T0* T2533f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].new_capacity */
extern T6 T2219f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].extendible */
extern T1 T2219f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_resources */
extern T0* T219f17(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCES.make */
extern T0* T1485c3(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].put_last */
extern void T2219f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T2219c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].set_internal_cursor */
extern void T2219f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].new_cursor */
extern T0* T2219f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T2534c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T2532f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE].make_empty */
extern T0* T2533c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE].default_create */
extern T0* T2532c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_resource */
extern T0* T66f124(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T66f124ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_RESOURCE.set_conditions */
extern void T1484f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCE.set_description */
extern void T1484f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_resource */
extern T0* T219f33(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCE.make */
extern T0* T1484c9(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_objects */
extern T0* T66f92(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_OBJECTS.put_last */
extern void T1482f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].force_last */
extern void T2218f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT].force */
extern void T2528f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT].fill_with */
extern void T2529f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT].extend */
extern void T2529f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].resize */
extern void T2218f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T2528f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T2529f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].new_capacity */
extern T6 T2218f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].extendible */
extern T1 T2218f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_objects */
extern T0* T219f16(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECTS.make */
extern T0* T1482c3(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].put_last */
extern void T2218f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T2218c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].set_internal_cursor */
extern void T2218f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].new_cursor */
extern T0* T2218f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T2530c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T2528f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT].make_empty */
extern T0* T2529c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT].default_create */
extern T0* T2528c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_object */
extern T0* T66f123(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T66f123ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_OBJECT.set_conditions */
extern void T1481f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECT.set_description */
extern void T1481f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_object */
extern T0* T219f32(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECT.make */
extern T0* T1481c9(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_makes */
extern T0* T66f90(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_MAKES.put_last */
extern void T1479f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].force_last */
extern void T2217f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE].force */
extern void T2524f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE].fill_with */
extern void T2525f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE].extend */
extern void T2525f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].resize */
extern void T2217f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE].aliased_resized_area */
extern T0* T2524f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE].aliased_resized_area */
extern T0* T2525f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].new_capacity */
extern T6 T2217f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].extendible */
extern T1 T2217f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_makes */
extern T0* T219f15(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_MAKES.make */
extern T0* T1479c3(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].put_last */
extern void T2217f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].make */
extern T0* T2217c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].set_internal_cursor */
extern void T2217f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].new_cursor */
extern T0* T2217f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_MAKE].make */
extern T0* T2526c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE].make */
extern T0* T2524f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE].make_empty */
extern T0* T2525c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE].default_create */
extern T0* T2524c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_make */
extern T0* T66f122(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T66f122ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_MAKE.set_conditions */
extern void T1478f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_MAKE.set_description */
extern void T1478f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_make */
extern T0* T219f31(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_MAKE.make */
extern T0* T1478c9(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_linker_flags */
extern T0* T66f88(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_LINKER_FLAGS.put_last */
extern void T1476f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].force_last */
extern void T2216f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].force */
extern void T2520f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].fill_with */
extern void T2521f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].extend */
extern void T2521f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].resize */
extern void T2216f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].aliased_resized_area */
extern T0* T2520f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].aliased_resized_area */
extern T0* T2521f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].new_capacity */
extern T6 T2216f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].extendible */
extern T1 T2216f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_linker_flags */
extern T0* T219f14(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAGS.make */
extern T0* T1476c3(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].put_last */
extern void T2216f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T2216c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].set_internal_cursor */
extern void T2216f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].new_cursor */
extern T0* T2216f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T2522c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T2520f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].make_empty */
extern T0* T2521c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].default_create */
extern T0* T2520c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_linker_flag */
extern T0* T66f121(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T66f121ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_LINKER_FLAG.set_conditions */
extern void T1475f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAG.set_description */
extern void T1475f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_linker_flag */
extern T0* T219f30(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAG.make */
extern T0* T1475c5(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_libraries */
extern T0* T66f86(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_LIBRARIES.put_last */
extern void T1473f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].force_last */
extern void T2215f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY].force */
extern void T2516f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY].fill_with */
extern void T2517f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY].extend */
extern void T2517f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].resize */
extern void T2215f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T2516f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T2517f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].new_capacity */
extern T6 T2215f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].extendible */
extern T1 T2215f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_libraries */
extern T0* T219f13(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARIES.make */
extern T0* T1473c3(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].put_last */
extern void T2215f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T2215c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].set_internal_cursor */
extern void T2215f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].new_cursor */
extern T0* T2215f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T2518c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T2516f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY].make_empty */
extern T0* T2517c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY].default_create */
extern T0* T2516c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_library */
extern T0* T66f120(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T66f120ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_LIBRARY.set_conditions */
extern void T1472f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.set_description */
extern void T1472f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_library */
extern T0* T219f29(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.make */
extern T0* T1472c9(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_includes */
extern T0* T66f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_INCLUDES.put_last */
extern void T1470f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].force_last */
extern void T2214f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE].force */
extern void T2512f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE].fill_with */
extern void T2513f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE].extend */
extern void T2513f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].resize */
extern void T2214f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T2512f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T2513f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].new_capacity */
extern T6 T2214f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].extendible */
extern T1 T2214f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_includes */
extern T0* T219f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDES.make */
extern T0* T1470c3(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].put_last */
extern void T2214f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T2214c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].set_internal_cursor */
extern void T2214f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].new_cursor */
extern T0* T2214f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T2514c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T2512f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE].make_empty */
extern T0* T2513c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE].default_create */
extern T0* T2512c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_include */
extern T0* T66f119(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T66f119ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_INCLUDE.set_conditions */
extern void T1469f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDE.set_description */
extern void T1469f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_include */
extern T0* T219f28(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDE.make */
extern T0* T1469c9(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_cflags */
extern T0* T66f82(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_CFLAGS.put_last */
extern void T1467f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].force_last */
extern void T2213f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG].force */
extern void T2508f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG].fill_with */
extern void T2509f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG].extend */
extern void T2509f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].resize */
extern void T2213f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG].aliased_resized_area */
extern T0* T2508f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG].aliased_resized_area */
extern T0* T2509f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].new_capacity */
extern T6 T2213f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].extendible */
extern T1 T2213f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_cflags */
extern T0* T219f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_CFLAGS.make */
extern T0* T1467c3(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].put_last */
extern void T2213f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T2213c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].set_internal_cursor */
extern void T2213f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].new_cursor */
extern T0* T2213f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T2510c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T2508f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG].make_empty */
extern T0* T2509c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG].default_create */
extern T0* T2508c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_cflag */
extern T0* T66f118(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T66f118ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_CFLAG.set_conditions */
extern void T1466f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_CFLAG.set_description */
extern void T1466f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_cflag */
extern T0* T219f27(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_CFLAG.make */
extern T0* T1466c5(GE_context* ac, T0* a1);
/* ET_ECF_TARGET.set_description */
extern void T70f34(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_clusters */
extern T0* T66f80(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_SYSTEM_PARSER.new_cluster */
extern T0* T66f117(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_cluster */
extern T0* T66f117ac1(GE_context* ac, T0* a1);
extern T1 T66f117ot1(T0* a1, T0** a2);
extern T1 T66f117ot2(T0* a1, T0** a2);
/* ET_ECF_CLUSTER.set_notes */
extern void T1463f84(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_capabilities */
extern void T66f228(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T66f228ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assemblies */
extern T0* T66f77(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T1461f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T2211f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T2503f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T2502f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T2502f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T2211f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T2503f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T2502f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T2211f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T2211f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_adapted_dotnet_assemblies */
extern T0* T219f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.make */
extern T0* T1461c5(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].put_last */
extern void T2211f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T2211c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T2211f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T2211f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T2504c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T2503f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T2502c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T2503c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assembly */
extern T0* T66f116(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assembly */
extern T0* T66f116ac1(GE_context* ac, T0* a1);
extern T1 T66f116ot1(T0* a1, T0** a2);
extern T1 T66f116ot2(T0* a1, T0** a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_notes */
extern void T267f36(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_conditions */
extern void T267f35(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_class_renamings */
extern void T267f34(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_class_options */
extern void T267f33(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_read_only */
extern void T267f31(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T267f30(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_version */
extern void T267f29(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_name */
extern void T267f28(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_key */
extern void T267f27(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_culture */
extern void T267f26(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_description */
extern void T267f25(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_adapted_dotnet_assembly */
extern T0* T219f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make */
extern T0* T267c24(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make_adapted_dotnet_assembly */
extern void T267f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T267f20(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_dotnet_assembly */
extern T0* T94f283(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.make */
extern T0* T649c106(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.make_from_system */
extern void T649f107(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.set_default_class_mapping */
extern void T649f112(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T649f166(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_class_mapping */
extern void T649f167(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_class */
extern T0* T649f92(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_wide_character_class_mapping */
extern void T649f165(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_string_class_mapping */
extern void T649f164(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_real_ref_class_mapping */
extern void T649f163(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_real_class_mapping */
extern void T649f162(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_natural_ref_class_mapping */
extern void T649f161(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_natural_class_mapping */
extern void T649f160(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_integer_ref_class_mapping */
extern void T649f159(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_integer_class_mapping */
extern void T649f158(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_double_ref_class_mapping */
extern void T649f157(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_double_class_mapping */
extern void T649f156(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_character_ref_class_mapping */
extern void T649f155(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_character_class_mapping */
extern void T649f154(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.tokens */
extern T0* T649f90(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_kernel_types */
extern void T649f111(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T649f153(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T649f152(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_type_type */
extern void T649f151(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_system_string_type */
extern void T649f150(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_system_object_type */
extern void T649f149(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_type */
extern void T649f148(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_32_type */
extern void T649f147(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_8_type */
extern void T649f146(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_special_type */
extern void T649f145(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_routine_type */
extern void T649f144(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_64_type */
extern void T649f143(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_32_type */
extern void T649f142(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_type */
extern void T649f141(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_procedure_type */
extern void T649f140(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_predicate_type */
extern void T649f139(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_pointer_type */
extern void T649f138(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T649f137(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T649f136(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T649f135(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T649f134(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_type */
extern void T649f133(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_iterable_type */
extern void T649f132(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T649f131(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T649f130(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T649f129(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T649f128(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T649f127(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_type */
extern void T649f126(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T649f125(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_function_type */
extern void T649f124(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T649f123(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_exception_type */
extern void T649f122(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_double_type */
extern void T649f121(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_32_type */
extern void T649f120(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_8_type */
extern void T649f119(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_type */
extern void T649f118(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_boolean_type */
extern void T649f117(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_array_type */
extern void T649f116(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_tuple_type */
extern void T649f115(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_none_type */
extern void T649f114(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_any_type */
extern void T649f113(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.make_adapted */
extern void T649f110(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T649f91(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T649f109(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.initialize */
extern void T649f108(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T649f99(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.tokens */
extern T0* T267f19(GE_context* ac, T0* C);
/* ET_ECF_TARGET.set_parent */
extern void T70f33(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.execution_environment */
extern T0* T70f28(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.set_secondary_variables */
extern void T61f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET_PARENT.make */
extern T0* T1453c4(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.set_secondary_options */
extern void T581f20(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.set_secondary_capabilities */
extern void T106f17(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SETTINGS.set_secondary_settings */
extern void T71f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_target */
extern T0* T219f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.make */
extern T0* T70c32(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_CAPABILITIES.make */
extern T0* T106c13(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_CAPABILITIES.make */
extern T0* T106f13ac1(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].set_hash_function */
extern void T543f41(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.string_ */
extern T0* T106f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].set_key_equality_tester */
extern void T543f40(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.case_insensitive_string_equality_tester */
extern T0* T106f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_map */
extern T0* T543c39(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_with_equality_testers */
extern void T543f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_sparse_container */
extern void T543f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].set_internal_cursor */
extern void T543f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].new_cursor */
extern T0* T543f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].make */
extern T0* T1415c10(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_slots */
extern void T543f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_clashes */
extern void T543f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_key_storage */
extern void T543f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_item_storage */
extern void T543f56(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_VARIABLES.make */
extern T0* T61c9(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_VARIABLES.make */
extern T0* T61f9ac1(GE_context* ac, T0* a1);
/* ET_ECF_VARIABLES.case_insensitive_string_equality_tester */
extern T0* T61f4(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.execution_environment */
extern T0* T61f3(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_notes */
extern T0* T66f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].force_last */
extern void T1439f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT].force */
extern void T2208f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT].fill_with */
extern void T2209f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT].extend */
extern void T2209f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].resize */
extern void T1439f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT].aliased_resized_area */
extern T0* T2208f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT].aliased_resized_area */
extern T0* T2209f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].new_capacity */
extern T6 T1439f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].extendible */
extern T1 T1439f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_notes */
extern T0* T219f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].make */
extern void T1439f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].make */
extern T0* T1439c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].set_internal_cursor */
extern void T1439f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].new_cursor */
extern T0* T1439f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_NOTE_ELEMENT].make */
extern T0* T2210c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT].make */
extern T0* T2208f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT].make_empty */
extern T0* T2209c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT].default_create */
extern T0* T2208c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_note_element */
extern T0* T66f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T66f70ot1(T0* a1, T0** a2);
extern T1 T66f70ot2(T0* a1, T0** a2);
/* ET_ECF_NOTE_ELEMENT.set_content */
extern void T1438f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_NOTE_ELEMENT.add_element */
extern void T1438f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_NOTE_ELEMENT.add_attribute */
extern void T1438f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_note */
extern T0* T219f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_NOTE_ELEMENT.make */
extern T0* T1438c7(GE_context* ac, T0* a1);
/* Creation of agent #1 in feature ET_ECF_NOTE_ELEMENT.make */
extern T0* T1438f7ac1(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].make_default */
extern T0* T1439c12(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].default_capacity */
extern T6 T1439f8(GE_context* ac, T0* C);
/* ET_ECF_NOTE_ELEMENT.string_ */
extern T0* T1438f6(GE_context* ac, T0* C);
/* ET_ECF_NOTE_ELEMENT.case_insensitive_string_equality_tester */
extern T0* T1438f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_map_default */
extern T0* T57c104(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].default_capacity */
extern T6 T57f51(GE_context* ac, T0* C);
/* XM_ELEMENT.text */
extern T0* T189f20(GE_context* ac, T0* C);
extern T1 T189f20ot1(T0* a1, T0** a2);
/* XM_ELEMENT.string_ */
extern T0* T189f21(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].item */
extern T0* T569f8(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].start */
extern void T569f11(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].cursor_start */
extern void T1542f14(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].cursor_off */
extern T1 T1542f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].off */
extern T1 T569f9(GE_context* ac, T0* C);
/* XM_ELEMENT.new_cursor */
extern T0* T189f9(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].new_cursor */
extern T0* T1542f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].make */
extern T0* T569c10(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_options */
extern T0* T66f41(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_options_1_0_0 */
extern T0* T66f69(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_0_0 */
extern void T66f227(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_5_0 */
extern void T66f226(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_9_0 */
extern void T66f225(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_11_0 */
extern void T66f224(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_15_0 */
extern void T66f223(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_18_0 */
extern void T66f222(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_latest */
extern void T66f240(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_options_1_5_0 */
extern T0* T66f68(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_options_1_9_0 */
extern T0* T66f66(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_9_0 */
extern T0* T66f65(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_options_1_11_0 */
extern T0* T66f64(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_options_1_15_0 */
extern T0* T66f63(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_15_0 */
extern T0* T66f62(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_options_1_18_0 */
extern T0* T66f61(GE_context* ac, T0* C);
/* UT_VERSION.is_greater_equal */
extern T1 T88f14(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.ecf_1_18_0 */
extern T0* T66f60(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_capabilities */
extern T0* T66f40(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_0_0 */
extern T0* T66f59(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_0_0 */
extern void T66f221(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_11_0 */
extern void T66f220(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_13_0 */
extern void T66f219(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_16_0 */
extern void T66f218(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_latest */
extern void T66f239(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_11_0 */
extern T0* T66f58(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_13_0 */
extern T0* T66f56(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_13_0 */
extern T0* T66f55(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_16_0 */
extern T0* T66f54(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_16_0 */
extern T0* T66f53(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_settings */
extern T0* T66f39(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_settings_1_0_0 */
extern T0* T66f52(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_default_settings_1_0_0 */
extern void T66f217(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_settings_latest */
extern void T66f238(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.ecf_latest */
extern T0* T66f38(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_version */
extern T0* T66f37(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.matches */
extern T1 T410f188(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eate_error */
extern void T67f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eate */
extern T0* T268c102(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.attribute_name */
extern T0* T66f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].found_item */
extern T0* T229f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].found */
extern T1 T229f22(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].search */
extern void T229f45(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].search_position */
extern void T229f56(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eatm_error */
extern void T67f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eatm */
extern T0* T268c101(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_library */
extern T0* T219f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.make */
extern T0* T236c121(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.make_library */
extern void T236f130(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.make_from_system */
extern void T236f131(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.set_default_class_mapping */
extern void T236f136(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_wide_character_ref_class_mapping */
extern void T236f190(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_class_mapping */
extern void T236f191(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.set_wide_character_class_mapping */
extern void T236f189(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_string_class_mapping */
extern void T236f188(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_real_ref_class_mapping */
extern void T236f187(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_real_class_mapping */
extern void T236f186(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_natural_ref_class_mapping */
extern void T236f185(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_natural_class_mapping */
extern void T236f184(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_integer_ref_class_mapping */
extern void T236f183(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_integer_class_mapping */
extern void T236f182(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_double_ref_class_mapping */
extern void T236f181(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_double_class_mapping */
extern void T236f180(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_character_ref_class_mapping */
extern void T236f179(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_character_class_mapping */
extern void T236f178(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.tokens */
extern T0* T236f102(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_kernel_types */
extern void T236f135(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_wide_character_type */
extern void T236f177(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_typed_pointer_type */
extern void T236f176(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_type_type */
extern void T236f175(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_system_string_type */
extern void T236f174(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_system_object_type */
extern void T236f173(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_type */
extern void T236f172(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_32_type */
extern void T236f171(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_8_type */
extern void T236f170(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_special_type */
extern void T236f169(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_routine_type */
extern void T236f168(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_64_type */
extern void T236f167(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_32_type */
extern void T236f166(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_type */
extern void T236f165(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_procedure_type */
extern void T236f164(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_predicate_type */
extern void T236f163(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_pointer_type */
extern void T236f162(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_64_type */
extern void T236f161(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_32_type */
extern void T236f160(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_16_type */
extern void T236f159(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_8_type */
extern void T236f158(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_type */
extern void T236f157(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_iterable_type */
extern void T236f156(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_ise_exception_manager_type */
extern void T236f155(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_64_type */
extern void T236f154(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_32_type */
extern void T236f153(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_16_type */
extern void T236f152(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_8_type */
extern void T236f151(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_type */
extern void T236f150(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_immutable_string_32_type */
extern void T236f149(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_function_type */
extern void T236f148(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_exception_manager_type */
extern void T236f147(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_exception_type */
extern void T236f146(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_double_type */
extern void T236f145(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_32_type */
extern void T236f144(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_8_type */
extern void T236f143(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_type */
extern void T236f142(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_boolean_type */
extern void T236f141(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_array_type */
extern void T236f140(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_tuple_type */
extern void T236f139(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_none_type */
extern void T236f138(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_any_type */
extern void T236f137(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.make_adapted */
extern void T236f134(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.default_read_only_value */
extern T1 T236f104(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_unknown_kernel_types */
extern void T236f133(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.initialize */
extern void T236f132(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.initialize */
extern void T236f132p1(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.class_name_tester */
extern T0* T236f103(GE_context* ac, T0* C);
/* XM_ELEMENT.attribute_by_name */
extern T0* T189f6(GE_context* ac, T0* C, T0* a1);
extern T1 T189f6ot1(T0* a1, T0** a2);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].go_after */
extern void T569f14(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].cursor_go_after */
extern void T1542f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].set_after */
extern void T569f16(GE_context* ac, T0* C);
/* XM_ELEMENT.attribute_same_name */
extern T1 T189f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_string */
extern T1 T189f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.string_equality_tester */
extern T0* T189f15(GE_context* ac, T0* C);
/* UC_STRING_EQUALITY_TESTER.default_create */
extern T0* T58c3(GE_context* ac);
/* [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].forth */
extern void T257f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].cursor_forth */
extern void T256f64(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].add_traversing_cursor */
extern void T256f67(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].set_next_cursor */
extern void T257f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].set_position */
extern void T257f13(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].remove_traversing_cursor */
extern void T256f66(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].set_after */
extern void T257f12(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].clashes_item */
extern T6 T256f29(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_eadp_error */
extern void T67f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eadp */
extern T0* T268c100(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ANDED_CONDITIONS.is_capability_supported */
extern T1 T1505f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ANDED_CONDITIONS.is_capability_supported */
extern T1 T1505f3p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].item */
extern T0* T2227f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ORED_CONDITIONS.is_capability_supported */
extern T1 T1503f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].item */
extern T0* T2226f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ORED_CONDITIONS.is_capability_supported */
extern T1 T1503f3p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CAPABILITIES.is_capability_supported */
extern T1 T106f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].found_item */
extern T6 T2022f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].item_storage_item */
extern T6 T2022f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].found */
extern T1 T2022f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].search */
extern void T2022f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].search_position */
extern void T2022f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].hash_position */
extern T6 T2022f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].key_storage_item */
extern T0* T2022f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].clashes_item */
extern T6 T2022f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].slots_item */
extern T6 T2022f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].found_item */
extern T0* T2395f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].item_storage_item */
extern T0* T2395f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].found */
extern T1 T2395f25(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].search */
extern void T2395f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].search_position */
extern void T2395f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].hash_position */
extern T6 T2395f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].key_storage_item */
extern T0* T2395f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].clashes_item */
extern T6 T2395f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].slots_item */
extern T6 T2395f23(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_CAPABILITIES.capability_order */
extern T0* T106f12(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_CAPABILITIES.capability_order */
extern T0* T106f12ac1(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].put_last */
extern void T2395f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].key_storage_put */
extern void T2395f44(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].slots_put */
extern void T2395f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].clashes_put */
extern void T2395f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].compress */
extern void T2395f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].slots_wipe_out */
extern void T2395f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].clashes_wipe_out */
extern void T2395f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].key_storage_keep_head */
extern void T2395f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].item_storage_keep_head */
extern void T2395f47(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].keep_head */
extern void T2646f5(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].set_count */
extern void T2646f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].move_all_cursors */
extern void T2395f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].set_position */
extern void T2651f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].item_storage_put */
extern void T2395f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].force */
extern void T2650f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].fill_with */
extern void T2646f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].extend */
extern void T2646f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].unset_found_item */
extern void T2395f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].put_last */
extern void T2022f41(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].key_storage_put */
extern void T2022f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].slots_put */
extern void T2022f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].clashes_put */
extern void T2022f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].compress */
extern void T2022f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].slots_wipe_out */
extern void T2022f61(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].clashes_wipe_out */
extern void T2022f60(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].key_storage_keep_head */
extern void T2022f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].item_storage_keep_head */
extern void T2022f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].move_all_cursors */
extern void T2022f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] STRING_8].set_position */
extern void T2457f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].item_storage_put */
extern void T2022f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].unset_found_item */
extern void T2022f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].set_hash_function */
extern void T2022f40(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].set_key_equality_tester */
extern void T2022f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_map */
extern T0* T2022c36(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_with_equality_testers */
extern void T2022f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_sparse_container */
extern void T2022f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].set_internal_cursor */
extern void T2022f66(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].new_cursor */
extern T0* T2022f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] STRING_8].make */
extern T0* T2457c5(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_slots */
extern void T2022f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].new_modulus */
extern T6 T2022f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_clashes */
extern void T2022f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_key_storage */
extern void T2022f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_item_storage */
extern void T2022f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].set_hash_function */
extern void T2395f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].set_key_equality_tester */
extern void T2395f34(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_map */
extern T0* T2395c32(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_with_equality_testers */
extern void T2395f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_sparse_container */
extern void T2395f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].set_internal_cursor */
extern void T2395f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].new_cursor */
extern T0* T2395f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make */
extern T0* T2651c5(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_slots */
extern void T2395f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].new_modulus */
extern T6 T2395f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_clashes */
extern void T2395f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_key_storage */
extern void T2395f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_item_storage */
extern void T2395f51(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].make */
extern T0* T2650f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].make_empty */
extern T0* T2646c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].default_create */
extern T0* T2650c2(GE_context* ac);
/* [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].key */
extern T0* T257f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].cursor_key */
extern T0* T256f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].key_storage_item */
extern T0* T256f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].after */
extern T1 T257f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].new_iterator */
extern T0* T256f23(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].start */
extern void T257f11(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].cursor_start */
extern void T256f65(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].cursor_off */
extern T1 T256f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].off */
extern T1 T257f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].is_empty */
extern T1 T256f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].new_cursor */
extern T0* T256f25(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make */
extern T0* T257c9(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.valid_capabilities_latest */
extern T0* T66f28(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.valid_capabilities_latest */
extern T0* T66f28ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.void_safety_detection_capability_value_regexp */
extern T0* T66f35(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.concurrency_capability_value_regexp */
extern T0* T66f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].force_last */
extern void T256f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].key_storage_put */
extern void T256f53(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].slots_put */
extern void T256f52(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].clashes_put */
extern void T256f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].slots_item */
extern T6 T256f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].hash_position */
extern T6 T256f27(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].resize */
extern void T256f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].clashes_resize */
extern void T256f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].special_integer_ */
extern T0* T256f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].key_storage_resize */
extern void T256f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].item_storage_resize */
extern void T256f56(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].aliased_resized_area */
extern T0* T808f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION].aliased_resized_area */
extern T0* T809f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].slots_resize */
extern void T256f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].new_modulus */
extern T6 T256f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].new_capacity */
extern T6 T256f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].item_storage_put */
extern void T256f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].force */
extern void T808f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION].fill_with */
extern void T809f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION].extend */
extern void T809f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].search_position */
extern void T256f48(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].unset_found_item */
extern void T256f47(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.catcall_detection_capability_value_regexp */
extern T0* T66f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].set_hash_function */
extern void T256f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].set_key_equality_tester */
extern void T256f43(GE_context* ac, T0* C, T0* a1);
/* attached DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].internal_set_equality_tester */
extern void T807f8(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.case_insensitive_string_equality_tester */
extern T0* T66f14(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_map */
extern T0* T256c42(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_with_equality_testers */
extern void T256f46(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_sparse_container */
extern void T256f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].set_internal_cursor */
extern void T256f63(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_slots */
extern void T256f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_clashes */
extern void T256f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_key_storage */
extern void T256f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_item_storage */
extern void T256f59(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].make */
extern T0* T808f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION].make_empty */
extern T0* T809c6(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].default_create */
extern T0* T808c3(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.report_eabw_error */
extern void T67f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabw */
extern T0* T268c99(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.set_library */
extern void T260f34(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabv_error */
extern void T67f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabv */
extern T0* T268c98(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.pathname */
extern T0* T260f20(GE_context* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.library */
extern T0* T237f4(GE_context* ac, T0* C, T6 a1);
/* ET_ADAPTED_LIBRARIES.count */
extern T6 T237f3(GE_context* ac, T0* C);
/* [attached] DS_CELL [detachable ET_ECF_LIBRARY].make */
extern T0* T259c2(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.select_target */
extern void T66f211(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.select_target */
extern T0* T66f211ac1(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.build_system_config */
extern void T66f214(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [attached] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG].put */
extern void T250f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_system_config */
extern T0* T66f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_system_config */
extern T0* T219f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_CONFIG.make */
extern T0* T233c12(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_TARGET.fill_universe */
extern void T70f54(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T70f54ot1(T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAGS.fill_external_linker_flags */
extern void T1476f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_LINKER_FLAGS.fill_external_linker_flags */
extern T0* T1476f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG]].set_rout_disp_final */
extern void T2426f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_LINKER_FLAG.fill_external_linker_flags */
extern void T1475f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LINKER_FLAG.add_external_value */
extern void T1475f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LINKER_FLAG.is_enabled */
extern T1 T1475f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ANDED_CONDITIONS.is_enabled */
extern T1 T1505f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ORED_CONDITIONS.is_enabled */
extern T1 T1503f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].do_all */
extern void T2216f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].item */
extern T0* T2216f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_CFLAGS.fill_external_cflags */
extern void T1467f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_CFLAGS.fill_external_cflags */
extern T0* T1467f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG]].set_rout_disp_final */
extern void T2419f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_CFLAG.fill_external_cflags */
extern void T1466f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_CFLAG.add_external_value */
extern void T1466f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_CFLAG.is_enabled */
extern T1 T1466f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].do_all */
extern void T2213f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].item */
extern T0* T2213f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_MAKES.fill_external_makes */
extern void T1479f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_MAKES.fill_external_makes */
extern T0* T1479f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE]].set_rout_disp_final */
extern void T2428f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_MAKE.fill_external_makes */
extern void T1478f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_MAKE.add_external_value */
extern void T1478f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_MAKE.file_system */
extern T0* T1478f5(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_MAKE.unix_file_system */
extern T0* T1478f8(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_MAKE.windows_file_system */
extern T0* T1478f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_MAKE.operating_system */
extern T0* T1478f6(GE_context* ac, T0* C);
/* UC_UTF8_STRING.starts_with */
extern T1 T1557f64(GE_context* ac, T0* C, T0* a1);
/* STRING_8.starts_with */
extern T1 T17f19(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_MAKE.is_enabled */
extern T1 T1478f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].do_all */
extern void T2217f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].item */
extern T0* T2217f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_RESOURCES.fill_external_resources */
extern void T1485f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_RESOURCES.fill_external_resources */
extern T0* T1485f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE]].set_rout_disp_final */
extern void T2432f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_RESOURCE.fill_external_resources */
extern void T1484f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_RESOURCE.add_external_value */
extern void T1484f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_RESOURCE.file_system */
extern T0* T1484f5(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_RESOURCE.unix_file_system */
extern T0* T1484f8(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_RESOURCE.windows_file_system */
extern T0* T1484f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_RESOURCE.operating_system */
extern T0* T1484f6(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_RESOURCE.is_enabled */
extern T1 T1484f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].do_all */
extern void T2219f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].item */
extern T0* T2219f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern void T1473f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern T0* T1473f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY]].set_rout_disp_final */
extern void T2424f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_LIBRARY.fill_external_libraries */
extern void T1472f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARY.add_external_value */
extern void T1472f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARY.file_system */
extern T0* T1472f5(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.unix_file_system */
extern T0* T1472f8(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.windows_file_system */
extern T0* T1472f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.operating_system */
extern T0* T1472f6(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.is_enabled */
extern T1 T1472f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].do_all */
extern void T2215f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].item */
extern T0* T2215f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern void T1482f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern T0* T1482f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT]].set_rout_disp_final */
extern void T2430f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_OBJECT.fill_external_objects */
extern void T1481f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_OBJECT.add_external_value */
extern void T1481f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_OBJECT.file_system */
extern T0* T1481f5(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.unix_file_system */
extern T0* T1481f8(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.windows_file_system */
extern T0* T1481f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.operating_system */
extern T0* T1481f6(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.is_enabled */
extern T1 T1481f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].do_all */
extern void T2218f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].item */
extern T0* T2218f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern void T1470f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern T0* T1470f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE]].set_rout_disp_final */
extern void T2422f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_INCLUDE.fill_external_includes */
extern void T1469f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDE.add_external_value */
extern void T1469f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDE.file_system */
extern T0* T1469f5(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.unix_file_system */
extern T0* T1469f8(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.windows_file_system */
extern T0* T1469f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.operating_system */
extern T0* T1469f6(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.is_enabled */
extern T1 T1469f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].do_all */
extern void T2214f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].item */
extern T0* T2214f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_dotnet */
extern void T69f271(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.is_enabled */
extern T1 T267f21(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T1461f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T2211f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T1461f3(GE_context* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.put_last */
extern void T237f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].force_last */
extern void T792f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY].force */
extern void T1851f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ADAPTED_LIBRARY].fill_with */
extern void T1850f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ADAPTED_LIBRARY].extend */
extern void T1850f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].resize */
extern void T792f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1851f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1850f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].new_capacity */
extern T6 T792f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].extendible */
extern T1 T792f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_LIBRARY.is_enabled */
extern T1 T260f19(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.library */
extern T0* T1490f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].item */
extern T0* T2222f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_LIBRARIES.count */
extern T6 T1490f3(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.fill_file_rules */
extern void T1463f94(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_CLUSTER.fill_file_rules */
extern T0* T1463f94ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_CLUSTER]].set_rout_disp_final */
extern void T2379f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_CLUSTERS.do_all */
extern void T1464f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.fill_file_rules */
extern void T1488f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T1488f7ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T1488f7ac2(GE_context* ac, T0* a1);
/* [attached] PREDICATE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]].set_rout_disp_final */
extern void T2708f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_FILE_RULE.is_enabled */
extern T1 T1487f9(GE_context* ac, T0* C, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]].set_rout_disp_final */
extern void T2706f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].do_if */
extern void T2221f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].item */
extern T0* T2221f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_TARGET.fill_file_rules */
extern void T70f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_FILE_RULES.make_empty */
extern T0* T1488c6(GE_context* ac);
/* ET_ECF_CLUSTER.fill_subclusters */
extern void T1463f93(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.add_subcluster */
extern void T1463f99(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_subclusters */
extern void T1463f100(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.make_empty */
extern T0* T1464c9(GE_context* ac);
/* ET_CLUSTERS.put_last */
extern void T791f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].force_last */
extern void T1849f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER].force */
extern void T2299f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CLUSTER].fill_with */
extern void T2298f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CLUSTER].extend */
extern void T2298f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].resize */
extern void T1849f13(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER].aliased_resized_area */
extern T0* T2299f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_CLUSTER].aliased_resized_area */
extern T0* T2298f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].new_capacity */
extern T6 T1849f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].extendible */
extern T1 T1849f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.is_enabled */
extern T1 T1463f46(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.cluster */
extern T0* T1464f4(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTERS.count */
extern T6 T1464f3(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_epcd_error */
extern void T67f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ECF_ERROR.make_epcd */
extern T0* T268c97(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ECF_ERROR_HANDLER.report_epcl_error */
extern void T67f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_epcl */
extern T0* T268c96(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR_HANDLER.report_epcr_error */
extern void T67f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR.make_epcr */
extern T0* T268c95(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR_HANDLER.report_eadq_error */
extern void T67f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadq */
extern T0* T268c94(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].before */
extern T1 T248f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_before */
extern T1 T248f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].before */
extern T1 T800f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].back */
extern void T248f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_back */
extern void T248f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].add_traversing_cursor */
extern void T248f67(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].set_next_cursor */
extern void T800f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].set_position */
extern void T800f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].remove_traversing_cursor */
extern void T248f66(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].set_before */
extern void T800f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].clashes_item */
extern T6 T248f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].finish */
extern void T248f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_finish */
extern void T248f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_off */
extern T1 T248f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].off */
extern T1 T800f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].is_empty */
extern T1 T248f36(GE_context* ac, T0* C);
/* ET_ECF_TARGET_PARENT.set_target */
extern void T1453f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_epcy_error */
extern void T67f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epcy */
extern T0* T268c93(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].put_last */
extern void T171f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].item_for_iteration */
extern T0* T248f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_item */
extern T0* T248f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].item_storage_item */
extern T0* T248f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].forth */
extern void T248f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_forth */
extern void T248f58(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].set_after */
extern void T800f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].key_for_iteration */
extern T0* T248f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_key */
extern T0* T248f27(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].key_storage_item */
extern T0* T248f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].after */
extern T1 T248f25(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_after */
extern T1 T248f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].after */
extern T1 T800f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].start */
extern void T248f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_start */
extern void T248f57(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].has */
extern T1 T248f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].search_position */
extern void T248f49(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].hash_position */
extern T6 T248f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].slots_item */
extern T6 T248f24(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_internal_error */
extern void T67f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_internal */
extern T0* T268c92(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_epud_error */
extern void T67f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epud */
extern T0* T268c91(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_epul_error */
extern void T67f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_epul */
extern T0* T268c90(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_epur_error */
extern void T67f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epur */
extern T0* T268c89(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_epfe_error */
extern void T67f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epfe */
extern T0* T268c88(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].found_item */
extern T0* T247f25(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].item_storage_item */
extern T0* T247f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].found */
extern T1 T247f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].search */
extern void T247f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].search_position */
extern void T247f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].hash_position */
extern T6 T247f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].key_storage_item */
extern T0* T247f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].clashes_item */
extern T6 T247f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].slots_item */
extern T6 T247f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG].make */
extern T0* T250c2(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].force_last */
extern void T248f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].key_storage_put */
extern void T248f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].slots_put */
extern void T248f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].clashes_put */
extern void T248f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].resize */
extern void T248f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].clashes_resize */
extern void T248f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].special_integer_ */
extern T0* T248f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].key_storage_resize */
extern void T248f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].item_storage_resize */
extern void T248f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].slots_resize */
extern void T248f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].new_modulus */
extern T6 T248f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].new_capacity */
extern T6 T248f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].item_storage_put */
extern void T248f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].unset_found_item */
extern void T248f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_default */
extern T0* T248c43(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make */
extern void T248f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_with_equality_testers */
extern void T248f61(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_sparse_container */
extern void T248f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].set_internal_cursor */
extern void T248f73(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].new_cursor */
extern T0* T248f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].make */
extern T0* T800c9(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_slots */
extern void T248f72(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_clashes */
extern void T248f71(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_key_storage */
extern void T248f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_item_storage */
extern void T248f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].default_capacity */
extern T6 T248f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].force_last */
extern void T247f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].key_storage_put */
extern void T247f44(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].slots_put */
extern void T247f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].clashes_put */
extern void T247f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].resize */
extern void T247f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].clashes_resize */
extern void T247f49(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].special_integer_ */
extern T0* T247f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].key_storage_resize */
extern void T247f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].item_storage_resize */
extern void T247f47(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG].aliased_resized_area */
extern T0* T798f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG].aliased_resized_area */
extern T0* T796f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].slots_resize */
extern void T247f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].new_modulus */
extern T6 T247f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].new_capacity */
extern T6 T247f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].item_storage_put */
extern void T247f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG].force */
extern void T798f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG].fill_with */
extern void T796f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG].extend */
extern void T796f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].unset_found_item */
extern void T247f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_default */
extern T0* T247c34(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make */
extern void T247f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_with_equality_testers */
extern void T247f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_sparse_container */
extern void T247f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].set_internal_cursor */
extern void T247f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].new_cursor */
extern T0* T247f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make */
extern T0* T799c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_slots */
extern void T247f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_clashes */
extern void T247f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_key_storage */
extern void T247f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_item_storage */
extern void T247f51(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG].make */
extern T0* T798f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG].make_empty */
extern T0* T796c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG].default_create */
extern T0* T798c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].default_capacity */
extern T6 T247f27(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.select_target */
extern void T236f192(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.select_target */
extern void T69f160(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.update_state */
extern void T70f59(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_STATE.set_dotnet */
extern void T231f11(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.set_scoop */
extern void T231f10(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.set_multithreaded */
extern void T231f9(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.set_finalize_mode */
extern void T231f8(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM_PARSER.string_ */
extern T0* T66f18(GE_context* ac, T0* C);
/* ET_ECF_SETTINGS.value */
extern T0* T71f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_STATE.make */
extern T0* T231c7(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_etnu_error */
extern void T67f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_etnu */
extern T0* T268c81(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.element_name */
extern T0* T66f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.target_with_name */
extern T0* T69f150(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.target */
extern T0* T255f4(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM_PARSER.new_system */
extern T0* T66f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_system */
extern T0* T219f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.make */
extern T0* T69c159(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.make_system */
extern void T69f172(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_default_class_mapping */
extern void T69f186(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_wide_character_ref_class_mapping */
extern void T69f248(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_class_mapping */
extern void T69f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.set_wide_character_class_mapping */
extern void T69f247(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_string_class_mapping */
extern void T69f246(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_real_ref_class_mapping */
extern void T69f245(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_real_class_mapping */
extern void T69f244(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_natural_ref_class_mapping */
extern void T69f243(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_natural_class_mapping */
extern void T69f242(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_integer_ref_class_mapping */
extern void T69f241(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_integer_class_mapping */
extern void T69f240(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_double_ref_class_mapping */
extern void T69f239(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_double_class_mapping */
extern void T69f238(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_character_ref_class_mapping */
extern void T69f237(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_character_class_mapping */
extern void T69f236(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.tokens */
extern T0* T69f137(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_kernel_types */
extern void T69f185(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_wide_character_type */
extern void T69f235(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_typed_pointer_type */
extern void T69f234(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_type_type */
extern void T69f233(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_string_type */
extern void T69f232(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_object_type */
extern void T69f231(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_type */
extern void T69f230(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_32_type */
extern void T69f229(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_8_type */
extern void T69f228(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_special_type */
extern void T69f227(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_routine_type */
extern void T69f226(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_64_type */
extern void T69f225(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_32_type */
extern void T69f224(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_type */
extern void T69f223(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_procedure_type */
extern void T69f222(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_predicate_type */
extern void T69f221(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_pointer_type */
extern void T69f220(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_64_type */
extern void T69f219(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_32_type */
extern void T69f218(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_16_type */
extern void T69f217(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_8_type */
extern void T69f216(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_type */
extern void T69f215(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_iterable_type */
extern void T69f214(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_ise_exception_manager_type */
extern void T69f213(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_64_type */
extern void T69f212(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_32_type */
extern void T69f211(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_16_type */
extern void T69f210(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_8_type */
extern void T69f209(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_type */
extern void T69f208(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_immutable_string_32_type */
extern void T69f207(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_function_type */
extern void T69f206(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_exception_manager_type */
extern void T69f205(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_exception_type */
extern void T69f204(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_double_type */
extern void T69f203(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_32_type */
extern void T69f202(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_8_type */
extern void T69f201(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_type */
extern void T69f200(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_boolean_type */
extern void T69f199(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_array_type */
extern void T69f198(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_tuple_type */
extern void T69f197(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_none_type */
extern void T69f196(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_any_type */
extern void T69f195(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.make_adapted */
extern void T69f184(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.default_read_only_value */
extern T1 T69f148(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_unknown_kernel_types */
extern void T69f183(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_name */
extern void T69f182(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.initialize */
extern void T69f181(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.initialize */
extern void T69f181p1(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.class_name_tester */
extern T0* T69f152(GE_context* ac, T0* C);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_TARGET]].set_rout_disp_final */
extern void T222f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_SYSTEM_PARSER.override_target */
extern void T66f208(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.override_variables */
extern void T70f58(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.override_capabilities */
extern void T70f57(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].forth */
extern void T1415f11(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].cursor_forth */
extern void T543f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].add_traversing_cursor */
extern void T543f65(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].set_next_cursor */
extern void T1415f15(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].set_position */
extern void T1415f14(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].remove_traversing_cursor */
extern void T543f64(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].set_after */
extern void T1415f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].item */
extern T0* T1415f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].cursor_item */
extern T0* T543f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].key */
extern T0* T1415f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].cursor_key */
extern T0* T543f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].after */
extern T1 T1415f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].new_iterator */
extern T0* T543f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].start */
extern void T1415f12(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].cursor_start */
extern void T543f63(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].cursor_off */
extern T1 T543f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].off */
extern T1 T1415f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].is_empty */
extern T1 T543f37(GE_context* ac, T0* C);
/* ET_ECF_TARGET.override_settings */
extern void T70f56(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.override_all_assertions */
extern void T70f63(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_all_assertions */
extern T0* T70f63ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_ECF_TARGET.override_all_assertions */
extern T0* T70f63ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_ECF_TARGET.override_all_assertions */
extern T0* T70f63ac3(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T2385f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_ADAPTED_LIBRARY]].set_rout_disp_final */
extern void T2383f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_TARGET.override_all_assertions_in_cluster */
extern void T70f65(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_all_assertions_in_cluster */
extern T0* T70f65ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_TARGET.override_all_assertions_in_adapted_group */
extern void T70f66(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_all_assertions_in_adapted_group */
extern T0* T70f66ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.do_adapted */
extern void T1461f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.do_adapted */
extern void T1490f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.do_explicit */
extern void T1464f8(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.do_recursive */
extern void T1464f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.override_all_assertions_in_option */
extern void T70f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_all_assertions_in_option */
extern T0* T70f64ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] STRING_8]].set_rout_disp_final */
extern void T2388f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* attached DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].do_all */
extern void T807f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].forth */
extern void T2697f7(GE_context* ac, T0* C);
/* attached DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].cursor_forth */
extern void T807f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].item */
extern T0* T2697f4(GE_context* ac, T0* C);
/* attached DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].cursor_item */
extern T0* T807f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].after */
extern T1 T2697f3(GE_context* ac, T0* C);
/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].start */
extern void T2697f6(GE_context* ac, T0* C);
/* attached DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].cursor_start */
extern void T807f11(GE_context* ac, T0* C, T0* a1);
/* attached DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].new_cursor */
extern T0* T807f4(GE_context* ac, T0* C);
/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make */
extern T0* T2697c5(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].keys */
extern T0* T256f38(GE_context* ac, T0* C);
/* attached DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make */
extern T0* T807c7(GE_context* ac, T0* a1);
/* attached DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].set_internal_cursor */
extern void T807f10(GE_context* ac, T0* C, T0* a1);
/* attached DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].new_cursor_with_table_cursor */
extern T0* T807f5(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_with_table_cursor */
extern T0* T2697c8(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.parse_file_with_action */
extern void T66f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.last_error_description */
extern T0* T200f128(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.position */
extern T0* T200f120(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] XM_POSITION].first */
extern T0* T736f6(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.positions */
extern T0* T200f93(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_positions */
extern T0* T200f122(GE_context* ac, T0* C);
/* [attached] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER].remove */
extern void T737f7(GE_context* ac, T0* C);
/* [attached] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER].item */
extern T0* T737f4(GE_context* ac, T0* C);
/* [attached] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER].is_empty */
extern T1 T737f3(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] XM_POSITION].force_last */
extern void T736f8(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [[attached] XM_POSITION].put_right */
extern void T1825f5(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [[attached] XM_POSITION].attach_left */
extern void T1825f6(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [[attached] XM_POSITION].make */
extern T0* T1825c4(GE_context* ac, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] XM_POSITION].make */
extern T0* T736c7(GE_context* ac);
/* [attached] DS_BILINKED_LIST [[attached] XM_POSITION].set_internal_cursor */
extern void T736f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] XM_POSITION].new_cursor */
extern T0* T736f5(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_POSITION].make */
extern T0* T1826c3(GE_context* ac, T0* a1);
/* [attached] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER].copy */
extern void T737f6(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] XM_EIFFEL_SCANNER].put_right */
extern void T1828f4(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] XM_EIFFEL_SCANNER].make */
extern T0* T1828c3(GE_context* ac, T0* a1);
/* [attached] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER].make */
extern T0* T737c5(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.report_syntax_error */
extern void T67f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_syntax */
extern T0* T268c87(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_TREE_CALLBACKS_PIPE.last_error */
extern T0* T192f8(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.make */
extern T0* T241c11(GE_context* ac, T6 a1, T6 a2);
/* ET_COMPRESSED_POSITION.set_position */
extern void T241f13(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_ECF_ERROR_HANDLER.report_eabx_error */
extern void T67f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabx */
extern T0* T268c86(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eadf_error */
extern void T67f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadf */
extern T0* T268c85(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eadi_error */
extern void T67f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadi */
extern T0* T268c84(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [attached] DS_HASH_SET [[attached] STRING_8].remove */
extern void T109f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].remove_position */
extern void T109f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].key_storage_put */
extern void T109f77(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] STRING_8].key_storage_keep_head */
extern void T109f76(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].item_storage_keep_head */
extern void T109f75(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].move_cursors_forth */
extern void T109f74(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].internal_set_key_equality_tester */
extern void T109f73(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.string_equality_tester */
extern T0* T66f13(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.execution_environment */
extern T0* T66f25(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eadh_error */
extern void T67f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eadh */
extern T0* T268c83(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eadg_error */
extern void T67f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eadg */
extern T0* T268c82(GE_context* ac, T0* a1, T0* a2);
/* XM_TREE_CALLBACKS_PIPE.document */
extern T0* T192f5(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.is_correct */
extern T1 T200f140(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.parse_from_stream */
extern void T200f206(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.parse_with_events */
extern void T200f213(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_finish */
extern void T200f219(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.parse */
extern void T200f218(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_pop_last_value */
extern void T200f228(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.yy_push_error_value */
extern void T200f227(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_do_action */
extern void T200f226(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_notation_declaration */
extern void T200f256(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_notation_declaration */
extern void T742f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.set_public */
extern void T750f5(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T749f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T751f4(GE_context* ac, T0* C, T6 a1);
/* XM_DTD_EXTERNAL_ID.set_system */
extern void T750f4(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_external_id */
extern T0* T200f174(GE_context* ac, T0* C);
/* XM_DTD_EXTERNAL_ID.make */
extern T0* T750c3(GE_context* ac);
/* XM_EIFFEL_PARSER.when_pe_entity_declared */
extern void T200f255(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].force_new */
extern void T738f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].key_storage_put */
extern void T738f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].item_storage_put */
extern void T738f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF].force */
extern void T1835f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF].fill_with */
extern void T1829f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF].extend */
extern void T1829f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].slots_put */
extern void T738f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].clashes_put */
extern void T738f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].slots_item */
extern T6 T738f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].hash_position */
extern T6 T738f27(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].clashes_item */
extern T6 T738f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].resize */
extern void T738f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].clashes_resize */
extern void T738f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].special_integer_ */
extern T0* T738f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].key_storage_resize */
extern void T738f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].item_storage_resize */
extern void T738f55(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1835f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1829f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].key_storage_item */
extern T0* T738f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].slots_resize */
extern void T738f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].new_modulus */
extern T6 T738f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].new_capacity */
extern T6 T738f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].unset_found_item */
extern void T738f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].has */
extern T1 T738f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].search_position */
extern void T738f40(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_def */
extern T0* T775c210(GE_context* ac, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_literal */
extern void T775f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.default_create */
extern T0* T740c3(GE_context* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.make_scanner */
extern void T775f213(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T775f215(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset_sent */
extern void T775f218(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T775f215p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T775f215p0(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T775f215p2(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T775f215p3(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.make_with_buffer */
extern void T775f214(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_load_input_buffer */
extern void T775f217(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_content */
extern void T775f220(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T775f216(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T775f216p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_build_tables */
extern void T775f219(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template */
extern T0* T775f54(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_fixed_array */
extern T0* T775f57(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_5 */
extern void T775f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_array_subcopy */
extern void T775f292(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PE_ENTITY_DEF.integer_array_ */
extern T0* T775f59(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_4 */
extern void T775f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_3 */
extern void T775f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_2 */
extern void T775f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_1 */
extern void T775f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_meta_template */
extern T0* T775f52(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template */
extern T0* T775f93(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_2 */
extern void T775f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_1 */
extern void T775f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template */
extern T0* T775f71(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_5 */
extern void T775f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_4 */
extern void T775f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_3 */
extern void T775f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_2 */
extern void T775f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_1 */
extern void T775f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template */
extern T0* T775f61(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_5 */
extern void T775f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_4 */
extern void T775f224(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_3 */
extern void T775f223(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_2 */
extern void T775f222(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_1 */
extern void T775f221(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template */
extern T0* T775f55(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_27 */
extern void T775f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_26 */
extern void T775f290(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_25 */
extern void T775f289(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_24 */
extern void T775f288(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_23 */
extern void T775f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_22 */
extern void T775f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_21 */
extern void T775f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_20 */
extern void T775f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_19 */
extern void T775f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_18 */
extern void T775f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_17 */
extern void T775f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_16 */
extern void T775f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_15 */
extern void T775f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_14 */
extern void T775f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_13 */
extern void T775f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_12 */
extern void T775f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_11 */
extern void T775f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_10 */
extern void T775f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_9 */
extern void T775f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_8 */
extern void T775f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_7 */
extern void T775f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_6 */
extern void T775f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_5 */
extern void T775f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_4 */
extern void T775f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_3 */
extern void T775f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_2 */
extern void T775f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_1 */
extern void T775f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template */
extern T0* T775f51(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_27 */
extern void T775f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_26 */
extern void T775f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_25 */
extern void T775f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_24 */
extern void T775f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_23 */
extern void T775f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_22 */
extern void T775f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_21 */
extern void T775f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_20 */
extern void T775f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_19 */
extern void T775f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_18 */
extern void T775f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_17 */
extern void T775f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_16 */
extern void T775f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_15 */
extern void T775f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_14 */
extern void T775f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_13 */
extern void T775f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_12 */
extern void T775f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_11 */
extern void T775f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_10 */
extern void T775f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_9 */
extern void T775f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_8 */
extern void T775f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_7 */
extern void T775f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_6 */
extern void T775f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_5 */
extern void T775f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_4 */
extern void T775f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_3 */
extern void T775f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_2 */
extern void T775f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_1 */
extern void T775f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.special_integer_ */
extern T0* T775f56(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.empty_buffer */
extern T0* T775f53(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.make */
extern T0* T1822c8(GE_context* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.make_external */
extern void T775f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_external_entity */
extern T0* T200f173(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.make_external */
extern T0* T772c209(GE_context* ac, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_scanner */
extern void T772f210(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T772f212(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T772f212p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T772f212p0(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T772f212p2(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.make_with_buffer */
extern void T772f211(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_load_input_buffer */
extern void T772f214(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_content */
extern void T772f216(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T772f213(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T772f213p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_build_tables */
extern void T772f215(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template */
extern T0* T772f52(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_fixed_array */
extern T0* T772f55(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_5 */
extern void T772f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_array_subcopy */
extern void T772f288(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_ENTITY_DEF.integer_array_ */
extern T0* T772f57(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_4 */
extern void T772f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_3 */
extern void T772f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_2 */
extern void T772f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_1 */
extern void T772f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_meta_template */
extern T0* T772f50(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template */
extern T0* T772f90(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template_2 */
extern void T772f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template_1 */
extern void T772f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template */
extern T0* T772f69(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_5 */
extern void T772f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_4 */
extern void T772f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_3 */
extern void T772f224(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_2 */
extern void T772f223(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_1 */
extern void T772f222(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template */
extern T0* T772f59(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_5 */
extern void T772f221(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_4 */
extern void T772f220(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_3 */
extern void T772f219(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_2 */
extern void T772f218(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_1 */
extern void T772f217(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template */
extern T0* T772f53(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_27 */
extern void T772f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_26 */
extern void T772f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_25 */
extern void T772f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_24 */
extern void T772f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_23 */
extern void T772f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_22 */
extern void T772f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_21 */
extern void T772f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_20 */
extern void T772f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_19 */
extern void T772f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_18 */
extern void T772f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_17 */
extern void T772f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_16 */
extern void T772f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_15 */
extern void T772f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_14 */
extern void T772f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_13 */
extern void T772f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_12 */
extern void T772f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_11 */
extern void T772f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_10 */
extern void T772f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_9 */
extern void T772f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_8 */
extern void T772f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_7 */
extern void T772f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_6 */
extern void T772f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_5 */
extern void T772f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_4 */
extern void T772f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_3 */
extern void T772f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_2 */
extern void T772f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_1 */
extern void T772f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template */
extern T0* T772f49(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_27 */
extern void T772f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_26 */
extern void T772f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_25 */
extern void T772f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_24 */
extern void T772f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_23 */
extern void T772f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_22 */
extern void T772f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_21 */
extern void T772f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_20 */
extern void T772f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_19 */
extern void T772f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_18 */
extern void T772f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_17 */
extern void T772f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_16 */
extern void T772f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_15 */
extern void T772f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_14 */
extern void T772f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_13 */
extern void T772f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_12 */
extern void T772f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_11 */
extern void T772f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_10 */
extern void T772f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_9 */
extern void T772f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_8 */
extern void T772f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_7 */
extern void T772f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_6 */
extern void T772f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_5 */
extern void T772f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_4 */
extern void T772f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_3 */
extern void T772f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_2 */
extern void T772f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_1 */
extern void T772f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.special_integer_ */
extern T0* T772f70(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.empty_buffer */
extern T0* T772f65(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_entity_declaration */
extern void T200f254(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_DTD_CALLBACKS_NULL.on_entity_declaration */
extern void T742f7(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_EIFFEL_PARSER.when_entity_declared */
extern void T200f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_literal_entity */
extern T0* T200f172(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_literal */
extern T0* T772c208(GE_context* ac, T0* a1, T0* a2);
/* XM_DTD_ATTRIBUTE_CONTENT.set_default_value */
extern void T759f26(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_fixed */
extern void T759f25(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_implied */
extern void T759f24(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_required */
extern void T759f23(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]].aliased_resized_area */
extern T0* T761f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]].aliased_resized_area */
extern T0* T763f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].force_last */
extern void T762f11(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [[attached] STRING_8].put_right */
extern void T1848f5(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [[attached] STRING_8].attach_left */
extern void T1848f6(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [[attached] STRING_8].make */
extern T0* T1848c4(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.new_string_bilinked_list */
extern T0* T200f169(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].set_equality_tester */
extern void T762f12(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.string_equality_tester */
extern T0* T200f184(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].make */
extern T0* T762c10(GE_context* ac);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].set_internal_cursor */
extern void T762f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].new_cursor */
extern T0* T762f6(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].make */
extern T0* T1846c8(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]].force */
extern void T761f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]].fill_with */
extern void T763f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]].extend */
extern void T763f10(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration_list */
extern void T759f22(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration */
extern void T759f27(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.default_enumeration_list */
extern T0* T759f11(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].make */
extern T0* T178c17(GE_context* ac);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].set_internal_cursor */
extern void T178f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].new_cursor */
extern T0* T178f9(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] STRING_8].make */
extern T0* T552c8(GE_context* ac, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_notation */
extern void T759f21(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_token */
extern void T759f20(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_entity */
extern void T759f19(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_list_type */
extern void T759f18(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id_ref */
extern void T759f17(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id */
extern void T759f16(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_data */
extern void T759f15(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content */
extern T0* T200f168(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T758f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T760f4(GE_context* ac, T0* C, T6 a1);
/* XM_DTD_ATTRIBUTE_CONTENT.make */
extern T0* T759c12(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT].force */
extern void T758f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT].fill_with */
extern void T760f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT].extend */
extern void T760f10(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.copy_default */
extern void T759f14(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_implied */
extern T1 T759f10(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_required */
extern T1 T759f9(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.has_default_value */
extern T1 T759f8(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_fixed */
extern T1 T759f7(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_name */
extern void T759f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].force */
extern void T755f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].fill_with */
extern void T757f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].extend */
extern void T757f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T755f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T757f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].force_last */
extern void T756f8(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [[attached] XM_DTD_ATTRIBUTE_CONTENT].put_right */
extern void T1844f5(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [[attached] XM_DTD_ATTRIBUTE_CONTENT].attach_left */
extern void T1844f6(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [[attached] XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1844c4(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content_list */
extern T0* T200f166(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T756c7(GE_context* ac);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].set_internal_cursor */
extern void T756f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].new_cursor */
extern T0* T756f5(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1842c8(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.on_attribute_declarations */
extern void T200f252(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].forth */
extern void T1842f10(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].cursor_forth */
extern void T756f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].add_traversing_cursor */
extern void T756f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].set_next_cursor */
extern void T1842f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].remove_traversing_cursor */
extern void T756f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].set */
extern void T1842f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* XM_EIFFEL_PARSER.on_attribute_declaration */
extern void T200f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_DTD_CALLBACKS_NULL.on_attribute_declaration */
extern void T742f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].item */
extern T0* T1842f6(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].start */
extern void T1842f9(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].cursor_start */
extern void T756f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].cursor_off */
extern T1 T756f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].off */
extern T1 T1842f7(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_more */
extern void T753f11(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_mixed */
extern T0* T753c10(GE_context* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_mixed */
extern void T753f21(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_choice */
extern void T753f19(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_list */
extern void T753f16(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_default */
extern void T753f22(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one */
extern void T753f12(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_sequence */
extern void T753f20(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1841c6(GE_context* ac);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT].set_internal_cursor */
extern void T1841f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT].new_cursor */
extern T0* T1841f5(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ELEMENT_CONTENT].make */
extern T0* T2295c3(GE_context* ac, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_sequence */
extern T0* T753c9(GE_context* ac);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT].force_last */
extern void T1841f8(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [[attached] XM_DTD_ELEMENT_CONTENT].put_right */
extern void T2296f5(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [[attached] XM_DTD_ELEMENT_CONTENT].attach_left */
extern void T2296f6(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [[attached] XM_DTD_ELEMENT_CONTENT].make */
extern T0* T2296c4(GE_context* ac, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_choice */
extern T0* T753c8(GE_context* ac);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT].force_first */
extern void T1841f7(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.element_name */
extern T0* T200f161(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_name */
extern T0* T753c15(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.set_element_repetition */
extern void T200f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_one */
extern void T753f14(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one_or_more */
extern void T753f13(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_any */
extern T0* T753c7(GE_context* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_any */
extern void T753f18(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT].force */
extern void T752f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT].fill_with */
extern void T754f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT].extend */
extern void T754f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T752f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T754f4(GE_context* ac, T0* C, T6 a1);
/* XM_DTD_ELEMENT_CONTENT.make_empty */
extern T0* T753c6(GE_context* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_empty */
extern void T753f17(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_element_declaration */
extern void T200f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_element_declaration */
extern void T742f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_attribute */
extern void T200f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].has */
extern T1 T747f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].search_position */
extern void T747f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].hash_position */
extern T6 T747f24(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.hash_code */
extern T6 T744f16(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.item */
extern T0* T744f17(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].item */
extern T0* T762f8(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_EQUALITY_TESTER [[attached] XM_EIFFEL_PARSER_NAME].test */
extern T1 T1839f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].key_storage_item */
extern T0* T747f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].item_storage_item */
extern T0* T747f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].clashes_item */
extern T6 T747f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].key_equality_tester */
extern T0* T747f17(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].slots_item */
extern T6 T747f25(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].force */
extern void T746f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].fill_with */
extern void T748f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].extend */
extern void T748f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T746f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T748f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].force_new */
extern void T747f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].item_storage_put */
extern void T747f39(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].slots_put */
extern void T747f38(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].clashes_put */
extern void T747f37(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].resize */
extern void T747f36(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].clashes_resize */
extern void T747f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].special_integer_ */
extern T0* T747f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].key_storage_resize */
extern void T747f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].item_storage_resize */
extern void T747f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].slots_resize */
extern void T747f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].new_modulus */
extern T6 T747f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].new_capacity */
extern T6 T747f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].unset_found_item */
extern void T747f35(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_name_set */
extern T0* T200f154(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].make_equal */
extern T0* T747c31(GE_context* ac, T6 a1);
/* [attached] KL_EQUALITY_TESTER [[attached] XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T1839c2(GE_context* ac);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].make */
extern void T747f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].set_internal_cursor */
extern void T747f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].new_cursor */
extern T0* T747f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] XM_EIFFEL_PARSER_NAME].make */
extern T0* T1840c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].make_slots */
extern void T747f43(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].make_clashes */
extern void T747f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].make_key_storage */
extern void T747f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].make_item_storage */
extern void T747f40(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME].make */
extern T0* T743f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME].make_empty */
extern T0* T745c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T743c3(GE_context* ac);
/* XM_EIFFEL_PARSER.on_start_tag */
extern void T200f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER.on_end_tag */
extern void T200f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER_NAME.local_part */
extern T0* T744f11(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].forth */
extern void T1846f10(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].cursor_forth */
extern void T762f15(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].add_traversing_cursor */
extern void T762f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].set_next_cursor */
extern void T1846f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].remove_traversing_cursor */
extern void T762f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].set */
extern void T1846f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].item */
extern T0* T1846f6(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].start */
extern void T1846f9(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].cursor_start */
extern void T762f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].cursor_off */
extern T1 T762f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].off */
extern T1 T1846f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.string_ */
extern T0* T744f10(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.last */
extern T0* T744f9(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].last */
extern T0* T762f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.ns_prefix */
extern T0* T744f8(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.is_namespace_name */
extern T1 T744f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern void T744f18(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern T0* T744c18(GE_context* ac);
/* XM_EIFFEL_PARSER_NAME.new_string_bilinked_list */
extern T0* T744f15(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.string_equality_tester */
extern T0* T744f14(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_start_tag_finish */
extern void T200f246(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.is_equal */
extern T1 T744f6(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.same_string */
extern T1 T744f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.when_external_dtd */
extern void T200f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern T0* T773c201(GE_context* ac);
/* XM_EIFFEL_SCANNER_DTD.set_start_condition */
extern void T773f208(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern void T773f201p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T773f210(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T773f210p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T773f210p0(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_with_buffer */
extern void T773f209(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_load_input_buffer */
extern void T773f220(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_content */
extern void T773f221(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T773f219(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T773f219p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_build_tables */
extern void T773f224(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template */
extern T0* T773f195(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_fixed_array */
extern T0* T773f198(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_5 */
extern void T773f295(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_array_subcopy */
extern void T773f296(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER_DTD.integer_array_ */
extern T0* T773f200(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_4 */
extern void T773f294(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_3 */
extern void T773f293(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_2 */
extern void T773f292(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_1 */
extern void T773f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_meta_template */
extern T0* T773f194(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template */
extern T0* T773f193(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template_2 */
extern void T773f290(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template_1 */
extern void T773f289(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template */
extern T0* T773f192(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_5 */
extern void T773f288(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_4 */
extern void T773f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_3 */
extern void T773f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_2 */
extern void T773f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_1 */
extern void T773f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template */
extern T0* T773f191(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_5 */
extern void T773f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_4 */
extern void T773f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_3 */
extern void T773f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_2 */
extern void T773f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_1 */
extern void T773f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template */
extern T0* T773f190(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_27 */
extern void T773f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_26 */
extern void T773f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_25 */
extern void T773f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_24 */
extern void T773f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_23 */
extern void T773f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_22 */
extern void T773f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_21 */
extern void T773f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_20 */
extern void T773f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_19 */
extern void T773f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_18 */
extern void T773f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_17 */
extern void T773f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_16 */
extern void T773f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_15 */
extern void T773f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_14 */
extern void T773f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_13 */
extern void T773f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_12 */
extern void T773f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_11 */
extern void T773f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_10 */
extern void T773f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_9 */
extern void T773f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_8 */
extern void T773f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_7 */
extern void T773f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_6 */
extern void T773f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_5 */
extern void T773f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_4 */
extern void T773f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_3 */
extern void T773f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_2 */
extern void T773f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_1 */
extern void T773f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template */
extern T0* T773f189(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_27 */
extern void T773f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_26 */
extern void T773f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_25 */
extern void T773f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_24 */
extern void T773f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_23 */
extern void T773f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_22 */
extern void T773f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_21 */
extern void T773f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_20 */
extern void T773f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_19 */
extern void T773f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_18 */
extern void T773f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_17 */
extern void T773f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_16 */
extern void T773f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_15 */
extern void T773f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_14 */
extern void T773f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_13 */
extern void T773f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_12 */
extern void T773f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_11 */
extern void T773f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_10 */
extern void T773f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_9 */
extern void T773f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_8 */
extern void T773f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_7 */
extern void T773f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_6 */
extern void T773f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_5 */
extern void T773f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_4 */
extern void T773f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_3 */
extern void T773f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_2 */
extern void T773f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_1 */
extern void T773f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.special_integer_ */
extern T0* T773f62(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.empty_buffer */
extern T0* T773f50(GE_context* ac, T0* C);
/* [attached] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER].force */
extern void T737f8(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.null_resolver */
extern T0* T200f94(GE_context* ac, T0* C);
/* XM_NULL_EXTERNAL_RESOLVER.last_error */
extern T0* T740f1(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.resolve_external_id */
extern void T200f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.resolve */
extern void T740f5(GE_context* ac, T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_public */
extern void T740f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID].force */
extern void T749f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_DTD_EXTERNAL_ID].fill_with */
extern void T751f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_DTD_EXTERNAL_ID].extend */
extern void T751f10(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_end */
extern void T200f244(GE_context* ac, T0* C);
/* XM_DTD_CALLBACKS_NULL.on_dtd_end */
extern void T742f5(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_doctype */
extern void T200f243(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.on_doctype */
extern void T742f4(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_DECLARATION.set_encoding */
extern void T766f9(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_DECLARATION.set_stand_alone */
extern void T766f8(GE_context* ac, T0* C, T1 a1);
/* XM_EIFFEL_DECLARATION.set_version */
extern void T766f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION].force */
extern void T765f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_EIFFEL_DECLARATION].fill_with */
extern void T767f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_EIFFEL_DECLARATION].extend */
extern void T767f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T765f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T767f4(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_DECLARATION.make */
extern T0* T766c7(GE_context* ac);
/* XM_EIFFEL_DECLARATION.process */
extern void T766f10(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_xml_declaration */
extern void T200f287(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_PARSER.apply_encoding */
extern void T200f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_content */
extern void T200f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_processing_instruction */
extern void T200f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_dtd_processing_instruction */
extern void T742f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_processing_instruction */
extern void T200f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_dtd_comment */
extern void T200f238(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_CALLBACKS_NULL.on_dtd_comment */
extern void T742f2(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_comment */
extern void T200f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.entity_referenced_in_entity_value */
extern T0* T200f144(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.defined_entity_referenced */
extern T0* T200f196(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.external_entity_to_string */
extern T0* T200f202(GE_context* ac, T0* C, T0* a1);
/* STRING_8.remove */
extern void T17f75(GE_context* ac, T0* C, T6 a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_finish */
extern void T740f6(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_string */
extern void T1558f30(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.string_ */
extern T0* T1558f8(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.platform */
extern T0* T313f3(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.integer_ */
extern T0* T200f203(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.make_from_stream */
extern T0* T1558c29(GE_context* ac, T0* a1);
/* [attached] DS_LINKED_QUEUE [[attached] CHARACTER_8].make */
extern T0* T2249c5(GE_context* ac);
/* XM_NULL_EXTERNAL_RESOLVER.last_stream */
extern T0* T740f2(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].item */
extern T0* T738f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].item_storage_item */
extern T0* T738f35(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.string_ */
extern T0* T200f89(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.force_error */
extern void T200f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.report_error */
extern void T200f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_error */
extern void T200f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.last_error_extended_description */
extern T0* T200f92(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.safe_error_component */
extern T0* T200f87(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_safe_error_character */
extern T1 T200f97(GE_context* ac, T0* C, T2 a1);
/* XM_EIFFEL_PARSER.setup_error_state */
extern void T200f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.onstring_utf8 */
extern T0* T200f133(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.maximum_item_code */
extern T6 T200f191(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_latin1 */
extern T1 T200f190(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_from_utf8 */
extern T0* T200f186(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.make_from_utf8 */
extern T0* T1557c67(GE_context* ac, T0* a1);
/* UC_UTF8_STRING.append_utf8 */
extern void T1557f86(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_ROUTINES.valid_utf8 */
extern T1 T1556f1(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_ROUTINES.is_encoded_next_byte */
extern T1 T1556f10(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.is_encoded_second_byte */
extern T1 T1556f5(GE_context* ac, T0* C, T2 a1, T2 a2);
/* UC_UTF8_ROUTINES.is_encoded_first_byte */
extern T1 T1556f2(GE_context* ac, T0* C, T2 a1);
/* XM_EIFFEL_PARSER.utf8 */
extern T0* T200f189(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.is_string_mode_ascii */
extern T1 T200f187(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.onstring_ascii */
extern T0* T200f131(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_unicode */
extern T1 T200f185(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string */
extern T0* T200f142(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_string */
extern T0* T200f195(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_uc */
extern T0* T200f194(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_empty */
extern T0* T200f201(GE_context* ac, T0* C);
/* UC_UTF8_STRING.make_empty */
extern T0* T1557c72(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME].force */
extern void T743f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME].fill_with */
extern void T745f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME].extend */
extern void T745f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T743f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T745f4(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.namespace_force_last */
extern void T200f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER_NAME.force_last */
extern void T744f19(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.can_force_last */
extern T1 T744f12(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_namespace_name */
extern T0* T200f141(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_namespaces */
extern T0* T744c20(GE_context* ac);
/* XM_EIFFEL_PARSER.yy_push_last_value */
extern void T200f225(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.accept */
extern void T200f224(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_do_error_action */
extern void T200f222(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.report_eof_expected_error */
extern void T200f233(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.read_token */
extern void T200f221(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.process_attribute_entity */
extern void T200f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity_scanner */
extern void T200f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_start_condition */
extern void T772f290(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_start_condition */
extern void T775f294(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.apply_input_buffer */
extern void T772f289(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.make */
extern T0* T1577c9(GE_context* ac, T0* a1);
/* UC_UTF8_ROUTINES.to_utf8 */
extern T0* T1556f32(GE_context* ac, T0* C, T0* a1);
extern T1 T1556f32ot1(T0* a1, T0** a2);
/* UC_UTF8_ROUTINES.append_code_to_utf8 */
extern void T1556f37(GE_context* ac, T0* C, T0* a1, T6 a2);
/* UC_UTF8_ROUTINES.integer_ */
extern T0* T1556f29(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.utf8 */
extern T0* T772f68(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.fatal_error */
extern void T772f297(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.apply_input_buffer */
extern void T775f293(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.utf8 */
extern T0* T775f70(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.fatal_error */
extern void T775f301(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_literal */
extern T1 T772f63(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.is_external */
extern T1 T772f66(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_literal */
extern T1 T775f65(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_external */
extern T1 T775f68(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.process_entity */
extern void T200f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_pe_entity */
extern void T200f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.special_integer_ */
extern T0* T200f124(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_init_value_stacks */
extern void T200f220(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_clear_all */
extern void T200f229(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.clear_all */
extern void T200f257(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.clear_stacks */
extern void T200f263(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T200f264(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] XM_EIFFEL_DECLARATION].keep_head */
extern void T767f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_EIFFEL_DECLARATION].set_count */
extern void T767f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]].keep_head */
extern void T763f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]].set_count */
extern void T763f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT].keep_head */
extern void T760f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT].set_count */
extern void T760f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].keep_head */
extern void T757f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].set_count */
extern void T757f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT].keep_head */
extern void T754f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT].set_count */
extern void T754f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_DTD_EXTERNAL_ID].keep_head */
extern void T751f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_DTD_EXTERNAL_ID].set_count */
extern void T751f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].keep_head */
extern void T748f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].set_count */
extern void T748f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME].keep_head */
extern void T745f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME].set_count */
extern void T745f9(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.abort */
extern void T200f223(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_start */
extern void T200f217(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.reset_error_state */
extern void T200f216(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.reset */
extern void T200f212(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].wipe_out */
extern void T738f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].slots_wipe_out */
extern void T738f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].clashes_wipe_out */
extern void T738f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].key_storage_wipe_out */
extern void T738f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].item_storage_wipe_out */
extern void T738f44(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF].keep_head */
extern void T1829f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF].set_count */
extern void T1829f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].move_all_cursors_after */
extern void T738f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].set_next_cursor */
extern void T1834f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].set_after */
extern void T1834f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.make_scanner */
extern void T200f210(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.make_scanner */
extern T0* T732c199(GE_context* ac);
/* XM_EIFFEL_SCANNER.reset */
extern void T732f207(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T732f207p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T732f207p0(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.make_with_buffer */
extern void T732f206(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_load_input_buffer */
extern void T732f215(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_set_content */
extern void T732f216(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T732f214(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T732f214p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_build_tables */
extern void T732f222(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template */
extern T0* T732f193(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_fixed_array */
extern T0* T732f196(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_5 */
extern void T732f293(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_array_subcopy */
extern void T732f294(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER.integer_array_ */
extern T0* T732f198(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template_4 */
extern void T732f292(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_3 */
extern void T732f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_2 */
extern void T732f290(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_1 */
extern void T732f289(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_meta_template */
extern T0* T732f192(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template */
extern T0* T732f191(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template_2 */
extern void T732f288(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_ec_template_1 */
extern void T732f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template */
extern T0* T732f190(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_def_template_5 */
extern void T732f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_4 */
extern void T732f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_3 */
extern void T732f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_2 */
extern void T732f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_1 */
extern void T732f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template */
extern T0* T732f189(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_base_template_5 */
extern void T732f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_4 */
extern void T732f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_3 */
extern void T732f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_2 */
extern void T732f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_1 */
extern void T732f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template */
extern T0* T732f188(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_27 */
extern void T732f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_26 */
extern void T732f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_25 */
extern void T732f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_24 */
extern void T732f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_23 */
extern void T732f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_22 */
extern void T732f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_21 */
extern void T732f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_20 */
extern void T732f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_19 */
extern void T732f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_18 */
extern void T732f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_17 */
extern void T732f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_16 */
extern void T732f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_15 */
extern void T732f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_14 */
extern void T732f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_13 */
extern void T732f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_12 */
extern void T732f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_11 */
extern void T732f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_10 */
extern void T732f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_9 */
extern void T732f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_8 */
extern void T732f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_7 */
extern void T732f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_6 */
extern void T732f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_5 */
extern void T732f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_4 */
extern void T732f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_3 */
extern void T732f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_2 */
extern void T732f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_1 */
extern void T732f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template */
extern T0* T732f187(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_nxt_template_27 */
extern void T732f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_26 */
extern void T732f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_25 */
extern void T732f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_24 */
extern void T732f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_23 */
extern void T732f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_22 */
extern void T732f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_21 */
extern void T732f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_20 */
extern void T732f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_19 */
extern void T732f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_18 */
extern void T732f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_17 */
extern void T732f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_16 */
extern void T732f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_15 */
extern void T732f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_14 */
extern void T732f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_13 */
extern void T732f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_12 */
extern void T732f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_11 */
extern void T732f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_10 */
extern void T732f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_9 */
extern void T732f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_8 */
extern void T732f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_7 */
extern void T732f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_6 */
extern void T732f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_5 */
extern void T732f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_4 */
extern void T732f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_3 */
extern void T732f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_2 */
extern void T732f224(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_1 */
extern void T732f223(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.special_integer_ */
extern T0* T732f51(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.empty_buffer */
extern T0* T732f70(GE_context* ac, T0* C);
/* [attached] DS_CELL [detachable ET_ECF_SYSTEM].make */
extern T0* T220c2(GE_context* ac, T0* a1);
/* GEC.target_name */
extern T0* T25f33(GE_context* ac, T0* C);
/* AP_STRING_OPTION.parameter */
extern T0* T44f14(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_override_variables */
extern void T66f205(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_override_capabilities */
extern void T66f204(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_override_settings */
extern void T66f203(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SETTINGS.set_primary_value */
extern void T71f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SETTINGS.make */
extern T0* T71c7(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_SETTINGS.make */
extern T0* T71f7ac1(GE_context* ac, T0* a1);
/* ET_ECF_SETTINGS.string_ */
extern T0* T71f3(GE_context* ac, T0* C);
/* ET_ECF_SETTINGS.case_insensitive_string_equality_tester */
extern T0* T71f5(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.make */
extern T0* T66c202(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T66f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.enable_position_table */
extern void T194f10(GE_context* ac, T0* C, T0* a1);
/* XM_POSITION_TABLE.make */
extern T0* T637c4(GE_context* ac);
/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].make */
extern T0* T1779c7(GE_context* ac);
/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].set_internal_cursor */
extern void T1779f9(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.set_callbacks */
extern void T200f208(GE_context* ac, T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.make */
extern T0* T192c10(GE_context* ac);
/* XM_TREE_CALLBACKS_PIPE.callbacks_pipe */
extern T0* T192f9(GE_context* ac, T0* C, T0* a1);
/* [attached] ARRAY [[attached] XM_CALLBACKS_FILTER].item */
extern T0* T633f4(GE_context* ac, T0* C, T6 a1);
/* XM_CALLBACKS_TO_TREE_FILTER.make_null */
extern T0* T194c9(GE_context* ac);
/* XM_CALLBACKS_TO_TREE_FILTER.make_next */
extern void T194f11(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.initialize */
extern void T194f12(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].make_equal */
extern T0* T638c31(GE_context* ac, T6 a1);
/* [attached] KL_EQUALITY_TESTER [[attached] XM_NAMESPACE].default_create */
extern T0* T1783c2(GE_context* ac);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].make */
extern void T638f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].set_internal_cursor */
extern void T638f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].new_cursor */
extern T0* T638f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] XM_NAMESPACE].make */
extern T0* T1784c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].unset_found_item */
extern void T638f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].make_slots */
extern void T638f36(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].new_modulus */
extern T6 T638f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].make_clashes */
extern void T638f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].make_key_storage */
extern void T638f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].make_item_storage */
extern void T638f33(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE].make */
extern T0* T1785f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_NAMESPACE].make_empty */
extern T0* T1786c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE].default_create */
extern T0* T1785c3(GE_context* ac);
/* XM_DOCUMENT.make */
extern T0* T188c10(GE_context* ac);
/* XM_DOCUMENT.make_with_root_named */
extern void T188f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DOCUMENT.force_last */
extern void T188f12(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].force_last */
extern void T1540f12(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].force_last */
extern void T1540f12p1(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] XM_DOCUMENT_NODE].put_right */
extern void T2243f4(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] XM_DOCUMENT_NODE].make */
extern T0* T2243c3(GE_context* ac, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].before_addition */
extern void T1540f14(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.before_addition */
extern void T188f13(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.equality_delete */
extern void T189f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].remove */
extern void T569f13(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].remove_at_cursor */
extern void T1542f16(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].move_all_cursors */
extern void T1542f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].set_current_cell */
extern void T569f18(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] XM_ELEMENT_NODE].put */
extern void T2407f6(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] XM_ELEMENT_NODE].put_right */
extern void T2407f4(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].set_last_cell */
extern void T1542f23(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] XM_ELEMENT_NODE].forget_right */
extern void T2407f5(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].remove_last */
extern void T1542f22(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].move_last_cursors_after */
extern void T1542f27(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].wipe_out */
extern void T1542f25(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].move_all_cursors_after */
extern void T1542f28(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].is_last */
extern T1 T569f7(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].cursor_is_last */
extern T1 T1542f10(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].remove_first */
extern void T1542f21(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].set_first_cell */
extern void T1542f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].is_first */
extern T1 T569f6(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].cursor_is_first */
extern T1 T1542f9(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.equality_delete */
extern void T188f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].forth */
extern void T2001f13(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].cursor_forth */
extern void T1540f17(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].add_traversing_cursor */
extern void T1540f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].set_next_cursor */
extern void T2001f16(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].remove_traversing_cursor */
extern void T1540f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].set */
extern void T2001f15(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].remove */
extern void T2001f12(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].remove_at_cursor */
extern void T1540f16(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].move_all_cursors */
extern void T1540f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].set_current_cell */
extern void T2001f17(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] XM_DOCUMENT_NODE].put */
extern void T2243f6(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].set_last_cell */
extern void T1540f21(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] XM_DOCUMENT_NODE].forget_right */
extern void T2243f5(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].remove_last */
extern void T1540f20(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].move_last_cursors_after */
extern void T1540f26(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].set_after */
extern void T2001f18(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].wipe_out */
extern void T1540f24(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].move_all_cursors_after */
extern void T1540f27(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].is_last */
extern T1 T2001f7(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].cursor_is_last */
extern T1 T1540f10(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].remove_first */
extern void T1540f19(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].set_first_cell */
extern void T1540f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].is_first */
extern T1 T2001f6(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].cursor_is_first */
extern T1 T1540f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].item */
extern T0* T2001f8(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].start */
extern void T2001f11(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].cursor_start */
extern void T1540f15(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].cursor_off */
extern T1 T1540f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].off */
extern T1 T2001f9(GE_context* ac, T0* C);
/* XM_DOCUMENT.new_cursor */
extern T0* T188f7(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].new_cursor */
extern T0* T1540f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].make */
extern T0* T2001c10(GE_context* ac, T0* a1);
/* XM_DOCUMENT.last */
extern T0* T188f6(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].last */
extern T0* T1540f7(GE_context* ac, T0* C);
/* XM_DOCUMENT.is_empty */
extern T1 T188f5(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].is_empty */
extern T1 T1540f6(GE_context* ac, T0* C);
/* XM_ELEMENT.make */
extern T0* T189c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].make */
extern T0* T1542c11(GE_context* ac);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].set_internal_cursor */
extern void T1542f12(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].make */
extern T0* T1540c11(GE_context* ac);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].set_internal_cursor */
extern void T1540f13(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.default_ns */
extern T0* T188f3(GE_context* ac, T0* C);
/* XM_NAMESPACE.make_default */
extern T0* T583c7(GE_context* ac);
/* XM_NAMESPACE.make */
extern void T583f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE.make */
extern T0* T583c8(GE_context* ac, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.null_callbacks */
extern T0* T194f7(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.make */
extern T0* T635c1(GE_context* ac);
/* XM_TREE_CALLBACKS_PIPE.new_stop_on_error */
extern T0* T192f7(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.make_null */
extern T0* T193c5(GE_context* ac);
/* XM_STOP_ON_ERROR_FILTER.make_next */
extern void T193f6(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.initialize */
extern void T193f7(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.null_callbacks */
extern T0* T193f4(GE_context* ac, T0* C);
/* XM_TREE_CALLBACKS_PIPE.new_namespace_resolver */
extern T0* T192f6(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.make_null */
extern T0* T632c27(GE_context* ac);
/* XM_NAMESPACE_RESOLVER.make_next */
extern void T632f38(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.initialize */
extern void T632f39(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_make */
extern void T632f43(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.new_string_queue */
extern T0* T632f21(GE_context* ac, T0* C);
/* [attached] DS_LINKED_QUEUE [[attached] STRING_8].make */
extern T0* T1777c5(GE_context* ac);
/* XM_NAMESPACE_RESOLVER.new_detachable_string_queue */
extern T0* T632f20(GE_context* ac, T0* C);
/* [attached] DS_LINKED_QUEUE [detachable STRING_8].make */
extern T0* T1776c6(GE_context* ac);
/* XM_NAMESPACE_RESOLVER_CONTEXT.make */
extern T0* T1773c10(GE_context* ac);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].make */
extern T0* T2282c8(GE_context* ac);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].set_internal_cursor */
extern void T2282f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].new_cursor */
extern T0* T2282f6(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].make */
extern T0* T2283c8(GE_context* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER.null_callbacks */
extern T0* T632f13(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.set_string_mode_mixed */
extern void T200f207(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.make */
extern T0* T200c205(GE_context* ac);
/* XM_EIFFEL_PARSER.new_entities_table */
extern T0* T200f91(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].set_key_equality_tester */
extern void T738f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_map_default */
extern T0* T738c36(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_map */
extern void T738f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_with_equality_testers */
extern void T738f53(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_sparse_container */
extern void T738f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].set_internal_cursor */
extern void T738f63(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].new_cursor */
extern T0* T738f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make */
extern T0* T1834c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_slots */
extern void T738f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_clashes */
extern void T738f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_key_storage */
extern void T738f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_item_storage */
extern void T738f59(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF].make */
extern T0* T1835f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF].make_empty */
extern T0* T1829c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF].default_create */
extern T0* T1835c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].default_capacity */
extern T6 T738f30(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.make_parser */
extern void T200f211(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_build_parser_tables */
extern void T200f215(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yycheck_template */
extern T0* T200f88(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yyfixed_array */
extern T0* T200f183(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_4 */
extern void T200f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyarray_subcopy */
extern void T200f286(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PARSER.integer_array_ */
extern T0* T200f204(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yycheck_template_3 */
extern void T200f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_2 */
extern void T200f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_1 */
extern void T200f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template */
extern T0* T200f86(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytable_template_4 */
extern void T200f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_3 */
extern void T200f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_2 */
extern void T200f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_1 */
extern void T200f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypgoto_template */
extern T0* T200f84(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yypact_template */
extern T0* T200f129(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yypact_template_3 */
extern void T200f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypact_template_2 */
extern void T200f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypact_template_1 */
extern void T200f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefgoto_template */
extern T0* T200f127(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yydefact_template */
extern T0* T200f125(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yydefact_template_3 */
extern void T200f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefact_template_2 */
extern void T200f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefact_template_1 */
extern void T200f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes2_template */
extern T0* T200f123(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template */
extern T0* T200f121(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template_3 */
extern void T200f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes1_template_2 */
extern void T200f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes1_template_1 */
extern void T200f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyr1_template */
extern T0* T200f119(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yyr1_template_2 */
extern void T200f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyr1_template_1 */
extern void T200f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytranslate_template */
extern T0* T200f106(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytranslate_template_2 */
extern void T200f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytranslate_template_1 */
extern void T200f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yy_create_value_stacks */
extern void T200f214(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION].make */
extern T0* T765f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_EIFFEL_DECLARATION].make_empty */
extern T0* T767c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION].default_create */
extern T0* T765c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]].make */
extern T0* T761f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]].make_empty */
extern T0* T763c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]].default_create */
extern T0* T761c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T758f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT].make_empty */
extern T0* T760c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT].default_create */
extern T0* T758c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T755f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].make_empty */
extern T0* T757c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].default_create */
extern T0* T755c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT].make */
extern T0* T752f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT].make_empty */
extern T0* T754c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT].default_create */
extern T0* T752c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID].make */
extern T0* T749f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_DTD_EXTERNAL_ID].make_empty */
extern T0* T751c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID].default_create */
extern T0* T749c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].make */
extern T0* T746f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].make_empty */
extern T0* T748c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].default_create */
extern T0* T746c3(GE_context* ac);
/* XM_EIFFEL_PARSER.initialize */
extern void T200f209(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.null_dtd_callbacks */
extern T0* T200f112(GE_context* ac, T0* C);
/* XM_DTD_CALLBACKS_NULL.make */
extern T0* T742c1(GE_context* ac);
/* XM_EIFFEL_PARSER.null_callbacks */
extern T0* T200f104(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].set_key_equality_tester */
extern void T230f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_map */
extern T0* T230c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_with_equality_testers */
extern void T230f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_sparse_container */
extern void T230f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].set_internal_cursor */
extern void T230f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].new_cursor */
extern T0* T230f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make */
extern T0* T789c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_slots */
extern void T230f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_clashes */
extern void T230f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_key_storage */
extern void T230f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_item_storage */
extern void T230f57(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY].make */
extern T0* T790f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY].make_empty */
extern T0* T784c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY].default_create */
extern T0* T790c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].set_key_equality_tester */
extern void T229f41(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_map */
extern T0* T229c40(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_with_equality_testers */
extern void T229f47(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_sparse_container */
extern void T229f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].set_internal_cursor */
extern void T229f73(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].new_cursor */
extern T0* T229f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make */
extern T0* T777c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_slots */
extern void T229f72(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_clashes */
extern void T229f71(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_key_storage */
extern void T229f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_item_storage */
extern void T229f69(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY].make */
extern T0* T783f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_LIBRARY].make_empty */
extern T0* T778c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY].default_create */
extern T0* T783c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T66f207p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ise_latest */
extern T0* T66f15(GE_context* ac, T0* C);
/* ET_ECF_AST_FACTORY.make */
extern T0* T219c52(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.make_standard */
extern T0* T67c10(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.std */
extern T0* T67f7(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.make_null */
extern T0* T67c9(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.null_output_stream */
extern T0* T67f6(GE_context* ac, T0* C);
/* GEC.parse_xace_file */
extern void T25f60(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.has_error */
extern T1 T56f5(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.parse_file */
extern void T55f76(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_parser_error */
extern void T56f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error */
extern void T56f12(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T56f13(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T56f13p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.message */
extern T0* T56f8(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_VALIDATOR.validate_system_doc */
extern void T195f47(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_root_element_error */
extern void T56f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.make */
extern T0* T1427c8(GE_context* ac, T0* a1, T0* a2);
/* XM_DEFAULT_POSITION.out */
extern T0* T733f6(GE_context* ac, T0* C);
/* XM_DEFAULT_POSITION.string_ */
extern T0* T733f5(GE_context* ac, T0* C);
/* XM_ELEMENT.position */
extern T0* T189f8(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.null_position */
extern T0* T189f12(GE_context* ac, T0* C);
/* XM_DEFAULT_POSITION.make */
extern T0* T733c7(GE_context* ac, T0* a1, T6 a2, T6 a3, T6 a4);
/* ET_XACE_VALIDATOR.validate_system */
extern void T195f50(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T195f50ot1(T0* a1, T0** a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_element_error */
extern void T56f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.make */
extern T0* T1429c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.validate_external */
extern void T195f53(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T195f53ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_export */
extern void T195f57(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T195f57ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_feature */
extern T0* T195f30(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_class */
extern T0* T195f28(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_export */
extern T0* T195f26(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_link_library */
extern T0* T195f25(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_location */
extern T0* T195f14(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_include_dir */
extern T0* T195f24(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_element_obsoleted_by_element_warning */
extern void T56f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning */
extern void T56f16(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning_message */
extern void T56f17(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T575c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_external */
extern T0* T195f12(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_option */
extern void T195f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T195f52ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_optimize */
extern T0* T195f23(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_debug */
extern T0* T195f22(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_check */
extern T0* T195f21(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_loop */
extern T0* T195f20(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_invariant */
extern T0* T195f19(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_ensure */
extern T0* T195f18(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_require */
extern T0* T195f17(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_value */
extern T0* T195f16(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].has */
extern T1 T256f33(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_VALIDATOR.valid_system_options */
extern T0* T195f11(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_VALIDATOR.valid_system_options */
extern T0* T195f11ac1(GE_context* ac, T0* a1);
/* ET_XACE_VALIDATOR.warning_option_value_regexp */
extern T0* T195f44(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.void_safety_option_value_regexp */
extern T0* T195f43(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.target_option_value_regexp */
extern T0* T195f42(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.syntax_option_value_regexp */
extern T0* T195f41(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.msil_classes_per_module_option_value_regexp */
extern T0* T195f40(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.inlining_size_option_value_regexp */
extern T0* T195f39(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.inlining_option_value_regexp */
extern T0* T195f38(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.garbage_collector_option_value_regexp */
extern T0* T195f37(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.dead_code_removal_option_value_regexp */
extern T0* T195f36(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.assertion_option_value_regexp */
extern T0* T195f35(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.boolean_option_value_regexp */
extern T0* T195f34(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.case_insensitive_string_equality_tester */
extern T0* T195f33(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_option */
extern T0* T195f10(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_mount */
extern void T195f51(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T195f51ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_exclude */
extern void T195f56(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_exclude_element_warning */
extern void T56f24(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.make */
extern T0* T1433c8(GE_context* ac, T0* a1);
/* ET_XACE_VALIDATOR.uc_exclude */
extern T0* T195f15(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_mount */
extern T0* T195f9(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_cluster */
extern void T195f54(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T195f54ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_class */
extern void T195f58(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T195f58ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_feature */
extern void T195f59(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T195f59ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.valid_feature_options */
extern T0* T195f32(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_VALIDATOR.valid_feature_options */
extern T0* T195f32ac1(GE_context* ac, T0* a1);
/* ET_XACE_VALIDATOR.valid_class_options */
extern T0* T195f31(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_VALIDATOR.valid_class_options */
extern T0* T195f31ac1(GE_context* ac, T0* a1);
/* ET_XACE_VALIDATOR.valid_cluster_options */
extern T0* T195f27(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_VALIDATOR.valid_cluster_options */
extern T0* T195f27ac1(GE_context* ac, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_cluster_element_warning */
extern void T56f23(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.make */
extern T0* T1432c8(GE_context* ac, T0* a1);
/* ET_XACE_VALIDATOR.validate_named_cluster */
extern void T195f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_non_empty_attribute_expected_error */
extern void T56f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.make */
extern T0* T1430c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_cluster */
extern T0* T195f5(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_description */
extern T0* T195f8(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_root */
extern void T195f55(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_creation */
extern T0* T195f29(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_element_error */
extern void T56f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ELEMENT_ERROR.make */
extern T0* T1431c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.element_by_name */
extern T0* T189f5(GE_context* ac, T0* C, T0* a1);
extern T1 T189f5ot1(T0* a1, T0** a2);
/* XM_ELEMENT.named_same_name */
extern T1 T189f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_namespace */
extern T1 T189f14(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE.is_equal */
extern T1 T583f4(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE.string_ */
extern T0* T583f3(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_root */
extern T0* T195f13(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_attribute_error */
extern void T56f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.make */
extern T0* T1428c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.has_attribute_by_name */
extern T1 T189f7(GE_context* ac, T0* C, T0* a1);
extern T1 T189f7ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_name */
extern T0* T195f7(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_system */
extern T0* T195f6(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.string_ */
extern T0* T195f3(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].wipe_out */
extern void T198f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].slots_wipe_out */
extern void T198f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].clashes_wipe_out */
extern void T198f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].key_storage_wipe_out */
extern void T198f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].item_storage_wipe_out */
extern void T198f41(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_XACE_LIBRARY_CONFIG].keep_head */
extern void T730f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_XACE_LIBRARY_CONFIG].set_count */
extern void T730f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].unset_found_item */
extern void T198f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].move_all_cursors_after */
extern void T198f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].set_next_cursor */
extern void T729f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].set_after */
extern void T729f7(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_root_class_name */
extern void T197f156(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.unset_root_type */
extern void T197f170(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_root_type */
extern void T197f169(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_system */
extern T0* T55f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.set_multithreaded_mode */
extern void T197f167(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_use_boehm_gc */
extern void T197f166(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_trace_mode */
extern void T197f165(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_exception_trace_mode */
extern void T197f164(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_console_application_mode */
extern void T197f163(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.value */
extern T0* T553f5(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.replace_all_characters */
extern T0* T55f16(GE_context* ac, T0* C, T0* a1, T2 a2, T2 a3);
/* UC_UTF8_STRING.put */
extern void T1557f78(GE_context* ac, T0* C, T2 a1, T6 a2);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] STRING_8].forth */
extern void T552f12(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].cursor_forth */
extern void T178f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].add_traversing_cursor */
extern void T178f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] STRING_8].set_next_cursor */
extern void T552f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].remove_traversing_cursor */
extern void T178f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] STRING_8].set */
extern void T552f9(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] STRING_8].item */
extern T0* T552f7(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] STRING_8].start */
extern void T552f11(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].cursor_start */
extern void T178f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].cursor_off */
extern T1 T178f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] STRING_8].off */
extern T1 T552f6(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.merge_externals */
extern void T197f162(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.merge_externals */
extern void T560f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY].item */
extern T0* T667f9(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_CLUSTERS.merge_externals */
extern void T559f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.merge_externals */
extern void T564f69(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_EXTERNALS.put_link_library */
extern void T551f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].force_last */
extern void T178f18(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] STRING_8].put_right */
extern void T623f4(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] STRING_8].make */
extern T0* T623c3(GE_context* ac, T0* a1);
/* ET_XACE_EXTERNALS.put_include_directory */
extern void T551f6(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_EXTERNALS.put_c_compiler_options */
extern void T551f5(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].new_iterator */
extern T0* T109f37(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.multivalue */
extern T0* T553f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].found_item */
extern T0* T1757f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].item_storage_item */
extern T0* T1757f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].found */
extern T1 T1757f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].search */
extern void T1757f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].search_position */
extern void T1757f41(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].hash_position */
extern T6 T1757f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].key_storage_item */
extern T0* T1757f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].clashes_item */
extern T6 T1757f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].slots_item */
extern T6 T1757f27(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_EXTERNALS.make */
extern T0* T551c4(GE_context* ac);
/* ET_XACE_SYSTEM.mount_libraries */
extern void T197f161(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.mount_libraries */
extern void T560f10(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.mount_libraries */
extern void T559f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTERS.put_last */
extern void T559f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].force_last */
extern void T1759f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_CLUSTER].force */
extern void T2272f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_XACE_CLUSTER].fill_with */
extern void T2271f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_XACE_CLUSTER].extend */
extern void T2271f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].resize */
extern void T1759f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_CLUSTER].aliased_resized_area */
extern T0* T2272f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_XACE_CLUSTER].aliased_resized_area */
extern T0* T2271f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].new_capacity */
extern T6 T1759f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].extendible */
extern T1 T1759f7(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_CLUSTER.set_library_prefix */
extern void T564f76(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_library_prefix */
extern void T559f13(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_mounted */
extern void T564f77(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_mounted */
extern void T559f17(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.select_target */
extern void T197f160(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.set_creation_procedure_name */
extern void T197f179(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_root_creation */
extern void T197f194(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.select_target */
extern void T197f160p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.select_target */
extern T0* T197f160p1ac1(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_XACE_CLUSTER]].set_rout_disp_final */
extern void T670f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_XACE_CLUSTERS.do_all */
extern void T559f8(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG.merge_libraries */
extern void T668f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.merge_libraries */
extern void T560f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.put_last */
extern void T560f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY].force_last */
extern void T667f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_MOUNTED_LIBRARY].force */
extern void T1794f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_XACE_MOUNTED_LIBRARY].fill_with */
extern void T1793f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_XACE_MOUNTED_LIBRARY].extend */
extern void T1793f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY].resize */
extern void T667f13(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_MOUNTED_LIBRARY].aliased_resized_area */
extern T0* T1794f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_XACE_MOUNTED_LIBRARY].aliased_resized_area */
extern T0* T1793f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY].new_capacity */
extern T6 T667f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY].extendible */
extern T1 T667f7(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_multiple_library_prefix_error */
extern void T56f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.make */
extern T0* T576c8(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.root_item */
extern T0* T560f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.string_ */
extern T0* T560f4(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARY.same_library_prefix */
extern T1 T571f5(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARY.string_ */
extern T0* T571f6(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.item */
extern T0* T560f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.set_root_count */
extern void T560f9(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_MOUNTED_LIBRARIES.count */
extern T6 T560f6(GE_context* ac, T0* C);
/* ET_XACE_TARGET.merge_libraries */
extern void T554f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.fill_system */
extern void T55f79(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_SYSTEM_PARSER.fill_target */
extern void T55f80(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T55f80ot1(T0* a1, T0** a2);
extern T1 T55f80ot2(T0* a1, T0** a2);
/* ET_XACE_CLUSTERS.merge_libraries */
extern void T559f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.merge_libraries */
extern void T564f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_override */
extern void T564f73(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.cluster_by_name */
extern T0* T559f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.string_ */
extern T0* T559f4(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.fill_externals */
extern void T55f82(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T55f82ot1(T0* a1, T0** a2);
/* ET_XACE_CLUSTER.put_class_option */
extern void T564f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_XACE_CLASS_OPTIONS].put_last */
extern void T1762f7(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] ET_XACE_CLASS_OPTIONS].put_right */
extern void T2276f4(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] ET_XACE_CLASS_OPTIONS].make */
extern T0* T2276c3(GE_context* ac, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_XACE_CLASS_OPTIONS].make */
extern T0* T1762c6(GE_context* ac);
/* [attached] DS_LINKED_LIST [[attached] ET_XACE_CLASS_OPTIONS].set_internal_cursor */
extern void T1762f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_XACE_CLASS_OPTIONS].new_cursor */
extern T0* T1762f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_XACE_CLASS_OPTIONS].make */
extern T0* T2274c3(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_export */
extern T0* T55f46(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T55f46ot1(T0* a1, T0** a2);
/* attached DS_LINKED_LIST [[attached] ET_XACE_FEATURE_OPTIONS].is_empty */
extern T1 T1424f6(GE_context* ac, T0* C);
/* ET_XACE_CLASS_OPTIONS.put_feature_option */
extern void T1422f5(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKED_LIST [[attached] ET_XACE_FEATURE_OPTIONS].put_last */
extern void T1424f8(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] ET_XACE_FEATURE_OPTIONS].put_right */
extern void T2207f4(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] ET_XACE_FEATURE_OPTIONS].make */
extern T0* T2207c3(GE_context* ac, T0* a1);
/* attached DS_LINKED_LIST [[attached] ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1424c7(GE_context* ac);
/* attached DS_LINKED_LIST [[attached] ET_XACE_FEATURE_OPTIONS].set_internal_cursor */
extern void T1424f9(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKED_LIST [[attached] ET_XACE_FEATURE_OPTIONS].new_cursor */
extern T0* T1424f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_XACE_FEATURE_OPTIONS].make */
extern T0* T2205c3(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_exported_feature */
extern T0* T55f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_AST_FACTORY.new_feature_options */
extern T0* T187f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_FEATURE_OPTIONS.make */
extern T0* T1426c3(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.uc_alias */
extern T0* T55f73(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_feature */
extern T0* T55f69(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_class_options */
extern T0* T187f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLASS_OPTIONS.make */
extern T0* T1422c4(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_AST_FACTORY.new_options */
extern T0* T187f3(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.make */
extern T0* T553c9(GE_context* ac);
/* Creation of agent #1 in feature ET_XACE_OPTIONS.make */
extern T0* T553f9ac1(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].force_last */
extern void T1757f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].key_storage_put */
extern void T1757f47(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].slots_put */
extern void T1757f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].clashes_put */
extern void T1757f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].resize */
extern void T1757f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].clashes_resize */
extern void T1757f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].special_integer_ */
extern T0* T1757f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].key_storage_resize */
extern void T1757f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].item_storage_resize */
extern void T1757f50(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable DS_HASH_SET [[attached] STRING_8]].aliased_resized_area */
extern T0* T2266f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable DS_HASH_SET [[attached] STRING_8]].aliased_resized_area */
extern T0* T2262f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].slots_resize */
extern void T1757f49(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].new_modulus */
extern T6 T1757f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].new_capacity */
extern T6 T1757f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].item_storage_put */
extern void T1757f43(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [detachable DS_HASH_SET [[attached] STRING_8]].force */
extern void T2266f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable DS_HASH_SET [[attached] STRING_8]].fill_with */
extern void T2262f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable DS_HASH_SET [[attached] STRING_8]].extend */
extern void T2262f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].unset_found_item */
extern void T1757f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].set_hash_function */
extern void T1757f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].set_key_equality_tester */
extern void T1757f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].make_map */
extern T0* T1757c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].make_with_equality_testers */
extern void T1757f40(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].make_sparse_container */
extern void T1757f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].set_internal_cursor */
extern void T1757f57(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].new_cursor */
extern T0* T1757f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].make */
extern T0* T2267c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].make_slots */
extern void T1757f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].make_clashes */
extern void T1757f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].make_key_storage */
extern void T1757f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].make_item_storage */
extern void T1757f53(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable DS_HASH_SET [[attached] STRING_8]].make */
extern T0* T2266f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable DS_HASH_SET [[attached] STRING_8]].make_empty */
extern T0* T2262c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable DS_HASH_SET [[attached] STRING_8]].default_create */
extern T0* T2266c3(GE_context* ac);
/* ET_XACE_OPTIONS.string_ */
extern T0* T553f7(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.case_insensitive_string_equality_tester */
extern T0* T553f6(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_export */
extern T0* T55f45(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_include_dir */
extern T0* T55f44(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_primary_value */
extern void T553f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].replace_found_item */
extern void T1757f39(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.string_equality_tester */
extern T0* T553f8(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_location */
extern T0* T55f43(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_link_library */
extern T0* T55f42(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_external */
extern T0* T55f31(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.fill_options */
extern void T55f81(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T55f81ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.is_false */
extern T1 T55f41(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_debug */
extern T0* T55f40(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_check */
extern T0* T55f39(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_loop */
extern T0* T55f38(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_invariant */
extern T0* T55f37(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_ensure */
extern T0* T55f36(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.is_true */
extern T1 T55f35(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_enable */
extern T0* T55f34(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_require */
extern T0* T55f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].item */
extern T0* T256f34(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].item_storage_item */
extern T0* T256f35(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM_PARSER.uc_value */
extern T0* T55f32(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.valid_system_options */
extern T0* T55f30(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM_PARSER.valid_system_options */
extern T0* T55f30ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.warning_option_value_regexp */
extern T0* T55f66(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.void_safety_option_value_regexp */
extern T0* T55f65(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.target_option_value_regexp */
extern T0* T55f64(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.syntax_option_value_regexp */
extern T0* T55f63(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.msil_classes_per_module_option_value_regexp */
extern T0* T55f62(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.inlining_size_option_value_regexp */
extern T0* T55f61(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.inlining_option_value_regexp */
extern T0* T55f60(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.garbage_collector_option_value_regexp */
extern T0* T55f59(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.dead_code_removal_option_value_regexp */
extern T0* T55f58(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.assertion_option_value_regexp */
extern T0* T55f57(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.boolean_option_value_regexp */
extern T0* T55f56(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.case_insensitive_string_equality_tester */
extern T0* T55f55(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_option */
extern T0* T55f29(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.new_mount */
extern T0* T55f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MOUNTED_LIBRARY.set_library_prefix */
extern void T571f8(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_prefix */
extern T0* T55f49(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_mounted_library */
extern T0* T187f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MOUNTED_LIBRARY.make */
extern T0* T571c7(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_cannot_read_file_error */
extern void T56f26(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG.select_target */
extern void T668f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_CONFIG.select_target */
extern void T668f10p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_LIBRARY_CONFIG.select_target */
extern T0* T668f10p1ac1(GE_context* ac, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.parse_library */
extern void T203f72(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_library */
extern void T203f73(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_CONFIG.set_library_prefix */
extern void T668f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_prefix */
extern T0* T203f66(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_target */
extern void T203f74(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T203f74ot1(T0* a1, T0** a2);
extern T1 T203f74ot2(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_externals */
extern void T203f76(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T203f76ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_export */
extern T0* T203f39(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T203f39ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_exported_feature */
extern T0* T203f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_alias */
extern T0* T203f67(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_feature */
extern T0* T203f62(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_export */
extern T0* T203f38(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_include_dir */
extern T0* T203f37(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_location */
extern T0* T203f36(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_link_library */
extern T0* T203f35(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_external */
extern T0* T203f24(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_options */
extern void T203f75(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T203f75ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.is_false */
extern T1 T203f34(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_debug */
extern T0* T203f33(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_check */
extern T0* T203f32(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_loop */
extern T0* T203f31(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_invariant */
extern T0* T203f30(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_ensure */
extern T0* T203f29(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.is_true */
extern T1 T203f28(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_enable */
extern T0* T203f27(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_require */
extern T0* T203f26(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_value */
extern T0* T203f25(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.valid_system_options */
extern T0* T203f23(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_LIBRARY_CONFIG_PARSER.valid_system_options */
extern T0* T203f23ac1(GE_context* ac, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.warning_option_value_regexp */
extern T0* T203f59(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.void_safety_option_value_regexp */
extern T0* T203f58(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.target_option_value_regexp */
extern T0* T203f57(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.syntax_option_value_regexp */
extern T0* T203f56(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.msil_classes_per_module_option_value_regexp */
extern T0* T203f55(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.inlining_size_option_value_regexp */
extern T0* T203f54(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.inlining_option_value_regexp */
extern T0* T203f53(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.garbage_collector_option_value_regexp */
extern T0* T203f52(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.dead_code_removal_option_value_regexp */
extern T0* T203f51(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.assertion_option_value_regexp */
extern T0* T203f50(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.boolean_option_value_regexp */
extern T0* T203f49(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.case_insensitive_string_equality_tester */
extern T0* T203f48(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_option */
extern T0* T203f22(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_mount */
extern T0* T203f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.execution_environment */
extern T0* T203f47(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_name */
extern T0* T203f45(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_mount */
extern T0* T203f20(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_creation */
extern T0* T203f19(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_class */
extern T0* T203f18(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_root */
extern T0* T203f17(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_cluster */
extern T0* T203f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T203f16ot1(T0* a1, T0** a2);
/* ET_XACE_CLUSTER.set_libraries */
extern void T564f67(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_subclusters */
extern void T564f66(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_parent */
extern void T559f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_parent */
extern void T564f75(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_options */
extern void T564f65(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_read_only */
extern void T564f64(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_recursive */
extern void T564f63(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_abstract */
extern void T564f62(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_class */
extern T0* T203f44(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T203f44ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_feature */
extern T0* T203f65(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T203f65ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.valid_feature_options */
extern T0* T203f68(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_LIBRARY_CONFIG_PARSER.valid_feature_options */
extern T0* T203f68ac1(GE_context* ac, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.valid_class_options */
extern T0* T203f64(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_LIBRARY_CONFIG_PARSER.valid_class_options */
extern T0* T203f64ac1(GE_context* ac, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_options */
extern T0* T203f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.valid_cluster_options */
extern T0* T203f42(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_LIBRARY_CONFIG_PARSER.valid_cluster_options */
extern T0* T203f42ac1(GE_context* ac, T0* a1);
/* ET_XACE_AST_FACTORY.new_mounted_libraries */
extern T0* T187f5(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.make_empty */
extern T0* T560c8(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T667c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY].set_internal_cursor */
extern void T667f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY].new_cursor */
extern T0* T667f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T1795c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T1794f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_XACE_MOUNTED_LIBRARY].make_empty */
extern T0* T1793c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_MOUNTED_LIBRARY].default_create */
extern T0* T1794c3(GE_context* ac);
/* ET_XACE_AST_FACTORY.new_clusters */
extern T0* T187f4(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.make */
extern T0* T559c9(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].put_last */
extern void T1759f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].make */
extern T0* T1759c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].set_internal_cursor */
extern void T1759f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].new_cursor */
extern T0* T1759f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_CLUSTER].make */
extern T0* T2273c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_CLUSTER].make */
extern T0* T2272f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_XACE_CLUSTER].make_empty */
extern T0* T2271c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_CLUSTER].default_create */
extern T0* T2272c3(GE_context* ac);
/* ET_XACE_CLUSTER.set_cluster_prefix */
extern void T564f60(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_relative */
extern void T564f59(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_relative */
extern T0* T203f41(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_attribute_obsoleted_by_element_warning */
extern void T56f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T1434c8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_abstract */
extern T0* T203f40(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_cluster */
extern T0* T187f2(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_CLUSTER.make */
extern T0* T564c58(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T564f68(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T559f12(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_cluster */
extern T0* T203f14(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.string_ */
extern T0* T203f13(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_name */
extern T0* T203f12(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.execution_environment */
extern T0* T55f54(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].force_new */
extern void T198f52(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].key_storage_put */
extern void T198f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].item_storage_put */
extern void T198f57(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_LIBRARY_CONFIG].force */
extern void T731f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_XACE_LIBRARY_CONFIG].fill_with */
extern void T730f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_XACE_LIBRARY_CONFIG].extend */
extern void T730f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].slots_put */
extern void T198f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].clashes_put */
extern void T198f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].slots_item */
extern T6 T198f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].hash_position */
extern T6 T198f27(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].clashes_item */
extern T6 T198f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].resize */
extern void T198f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].clashes_resize */
extern void T198f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].special_integer_ */
extern T0* T198f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].key_storage_resize */
extern void T198f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].item_storage_resize */
extern void T198f60(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_LIBRARY_CONFIG].aliased_resized_area */
extern T0* T731f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_XACE_LIBRARY_CONFIG].aliased_resized_area */
extern T0* T730f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].key_storage_item */
extern T0* T198f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].slots_resize */
extern void T198f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].new_modulus */
extern T6 T198f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].new_capacity */
extern T6 T198f24(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_AST_FACTORY.new_library */
extern T0* T187f6(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG.make */
extern T0* T668c9(GE_context* ac, T0* a1);
/* ET_XACE_LIBRARY_CONFIG.make */
extern void T668f9p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.make_empty */
extern T0* T559c5(GE_context* ac);
/* ET_XACE_TARGETS.make */
extern T0* T557c6(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_TARGET].put_last */
extern void T1758f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_TARGET].force */
extern void T2269f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_XACE_TARGET].fill_with */
extern void T2268f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_XACE_TARGET].extend */
extern void T2268f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_TARGET].make */
extern T0* T1758c8(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_TARGET].set_internal_cursor */
extern void T1758f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_TARGET].new_cursor */
extern T0* T1758f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_TARGET].make */
extern T0* T2270c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_TARGET].make */
extern T0* T2269f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_XACE_TARGET].make_empty */
extern T0* T2268c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_TARGET].default_create */
extern T0* T2269c2(GE_context* ac);
/* ET_XACE_AST_FACTORY.new_target */
extern T0* T187f1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_TARGET.make */
extern T0* T554c7(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_name */
extern T0* T55f18(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].found_item */
extern T0* T198f22(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].item_storage_item */
extern T0* T198f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].found */
extern T1 T198f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].search */
extern void T198f51(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].search_position */
extern void T198f53(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_mount */
extern T0* T55f27(GE_context* ac, T0* C);
/* ET_XACE_TARGET.set_creation_procedure_name */
extern void T554f14(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_TARGET.set_root_class_name */
extern void T554f13(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_creation */
extern T0* T55f26(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_class */
extern T0* T55f25(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_root */
extern T0* T55f24(GE_context* ac, T0* C);
/* ET_XACE_TARGET.set_libraries */
extern void T554f12(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_TARGET.set_clusters */
extern void T554f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_TARGET.set_options */
extern void T554f10(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_cluster */
extern T0* T55f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T55f23ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.new_class */
extern T0* T55f52(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T55f52ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.new_feature */
extern T0* T55f72(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T55f72ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.valid_feature_options */
extern T0* T55f74(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM_PARSER.valid_feature_options */
extern T0* T55f74ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.valid_class_options */
extern T0* T55f71(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM_PARSER.valid_class_options */
extern T0* T55f71ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_options */
extern T0* T55f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM_PARSER.valid_cluster_options */
extern T0* T55f50(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM_PARSER.valid_cluster_options */
extern T0* T55f50ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_relative */
extern T0* T55f48(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_abstract */
extern T0* T55f47(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_cluster */
extern T0* T55f21(GE_context* ac, T0* C);
/* ET_XACE_TARGET.set_name */
extern void T554f9(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_name */
extern T0* T55f17(GE_context* ac, T0* C);
/* ET_XACE_TARGETS.last */
extern T0* T557f4(GE_context* ac, T0* C);
/* ET_XACE_TARGETS.target */
extern T0* T557f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_TARGET].item */
extern T0* T1758f7(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_TARGETS.count */
extern T6 T557f2(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.make */
extern T0* T197c155(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.make_system */
extern void T197f168(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_default_class_mapping */
extern void T197f185(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_wide_character_ref_class_mapping */
extern void T197f248(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_class_mapping */
extern void T197f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.set_wide_character_class_mapping */
extern void T197f247(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_string_class_mapping */
extern void T197f246(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_real_ref_class_mapping */
extern void T197f245(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_real_class_mapping */
extern void T197f244(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_natural_ref_class_mapping */
extern void T197f243(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_natural_class_mapping */
extern void T197f242(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_integer_ref_class_mapping */
extern void T197f241(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_integer_class_mapping */
extern void T197f240(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_double_ref_class_mapping */
extern void T197f239(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_double_class_mapping */
extern void T197f238(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_character_ref_class_mapping */
extern void T197f237(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_character_class_mapping */
extern void T197f236(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.tokens */
extern T0* T197f133(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_kernel_types */
extern void T197f184(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_wide_character_type */
extern void T197f235(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_typed_pointer_type */
extern void T197f234(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_type_type */
extern void T197f233(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_system_string_type */
extern void T197f232(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_system_object_type */
extern void T197f231(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_string_type */
extern void T197f230(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_string_32_type */
extern void T197f229(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_string_8_type */
extern void T197f228(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_special_type */
extern void T197f227(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_routine_type */
extern void T197f226(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_real_64_type */
extern void T197f225(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_real_32_type */
extern void T197f224(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_real_type */
extern void T197f223(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_procedure_type */
extern void T197f222(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_predicate_type */
extern void T197f221(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_pointer_type */
extern void T197f220(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_64_type */
extern void T197f219(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_32_type */
extern void T197f218(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_16_type */
extern void T197f217(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_8_type */
extern void T197f216(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_type */
extern void T197f215(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_iterable_type */
extern void T197f214(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_ise_exception_manager_type */
extern void T197f213(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_64_type */
extern void T197f212(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_32_type */
extern void T197f211(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_16_type */
extern void T197f210(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_8_type */
extern void T197f209(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_type */
extern void T197f208(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_immutable_string_32_type */
extern void T197f207(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_function_type */
extern void T197f206(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_exception_manager_type */
extern void T197f205(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_exception_type */
extern void T197f204(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_double_type */
extern void T197f203(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_character_32_type */
extern void T197f202(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_character_8_type */
extern void T197f201(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_character_type */
extern void T197f200(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_boolean_type */
extern void T197f199(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_array_type */
extern void T197f198(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_tuple_type */
extern void T197f197(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_none_type */
extern void T197f196(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_any_type */
extern void T197f195(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.make_adapted */
extern void T197f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.default_read_only_value */
extern T1 T197f144(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_unknown_kernel_types */
extern void T197f182(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_system_name */
extern void T197f181(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.initialize */
extern void T197f180(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.initialize */
extern void T197f180p1(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.class_name_tester */
extern T0* T197f147(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.make */
extern void T197f155p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_named_target */
extern T0* T55f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_OPTIONS.set_secondary_options */
extern void T553f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.default_options */
extern T0* T55f19(GE_context* ac, T0* C);
/* XM_ELEMENT.set_name */
extern void T189f23(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_system */
extern T0* T55f14(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.preprocess_element */
extern void T196f11(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T196f11ot1(T0* a1, T0** a2);
/* ET_XACE_PREPROCESSOR.should_strip_element */
extern T1 T196f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_invalid_expression_error */
extern void T56f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_INVALID_EXPRESSION_ERROR.make */
extern T0* T1986c8(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_PREPROCESSOR.is_expression_true */
extern T1 T196f8(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.template_expander */
extern T0* T196f4(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.string_ */
extern T0* T196f9(GE_context* ac, T0* C);
/* UC_UTF8_STRING.index_of */
extern T6 T1557f24(GE_context* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.index_of_item_code */
extern T6 T1557f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.index_of */
extern T6 T17f30(GE_context* ac, T0* C, T2 a1, T6 a2);
/* ET_XACE_PREPROCESSOR.is_valid_expression */
extern T1 T196f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.uc_unless */
extern T0* T196f6(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.uc_if */
extern T0* T196f5(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.expand_attribute_variables */
extern void T196f12(GE_context* ac, T0* C, T0* a1);
extern T1 T196f12ot1(T0* a1, T0** a2);
/* XM_ATTRIBUTE.set_value */
extern void T245f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_VALIDATOR.validate_library_doc */
extern void T195f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_library */
extern void T195f48(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T195f48ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_library */
extern T0* T195f4(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_library */
extern T0* T55f12(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.string_ */
extern T0* T55f53(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.make_with_variables */
extern T0* T55c75(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.make_with_variables_and_factory */
extern void T55f77(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM_PARSER.create_library_parser */
extern void T55f78(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.set_parsed_libraries */
extern void T203f70(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.make_with_variables_and_factory */
extern T0* T203c69(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.create_library_parser */
extern void T203f71(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.string_equality_tester */
extern T0* T203f46(GE_context* ac, T0* C);
/* XM_EXPAT_PARSER_FACTORY.new_expat_parser */
extern T0* T199f2(GE_context* ac, T0* C);
/* XM_EXPAT_PARSER_FACTORY.is_expat_parser_available */
extern T1 T199f1(GE_context* ac, T0* C);
/* XM_EXPAT_PARSER_FACTORY.default_create */
extern T0* T199c3(GE_context* ac);
/* ET_XACE_VALIDATOR.make */
extern T0* T195c45(GE_context* ac, T0* a1);
/* ET_XACE_PREPROCESSOR.make */
extern T0* T196c10(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].set_key_equality_tester */
extern void T198f37(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.string_equality_tester */
extern T0* T55f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].make_map */
extern T0* T198c35(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].make_with_equality_testers */
extern void T198f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].make_sparse_container */
extern void T198f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].set_internal_cursor */
extern void T198f50(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].new_cursor */
extern T0* T198f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].make */
extern T0* T729c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].make_slots */
extern void T198f49(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].make_clashes */
extern void T198f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].make_key_storage */
extern void T198f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].make_item_storage */
extern void T198f46(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_LIBRARY_CONFIG].make */
extern T0* T731f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_XACE_LIBRARY_CONFIG].make_empty */
extern T0* T730c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_LIBRARY_CONFIG].default_create */
extern T0* T731c3(GE_context* ac);
/* ET_XACE_AST_FACTORY.make */
extern T0* T187c10(GE_context* ac);
/* GEC.string_equality_tester */
extern T0* T25f48(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.make_standard */
extern T0* T56c10(GE_context* ac);
/* ET_XACE_DEFAULT_ERROR_HANDLER.std */
extern T0* T56f7(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.make_null */
extern T0* T56c9(GE_context* ac);
/* ET_XACE_DEFAULT_ERROR_HANDLER.null_output_stream */
extern T0* T56f6(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.same_string */
extern T1 T38f1(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T38f1ot1(T0* a1, T0** a2);
extern T1 T38f1ot2(T0* a1, T0** a2);
/* KL_STRING_ROUTINES.elks_same_string */
extern T1 T38f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.same_unicode_string */
extern T1 T1557f37(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.unicode_substring_index */
extern T6 T1557f32(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T1557f32ot1(T0* a1, T0** a2);
extern T1 T1557f32ot2(T0* a1, T0** a2);
/* GEC.string_ */
extern T0* T25f34(GE_context* ac, T0* C);
/* INTEGER_32.is_greater */
extern T1 T6f6(GE_context* ac, T6* C, T6 a1);
/* KL_TEXT_INPUT_FILE.is_open_read */
extern T1 T33f14(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_read */
extern T1 T33f27(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T33f61(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_closed */
extern T1 T33f17(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_open_read */
extern void T33f66(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.default_pointer */
extern T14 T33f21(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T33f66p1(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_open */
extern T14 T33f24(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.old_is_readable */
extern T1 T33f16(GE_context* ac, T0* C);
/* FILE_INFO.is_readable */
extern T1 T157f8(GE_context* ac, T0* C);
/* FILE_INFO.file_eaccess */
extern T1 T157f6(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.make */
extern void T33f59(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern T0* T33c59(GE_context* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern void T33f59p1(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.old_make */
extern void T33f64(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make_with_name */
extern void T33f69(GE_context* ac, T0* C, T0* a1);
/* GEC.parse_arguments */
extern void T25f59(GE_context* ac, T0* C);
/* GEC.set_new_instance_types */
extern void T25f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] STRING_8].force */
extern void T109f40(GE_context* ac, T0* C, T0* a1);
/* STRING_8.adjust */
extern void T17f58(GE_context* ac, T0* C);
/* STRING_8.right_adjust */
extern void T17f63(GE_context* ac, T0* C);
/* CHARACTER_8.is_space */
extern T1 T2f4(GE_context* ac, T2* C);
/* STRING_8.left_adjust */
extern void T17f62(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].make_equal */
extern T0* T109c39(GE_context* ac, T6 a1);
/* GEC.set_split_size */
extern void T25f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* AP_ERROR.make_invalid_parameter_error */
extern T0* T108c21(GE_context* ac, T0* a1, T0* a2);
/* GEC.set_override_variables */
extern void T25f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable STRING_8].forth */
extern void T177f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable STRING_8].cursor_forth */
extern void T176f15(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable STRING_8].set_position */
extern void T177f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable STRING_8].add_traversing_cursor */
extern void T176f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable STRING_8].set_next_cursor */
extern void T177f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable STRING_8].remove_traversing_cursor */
extern void T176f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable STRING_8].item */
extern T0* T177f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable STRING_8].cursor_item */
extern T0* T176f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable STRING_8].after */
extern T1 T177f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable STRING_8].new_iterator */
extern T0* T176f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable STRING_8].start */
extern void T177f11(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable STRING_8].cursor_start */
extern void T176f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable STRING_8].set_after */
extern void T177f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable STRING_8].off */
extern T1 T177f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable STRING_8].before */
extern T1 T177f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable STRING_8].new_cursor */
extern T0* T176f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable STRING_8].make */
extern T0* T177c9(GE_context* ac, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.set_variable_value */
extern void T107f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.put */
extern void T145f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.eif_putenv */
extern T6 T145f8(GE_context* ac, T0* C, T14 a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].force */
extern void T601f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] SPECIAL [[attached] NATIVE_STRING].force */
extern void T1771f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] NATIVE_STRING].extend */
extern void T1771f7(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].position */
extern T6 T601f22(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] IMMUTABLE_STRING_32].force */
extern void T1756f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] BOOLEAN].force */
extern void T150f7(GE_context* ac, T0* C, T1 a1, T6 a2);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].deleted_position */
extern T6 T601f21(GE_context* ac, T0* C, T6 a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].add_space */
extern void T601f37(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].accommodate */
extern void T601f38(GE_context* ac, T0* C, T6 a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].set_indexes_map */
extern void T601f42(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].set_deleted_marks */
extern void T601f41(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].set_keys */
extern void T601f40(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].set_content */
extern void T601f39(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].put */
extern void T601f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].set_conflict */
extern void T601f45(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].found */
extern T1 T601f31(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].occupied */
extern T1 T601f29(GE_context* ac, T0* C, T6 a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].empty_duplicate */
extern T0* T601f28(GE_context* ac, T0* C, T6 a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].compare_objects */
extern void T601f44(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].make */
extern T0* T601c34(GE_context* ac, T6 a1);
/* [attached] SPECIAL [[attached] NATIVE_STRING].make_empty */
extern T0* T1771c4(GE_context* ac, T6 a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].soon_full */
extern T1 T601f20(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].not_found */
extern T1 T601f19(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].internal_search */
extern void T601f36(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].same_keys */
extern T1 T601f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* IMMUTABLE_STRING_32.is_equal */
extern T1 T19f8(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_32].same_items */
extern T1 T16f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].hash_code_of */
extern T6 T601f25(GE_context* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.hash_code */
extern T6 T19f7(GE_context* ac, T0* C);
/* IMMUTABLE_STRING_32.item */
extern T3 T19f10(GE_context* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.make_from_string_general */
extern T0* T19c11(GE_context* ac, T0* a1);
/* UC_UTF8_STRING.to_string_32 */
extern T0* T1557f21(GE_context* ac, T0* C);
/* STRING_8.to_string_32 */
extern T0* T17f36(GE_context* ac, T0* C);
/* IMMUTABLE_STRING_32.make_from_string_32 */
extern void T19f14(GE_context* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.make_from_string_8 */
extern void T19f13(GE_context* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.make_from_area_and_bounds */
extern void T19f15(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* EXECUTION_ENVIRONMENT.environ */
extern T0* T145f6(GE_context* ac, T0* C);
/* GEC.execution_environment */
extern T0* T25f55(GE_context* ac, T0* C);
/* GEC.set_override_capabilities */
extern void T25f68(GE_context* ac, T0* C, T0* a1, T0* a2);
/* GEC.set_override_settings */
extern void T25f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].first */
extern T0* T171f19(GE_context* ac, T0* C);
/* GEC.report_usage_message */
extern void T25f66(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.full_usage_instruction */
extern T0* T42f23(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].forth */
extern void T170f17(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].cursor_forth */
extern void T170f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].set_position */
extern void T614f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].add_traversing_cursor */
extern void T170f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].set_next_cursor */
extern void T614f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].remove_traversing_cursor */
extern void T170f23(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.alternative_usage_instruction */
extern T0* T42f21(GE_context* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.wrapped_string */
extern T0* T166f5(GE_context* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.canonify_whitespace */
extern void T166f12(GE_context* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.is_space */
extern T1 T166f8(GE_context* ac, T0* C, T2 a1);
/* ST_WORD_WRAPPER.string_ */
extern T0* T166f4(GE_context* ac, T0* C);
/* ST_WORD_WRAPPER.set_new_line_indentation */
extern void T166f10(GE_context* ac, T0* C, T6 a1);
/* AP_PARSER.wrapper */
extern T0* T42f12(GE_context* ac, T0* C);
/* ST_WORD_WRAPPER.set_maximum_text_width */
extern void T166f11(GE_context* ac, T0* C, T6 a1);
/* ST_WORD_WRAPPER.make */
extern T0* T166c9(GE_context* ac);
/* KL_UNIX_FILE_SYSTEM.basename */
extern T0* T147f2(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.basename */
extern T0* T146f2(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.arguments */
extern T0* T42f27(GE_context* ac, T0* C);
/* AP_PARSER.file_system */
extern T0* T42f26(GE_context* ac, T0* C);
/* AP_PARSER.unix_file_system */
extern T0* T42f15(GE_context* ac, T0* C);
/* AP_PARSER.windows_file_system */
extern T0* T42f14(GE_context* ac, T0* C);
/* AP_PARSER.operating_system */
extern T0* T42f13(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.forth */
extern void T43f17(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_forth */
extern void T43f19(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.add_traversing_cursor */
extern void T43f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION].set_next_cursor */
extern void T175f9(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.remove_traversing_cursor */
extern void T43f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION].set */
extern void T175f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* AP_ALTERNATIVE_OPTIONS_LIST.item_for_iteration */
extern T0* T43f6(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_item */
extern T0* T43f8(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.after */
extern T1 T43f5(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_after */
extern T1 T43f7(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.start */
extern void T43f16(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_start */
extern void T43f18(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_off */
extern T1 T43f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION].off */
extern T1 T175f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].item_for_iteration */
extern T0* T170f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].cursor_item */
extern T0* T170f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T170f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].cursor_after */
extern T1 T170f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T614f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].start */
extern void T170f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].cursor_start */
extern void T170f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].set_after */
extern void T614f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].is_empty */
extern T1 T170f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].off */
extern T1 T614f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].before */
extern T1 T614f6(GE_context* ac, T0* C);
/* AP_PARSER.usage_instruction */
extern T0* T42f17(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].forth */
extern void T169f20(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].cursor_forth */
extern void T169f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].set_position */
extern void T608f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].add_traversing_cursor */
extern void T169f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].set_next_cursor */
extern void T608f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].remove_traversing_cursor */
extern void T169f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].item_for_iteration */
extern T0* T169f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].cursor_item */
extern T0* T169f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].after */
extern T1 T169f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].cursor_after */
extern T1 T169f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].after */
extern T1 T608f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].start */
extern void T169f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].cursor_start */
extern void T169f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].set_after */
extern void T608f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].is_empty */
extern T1 T169f15(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].off */
extern T1 T608f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].before */
extern T1 T608f6(GE_context* ac, T0* C);
/* GEC.report_version_number */
extern void T25f65(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.make */
extern T0* T102c8(GE_context* ac, T0* a1);
/* AP_PARSER.parse_arguments */
extern void T42f44(GE_context* ac, T0* C);
/* AP_PARSER.parse_list */
extern void T42f45(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.final_error_action */
extern void T42f49(GE_context* ac, T0* C);
/* AP_PARSER.exceptions */
extern T0* T42f31(GE_context* ac, T0* C);
/* KL_EXCEPTIONS.default_create */
extern T0* T41c1(GE_context* ac);
/* AP_ERROR_HANDLER.report_error_message */
extern void T172f10(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR_HANDLER.report_error_message */
extern void T172f10p1(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.check_options_after_parsing */
extern void T42f48(GE_context* ac, T0* C);
/* AP_ERROR.make_surplus_option_error */
extern T0* T108c23(GE_context* ac, T0* a1);
/* AP_ERROR_HANDLER.report_error */
extern void T172f9(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR_HANDLER.message */
extern T0* T172f6(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_missing_option_error */
extern T0* T108c22(GE_context* ac, T0* a1);
/* AP_PARSER.parse_argument */
extern void T42f47(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.parse_short */
extern void T42f51(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_missing_parameter_error */
extern T0* T108c25(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].off */
extern T1 T171f12(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].cursor_off */
extern T1 T171f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].off */
extern T1 T618f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].before */
extern T1 T618f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].after */
extern T1 T618f5(GE_context* ac, T0* C);
/* AP_ERROR.make_unknown_option_error */
extern T0* T108c24(GE_context* ac, T0* a1);
/* CHARACTER_8.out */
extern T0* T2f3(GE_context* ac, T2* C);
/* AP_PARSER.parse_long */
extern void T42f50(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_unnecessary_parameter_error */
extern T0* T108c26(GE_context* ac, T0* a1, T0* a2);
/* AP_PARSER.string_ */
extern T0* T42f33(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].forth */
extern void T171f24(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].cursor_forth */
extern void T171f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].set_position */
extern void T618f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].add_traversing_cursor */
extern void T171f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].remove_traversing_cursor */
extern void T171f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].item_for_iteration */
extern T0* T171f11(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].cursor_item */
extern T0* T171f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].after */
extern T1 T171f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].cursor_after */
extern T1 T171f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].start */
extern void T171f23(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].cursor_start */
extern void T171f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].is_empty */
extern T1 T171f16(GE_context* ac, T0* C);
/* AP_PARSER.reset_parser */
extern void T42f46(GE_context* ac, T0* C);
/* AP_PARSER.all_options */
extern T0* T42f25(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].has */
extern T1 T169f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].make */
extern T0* T169c17(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].set_internal_cursor */
extern void T169f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].new_cursor */
extern T0* T169f12(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].make */
extern T0* T608c8(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] AP_OPTION].make */
extern T0* T612f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] AP_OPTION].make_empty */
extern T0* T611c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] AP_OPTION].default_create */
extern T0* T612c3(GE_context* ac);
/* AP_ERROR_HANDLER.reset */
extern void T172f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].force */
extern void T171f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].put */
extern void T171f30(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].move_cursors_right */
extern void T171f35(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].move_right */
extern void T171f34(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_ARGUMENTS.argument_count */
extern T6 T34f3(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].force_last */
extern void T170f15(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST].force */
extern void T616f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST].fill_with */
extern void T615f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST].extend */
extern void T615f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern void T170f19(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T616f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T615f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].new_capacity */
extern T6 T170f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].extendible */
extern T1 T170f10(GE_context* ac, T0* C, T6 a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.make */
extern T0* T43c11(GE_context* ac, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.old_make */
extern void T43f14(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_internal_cursor */
extern void T43f15(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.new_cursor */
extern T0* T43f10(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION].make */
extern T0* T175c7(GE_context* ac, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_parameters_description */
extern void T43f13(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_introduction_option */
extern void T43f12(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.make */
extern T0* T46c19(GE_context* ac, T2 a1, T0* a2);
/* AP_FLAG.set_long_form */
extern void T46f21(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.set_short_form */
extern void T46f23(GE_context* ac, T0* C, T2 a1);
/* AP_FLAG.initialize */
extern void T46f20(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.set_parameter_description */
extern void T49f25(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.set_description */
extern void T49f24(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.make_with_long_form */
extern T0* T49c23(GE_context* ac, T0* a1);
/* AP_INTEGER_OPTION.set_long_form */
extern void T49f27(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.initialize */
extern void T49f26(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T49f26p1(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T49f26p0(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.set_parameter_description */
extern void T48f28(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.set_description */
extern void T48f27(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.make_with_long_form */
extern T0* T48c26(GE_context* ac, T0* a1);
/* AP_BOOLEAN_OPTION.set_long_form */
extern void T48f30(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.initialize */
extern void T48f29(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T48f29p1(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T48f29p0(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.set_parameter_description */
extern void T47f28(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.extend */
extern void T47f27(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.update_parameter_description */
extern void T47f32(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].forth */
extern void T178f21(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].is_last */
extern T1 T178f10(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].cursor_is_last */
extern T1 T178f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].item_for_iteration */
extern T0* T178f8(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].cursor_item */
extern T0* T178f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].after */
extern T1 T178f11(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].cursor_after */
extern T1 T178f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].start */
extern void T178f20(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.set_description */
extern void T47f26(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.make_with_long_form */
extern T0* T47c25(GE_context* ac, T0* a1);
/* AP_ENUMERATION_OPTION.set_long_form */
extern void T47f30(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.initialize */
extern void T47f29(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].set_equality_tester */
extern void T178f19(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.string_equality_tester */
extern T0* T47f14(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T47f29p1(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T47f29p0(GE_context* ac, T0* C);
/* AP_FLAG.set_description */
extern void T46f18(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.make_with_long_form */
extern T0* T46c17(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].force_last */
extern void T169f18(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] AP_OPTION].force */
extern void T612f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] AP_OPTION].fill_with */
extern void T611f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] AP_OPTION].extend */
extern void T611f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].resize */
extern void T169f22(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] AP_OPTION].aliased_resized_area */
extern T0* T612f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] AP_OPTION].aliased_resized_area */
extern T0* T611f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].new_capacity */
extern T6 T169f14(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].extendible */
extern T1 T169f13(GE_context* ac, T0* C, T6 a1);
/* AP_STRING_OPTION.set_parameter_description */
extern void T44f25(GE_context* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.set_description */
extern void T44f24(GE_context* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.make_with_long_form */
extern T0* T44c23(GE_context* ac, T0* a1);
/* AP_STRING_OPTION.set_long_form */
extern void T44f27(GE_context* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.initialize */
extern void T44f26(GE_context* ac, T0* C);
/* AP_STRING_OPTION.initialize */
extern void T44f26p1(GE_context* ac, T0* C);
/* AP_PARSER.set_parameters_description */
extern void T42f43(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.set_application_description */
extern void T42f42(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.make */
extern T0* T42c41(GE_context* ac);
/* AP_DISPLAY_HELP_FLAG.set_description */
extern void T168f20(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.make */
extern T0* T168c19(GE_context* ac, T2 a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.set_long_form */
extern void T168f23(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.set_short_form */
extern void T168f22(GE_context* ac, T0* C, T2 a1);
/* AP_DISPLAY_HELP_FLAG.initialize */
extern void T168f21(GE_context* ac, T0* C);
/* AP_PARSER.make */
extern void T42f41p1(GE_context* ac, T0* C);
/* AP_ERROR_HANDLER.make_standard */
extern T0* T172c7(GE_context* ac);
/* AP_ERROR_HANDLER.std */
extern T0* T172f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T170c14(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].set_internal_cursor */
extern void T170f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].new_cursor */
extern T0* T170f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T614c8(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T616f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST].make_empty */
extern T0* T615c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST].default_create */
extern T0* T616c3(GE_context* ac);
/* ET_ERROR_HANDLER.make_standard */
extern T0* T36c177(GE_context* ac);
/* ET_ERROR_HANDLER.make_standard */
extern void T36f177p1(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.set_ise_library_variable */
extern void T35f7(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.execution_environment */
extern T0* T35f3(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.ise_eiffel_value */
extern T0* T35f2(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.ise_library_value */
extern T0* T35f1(GE_context* ac, T0* C);
/* GEC.ise_variables */
extern T0* T25f31(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.default_create */
extern T0* T35c6(GE_context* ac);
/* KL_ARGUMENTS.set_program_name */
extern void T34f6(GE_context* ac, T0* C, T0* a1);
/* GEC.arguments */
extern T0* T25f32(GE_context* ac, T0* C);
/* KL_EXCEPTIONS.die */
extern void T41f2(GE_context* ac, T0* C, T6 a1);
/* KL_EXCEPTIONS.exceptions_die */
extern void T41f3(GE_context* ac, T0* C, T6 a1);
/* GEC.exceptions */
extern T0* T25f29(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.set_exception_data */
extern void T20f16(GE_context* ac, T0* C, T6 a1, T1 a2, T6 a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T6 a11, T1 a12);
/* ISE_EXCEPTION_MANAGER.exception_from_data */
extern T0* T20f10(GE_context* ac, T0* C);
extern T1 T20f10ot1(T0* a1, T0** a2);
extern T1 T20f10ot2(T0* a1, T0** a2);
extern T1 T20f10ot3(T0* a1, T0** a2);
extern T1 T20f10ot4(T0* a1, T0** a2);
extern T1 T20f10ot5(T0* a1, T0** a2);
extern T1 T20f10ot6(T0* a1, T0** a2);
extern T1 T20f10ot7(T0* a1, T0** a2);
/* COM_FAILURE.set_exception_information */
extern void T124f15(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.ccom_hresult_to_string */
extern T0* T124f11(GE_context* ac, T0* C, T6 a1);
/* INTEGER_32.to_hex_string */
extern T0* T6f24(GE_context* ac, T6* C);
/* COM_FAILURE.set_hresult_code */
extern void T124f14(GE_context* ac, T0* C, T6 a1);
/* OPERATING_SYSTEM_FAILURE.set_error_code */
extern void T123f9(GE_context* ac, T0* C, T6 a1);
/* IO_FAILURE.set_error_code */
extern void T122f11(GE_context* ac, T0* C, T6 a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_signal_code */
extern void T121f9(GE_context* ac, T0* C, T6 a1);
/* INVARIANT_VIOLATION.set_is_entry */
extern void T120f9(GE_context* ac, T0* C, T1 a1);
/* ROUTINE_FAILURE.set_class_name */
extern void T114f10(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_routine_name */
extern void T114f9(GE_context* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_from_code */
extern T0* T20f12(GE_context* ac, T0* C, T6 a1);
/* SERIALIZATION_FAILURE.default_create */
extern T0* T144c6(GE_context* ac);
/* OLD_VIOLATION.default_create */
extern T0* T116c6(GE_context* ac);
/* COM_FAILURE.default_create */
extern T0* T124c12(GE_context* ac);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.default_create */
extern T0* T143c6(GE_context* ac);
/* MISMATCH_FAILURE.default_create */
extern T0* T141c6(GE_context* ac);
/* OPERATING_SYSTEM_FAILURE.default_create */
extern T0* T123c7(GE_context* ac);
/* IO_FAILURE.set_code */
extern void T122f9(GE_context* ac, T0* C, T6 a1);
/* IO_FAILURE.default_create */
extern T0* T122c8(GE_context* ac);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.default_create */
extern T0* T140c6(GE_context* ac);
/* VOID_ASSIGNED_TO_EXPANDED.default_create */
extern T0* T139c6(GE_context* ac);
/* EXTERNAL_FAILURE.default_create */
extern T0* T138c6(GE_context* ac);
/* CREATE_ON_DEFERRED.default_create */
extern T0* T137c6(GE_context* ac);
/* RESUMPTION_FAILURE.default_create */
extern T0* T136c6(GE_context* ac);
/* RESCUE_FAILURE.default_create */
extern T0* T135c6(GE_context* ac);
/* EIFFEL_RUNTIME_PANIC.set_code */
extern void T125f9(GE_context* ac, T0* C, T6 a1);
/* EIFFEL_RUNTIME_PANIC.code */
extern T6 T125f7(GE_context* ac, T0* C);
/* EIFFEL_RUNTIME_PANIC.default_create */
extern T0* T125c8(GE_context* ac);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.default_create */
extern T0* T121c7(GE_context* ac);
/* LOOP_INVARIANT_VIOLATION.default_create */
extern T0* T134c6(GE_context* ac);
/* VARIANT_VIOLATION.default_create */
extern T0* T133c6(GE_context* ac);
/* BAD_INSPECT_VALUE.default_create */
extern T0* T132c6(GE_context* ac);
/* ROUTINE_FAILURE.default_create */
extern T0* T114c8(GE_context* ac);
/* CHECK_VIOLATION.default_create */
extern T0* T131c6(GE_context* ac);
/* INVARIANT_VIOLATION.default_create */
extern T0* T120c7(GE_context* ac);
/* FLOATING_POINT_FAILURE.default_create */
extern T0* T130c6(GE_context* ac);
/* POSTCONDITION_VIOLATION.default_create */
extern T0* T129c6(GE_context* ac);
/* PRECONDITION_VIOLATION.default_create */
extern T0* T128c6(GE_context* ac);
/* NO_MORE_MEMORY.set_code */
extern void T119f10(GE_context* ac, T0* C, T6 a1);
/* NO_MORE_MEMORY.code */
extern T6 T119f7(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.no_memory_exception_object_cell */
extern T0* T20f7(GE_context* ac, T0* C);
/* [attached] CELL [[attached] NO_MORE_MEMORY].put */
extern T0* T29c2(GE_context* ac, T0* a1);
/* NO_MORE_MEMORY.default_create */
extern T0* T119c8(GE_context* ac);
/* VOID_TARGET.default_create */
extern T0* T112c6(GE_context* ac);
/* ISE_EXCEPTION_MANAGER.exception_data */
extern T0* T20f11(GE_context* ac, T0* C);
/* [attached] CELL [detachable TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN]].put */
extern void T28f2(GE_context* ac, T0* C, T0* a1);
/* [attached] CELL [detachable TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN]].put */
extern T0* T28c2(GE_context* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_data_cell */
extern T0* T20f6(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.once_raise */
extern void T20f15(GE_context* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.last_exception */
extern T0* T20f1(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.init_exception_manager */
extern void T20f14(GE_context* ac, T0* C);
/* [attached] CELL [[attached] NO_MORE_MEMORY].do_nothing */
extern void T29f3(GE_context* ac, T0* C);
/* [attached] CELL [detachable EXCEPTION].do_nothing */
extern void T26f3(GE_context* ac, T0* C);
/* [attached] CELL [detachable TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN]].do_nothing */
extern void T28f3(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.unraisable_exceptions */
extern T0* T20f5(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].force */
extern void T27f37(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].position */
extern T6 T27f22(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].deleted_position */
extern T6 T27f21(GE_context* ac, T0* C, T6 a1);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].add_space */
extern void T27f39(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].accommodate */
extern void T27f40(GE_context* ac, T0* C, T6 a1);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].set_indexes_map */
extern void T27f44(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].set_deleted_marks */
extern void T27f43(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].set_keys */
extern void T27f42(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].set_content */
extern void T27f41(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].put */
extern void T27f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].set_conflict */
extern void T27f47(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].found */
extern T1 T27f31(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].occupied */
extern T1 T27f29(GE_context* ac, T0* C, T6 a1);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].empty_duplicate */
extern T0* T27f28(GE_context* ac, T0* C, T6 a1);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].compare_objects */
extern void T27f46(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].soon_full */
extern T1 T27f20(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].not_found */
extern T1 T27f19(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].internal_search */
extern void T27f38(GE_context* ac, T0* C, T6 a1);
/* ISE_EXCEPTION_MANAGER.unignorable_exceptions */
extern T0* T20f4(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].do_nothing */
extern void T27f36(GE_context* ac, T0* C);
/* KL_DIRECTORY.dispose */
extern void T451f31(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.dispose */
extern void T411f28(GE_context* ac, T0* C);
/* MUTEX.dispose */
extern void T158f10(GE_context* ac, T0* C);
/* MUTEX.destroy */
extern void T158f13(GE_context* ac, T0* C);
/* MUTEX.eif_thr_mutex_destroy */
extern void T158f16(GE_context* ac, T0* C, T14 a1);
/* MANAGED_POINTER.dispose */
extern void T154f10(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.dispose */
extern void T33f60(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_close */
extern void T33f65(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_close */
extern void T33f70(GE_context* ac, T0* C, T14 a1);
/* [attached] LX_SYMBOL_TRANSITION [[attached] LX_NFA_STATE].record */
extern void T2793f5(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T2752f12(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T2752f12p1(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_BILINKABLE [[attached] INTEGER_32].forget_left */
extern void T2797f8(GE_context* ac, T0* C);
/* [attached] DS_BILINKABLE [[attached] INTEGER_32].forget_right */
extern void T2797f7(GE_context* ac, T0* C);
/* [attached] DS_BILINKABLE [[attached] INTEGER_32].put_right */
extern void T2797f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKABLE [[attached] INTEGER_32].attach_left */
extern void T2797f11(GE_context* ac, T0* C, T0* a1);
/* [attached] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]].item */
extern T0* T2796f4(GE_context* ac, T0* C, T6 a1);
/* [attached] LX_EPSILON_TRANSITION [[attached] LX_NFA_STATE].record */
extern void T2790f4(GE_context* ac, T0* C, T0* a1);
/* [attached] LX_SYMBOL_CLASS_TRANSITION [[attached] LX_NFA_STATE].record */
extern void T2788f5(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.add */
extern void T2752f11(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.item */
extern T6 T2726f14(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.upper */
extern T6 T2752f6(GE_context* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.lower */
extern T6 T2752f7(GE_context* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.add */
extern void T2752f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_INSTRUCTION.set_arguments */
extern void T2597f9(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.set_arguments */
extern void T2157f11(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.set_arguments */
extern void T2136f30(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_arguments */
extern void T2123f34(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.set_arguments */
extern void T2122f37(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.set_arguments */
extern void T2121f14(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_arguments */
extern void T2120f15(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_EXPRESSION.set_arguments */
extern void T1528f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL.set_arguments */
extern void T445f8(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T397f33(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T396f33(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_arguments */
extern void T392f15(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T2157f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_INSTRUCTION.make */
extern T0* T2597c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T397f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_EXPRESSION.make */
extern T0* T1528c10(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T396f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T392f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C2_CHARACTER_CONSTANT.set_type */
extern void T2064f50(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_type */
extern void T2063f50(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_type */
extern void T2045f51(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_options */
extern void T1455f25(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_options */
extern void T267f32(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_options */
extern void T260f27(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.reset */
extern void T2132f34(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.reset */
extern void T2130f34(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.reset */
extern void T2057f55(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.reset */
extern void T2054f100(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.reset */
extern void T2044f53(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.set_type */
extern void T2051f70(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_type */
extern void T2050f70(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_type */
extern void T2049f70(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_type */
extern void T2048f70(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_type */
extern void T495f73(GE_context* ac, T0* C, T0* a1);
/* XM_CHARACTER_DATA.node_set_parent */
extern void T2004f4(GE_context* ac, T0* C, T0* a1);
/* XM_ATTRIBUTE.node_set_parent */
extern void T245f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].remove */
extern void T2212f15(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_CLUSTER].keep_head */
extern void T2505f8(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_CLUSTER].set_count */
extern void T2505f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].move_left */
extern void T2212f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].move_cursors_left */
extern void T2212f17(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER].set_position */
extern void T2507f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].remove_last */
extern void T2212f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].move_last_cursors_after */
extern void T2212f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER].set_next_cursor */
extern void T2507f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER].set_after */
extern void T2507f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].remove */
extern void T1759f15(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_XACE_CLUSTER].keep_head */
extern void T2271f8(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_XACE_CLUSTER].set_count */
extern void T2271f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].move_left */
extern void T1759f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].move_cursors_left */
extern void T1759f17(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_CLUSTER].set_position */
extern void T2273f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].remove_last */
extern void T1759f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].move_last_cursors_after */
extern void T1759f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_CLUSTER].set_next_cursor */
extern void T2273f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_CLUSTER].set_after */
extern void T2273f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].remove */
extern void T820f15(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].move_left */
extern void T820f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].move_cursors_left */
extern void T820f17(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LACE_CLUSTER].set_position */
extern void T1861f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].remove_last */
extern void T820f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].move_last_cursors_after */
extern void T820f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LACE_CLUSTER].set_next_cursor */
extern void T1861f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LACE_CLUSTER].set_after */
extern void T1861f7(GE_context* ac, T0* C);
/* ET_CHOICE_RANGE.reset */
extern void T2116f8(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T2157f8(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T2157f8p1(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset_arguments */
extern void T2157f9(GE_context* ac, T0* C);
extern T1 T2157f9ot1(T0* a1, T0** a2);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.reset */
extern void T2487f14(GE_context* ac, T0* C);
extern T1 T2487f14ot1(T0* a1, T0** a2);
/* ET_ACTUAL_ARGUMENT_LIST.reset */
extern void T391f18(GE_context* ac, T0* C);
extern T1 T391f18ot1(T0* a1, T0** a2);
/* ET_ACROSS_INSTRUCTION.reset */
extern void T2156f25(GE_context* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset_unfolded_form */
extern void T2156f26(GE_context* ac, T0* C);
/* ET_VARIANT.reset */
extern void T2092f7(GE_context* ac, T0* C);
/* ET_LOOP_INVARIANTS.reset */
extern void T2153f12(GE_context* ac, T0* C);
/* ET_COMPOUND.reset */
extern void T456f13(GE_context* ac, T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T2155f15(GE_context* ac, T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T2155f15p1(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T2121f12(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.type */
extern T0* T2121f6(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T2121f12p1(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset_arguments */
extern void T2121f13(GE_context* ac, T0* C);
extern T1 T2121f13ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_INSTRUCTION.reset */
extern void T2120f13(GE_context* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.reset_arguments */
extern void T2120f14(GE_context* ac, T0* C);
extern T1 T2120f14ot1(T0* a1, T0** a2);
/* ET_DEBUG_INSTRUCTION.reset */
extern void T2118f7(GE_context* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.reset */
extern void T2113f10(GE_context* ac, T0* C);
/* ET_WHEN_PART_LIST.reset */
extern void T2114f7(GE_context* ac, T0* C);
/* ET_WHEN_PART.reset */
extern void T1677f4(GE_context* ac, T0* C);
/* ET_CHOICE_LIST.reset */
extern void T2115f11(GE_context* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.expression */
extern T0* T2113f6(GE_context* ac, T0* C);
/* ET_IF_INSTRUCTION.reset */
extern void T2109f12(GE_context* ac, T0* C);
/* ET_ELSEIF_PART_LIST.reset */
extern void T2110f7(GE_context* ac, T0* C);
/* ET_ELSEIF_PART.reset */
extern void T1675f5(GE_context* ac, T0* C);
/* ET_ELSEIF_PART.expression */
extern T0* T1675f3(GE_context* ac, T0* C);
/* ET_IF_INSTRUCTION.expression */
extern T0* T2109f7(GE_context* ac, T0* C);
/* ET_CREATE_INSTRUCTION.reset */
extern void T2107f16(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.reset */
extern void T445f6(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.reset_arguments */
extern void T445f7(GE_context* ac, T0* C);
extern T1 T445f7ot1(T0* a1, T0** a2);
/* ET_CREATE_INSTRUCTION.type */
extern T0* T2107f7(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.reset */
extern void T2106f14(GE_context* ac, T0* C);
/* ET_LOOP_INSTRUCTION.reset */
extern void T2104f15(GE_context* ac, T0* C);
/* ET_LOOP_INSTRUCTION.until_expression */
extern T0* T2104f9(GE_context* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.reset */
extern void T2102f7(GE_context* ac, T0* C);
/* ET_ASSIGNMENT.reset */
extern void T2101f7(GE_context* ac, T0* C);
extern T1 T2101f7ot1(T0* a1, T0** a2);
/* ET_ASSIGNER_INSTRUCTION.reset */
extern void T2100f17(GE_context* ac, T0* C);
extern T1 T2100f17ot1(T0* a1, T0** a2);
/* ET_ASSIGNER_INSTRUCTION.dummy_name */
extern T0* T2100f6(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.reset */
extern void T2061f18(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T392f12(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T392f12p1(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T392f12p0(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset_arguments */
extern void T392f16(GE_context* ac, T0* C);
extern T1 T392f16ot1(T0* a1, T0** a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.process */
extern void T2157f7(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.process */
extern void T2156f24(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.process */
extern void T2155f14(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.process */
extern void T2121f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.process */
extern void T2120f12(GE_context* ac, T0* C, T0* a1);
/* ET_DEBUG_INSTRUCTION.process */
extern void T2118f6(GE_context* ac, T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.process */
extern void T2113f9(GE_context* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.process */
extern void T2109f11(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.process */
extern void T2107f15(GE_context* ac, T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.process */
extern void T2106f13(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.process */
extern void T2104f14(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT_ATTEMPT.process */
extern void T2102f6(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT.process */
extern void T2101f6(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.process */
extern void T2100f16(GE_context* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.process */
extern void T2061f17(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.process */
extern void T392f11(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.reset */
extern void T2086f48(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.reset */
extern void T1573f87(GE_context* ac, T0* C);
/* XM_PROCESSING_INSTRUCTION.node_set_parent */
extern void T2003f6(GE_context* ac, T0* C, T0* a1);
/* XM_COMMENT.node_set_parent */
extern void T2002f5(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.node_set_parent */
extern void T189f24(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T2676f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_type */
extern void T2676f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T319f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T91f517(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_actual_argument_dynamic_types */
extern void T91f216(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.error_handler */
extern T0* T319f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_fatal_error */
extern void T319f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T2675f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_type */
extern void T2675f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_from_type_set */
extern void T429f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_tuple_label */
extern void T429f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T319f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T91f513(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f513ot1(T0* a1, T0** a2);
extern T1 T91f513ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_argument_dynamic_types */
extern void T91f516(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_feature */
extern void T429f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T429f15ot1(T0* a1, T0** a2);
extern T1 T429f15ot2(T0* a1, T0** a2);
extern T1 T429f15ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type */
extern void T1998f20(GE_context* ac, T0* C, T0* a1);
extern T1 T1998f20ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PRECURSOR.is_builtin_function_item */
extern T1 T416f32(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_function_item */
extern T1 T332f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin_procedure_call */
extern T1 T416f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_procedure_call */
extern T1 T332f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_from_type_set */
extern void T424f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_tuple_label */
extern void T424f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T319f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T91f512(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f512ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_result_dynamic_types */
extern void T91f515(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T424f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T424f16p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T424f16p1ot1(T0* a1, T0** a2);
extern T1 T424f16p1ot2(T0* a1, T0** a2);
extern T1 T424f16p1ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T2676f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T2675f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.propagate_can_be_void */
extern void T429f13(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.propagate_can_be_void */
extern void T424f15(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T2146f37(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T2145f43(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T2144f39(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T2142f38(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T2141f44(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T2140f40(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T2146f38(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T2145f44(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T2144f40(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_across_components */
extern void T2142f39(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_across_components */
extern void T2141f45(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_across_components */
extern void T2140f41(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.set_infix */
extern void T2086f47(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.tokens */
extern T0* T2086f34(GE_context* ac, T0* C);
/* ET_INFIX_NAME.set_infix */
extern void T2085f105(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.set_infix */
extern void T2084f73(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.tokens */
extern T0* T2084f49(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.set_infix */
extern void T2083f91(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.tokens */
extern T0* T2083f45(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.set_infix */
extern void T1573f86(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.tokens */
extern T0* T1573f5(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.set_infix */
extern void T1533f73(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.set_prefix */
extern void T2086f46(GE_context* ac, T0* C);
/* ET_INFIX_NAME.set_prefix */
extern void T2085f104(GE_context* ac, T0* C);
/* ET_INFIX_NAME.tokens */
extern T0* T2085f59(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.set_prefix */
extern void T2084f72(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.set_prefix */
extern void T2083f90(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.set_prefix */
extern void T1573f85(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.set_prefix */
extern void T1533f72(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.tokens */
extern T0* T1533f18(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.set_cast_type */
extern void T2047f46(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.set_cast_type */
extern void T2046f50(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_cast_type */
extern void T1532f43(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_sign */
extern void T2051f65(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_sign */
extern void T2050f65(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_sign */
extern void T2049f65(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_sign */
extern void T2048f65(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_sign */
extern void T495f65(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_cast_type */
extern void T2051f66(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_cast_type */
extern void T2050f66(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_cast_type */
extern void T2049f66(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_cast_type */
extern void T2048f66(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_cast_type */
extern void T495f66(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.set_cast_type */
extern void T2064f44(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_cast_type */
extern void T2063f44(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_cast_type */
extern void T2045f47(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_stream */
extern void T775f295(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T775f302(GE_context* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.name */
extern T0* T271f16(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T775f302p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.new_file_buffer */
extern T0* T775f73(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_stream */
extern void T773f202(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T773f211(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T773f211p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.new_file_buffer */
extern T0* T773f55(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_stream */
extern void T772f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T772f298(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T772f298p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.new_file_buffer */
extern T0* T772f71(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_stream */
extern void T732f200(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T732f208(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T732f208p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.new_file_buffer */
extern T0* T732f46(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T775f296(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T775f296p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T775f296p0(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_action */
extern void T775f306(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.from_hexadecimal */
extern void T1822f10(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.hexadecimal_to_integer */
extern T6 T38f17(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_CHARACTER_ENTITY.string_ */
extern T0* T1822f7(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.to_utf8 */
extern T0* T1822f3(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.utf8 */
extern T0* T1822f6(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_ascii */
extern T1 T1822f2(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_valid */
extern T1 T1822f5(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_code */
extern T1 T1419f24(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.unicode */
extern T0* T1822f4(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.from_decimal */
extern void T1822f9(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.has_normalized_newline */
extern T1 T775f203(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_substring */
extern T0* T775f183(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_PE_ENTITY_DEF.text_count */
extern T6 T775f182(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.system_literal_text */
extern T0* T775f164(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_item */
extern T2 T775f209(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T775f123(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T775f123p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_line_column */
extern void T775f310(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text */
extern T0* T775f107(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.pop_start_condition */
extern void T775f309(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition */
extern void T775f307(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_last_token */
extern void T775f308(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_eof_action */
extern void T775f305(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.wrap */
extern T1 T775f101(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_refill_input_buffer */
extern void T775f304(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_null_trans_state */
extern T6 T775f100(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_previous_state */
extern T6 T775f99(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.terminate */
extern void T775f303(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T773f203(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T773f203p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_action */
extern void T773f217(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.has_normalized_newline */
extern T1 T773f183(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_substring */
extern T0* T773f163(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER_DTD.text_count */
extern T6 T773f162(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.system_literal_text */
extern T0* T773f144(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_item */
extern T2 T773f197(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.normalized_newline */
extern T0* T773f106(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_line_column */
extern void T773f223(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text */
extern T0* T773f80(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.pop_start_condition */
extern void T773f222(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition */
extern void T773f218(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_eof_action */
extern void T773f216(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.wrap */
extern T1 T773f68(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_refill_input_buffer */
extern void T773f215(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_null_trans_state */
extern T6 T773f67(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_previous_state */
extern T6 T773f66(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.fatal_error */
extern void T773f214(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.terminate */
extern void T773f213(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_last_token */
extern void T773f212(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T772f292(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T772f292p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_action */
extern void T772f301(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.has_normalized_newline */
extern T1 T772f200(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_substring */
extern T0* T772f180(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_ENTITY_DEF.text_count */
extern T6 T772f179(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.system_literal_text */
extern T0* T772f161(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_item */
extern T2 T772f207(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T772f120(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T772f120p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_line_column */
extern void T772f306(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text */
extern T0* T772f104(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.pop_start_condition */
extern void T772f305(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition */
extern void T772f302(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.set_last_token */
extern void T772f304(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_eof_action */
extern void T772f300(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.terminate */
extern void T772f303(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.wrap */
extern T1 T772f98(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_refill_input_buffer */
extern void T772f299(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_null_trans_state */
extern T6 T772f97(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_previous_state */
extern T6 T772f96(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.read_token */
extern void T732f201(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_execute_action */
extern void T732f212(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.has_normalized_newline */
extern T1 T732f181(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.text_substring */
extern T0* T732f161(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER.text_count */
extern T6 T732f160(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.system_literal_text */
extern T0* T732f142(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.text_item */
extern T2 T732f195(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.normalized_newline */
extern T0* T732f101(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_set_line_column */
extern void T732f220(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.text */
extern T0* T732f75(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.pop_start_condition */
extern void T732f219(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.set_start_condition */
extern void T732f221(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.push_start_condition */
extern void T732f213(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.set_last_token */
extern void T732f218(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_execute_eof_action */
extern void T732f211(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.terminate */
extern void T732f217(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.wrap */
extern T1 T732f63(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_refill_input_buffer */
extern void T732f210(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_null_trans_state */
extern T6 T732f62(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_previous_state */
extern T6 T732f61(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.fatal_error */
extern void T732f209(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T775f298(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition_dtd_ignore */
extern void T773f205(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T772f294(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T732f203(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_encoding */
extern void T775f299(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.set_encoding */
extern void T1558f31(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_encoding */
extern void T773f206(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_encoding */
extern void T772f295(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_encoding */
extern void T732f204(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_from_resolver */
extern void T775f300(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_from_resolver */
extern void T773f207(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_from_resolver */
extern void T772f296(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T732f205(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.close_input */
extern void T775f297(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.close_input */
extern void T773f204(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.close_input */
extern void T772f293(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.close_input */
extern void T732f202(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.set_scm_read_mapping */
extern void T1463f90(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_scm_read_mapping */
extern void T564f70(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_scm_read_mapping */
extern void T286f65(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_scm_write_mapping */
extern void T1463f91(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_scm_write_mapping */
extern void T564f71(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_scm_write_mapping */
extern void T286f66(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_preparsed */
extern void T1463f97(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_preparsed */
extern void T564f78(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_preparsed */
extern void T286f68(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.add_recursive_cluster */
extern void T1463f98(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.new_recursive_cluster */
extern T0* T1463f53(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_implicit */
extern void T1463f103(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_file_rules */
extern void T1463f102(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.make_relative */
extern T0* T1463c101(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.string_ */
extern T0* T1463f52(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.add_recursive_cluster */
extern void T564f79(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.add_subcluster */
extern void T564f82(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.new_recursive_cluster */
extern T0* T564f42(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_use_obsolete_syntax */
extern void T564f84(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_implicit */
extern void T564f83(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.string_ */
extern T0* T564f41(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.add_recursive_cluster */
extern void T286f69(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.new_recursive_cluster */
extern T0* T286f41(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_use_obsolete_syntax */
extern void T286f71(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_implicit */
extern void T286f70(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.name */
extern T0* T286f22(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.string_ */
extern T0* T286f38(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.set_provider_constraint */
extern void T1463f95(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_provider_constraint */
extern void T1464f13(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_provider_constraint */
extern void T564f80(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_provider_constraint */
extern void T559f18(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_provider_constraint */
extern void T286f63(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_provider_constraint */
extern void T285f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_dependant_constraint */
extern void T1463f96(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_dependant_constraint */
extern void T1464f14(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_dependant_constraint */
extern void T564f81(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_dependant_constraint */
extern void T559f19(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_dependant_constraint */
extern void T286f64(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_dependant_constraint */
extern void T285f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.process */
extern void T1463f92(GE_context* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.process_cluster */
extern void T367f3(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.process_cluster */
extern void T357f177(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster */
extern void T357f178(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T357f178ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T357f178ac2(GE_context* ac, T0* a1);
/* [attached] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]].set_rout_disp_final */
extern void T687f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_CLASS.is_in_group */
extern T1 T95f186(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_clusters */
extern void T357f182(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.build_dependant_constraint */
extern void T357f181(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make */
extern T0* T2014c17(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].set_key_equality_tester */
extern void T2444f35(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_equality_tester */
extern T0* T2014f11(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_map */
extern T0* T2444c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_with_equality_testers */
extern void T2444f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_sparse_container */
extern void T2444f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].set_internal_cursor */
extern void T2444f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].new_cursor */
extern T0* T2444f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].make */
extern T0* T2662c9(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].unset_found_item */
extern void T2444f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_slots */
extern void T2444f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].new_modulus */
extern T6 T2444f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_clashes */
extern void T2444f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_key_storage */
extern void T2444f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_item_storage */
extern void T2444f51(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_WILDCARD].make */
extern T0* T2661f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_WILDCARD].make_empty */
extern T0* T2657c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_WILDCARD].default_create */
extern T0* T2661c2(GE_context* ac);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make_with_pathnames */
extern T0* T2014c16(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].put_last */
extern void T2444f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].key_storage_put */
extern void T2444f44(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].slots_put */
extern void T2444f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].clashes_put */
extern void T2444f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].slots_item */
extern T6 T2444f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].compress */
extern void T2444f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].hash_position */
extern T6 T2444f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].slots_wipe_out */
extern void T2444f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].clashes_wipe_out */
extern void T2444f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].key_storage_keep_head */
extern void T2444f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].item_storage_keep_head */
extern void T2444f47(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_WILDCARD].keep_head */
extern void T2657f5(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_WILDCARD].set_count */
extern void T2657f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].move_all_cursors */
extern void T2444f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].set_position */
extern void T2662f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].key_storage_item */
extern T0* T2444f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].item_storage_item */
extern T0* T2444f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].clashes_item */
extern T6 T2444f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].item_storage_put */
extern void T2444f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_WILDCARD].force */
extern void T2661f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_WILDCARD].fill_with */
extern void T2657f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_WILDCARD].extend */
extern void T2657f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].search_position */
extern void T2444f39(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.compile */
extern void T2452f16(GE_context* ac, T0* C, T0* a1, T1 a2);
/* LX_DFA_WILDCARD.compile */
extern T0* T2452c16(GE_context* ac, T0* a1, T1 a2);
/* LX_FULL_DFA.make */
extern T0* T2666c37(GE_context* ac, T0* a1);
/* LX_FULL_DFA.build */
extern void T2666f40(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_accept_table */
extern void T2666f46(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].first */
extern T0* T2723f6(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_nxt_table */
extern void T2666f45(GE_context* ac, T0* C);
/* [attached] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE].target */
extern T0* T2757f6(GE_context* ac, T0* C, T6 a1);
/* [attached] ARRAY [detachable LX_DFA_STATE].item */
extern T0* T2815f4(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.is_accepting */
extern T1 T2748f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].is_empty */
extern T1 T2723f11(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_transitions */
extern void T2666f44(GE_context* ac, T0* C, T0* a1);
/* [attached] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE].set_target */
extern void T2757f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] ARRAY [detachable LX_DFA_STATE].put */
extern void T2815f7(GE_context* ac, T0* C, T0* a1, T6 a2);
/* LX_SYMBOL_PARTITIONS.previous_symbol */
extern T6 T2752f4(GE_context* ac, T0* C, T6 a1);
/* LX_FULL_DFA.new_state */
extern T0* T2666f36(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_STATE.set_id */
extern void T2748f17(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_DFA_STATE].put_last */
extern void T2750f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE].force */
extern void T2812f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_DFA_STATE].fill_with */
extern void T2811f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_DFA_STATE].extend */
extern void T2811f8(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_STATE.is_equal */
extern T1 T2748f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].is_equal */
extern T1 T2749f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].any_ */
extern T0* T2749f17(GE_context* ac, T0* C);
/* LX_DFA_STATE.any_ */
extern T0* T2748f14(GE_context* ac, T0* C);
/* LX_DFA_STATE.new_state */
extern T0* T2748f9(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.make */
extern T0* T2748c16(GE_context* ac, T0* a1, T6 a2, T6 a3);
extern T1 T2748f16ot1(T0* a1, T0** a2);
/* LX_RULE.set_useful */
extern void T2735f22(GE_context* ac, T0* C, T1 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].sort */
extern void T2723f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BUBBLE_SORTER [[attached] LX_RULE].sort */
extern void T2802f3(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BUBBLE_SORTER [[attached] LX_RULE].sort_with_comparator */
extern void T2802f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_BUBBLE_SORTER [[attached] LX_RULE].subsort_with_comparator */
extern void T2802f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].replace */
extern void T2723f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE].less_than */
extern T1 T2838f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE].detachable_less_than */
extern T1 T2838f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE].attached_less_than */
extern T1 T2838f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* LX_RULE.is_less */
extern T1 T2735f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].item */
extern T0* T2723f10(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.rule_sorter */
extern T0* T2748f7(GE_context* ac, T0* C);
/* [attached] DS_BUBBLE_SORTER [[attached] LX_RULE].make */
extern T0* T2802c2(GE_context* ac, T0* a1);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE].make */
extern T0* T2838c4(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].sort */
extern void T2749f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE].sort */
extern void T2800f3(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE].sort_with_comparator */
extern void T2800f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE].subsort_with_comparator */
extern void T2800f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].replace */
extern void T2749f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE].less_than */
extern T1 T2841f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE].detachable_less_than */
extern T1 T2841f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE].attached_less_than */
extern T1 T2841f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* LX_NFA_STATE.is_less */
extern T1 T2761f9(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_STATE.bubble_sorter */
extern T0* T2748f8(GE_context* ac, T0* C);
/* [attached] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE].make */
extern T0* T2800c2(GE_context* ac, T0* a1);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE].make */
extern T0* T2841c4(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].last */
extern T0* T2749f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].is_empty */
extern T1 T2749f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].force_last */
extern void T2723f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_RULE].force */
extern void T2778f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_RULE].fill_with */
extern void T2747f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_RULE].extend */
extern void T2747f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].resize */
extern void T2723f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_RULE].aliased_resized_area */
extern T0* T2778f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] LX_RULE].aliased_resized_area */
extern T0* T2747f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].new_capacity */
extern T6 T2723f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].extendible */
extern T1 T2723f8(GE_context* ac, T0* C, T6 a1);
/* LX_NFA_STATE.is_accepting_head */
extern T1 T2761f6(GE_context* ac, T0* C);
/* LX_NFA_STATE.has_transition */
extern T1 T2761f8(GE_context* ac, T0* C);
/* LX_NFA_STATE.is_accepting */
extern T1 T2761f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].has */
extern T1 T2749f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].force_last */
extern void T2749f23(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE].force */
extern void T2807f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_NFA_STATE].fill_with */
extern void T2804f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_NFA_STATE].extend */
extern void T2804f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].resize */
extern void T2749f28(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE].aliased_resized_area */
extern T0* T2807f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] LX_NFA_STATE].aliased_resized_area */
extern T0* T2804f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].new_capacity */
extern T6 T2749f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].extendible */
extern T1 T2749f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].make */
extern T0* T2723c12(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].set_internal_cursor */
extern void T2723f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].new_cursor */
extern T0* T2723f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_RULE].make */
extern T0* T2779c4(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_RULE].make */
extern T0* T2778f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_RULE].make_empty */
extern void T2747f7(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_RULE].make_empty */
extern T0* T2747c7(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_RULE].default_create */
extern T0* T2778c3(GE_context* ac);
/* [attached] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE].make */
extern T0* T2757c7(GE_context* ac, T6 a1, T6 a2);
/* [attached] KL_ARRAY_ROUTINES [detachable LX_DFA_STATE].default_create */
extern T0* T2817c1(GE_context* ac);
/* [attached] ARRAY [detachable LX_DFA_STATE].make_filled */
extern T0* T2815c5(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [attached] ARRAY [detachable LX_DFA_STATE].make_filled_area */
extern void T2815f6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable LX_DFA_STATE].make_filled */
extern T0* T2816c4(GE_context* ac, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable LX_DFA_STATE].fill_with */
extern void T2816f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable LX_DFA_STATE].extend */
extern void T2816f8(GE_context* ac, T0* C, T0* a1);
/* [attached] SPECIAL [detachable LX_DFA_STATE].make_empty */
extern void T2816f5(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.maximum_symbol */
extern T6 T2748f13(GE_context* ac, T0* C);
/* [attached] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE].upper */
extern T6 T2757f5(GE_context* ac, T0* C);
/* LX_DFA_STATE.minimum_symbol */
extern T6 T2748f12(GE_context* ac, T0* C);
/* [attached] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE].lower */
extern T6 T2757f4(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].put_last */
extern void T2749f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].item */
extern T0* T2749f13(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].make */
extern T0* T2749c19(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].set_internal_cursor */
extern void T2749f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].new_cursor */
extern T0* T2749f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].make */
extern T0* T2808c9(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE].make */
extern T0* T2807f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_NFA_STATE].make_empty */
extern T0* T2804c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE].default_create */
extern T0* T2807c3(GE_context* ac);
/* LX_SYMBOL_PARTITIONS.is_representative */
extern T1 T2752f8(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.partition */
extern void T2748f18(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T2752f10(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] BOOLEAN].clear_all */
extern void T1346f8(GE_context* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T2752f10p1(GE_context* ac, T0* C);
/* [attached] DS_BILINKABLE [[attached] INTEGER_32].put_left */
extern void T2797f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKABLE [[attached] INTEGER_32].attach_right */
extern void T2797f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKABLE [[attached] INTEGER_32].put */
extern void T2797f5(GE_context* ac, T0* C, T6 a1);
/* LX_FULL_DFA.resize */
extern void T2666f49(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_DFA_STATE].resize */
extern void T2750f10(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE].aliased_resized_area */
extern T0* T2812f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] LX_DFA_STATE].aliased_resized_area */
extern T0* T2811f4(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.capacity */
extern T6 T2752f5(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]].count */
extern T6 T2796f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_DFA_STATE].item */
extern T0* T2750f7(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.make */
extern T0* T2752c9(GE_context* ac, T6 a1, T6 a2);
/* LX_SYMBOL_PARTITIONS.make */
extern void T2752f9p1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]].put */
extern void T2796f7(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]].make_filled */
extern T0* T2796c6(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [attached] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]].make_filled_area */
extern void T2796f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]].make_filled */
extern T0* T2798c4(GE_context* ac, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]].fill_with */
extern void T2798f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]].extend */
extern void T2798f8(GE_context* ac, T0* C, T0* a1);
/* [attached] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]].make_empty */
extern void T2798f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_BILINKABLE [[attached] INTEGER_32].make */
extern T0* T2797c4(GE_context* ac, T6 a1);
/* LX_FULL_DFA.put_eob_state */
extern void T2666f39(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].force_first */
extern void T2723f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].put */
extern void T2723f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].move_cursors_right */
extern void T2723f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_RULE].set_position */
extern void T2779f5(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].move_right */
extern void T2723f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].put_last */
extern void T2723f19(GE_context* ac, T0* C, T0* a1);
/* LX_RULE.make_default */
extern T0* T2735c14(GE_context* ac, T6 a1);
/* LX_RULE.dummy_action */
extern T0* T2735f11(GE_context* ac, T0* C);
/* LX_ACTION.make */
extern T0* T2795c2(GE_context* ac, T0* a1);
/* LX_RULE.dummy_pattern */
extern T0* T2735f12(GE_context* ac, T0* C);
/* LX_NFA.make_epsilon */
extern T0* T2731c12(GE_context* ac, T1 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].put_first */
extern void T2749f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].put */
extern void T2749f27(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].move_cursors_right */
extern void T2749f31(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].set_position */
extern void T2808f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].move_right */
extern void T2749f30(GE_context* ac, T0* C, T6 a1, T6 a2);
/* LX_NFA_STATE.set_transition */
extern void T2761f11(GE_context* ac, T0* C, T0* a1);
/* [attached] LX_EPSILON_TRANSITION [[attached] LX_NFA_STATE].make */
extern T0* T2790c3(GE_context* ac, T0* a1);
/* LX_NFA_STATE.make */
extern T0* T2761c10(GE_context* ac, T1 a1);
/* LX_FULL_DFA.initialize */
extern void T2666f38(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_DFA.initialize_dfa */
extern void T2666f43(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* LX_FULL_DFA.put_start_condition */
extern void T2666f48(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.start_state */
extern T0* T2731f4(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].first */
extern T0* T2749f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA].item */
extern T0* T2759f7(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.item */
extern T0* T2724f9(GE_context* ac, T0* C, T6 a1);
/* LX_FULL_DFA.set_nfa_state_ids */
extern void T2666f47(GE_context* ac, T0* C, T0* a1);
/* LX_NFA_STATE.set_id */
extern void T2761f14(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].force */
extern void T2760f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].key_storage_put */
extern void T2760f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].slots_put */
extern void T2760f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].clashes_put */
extern void T2760f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].slots_item */
extern T6 T2760f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].clashes_item */
extern T6 T2760f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].hash_position */
extern T6 T2760f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].resize */
extern void T2760f40(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].clashes_resize */
extern void T2760f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].special_integer_ */
extern T0* T2760f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].key_storage_resize */
extern void T2760f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].item_storage_resize */
extern void T2760f46(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA].aliased_resized_area */
extern T0* T2730f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] LX_NFA].aliased_resized_area */
extern T0* T2732f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].key_storage_item */
extern T6 T2760f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].slots_resize */
extern void T2760f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].new_modulus */
extern T6 T2760f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].new_capacity */
extern T6 T2760f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].item_storage_put */
extern void T2760f39(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA].force */
extern void T2730f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_NFA].fill_with */
extern void T2732f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_NFA].extend */
extern void T2732f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].search_position */
extern void T2760f36(GE_context* ac, T0* C, T6 a1);
/* attached KL_EQUALITY_TESTER [[attached] INTEGER_32].test */
extern T1 T1271f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].unset_found_item */
extern void T2760f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].item */
extern T0* T2760f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].item_storage_item */
extern T0* T2760f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].has */
extern T1 T2760f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make */
extern T0* T2760c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make_with_equality_testers */
extern void T2760f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make_sparse_container */
extern void T2760f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].set_internal_cursor */
extern void T2760f53(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].new_cursor */
extern T0* T2760f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_NFA, [attached] INTEGER_32].make */
extern T0* T2820c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make_slots */
extern void T2760f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make_clashes */
extern void T2760f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make_key_storage */
extern void T2760f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make_item_storage */
extern void T2760f49(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA].make */
extern T0* T2730f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_NFA].make_empty */
extern T0* T2732c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA].default_create */
extern T0* T2730c3(GE_context* ac);
/* attached KL_EQUALITY_TESTER [[attached] INTEGER_32].default_create */
extern T0* T1271c2(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] LX_DFA_STATE].make */
extern T0* T2750c8(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_DFA_STATE].set_internal_cursor */
extern void T2750f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_DFA_STATE].new_cursor */
extern T0* T2750f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_DFA_STATE].make */
extern T0* T2813c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE].make */
extern T0* T2812f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_DFA_STATE].make_empty */
extern T0* T2811c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE].default_create */
extern T0* T2812c3(GE_context* ac);
/* LX_EQUIVALENCE_CLASSES.to_array */
extern T0* T2737f6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.lower */
extern T6 T2737f5(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.upper */
extern T6 T2737f4(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.built */
extern T1 T2737f3(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_eof_rules */
extern void T2666f42(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] ARRAY [detachable LX_RULE].put */
extern void T2754f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] ARRAY [detachable LX_RULE].make_filled */
extern T0* T2754c4(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [attached] ARRAY [detachable LX_RULE].make_filled_area */
extern void T2754f6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable LX_RULE].make_filled */
extern T0* T2755c3(GE_context* ac, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable LX_RULE].fill_with */
extern void T2755f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable LX_RULE].extend */
extern void T2755f7(GE_context* ac, T0* C, T0* a1);
/* [attached] SPECIAL [detachable LX_RULE].make_empty */
extern void T2755f5(GE_context* ac, T0* C, T6 a1);
/* LX_FULL_DFA.build_rules */
extern void T2666f41(GE_context* ac, T0* C, T0* a1);
/* [attached] ARRAY [[attached] LX_RULE].put */
extern void T2746f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] ARRAY [[attached] LX_RULE].make_filled */
extern T0* T2746c4(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [attached] ARRAY [[attached] LX_RULE].make_filled_area */
extern void T2746f6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] LX_RULE].make_filled */
extern T0* T2747c5(GE_context* ac, T0* a1, T6 a2);
/* [attached] KL_ARRAY_ROUTINES [[attached] LX_RULE].make_empty_with_lower */
extern T0* T2753f1(GE_context* ac, T0* C, T6 a1);
/* [attached] ARRAY [[attached] LX_RULE].make_from_array */
extern T0* T2746c8(GE_context* ac, T0* a1);
/* [attached] ARRAY [[attached] LX_RULE].set_area */
extern void T2746f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_ARRAY [[attached] LX_RULE].new_rebase */
extern void T2814f5(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_ARRAY [[attached] LX_RULE].make_empty */
extern T0* T2814c4(GE_context* ac);
/* [attached] KL_ARRAY [[attached] LX_RULE].make_empty_area */
extern void T2814f6(GE_context* ac, T0* C, T6 a1);
/* [attached] ARRAY [[attached] LX_RULE].make_empty */
extern T0* T2746c7(GE_context* ac);
/* [attached] ARRAY [[attached] LX_RULE].make_empty_area */
extern void T2746f9(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_ARRAY_ROUTINES [[attached] LX_RULE].default_create */
extern T0* T2753c2(GE_context* ac);
/* LX_START_CONDITIONS.names */
extern T0* T2724f7(GE_context* ac, T0* C);
/* LX_START_CONDITIONS.first */
extern T0* T2724f6(GE_context* ac, T0* C);
/* [attached] KL_ARRAY_ROUTINES [[attached] STRING_8].make_empty_with_lower */
extern T0* T2780f1(GE_context* ac, T0* C, T6 a1);
/* [attached] ARRAY [[attached] STRING_8].make_from_array */
extern T0* T449c11(GE_context* ac, T0* a1);
/* [attached] ARRAY [[attached] STRING_8].set_area */
extern void T449f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_ARRAY [[attached] STRING_8].new_rebase */
extern void T2844f5(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_ARRAY [[attached] STRING_8].make_empty */
extern T0* T2844c4(GE_context* ac);
/* [attached] KL_ARRAY [[attached] STRING_8].make_empty_area */
extern void T2844f6(GE_context* ac, T0* C, T6 a1);
/* [attached] ARRAY [[attached] STRING_8].make_empty */
extern T0* T449c10(GE_context* ac);
/* [attached] ARRAY [[attached] STRING_8].make_empty_area */
extern void T449f12(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.string_array_routines */
extern T0* T2724f11(GE_context* ac, T0* C);
/* [attached] KL_ARRAY_ROUTINES [[attached] STRING_8].default_create */
extern T0* T2780c2(GE_context* ac);
/* LX_WILDCARD_PARSER.parse_string */
extern void T2664f222(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.parse */
extern void T2664f226(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_pop_last_value */
extern void T2664f239(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_push_error_value */
extern void T2664f238(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_do_action */
extern void T2664f237(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_character_to_string */
extern T0* T2664f172(GE_context* ac, T0* C, T6 a1, T0* a2);
/* LX_WILDCARD_PARSER.new_symbol_nfa */
extern T0* T2664f217(GE_context* ac, T0* C, T6 a1);
/* LX_NFA.make_symbol */
extern T0* T2731c13(GE_context* ac, T6 a1, T1 a2);
/* [attached] LX_SYMBOL_TRANSITION [[attached] LX_NFA_STATE].make */
extern T0* T2793c4(GE_context* ac, T6 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].force_new */
extern void T2727f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].key_storage_put */
extern void T2727f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].item_storage_put */
extern void T2727f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].slots_put */
extern void T2727f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].clashes_put */
extern void T2727f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].slots_item */
extern T6 T2727f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].hash_position */
extern T6 T2727f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].clashes_item */
extern T6 T2727f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].resize */
extern void T2727f49(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].clashes_resize */
extern void T2727f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].special_integer_ */
extern T0* T2727f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].key_storage_resize */
extern void T2727f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].item_storage_resize */
extern void T2727f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].key_storage_item */
extern T0* T2727f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].slots_resize */
extern void T2727f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].new_modulus */
extern T6 T2727f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].new_capacity */
extern T6 T2727f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].unset_found_item */
extern void T2727f47(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.add */
extern void T2737f11(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.put */
extern void T2726f19(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.force_last */
extern void T2726f22(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.resize */
extern void T2726f23(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.new_capacity */
extern T6 T2726f13(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.extendible */
extern T1 T2726f11(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.last */
extern T6 T2726f12(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.is_empty */
extern T1 T2726f10(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.has */
extern T1 T2726f9(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.arrayed_has */
extern T1 T2726f15(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.make */
extern T0* T2726c18(GE_context* ac, T6 a1);
/* LX_SYMBOL_CLASS.set_internal_cursor */
extern void T2726f21(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.new_cursor */
extern T0* T2726f16(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].found_item */
extern T0* T2727f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].item_storage_item */
extern T0* T2727f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].found */
extern T1 T2727f23(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].search */
extern void T2727f43(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].search_position */
extern void T2727f45(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_epsilon_nfa */
extern T0* T2664f171(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.append_character_set_to_character_class */
extern T0* T2664f170(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.report_negative_range_in_character_class_error */
extern void T2664f272(GE_context* ac, T0* C);
/* UT_ERROR_HANDLER.report_error */
extern void T159f7(GE_context* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error_message */
extern void T159f8(GE_context* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.message */
extern T0* T159f5(GE_context* ac, T0* C, T0* a1);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.make */
extern T0* T2777c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.filename */
extern T0* T2664f190(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T2728f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T2729f4(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_character_to_character_class */
extern T0* T2664f169(GE_context* ac, T0* C, T6 a1, T0* a2);
/* LX_WILDCARD_PARSER.new_character_class */
extern T0* T2664f168(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.set_negated */
extern void T2726f20(GE_context* ac, T0* C, T1 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS].force */
extern void T2728f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_SYMBOL_CLASS].fill_with */
extern void T2729f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_SYMBOL_CLASS].extend */
extern void T2729f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].force */
extern void T2727f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* LX_WILDCARD_PARSER.new_nfa_from_character_class */
extern T0* T2664f167(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.sort */
extern void T2726f24(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.arrayed_sort */
extern void T2726f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_SHELL_SORTER [[attached] INTEGER_32].sort */
extern void T2836f3(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_SHELL_SORTER [[attached] INTEGER_32].sort_with_comparator */
extern void T2836f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_SHELL_SORTER [[attached] INTEGER_32].subsort_with_comparator */
extern void T2836f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* LX_SYMBOL_CLASS.replace */
extern void T2726f27(GE_context* ac, T0* C, T6 a1, T6 a2);
/* LX_SYMBOL_CLASS.sorter */
extern T0* T2726f17(GE_context* ac, T0* C);
/* [attached] DS_SHELL_SORTER [[attached] INTEGER_32].make */
extern T0* T2836c2(GE_context* ac, T0* a1);
/* LX_WILDCARD_PARSER.new_symbol_class_nfa */
extern T0* T2664f165(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.make_symbol_class */
extern T0* T2731c6(GE_context* ac, T0* a1, T1 a2);
/* [attached] LX_SYMBOL_CLASS_TRANSITION [[attached] LX_NFA_STATE].make */
extern T0* T2788c4(GE_context* ac, T0* a1, T0* a2);
/* LX_WILDCARD_PARSER.question_character_class */
extern T0* T2664f164(GE_context* ac, T0* C);
/* LX_NFA.build_optional */
extern void T2731f11(GE_context* ac, T0* C);
/* LX_NFA_STATE.set_epsilon_transition */
extern void T2761f12(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.final_state */
extern T0* T2731f5(GE_context* ac, T0* C);
/* LX_NFA.build_positive_closure */
extern void T2731f10(GE_context* ac, T0* C);
/* LX_NFA.build_closure */
extern void T2731f9(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.new_nfa_from_character */
extern T0* T2664f163(GE_context* ac, T0* C, T6 a1);
/* LX_NFA.build_concatenation */
extern void T2731f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].append_last */
extern void T2749f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].extend_last */
extern void T2749f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].forth */
extern void T2808f12(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].cursor_forth */
extern void T2749f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].add_traversing_cursor */
extern void T2749f34(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].set_next_cursor */
extern void T2808f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].remove_traversing_cursor */
extern void T2749f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].item */
extern T0* T2808f4(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].cursor_item */
extern T0* T2749f15(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].after */
extern T1 T2808f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].start */
extern void T2808f11(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].cursor_start */
extern void T2749f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].set_after */
extern void T2808f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].off */
extern T1 T2808f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].before */
extern T1 T2808f8(GE_context* ac, T0* C);
/* LX_NFA.build_union */
extern void T2731f7(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.report_unrecognized_rule_error */
extern void T2664f252(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.make */
extern T0* T2738c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_rule */
extern void T2664f251(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.add_nfa_to_all */
extern void T2724f13(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITION.put_nfa */
extern void T2756f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA].force_last */
extern void T2759f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA].resize */
extern void T2759f13(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA].new_capacity */
extern T6 T2759f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA].extendible */
extern T1 T2759f8(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.add_nfa_to_non_exclusive */
extern void T2724f15(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.is_empty */
extern T1 T2724f8(GE_context* ac, T0* C);
/* LX_DESCRIPTION.set_variable_trail_context */
extern void T2665f35(GE_context* ac, T0* C, T1 a1);
/* LX_RULE.set_column_count */
extern void T2735f21(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_line_count */
extern void T2735f20(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_trail_count */
extern void T2735f19(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_head_count */
extern void T2735f18(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_trail_context */
extern void T2735f17(GE_context* ac, T0* C, T1 a1);
/* LX_RULE.set_line_nb */
extern void T2735f16(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_pattern */
extern void T2735f15(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.set_accepted_rule */
extern void T2731f14(GE_context* ac, T0* C, T0* a1);
/* LX_NFA_STATE.set_accepted_rule */
extern void T2761f13(GE_context* ac, T0* C, T0* a1);
/* LX_DESCRIPTION.create_equiv_classes */
extern void T2665f34(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.make */
extern T0* T2737c9(GE_context* ac, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.initialize */
extern void T2737f12(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.check_options */
extern void T2664f250(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.report_full_and_variable_trailing_context_error */
extern void T2664f265(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.make */
extern T0* T2744c8(GE_context* ac);
/* LX_WILDCARD_PARSER.report_full_and_reject_error */
extern void T2664f264(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.make */
extern T0* T2743c8(GE_context* ac);
/* LX_WILDCARD_PARSER.report_full_and_meta_equiv_classes_error */
extern void T2664f263(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.make */
extern T0* T2742c8(GE_context* ac);
/* LX_WILDCARD_PARSER.build_equiv_classes */
extern void T2664f249(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].forth */
extern void T2736f11(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].cursor_forth */
extern void T2727f64(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].add_traversing_cursor */
extern void T2727f66(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].set_next_cursor */
extern void T2736f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].set_position */
extern void T2736f13(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].remove_traversing_cursor */
extern void T2727f65(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].set_after */
extern void T2736f12(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.convert_to_equivalence */
extern void T2726f26(GE_context* ac, T0* C, T0* a1);
/* LX_EQUIVALENCE_CLASSES.equivalence_class */
extern T6 T2737f8(GE_context* ac, T0* C, T6 a1);
/* LX_EQUIVALENCE_CLASSES.is_representative */
extern T1 T2737f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].item */
extern T0* T2736f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].cursor_item */
extern T0* T2727f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].after */
extern T1 T2736f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].start */
extern void T2736f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].cursor_start */
extern void T2727f63(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].cursor_off */
extern T1 T2727f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].off */
extern T1 T2736f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].is_empty */
extern T1 T2727f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].new_cursor */
extern T0* T2727f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make */
extern T0* T2736c9(GE_context* ac, T0* a1);
/* LX_EQUIVALENCE_CLASSES.build */
extern void T2737f10(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_push_last_value */
extern void T2664f236(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.accept */
extern void T2664f235(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_do_error_action */
extern void T2664f233(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_error */
extern void T2664f248(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.report_eof_expected_error */
extern void T2664f247(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.read_token */
extern void T2664f232(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_execute_action */
extern void T2664f246(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_bad_character_error */
extern void T2664f262(GE_context* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.make */
extern T0* T2741c8(GE_context* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.report_bad_character_class_error */
extern void T2664f261(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.make */
extern T0* T2740c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.start_condition */
extern T6 T2664f185(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.process_escaped_character */
extern void T2664f260(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.text_count */
extern T6 T2664f206(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.report_missing_quote_error */
extern void T2664f259(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.make */
extern T0* T2739c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_character */
extern void T2664f258(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_character_out_of_range_error */
extern void T2664f268(GE_context* ac, T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.make */
extern T0* T2745c8(GE_context* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.text_item */
extern T2 T2664f182(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.less */
extern void T2664f257(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_set_line_column */
extern void T2664f267(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].item */
extern T0* T2727f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].has */
extern T1 T2727f27(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.text */
extern T0* T2664f176(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.set_start_condition */
extern void T2664f256(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_execute_eof_action */
extern void T2664f245(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.terminate */
extern void T2664f255(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.wrap */
extern T1 T2664f149(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_refill_input_buffer */
extern void T2664f244(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_set_content */
extern void T2664f242(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_null_trans_state */
extern T6 T2664f148(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_previous_state */
extern T6 T2664f147(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.fatal_error */
extern void T2664f243(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.std */
extern T0* T2664f173(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.special_integer_ */
extern T0* T2664f129(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_init_value_stacks */
extern void T2664f231(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_clear_all */
extern void T2664f240(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.clear_all */
extern void T2664f253(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.clear_stacks */
extern void T2664f266(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_clear_value_stacks */
extern void T2664f269(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] LX_NFA].keep_head */
extern void T2732f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_NFA].set_count */
extern void T2732f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_SYMBOL_CLASS].keep_head */
extern void T2729f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_SYMBOL_CLASS].set_count */
extern void T2729f9(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.abort */
extern void T2664f234(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.set_input_buffer */
extern void T2664f225(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_load_input_buffer */
extern void T2664f230(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.new_string_buffer */
extern T0* T2664f131(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.make_from_description */
extern T0* T2664c221(GE_context* ac, T0* a1, T0* a2);
/* LX_ACTION_FACTORY.make */
extern T0* T2725c1(GE_context* ac);
/* LX_START_CONDITIONS.make */
extern void T2724f12(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.make */
extern T0* T2724c12(GE_context* ac, T6 a1);
/* LX_START_CONDITIONS.set_internal_cursor */
extern void T2724f16(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.new_cursor */
extern T0* T2724f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_START_CONDITION].make */
extern T0* T2783c4(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_START_CONDITION].make */
extern T0* T2782f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_START_CONDITION].make_empty */
extern T0* T2781c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_START_CONDITION].default_create */
extern T0* T2782c2(GE_context* ac);
/* LX_WILDCARD_PARSER.make_parser_skeleton */
extern void T2664f224(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_build_parser_tables */
extern void T2664f229(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yycheck_template */
extern T0* T2664f160(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yyfixed_array */
extern T0* T2664f211(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yytable_template */
extern T0* T2664f158(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yypgoto_template */
extern T0* T2664f157(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yypact_template */
extern T0* T2664f156(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yydefgoto_template */
extern T0* T2664f155(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yydefact_template */
extern T0* T2664f154(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytypes2_template */
extern T0* T2664f153(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytypes1_template */
extern T0* T2664f144(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yyr1_template */
extern T0* T2664f142(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template */
extern T0* T2664f140(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template_2 */
extern void T2664f271(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yyarray_subcopy */
extern void T2664f275(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* LX_WILDCARD_PARSER.integer_array_ */
extern T0* T2664f220(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template_1 */
extern void T2664f270(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_create_value_stacks */
extern void T2664f228(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS].make */
extern T0* T2728f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_SYMBOL_CLASS].make_empty */
extern T0* T2729c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS].default_create */
extern T0* T2728c3(GE_context* ac);
/* LX_WILDCARD_PARSER.make_lex_scanner_from_description */
extern void T2664f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].set_key_equality_tester */
extern void T2727f41(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_map */
extern T0* T2727c40(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_with_equality_testers */
extern void T2727f46(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_sparse_container */
extern void T2727f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].set_internal_cursor */
extern void T2727f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_slots */
extern void T2727f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_clashes */
extern void T2727f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_key_storage */
extern void T2727f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_item_storage */
extern void T2727f58(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.string_equality_tester */
extern T0* T2664f117(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.make_with_buffer */
extern void T2664f227(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_initialize */
extern void T2664f241(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_initialize */
extern void T2664f241p1(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_build_tables */
extern void T2664f254(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_accept_template */
extern T0* T2664f198(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_fixed_array */
extern T0* T2664f219(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_meta_template */
extern T0* T2664f197(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_ec_template */
extern T0* T2664f196(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_ec_template_2 */
extern void T2664f274(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_array_subcopy */
extern void T2664f276(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* LX_WILDCARD_PARSER.yy_ec_template_1 */
extern void T2664f273(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_def_template */
extern T0* T2664f195(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_base_template */
extern T0* T2664f194(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_chk_template */
extern T0* T2664f193(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_nxt_template */
extern T0* T2664f192(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.empty_buffer */
extern T0* T2664f119(GE_context* ac, T0* C);
/* LX_DESCRIPTION.set_case_insensitive */
extern void T2665f33(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_full_table */
extern void T2665f32(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_meta_equiv_classes_used */
extern void T2665f31(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_equiv_classes_used */
extern void T2665f30(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.make */
extern T0* T2665c29(GE_context* ac);
/* LX_START_CONDITIONS.make_with_initial */
extern T0* T2724c14(GE_context* ac, T6 a1);
/* LX_START_CONDITIONS.put_first */
extern void T2724f17(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.put */
extern void T2724f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* LX_START_CONDITIONS.move_cursors_right */
extern void T2724f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_START_CONDITION].set_position */
extern void T2783f5(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.move_right */
extern void T2724f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_START_CONDITION].force */
extern void T2782f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_START_CONDITION].fill_with */
extern void T2781f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_START_CONDITION].extend */
extern void T2781f7(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.put_last */
extern void T2724f19(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITION.make */
extern T0* T2756c6(GE_context* ac, T0* a1, T6 a2, T1 a3);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA].make */
extern T0* T2759c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA].set_internal_cursor */
extern void T2759f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA].new_cursor */
extern T0* T2759f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA].make */
extern T0* T2818c3(GE_context* ac, T0* a1);
/* UT_ERROR_HANDLER.make_null */
extern T0* T159c6(GE_context* ac);
/* UT_ERROR_HANDLER.null_output_stream */
extern T0* T159f4(GE_context* ac, T0* C);
/* LX_DFA_WILDCARD.wipe_out */
extern void T2452f17(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.replace_backslashes */
extern void T2014f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.file_system */
extern T0* T2014f13(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.unix_file_system */
extern T0* T2014f15(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.windows_file_system */
extern T0* T2014f14(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.execution_environment */
extern T0* T2014f12(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.operating_system */
extern T0* T2014f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].remove */
extern void T171f39(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].move_left */
extern void T171f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].move_cursors_left */
extern void T171f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].remove_last */
extern void T171f41(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].move_last_cursors_after */
extern void T171f44(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.current_system */
extern T0* T357f60(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].make_from_linear */
extern T0* T171c38(GE_context* ac, T0* a1);
/* ST_SPLITTER.split */
extern T0* T2012f6(GE_context* ac, T0* C, T0* a1);
/* ST_SPLITTER.do_split */
extern T0* T2012f8(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ST_SPLITTER.string_ */
extern T0* T2012f5(GE_context* ac, T0* C);
/* ST_SPLITTER.set_separators */
extern void T2012f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].put */
extern void T1395f78(GE_context* ac, T0* C, T6 a1);
/* ST_SPLITTER.make */
extern T0* T2012c9(GE_context* ac);
/* KL_TEXT_INPUT_FILE.read_string */
extern void T33f77(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_read_to_string */
extern T6 T33f36(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.file_gss */
extern T6 T33f44(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* SPECIAL [CHARACTER_8].item_address */
extern T14 T15f9(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_end_of_file */
extern T1 T33f25(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_feof */
extern T1 T33f31(GE_context* ac, T0* C, T14 a1);
/* ET_EIFFEL_PREPARSER.build_provider_constraint */
extern void T357f180(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PREPARSER.build_provider_constraint */
extern T0* T357f180ac1(GE_context* ac, T0* a1, T0* a2);
extern T1 T357f180ot1(T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_UNIVERSE]].set_rout_disp_final */
extern void T663f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_EIFFEL_PREPARSER.add_universe_full_name */
extern void T357f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gcaaa_error */
extern void T53f342(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_cluster_error */
extern void T53f335(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_ERROR.make_gcaaa */
extern T0* T2372c24(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T53f92(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaaa_error */
extern void T36f341(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_cluster_error */
extern void T36f334(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T36f91(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.directory_exists */
extern T1 T147f28(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.exists */
extern T1 T451f29(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.tmp_directory */
extern T0* T147f30(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.directory_exists */
extern T1 T146f31(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_directory */
extern T0* T146f33(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.preparse_file */
extern void T357f179(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gcaab_error */
extern void T53f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaab */
extern T0* T2372c23(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T53f29(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaab_error */
extern void T36f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T36f28(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.reset */
extern void T357f185(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_end_of_file */
extern void T271f27(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T357f185p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T357f185p0(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T357f185p2(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_syntax_error */
extern void T53f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.make */
extern T0* T2373c18(GE_context* ac, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.set_compilers */
extern void T2373f19(GE_context* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_syntax_error */
extern void T36f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.current_position */
extern T0* T357f59(GE_context* ac, T0* C);
/* ET_FILE_POSITION.make */
extern T0* T1716c12(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ET_FILE_POSITION.make_compressed_position */
extern void T1716f13(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.set_position */
extern void T1716f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.read_token */
extern void T357f184(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_action */
extern void T357f190(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_silu_error */
extern void T53f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_silu_error */
extern void T36f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sifu_error */
extern void T53f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sifu_error */
extern void T36f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnp_error */
extern void T53f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnp_error */
extern void T36f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnl_error */
extern void T53f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnl_error */
extern void T36f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sssc_error */
extern void T53f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sssc_error */
extern void T36f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.more */
extern void T357f196(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.is_verbatim_string_closer */
extern T1 T357f109(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.text_item */
extern T2 T357f132(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.report_syntax_error */
extern void T357f191(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.set_start_condition */
extern void T357f194(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.text_substring */
extern T0* T357f106(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].force_new */
extern void T2022f38(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].resize */
extern void T2022f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].clashes_resize */
extern void T2022f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].special_integer_ */
extern T0* T2022f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].key_storage_resize */
extern void T2022f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].item_storage_resize */
extern void T2022f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].slots_resize */
extern void T2022f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].new_capacity */
extern T6 T2022f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].found_key */
extern T0* T2022f26(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.strings */
extern T0* T357f131(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.string_equality_tester */
extern T0* T357f133(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.append_text_substring_to_string */
extern void T357f197(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.append_substring_to_string */
extern void T1569f14(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.any_ */
extern T0* T1569f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.string_ */
extern T0* T357f130(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.string_buffer */
extern T0* T357f129(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_sceq_error */
extern void T53f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sceq_error */
extern void T36f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scqq_error */
extern void T53f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scqq_error */
extern void T36f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scac_error */
extern void T53f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scac_error */
extern void T36f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scas_error */
extern void T53f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scas_error */
extern void T36f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.set_syntax_error */
extern void T357f193(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.text_count */
extern T6 T357f104(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_reference_keyword */
extern T1 T357f103(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_note_keyword */
extern T1 T357f102(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_detachable_keyword */
extern T1 T357f101(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_attribute_keyword */
extern T1 T357f100(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_identifier */
extern T0* T369f65(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.last_identifier */
extern T0* T357f128(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].replace_found_item */
extern void T2022f42(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.last_identifier */
extern T0* T359f960(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.strings */
extern T0* T359f944(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.string_equality_tester */
extern T0* T359f952(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.append_text_substring_to_string */
extern void T359f2155(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PARSER.string_ */
extern T0* T359f943(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.string_buffer */
extern T0* T359f942(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.ast_factory */
extern T0* T357f99(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_attached_keyword */
extern T1 T357f95(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_line_column */
extern void T357f195(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_eof_action */
extern void T357f189(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_sseq_error */
extern void T53f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sseq_error */
extern void T36f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.terminate */
extern void T357f192(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.wrap */
extern T1 T357f87(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_refill_input_buffer */
extern void T357f188(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_null_trans_state */
extern T6 T357f86(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_previous_state */
extern T6 T357f85(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.fatal_error */
extern void T357f187(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_file */
extern T0* T357f56(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.shared_file */
extern T0* T357f126(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.preparse_class */
extern void T357f183(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MASTER_CLASS.add_last_local_class */
extern void T672f70(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_non_override_class */
extern void T672f84(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_override_class */
extern void T672f83(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_ignored_class */
extern void T672f82(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_time_stamp */
extern void T95f274(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.set_filename */
extern void T95f254(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.same_pathnames */
extern T1 T147f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_PATHNAME.same_pathname */
extern T1 T603f14(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.is_subpathname */
extern T1 T603f16(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.string_ */
extern T0* T603f18(GE_context* ac, T0* C);
/* KL_PATHNAME.string_equality_tester */
extern T0* T603f19(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.same_pathnames */
extern T1 T146f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_PATHNAME.same_case_insensitive */
extern T1 T603f13(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.is_case_insensitive_subpathname */
extern T1 T603f15(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.case_insensitive_string_equality_tester */
extern T0* T603f17(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_classes_do_if */
extern void T672f86(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_ignored_classes_do_if */
extern void T672f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].do_if */
extern void T365f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_non_override_classes_do_if */
extern void T672f88(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_override_classes_do_if */
extern void T672f87(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.current_universe */
extern T0* T357f55(GE_context* ac, T0* C);
/* [attached] DS_CELL [detachable ET_CLASS].put */
extern void T2009f3(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_CELL [detachable ET_CLASS].make */
extern T0* T2009c2(GE_context* ac, T0* a1);
/* KL_DIRECTORY.reset */
extern void T451f42(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_directory */
extern T0* T357f54(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.shared_directory */
extern T0* T357f124(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.file_system */
extern T0* T357f53(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.unix_file_system */
extern T0* T357f123(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.windows_file_system */
extern T0* T357f122(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.operating_system */
extern T0* T357f121(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.execution_environment */
extern T0* T357f52(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_preparsing_status */
extern void T53f341(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_preparsing_status */
extern void T36f340(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.error_handler */
extern T0* T357f98(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.process */
extern void T564f72(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.process */
extern void T286f67(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.consume */
extern void T649f168(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assembly */
extern void T371f6(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gaaaa_error */
extern void T53f307(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_assembly_error */
extern void T53f336(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.make_gaaaa */
extern T0* T2374c14(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T53f70(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gaaaa_error */
extern void T36f306(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_assembly_error */
extern void T36f335(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T36f69(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.error_handler */
extern T0* T371f2(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.consume */
extern void T311f190(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_gac_assembly */
extern void T371f7(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.consume */
extern void T290f176(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.consume */
extern void T265f168(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.preparse */
extern void T649f169(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.preparse */
extern void T311f191(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.preparse */
extern void T290f177(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.preparse */
extern void T265f169(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.import_classes */
extern void T649f170(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_kernel_class */
extern void T649f182(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_imported_class */
extern void T672f85(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_imported_class */
extern T1 T672f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].has */
extern T1 T1796f13(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.is_declared_locally */
extern T1 T672f31(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T649f181(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.native_array_class_name */
extern T0* T94f764(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.import_classes */
extern void T311f192(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.import_kernel_class */
extern void T311f204(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.import_kernel_classes */
extern void T311f203(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.import_classes */
extern void T290f178(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.import_kernel_class */
extern void T290f190(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T290f189(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.import_classes */
extern void T265f170(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.import_kernel_class */
extern void T265f182(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T265f181(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T649f171(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T649f171ac1(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T652f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_DOTNET_ASSEMBLIES.do_all */
extern void T648f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].item */
extern T0* T1792f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].force_last */
extern void T694f41(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].slots_put */
extern void T694f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].clashes_put */
extern void T694f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].slots_item */
extern T6 T694f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].hash_position */
extern T6 T694f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].resize */
extern void T694f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].clashes_resize */
extern void T694f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].special_integer_ */
extern T0* T694f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].key_storage_resize */
extern void T694f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].item_storage_resize */
extern void T694f59(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE].aliased_resized_area */
extern T0* T1812f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_UNIVERSE].aliased_resized_area */
extern T0* T1809f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].key_storage_item */
extern T0* T694f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].item_storage_item */
extern T0* T694f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].clashes_item */
extern T6 T694f17(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].slots_resize */
extern void T694f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].new_modulus */
extern T6 T694f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].new_capacity */
extern T6 T694f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].item_storage_put */
extern void T694f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE].force */
extern void T1812f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_UNIVERSE].fill_with */
extern void T1809f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_UNIVERSE].extend */
extern void T1809f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].search_position */
extern void T694f42(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].key_equality_tester */
extern T0* T694f25(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].unset_found_item */
extern void T694f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].has */
extern T1 T694f24(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.add_universe_recursive */
extern void T311f193(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.add_universe_recursive */
extern T0* T311f193ac1(GE_context* ac, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T290f179(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T290f179ac1(GE_context* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T265f171(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T265f171ac1(GE_context* ac, T0* a1);
/* ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T649f172(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T649f172ac1(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].force_last */
extern void T647f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].slots_put */
extern void T647f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].clashes_put */
extern void T647f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].slots_item */
extern T6 T647f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].hash_position */
extern T6 T647f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].resize */
extern void T647f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].clashes_resize */
extern void T647f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].special_integer_ */
extern T0* T647f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].key_storage_resize */
extern void T647f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].item_storage_resize */
extern void T647f45(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1788f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1789f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].key_storage_item */
extern T0* T647f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].item_storage_item */
extern T0* T647f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].clashes_item */
extern T6 T647f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].slots_resize */
extern void T647f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].new_modulus */
extern T6 T647f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T647f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].item_storage_put */
extern void T647f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY].force */
extern void T1788f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DOTNET_ASSEMBLY].fill_with */
extern void T1789f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DOTNET_ASSEMBLY].extend */
extern void T1789f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].search_position */
extern void T647f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].key_equality_tester */
extern T0* T647f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].unset_found_item */
extern void T647f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].has */
extern T1 T647f29(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T311f194(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T311f194ac1(GE_context* ac, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T290f180(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T290f180ac1(GE_context* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T265f172(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T265f172ac1(GE_context* ac, T0* a1);
/* ET_LIBRARY.dotnet_assemblies_do_if */
extern void T659f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_if */
extern void T264f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.dotnet_assemblies_do_if */
extern void T283f252(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.dotnet_assemblies_do_if */
extern void T236f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.dotnet_assemblies_do_if */
extern void T197f262(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.dotnet_assemblies_do_if */
extern void T69f263(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.clusters_do_explicit */
extern void T659f184(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTERS.do_explicit */
extern void T791f5(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].item */
extern T0* T1849f7(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.clusters_do_explicit */
extern void T283f253(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.do_explicit */
extern void T285f11(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.do_recursive */
extern void T285f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.clusters_do_explicit */
extern void T236f210(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.clusters_do_explicit */
extern void T197f263(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.do_explicit */
extern void T559f15(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.do_recursive */
extern void T559f16(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.clusters_do_explicit */
extern void T69f264(GE_context* ac, T0* C, T0* a1);
/* ET_ALIASED_FEATURE_NAME.reset */
extern void T1728f8(GE_context* ac, T0* C);
/* ET_CLASS_ASSERTION.reset */
extern void T2091f9(GE_context* ac, T0* C);
/* ET_TAGGED_ASSERTION.reset */
extern void T1718f9(GE_context* ac, T0* C);
/* ET_CLASS_ASSERTION.process */
extern void T2091f10(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_class_assertion */
extern void T1235f109(GE_context* ac, T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.process */
extern void T1718f10(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_tagged_assertion */
extern void T1235f107(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_type */
extern void T2047f50(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.set_type */
extern void T2046f54(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_type */
extern void T1532f49(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T2149f13(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.reset */
extern void T2056f78(GE_context* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.process */
extern void T2149f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_typed_open_argument */
extern void T1235f110(GE_context* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.process */
extern void T2056f76(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_question_mark_symbol */
extern void T1235f108(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.reset */
extern void T2493f7(GE_context* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.reset */
extern void T2147f10(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.process */
extern void T2493f8(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_implicit_current_target */
extern void T1235f102(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_OPEN_TARGET.process */
extern void T2147f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_open_target */
extern void T1235f96(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.set_index */
extern void T2686f26(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.set_index */
extern void T2685f26(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.set_index */
extern void T2684f21(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.set_index */
extern void T2622f6(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.set_index */
extern void T2493f9(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.set_index */
extern void T2489f18(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.set_index */
extern void T2149f12(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_OPEN_TARGET.set_index */
extern void T2147f12(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_index */
extern void T2146f48(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_index */
extern void T2145f56(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_index */
extern void T2144f51(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_index */
extern void T2142f49(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_index */
extern void T2141f57(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_index */
extern void T2140f52(GE_context* ac, T0* C, T6 a1);
/* ET_CALL_AGENT.set_index */
extern void T2139f37(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.set_index */
extern void T2137f35(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.set_index */
extern void T2136f29(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.set_index */
extern void T2135f25(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.set_index */
extern void T2134f30(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.set_index */
extern void T2128f30(GE_context* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.set_index */
extern void T2127f26(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.set_index */
extern void T2123f31(GE_context* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.set_index */
extern void T2122f35(GE_context* ac, T0* C, T6 a1);
/* ET_IF_EXPRESSION.set_index */
extern void T2111f31(GE_context* ac, T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.set_index */
extern void T2056f77(GE_context* ac, T0* C, T6 a1);
/* ET_PARENTHESIS_EXPRESSION.set_index */
extern void T1528f11(GE_context* ac, T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.set_index */
extern void T444f29(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_index */
extern void T396f28(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T2146f40(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T2145f46(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T2144f42(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T2142f41(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T2141f47(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T2140f43(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.set_arguments */
extern void T2139f36(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_SYMBOL.set_seed */
extern void T2615f42(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_OR_ELSE_OPERATOR.set_seed */
extern void T2132f35(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_AND_THEN_OPERATOR.set_seed */
extern void T2130f35(GE_context* ac, T0* C, T6 a1);
/* ET_KEYWORD_OPERATOR.set_seed */
extern void T2057f56(GE_context* ac, T0* C, T6 a1);
/* ET_SYMBOL_OPERATOR.set_seed */
extern void T2054f101(GE_context* ac, T0* C, T6 a1);
/* ET_FREE_OPERATOR.set_seed */
extern void T2044f54(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_SYMBOL.set_seed */
extern void T846f106(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_feature */
extern void T2152f107(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_feature */
extern void T2082f105(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_feature */
extern void T2081f100(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_feature */
extern void T2080f107(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_feature */
extern void T2079f104(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_feature */
extern void T596f105(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_feature */
extern void T592f108(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_feature */
extern void T496f99(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_feature */
extern void T494f106(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_feature */
extern void T492f103(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_implementation_feature */
extern void T454f109(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_feature */
extern void T344f117(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_class */
extern void T2152f108(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_class */
extern void T2082f106(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_class */
extern void T2081f101(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_class */
extern void T2080f108(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_class */
extern void T2079f105(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_class */
extern void T596f106(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_class */
extern void T592f109(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_class */
extern void T496f100(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_class */
extern void T494f107(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_class */
extern void T492f104(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_implementation_class */
extern void T454f110(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_class */
extern void T344f118(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_preconditions */
extern void T2152f105(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_preconditions */
extern void T2082f103(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_preconditions */
extern void T2081f98(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_preconditions */
extern void T2080f105(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_preconditions */
extern void T2079f102(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_preconditions */
extern void T596f103(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_preconditions */
extern void T592f106(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_preconditions */
extern void T496f97(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_preconditions */
extern void T494f104(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_preconditions */
extern void T492f101(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_preconditions */
extern void T454f107(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_preconditions */
extern void T344f115(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_postconditions */
extern void T2152f106(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_postconditions */
extern void T2082f104(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_postconditions */
extern void T2081f99(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_postconditions */
extern void T2080f106(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_postconditions */
extern void T2079f103(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_postconditions */
extern void T596f104(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_postconditions */
extern void T592f107(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_postconditions */
extern void T496f98(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_postconditions */
extern void T494f105(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_postconditions */
extern void T492f102(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_postconditions */
extern void T454f108(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_postconditions */
extern void T344f116(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_first_precursor */
extern void T2152f109(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_first_precursor */
extern void T2082f107(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_first_precursor */
extern void T2081f102(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_first_precursor */
extern void T2080f109(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_first_precursor */
extern void T2079f106(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_first_precursor */
extern void T596f107(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_first_precursor */
extern void T592f110(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_precursor */
extern void T496f101(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_precursor */
extern void T494f108(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_precursor */
extern void T492f105(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_precursor */
extern void T454f111(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_first_precursor */
extern void T344f119(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_other_precursors */
extern void T2152f110(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_precursors */
extern void T2082f108(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_precursors */
extern void T2081f103(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_precursors */
extern void T2080f110(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_precursors */
extern void T2079f107(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_precursors */
extern void T596f108(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_precursors */
extern void T592f111(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_precursors */
extern void T496f102(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_precursors */
extern void T494f109(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_precursors */
extern void T492f106(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_other_precursors */
extern void T454f112(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_precursors */
extern void T344f120(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_version */
extern void T2152f111(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_version */
extern void T2082f109(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_version */
extern void T2081f104(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_version */
extern void T2080f111(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_version */
extern void T2079f108(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_version */
extern void T596f101(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_version */
extern void T592f104(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_version */
extern void T496f95(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_version */
extern void T494f102(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_version */
extern void T492f99(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_version */
extern void T454f105(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_version */
extern void T344f111(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_clients */
extern void T2152f95(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_clients */
extern void T2082f93(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_clients */
extern void T2081f88(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_clients */
extern void T2080f95(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_clients */
extern void T2079f92(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_clients */
extern void T596f88(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_clients */
extern void T592f92(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_clients */
extern void T496f81(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_clients */
extern void T494f85(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_clients */
extern void T492f84(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_clients */
extern void T454f90(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_clients */
extern void T344f98(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_seed */
extern void T2152f112(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_first_seed */
extern void T2082f110(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_first_seed */
extern void T2081f105(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_first_seed */
extern void T2080f112(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_first_seed */
extern void T2079f109(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_first_seed */
extern void T596f100(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_first_seed */
extern void T592f103(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_first_seed */
extern void T496f94(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_seed */
extern void T494f101(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_seed */
extern void T492f98(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_seed */
extern void T454f104(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_first_seed */
extern void T344f110(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_other_seeds */
extern void T2152f113(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_seeds */
extern void T2082f111(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_seeds */
extern void T2081f106(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_seeds */
extern void T2080f113(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_seeds */
extern void T2079f110(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_seeds */
extern void T596f109(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_seeds */
extern void T592f112(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_seeds */
extern void T496f103(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_seeds */
extern void T494f110(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_seeds */
extern void T492f107(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_other_seeds */
extern void T454f113(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_seeds */
extern void T344f121(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_validity_checked */
extern void T2152f99(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.set_validity_checked */
extern void T2082f97(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_validity_checked */
extern void T2081f92(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.set_validity_checked */
extern void T2080f99(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.set_validity_checked */
extern void T2079f96(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.set_validity_checked */
extern void T596f79(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.set_validity_checked */
extern void T592f80(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.set_validity_checked */
extern void T496f88(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_validity_checked */
extern void T494f95(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_validity_checked */
extern void T492f92(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.set_validity_checked */
extern void T454f98(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_validity_checked */
extern void T344f102(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_validity_error */
extern void T2152f100(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.set_validity_error */
extern void T2082f98(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_validity_error */
extern void T2081f93(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.set_validity_error */
extern void T2080f100(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.set_validity_error */
extern void T2079f97(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.set_validity_error */
extern void T596f80(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.set_validity_error */
extern void T592f81(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.set_validity_error */
extern void T496f89(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_validity_error */
extern void T494f96(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_validity_error */
extern void T492f93(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.set_validity_error */
extern void T454f99(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_validity_error */
extern void T344f103(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.process */
extern void T2152f98(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.process */
extern void T2082f96(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.process */
extern void T2081f91(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.process */
extern void T2080f98(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.process */
extern void T2079f95(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.process */
extern void T596f78(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.process */
extern void T592f79(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.process */
extern void T496f87(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.process */
extern void T494f94(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.process */
extern void T492f91(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.process */
extern void T454f97(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.process */
extern void T344f101(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_id */
extern void T2152f97(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_id */
extern void T2082f95(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_id */
extern void T2081f90(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_id */
extern void T2080f97(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_id */
extern void T2079f94(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_id */
extern void T596f95(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_id */
extern void T592f98(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_id */
extern void T496f86(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_id */
extern void T494f93(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_id */
extern void T492f90(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_id */
extern void T454f96(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_id */
extern void T344f100(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_EXPRESSION.set_index */
extern void T2161f45(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.set_index */
extern void T2160f29(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_OBJECT_TEST.set_index */
extern void T2159f33(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.set_index */
extern void T2158f25(GE_context* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.set_index */
extern void T2138f33(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TYPE.set_index */
extern void T2133f25(GE_context* ac, T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.set_index */
extern void T2126f25(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT_ADDRESS.set_index */
extern void T2125f25(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.set_index */
extern void T2124f25(GE_context* ac, T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.set_index */
extern void T2064f47(GE_context* ac, T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.set_index */
extern void T2063f47(GE_context* ac, T0* C, T6 a1);
/* ET_FALSE_CONSTANT.set_index */
extern void T2060f43(GE_context* ac, T0* C, T6 a1);
/* ET_VOID.set_index */
extern void T2058f36(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_index */
extern void T2053f47(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.set_index */
extern void T2052f47(GE_context* ac, T0* C, T6 a1);
/* ET_BINARY_INTEGER_CONSTANT.set_index */
extern void T2051f69(GE_context* ac, T0* C, T6 a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_index */
extern void T2050f69(GE_context* ac, T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_index */
extern void T2049f69(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_index */
extern void T2048f69(GE_context* ac, T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.set_index */
extern void T2047f45(GE_context* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.set_index */
extern void T2046f49(GE_context* ac, T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.set_index */
extern void T2045f46(GE_context* ac, T0* C, T6 a1);
/* ET_TRUE_CONSTANT.set_index */
extern void T2032f43(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.set_index */
extern void T1532f47(GE_context* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.set_index */
extern void T1384f31(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_index */
extern void T495f72(GE_context* ac, T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.set_index */
extern void T433f26(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_index */
extern void T432f28(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST.set_index */
extern void T431f28(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT.set_index */
extern void T422f35(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.set_index */
extern void T399f31(GE_context* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_index */
extern void T397f30(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT.set_index */
extern void T390f36(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_index */
extern void T232f114(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.reset */
extern void T2686f25(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.reset */
extern void T2685f25(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.reset */
extern void T2684f20(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.reset */
extern void T2489f20(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset */
extern void T2161f42(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset_unfolded_form */
extern void T2161f44(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.reset */
extern void T2160f28(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.reset */
extern void T2159f32(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.reset */
extern void T2158f24(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.reset */
extern void T2146f45(GE_context* ac, T0* C);
extern T1 T2146f45ot1(T0* a1, T0** a2);
/* ET_POSTCONDITIONS.reset */
extern void T1734f24(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.reset_validity_checked */
extern void T1734f21(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.reset */
extern void T1734f24p1(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.reset */
extern void T529f23(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.reset_validity_checked */
extern void T529f22(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.reset */
extern void T529f23p1(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset */
extern void T347f14(GE_context* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.reset */
extern void T2087f10(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.reset */
extern void T350f9(GE_context* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.reset */
extern void T2148f14(GE_context* ac, T0* C);
extern T1 T2148f14ot1(T0* a1, T0** a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T2145f54(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.reset */
extern void T2027f14(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.reset */
extern void T2089f10(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.type */
extern T0* T2089f6(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.name */
extern T0* T2089f5(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.reset */
extern void T1655f9(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.type */
extern T0* T1655f6(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.name */
extern T0* T1655f5(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.local_variable */
extern T0* T1655f4(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.local_variable */
extern T0* T2089f4(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T2145f54p1(GE_context* ac, T0* C);
extern T1 T2145f54p1ot1(T0* a1, T0** a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T2144f49(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T2144f49p1(GE_context* ac, T0* C);
extern T1 T2144f49p1ot1(T0* a1, T0** a2);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.reset */
extern void T2142f46(GE_context* ac, T0* C);
extern T1 T2142f46ot1(T0* a1, T0** a2);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T2141f55(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T2141f55p1(GE_context* ac, T0* C);
extern T1 T2141f55p1ot1(T0* a1, T0** a2);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T2140f50(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T2140f50p1(GE_context* ac, T0* C);
extern T1 T2140f50p1ot1(T0* a1, T0** a2);
/* ET_CALL_AGENT.reset */
extern void T2139f34(GE_context* ac, T0* C);
extern T1 T2139f34ot1(T0* a1, T0** a2);
/* ET_STRIP_EXPRESSION.reset */
extern void T2138f32(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.reset */
extern void T2137f33(GE_context* ac, T0* C);
extern T1 T2137f33ot1(T0* a1, T0** a2);
/* ET_BRACKET_EXPRESSION.reset */
extern void T2136f27(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.reset_arguments */
extern void T2136f28(GE_context* ac, T0* C);
extern T1 T2136f28ot1(T0* a1, T0** a2);
/* ET_BRACKET_SYMBOL.reset */
extern void T846f105(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.reset */
extern void T2135f24(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.reset */
extern void T2134f28(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.reset */
extern void T2133f24(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.reset */
extern void T2128f26(GE_context* ac, T0* C);
extern T1 T2128f26ot1(T0* a1, T0** a2);
extern T1 T2128f26ot2(T0* a1, T0** a2);
extern T1 T2128f26ot3(T0* a1, T0** a2);
/* ET_PARENTHESIZED_EXPRESSION.reset */
extern void T2127f25(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.reset */
extern void T2126f24(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.reset */
extern void T2125f24(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.reset */
extern void T2124f24(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.reset */
extern void T2123f29(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.reset_arguments */
extern void T2123f30(GE_context* ac, T0* C);
extern T1 T2123f30ot1(T0* a1, T0** a2);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T2122f32(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.type */
extern T0* T2122f10(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T2122f32p1(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset_arguments */
extern void T2122f34(GE_context* ac, T0* C);
extern T1 T2122f34ot1(T0* a1, T0** a2);
/* ET_IF_EXPRESSION.reset */
extern void T2111f30(GE_context* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.reset */
extern void T2112f8(GE_context* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.reset */
extern void T1676f9(GE_context* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.conditional_expression */
extern T0* T1676f6(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.conditional_expression */
extern T0* T2111f9(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.reset */
extern void T2064f48(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.reset */
extern void T2063f48(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.reset */
extern void T2060f44(GE_context* ac, T0* C);
/* ET_VOID.reset */
extern void T2058f33(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.reset */
extern void T2053f49(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.reset */
extern void T2052f49(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.reset */
extern void T2051f71(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.reset */
extern void T2050f71(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.reset */
extern void T2049f71(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.reset */
extern void T2048f71(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.reset */
extern void T2047f48(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.reset */
extern void T2046f52(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.reset */
extern void T2045f49(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.reset */
extern void T2032f44(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.reset */
extern void T1532f48(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.reset */
extern void T1384f30(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.reset */
extern void T495f74(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.reset */
extern void T444f33(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.type */
extern T0* T444f17(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.reset */
extern void T433f23(GE_context* ac, T0* C);
extern T1 T433f23ot1(T0* a1, T0** a2);
extern T1 T433f23ot2(T0* a1, T0** a2);
/* ET_OBJECT_EQUALITY_EXPRESSION.reset */
extern void T432f25(GE_context* ac, T0* C);
extern T1 T432f25ot1(T0* a1, T0** a2);
extern T1 T432f25ot2(T0* a1, T0** a2);
/* ET_OBJECT_TEST.reset */
extern void T431f27(GE_context* ac, T0* C);
/* ET_RESULT.reset */
extern void T422f37(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.reset */
extern void T399f35(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T397f31(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T397f31p1(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset_arguments */
extern void T397f34(GE_context* ac, T0* C);
extern T1 T397f34ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T396f31(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T396f31p1(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T396f31p0(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset_arguments */
extern void T396f34(GE_context* ac, T0* C);
extern T1 T396f34ot1(T0* a1, T0** a2);
/* ET_CURRENT.reset */
extern void T390f38(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.process */
extern void T2686f24(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_FROM_EXPRESSION.process */
extern void T2685f24(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.process */
extern void T2684f19(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.process */
extern void T2489f19(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.process */
extern void T2161f34(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.process */
extern void T2160f25(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_OBJECT_TEST.process */
extern void T2159f30(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.process */
extern void T2158f22(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.process */
extern void T2146f39(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.process */
extern void T2145f45(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.process */
extern void T2144f41(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.process */
extern void T2142f40(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.process */
extern void T2141f46(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.process */
extern void T2140f42(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.process */
extern void T2139f31(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.process */
extern void T2138f29(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.process */
extern void T2137f29(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.process */
extern void T2136f26(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.process */
extern void T2135f22(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_EXPRESSION.process */
extern void T2134f27(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TYPE.process */
extern void T2133f23(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.process */
extern void T2128f25(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.process */
extern void T2127f23(GE_context* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.process */
extern void T2126f22(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT_ADDRESS.process */
extern void T2125f22(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.process */
extern void T2124f22(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.process */
extern void T2123f26(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.process */
extern void T2122f30(GE_context* ac, T0* C, T0* a1);
/* ET_IF_EXPRESSION.process */
extern void T2111f29(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.process */
extern void T2064f46(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.process */
extern void T2063f46(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.process */
extern void T2060f42(GE_context* ac, T0* C, T0* a1);
/* ET_VOID.process */
extern void T2058f32(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.process */
extern void T2053f46(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.process */
extern void T2052f46(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.process */
extern void T2051f68(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.process */
extern void T2050f68(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.process */
extern void T2049f68(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.process */
extern void T2048f68(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.process */
extern void T2047f44(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.process */
extern void T2046f48(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.process */
extern void T2045f45(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.process */
extern void T2032f42(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.process */
extern void T1532f45(GE_context* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.process */
extern void T1384f27(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.process */
extern void T495f68(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.process */
extern void T444f32(GE_context* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.process */
extern void T433f22(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.process */
extern void T432f24(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST.process */
extern void T431f25(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT.process */
extern void T422f32(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.process */
extern void T399f33(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.process */
extern void T397f29(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.process */
extern void T396f29(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.process */
extern void T390f33(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.process */
extern void T232f117(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1998f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T1998f17ot1(T0* a1, T0** a2);
extern T1 T1998f17ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1998f17p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T1998f17p1ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T595f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TARGET_LIST.item */
extern T0* T1768f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T595f17p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T595f17p1ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_type_from_type_set */
extern void T587f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_type_from_type_set */
extern void T586f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.put_type_from_type_set */
extern void T434f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.put_type_from_type_set */
extern void T412f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type_from_type_set */
extern void T378f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TYPE.put_type_from_type_set */
extern void T320f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.set_never_void */
extern void T1998f16(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.set_never_void */
extern void T595f16(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_never_void */
extern void T587f57(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_never_void */
extern void T586f57(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_never_void */
extern void T434f55(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_never_void */
extern void T412f55(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_never_void */
extern void T378f15(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.set_never_void */
extern void T320f54(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.propagate_can_be_void */
extern void T1998f18(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.propagate_can_be_void */
extern void T595f19(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.propagate_can_be_void */
extern void T587f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.propagate_can_be_void */
extern void T586f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.propagate_can_be_void */
extern void T434f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.propagate_can_be_void */
extern void T412f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.propagate_can_be_void */
extern void T378f21(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.propagate_can_be_void */
extern void T320f59(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_target */
extern void T1998f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_target */
extern void T595f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TARGET_LIST.force_last */
extern void T1768f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET].force */
extern void T2280f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TARGET].fill_with */
extern void T2279f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TARGET].extend */
extern void T2279f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.fixed_array */
extern T0* T1768f6(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET].default_create */
extern T0* T2280c3(GE_context* ac);
/* ET_DYNAMIC_TARGET_LIST.resize */
extern void T1768f12(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T2280f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T2279f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.new_capacity */
extern T6 T1768f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.capacity */
extern T6 T1768f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_TARGET_LIST.has */
extern T1 T1768f3(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.index_of */
extern T6 T1768f5(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.put_last */
extern void T1768f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.make_with_capacity */
extern T0* T1768c9(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET].make */
extern T0* T2280f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TARGET].make_empty */
extern T0* T2279c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_target */
extern void T378f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_unaliased_to_string */
extern void T2581f23(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T2580f20(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_unaliased_to_string */
extern void T1242f30(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T724f18(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_unaliased_to_string */
extern void T333f28(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_to_string */
extern void T2581f24(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T2580f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_to_string */
extern void T1242f31(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T724f19(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_to_string */
extern void T333f29(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.reset */
extern void T2581f25(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T2580f22(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset */
extern void T1242f32(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T724f20(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset */
extern void T333f32(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.reset_qualified_anchored_types */
extern void T2581f26(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T2580f23(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T1242f34(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T724f21(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T333f33(GE_context* ac, T0* C);
/* ET_LIBRARY.classes_do_all */
extern void T659f174(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].forth */
extern void T828f12(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].cursor_forth */
extern void T314f63(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].add_traversing_cursor */
extern void T314f66(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].set_next_cursor */
extern void T828f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].set_position */
extern void T828f15(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].remove_traversing_cursor */
extern void T314f65(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].set_after */
extern void T828f14(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_mapped */
extern T1 T672f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].item */
extern T0* T828f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].cursor_item */
extern T0* T314f34(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].after */
extern T1 T828f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].start */
extern void T828f11(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].cursor_start */
extern void T314f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].cursor_off */
extern T1 T314f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].off */
extern T1 T828f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].is_empty */
extern T1 T314f36(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T649f173(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T649f173p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_all */
extern void T311f196(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_all */
extern void T311f196p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_all */
extern void T290f182(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_all */
extern void T290f182p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.classes_do_all */
extern void T283f254(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T265f173(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T265f173p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.classes_do_all */
extern void T236f200(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.classes_do_all */
extern void T197f264(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.classes_do_all */
extern void T69f265(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.classes_do_all */
extern void T40f209(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.classes_do_until */
extern void T659f175(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].go_after */
extern void T828f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].cursor_go_after */
extern void T314f64(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.classes_do_until */
extern void T649f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_until */
extern void T311f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_until */
extern void T290f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.classes_do_until */
extern void T283f255(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_until */
extern void T265f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.classes_do_until */
extern void T236f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.classes_do_until */
extern void T197f265(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_until */
extern void T69f266(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.classes_do_until */
extern void T40f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.classes_do_if */
extern void T659f177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T649f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T649f176p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_if */
extern void T311f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_if */
extern void T311f199p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_if */
extern void T290f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_if */
extern void T290f185p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.classes_do_if */
extern void T283f256(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T265f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T265f176p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.classes_do_if */
extern void T236f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.classes_do_if */
extern void T197f266(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_if */
extern void T69f267(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.classes_do_if */
extern void T40f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_all */
extern void T659f176(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].do_all */
extern void T314f40(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T649f175(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_all */
extern void T311f198(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T290f184(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.master_classes_do_all */
extern void T283f234(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T265f175(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.master_classes_do_all */
extern void T236f202(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.master_classes_do_all */
extern void T197f190(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.master_classes_do_all */
extern void T69f191(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.master_classes_do_all */
extern void T40f211(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.master_classes_do_until */
extern void T659f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T649f177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_until */
extern void T311f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T290f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.master_classes_do_until */
extern void T283f257(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T265f177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.master_classes_do_until */
extern void T236f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.master_classes_do_until */
extern void T197f267(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_until */
extern void T69f268(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.master_classes_do_until */
extern void T40f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_if */
extern void T659f179(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].do_if */
extern void T314f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T649f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_if */
extern void T311f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T290f187(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.master_classes_do_if */
extern void T283f258(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T265f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.master_classes_do_if */
extern void T236f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.master_classes_do_if */
extern void T197f268(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_if */
extern void T69f269(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.master_classes_do_if */
extern void T40f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_if_until */
extern void T659f180(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T649f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_if_until */
extern void T311f202(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T290f188(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_SYSTEM.master_classes_do_if_until */
extern void T283f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T265f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.master_classes_do_if_until */
extern void T236f206(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM.master_classes_do_if_until */
extern void T197f269(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.master_classes_do_if_until */
extern void T69f270(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SYSTEM.master_classes_do_if_until */
extern void T40f215(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_SYSTEM.universes_do_all */
extern void T283f242(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_all */
extern void T264f12(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.universes_do_all */
extern void T237f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.universes_do_all */
extern void T236f208(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.universes_do_all */
extern void T197f271(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.universes_do_all */
extern void T69f284(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.universes_do_all */
extern void T40f198(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.universes_do_if */
extern void T659f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_if */
extern void T264f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_LIBRARIES.universes_do_if */
extern void T237f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.universes_do_if */
extern void T649f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLIES.universes_do_if */
extern void T648f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.universes_do_if */
extern void T311f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.universes_do_if */
extern void T290f191(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.universes_do_if */
extern void T283f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.universes_do_if */
extern void T265f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.universes_do_if */
extern void T236f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.universes_do_if */
extern void T197f272(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.universes_do_if */
extern void T69f283(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.universes_do_if */
extern void T40f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.reset_validity_checked */
extern void T2152f101(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_validity_checked */
extern void T2082f99(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_validity_checked */
extern void T596f96(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_validity_checked */
extern void T592f99(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset */
extern void T2152f102(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset */
extern void T2082f100(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset */
extern void T596f97(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset */
extern void T592f100(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_features_flattened */
extern void T2152f103(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T2152f119(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset_qualified_anchored_types */
extern void T347f15(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T2082f101(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T2082f116(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_features_flattened */
extern void T596f98(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T596f102(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T592f101(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T592f105(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_interface_checked */
extern void T2152f104(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T2082f102(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T2082f102p1(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_interface_checked */
extern void T596f99(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T592f102(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T592f102p1(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_validity_checked */
extern void T2081f94(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_validity_checked */
extern void T2080f101(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_validity_checked */
extern void T2079f98(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_validity_checked */
extern void T496f90(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_validity_checked */
extern void T494f97(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_validity_checked */
extern void T492f94(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_validity_checked */
extern void T454f100(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_validity_checked */
extern void T344f104(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T2081f95(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T2081f95p1(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T2080f102(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T2080f102p1(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset */
extern void T2079f99(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset */
extern void T2079f99p1(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset */
extern void T496f91(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset */
extern void T496f91p1(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T494f98(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T494f98p1(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T492f95(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T492f95p1(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset */
extern void T454f101(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset */
extern void T454f101p1(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T344f112(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T344f112p1(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_features_flattened */
extern void T2081f96(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_signature_qualified_anchored_types */
extern void T2081f112(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T2080f103(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_signature_qualified_anchored_types */
extern void T2080f118(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T2079f100(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_signature_qualified_anchored_types */
extern void T2079f115(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_after_features_flattened */
extern void T496f92(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T496f96(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_features_flattened */
extern void T494f99(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T494f103(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_features_flattened */
extern void T492f96(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T492f100(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_features_flattened */
extern void T454f102(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T454f106(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_features_flattened */
extern void T344f113(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_signature_qualified_anchored_types */
extern void T344f122(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_interface_checked */
extern void T2081f97(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T2080f104(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T2080f104p1(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_interface_checked */
extern void T2079f101(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_interface_checked */
extern void T2079f101p1(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_after_interface_checked */
extern void T496f93(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_interface_checked */
extern void T494f100(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_interface_checked */
extern void T492f97(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T454f103(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T454f103p1(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_interface_checked */
extern void T344f114(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.process */
extern void T2154f82(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.process */
extern void T2098f77(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.process */
extern void T2097f79(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.process */
extern void T1895f71(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.process */
extern void T1712f82(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.process */
extern void T1243f79(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.process */
extern void T498f74(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.process */
extern void T345f107(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.process */
extern void T95f246(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.process */
extern void T93f113(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_unaliased_to_string */
extern void T2154f81(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_unaliased_to_string */
extern void T2098f76(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_unaliased_to_string */
extern void T2097f77(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_unaliased_to_string */
extern void T1895f69(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T1712f83(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T1243f80(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_unaliased_to_string */
extern void T498f72(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_unaliased_to_string */
extern void T345f105(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.append_unaliased_to_string */
extern void T95f250(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_unaliased_to_string */
extern void T93f111(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_to_string */
extern void T2154f78(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_to_string */
extern void T2098f73(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_to_string */
extern void T2097f78(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_to_string */
extern void T1895f70(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.upper_name */
extern T0* T1895f35(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_to_string */
extern void T1712f84(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.upper_name */
extern T0* T1712f11(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.append_to_string */
extern void T1243f81(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.upper_name */
extern T0* T1243f9(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.append_to_string */
extern void T498f73(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_to_string */
extern void T345f106(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.append_to_string */
extern void T95f268(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_to_string */
extern void T93f112(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.reset */
extern void T2154f79(GE_context* ac, T0* C);
/* ET_IDENTIFIER.set_feature_name */
extern void T232f123(GE_context* ac, T0* C, T1 a1);
/* ET_LIKE_FEATURE.is_like_argument */
extern T1 T2154f48(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset */
extern void T2098f74(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset */
extern void T2097f80(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reset */
extern void T1895f72(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset */
extern void T1712f85(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_constraint_creation_procedures */
extern void T1712f80(GE_context* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.reset */
extern void T1244f14(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset */
extern void T1243f82(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.reset */
extern void T498f75(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.reset */
extern void T345f108(GE_context* ac, T0* C);
/* ET_CLASS.reset_type */
extern void T95f305(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.reset */
extern void T93f114(GE_context* ac, T0* C);
extern T1 T93f114ot1(T0* a1, T0** a2);
extern T1 T93f114ot2(T0* a1, T0** a2);
extern T1 T93f114ot3(T0* a1, T0** a2);
/* ET_LIKE_FEATURE.reset_qualified_anchored_types */
extern void T2154f80(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset_qualified_anchored_types */
extern void T2098f75(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset_qualified_anchored_types */
extern void T2097f81(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reset_qualified_anchored_types */
extern void T1895f73(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T1712f86(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T1243f83(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.reset_qualified_anchored_types */
extern void T498f76(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.reset_qualified_anchored_types */
extern void T345f109(GE_context* ac, T0* C);
/* ET_CLASS.reset_qualified_anchored_types */
extern void T95f306(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.reset_qualified_anchored_types */
extern void T93f115(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class */
extern void T1806f4(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class */
extern void T1805f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class */
extern void T1804f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class */
extern void T1803f4(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class */
extern void T1240f11(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class */
extern void T1239f14(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class */
extern void T1238f14(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class */
extern void T1233f11(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_class */
extern void T1232f15(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_class */
extern void T1231f22(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class */
extern void T1230f14(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class */
extern void T1229f11(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class */
extern void T1228f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class */
extern void T1217f16(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class */
extern void T1216f14(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_class */
extern void T510f27(GE_context* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.process_class */
extern void T367f2(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.process_class */
extern void T364f16(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.internal_process_class */
extern void T364f19(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_class_processed */
extern void T81f108(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_class_processed */
extern void T87f112(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_implementation_checked */
extern void T95f266(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].wipe_out */
extern void T866f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].slots_wipe_out */
extern void T866f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].clashes_wipe_out */
extern void T866f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].key_storage_wipe_out */
extern void T866f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].item_storage_wipe_out */
extern void T866f49(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_NAMED_CLASS].keep_head */
extern void T1880f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_NAMED_CLASS].set_count */
extern void T1880f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].move_all_cursors_after */
extern void T866f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].set_next_cursor */
extern void T1807f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].set_after */
extern void T1807f10(GE_context* ac, T0* C);
/* ET_CLASS.set_suppliers */
extern void T95f265(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].extend */
extern void T866f41(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].forth */
extern void T1807f14(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].cursor_forth */
extern void T866f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].add_traversing_cursor */
extern void T866f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].set_position */
extern void T1807f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].remove_traversing_cursor */
extern void T866f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].put */
extern void T866f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].item */
extern T0* T1807f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].cursor_item */
extern T0* T866f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].after */
extern T1 T1807f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].start */
extern void T1807f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].cursor_start */
extern void T866f53(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].cursor_off */
extern T1 T866f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].off */
extern T1 T1807f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].is_empty */
extern T1 T866f23(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_invariants_validity */
extern void T364f22(GE_context* ac, T0* C, T1 a1);
/* ET_BASE_TYPE_LIST.item */
extern T0* T538f3(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.flat_mode */
extern T1 T364f11(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_invariants_validity */
extern void T505f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INVARIANTS.set_validity_error */
extern void T1735f33(GE_context* ac, T0* C);
/* ET_INVARIANTS.set_validity_checked */
extern void T1735f32(GE_context* ac, T0* C);
/* ET_INVARIANTS.assertion */
extern T0* T1735f11(GE_context* ac, T0* C, T6 a1);
/* ET_INVARIANTS.item */
extern T0* T1735f12(GE_context* ac, T0* C, T6 a1);
/* ET_INVARIANTS.reset_validity_checked */
extern void T1735f31(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_supplier_handler */
extern void T505f71(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.set_supplier_handler */
extern void T510f19(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_features_validity */
extern void T364f21(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.check_procedure_validity */
extern void T364f24(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].wipe_out */
extern void T1248f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].slots_wipe_out */
extern void T1248f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].clashes_wipe_out */
extern void T1248f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].key_storage_wipe_out */
extern void T1248f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].item_storage_wipe_out */
extern void T1248f48(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_PROCEDURE].keep_head */
extern void T1575f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_PROCEDURE].set_count */
extern void T1575f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].move_all_cursors_after */
extern void T1248f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE].set_next_cursor */
extern void T1959f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE].set_after */
extern void T1959f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].forth */
extern void T1248f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].cursor_forth */
extern void T1248f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].add_traversing_cursor */
extern void T1248f53(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE].set_position */
extern void T1959f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].remove_traversing_cursor */
extern void T1248f52(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].clashes_item */
extern T6 T1248f23(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_procedure_validity */
extern void T364f27(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_FEATURE_CHECKER.check_precursor_feature_validity */
extern void T505f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].item_for_iteration */
extern T0* T1248f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].cursor_item */
extern T0* T1248f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].item_storage_item */
extern T0* T1248f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].after */
extern T1 T1248f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].cursor_after */
extern T1 T1248f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE].after */
extern T1 T1959f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].start */
extern void T1248f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].cursor_start */
extern void T1248f45(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].cursor_off */
extern T1 T1248f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE].off */
extern T1 T1959f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].is_empty */
extern T1 T1248f21(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_feature_validity */
extern void T505f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.build_preconditions_attachment_scope */
extern void T505f78(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.free_attachment_scope */
extern void T505f81(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.new_attachment_scope */
extern T0* T505f44(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.build_assertions_attachment_scope */
extern void T505f80(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.add_precursors_with_preconditions_recursive */
extern void T505f79(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.feature_checker */
extern T0* T505f40(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_assertions_validity */
extern void T364f25(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_IMPLEMENTATION_CHECKER.flat_dbc_mode */
extern T1 T364f12(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_postconditions_validity */
extern void T505f76(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_POSTCONDITIONS.set_validity_error */
extern void T1734f23(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.set_validity_checked */
extern void T1734f22(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.assertion */
extern T0* T1734f8(GE_context* ac, T0* C, T6 a1);
/* ET_POSTCONDITIONS.item */
extern T0* T1734f11(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.set_precursor_procedures */
extern void T505f75(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_query_validity */
extern void T364f23(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].wipe_out */
extern void T1249f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].slots_wipe_out */
extern void T1249f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].clashes_wipe_out */
extern void T1249f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].key_storage_wipe_out */
extern void T1249f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].item_storage_wipe_out */
extern void T1249f48(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_QUERY].keep_head */
extern void T1572f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_QUERY].set_count */
extern void T1572f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].move_all_cursors_after */
extern void T1249f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_QUERY].set_next_cursor */
extern void T1961f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_QUERY].set_after */
extern void T1961f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].forth */
extern void T1249f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].cursor_forth */
extern void T1249f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].add_traversing_cursor */
extern void T1249f53(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_QUERY].set_position */
extern void T1961f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].remove_traversing_cursor */
extern void T1249f52(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].clashes_item */
extern T6 T1249f23(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_query_validity */
extern void T364f26(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].item_for_iteration */
extern T0* T1249f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].cursor_item */
extern T0* T1249f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].item_storage_item */
extern T0* T1249f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].after */
extern T1 T1249f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].cursor_after */
extern T1 T1249f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_QUERY].after */
extern T1 T1961f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].start */
extern void T1249f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].cursor_start */
extern void T1249f45(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].cursor_off */
extern T1 T1249f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_QUERY].off */
extern T1 T1961f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].is_empty */
extern T1 T1249f21(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_precursor_queries */
extern void T505f73(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.suppliers_enabled */
extern T1 T364f10(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_compilation_status */
extern void T53f204(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_compilation_status */
extern void T36f203(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SYSTEM_PROCESSOR.report_class_postponed */
extern void T81f109(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_class_postponed */
extern void T87f113(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.process_parent_class */
extern void T364f20(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_LIST.parent */
extern T0* T699f5(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT.parent */
extern T0* T698f10(GE_context* ac, T0* C);
/* ET_PARENT_LIST.item */
extern T0* T699f7(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.parents */
extern T0* T95f58(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.implicit_parent_clause */
extern T0* T95f74(GE_context* ac, T0* C);
/* ET_CLASS.is_system_object_class */
extern T1 T95f84(GE_context* ac, T0* C);
/* ET_CLASS.is_dotnet */
extern T1 T95f60(GE_context* ac, T0* C);
/* ET_CLASS.is_in_dotnet_assembly */
extern T1 T95f75(GE_context* ac, T0* C);
/* ET_CLASS.is_any_class */
extern T1 T95f86(GE_context* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.item */
extern T0* T1534f4(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.parents_count */
extern T6 T95f57(GE_context* ac, T0* C);
/* ET_CLASS.has_explicit_conforming_parent */
extern T1 T95f73(GE_context* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.has_conforming_parent */
extern T1 T1534f5(GE_context* ac, T0* C);
/* ET_PARENT_LIST.has_conforming_parent */
extern T1 T699f10(GE_context* ac, T0* C);
/* ET_CLASS.set_checking_implementation */
extern void T95f267(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.interface_checked_successfully */
extern T1 T95f122(GE_context* ac, T0* C);
/* MUTEX.try_lock */
extern T1 T158f7(GE_context* ac, T0* C);
/* MUTEX.eif_thr_mutex_trylock */
extern T1 T158f8(GE_context* ac, T0* C, T14 a1);
/* ET_IMPLEMENTATION_CHECKER.set_fatal_error */
extern void T364f18(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.error_handler */
extern T0* T364f9(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.process_none_class */
extern void T364f17(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.process_class */
extern void T363f16(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.internal_process_class */
extern void T363f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].remove */
extern void T1237f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].remove_position */
extern void T1237f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].key_storage_put */
extern void T1237f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].item_storage_put */
extern void T1237f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].key_storage_keep_head */
extern void T1237f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].item_storage_keep_head */
extern void T1237f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].clashes_put */
extern void T1237f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].slots_put */
extern void T1237f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].clashes_item */
extern T6 T1237f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].move_cursors_forth */
extern void T1237f43(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CLASS].set_position */
extern void T1956f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CLASS].set_next_cursor */
extern void T1956f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CLASS].set_after */
extern void T1956f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].internal_set_key_equality_tester */
extern void T1237f42(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].key_equality_tester */
extern T0* T1237f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].slots_item */
extern T6 T1237f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].hash_position */
extern T6 T1237f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].key_storage_item */
extern T0* T1237f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].item_storage_item */
extern T0* T1237f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].search_position */
extern void T1237f40(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].last */
extern T0* T1237f17(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].is_empty */
extern T1 T1237f28(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_parents_validity */
extern void T363f23(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.check_parents_validity */
extern void T1238f9(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.check_constraint_creations_validity */
extern void T363f22(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creation_validity */
extern void T363f27(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0a_error */
extern void T53f207(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtgc0a */
extern T0* T1418c782(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T53f26(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtgc0a_error */
extern void T36f206(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T36f25(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0b_error */
extern void T53f206(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vtgc0b */
extern T0* T1418c781(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vtgc0b_error */
extern void T36f205(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcp3c_error */
extern void T53f205(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3c */
extern T0* T1418c780(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T53f25(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp3c_error */
extern void T36f204(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T36f24(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.feature_name */
extern T0* T1244f7(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.item */
extern T0* T1244f10(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.current_universe */
extern T0* T363f14(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.constraint_base_type */
extern T0* T1243f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.creation_procedures */
extern T0* T1243f6(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter */
extern T0* T1242f7(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.formal_parameter */
extern T0* T1712f10(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.formal_parameter */
extern T0* T1243f5(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.item */
extern T0* T1242f5(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.check_signatures_validity */
extern void T363f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].wipe_out */
extern void T1218f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].slots_wipe_out */
extern void T1218f62(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].clashes_wipe_out */
extern void T1218f61(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1218f60(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_FEATURE_NAME].keep_head */
extern void T1903f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_FEATURE_NAME].set_count */
extern void T1903f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1218f59(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_FLATTENED_FEATURE].keep_head */
extern void T1897f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_FLATTENED_FEATURE].set_count */
extern void T1897f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].move_all_cursors_after */
extern void T1218f57(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].set_next_cursor */
extern void T1896f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].set_after */
extern void T1896f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].forth */
extern void T1218f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_forth */
extern void T1218f56(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].add_traversing_cursor */
extern void T1218f68(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].set_position */
extern void T1896f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1218f67(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].clashes_item */
extern T6 T1218f26(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.check_signature_validity */
extern void T363f26(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_validity */
extern void T1231f11(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].forth */
extern void T1947f10(GE_context* ac, T0* C);
/* attached DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].cursor_forth */
extern void T1949f11(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1949f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].set_next_cursor */
extern void T1947f12(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1949f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].set */
extern void T1947f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_SIGNATURE_CHECKER.check_selected_signature_validity */
extern void T1231f15(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1231f15ot1(T0* a1);
extern T1 T1231f15ot2(T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.is_empty */
extern T1 T347f10(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_tuple_actual_parameters_unfolded */
extern void T1231f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.attached_keyword */
extern T0* T94f763(GE_context* ac, T0* C);
/* ET_KEYWORD.make_attached */
extern T0* T539c55(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.report_vdrd2c_error */
extern void T53f334(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2c */
extern T0* T1418c890(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.upper_name */
extern T0* T93f79(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T53f87(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd2c_error */
extern void T36f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T36f86(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2d_error */
extern void T53f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2d */
extern T0* T1418c889(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.name */
extern T0* T1247f12(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdrd2d_error */
extern void T36f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.error_handler */
extern T0* T1231f8(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.set_fatal_error */
extern void T1231f16(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.set */
extern void T517f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.force_last */
extern void T517f55(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_TYPE].force */
extern void T1379f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_TYPE].fill_with */
extern void T349f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_TYPE].extend */
extern void T349f10(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.resize */
extern void T517f60(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_TYPE].aliased_resized_area */
extern T0* T1379f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_TYPE].aliased_resized_area */
extern T0* T349f4(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.new_capacity */
extern T6 T517f18(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.capacity */
extern T6 T517f14(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].item */
extern T0* T1947f6(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].start */
extern void T1947f9(GE_context* ac, T0* C);
/* attached DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].cursor_start */
extern void T1949f10(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].cursor_off */
extern T1 T1949f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].off */
extern T1 T1947f7(GE_context* ac, T0* C);
/* attached DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].new_cursor */
extern T0* T1949f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].make */
extern T0* T1947c8(GE_context* ac, T0* a1);
/* ET_PARENT_FEATURE.is_deferred */
extern T1 T1247f11(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.has_undefine */
extern T1 T1247f17(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_joined_signature_validity */
extern void T1231f14(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0b_error */
extern void T53f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_VALIDITY_ERROR.make_vdjr0b */
extern T0* T1418c888(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T53f88(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr0b_error */
extern void T36f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T36f87(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr0a_error */
extern void T53f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0a */
extern T0* T1418c887(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0a_error */
extern void T36f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0c_error */
extern void T53f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0c */
extern T0* T1418c886(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0c_error */
extern void T36f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_redeclared_signature_validity */
extern void T1231f13(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1231f13ot1(T0* a1);
extern T1 T1231f13ot2(T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd6b_error */
extern void T53f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6b */
extern T0* T1418c885(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T53f64(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd6b_error */
extern void T36f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T36f63(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2a_error */
extern void T53f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2a */
extern T0* T1418c884(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2a_error */
extern void T36f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd2b_error */
extern void T53f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2b */
extern T0* T1418c883(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2b_error */
extern void T36f326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item_for_iteration */
extern T0* T1218f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_item */
extern T0* T1218f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item_storage_item */
extern T0* T1218f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].after */
extern T1 T1218f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_after */
extern T1 T1218f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].after */
extern T1 T1896f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].start */
extern void T1218f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_start */
extern void T1218f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_off */
extern T1 T1218f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].off */
extern T1 T1896f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].is_empty */
extern T1 T1218f31(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_feature_adaptations */
extern void T363f25(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_inherited_features */
extern void T363f28(GE_context* ac, T0* C, T0* a1);
extern T1 T363f28ot1(T0* a1, T0** a2);
/* ET_INHERITED_FEATURE.set_flattened_parent */
extern void T1246f33(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_flattened_feature */
extern void T1246f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].found_item */
extern T0* T1218f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].found */
extern T1 T1218f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].search */
extern void T1218f49(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].search_position */
extern void T1218f53(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].hash_position */
extern T6 T1218f29(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_NAME_TESTER.test */
extern T1 T1219f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].key_storage_item */
extern T0* T1218f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].slots_item */
extern T6 T1218f23(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1226f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].wipe_out */
extern void T1925f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].slots_wipe_out */
extern void T1925f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].clashes_wipe_out */
extern void T1925f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1925f45(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_ALIAS_NAME].keep_head */
extern void T1910f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ALIAS_NAME].set_count */
extern void T1910f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1925f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].move_all_cursors_after */
extern void T1925f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].set_next_cursor */
extern void T2329f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].set_after */
extern void T2329f7(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replication */
extern void T1226f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].wipe_out */
extern void T1926f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].slots_wipe_out */
extern void T1926f57(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].clashes_wipe_out */
extern void T1926f56(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].key_storage_wipe_out */
extern void T1926f55(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].item_storage_wipe_out */
extern void T1926f54(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_REPLICABLE_FEATURE].keep_head */
extern void T2331f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_REPLICABLE_FEATURE].set_count */
extern void T2331f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].move_all_cursors_after */
extern void T1926f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].set_next_cursor */
extern void T2330f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].set_after */
extern void T2330f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].forth */
extern void T1926f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].cursor_forth */
extern void T1926f51(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].add_traversing_cursor */
extern void T1926f66(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].set_position */
extern void T2330f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].remove_traversing_cursor */
extern void T1926f65(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].clashes_item */
extern T6 T1926f23(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replicated_feature */
extern void T1226f37(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vmrc2b_error */
extern void T53f325(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2b */
extern T0* T1418c881(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].after */
extern T1 T2346f4(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].forth */
extern void T2346f11(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].cursor_forth */
extern void T1937f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].set_position */
extern void T2346f13(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1937f15(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].set_next_cursor */
extern void T2346f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1937f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].item */
extern T0* T2346f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].cursor_item */
extern T0* T1937f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].start */
extern void T2346f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].cursor_start */
extern void T1937f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].set_after */
extern void T2346f12(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].is_empty */
extern T1 T1937f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].off */
extern T1 T2346f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].before */
extern T1 T2346f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].new_cursor */
extern T0* T1937f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].make */
extern T0* T2346c9(GE_context* ac, T0* a1);
/* ET_VALIDITY_ERROR.ast_position */
extern T0* T1418f81(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].first */
extern T0* T1937f7(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T53f85(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmrc2b_error */
extern void T36f324(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T36f84(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.selected_feature */
extern T0* T1724f17(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.has_select */
extern T1 T1247f20(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.selected_feature */
extern T0* T1246f18(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.add_replicated_feature */
extern void T1724f33(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].force_last */
extern void T1949f8(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] ET_PARENT_FEATURE].put_right */
extern void T2712f4(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] ET_PARENT_FEATURE].make */
extern T0* T2712c3(GE_context* ac, T0* a1);
/* attached DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].make */
extern T0* T1949c7(GE_context* ac);
/* attached DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].set_internal_cursor */
extern void T1949f9(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.add_replicated_feature */
extern void T1246f37(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_seed */
extern T1 T1247f21(GE_context* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_selected */
extern void T1724f35(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.set_selected */
extern void T1246f39(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.set_replicated */
extern void T1724f34(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.put */
extern void T1730f13(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_ARRAY_ROUTINES [[attached] INTEGER_32].resize_with_default */
extern void T584f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [attached] ARRAY [[attached] INTEGER_32].conservative_resize_with_default */
extern void T402f18(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ET_FEATURE_IDS.integer_array_ */
extern T0* T1730f5(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.has */
extern T1 T1730f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.make */
extern T0* T1730c9(GE_context* ac, T6 a1);
/* ET_INHERITED_FEATURE.set_replicated */
extern void T1246f38(GE_context* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.has_selected_feature */
extern T1 T1724f18(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.has_selected_feature */
extern T1 T1246f19(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmrc2a_error */
extern void T53f324(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2a */
extern T0* T1418c880(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vmrc2a_error */
extern void T36f323(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1226f20(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1226f30(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].forth */
extern void T1936f16(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].cursor_forth */
extern void T1936f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].add_traversing_cursor */
extern void T1936f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE].set_next_cursor */
extern void T2341f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].remove_traversing_cursor */
extern void T1936f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE].set */
extern void T2341f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].put_last */
extern void T1937f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_FEATURE].force */
extern void T2344f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_PARENT_FEATURE].fill_with */
extern void T2345f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_PARENT_FEATURE].extend */
extern void T2345f7(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.seeded_feature */
extern T0* T1724f26(GE_context* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.seeded_feature */
extern T0* T1246f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].item_for_iteration */
extern T0* T1936f7(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].cursor_item */
extern T0* T1936f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].after */
extern T1 T1936f6(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].cursor_after */
extern T1 T1936f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].start */
extern void T1936f15(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].cursor_start */
extern void T1936f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].cursor_off */
extern T1 T1936f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE].off */
extern T1 T2341f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].make */
extern T0* T1937c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].set_internal_cursor */
extern void T1937f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_FEATURE].make */
extern T0* T2344f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_PARENT_FEATURE].make_empty */
extern T0* T2345c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_FEATURE].default_create */
extern T0* T2344c2(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].key_for_iteration */
extern T6 T1926f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].cursor_key */
extern T6 T1926f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].key_storage_item */
extern T6 T1926f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].item_for_iteration */
extern T0* T1926f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].cursor_item */
extern T0* T1926f41(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].item_storage_item */
extern T0* T1926f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].after */
extern T1 T1926f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].cursor_after */
extern T1 T1926f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].after */
extern T1 T2330f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].start */
extern void T1926f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].cursor_start */
extern void T1926f50(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].cursor_off */
extern T1 T1926f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].off */
extern T1 T2330f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].is_empty */
extern T1 T1926f28(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.item */
extern T6 T1730f6(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.record_replicable_feature */
extern void T1226f36(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].force_new */
extern void T1926f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].key_storage_put */
extern void T1926f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].item_storage_put */
extern void T1926f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE].force */
extern void T2334f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_REPLICABLE_FEATURE].fill_with */
extern void T2331f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_REPLICABLE_FEATURE].extend */
extern void T2331f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].slots_put */
extern void T1926f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].clashes_put */
extern void T1926f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].slots_item */
extern T6 T1926f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].hash_position */
extern T6 T1926f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].resize */
extern void T1926f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].clashes_resize */
extern void T1926f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].special_integer_ */
extern T0* T1926f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].key_storage_resize */
extern void T1926f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].item_storage_resize */
extern void T1926f68(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T2334f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T2331f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].slots_resize */
extern void T1926f67(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].new_capacity */
extern T6 T1926f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].replace_found_item */
extern void T1926f47(GE_context* ac, T0* C, T0* a1);
/* ET_REPLICATED_FEATURE.make */
extern T0* T1930c6(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].make */
extern T0* T1936c12(GE_context* ac);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].set_internal_cursor */
extern void T1936f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].new_cursor */
extern T0* T1936f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE].make */
extern T0* T2341c7(GE_context* ac, T0* a1);
/* ET_REPLICATED_FEATURE.put_feature */
extern void T1930f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].force_last */
extern void T1936f13(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] ET_ADAPTED_FEATURE].put_right */
extern void T2343f4(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] ET_ADAPTED_FEATURE].make */
extern T0* T2343c3(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].found_item */
extern T0* T1926f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].found */
extern T1 T1926f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].search */
extern void T1926f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].search_position */
extern void T1926f58(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1226f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vmss1a_error */
extern void T53f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmss1a */
extern T0* T1418c873(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T53f78(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss1a_error */
extern void T36f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T36f77(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs1a_error */
extern void T53f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs1a */
extern T0* T1418c872(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T53f77(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs1a_error */
extern void T36f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T36f76(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].wipe_out */
extern void T1924f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].slots_wipe_out */
extern void T1924f62(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].clashes_wipe_out */
extern void T1924f61(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].key_storage_wipe_out */
extern void T1924f60(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_CALL_NAME].keep_head */
extern void T2317f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CALL_NAME].set_count */
extern void T2317f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].item_storage_wipe_out */
extern void T1924f59(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].move_all_cursors_after */
extern void T1924f57(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME].set_next_cursor */
extern void T2322f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME].set_after */
extern void T2322f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].forth */
extern void T1924f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].cursor_forth */
extern void T1924f56(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].add_traversing_cursor */
extern void T1924f72(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME].set_position */
extern void T2322f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].remove_traversing_cursor */
extern void T1924f71(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].clashes_item */
extern T6 T1924f26(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdus1a_error */
extern void T53f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus1a */
extern T0* T1418c871(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T53f76(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus1a_error */
extern void T36f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T36f75(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].key_for_iteration */
extern T0* T1924f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].cursor_key */
extern T0* T1924f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].key_storage_item */
extern T0* T1924f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].item_for_iteration */
extern T1 T1924f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].cursor_item */
extern T1 T1924f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].item_storage_item */
extern T1 T1924f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].after */
extern T1 T1924f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].cursor_after */
extern T1 T1924f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME].after */
extern T1 T2322f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].start */
extern void T1924f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].cursor_start */
extern void T1924f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].cursor_off */
extern T1 T1924f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME].off */
extern T1 T2322f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].is_empty */
extern T1 T1924f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].wipe_out */
extern void T1923f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].slots_wipe_out */
extern void T1923f60(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].clashes_wipe_out */
extern void T1923f59(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].key_storage_wipe_out */
extern void T1923f58(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].item_storage_wipe_out */
extern void T1923f57(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].move_all_cursors_after */
extern void T1923f56(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME].set_next_cursor */
extern void T2320f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME].set_after */
extern void T2320f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].forth */
extern void T1923f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].cursor_forth */
extern void T1923f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].add_traversing_cursor */
extern void T1923f74(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME].set_position */
extern void T2320f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].remove_traversing_cursor */
extern void T1923f73(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].clashes_item */
extern T6 T1923f22(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel2a_error */
extern void T53f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vlel2a */
extern T0* T1418c870(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T53f75(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel2a_error */
extern void T36f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T36f74(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].item_for_iteration */
extern T0* T1923f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].cursor_item */
extern T0* T1923f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].item_storage_item */
extern T0* T1923f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].after */
extern T1 T1923f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].cursor_after */
extern T1 T1923f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME].after */
extern T1 T2320f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].start */
extern void T1923f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].cursor_start */
extern void T1923f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].cursor_off */
extern T1 T1923f34(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME].off */
extern T1 T2320f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].wipe_out */
extern void T1920f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].slots_wipe_out */
extern void T1920f59(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].clashes_wipe_out */
extern void T1920f58(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].key_storage_wipe_out */
extern void T1920f57(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].item_storage_wipe_out */
extern void T1920f56(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_RENAME].keep_head */
extern void T2309f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_RENAME].set_count */
extern void T2309f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].move_all_cursors_after */
extern void T1920f55(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME].set_next_cursor */
extern void T2308f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME].set_after */
extern void T2308f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].forth */
extern void T1920f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].cursor_forth */
extern void T1920f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].add_traversing_cursor */
extern void T1920f74(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME].set_position */
extern void T2308f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].remove_traversing_cursor */
extern void T1920f73(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].clashes_item */
extern T6 T1920f22(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc1a_error */
extern void T53f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vhrc1a */
extern T0* T1418c869(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T53f74(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc1a_error */
extern void T36f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T36f73(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].item_for_iteration */
extern T0* T1920f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].cursor_item */
extern T0* T1920f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].item_storage_item */
extern T0* T1920f36(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].after */
extern T1 T1920f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].cursor_after */
extern T1 T1920f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME].after */
extern T1 T2308f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].start */
extern void T1920f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].cursor_start */
extern void T1920f53(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].cursor_off */
extern T1 T1920f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME].off */
extern T1 T2308f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].force_last_new */
extern void T1925f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].key_storage_put */
extern void T1925f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ALIAS_NAME].force */
extern void T1909f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ALIAS_NAME].fill_with */
extern void T1910f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ALIAS_NAME].extend */
extern void T1910f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].item_storage_put */
extern void T1925f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME].force */
extern void T1905f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FEATURE_NAME].fill_with */
extern void T1903f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FEATURE_NAME].extend */
extern void T1903f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].slots_put */
extern void T1925f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].clashes_put */
extern void T1925f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].slots_item */
extern T6 T1925f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].hash_position */
extern T6 T1925f27(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].resize */
extern void T1925f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].clashes_resize */
extern void T1925f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].special_integer_ */
extern T0* T1925f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].key_storage_resize */
extern void T1925f56(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ALIAS_NAME].aliased_resized_area */
extern T0* T1909f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ALIAS_NAME].aliased_resized_area */
extern T0* T1910f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].item_storage_resize */
extern void T1925f55(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1905f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1903f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].key_storage_item */
extern T0* T1925f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].clashes_item */
extern T6 T1925f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].slots_resize */
extern void T1925f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].new_capacity */
extern T6 T1925f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].has */
extern T1 T1925f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].search_position */
extern void T1925f40(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_TESTER.test */
extern T1 T1222f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].put_last_new */
extern void T1218f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].key_storage_put */
extern void T1218f86(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item_storage_put */
extern void T1218f85(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE].force */
extern void T1904f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FLATTENED_FEATURE].fill_with */
extern void T1897f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FLATTENED_FEATURE].extend */
extern void T1897f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].slots_put */
extern void T1218f79(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].clashes_put */
extern void T1218f80(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].compress */
extern void T1218f84(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].key_storage_keep_head */
extern void T1218f89(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item_storage_keep_head */
extern void T1218f88(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].move_all_cursors */
extern void T1218f87(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1226f24(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_next */
extern void T1246f31(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.make */
extern T0* T1246c29(GE_context* ac, T0* a1);
/* ET_INHERITED_FEATURE.reset */
extern void T1246f30(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.put_parent_feature */
extern void T1724f30(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_IDS.cloned_object */
extern T0* T1730f4(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.twin */
extern T0* T1730f3(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.copy */
extern void T1730f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_ARRAY_ROUTINES [[attached] INTEGER_32].cloned_array */
extern T0* T584f1(GE_context* ac, T0* C, T0* a1);
/* [attached] ARRAY [[attached] INTEGER_32].twin */
extern T0* T402f9(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] INTEGER_32].copy */
extern void T402f19(GE_context* ac, T0* C, T0* a1);
/* [attached] SPECIAL [[attached] INTEGER_32].twin */
extern T0* T149f7(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.has_seed */
extern T1 T1724f21(GE_context* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.is_other_seeds_shared */
extern T1 T1724f20(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.set_merged_feature */
extern void T1247f29(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.put_parent_feature */
extern void T1246f34(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.has_seed */
extern T1 T1246f22(GE_context* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.is_other_seeds_shared */
extern T1 T1246f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].replace_found_item */
extern void T1218f76(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1226f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.set_next */
extern void T1724f29(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.reset */
extern void T1724f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].found_item */
extern T0* T1925f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].item_storage_item */
extern T0* T1925f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].found */
extern T1 T1925f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].search */
extern void T1925f39(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_select_name */
extern void T1247f26(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_redefine_name */
extern void T1247f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].replace_found_item */
extern void T1924f46(GE_context* ac, T0* C, T1 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].item_storage_put */
extern void T1924f54(GE_context* ac, T0* C, T1 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].found_item */
extern T1 T1924f25(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.set_undefine_name */
extern void T1247f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].found_key */
extern T0* T1924f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].found */
extern T1 T1924f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].search */
extern void T1924f45(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].search_position */
extern void T1924f53(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].hash_position */
extern T6 T1924f28(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_NAME_TESTER.test */
extern T1 T1921f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].slots_item */
extern T6 T1924f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].remove_found_item */
extern void T1923f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].remove_position */
extern void T1923f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].key_storage_put */
extern void T1923f72(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].item_storage_put */
extern void T1923f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME].force */
extern void T2319f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CALL_NAME].fill_with */
extern void T2317f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CALL_NAME].extend */
extern void T2317f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].key_storage_keep_head */
extern void T1923f71(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].item_storage_keep_head */
extern void T1923f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].clashes_put */
extern void T1923f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].slots_put */
extern void T1923f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].move_cursors_forth */
extern void T1923f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].search_position */
extern void T1923f52(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].internal_set_key_equality_tester */
extern void T1923f68(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].key_equality_tester */
extern T0* T1923f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].slots_item */
extern T6 T1923f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].hash_position */
extern T6 T1923f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].key_storage_item */
extern T0* T1923f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].found_item */
extern T0* T1923f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].found */
extern T1 T1923f17(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].search */
extern void T1923f39(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_new_name */
extern void T1247f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].remove_found_item */
extern void T1920f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].remove_position */
extern void T1920f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].key_storage_put */
extern void T1920f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].item_storage_put */
extern void T1920f66(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_RENAME].force */
extern void T2318f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_RENAME].fill_with */
extern void T2309f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_RENAME].extend */
extern void T2309f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].key_storage_keep_head */
extern void T1920f72(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].item_storage_keep_head */
extern void T1920f71(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].clashes_put */
extern void T1920f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].slots_put */
extern void T1920f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].move_cursors_forth */
extern void T1920f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].search_position */
extern void T1920f50(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].internal_set_key_equality_tester */
extern void T1920f69(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].slots_item */
extern T6 T1920f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].hash_position */
extern T6 T1920f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].key_storage_item */
extern T0* T1920f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].found_item */
extern T0* T1920f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].found */
extern T1 T1920f33(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.current_system */
extern T0* T1226f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].search */
extern void T1920f42(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1226f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_next */
extern void T1247f28(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.reset */
extern void T1247f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].resize */
extern void T1218f74(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].clashes_resize */
extern void T1218f83(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].special_integer_ */
extern T0* T1218f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].key_storage_resize */
extern void T1218f82(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item_storage_resize */
extern void T1218f81(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1904f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1897f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].slots_resize */
extern void T1218f78(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_select_table */
extern void T1226f35(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss2a_error */
extern void T53f323(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vmss2a */
extern T0* T1418c879(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T53f84(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss2a_error */
extern void T36f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T36f83(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].put_new */
extern void T1924f51(GE_context* ac, T0* C, T1 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].key_storage_put */
extern void T1924f69(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].slots_put */
extern void T1924f64(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].clashes_put */
extern void T1924f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.feature_name */
extern T0* T1935f6(GE_context* ac, T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.item */
extern T0* T1935f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].resize */
extern void T1924f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].clashes_resize */
extern void T1924f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].special_integer_ */
extern T0* T1924f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].key_storage_resize */
extern void T1924f67(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME].aliased_resized_area */
extern T0* T2319f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_CALL_NAME].aliased_resized_area */
extern T0* T2317f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].item_storage_resize */
extern void T1924f66(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].slots_resize */
extern void T1924f63(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_redefine_table */
extern void T1226f34(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs3a_error */
extern void T53f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdrs3a */
extern T0* T1418c878(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T53f83(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs3a_error */
extern void T36f321(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T36f82(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_undefine_table */
extern void T1226f33(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus4a_error */
extern void T53f321(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdus4a */
extern T0* T1418c877(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T53f82(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus4a_error */
extern void T36f320(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T36f81(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].is_empty */
extern T1 T1923f32(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_export_table */
extern void T1226f32(GE_context* ac, T0* C, T0* a1);
extern T1 T1226f32ot1(T0* a1, T0** a2);
extern T1 T1226f32ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vlel3a_error */
extern void T53f320(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel3a */
extern T0* T1418c876(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T53f81(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel3a_error */
extern void T36f319(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T36f80(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].put_new */
extern void T1923f45(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.feature_name */
extern T0* T1934f5(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_EXPORT.item */
extern T0* T1934f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].resize */
extern void T1923f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].clashes_resize */
extern void T1923f66(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].special_integer_ */
extern T0* T1923f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].key_storage_resize */
extern void T1923f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].item_storage_resize */
extern void T1923f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].slots_resize */
extern void T1923f61(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel1a_error */
extern void T53f319(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel1a */
extern T0* T1418c875(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T53f80(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel1a_error */
extern void T36f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T36f79(GE_context* ac, T0* C, T0* a1);
/* ET_EXPORT_LIST.item */
extern T0* T1932f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].is_empty */
extern T1 T1920f32(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_rename_table */
extern void T1226f31(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc2a_error */
extern void T53f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc2a */
extern T0* T1418c874(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T53f79(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc2a_error */
extern void T36f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T36f78(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].put_new */
extern void T1920f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_RENAME_LIST.rename_pair */
extern T0* T1931f6(GE_context* ac, T0* C, T6 a1);
/* ET_RENAME.rename_pair */
extern T0* T1731f5(GE_context* ac, T0* C);
/* ET_RENAME_LIST.item */
extern T0* T1931f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].resize */
extern void T1920f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].clashes_resize */
extern void T1920f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].special_integer_ */
extern T0* T1920f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].key_storage_resize */
extern void T1920f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].item_storage_resize */
extern void T1920f63(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_RENAME].aliased_resized_area */
extern T0* T2318f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_RENAME].aliased_resized_area */
extern T0* T2309f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].slots_resize */
extern void T1920f60(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1226f27(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn0a_error */
extern void T53f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0a */
extern T0* T1418c868(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T53f57(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn0a_error */
extern void T36f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T36f56(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1227f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].wipe_out */
extern void T1941f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1941f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1941f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1941f43(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_DOTNET_FEATURE].keep_head */
extern void T2347f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DOTNET_FEATURE].set_count */
extern void T2347f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1941f42(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].keep_head */
extern void T2352f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].set_count */
extern void T2352f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1941f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].set_next_cursor */
extern void T2357f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].set_after */
extern void T2357f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].wipe_out */
extern void T1939f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1939f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1939f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1939f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1939f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1939f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_FEATURE].set_next_cursor */
extern void T2348f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_FEATURE].set_after */
extern void T2348f7(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_any_features */
extern void T1227f23(GE_context* ac, T0* C, T0* a1);
extern T1 T1227f23ot1(T0* a1, T0** a2);
extern T1 T1227f23ot2(T0* a1, T0** a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1227f17(GE_context* ac, T0* C, T0* a1);
/* ET_RENAME.make */
extern T0* T1731c6(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_keyword */
extern T0* T94f695(GE_context* ac, T0* C);
/* ET_KEYWORD.make_as */
extern T0* T539c58(GE_context* ac);
/* ET_RENAME.tokens */
extern T0* T1731f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].has */
extern T1 T1218f40(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1227f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_system */
extern T0* T1227f15(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_universe */
extern T0* T1227f13(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features_from_parents */
extern void T1227f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1227f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1227f14(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1227f25(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].forth */
extern void T1943f15(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].cursor_forth */
extern void T1943f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].add_traversing_cursor */
extern void T1943f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE].set_next_cursor */
extern void T2359f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].remove_traversing_cursor */
extern void T1943f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE].set */
extern void T2359f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].item_for_iteration */
extern T0* T1943f7(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].cursor_item */
extern T0* T1943f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].after */
extern T1 T1943f6(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].cursor_after */
extern T1 T1943f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].start */
extern void T1943f14(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].cursor_start */
extern void T1943f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].cursor_off */
extern T1 T1943f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE].off */
extern T1 T2359f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].found_item */
extern T0* T1941f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1941f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].found */
extern T1 T1941f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].search */
extern void T1941f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].search_position */
extern void T1941f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].hash_position */
extern T6 T1941f22(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.test */
extern T1 T1938f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1941f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].clashes_item */
extern T6 T1941f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].slots_item */
extern T6 T1941f23(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_feature */
extern void T1227f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1227f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].found_item */
extern T0* T1939f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1939f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].found */
extern T1 T1939f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].search */
extern void T1939f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].search_position */
extern void T1939f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].hash_position */
extern T6 T1939f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1939f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].clashes_item */
extern T6 T1939f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].key_equality_tester */
extern T0* T1939f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].slots_item */
extern T6 T1939f20(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1227f21(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_feature */
extern void T1227f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].force_last */
extern void T1939f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].slots_put */
extern void T1939f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].clashes_put */
extern void T1939f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].new_capacity */
extern T6 T1939f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].item_storage_put */
extern void T1939f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE].force */
extern void T2349f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DOTNET_FEATURE].fill_with */
extern void T2347f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DOTNET_FEATURE].extend */
extern void T2347f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].force_last_new */
extern void T1941f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].key_storage_put */
extern void T1941f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].item_storage_put */
extern void T1941f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].force */
extern void T2358f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].fill_with */
extern void T2352f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].extend */
extern void T2352f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].slots_put */
extern void T1941f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].clashes_put */
extern void T1941f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].resize */
extern void T1941f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].clashes_resize */
extern void T1941f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1941f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].key_storage_resize */
extern void T1941f55(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T2349f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T2347f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].item_storage_resize */
extern void T1941f54(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T2358f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T2352f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].slots_resize */
extern void T1941f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].new_capacity */
extern T6 T1941f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].make */
extern T0* T1943c11(GE_context* ac);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1943f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].new_cursor */
extern T0* T1943f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE].make */
extern T0* T2359c7(GE_context* ac, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].force_last */
extern void T1943f12(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] ET_DOTNET_FEATURE].put_right */
extern void T2361f4(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] ET_DOTNET_FEATURE].make */
extern T0* T2361c3(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].force_last_new */
extern void T1218f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].new_capacity */
extern T6 T1218f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].resize */
extern void T1939f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].clashes_resize */
extern void T1939f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1939f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].key_storage_resize */
extern void T1939f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].item_storage_resize */
extern void T1939f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].slots_resize */
extern void T1939f48(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.resolve_signatures_unfolded_tuple_actual_parameters */
extern void T363f20(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T363f24(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_type */
extern void T1240f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INTERFACE_CHECKER.check_qualified_anchored_signatures_validity */
extern void T363f19(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_signatures_validity */
extern void T1239f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.reset_fatal_error */
extern void T1239f10(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.has_flattening_error */
extern T1 T95f56(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.set_fatal_error */
extern void T363f17(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.error_handler */
extern T0* T363f13(GE_context* ac, T0* C);
/* ET_CLASS.set_interface_checked */
extern void T95f249(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.process_class */
extern void T362f30(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.internal_process_class */
extern void T362f32(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_features */
extern void T362f35(GE_context* ac, T0* C);
extern T1 T362f35ot1(T0* a1, T0** a2);
extern T1 T362f35ot2(T0* a1, T0** a2);
/* ET_FEATURE_FLATTENER.check_kernel_features_validity */
extern void T362f46(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.forth_feature_name */
extern T0* T94f237(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.after_feature_name */
extern T0* T94f236(GE_context* ac, T0* C);
/* ET_CLASS.is_iteration_cursor_class */
extern T1 T95f120(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_cursor_feature_name */
extern T0* T94f235(GE_context* ac, T0* C);
/* ET_CLASS.is_iterable_class */
extern T1 T95f119(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dispose_feature_name */
extern T0* T94f234(GE_context* ac, T0* C);
/* ET_CLASS.is_disposable_class */
extern T1 T95f118(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.call_feature_name */
extern T0* T94f233(GE_context* ac, T0* C);
/* ET_CLASS.is_routine_class */
extern T1 T95f117(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe5a_error */
extern void T53f277(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe5a */
extern T0* T1418c833(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T53f55(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe5a_error */
extern void T36f276(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T36f54(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_equal_feature_name */
extern T0* T94f232(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.copy_feature_name */
extern T0* T94f231(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.current_system */
extern T0* T362f27(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_convert_validity */
extern void T362f45(GE_context* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.convert_feature */
extern T0* T1726f6(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_PROCEDURE.convert_feature */
extern T0* T2076f6(GE_context* ac, T0* C);
/* ET_CONVERT_FUNCTION.convert_feature */
extern T0* T2075f5(GE_context* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.item */
extern T0* T1726f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_creators_validity */
extern void T362f44(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcp2a_error */
extern void T53f276(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp2a */
extern T0* T1418c832(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T53f54(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp2a_error */
extern void T36f275(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T36f53(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp2b_error */
extern void T53f275(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp2b */
extern T0* T1418c831(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp2b_error */
extern void T36f274(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6a_error */
extern void T53f274(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcc6a */
extern T0* T1418c830(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T53f53(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc6a_error */
extern void T36f273(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T36f52(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp3b_error */
extern void T53f273(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3b */
extern T0* T1418c829(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3b_error */
extern void T36f272(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcp3a_error */
extern void T53f272(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3a */
extern T0* T1418c828(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3a_error */
extern void T36f271(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.feature_name */
extern T0* T1625f9(GE_context* ac, T0* C, T6 a1);
/* ET_CREATOR.item */
extern T0* T1625f15(GE_context* ac, T0* C, T6 a1);
/* ET_CREATOR_LIST.item */
extern T0* T1537f7(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp1a_error */
extern void T53f271(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp1a */
extern T0* T1418c827(GE_context* ac, T0* a1, T0* a2);
/* ET_CREATOR.position */
extern T0* T1625f8(GE_context* ac, T0* C);
/* ET_CREATOR.first */
extern T0* T1625f14(GE_context* ac, T0* C);
/* ET_CLIENTS.position */
extern T0* T2040f13(GE_context* ac, T0* C);
/* ET_CLIENT.position */
extern T0* T716f5(GE_context* ac, T0* C);
/* ET_CLIENTS.first */
extern T0* T2040f15(GE_context* ac, T0* C);
/* ET_CLIENTS.is_empty */
extern T1 T2040f14(GE_context* ac, T0* C);
/* ET_CREATOR.clients_clause */
extern T0* T1625f13(GE_context* ac, T0* C);
extern T1 T1625f13ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T53f52(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp1a_error */
extern void T36f270(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T36f51(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.first */
extern T0* T1537f6(GE_context* ac, T0* C);
/* ET_CREATOR_LIST.is_empty */
extern T1 T1537f5(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_assigners_validity */
extern void T362f43(GE_context* ac, T0* C);
extern T1 T362f43ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vfac4a_error */
extern void T53f270(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_VALIDITY_ERROR.make_vfac4a */
extern T0* T1418c826(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_NULL_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T53f51(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac4a_error */
extern void T36f269(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T36f50(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac3a_error */
extern void T53f269(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfac3a */
extern T0* T1418c825(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T53f50(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac3a_error */
extern void T36f268(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T36f49(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac2a_error */
extern void T53f268(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfac2a */
extern T0* T1418c824(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T53f49(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac2a_error */
extern void T36f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T36f48(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1b_error */
extern void T53f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1b */
extern T0* T1418c823(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T53f48(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac1b_error */
extern void T36f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T36f47(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1a_error */
extern void T53f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1a */
extern T0* T1418c822(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfac1a_error */
extern void T36f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcch2a_error */
extern void T53f262(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.set_ise_reported */
extern void T1418f818(GE_context* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vcch2a */
extern T0* T1418c817(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T53f44(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch2a_error */
extern void T36f261(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T36f43(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1a_error */
extern void T53f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1a */
extern T0* T1418c816(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T53f43(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch1a_error */
extern void T36f260(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T36f42(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1b_error */
extern void T53f260(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1b */
extern T0* T1418c815(GE_context* ac, T0* a1, T0* a2);
/* ET_INHERITED_FEATURE.name */
extern T0* T1246f23(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vcch1b_error */
extern void T36f259(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].go_after */
extern void T1218f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_go_after */
extern void T1218f65(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_has_deferred_features */
extern void T95f263(GE_context* ac, T0* C, T1 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].wipe_out */
extern void T1221f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].slots_wipe_out */
extern void T1221f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].clashes_wipe_out */
extern void T1221f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1221f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1221f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].move_all_cursors_after */
extern void T1221f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].set_next_cursor */
extern void T1912f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].set_after */
extern void T1912f7(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_signature_validity */
extern void T362f42(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].force_last_new */
extern void T1221f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].key_storage_put */
extern void T1221f46(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].item_storage_put */
extern void T1221f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].slots_put */
extern void T1221f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].clashes_put */
extern void T1221f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].slots_item */
extern T6 T1221f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].hash_position */
extern T6 T1221f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].resize */
extern void T1221f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].clashes_resize */
extern void T1221f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].special_integer_ */
extern T0* T1221f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].key_storage_resize */
extern void T1221f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].item_storage_resize */
extern void T1221f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].key_storage_item */
extern T0* T1221f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].clashes_item */
extern T6 T1221f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].slots_resize */
extern void T1221f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].new_capacity */
extern T6 T1221f30(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1f_error */
extern void T53f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1f */
extern T0* T1418c814(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.alias_lower_name */
extern T0* T1418f85(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T53f41(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav1f_error */
extern void T36f258(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T36f40(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1c_error */
extern void T53f258(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1c */
extern T0* T1418c813(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1c_error */
extern void T36f257(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4b_error */
extern void T53f257(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4b */
extern T0* T1418c812(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T53f40(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav4b_error */
extern void T36f256(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T36f39(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav2b_error */
extern void T53f256(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2b */
extern T0* T1418c811(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T53f39(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav2b_error */
extern void T36f255(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T36f38(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1g_error */
extern void T53f255(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1g */
extern T0* T1418c810(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.alias_name */
extern T0* T1247f18(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vfav1g_error */
extern void T36f254(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1d_error */
extern void T53f254(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1d */
extern T0* T1418c809(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1d_error */
extern void T36f253(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4c_error */
extern void T53f253(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4c */
extern T0* T1418c808(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4c_error */
extern void T36f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2c_error */
extern void T53f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2c */
extern T0* T1418c807(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2c_error */
extern void T36f251(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1h_error */
extern void T53f251(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1h */
extern T0* T1418c806(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1h_error */
extern void T36f250(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1e_error */
extern void T53f250(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1e */
extern T0* T1418c805(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1e_error */
extern void T36f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4d_error */
extern void T53f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4d */
extern T0* T1418c804(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4d_error */
extern void T36f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2d_error */
extern void T53f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2d */
extern T0* T1418c803(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2d_error */
extern void T36f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].found_item */
extern T0* T1221f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].item_storage_item */
extern T0* T1221f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].found */
extern T1 T1221f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].search */
extern void T1221f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].search_position */
extern void T1221f40(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_redeclared_signatures_checked */
extern void T95f262(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_FLATTENER.check_anchored_signatures */
extern void T362f41(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.check_signatures */
extern void T1230f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].wipe_out */
extern void T1944f12(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].wipe_out */
extern void T1345f15(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].keep_head */
extern void T1963f8(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].set_count */
extern void T1963f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].wipe_out */
extern void T2362f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].slots_wipe_out */
extern void T2362f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].clashes_wipe_out */
extern void T2362f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].key_storage_wipe_out */
extern void T2362f39(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_LIKE_FEATURE].keep_head */
extern void T2363f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LIKE_FEATURE].set_count */
extern void T2363f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].item_storage_wipe_out */
extern void T2362f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].move_all_cursors_after */
extern void T2362f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].set_next_cursor */
extern void T2558f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].set_after */
extern void T2558f7(GE_context* ac, T0* C);
/* attached DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].wipe_out */
extern void T1946f12(GE_context* ac, T0* C);
/* attached DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].move_all_cursors_after */
extern void T1946f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].set_next_cursor */
extern void T2365f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].set_after */
extern void T2365f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].reset */
extern void T1944f14(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat2a_error */
extern void T53f326(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat2a */
extern T0* T1418c882(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].forth */
extern void T2365f14(GE_context* ac, T0* C);
/* attached DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].cursor_forth */
extern void T1946f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].set_position */
extern void T2365f15(GE_context* ac, T0* C, T6 a1);
/* attached DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].add_traversing_cursor */
extern void T1946f19(GE_context* ac, T0* C, T0* a1);
/* attached DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].remove_traversing_cursor */
extern void T1946f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].go_after */
extern void T2365f13(GE_context* ac, T0* C);
/* attached DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].cursor_go_after */
extern void T1946f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].off */
extern T1 T2365f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].before */
extern T1 T2365f8(GE_context* ac, T0* C);
/* ET_CLASS.seeded_feature */
extern T0* T95f200(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].item */
extern T0* T2365f6(GE_context* ac, T0* C);
/* attached DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].cursor_item */
extern T0* T1946f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].after */
extern T1 T2365f4(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].start */
extern void T2365f12(GE_context* ac, T0* C);
/* attached DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].cursor_start */
extern void T1946f15(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T53f86(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat2a_error */
extern void T36f325(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T36f85(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1230f6(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1230f10(GE_context* ac, T0* C);
/* attached DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].is_empty */
extern T1 T1946f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].sort */
extern void T1944f11(GE_context* ac, T0* C);
/* attached DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].put_last */
extern void T1946f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE].force */
extern void T2364f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LIKE_FEATURE].fill_with */
extern void T2363f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LIKE_FEATURE].extend */
extern void T2363f10(GE_context* ac, T0* C, T0* a1);
/* attached DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].item */
extern T0* T1946f8(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7b_error */
extern void T53f247(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7b */
extern T0* T1418c802(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd7_error */
extern T1 T53f42(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd7b_error */
extern void T36f246(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd7_error */
extern T1 T36f41(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7a_error */
extern void T53f246(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7a */
extern T0* T1418c801(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd7a_error */
extern void T36f245(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1b_error */
extern void T53f245(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1b */
extern T0* T1418c800(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1b_error */
extern void T36f244(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1a_error */
extern void T53f244(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1a */
extern T0* T1418c799(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1a_error */
extern void T36f243(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav4a_error */
extern void T53f243(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav4a */
extern T0* T1418c798(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav4a_error */
extern void T36f242(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav2a_error */
extern void T53f242(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav2a */
extern T0* T1418c797(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav2a_error */
extern void T36f241(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd6a_error */
extern void T53f241(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd6a */
extern T0* T1418c796(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T53f38(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd6a_error */
extern void T36f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T36f37(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd5a_error */
extern void T53f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd5a */
extern T0* T1418c795(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T53f37(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd5a_error */
extern void T36f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T36f36(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd4a_error */
extern void T53f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd4a */
extern T0* T1418c794(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T53f36(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd4a_error */
extern void T36f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T36f35(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T362f40(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_type */
extern void T1229f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.check_signature_vtct_validity */
extern void T362f39(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_vtct_validity */
extern void T1231f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.resolve_identifier_signature */
extern void T362f38(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrfa0a_error */
extern void T53f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrfa0a */
extern T0* T1418c821(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T53f47(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrfa0a_error */
extern void T36f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T36f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item */
extern T0* T1218f41(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0a_error */
extern void T53f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0a */
extern T0* T1418c820(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vreg_error */
extern T1 T53f46(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0a_error */
extern void T36f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vreg_error */
extern T1 T36f45(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_type */
extern void T1228f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].wipe_out */
extern void T864f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].move_all_cursors_after */
extern void T864f23(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].set_next_cursor */
extern void T1876f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].set_after */
extern void T1876f12(GE_context* ac, T0* C);
/* ET_CLASS.set_procedures */
extern void T95f261(GE_context* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.set_declared_count */
extern void T352f10(GE_context* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.put_first */
extern void T352f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PROCEDURE].force */
extern void T1576f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_PROCEDURE].fill_with */
extern void T1575f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_PROCEDURE].extend */
extern void T1575f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].item */
extern T0* T864f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_QUICK_SORTER [[attached] ET_PROCEDURE].subsort */
extern void T1722f3(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] DS_QUICK_SORTER [[attached] ET_PROCEDURE].subsort_with_comparator */
extern void T1722f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].swap */
extern void T864f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].replace */
extern void T864f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_SEEDED_PROCEDURE_COMPARATOR.less_than */
extern T1 T2037f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.procedure_sorter */
extern T0* T362f26(GE_context* ac, T0* C);
/* [attached] DS_QUICK_SORTER [[attached] ET_PROCEDURE].make */
extern T0* T1722c2(GE_context* ac, T0* a1);
/* ET_SEEDED_PROCEDURE_COMPARATOR.make */
extern T0* T2037c2(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].wipe_out */
extern void T863f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].move_all_cursors_after */
extern void T863f23(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].set_next_cursor */
extern void T1874f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].set_after */
extern void T1874f12(GE_context* ac, T0* C);
/* ET_CLASS.set_queries */
extern void T95f260(GE_context* ac, T0* C, T0* a1);
/* ET_QUERY_LIST.set_declared_count */
extern void T351f10(GE_context* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.put_first */
extern void T351f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_QUERY].force */
extern void T1574f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_QUERY].fill_with */
extern void T1572f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_QUERY].extend */
extern void T1572f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].item */
extern T0* T863f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_QUICK_SORTER [[attached] ET_QUERY].subsort */
extern void T1721f3(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] DS_QUICK_SORTER [[attached] ET_QUERY].subsort_with_comparator */
extern void T1721f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].swap */
extern void T863f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].replace */
extern void T863f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_SEEDED_QUERY_COMPARATOR.less_than */
extern T1 T2034f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.query_sorter */
extern T0* T362f25(GE_context* ac, T0* C);
/* [attached] DS_QUICK_SORTER [[attached] ET_QUERY].make */
extern T0* T1721c2(GE_context* ac, T0* a1);
/* ET_SEEDED_QUERY_COMPARATOR.make */
extern T0* T2034c2(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].back */
extern void T1218f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_back */
extern void T1218f64(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].set_before */
extern void T1896f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].force_last */
extern void T863f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].resize */
extern void T863f24(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_QUERY].aliased_resized_area */
extern T0* T1574f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_QUERY].aliased_resized_area */
extern T0* T1572f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].new_capacity */
extern T6 T863f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].extendible */
extern T1 T863f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].force_last */
extern void T864f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].resize */
extern void T864f24(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PROCEDURE].aliased_resized_area */
extern T0* T1576f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_PROCEDURE].aliased_resized_area */
extern T0* T1575f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].new_capacity */
extern T6 T864f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].extendible */
extern T1 T864f10(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.flatten_feature */
extern void T362f37(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_inherited_feature */
extern void T362f49(GE_context* ac, T0* C, T0* a1);
extern T1 T362f49ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vdjr2b_error */
extern void T53f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2b */
extern T0* T1418c840(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T53f59(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr2b_error */
extern void T36f283(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T36f58(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn2b_error */
extern void T53f283(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2b */
extern T0* T1418c839(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T53f58(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn2b_error */
extern void T36f282(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T36f57(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2a_error */
extern void T53f282(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2a */
extern T0* T1418c838(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr2a_error */
extern void T36f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn2a_error */
extern void T53f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2a */
extern T0* T1418c837(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn2a_error */
extern void T36f280(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.process_replicated_seeds */
extern void T362f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_REDECLARED_FEATURE.set_other_seeds */
extern void T1724f32(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_other_seeds */
extern void T1246f36(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.set_first_seed */
extern void T1724f31(GE_context* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_first_seed */
extern void T1246f35(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.replace */
extern void T1730f10(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.first */
extern T6 T1730f8(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.remove */
extern void T1730f11(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.register_feature */
extern void T95f264(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.extended_name */
extern T0* T1247f19(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.make */
extern T0* T1728c7(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].wipe_out */
extern void T1236f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].slots_wipe_out */
extern void T1236f60(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].clashes_wipe_out */
extern void T1236f59(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].key_storage_wipe_out */
extern void T1236f58(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].item_storage_wipe_out */
extern void T1236f57(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].move_all_cursors_after */
extern void T1236f56(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32].set_next_cursor */
extern void T1951f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32].set_after */
extern void T1951f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].forth */
extern void T1236f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].cursor_forth */
extern void T1236f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].add_traversing_cursor */
extern void T1236f71(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32].set_position */
extern void T1951f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].remove_traversing_cursor */
extern void T1236f70(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].clashes_item */
extern T6 T1236f23(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_LIST.put_first */
extern void T533f6(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_LIST.fixed_array */
extern T0* T533f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].item_for_iteration */
extern T0* T1236f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].cursor_item */
extern T0* T1236f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].item_storage_item */
extern T0* T1236f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].after */
extern T1 T1236f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].cursor_after */
extern T1 T1236f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32].after */
extern T1 T1951f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].start */
extern void T1236f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].cursor_start */
extern void T1236f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].cursor_off */
extern T1 T1236f34(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32].off */
extern T1 T1951f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].is_empty */
extern T1 T1236f33(GE_context* ac, T0* C);
/* ET_FEATURE_LIST.make_with_capacity */
extern T0* T533c5(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].remove */
extern void T1236f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].remove_position */
extern void T1236f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].key_storage_put */
extern void T1236f52(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].item_storage_put */
extern void T1236f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].key_storage_keep_head */
extern void T1236f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].item_storage_keep_head */
extern void T1236f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].clashes_put */
extern void T1236f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].slots_put */
extern void T1236f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].move_cursors_forth */
extern void T1236f67(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].internal_set_key_equality_tester */
extern void T1236f66(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].slots_item */
extern T6 T1236f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].hash_position */
extern T6 T1236f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].key_storage_item */
extern T6 T1236f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].search_position */
extern void T1236f47(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENTS.same_clients */
extern T1 T2040f5(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.same_clients */
extern T1 T700f7(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.clients */
extern T0* T1247f16(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.has_rename */
extern T1 T1247f15(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmfn0c_error */
extern void T53f280(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0c */
extern T0* T1418c836(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0c_error */
extern void T36f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.same_version */
extern T1 T1247f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].force_last */
extern void T1236f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].resize */
extern void T1236f49(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].clashes_resize */
extern void T1236f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].special_integer_ */
extern T0* T1236f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].key_storage_resize */
extern void T1236f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].item_storage_resize */
extern void T1236f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].slots_resize */
extern void T1236f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].new_capacity */
extern T6 T1236f22(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_no_redeclaration_validity */
extern void T362f54(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs4a_error */
extern void T53f295(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdrs4a */
extern T0* T1418c852(GE_context* ac, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.feature_lower_name */
extern T0* T1418f132(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T53f62(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs4a_error */
extern void T36f294(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T36f61(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_redefine */
extern T1 T1247f13(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_redefine_clause_validity */
extern void T362f57(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2b_error */
extern void T53f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2b */
extern T0* T1418c863(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T53f69(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs2b_error */
extern void T36f305(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T36f68(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2a_error */
extern void T53f305(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2a */
extern T0* T1418c862(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs2a_error */
extern void T36f304(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.check_undefine_clause_validity */
extern void T362f56(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2b_error */
extern void T53f304(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2b */
extern T0* T1418c861(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T53f68(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus2b_error */
extern void T36f303(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T36f67(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2a_error */
extern void T53f303(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2a */
extern T0* T1418c860(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdus2a_error */
extern void T36f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdus3a_error */
extern void T53f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus3a */
extern T0* T1418c859(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T53f67(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus3a_error */
extern void T36f301(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T36f66(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_rename_clause_validity */
extern void T362f55(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4d_error */
extern void T53f301(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4d */
extern T0* T1418c858(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T53f66(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc4d_error */
extern void T36f300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T36f65(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4c_error */
extern void T53f300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4c */
extern T0* T1418c857(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4c_error */
extern void T36f299(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vfav4e_error */
extern void T53f299(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4e */
extern T0* T1418c856(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4e_error */
extern void T36f298(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4b_error */
extern void T53f298(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4b */
extern T0* T1418c855(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4b_error */
extern void T36f297(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4a_error */
extern void T53f297(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4a */
extern T0* T1418c854(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4a_error */
extern void T36f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc5a_error */
extern void T53f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc5a */
extern T0* T1418c853(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T53f65(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc5a_error */
extern void T36f295(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T36f64(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.is_replicated */
extern T1 T1246f20(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T362f28(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T362f28ac1(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].wipe_out */
extern void T1224f16(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_CLIENT_LIST].keep_head */
extern void T1914f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CLIENT_LIST].set_count */
extern void T1914f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].move_all_cursors_after */
extern void T1224f21(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST].set_next_cursor */
extern void T1915f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST].set_after */
extern void T1915f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].wipe_out */
extern void T1225f53(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].slots_wipe_out */
extern void T1225f66(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].clashes_wipe_out */
extern void T1225f65(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].key_storage_wipe_out */
extern void T1225f64(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].item_storage_wipe_out */
extern void T1225f63(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_CLIENT].keep_head */
extern void T1919f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CLIENT].set_count */
extern void T1919f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].move_all_cursors_after */
extern void T1225f62(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].set_next_cursor */
extern void T1917f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].set_after */
extern void T1917f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].back */
extern void T1225f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_back */
extern void T1225f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].add_traversing_cursor */
extern void T1225f72(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].set_position */
extern void T1917f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].remove_traversing_cursor */
extern void T1225f71(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].set_before */
extern void T1917f11(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].clashes_item */
extern T6 T1225f31(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENTS.put_first */
extern void T2040f17(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.fixed_array */
extern T0* T2040f11(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].item_for_iteration */
extern T0* T1225f22(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_item */
extern T0* T1225f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].item_storage_item */
extern T0* T1225f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].before */
extern T1 T1225f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_before */
extern T1 T1225f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].before */
extern T1 T1917f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].finish */
extern void T1225f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_finish */
extern void T1225f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_off */
extern T1 T1225f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].off */
extern T1 T1917f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].is_empty */
extern T1 T1225f36(GE_context* ac, T0* C);
/* attached DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].for_all */
extern T1 T2191f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].forth */
extern void T2499f8(GE_context* ac, T0* C);
/* attached DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_forth */
extern void T2191f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].forth */
extern void T1917f17(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_forth */
extern void T1225f75(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].go_after */
extern void T2499f7(GE_context* ac, T0* C);
/* attached DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_go_after */
extern void T2191f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].go_after */
extern void T1917f16(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_go_after */
extern void T1225f74(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].item */
extern T0* T2499f4(GE_context* ac, T0* C);
/* attached DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_item */
extern T0* T2191f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].key */
extern T0* T1917f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_key */
extern T0* T1225f40(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].key_storage_item */
extern T0* T1225f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].after */
extern T1 T2499f3(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].after */
extern T1 T1917f8(GE_context* ac, T0* C);
/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].start */
extern void T2499f6(GE_context* ac, T0* C);
/* attached DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_start */
extern void T2191f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].start */
extern void T1917f15(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_start */
extern void T1225f73(GE_context* ac, T0* C, T0* a1);
/* attached DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].new_cursor */
extern T0* T2191f4(GE_context* ac, T0* C);
/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].make */
extern T0* T2499c5(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].keys */
extern T0* T1225f39(GE_context* ac, T0* C);
/* attached DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].make */
extern T0* T2191c8(GE_context* ac, T0* a1);
/* attached DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].set_internal_cursor */
extern void T2191f9(GE_context* ac, T0* C, T0* a1);
/* attached DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].new_cursor_with_table_cursor */
extern T0* T2191f5(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].make_with_table_cursor */
extern T0* T2499c9(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].is_empty */
extern T1 T1224f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].force */
extern void T1225f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].key_storage_put */
extern void T1225f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].slots_put */
extern void T1225f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].clashes_put */
extern void T1225f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].slots_item */
extern T6 T1225f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].hash_position */
extern T6 T1225f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].resize */
extern void T1225f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].clashes_resize */
extern void T1225f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].special_integer_ */
extern T0* T1225f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].key_storage_resize */
extern void T1225f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].item_storage_resize */
extern void T1225f68(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT].aliased_resized_area */
extern T0* T1918f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_CLIENT].aliased_resized_area */
extern T0* T1919f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].slots_resize */
extern void T1225f67(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].new_capacity */
extern T6 T1225f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].item_storage_put */
extern void T1225f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT].force */
extern void T1918f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CLIENT].fill_with */
extern void T1919f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CLIENT].extend */
extern void T1919f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].search_position */
extern void T1225f54(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.client */
extern T0* T2040f8(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENT.client */
extern T0* T716f4(GE_context* ac, T0* C);
/* ET_CLIENTS.item */
extern T0* T2040f7(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.client */
extern T0* T700f5(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.item */
extern T0* T700f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].remove */
extern void T1224f15(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].move_left */
extern void T1224f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].move_cursors_left */
extern void T1224f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST].set_position */
extern void T1915f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].remove_last */
extern void T1224f18(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].move_last_cursors_after */
extern void T1224f22(GE_context* ac, T0* C);
/* ET_CLIENTS.is_none */
extern T1 T2040f6(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.is_none */
extern T1 T700f4(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].item */
extern T0* T1224f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].first */
extern T0* T1224f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].force_last */
extern void T1224f14(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST].force */
extern void T1913f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CLIENT_LIST].fill_with */
extern void T1914f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CLIENT_LIST].extend */
extern void T1914f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].resize */
extern void T1224f17(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1913f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1914f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].new_capacity */
extern T6 T1224f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].extendible */
extern T1 T1224f10(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_EXPORT.clients */
extern T0* T1934f8(GE_context* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.clients */
extern T0* T1933f6(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.has_feature_name */
extern T1 T1934f7(GE_context* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.has_feature_name */
extern T1 T1933f5(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.is_all */
extern T1 T1934f6(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.flatten_redeclared_feature */
extern void T362f48(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_precursor_validity */
extern void T362f53(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_feature_validity */
extern void T1235f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd3b_error */
extern void T53f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3b */
extern T0* T1418c835(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_POSTCONDITIONS.position */
extern T0* T1734f14(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.first */
extern T0* T1734f16(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.is_empty */
extern T1 T1734f15(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T53f56(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd3b_error */
extern void T36f278(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T36f55(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.is_ensure_then */
extern T1 T1734f13(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd3a_error */
extern void T53f278(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3a */
extern T0* T1418c834(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.position */
extern T0* T529f13(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.first */
extern T0* T529f15(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.is_empty */
extern T1 T529f14(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdrd3a_error */
extern void T36f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.is_require_else */
extern T1 T529f12(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_redeclaration_validity */
extern void T362f52(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd6a_error */
extern void T53f294(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6a */
extern T0* T1418c851(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd6a_error */
extern void T36f293(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4b_error */
extern void T53f293(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4b */
extern T0* T1418c850(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T53f63(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd4b_error */
extern void T36f292(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T36f62(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd4c_error */
extern void T53f292(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4c */
extern T0* T1418c849(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4c_error */
extern void T36f291(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn0b_error */
extern void T53f291(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_ge_reported */
extern void T1418f848(GE_context* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vmfn0b */
extern T0* T1418c847(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0b_error */
extern void T36f290(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4a_error */
extern void T53f290(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4a */
extern T0* T1418c846(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4a_error */
extern void T36f289(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrs4b_error */
extern void T53f289(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs4b */
extern T0* T1418c845(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs4b_error */
extern void T36f288(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd5a_error */
extern void T53f288(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd5a */
extern T0* T1418c844(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T53f61(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd5a_error */
extern void T36f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T36f60(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7c_error */
extern void T53f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7c */
extern T0* T1418c843(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T53f60(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd7c_error */
extern void T36f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T36f59(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7a_error */
extern void T53f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7a */
extern T0* T1418c842(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7a_error */
extern void T36f285(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd7b_error */
extern void T53f285(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7b */
extern T0* T1418c841(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7b_error */
extern void T36f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REDECLARED_FEATURE.is_replicated */
extern T1 T1724f19(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_builtin_feature_validity */
extern void T362f50(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_feature_validity */
extern void T1234f13(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss3a_error */
extern void T53f263(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmss3a */
extern T0* T1418c819(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T53f45(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss3a_error */
extern void T36f262(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T36f44(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_immediate_feature */
extern void T362f47(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].before */
extern T1 T1218f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_before */
extern T1 T1218f34(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].before */
extern T1 T1896f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].finish */
extern void T1218f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_finish */
extern void T1218f63(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_feature_adaptations */
extern void T362f36(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_parents_validity */
extern void T362f34(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.check_parents_validity */
extern void T1232f10(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_formal_parameters_validity */
extern void T362f33(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.check_formal_parameters_validity */
extern void T1233f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_constraint_validity */
extern void T1233f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.constraint */
extern T0* T1243f8(GE_context* ac, T0* C);
/* ET_CLASS.has_ancestors_error */
extern T1 T95f113(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.set_fatal_error */
extern void T362f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.error_handler */
extern T0* T362f23(GE_context* ac, T0* C);
/* ET_CLASS.set_features_flattened */
extern void T95f259(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.process_class */
extern void T361f14(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.internal_process_class */
extern void T361f16(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1a_error */
extern void T53f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1a */
extern T0* T1418c787(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].after */
extern T1 T1253f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].forth */
extern void T1253f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].cursor_forth */
extern void T365f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].add_traversing_cursor */
extern void T365f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].remove_traversing_cursor */
extern void T365f40(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].item */
extern T0* T1253f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].cursor_item */
extern T0* T365f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].start */
extern void T1253f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].cursor_start */
extern void T365f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].off */
extern T1 T1253f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].before */
extern T1 T1253f8(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T53f30(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr1a_error */
extern void T36f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T36f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].first */
extern T0* T365f11(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.set_parents_inheritance_error */
extern void T361f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].wipe_out */
extern void T1214f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].wipe_out */
extern void T1886f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].slots_wipe_out */
extern void T1886f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].clashes_wipe_out */
extern void T1886f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].key_storage_wipe_out */
extern void T1886f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].item_storage_wipe_out */
extern void T1886f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].move_all_cursors_after */
extern void T1886f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_CLASS].set_next_cursor */
extern void T2302f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_CLASS].set_after */
extern void T2302f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].wipe_out */
extern void T365f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].reset */
extern void T1214f17(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].is_empty */
extern T1 T365f10(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.check_parents_validity */
extern void T361f20(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.check_parents_validity */
extern void T1216f9(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.check_formal_parameters_validity */
extern void T361f19(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameters_validity */
extern void T1217f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_cycles */
extern void T1217f15(GE_context* ac, T0* C);
extern T1 T1217f15ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3h_error */
extern void T53f311(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3h */
extern T0* T1418c867(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER].after */
extern T1 T2306f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER].forth */
extern void T2306f13(GE_context* ac, T0* C);
/* attached DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].cursor_forth */
extern void T1894f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER].set_position */
extern void T2306f14(GE_context* ac, T0* C, T6 a1);
/* attached DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].add_traversing_cursor */
extern void T1894f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER].set_next_cursor */
extern void T2306f11(GE_context* ac, T0* C, T0* a1);
/* attached DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].remove_traversing_cursor */
extern void T1894f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER].item */
extern T0* T2306f4(GE_context* ac, T0* C);
/* attached DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].cursor_item */
extern T0* T1894f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER].start */
extern void T2306f12(GE_context* ac, T0* C);
/* attached DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].cursor_start */
extern void T1894f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER].set_after */
extern void T2306f10(GE_context* ac, T0* C);
/* attached DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].is_empty */
extern T1 T1894f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER].off */
extern T1 T2306f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER].before */
extern T1 T2306f8(GE_context* ac, T0* C);
/* attached DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].first */
extern T0* T1894f8(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T53f73(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg3h_error */
extern void T36f310(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T36f72(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].wipe_out */
extern void T1892f12(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].wipe_out */
extern void T2303f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].slots_wipe_out */
extern void T2303f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].clashes_wipe_out */
extern void T2303f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].key_storage_wipe_out */
extern void T2303f39(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_FORMAL_PARAMETER].keep_head */
extern void T2304f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_FORMAL_PARAMETER].set_count */
extern void T2304f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].item_storage_wipe_out */
extern void T2303f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T2303f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].set_next_cursor */
extern void T2555f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].set_after */
extern void T2555f7(GE_context* ac, T0* C);
/* attached DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].wipe_out */
extern void T1894f13(GE_context* ac, T0* C);
/* attached DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1894f15(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].reset */
extern void T1892f14(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint_base_type */
extern void T1712f81(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.set_constraint_base_type */
extern void T1243f78(GE_context* ac, T0* C, T0* a1);
/* attached DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].item */
extern T0* T1894f7(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3e_error */
extern void T53f310(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3e */
extern T0* T1418c866(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3e_error */
extern void T36f309(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.older_or_same_ise_version */
extern T1 T87f43(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.older_or_same_ise_version */
extern T1 T81f41(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.ise_6_1_latest */
extern T0* T1217f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].sort */
extern void T1892f11(GE_context* ac, T0* C);
/* attached DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].put_last */
extern void T1894f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER].force */
extern void T2305f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FORMAL_PARAMETER].fill_with */
extern void T2304f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FORMAL_PARAMETER].extend */
extern void T2304f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].count */
extern T6 T1892f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_validity */
extern void T1217f14(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg2a_error */
extern void T53f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg2a */
extern T0* T1418c865(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T53f72(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg2a_error */
extern void T36f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T36f71(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg1a_error */
extern void T53f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg1a */
extern T0* T1418c864(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T53f71(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg1a_error */
extern void T36f307(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T36f70(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.error_handler */
extern T0* T1217f8(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_fatal_error */
extern void T1217f13(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.current_universe */
extern T0* T1217f7(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.set_ancestors */
extern void T361f18(GE_context* ac, T0* C);
/* ET_CLASS.set_conforming_ancestors */
extern void T95f258(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_ancestors */
extern void T95f257(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].wipe_out */
extern void T1215f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].slots_wipe_out */
extern void T1215f54(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].clashes_wipe_out */
extern void T1215f53(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].key_storage_wipe_out */
extern void T1215f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].item_storage_wipe_out */
extern void T1215f51(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_BASE_TYPE].keep_head */
extern void T1753f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_BASE_TYPE].set_count */
extern void T1753f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].move_all_cursors_after */
extern void T1215f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS].set_next_cursor */
extern void T1887f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS].set_after */
extern void T1887f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].forth */
extern void T1215f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].cursor_forth */
extern void T1215f48(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].add_traversing_cursor */
extern void T1215f63(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS].set_position */
extern void T1887f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].remove_traversing_cursor */
extern void T1215f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].clashes_item */
extern T6 T1215f39(GE_context* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_LIST.put_last */
extern void T538f8(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE].force */
extern void T1754f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_BASE_TYPE].fill_with */
extern void T1753f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_BASE_TYPE].extend */
extern void T1753f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].item_for_iteration */
extern T0* T1215f22(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].cursor_item */
extern T0* T1215f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].item_storage_item */
extern T0* T1215f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].after */
extern T1 T1215f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].cursor_after */
extern T1 T1215f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS].after */
extern T1 T1887f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].start */
extern void T1215f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].cursor_start */
extern void T1215f47(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].cursor_off */
extern T1 T1215f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS].off */
extern T1 T1887f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].is_empty */
extern T1 T1215f24(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_parent_to_ancestors */
extern void T361f23(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].force_new */
extern void T1215f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].key_storage_put */
extern void T1215f60(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].item_storage_put */
extern void T1215f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].slots_put */
extern void T1215f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].clashes_put */
extern void T1215f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].slots_item */
extern T6 T1215f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].hash_position */
extern T6 T1215f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].resize */
extern void T1215f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].clashes_resize */
extern void T1215f67(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].special_integer_ */
extern T0* T1215f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].key_storage_resize */
extern void T1215f66(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].item_storage_resize */
extern void T1215f65(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE].aliased_resized_area */
extern T0* T1754f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_BASE_TYPE].aliased_resized_area */
extern T0* T1753f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].key_storage_item */
extern T0* T1215f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].slots_resize */
extern void T1215f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].new_capacity */
extern T6 T1215f35(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvagp0a_error */
extern void T53f238(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvagp0a */
extern T0* T1418c793(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T53f35(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvagp0a_error */
extern void T36f237(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T36f34(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].found_item */
extern T0* T1215f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].found */
extern T1 T1215f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].search */
extern void T1215f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].search_position */
extern void T1215f55(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso2a_error */
extern void T53f237(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso2a */
extern T0* T1418c792(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T53f34(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso2a_error */
extern void T36f236(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T36f33(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtct0a_error */
extern void T53f236(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtct0a */
extern T0* T1418c791(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtct_error */
extern T1 T53f33(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtct0a_error */
extern void T36f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtct_error */
extern T1 T36f32(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso1a_error */
extern void T53f235(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso1a */
extern T0* T1418c790(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T53f32(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso1a_error */
extern void T36f234(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T36f31(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhay0a_error */
extern void T53f234(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vhay0a */
extern T0* T1418c789(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhay_error */
extern T1 T53f31(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhay0a_error */
extern void T36f233(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vhay_error */
extern T1 T36f30(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1b_error */
extern void T53f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1b */
extern T0* T1418c788(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr1b_error */
extern void T36f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_LIST.is_conforming */
extern T1 T699f6(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.current_system */
extern T0* T361f12(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].sort */
extern void T1214f12(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_class_to_sorter */
extern void T361f17(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.current_universe */
extern T0* T361f11(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_parents_to_sorter */
extern void T361f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].force_relation */
extern void T1214f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].put_indexed_relation */
extern void T1214f19(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].count */
extern T6 T1214f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].index_of */
extern T6 T1214f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].found_item */
extern T6 T1886f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].item_storage_item */
extern T6 T1886f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].found */
extern T1 T1886f23(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].search */
extern void T1886f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].search_position */
extern void T1886f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].hash_position */
extern T6 T1886f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].key_storage_item */
extern T0* T1886f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].clashes_item */
extern T6 T1886f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].slots_item */
extern T6 T1886f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].force */
extern void T1214f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].put */
extern void T1214f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].put_new */
extern void T1886f37(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].key_storage_put */
extern void T1886f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].item_storage_put */
extern void T1886f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].slots_put */
extern void T1886f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].clashes_put */
extern void T1886f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].resize */
extern void T1886f36(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].clashes_resize */
extern void T1886f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].special_integer_ */
extern T0* T1886f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].key_storage_resize */
extern void T1886f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].item_storage_resize */
extern void T1886f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].slots_resize */
extern void T1886f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].capacity */
extern T6 T1214f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].has */
extern T1 T1214f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].has */
extern T1 T1886f21(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.set_fatal_error */
extern void T361f15(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.error_handler */
extern T0* T361f10(GE_context* ac, T0* C);
/* ET_CLASS.set_ancestors_built */
extern void T95f256(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.process_class */
extern void T360f7(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.internal_process_class */
extern void T360f9(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.check_cluster_dependence_constraints */
extern void T360f10(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gcdep_error */
extern void T53f374(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLUSTER_ERROR.make_gcdep */
extern T0* T2372c26(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].forth */
extern void T2662f12(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].cursor_forth */
extern void T2444f57(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].add_traversing_cursor */
extern void T2444f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].set_next_cursor */
extern void T2662f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].remove_traversing_cursor */
extern void T2444f58(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].set_after */
extern void T2662f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].key */
extern T0* T2662f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].cursor_key */
extern T0* T2444f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].after */
extern T1 T2662f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].start */
extern void T2662f11(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].cursor_start */
extern void T2444f56(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].cursor_off */
extern T1 T2444f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].off */
extern T1 T2662f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].is_empty */
extern T1 T2444f23(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T53f110(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcdep_error */
extern void T36f373(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T36f109(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcpro_error */
extern void T53f373(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLUSTER_ERROR.make_gcpro */
extern T0* T2372c25(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T53f109(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcpro_error */
extern void T36f372(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T36f108(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T1 T2014f6(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T2014f6ac1(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* Creation of agent #2 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T2014f6ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T2014f6ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T2014f6ac4(GE_context* ac, T0* a1, T0* a2);
extern T1 T2014f6ot1(T0* a1, T0** a2);
/* [attached] PREDICATE [[attached] TUPLE [[attached] STRING_8]].set_rout_disp_final */
extern void T2449f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [attached] PREDICATE [[attached] TUPLE [[attached] LX_WILDCARD]].set_rout_disp_final */
extern void T2447f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.matches_pathname */
extern T1 T2014f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* LX_DFA_WILDCARD.recognizes */
extern T1 T2452f12(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.longest_end_position */
extern T6 T2452f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* LX_DFA_WILDCARD.is_compiled */
extern T1 T2452f15(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].there_exists */
extern T1 T171f20(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_ */
extern T0* T2014f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].there_exists */
extern T1 T2444f24(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.group_pathname */
extern T0* T2014f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.first_non_override_overridden_class */
extern T0* T95f195(GE_context* ac, T0* C);
/* ET_CLASS.master_class_in_universe */
extern T0* T95f211(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.scm_mapped_cluster */
extern T0* T360f5(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.set_fatal_error */
extern void T360f8(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.error_handler */
extern T0* T360f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_class */
extern void T359f978(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.internal_process_class */
extern void T359f1139(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.reset_preparsed */
extern void T95f255(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_class */
extern void T371f5(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvscn1b_error */
extern void T53f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvscn1b */
extern T0* T1418c785(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T53f28(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvscn1b_error */
extern void T36f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T36f27(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.syntax_error */
extern T1 T359f701(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.parse_file */
extern void T359f1142(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_EIFFEL_PARSER.yyparse */
extern void T359f1143(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_pop_last_value */
extern void T359f1153(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_push_error_value */
extern void T359f1152(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action */
extern void T359f1151(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_801_1000 */
extern void T359f1177(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_926 */
extern void T359f2119(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_counter */
extern void T359f2127(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32].force */
extern void T853f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32].resize */
extern void T853f14(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32].new_capacity */
extern T6 T853f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32].extendible */
extern T1 T853f6(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_925 */
extern void T359f2118(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_924 */
extern void T359f2117(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_923 */
extern void T359f2116(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_922 */
extern void T359f2115(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].force */
extern void T906f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_REAL_CONSTANT].fill_with */
extern void T908f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_REAL_CONSTANT].extend */
extern void T908f10(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_cast_type */
extern void T2053f44(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_cast_type */
extern void T2052f44(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_target_type */
extern T0* T369f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.ast_factory */
extern T0* T359f710(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_921 */
extern void T359f2114(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_sign */
extern void T2053f43(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_sign */
extern void T2052f43(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_920 */
extern void T359f2113(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_919 */
extern void T359f2112(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_918 */
extern void T359f2111(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_917 */
extern void T359f2110(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_916 */
extern void T359f2109(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_915 */
extern void T359f2108(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].force */
extern void T897f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INTEGER_CONSTANT].fill_with */
extern void T899f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INTEGER_CONSTANT].extend */
extern void T899f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_914 */
extern void T359f2107(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_913 */
extern void T359f2106(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_912 */
extern void T359f2105(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_911 */
extern void T359f2104(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_910 */
extern void T359f2103(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_909 */
extern void T359f2102(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_908 */
extern void T359f2101(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].force */
extern void T882f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_BOOLEAN_CONSTANT].fill_with */
extern void T884f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_BOOLEAN_CONSTANT].extend */
extern void T884f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_907 */
extern void T359f2100(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_906 */
extern void T359f2099(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].force */
extern void T888f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHARACTER_CONSTANT].fill_with */
extern void T890f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHARACTER_CONSTANT].extend */
extern void T890f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_905 */
extern void T359f2098(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T888f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T890f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_904 */
extern void T359f2097(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_903 */
extern void T359f2096(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_902 */
extern void T359f2095(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_901 */
extern void T359f2094(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].force */
extern void T903f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING].fill_with */
extern void T905f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING].extend */
extern void T905f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_900 */
extern void T359f2093(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T903f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T905f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_899 */
extern void T359f2092(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_898 */
extern void T359f2091(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_897 */
extern void T359f2090(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_896 */
extern void T359f2089(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_895 */
extern void T359f2088(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_894 */
extern void T359f2087(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_893 */
extern void T359f2086(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_892 */
extern void T359f2085(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_891 */
extern void T359f2084(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_890 */
extern void T359f2083(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_889 */
extern void T359f2082(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_888 */
extern void T359f2081(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_887 */
extern void T359f2080(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_886 */
extern void T359f2079(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_885 */
extern void T359f2078(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_884 */
extern void T359f2077(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_883 */
extern void T359f2076(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_882 */
extern void T359f2075(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_881 */
extern void T359f2074(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_880 */
extern void T359f2073(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_879 */
extern void T359f2072(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_878 */
extern void T359f2071(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_877 */
extern void T359f2070(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_876 */
extern void T359f2069(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_875 */
extern void T359f2068(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_874 */
extern void T359f2067(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].force */
extern void T942f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].fill_with */
extern void T944f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].extend */
extern void T944f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T942f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T944f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_typed_open_argument */
extern T0* T369f326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.make */
extern T0* T2149c10(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.question_mark_symbol */
extern T0* T94f1507(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.make */
extern T0* T2056c72(GE_context* ac);
/* ET_QUESTION_MARK_SYMBOL.make_leaf */
extern void T2056f74(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.tokens */
extern T0* T2056f13(GE_context* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.tokens */
extern T0* T2149f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_873 */
extern void T359f2066(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_872 */
extern void T359f2065(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_871 */
extern void T359f2064(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].force */
extern void T945f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].fill_with */
extern void T947f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].extend */
extern void T947f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T945f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T947f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.increment_counter */
extern void T359f2128(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32].replace */
extern void T853f12(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_argument_operand_comma */
extern T0* T369f325(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_870 */
extern void T359f2063(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].force */
extern void T948f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].fill_with */
extern void T950f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].extend */
extern void T950f10(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put_first */
extern void T2148f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM].force */
extern void T2497f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM].fill_with */
extern void T2495f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM].extend */
extern void T2495f7(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.fixed_array */
extern T0* T2148f9(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T2497c2(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_869 */
extern void T359f2062(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T948f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T950f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_argument_operands */
extern T0* T369f324(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern T0* T2148c12(GE_context* ac, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern void T2148f12p1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T2497f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_AGENT_ARGUMENT_OPERAND_ITEM].make_empty */
extern T0* T2495c4(GE_context* ac, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.tokens */
extern T0* T2148f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.counter_value */
extern T6 T359f884(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_symbol */
extern T0* T359f886(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL].item */
extern T0* T857f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_868 */
extern void T359f2061(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_867 */
extern void T359f2060(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_symbol */
extern void T359f2131(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL].force */
extern void T857f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].force */
extern void T876f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_SYMBOL].fill_with */
extern void T878f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_SYMBOL].extend */
extern void T878f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL].resize */
extern void T857f12(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T876f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T878f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL].new_capacity */
extern T6 T857f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL].extendible */
extern T1 T857f5(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_866 */
extern void T359f2059(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_counter */
extern void T359f2125(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_symbol */
extern void T359f2130(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL].remove */
extern void T857f10(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_SYMBOL].keep_head */
extern void T878f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_SYMBOL].set_count */
extern void T878f9(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_865 */
extern void T359f2058(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_864 */
extern void T359f2057(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_863 */
extern void T359f2056(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].force */
extern void T951f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_AGENT_TARGET].fill_with */
extern void T953f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_AGENT_TARGET].extend */
extern void T953f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T951f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T953f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_open_target */
extern T0* T369f323(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AGENT_OPEN_TARGET.make */
extern T0* T2147c9(GE_context* ac, T0* a1);
/* ET_AGENT_OPEN_TARGET.tokens */
extern T0* T2147f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_862 */
extern void T359f2055(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_861 */
extern void T359f2054(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_860 */
extern void T359f2053(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_859 */
extern void T359f2052(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_agent_identifier_target */
extern T0* T359f933(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_unqualified_call_expression */
extern T0* T369f348(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_object_test_local */
extern void T232f126(GE_context* ac, T0* C, T1 a1);
/* ET_OBJECT_TEST_LIST.index_of_name */
extern T6 T1583f4(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_across_cursor */
extern void T232f125(GE_context* ac, T0* C, T1 a1);
/* ET_ACROSS_COMPONENT_LIST.index_of_name */
extern T6 T1585f4(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.set_used */
extern void T2089f9(GE_context* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE.set_used */
extern void T1655f8(GE_context* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.local_variable */
extern T0* T2027f4(GE_context* ac, T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.item */
extern T0* T2027f7(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_local */
extern void T232f124(GE_context* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.index_of */
extern T6 T2027f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.set_used */
extern void T2087f9(GE_context* ac, T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT.set_used */
extern void T350f8(GE_context* ac, T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT_LIST.index_of */
extern T6 T347f8(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_858 */
extern void T359f2051(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_start_closure */
extern void T359f2139(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].force */
extern void T860f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].force */
extern void T1867f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].fill_with */
extern void T1866f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].extend */
extern void T1866f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].resize */
extern void T860f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].aliased_resized_area */
extern T0* T1867f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].aliased_resized_area */
extern T0* T1866f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].new_capacity */
extern T6 T860f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].extendible */
extern T1 T860f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].force */
extern void T858f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].force */
extern void T1863f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_OBJECT_TEST_LIST].fill_with */
extern void T1862f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_OBJECT_TEST_LIST].extend */
extern void T1862f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].resize */
extern void T858f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1863f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1862f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].new_capacity */
extern T6 T858f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].extendible */
extern T1 T858f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T855f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T1138f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].fill_with */
extern void T1139f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].extend */
extern void T1139f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].resize */
extern void T855f13(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T1138f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T1139f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].new_capacity */
extern T6 T855f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].extendible */
extern T1 T855f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T854f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T1084f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].fill_with */
extern void T1085f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].extend */
extern void T1085f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].resize */
extern void T854f13(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1084f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1085f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].new_capacity */
extern T6 T854f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].extendible */
extern T1 T854f7(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_857 */
extern void T359f2050(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_856 */
extern void T359f2049(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].force */
extern void T1115f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INLINE_AGENT].fill_with */
extern void T1117f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INLINE_AGENT].extend */
extern void T1117f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].aliased_resized_area */
extern T0* T1115f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_INLINE_AGENT].aliased_resized_area */
extern T0* T1117f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.register_inline_agent */
extern void T359f2150(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_end_closure */
extern void T359f2154(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].remove */
extern void T860f13(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].keep_head */
extern void T1866f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].set_count */
extern void T1866f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].item */
extern T0* T860f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].is_empty */
extern T1 T860f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST].force */
extern void T861f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT_LIST].force */
extern void T1868f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT_LIST].fill_with */
extern void T1869f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT_LIST].extend */
extern void T1869f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST].resize */
extern void T861f11(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT_LIST].aliased_resized_area */
extern T0* T1868f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT_LIST].aliased_resized_area */
extern T0* T1869f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST].new_capacity */
extern T6 T861f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST].extendible */
extern T1 T861f5(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_COMPONENT_LIST.wipe_out */
extern void T1585f10(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT].keep_head */
extern void T1393f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_ACROSS_COMPONENT_LIST.fixed_array */
extern T0* T1585f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].remove */
extern void T858f13(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_OBJECT_TEST_LIST].keep_head */
extern void T1862f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_OBJECT_TEST_LIST].set_count */
extern void T1862f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].item */
extern T0* T858f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].is_empty */
extern T1 T858f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST].force */
extern void T859f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST_LIST].force */
extern void T1864f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_OBJECT_TEST_LIST].fill_with */
extern void T1865f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_OBJECT_TEST_LIST].extend */
extern void T1865f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST].resize */
extern void T859f11(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1864f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1865f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST].new_capacity */
extern T6 T859f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST].extendible */
extern T1 T859f5(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.wipe_out */
extern void T1583f10(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST].keep_head */
extern void T1386f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_OBJECT_TEST_LIST.fixed_array */
extern T0* T1583f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].remove */
extern void T855f12(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].keep_head */
extern void T1139f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].set_count */
extern void T1139f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].item */
extern T0* T855f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].is_empty */
extern T1 T855f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].remove */
extern void T854f12(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].keep_head */
extern void T1085f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].set_count */
extern void T1085f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].item */
extern T0* T854f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].is_empty */
extern T1 T854f5(GE_context* ac, T0* C);
/* ET_ACROSS_COMPONENT_LIST.cloned_across_component_list */
extern T0* T1585f3(GE_context* ac, T0* C);
/* ET_ACROSS_COMPONENT_LIST.put_last */
extern void T1585f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT].force */
extern void T1393f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT].fill_with */
extern void T1392f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT].extend */
extern void T1392f10(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_COMPONENT_LIST.make_with_capacity */
extern T0* T1585c9(GE_context* ac, T6 a1);
/* ET_OBJECT_TEST_LIST.cloned_object_test_list */
extern T0* T1583f3(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_LIST.put_last */
extern void T1583f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST].force */
extern void T1386f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_NAMED_OBJECT_TEST].fill_with */
extern void T1385f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_NAMED_OBJECT_TEST].extend */
extern void T1385f10(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.make_with_capacity */
extern T0* T1583c9(GE_context* ac, T6 a1);
/* ET_AST_FACTORY.new_external_procedure_inline_agent */
extern T0* T369f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T2146f44(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_alias_clause */
extern void T2146f43(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T2146f42(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T2146f41(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make */
extern T0* T2146c36(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_procedure */
extern void T2146f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T2146f47(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.make */
extern T0* T2493c6(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.agent_keyword */
extern T0* T94f1506(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.make */
extern T0* T2059c13(GE_context* ac);
/* ET_AGENT_KEYWORD.make_token */
extern void T2059f15(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_KEYWORD.make_leaf */
extern void T2059f16(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.tokens */
extern T0* T2059f7(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T2146f20(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_external_language */
extern T0* T369f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_855 */
extern void T359f2048(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_854 */
extern void T359f2047(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_procedure_inline_agent */
extern T0* T369f321(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T2145f53(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T2145f52(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_compound */
extern void T2145f51(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_keys */
extern void T2145f50(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_locals */
extern void T2145f49(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T2145f48(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T2145f47(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make */
extern T0* T2145c42(GE_context* ac, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T2145f55(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T2145f18(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_compound */
extern T0* T369f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_COMPOUND.set_keyword */
extern void T456f10(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.once_keyword */
extern T0* T94f732(GE_context* ac, T0* C);
/* ET_KEYWORD.make_once */
extern T0* T539c44(GE_context* ac);
/* ET_AST_FACTORY.tokens */
extern T0* T369f358(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_853 */
extern void T359f2046(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_852 */
extern void T359f2045(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_procedure_inline_agent */
extern T0* T369f320(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T2144f48(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T2144f47(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_compound */
extern void T2144f46(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_locals */
extern void T2144f45(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T2144f44(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T2144f43(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.make */
extern T0* T2144c38(GE_context* ac, T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T2144f50(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T2144f18(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_851 */
extern void T359f2044(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_850 */
extern void T359f2043(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_external_function_inline_agent */
extern T0* T369f319(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T2142f45(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_alias_clause */
extern void T2142f44(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T2142f43(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T2142f42(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make */
extern T0* T2142c37(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_function */
extern void T2142f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T2142f48(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.tokens */
extern T0* T2142f21(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_colon_type */
extern T0* T369f167(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_849 */
extern void T359f2042(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_848 */
extern void T359f2041(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_function_inline_agent */
extern T0* T369f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T2141f54(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T2141f53(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_compound */
extern void T2141f52(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_keys */
extern void T2141f51(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_locals */
extern void T2141f50(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T2141f49(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T2141f48(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make */
extern T0* T2141c43(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T2141f56(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.tokens */
extern T0* T2141f19(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_847 */
extern void T359f2040(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_846 */
extern void T359f2039(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_function_inline_agent */
extern T0* T369f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_DO_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T2140f49(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T2140f48(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_compound */
extern void T2140f47(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_locals */
extern void T2140f46(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T2140f45(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T2140f44(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.make */
extern T0* T2140c39(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T2140f51(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.tokens */
extern T0* T2140f19(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_845 */
extern void T359f2038(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_844 */
extern void T359f2037(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_inline_agent_actual_arguments */
extern void T359f2149(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_843 */
extern void T359f2036(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].force */
extern void T963f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CALL_AGENT].fill_with */
extern void T965f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CALL_AGENT].extend */
extern void T965f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T963f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T965f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_call_agent */
extern T0* T369f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_agent_keyword */
extern void T2139f33(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.make */
extern T0* T2139c32(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.tokens */
extern T0* T2139f13(GE_context* ac, T0* C);
/* ET_CALL_AGENT.make_unqualified */
extern T0* T2139c30(GE_context* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_dot_feature_name */
extern T0* T369f316(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_842 */
extern void T359f2035(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_841 */
extern void T359f2034(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].force */
extern void T929f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACROSS_EXPRESSION].fill_with */
extern void T931f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACROSS_EXPRESSION].extend */
extern void T931f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T929f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T931f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_across_expression_header */
extern T0* T359f932(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_COMPONENT_LIST.force_last */
extern void T1585f11(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_COMPONENT_LIST.resize */
extern void T1585f13(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT].aliased_resized_area */
extern T0* T1393f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT].aliased_resized_area */
extern T0* T1392f4(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_COMPONENT_LIST.new_capacity */
extern T6 T1585f7(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_COMPONENT_LIST.capacity */
extern T6 T1585f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_component_list */
extern T0* T359f950(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST].remove */
extern void T861f12(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT_LIST].keep_head */
extern void T1869f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT_LIST].set_count */
extern void T1869f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST].item */
extern T0* T861f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [[attached] ET_ACROSS_COMPONENT_LIST].is_empty */
extern T1 T861f7(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_across_all_expression */
extern T0* T369f357(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_ACROSS_EXPRESSION.set_variant_part */
extern void T2161f39(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_invariant_part */
extern void T2161f38(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.make_all */
extern T0* T2161c33(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_EXPRESSION.create_unfolded_form */
extern void T2161f43(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.across_keyword */
extern T0* T94f1508(GE_context* ac, T0* C);
/* ET_KEYWORD.make_across */
extern T0* T539c50(GE_context* ac);
/* ET_ACROSS_EXPRESSION.tokens */
extern T0* T2161f15(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.true_keyword */
extern T0* T94f284(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.make */
extern T0* T2032c40(GE_context* ac);
/* ET_TRUE_CONSTANT.make_token */
extern void T2032f45(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.make_leaf */
extern void T2032f46(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.tokens */
extern T0* T2032f17(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_840 */
extern void T359f2033(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_all_expression */
extern T0* T359f931(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACROSS_EXPRESSION.set_end_keyword */
extern void T2161f40(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_all */
extern void T2161f41(GE_context* ac, T0* C, T1 a1);
/* ET_ACROSS_EXPRESSION.set_iteration_conditional */
extern void T2161f36(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_until_conditional */
extern void T2161f35(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_conditional */
extern T0* T369f258(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_KEYWORD_EXPRESSION.make */
extern T0* T2103c4(GE_context* ac, T0* a1, T0* a2);
/* ET_KEYWORD.is_inspect */
extern T1 T539f24(GE_context* ac, T0* C);
/* ET_KEYWORD.is_if */
extern T1 T539f23(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_839 */
extern void T359f2032(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_some_expression */
extern T0* T359f930(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACROSS_EXPRESSION.set_some */
extern void T2161f37(GE_context* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_838 */
extern void T359f2031(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].force */
extern void T997f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONSTANT].fill_with */
extern void T999f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONSTANT].extend */
extern void T999f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].aliased_resized_area */
extern T0* T997f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CONSTANT].aliased_resized_area */
extern T0* T999f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_837 */
extern void T359f2030(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_836 */
extern void T359f2029(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_835 */
extern void T359f2028(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_834 */
extern void T359f2027(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_833 */
extern void T359f2026(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].force */
extern void T1192f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_STRIP_EXPRESSION].fill_with */
extern void T1194f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_STRIP_EXPRESSION].extend */
extern void T1194f10(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.put_first */
extern void T2138f30(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME_ITEM].force */
extern void T2200f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FEATURE_NAME_ITEM].fill_with */
extern void T2199f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FEATURE_NAME_ITEM].extend */
extern void T2199f7(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.fixed_array */
extern T0* T2138f16(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME_ITEM].default_create */
extern T0* T2200c2(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_832 */
extern void T359f2025(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T1192f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T1194f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_strip_expression */
extern T0* T369f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_STRIP_EXPRESSION.set_strip_keyword */
extern void T2138f31(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern T0* T2138c28(GE_context* ac, T6 a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern void T2138f28p1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_NAME_ITEM].make */
extern T0* T2200f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_FEATURE_NAME_ITEM].make_empty */
extern T0* T2199c4(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.strip_keyword */
extern T0* T94f1505(GE_context* ac, T0* C);
/* ET_KEYWORD.make_strip */
extern T0* T539c49(GE_context* ac);
/* ET_STRIP_EXPRESSION.tokens */
extern T0* T2138f14(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_keyword */
extern T0* T359f883(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD].item */
extern T0* T856f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_831 */
extern void T359f2024(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_830 */
extern void T359f2023(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_keyword */
extern void T359f2126(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD].force */
extern void T856f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].force */
extern void T867f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_KEYWORD].fill_with */
extern void T869f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_KEYWORD].extend */
extern void T869f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD].resize */
extern void T856f12(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T867f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T869f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD].new_capacity */
extern T6 T856f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD].extendible */
extern T1 T856f5(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_829 */
extern void T359f2022(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_keyword */
extern void T359f2124(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD].remove */
extern void T856f10(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_KEYWORD].keep_head */
extern void T869f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_KEYWORD].set_count */
extern void T869f9(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_828 */
extern void T359f2021(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_827 */
extern void T359f2020(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].force */
extern void T1152f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_MANIFEST_TUPLE].fill_with */
extern void T1153f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_MANIFEST_TUPLE].extend */
extern void T1153f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_826 */
extern void T359f2019(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T1152f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T1153f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_tuple */
extern T0* T369f313(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_TUPLE.set_left_symbol */
extern void T399f34(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_825 */
extern void T359f2018(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_824 */
extern void T359f2017(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_823 */
extern void T359f2016(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_822 */
extern void T359f2015(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_821 */
extern void T359f2014(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].force */
extern void T1143f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_MANIFEST_ARRAY].fill_with */
extern void T1145f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_MANIFEST_ARRAY].extend */
extern void T1145f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.put_first */
extern void T2137f31(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.fixed_array */
extern T0* T2137f17(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_820 */
extern void T359f2013(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T1143f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T1145f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_array */
extern T0* T369f312(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_ARRAY.set_left_symbol */
extern void T2137f32(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern T0* T2137c28(GE_context* ac, T6 a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern void T2137f28p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_array_symbol */
extern T0* T94f690(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_array */
extern T0* T474c89(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_array_symbol */
extern T0* T94f1504(GE_context* ac, T0* C);
/* ET_SYMBOL.make_left_array */
extern T0* T474c82(GE_context* ac);
/* ET_MANIFEST_ARRAY.tokens */
extern T0* T2137f15(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_819 */
extern void T359f2012(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_818 */
extern void T359f2011(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.set_cast_type */
extern void T2137f30(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_817 */
extern void T359f2010(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_816 */
extern void T359f2009(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_815 */
extern void T359f2008(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_814 */
extern void T359f2007(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].force */
extern void T1157f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].fill_with */
extern void T1159f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].extend */
extern void T1159f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T1157f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T1159f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parenthesized_expression */
extern T0* T369f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.set_left_parenthesis */
extern void T2127f24(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.make */
extern T0* T2127c22(GE_context* ac, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.tokens */
extern T0* T2127f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_813 */
extern void T359f2006(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].force */
extern void T935f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].fill_with */
extern void T936f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].extend */
extern void T936f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_812 */
extern void T359f2005(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T935f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T936f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_bracket_arguments */
extern T0* T369f310(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_ARGUMENT_LIST.make_bracketed_with_capacity */
extern T0* T391c17(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_811 */
extern void T359f2004(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_810 */
extern void T359f2003(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].force */
extern void T960f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_BRACKET_EXPRESSION].fill_with */
extern void T962f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_BRACKET_EXPRESSION].extend */
extern void T962f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T960f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T962f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_809 */
extern void T359f2002(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_bracket_expression */
extern T0* T369f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.make */
extern T0* T2136c25(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_808 */
extern void T359f2001(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_807 */
extern void T359f2000(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_806 */
extern void T359f1999(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_805 */
extern void T359f1998(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_804 */
extern void T359f1997(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].force */
extern void T1053f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXPRESSION].fill_with */
extern void T1054f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXPRESSION].extend */
extern void T1054f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].aliased_resized_area */
extern T0* T1053f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_EXPRESSION].aliased_resized_area */
extern T0* T1054f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_803 */
extern void T359f1996(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.raise_error */
extern void T359f2121(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_17_11_0 */
extern T0* T359f929(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_802 */
extern void T359f1995(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_801 */
extern void T359f1994(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601_800 */
extern void T359f1176(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_800 */
extern void T359f1993(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_799 */
extern void T359f1992(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_798 */
extern void T359f1991(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_797 */
extern void T359f1990(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_once_manifest_string */
extern T0* T359f928(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.register_inline_constant */
extern void T95f293(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.set_id */
extern void T2160f27(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_once_manifest_string */
extern T0* T369f356(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.set_once_keyword */
extern void T2160f26(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.make */
extern T0* T2160c24(GE_context* ac, T0* a1);
/* ET_ONCE_MANIFEST_STRING.tokens */
extern T0* T2160f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_796 */
extern void T359f1989(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_795 */
extern void T359f1988(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_794 */
extern void T359f1987(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_793 */
extern void T359f1986(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_792 */
extern void T359f1985(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_791 */
extern void T359f1984(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_790 */
extern void T359f1983(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_789 */
extern void T359f1982(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_788 */
extern void T359f1981(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_787 */
extern void T359f1980(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_786 */
extern void T359f1979(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_785 */
extern void T359f1978(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_784 */
extern void T359f1977(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_named_object_test */
extern T0* T359f927(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_OBJECT_TEST_LIST.force_last */
extern void T1583f11(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.resize */
extern void T1583f13(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T1386f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T1385f4(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.new_capacity */
extern T6 T1583f7(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.capacity */
extern T6 T1583f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_object_test_list */
extern T0* T359f951(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST].remove */
extern void T859f12(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_OBJECT_TEST_LIST].keep_head */
extern void T1865f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_OBJECT_TEST_LIST].set_count */
extern void T1865f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST].item */
extern T0* T859f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [[attached] ET_OBJECT_TEST_LIST].is_empty */
extern T1 T859f7(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_named_object_test */
extern T0* T369f355(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NAMED_OBJECT_TEST.set_attached_keyword */
extern void T1384f28(GE_context* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.make */
extern T0* T1384c26(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NAMED_OBJECT_TEST.make_object_test */
extern void T1384f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NAMED_OBJECT_TEST.tokens */
extern T0* T1384f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_783 */
extern void T359f1976(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_782 */
extern void T359f1975(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_object_test */
extern T0* T369f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST.set_attached_keyword */
extern void T431f26(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST.make */
extern T0* T431c24(GE_context* ac, T0* a1, T0* a2);
/* ET_OBJECT_TEST.tokens */
extern T0* T431f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_781 */
extern void T359f1974(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_780 */
extern void T359f1973(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_old_object_test */
extern T0* T359f926(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_AST_FACTORY.new_old_object_test */
extern T0* T369f354(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_OLD_OBJECT_TEST.set_left_brace */
extern void T2159f31(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_OBJECT_TEST.make */
extern T0* T2159c29(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.colon_symbol */
extern T0* T94f687(GE_context* ac, T0* C);
/* ET_SYMBOL.make_colon */
extern T0* T474c86(GE_context* ac);
/* ET_OLD_OBJECT_TEST.tokens */
extern T0* T2159f12(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_6_1_0 */
extern T0* T359f914(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_779 */
extern void T359f1972(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_old_expression */
extern T0* T369f307(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.set_old_keyword */
extern void T2135f23(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.make */
extern T0* T2135c21(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.old_keyword */
extern T0* T94f1503(GE_context* ac, T0* C);
/* ET_KEYWORD.make_old */
extern T0* T539c47(GE_context* ac);
/* ET_OLD_EXPRESSION.tokens */
extern T0* T2135f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_778 */
extern void T359f1971(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_expression */
extern T0* T369f305(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.make */
extern T0* T2134c26(GE_context* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_operator */
extern T0* T369f306(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_prefix */
extern void T2044f50(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.tokens */
extern T0* T2044f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_777 */
extern void T359f1970(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_776 */
extern void T359f1969(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_prefix_minus_expression */
extern T0* T359f925(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T359f925ot1(T0* a1, T0** a2);
extern T1 T359f925ot2(T0* a1, T0** a2);
/* ET_AST_FACTORY.new_prefix_minus_operator */
extern T0* T369f353(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_minus */
extern void T2054f98(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.tokens */
extern T0* T2054f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_775 */
extern void T359f1968(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_prefix_plus_expression */
extern T0* T359f924(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T359f924ot1(T0* a1, T0** a2);
extern T1 T359f924ot2(T0* a1, T0** a2);
/* ET_AST_FACTORY.new_prefix_plus_operator */
extern T0* T369f352(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_plus */
extern void T2054f97(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_774 */
extern void T359f1967(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_773 */
extern void T359f1966(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_772 */
extern void T359f1965(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_771 */
extern void T359f1964(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_770 */
extern void T359f1963(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_769 */
extern void T359f1962(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_768 */
extern void T359f1961(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_767 */
extern void T359f1960(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_766 */
extern void T359f1959(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_765 */
extern void T359f1958(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_manifest_type */
extern T0* T369f304(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.make */
extern T0* T2133c22(GE_context* ac, T0* a1);
/* ET_MANIFEST_TYPE.tokens */
extern T0* T2133f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_764 */
extern void T359f1957(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_763 */
extern void T359f1956(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_762 */
extern void T359f1955(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_761 */
extern void T359f1954(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_760 */
extern void T359f1953(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_759 */
extern void T359f1952(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_object_equality_expression */
extern T0* T369f303(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T432c23(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_758 */
extern void T359f1951(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_757 */
extern void T359f1950(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_equality_expression */
extern T0* T369f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.make */
extern T0* T433c21(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_756 */
extern void T359f1949(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_755 */
extern void T359f1948(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_expression */
extern T0* T369f297(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.make */
extern T0* T2128c24(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_754 */
extern void T359f1947(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_else_operator */
extern T0* T369f301(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_OR_ELSE_OPERATOR.set_or_keyword */
extern void T2132f33(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.make */
extern T0* T2132c32(GE_context* ac);
/* ET_TOKEN_CONSTANTS.else_keyword */
extern T0* T94f699(GE_context* ac, T0* C);
/* ET_KEYWORD.make_else */
extern T0* T539c62(GE_context* ac);
/* ET_TOKEN_CONSTANTS.or_keyword */
extern T0* T94f1502(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.make_or */
extern T0* T2057c47(GE_context* ac);
/* ET_KEYWORD_OPERATOR.make_token */
extern void T2057f53(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_leaf */
extern void T2057f54(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.tokens */
extern T0* T2057f7(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.tokens */
extern T0* T2132f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_753 */
extern void T359f1946(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_then_operator */
extern T0* T369f300(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_AND_THEN_OPERATOR.set_and_keyword */
extern void T2130f33(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.make */
extern T0* T2130c32(GE_context* ac);
/* ET_TOKEN_CONSTANTS.then_keyword */
extern T0* T94f703(GE_context* ac, T0* C);
/* ET_KEYWORD.make_then */
extern T0* T539c66(GE_context* ac);
/* ET_TOKEN_CONSTANTS.and_keyword */
extern T0* T94f1501(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.make_and */
extern T0* T2057c49(GE_context* ac);
/* ET_INFIX_AND_THEN_OPERATOR.tokens */
extern T0* T2130f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_752 */
extern void T359f1945(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_751 */
extern void T359f1944(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_750 */
extern void T359f1943(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_749 */
extern void T359f1942(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_748 */
extern void T359f1941(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_747 */
extern void T359f1940(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_746 */
extern void T359f1939(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_745 */
extern void T359f1938(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_744 */
extern void T359f1937(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_743 */
extern void T359f1936(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_742 */
extern void T359f1935(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_741 */
extern void T359f1934(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_740 */
extern void T359f1933(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_minus_operator */
extern T0* T369f299(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_minus */
extern void T2054f96(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_739 */
extern void T359f1932(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_plus_operator */
extern T0* T369f298(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_plus */
extern void T2054f95(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_738 */
extern void T359f1931(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_free_operator */
extern T0* T369f296(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_infix */
extern void T2044f49(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_737 */
extern void T359f1930(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_736 */
extern void T359f1929(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_735 */
extern void T359f1928(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].force */
extern void T1212f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_WRITABLE].fill_with */
extern void T1213f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_WRITABLE].extend */
extern void T1213f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T1212f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T1213f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_734 */
extern void T359f1927(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_writable */
extern T0* T359f923(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_733 */
extern void T359f1926(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_expression_address */
extern T0* T369f295(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.set_dollar */
extern void T2126f23(GE_context* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.make */
extern T0* T2126c21(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.dollar_symbol */
extern T0* T94f1500(GE_context* ac, T0* C);
/* ET_SYMBOL.make_dollar */
extern T0* T474c78(GE_context* ac);
/* ET_EXPRESSION_ADDRESS.tokens */
extern T0* T2126f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_732 */
extern void T359f1925(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_result_address */
extern T0* T369f294(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.set_dollar */
extern void T2125f23(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT_ADDRESS.make */
extern T0* T2125c21(GE_context* ac);
/* ET_RESULT_ADDRESS.tokens */
extern T0* T2125f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_731 */
extern void T359f1924(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_current_address */
extern T0* T369f293(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.set_dollar */
extern void T2124f23(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.make */
extern T0* T2124c21(GE_context* ac);
/* ET_CURRENT_ADDRESS.tokens */
extern T0* T2124f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_730 */
extern void T359f1923(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_feature_address */
extern T0* T359f922(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T359f922ot1(T0* a1, T0** a2);
/* ET_AST_FACTORY.new_feature_address */
extern T0* T369f351(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.set_dollar */
extern void T2158f23(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.make */
extern T0* T2158c21(GE_context* ac, T0* a1);
/* ET_FEATURE_ADDRESS.tokens */
extern T0* T2158f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_729 */
extern void T359f1922(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].force */
extern void T1055f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXPRESSION_ITEM].fill_with */
extern void T1057f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXPRESSION_ITEM].extend */
extern void T1057f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T1055f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T1057f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_expression_comma */
extern T0* T369f292(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_728 */
extern void T359f1921(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_727 */
extern void T359f1920(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_actual_arguments */
extern T0* T369f291(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_726 */
extern void T359f1919(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_725 */
extern void T359f1918(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_724 */
extern void T359f1917(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_723 */
extern void T359f1916(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_722 */
extern void T359f1915(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_721 */
extern void T359f1914(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_call_expression */
extern T0* T369f288(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.new_dot_feature_name */
extern T0* T359f913(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_720 */
extern void T359f1913(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_5_7_59914 */
extern T0* T359f895(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_719 */
extern void T359f1912(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_718 */
extern void T359f1911(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_717 */
extern void T359f1910(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_716 */
extern void T359f1909(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_715 */
extern void T359f1908(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_714 */
extern void T359f1907(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_713 */
extern void T359f1906(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_712 */
extern void T359f1905(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_expression */
extern T0* T359f921(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_711 */
extern void T359f1904(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_expression */
extern T0* T369f290(GE_context* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_precursor_keyword */
extern void T2123f28(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_parent_prefixed */
extern void T2123f27(GE_context* ac, T0* C, T1 a1);
/* ET_PRECURSOR_EXPRESSION.make */
extern T0* T2123c25(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.precursor_keyword */
extern T0* T94f1499(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.make */
extern T0* T2062c18(GE_context* ac);
/* ET_PRECURSOR_KEYWORD.make_token */
extern void T2062f20(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.make_leaf */
extern void T2062f21(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.tokens */
extern T0* T2062f7(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.tokens */
extern T0* T2123f12(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_class_name */
extern T0* T369f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_710 */
extern void T359f1903(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_709 */
extern void T359f1902(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].force */
extern void T1189f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].fill_with */
extern void T1191f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].extend */
extern void T1191f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1189f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1191f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_static_call_expression */
extern T0* T369f289(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_EXPRESSION.set_feature_keyword */
extern void T2122f31(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.make */
extern T0* T2122c29(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make_qualified_call */
extern void T2122f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_708 */
extern void T359f1901(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_707 */
extern void T359f1900(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_706 */
extern void T359f1899(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_705 */
extern void T359f1898(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_704 */
extern void T359f1897(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_703 */
extern void T359f1896(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_702 */
extern void T359f1895(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].force */
extern void T1121f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INSTRUCTION].fill_with */
extern void T1123f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INSTRUCTION].extend */
extern void T1123f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T1121f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T1123f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_static_call_instruction */
extern T0* T369f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.set_feature_keyword */
extern void T2121f9(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.make */
extern T0* T2121c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_INSTRUCTION.make_qualified_call */
extern void T2121f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_701 */
extern void T359f1894(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_700 */
extern void T359f1893(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_instruction */
extern T0* T369f285(GE_context* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_precursor_keyword */
extern void T2120f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_prefixed */
extern void T2120f10(GE_context* ac, T0* C, T1 a1);
/* ET_PRECURSOR_INSTRUCTION.make */
extern T0* T2120c9(GE_context* ac, T0* a1, T0* a2);
/* ET_PRECURSOR_INSTRUCTION.tokens */
extern T0* T2120f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_699 */
extern void T359f1892(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_698 */
extern void T359f1891(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_call_instruction */
extern T0* T369f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_697 */
extern void T359f1890(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_696 */
extern void T359f1889(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_instruction */
extern T0* T359f920(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_unqualified_call_instruction */
extern T0* T369f350(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.make */
extern T0* T2157c6(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_695 */
extern void T359f1888(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].force */
extern void T1146f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_ITEM].fill_with */
extern void T1148f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_ITEM].extend */
extern void T1148f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T1146f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T1148f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_string_comma */
extern T0* T369f283(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_694 */
extern void T359f1887(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].force */
extern void T1149f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_LIST].fill_with */
extern void T1151f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_LIST].extend */
extern void T1151f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.put_first */
extern void T2119f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_MANIFEST_STRING_ITEM].force */
extern void T2486f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_MANIFEST_STRING_ITEM].fill_with */
extern void T2485f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_MANIFEST_STRING_ITEM].extend */
extern void T2485f7(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.fixed_array */
extern T0* T2119f6(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T2486c2(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_693 */
extern void T359f1886(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T1149f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T1151f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_string_list */
extern T0* T369f282(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern T0* T2119c9(GE_context* ac, T6 a1);
/* ET_MANIFEST_STRING_LIST.tokens */
extern T0* T2119f5(GE_context* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern void T2119f9p1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_MANIFEST_STRING_ITEM].make */
extern T0* T2486f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_MANIFEST_STRING_ITEM].make_empty */
extern T0* T2485c4(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_692 */
extern void T359f1885(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_691 */
extern void T359f1884(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_690 */
extern void T359f1883(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_689 */
extern void T359f1882(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_688 */
extern void T359f1881(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].force */
extern void T1033f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_DEBUG_INSTRUCTION].fill_with */
extern void T1035f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_DEBUG_INSTRUCTION].extend */
extern void T1035f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T1033f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T1035f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_debug_instruction */
extern T0* T369f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEBUG_INSTRUCTION.make */
extern T0* T2118c5(GE_context* ac, T0* a1, T0* a2);
/* ET_DEBUG_INSTRUCTION.tokens */
extern T0* T2118f4(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_debug_compound */
extern T0* T369f280(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.debug_keyword */
extern T0* T94f707(GE_context* ac, T0* C);
/* ET_KEYWORD.make_debug */
extern T0* T539c70(GE_context* ac);
/* ET_COMPOUND.make */
extern T0* T456c9(GE_context* ac);
/* ET_COMPOUND.make */
extern void T456f9p1(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INSTRUCTION].make */
extern T0* T2164f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_INSTRUCTION].make_empty */
extern T0* T2163c4(GE_context* ac, T6 a1);
/* ET_COMPOUND.fixed_array */
extern T0* T456f5(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INSTRUCTION].default_create */
extern T0* T2164c2(GE_context* ac);
/* ET_TOKEN_CONSTANTS.do_keyword */
extern T0* T94f696(GE_context* ac, T0* C);
/* ET_KEYWORD.make_do */
extern T0* T539c59(GE_context* ac);
/* ET_COMPOUND.tokens */
extern T0* T456f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_687 */
extern void T359f1880(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].force */
extern void T994f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONDITIONAL].fill_with */
extern void T996f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONDITIONAL].extend */
extern void T996f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T994f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T996f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_686 */
extern void T359f1879(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_685 */
extern void T359f1878(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].force */
extern void T932f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACROSS_INSTRUCTION].fill_with */
extern void T934f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACROSS_INSTRUCTION].extend */
extern void T934f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T932f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T934f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_across_instruction_header */
extern T0* T359f919(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_FACTORY.new_across_instruction */
extern T0* T369f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ACROSS_INSTRUCTION.set_variant_part */
extern void T2156f21(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_invariant_part */
extern void T2156f20(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.make */
extern T0* T2156c16(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACROSS_INSTRUCTION.create_unfolded_form */
extern void T2156f23(GE_context* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.tokens */
extern T0* T2156f14(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_684 */
extern void T359f1877(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].force */
extern void T974f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHOICE_CONSTANT].fill_with */
extern void T976f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHOICE_CONSTANT].extend */
extern void T976f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T974f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T976f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_683 */
extern void T359f1876(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_choice_attribute_constant */
extern T0* T359f918(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_682 */
extern void T359f1875(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_681 */
extern void T359f1874(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_680 */
extern void T359f1873(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE].force */
extern void T971f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHOICE].fill_with */
extern void T973f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHOICE].extend */
extern void T973f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE].aliased_resized_area */
extern T0* T971f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CHOICE].aliased_resized_area */
extern T0* T973f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_range */
extern T0* T369f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CHOICE_RANGE.make */
extern T0* T2116c7(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.dotdot_symbol */
extern T0* T94f692(GE_context* ac, T0* C);
/* ET_SYMBOL.make_dotdot */
extern T0* T474c91(GE_context* ac);
/* ET_CHOICE_RANGE.tokens */
extern T0* T2116f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_679 */
extern void T359f1872(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_678 */
extern void T359f1871(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].force */
extern void T977f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHOICE_ITEM].fill_with */
extern void T979f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHOICE_ITEM].extend */
extern void T979f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T977f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T979f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_comma */
extern T0* T369f278(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_677 */
extern void T359f1870(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].force */
extern void T980f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHOICE_LIST].fill_with */
extern void T982f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHOICE_LIST].extend */
extern void T982f10(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.put_first */
extern void T2115f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CHOICE_ITEM].force */
extern void T2483f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CHOICE_ITEM].fill_with */
extern void T2482f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CHOICE_ITEM].extend */
extern void T2482f7(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.fixed_array */
extern T0* T2115f5(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CHOICE_ITEM].default_create */
extern T0* T2483c2(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_676 */
extern void T359f1869(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T980f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T982f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_list */
extern T0* T369f277(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_CHOICE_LIST.set_when_keyword */
extern void T2115f10(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern T0* T2115c8(GE_context* ac, T6 a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern void T2115f8p1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CHOICE_ITEM].make */
extern T0* T2483f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CHOICE_ITEM].make_empty */
extern T0* T2482c4(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.when_keyword */
extern T0* T94f704(GE_context* ac, T0* C);
/* ET_KEYWORD.make_when */
extern T0* T539c67(GE_context* ac);
/* ET_CHOICE_LIST.tokens */
extern T0* T2115f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_675 */
extern void T359f1868(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_674 */
extern void T359f1867(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_673 */
extern void T359f1866(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_672 */
extern void T359f1865(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_671 */
extern void T359f1864(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].force */
extern void T1206f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_WHEN_PART].fill_with */
extern void T1208f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_WHEN_PART].extend */
extern void T1208f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T1206f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T1208f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_part */
extern T0* T369f276(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_WHEN_PART.make */
extern T0* T1677c3(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_670 */
extern void T359f1863(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].force */
extern void T1209f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_WHEN_PART_LIST].fill_with */
extern void T1211f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_WHEN_PART_LIST].extend */
extern void T1211f10(GE_context* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.put_first */
extern void T2114f6(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_WHEN_PART].force */
extern void T2480f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_WHEN_PART].fill_with */
extern void T2479f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_WHEN_PART].extend */
extern void T2479f7(GE_context* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.fixed_array */
extern T0* T2114f3(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_WHEN_PART].default_create */
extern T0* T2480c2(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_669 */
extern void T359f1862(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T1209f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T1211f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_part_list */
extern T0* T369f275(GE_context* ac, T0* C, T6 a1);
/* ET_WHEN_PART_LIST.make_with_capacity */
extern T0* T2114c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_WHEN_PART].make */
extern T0* T2480f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_WHEN_PART].make_empty */
extern T0* T2479c4(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_668 */
extern void T359f1861(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_667 */
extern void T359f1860(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_666 */
extern void T359f1859(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].force */
extern void T1118f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INSPECT_INSTRUCTION].fill_with */
extern void T1120f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INSPECT_INSTRUCTION].extend */
extern void T1120f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T1118f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T1120f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inspect_instruction */
extern T0* T369f274(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_INSTRUCTION.set_else_compound */
extern void T2113f8(GE_context* ac, T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.make */
extern T0* T2113c7(GE_context* ac, T0* a1, T0* a2);
/* ET_INSPECT_INSTRUCTION.tokens */
extern T0* T2113f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_665 */
extern void T359f1858(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_664 */
extern void T359f1857(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].force */
extern void T1036f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION].fill_with */
extern void T1038f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION].extend */
extern void T1038f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].aliased_resized_area */
extern T0* T1036f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION].aliased_resized_area */
extern T0* T1038f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_expression */
extern T0* T369f273(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ELSEIF_EXPRESSION.make */
extern T0* T1676c7(GE_context* ac, T0* a1, T0* a2);
/* ET_ELSEIF_EXPRESSION.tokens */
extern T0* T1676f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_663 */
extern void T359f1856(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].force */
extern void T1039f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].fill_with */
extern void T1041f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].extend */
extern void T1041f10(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION_LIST.put_first */
extern void T2112f7(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_EXPRESSION].force */
extern void T2478f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ELSEIF_EXPRESSION].fill_with */
extern void T2477f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ELSEIF_EXPRESSION].extend */
extern void T2477f7(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION_LIST.fixed_array */
extern T0* T2112f5(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_EXPRESSION].default_create */
extern T0* T2478c2(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_662 */
extern void T359f1855(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].aliased_resized_area */
extern T0* T1039f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].aliased_resized_area */
extern T0* T1041f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_expression_list */
extern T0* T369f272(GE_context* ac, T0* C, T6 a1);
/* ET_ELSEIF_EXPRESSION_LIST.make_with_capacity */
extern T0* T2112c6(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_EXPRESSION].make */
extern T0* T2478f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ELSEIF_EXPRESSION].make_empty */
extern T0* T2477c4(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_661 */
extern void T359f1854(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_660 */
extern void T359f1853(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].force */
extern void T1094f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_IF_EXPRESSION].fill_with */
extern void T1096f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_IF_EXPRESSION].extend */
extern void T1096f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].aliased_resized_area */
extern T0* T1094f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_IF_EXPRESSION].aliased_resized_area */
extern T0* T1096f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_if_expression */
extern T0* T369f271(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_IF_EXPRESSION.set_elseif_parts */
extern void T2111f28(GE_context* ac, T0* C, T0* a1);
/* ET_IF_EXPRESSION.make */
extern T0* T2111c27(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_IF_EXPRESSION.tokens */
extern T0* T2111f14(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_659 */
extern void T359f1852(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_658 */
extern void T359f1851(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].force */
extern void T1042f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART].fill_with */
extern void T1044f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART].extend */
extern void T1044f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T1042f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T1044f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_part */
extern T0* T369f270(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ELSEIF_PART.make */
extern T0* T1675c4(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_657 */
extern void T359f1850(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].force */
extern void T1045f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART_LIST].fill_with */
extern void T1047f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART_LIST].extend */
extern void T1047f10(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.put_first */
extern void T2110f6(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_PART].force */
extern void T2476f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ELSEIF_PART].fill_with */
extern void T2475f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ELSEIF_PART].extend */
extern void T2475f7(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.fixed_array */
extern T0* T2110f3(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_PART].default_create */
extern T0* T2476c2(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_656 */
extern void T359f1849(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T1045f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T1047f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_part_list */
extern T0* T369f269(GE_context* ac, T0* C, T6 a1);
/* ET_ELSEIF_PART_LIST.make_with_capacity */
extern T0* T2110c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ELSEIF_PART].make */
extern T0* T2476f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ELSEIF_PART].make_empty */
extern T0* T2475c4(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_655 */
extern void T359f1848(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_654 */
extern void T359f1847(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].force */
extern void T1097f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_IF_INSTRUCTION].fill_with */
extern void T1099f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_IF_INSTRUCTION].extend */
extern void T1099f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T1097f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T1099f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_if_instruction */
extern T0* T369f268(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_IF_INSTRUCTION.set_else_compound */
extern void T2109f10(GE_context* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.set_elseif_parts */
extern void T2109f9(GE_context* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.make */
extern T0* T2109c8(GE_context* ac, T0* a1, T0* a2);
/* ET_IF_INSTRUCTION.tokens */
extern T0* T2109f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_653 */
extern void T359f1846(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_652 */
extern void T359f1845(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_651 */
extern void T359f1844(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_650 */
extern void T359f1843(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].force */
extern void T1024f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CREATION_REGION].fill_with */
extern void T1026f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CREATION_REGION].extend */
extern void T1026f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].aliased_resized_area */
extern T0* T1024f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CREATION_REGION].aliased_resized_area */
extern T0* T1026f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_creation_region */
extern T0* T369f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATION_REGION.set_right_symbol */
extern void T2108f7(GE_context* ac, T0* C, T0* a1);
/* ET_CREATION_REGION.set_left_symbol */
extern void T2108f6(GE_context* ac, T0* C, T0* a1);
/* ET_CREATION_REGION.make */
extern T0* T2108c5(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.greater_than_symbol */
extern T0* T94f1498(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.make_gt */
extern T0* T2054c89(GE_context* ac);
/* ET_SYMBOL_OPERATOR.make_leaf */
extern void T2054f99(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.less_than_symbol */
extern T0* T94f1497(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.make_lt */
extern T0* T2054c90(GE_context* ac);
/* ET_CREATION_REGION.tokens */
extern T0* T2108f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_649 */
extern void T359f1842(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_648 */
extern void T359f1841(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].force */
extern void T1021f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CREATE_EXPRESSION].fill_with */
extern void T1023f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CREATE_EXPRESSION].extend */
extern void T1023f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T1021f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T1023f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_create_expression */
extern T0* T369f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_EXPRESSION.set_creation_region */
extern void T444f31(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.set_create_keyword */
extern void T444f30(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_qualified_call */
extern T0* T369f263(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_647 */
extern void T359f1840(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_646 */
extern void T359f1839(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_create_instruction */
extern T0* T369f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CREATE_INSTRUCTION.set_creation_region */
extern void T2107f14(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.set_create_keyword */
extern void T2107f13(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.make */
extern T0* T2107c12(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_INSTRUCTION.tokens */
extern T0* T2107f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_645 */
extern void T359f1838(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_644 */
extern void T359f1837(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_643 */
extern void T359f1836(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_642 */
extern void T359f1835(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_bang_instruction */
extern T0* T369f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BANG_INSTRUCTION.set_left_bang */
extern void T2106f12(GE_context* ac, T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.make */
extern T0* T2106c11(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.bang_symbol */
extern T0* T94f1496(GE_context* ac, T0* C);
/* ET_SYMBOL.make_bang */
extern T0* T474c77(GE_context* ac);
/* ET_BANG_INSTRUCTION.tokens */
extern T0* T2106f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_641 */
extern void T359f1834(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_640 */
extern void T359f1833(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_639 */
extern void T359f1832(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_638 */
extern void T359f1831(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].force */
extern void T968f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHECK_INSTRUCTION].fill_with */
extern void T970f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHECK_INSTRUCTION].extend */
extern void T970f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T968f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T970f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_check_instruction */
extern T0* T359f917(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].remove_last */
extern void T862f15(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_ASSERTION_ITEM].keep_head */
extern void T1870f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ASSERTION_ITEM].set_count */
extern void T1870f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].move_last_cursors_after */
extern void T862f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ASSERTION_ITEM].set_next_cursor */
extern void T1872f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ASSERTION_ITEM].set_after */
extern void T1872f6(GE_context* ac, T0* C);
/* ET_CHECK_INSTRUCTION.put_first */
extern void T2155f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM].force */
extern void T1871f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ASSERTION_ITEM].fill_with */
extern void T1870f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ASSERTION_ITEM].extend */
extern void T1870f10(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.fixed_array */
extern T0* T2155f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].item */
extern T0* T862f10(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_check_instruction */
extern T0* T369f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_CHECK_INSTRUCTION.set_check_keyword */
extern void T2155f13(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.set_then_compound */
extern void T2155f12(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern T0* T2155c10(GE_context* ac, T6 a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern void T2155f10p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.check_keyword */
extern T0* T94f706(GE_context* ac, T0* C);
/* ET_KEYWORD.make_check */
extern T0* T539c69(GE_context* ac);
/* ET_CHECK_INSTRUCTION.tokens */
extern T0* T2155f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].remove_last */
extern void T368f29(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].move_last_cursors_after */
extern void T368f30(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].last */
extern T6 T368f13(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_637 */
extern void T359f1830(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_636 */
extern void T359f1829(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_635 */
extern void T359f1828(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_634 */
extern void T359f1827(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.start_check_instruction */
extern void T359f2148(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.start_assertions */
extern void T359f2153(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_633 */
extern void T359f1826(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_null_instruction */
extern T0* T369f261(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_632 */
extern void T359f1825(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_631 */
extern void T359f1824(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_630 */
extern void T359f1823(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_629 */
extern void T359f1822(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_instruction */
extern T0* T359f916(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ACROSS_INSTRUCTION.set_end_keyword */
extern void T2156f22(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_loop_compound */
extern void T2156f19(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_until_conditional */
extern void T2156f18(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_from_compound */
extern void T2156f17(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_628 */
extern void T359f1821(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_instruction */
extern T0* T369f260(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LOOP_INSTRUCTION.set_has_old_variant_syntax */
extern void T2104f13(GE_context* ac, T0* C, T1 a1);
/* ET_LOOP_INSTRUCTION.set_variant_part */
extern void T2104f12(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.set_invariant_part */
extern void T2104f11(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.make */
extern T0* T2104c10(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LOOP_INSTRUCTION.tokens */
extern T0* T2104f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_6_3_7_4554 */
extern T0* T359f915(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_627 */
extern void T359f1820(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_instruction_old_syntax */
extern T0* T369f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_EIFFEL_PARSER.yy_do_action_626 */
extern void T359f1819(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_625 */
extern void T359f1818(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_624 */
extern void T359f1817(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_623 */
extern void T359f1816(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_assignment_attempt */
extern T0* T369f257(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT_ATTEMPT.make */
extern T0* T2102c5(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_attempt_symbol */
extern T0* T94f694(GE_context* ac, T0* C);
/* ET_SYMBOL.make_assign_attempt */
extern T0* T474c93(GE_context* ac);
/* ET_ASSIGNMENT_ATTEMPT.tokens */
extern T0* T2102f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_622 */
extern void T359f1815(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_assignment */
extern T0* T369f256(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT.make */
extern T0* T2101c5(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_symbol */
extern T0* T94f693(GE_context* ac, T0* C);
/* ET_SYMBOL.make_assign */
extern T0* T474c92(GE_context* ac);
/* ET_ASSIGNMENT.tokens */
extern T0* T2101f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_621 */
extern void T359f1814(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_assigner_instruction */
extern T0* T369f255(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.make */
extern T0* T2100c15(GE_context* ac, T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.tokens */
extern T0* T2100f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_620 */
extern void T359f1813(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_619 */
extern void T359f1812(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_618 */
extern void T359f1811(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_617 */
extern void T359f1810(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_616 */
extern void T359f1809(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].force */
extern void T992f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_COMPOUND].fill_with */
extern void T993f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_COMPOUND].extend */
extern void T993f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T992f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T993f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_615 */
extern void T359f1808(GE_context* ac, T0* C);
/* ET_COMPOUND.put_first */
extern void T456f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INSTRUCTION].force */
extern void T2164f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_INSTRUCTION].fill_with */
extern void T2163f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_INSTRUCTION].extend */
extern void T2163f7(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_614 */
extern void T359f1807(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_compound */
extern T0* T369f254(GE_context* ac, T0* C, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern T0* T456c12(GE_context* ac, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern void T456f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_613 */
extern void T359f1806(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_612 */
extern void T359f1805(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_611 */
extern void T359f1804(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_610 */
extern void T359f1803(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_empty_compound */
extern T0* T369f253(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_609 */
extern void T359f1802(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_608 */
extern void T359f1801(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_compound */
extern T0* T369f252(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.loop_keyword */
extern T0* T94f701(GE_context* ac, T0* C);
/* ET_KEYWORD.make_loop */
extern T0* T539c64(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_607 */
extern void T359f1800(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_606 */
extern void T359f1799(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_605 */
extern void T359f1798(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_from_compound */
extern T0* T369f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.from_keyword */
extern T0* T94f700(GE_context* ac, T0* C);
/* ET_KEYWORD.make_from */
extern T0* T539c63(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_604 */
extern void T359f1797(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_rescue_compound */
extern T0* T369f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.rescue_keyword */
extern T0* T94f716(GE_context* ac, T0* C);
/* ET_KEYWORD.make_rescue */
extern T0* T539c79(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_603 */
extern void T359f1796(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_else_compound */
extern T0* T369f249(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_602 */
extern void T359f1795(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601 */
extern void T359f1794(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_then_compound */
extern T0* T369f248(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_401_600 */
extern void T359f1175(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_600 */
extern void T359f1793(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_599 */
extern void T359f1792(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_attribute_compound */
extern T0* T369f247(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.attribute_keyword */
extern T0* T94f730(GE_context* ac, T0* C);
/* ET_KEYWORD.make_attribute */
extern T0* T539c93(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_598 */
extern void T359f1791(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_compound */
extern T0* T369f246(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_597 */
extern void T359f1790(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].force */
extern void T1179f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].fill_with */
extern void T1181f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].extend */
extern void T1181f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T1179f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T1181f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_qualified_like_type */
extern T0* T369f245(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.make */
extern T0* T2098c72(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_attachment_symbol_separate_keyword */
extern T0* T369f135(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.make */
extern T0* T2071c18(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_596 */
extern void T359f1789(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_595 */
extern void T359f1788(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_594 */
extern void T359f1787(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_593 */
extern void T359f1786(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_attachment_separate_keywords */
extern T0* T369f134(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_592 */
extern void T359f1785(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_591 */
extern void T359f1784(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_590 */
extern void T359f1783(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_589 */
extern void T359f1782(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_588 */
extern void T359f1781(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_like_braced_type */
extern T0* T369f244(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_like_keyword */
extern void T2097f76(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.make */
extern T0* T2097c75(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.tokens */
extern T0* T2097f46(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_587 */
extern void T359f1780(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_586 */
extern void T359f1779(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_585 */
extern void T359f1778(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_584 */
extern void T359f1777(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_583 */
extern void T359f1776(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_582 */
extern void T359f1775(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_581 */
extern void T359f1774(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_580 */
extern void T359f1773(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_579 */
extern void T359f1772(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_578 */
extern void T359f1771(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_577 */
extern void T359f1770(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_576 */
extern void T359f1769(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].force */
extern void T1129f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LIKE_TYPE].fill_with */
extern void T1131f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LIKE_TYPE].extend */
extern void T1131f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T1129f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T1131f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_575 */
extern void T359f1768(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_like_current */
extern T0* T369f243(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.set_like_keyword */
extern void T498f71(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_574 */
extern void T359f1767(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_573 */
extern void T359f1766(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_572 */
extern void T359f1765(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_571 */
extern void T359f1764(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_570 */
extern void T359f1763(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_569 */
extern void T359f1762(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_568 */
extern void T359f1761(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_567 */
extern void T359f1760(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_566 */
extern void T359f1759(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.current_universe */
extern T0* T359f912(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_565 */
extern void T359f1758(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_like_feature */
extern T0* T359f911(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_like_feature */
extern T0* T369f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.set_like_keyword */
extern void T2154f77(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.make */
extern T0* T2154c76(GE_context* ac, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.tokens */
extern T0* T2154f51(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_564 */
extern void T359f1757(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_563 */
extern void T359f1756(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_562 */
extern void T359f1755(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_561 */
extern void T359f1754(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_560 */
extern void T359f1753(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_559 */
extern void T359f1752(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_558 */
extern void T359f1751(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_557 */
extern void T359f1750(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_556 */
extern void T359f1749(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_555 */
extern void T359f1748(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_554 */
extern void T359f1747(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_553 */
extern void T359f1746(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_552 */
extern void T359f1745(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].force */
extern void T937f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T939f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].extend */
extern void T939f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T937f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T939f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_labeled_actual_parameter_semicolon */
extern T0* T369f242(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_actual_parameter */
extern T0* T369f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LABELED_ACTUAL_PARAMETER.make */
extern T0* T2093c10(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_551 */
extern void T359f1744(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_550 */
extern void T359f1743(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].force */
extern void T940f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].fill_with */
extern void T941f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].extend */
extern void T941f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.add_to_actual_parameter_list */
extern void T359f2147(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_comma_actual_parameter */
extern T0* T369f241(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T2095c10(GE_context* ac, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.first */
extern T0* T333f15(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_label_comma */
extern T0* T369f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_549 */
extern void T359f1742(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_548 */
extern void T359f1741(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_547 */
extern void T359f1740(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_546 */
extern void T359f1739(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_545 */
extern void T359f1738(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T940f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T941f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_actual_parameters */
extern T0* T369f237(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T333f31(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_544 */
extern void T359f1737(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_543 */
extern void T359f1736(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_542 */
extern void T359f1735(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_541 */
extern void T359f1734(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_540 */
extern void T359f1733(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_539 */
extern void T359f1732(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_actual_parameter_comma */
extern T0* T369f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_538 */
extern void T359f1731(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_537 */
extern void T359f1730(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_tuple_type */
extern T0* T359f910(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_tuple_type */
extern T0* T369f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.set_tuple_keyword */
extern void T345f104(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.providers_enabled */
extern T1 T359f934(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_536 */
extern void T359f1729(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_named_type */
extern T0* T359f909(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_class_type */
extern T0* T369f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_generic_class_type */
extern T0* T369f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_FACTORY.new_formal_parameter_type */
extern T0* T369f344(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.make */
extern T0* T1895c68(GE_context* ac, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_CLASS.formal_parameter */
extern T0* T95f172(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter_by_name */
extern T0* T1242f16(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_535 */
extern void T359f1728(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_534 */
extern void T359f1727(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_533 */
extern void T359f1726(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_532 */
extern void T359f1725(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_531 */
extern void T359f1724(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_530 */
extern void T359f1723(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_529 */
extern void T359f1722(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_528 */
extern void T359f1721(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_527 */
extern void T359f1720(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_526 */
extern void T359f1719(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_525 */
extern void T359f1718(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE].force */
extern void T1195f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_TYPE].fill_with */
extern void T1196f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_TYPE].extend */
extern void T1196f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE].aliased_resized_area */
extern T0* T1195f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_TYPE].aliased_resized_area */
extern T0* T1196f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_524 */
extern void T359f1717(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_523 */
extern void T359f1716(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_522 */
extern void T359f1715(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_521 */
extern void T359f1714(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_520 */
extern void T359f1713(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_519 */
extern void T359f1712(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_518 */
extern void T359f1711(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_517 */
extern void T359f1710(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_516 */
extern void T359f1709(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_515 */
extern void T359f1708(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_514 */
extern void T359f1707(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_513 */
extern void T359f1706(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_512 */
extern void T359f1705(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_511 */
extern void T359f1704(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_510 */
extern void T359f1703(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_509 */
extern void T359f1702(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_508 */
extern void T359f1701(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_507 */
extern void T359f1700(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_506 */
extern void T359f1699(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_505 */
extern void T359f1698(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_504 */
extern void T359f1697(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_503 */
extern void T359f1696(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_502 */
extern void T359f1695(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_501 */
extern void T359f1694(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_500 */
extern void T359f1693(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_499 */
extern void T359f1692(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_498 */
extern void T359f1691(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_497 */
extern void T359f1690(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_496 */
extern void T359f1689(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_495 */
extern void T359f1688(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_494 */
extern void T359f1687(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_493 */
extern void T359f1686(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_492 */
extern void T359f1685(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_491 */
extern void T359f1684(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_490 */
extern void T359f1683(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_489 */
extern void T359f1682(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_488 */
extern void T359f1681(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_487 */
extern void T359f1680(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_486 */
extern void T359f1679(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_485 */
extern void T359f1678(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_484 */
extern void T359f1677(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_483 */
extern void T359f1676(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_482 */
extern void T359f1675(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_481 */
extern void T359f1674(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_480 */
extern void T359f1673(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_479 */
extern void T359f1672(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_478 */
extern void T359f1671(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_477 */
extern void T359f1670(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_476 */
extern void T359f1669(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_475 */
extern void T359f1668(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_474 */
extern void T359f1667(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_473 */
extern void T359f1666(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_472 */
extern void T359f1665(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_471 */
extern void T359f1664(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_470 */
extern void T359f1663(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_469 */
extern void T359f1662(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_468 */
extern void T359f1661(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_467 */
extern void T359f1660(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_466 */
extern void T359f1659(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_465 */
extern void T359f1658(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_464 */
extern void T359f1657(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_463 */
extern void T359f1656(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_462 */
extern void T359f1655(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_461 */
extern void T359f1654(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_460 */
extern void T359f1653(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_459 */
extern void T359f1652(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_458 */
extern void T359f1651(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_457 */
extern void T359f1650(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_456 */
extern void T359f1649(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_455 */
extern void T359f1648(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_454 */
extern void T359f1647(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_453 */
extern void T359f1646(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_452 */
extern void T359f1645(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_451 */
extern void T359f1644(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_VARIANT].force */
extern void T1203f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_VARIANT].fill_with */
extern void T1205f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_VARIANT].extend */
extern void T1205f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_450 */
extern void T359f1643(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_VARIANT].aliased_resized_area */
extern T0* T1203f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_VARIANT].aliased_resized_area */
extern T0* T1205f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_449 */
extern void T359f1642(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_variant */
extern T0* T369f236(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VARIANT.set_variant_keyword */
extern void T2092f6(GE_context* ac, T0* C, T0* a1);
/* ET_VARIANT.make */
extern T0* T2092c5(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.variant_keyword */
extern T0* T94f722(GE_context* ac, T0* C);
/* ET_KEYWORD.make_variant */
extern T0* T539c85(GE_context* ac);
/* ET_VARIANT.tokens */
extern T0* T2092f4(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_tag */
extern T0* T369f122(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_448 */
extern void T359f1641(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_447 */
extern void T359f1640(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].force */
extern void T1140f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LOOP_INVARIANTS].fill_with */
extern void T1142f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LOOP_INVARIANTS].extend */
extern void T1142f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T1140f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T1142f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_loop_invariants */
extern T0* T359f908(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.put_first */
extern void T2153f10(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.fixed_array */
extern T0* T2153f5(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_invariants */
extern T0* T369f343(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_LOOP_INVARIANTS.set_invariant_keyword */
extern void T2153f11(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern T0* T2153c9(GE_context* ac, T6 a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern void T2153f9p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.invariant_keyword */
extern T0* T94f731(GE_context* ac, T0* C);
/* ET_KEYWORD.make_invariant */
extern T0* T539c94(GE_context* ac);
/* ET_LOOP_INVARIANTS.tokens */
extern T0* T2153f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_446 */
extern void T359f1639(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_445 */
extern void T359f1638(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_444 */
extern void T359f1637(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_443 */
extern void T359f1636(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.start_loop_invariant */
extern void T359f2146(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_442 */
extern void T359f1635(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_441 */
extern void T359f1634(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].force */
extern void T1124f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INVARIANTS].fill_with */
extern void T1126f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INVARIANTS].extend */
extern void T1126f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T1124f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T1126f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_invariants */
extern T0* T359f907(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.wipe_out_last_across_components_stack */
extern void T359f1158(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].wipe_out */
extern void T860f11(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].i_th */
extern T0* T860f5(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.wipe_out_last_object_tests_stack */
extern void T359f1157(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].wipe_out */
extern void T858f11(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].i_th */
extern T0* T858f5(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.wipe_out_last_local_variables_stack */
extern void T359f1156(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].wipe_out */
extern void T855f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.wipe_out_last_formal_arguments_stack */
extern void T359f1155(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].wipe_out */
extern void T854f10(GE_context* ac, T0* C);
/* ET_INVARIANTS.set_across_components */
extern void T1735f28(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.set_object_tests */
extern void T1735f27(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.put_first */
extern void T1735f26(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.fixed_array */
extern T0* T1735f10(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_invariants */
extern T0* T369f342(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_INVARIANTS.set_invariant_keyword */
extern void T1735f29(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.make_with_capacity */
extern T0* T1735c25(GE_context* ac, T0* a1, T6 a2);
/* ET_INVARIANTS.make_assertions_with_capacity */
extern void T1735f30(GE_context* ac, T0* C, T6 a1);
/* ET_INVARIANTS.tokens */
extern T0* T1735f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_440 */
extern void T359f1633(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_439 */
extern void T359f1632(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_438 */
extern void T359f1631(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_437 */
extern void T359f1630(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.start_invariant */
extern void T359f2145(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_436 */
extern void T359f1629(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].force */
extern void T1172f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_POSTCONDITIONS].fill_with */
extern void T1174f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_POSTCONDITIONS].extend */
extern void T1174f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T1172f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T1174f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_postconditions */
extern T0* T359f906(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_POSTCONDITIONS.put_first */
extern void T1734f18(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.fixed_array */
extern T0* T1734f10(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_postconditions */
extern T0* T369f341(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_POSTCONDITIONS.set_then_keyword */
extern void T1734f20(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.set_ensure_keyword */
extern void T1734f19(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern T0* T1734c17(GE_context* ac, T6 a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern void T1734f17p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.ensure_keyword */
extern T0* T94f1440(GE_context* ac, T0* C);
/* ET_KEYWORD.make_ensure */
extern T0* T539c51(GE_context* ac);
/* ET_POSTCONDITIONS.tokens */
extern T0* T1734f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_435 */
extern void T359f1628(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_434 */
extern void T359f1627(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_433 */
extern void T359f1626(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_432 */
extern void T359f1625(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_431 */
extern void T359f1624(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.start_postcondition */
extern void T359f2144(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_430 */
extern void T359f1623(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].force */
extern void T1175f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PRECONDITIONS].fill_with */
extern void T1176f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PRECONDITIONS].extend */
extern void T1176f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].aliased_resized_area */
extern T0* T1175f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_PRECONDITIONS].aliased_resized_area */
extern T0* T1176f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_preconditions */
extern T0* T359f905(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.put_first */
extern void T529f17(GE_context* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.fixed_array */
extern T0* T529f7(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_preconditions */
extern T0* T369f340(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_PRECONDITIONS.set_else_keyword */
extern void T529f19(GE_context* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.set_require_keyword */
extern void T529f18(GE_context* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern T0* T529c16(GE_context* ac, T6 a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern void T529f16p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.require_keyword */
extern T0* T94f778(GE_context* ac, T0* C);
/* ET_KEYWORD.make_require */
extern T0* T539c54(GE_context* ac);
/* ET_PRECONDITIONS.tokens */
extern T0* T529f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_429 */
extern void T359f1622(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_428 */
extern void T359f1621(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_427 */
extern void T359f1620(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_426 */
extern void T359f1619(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_425 */
extern void T359f1618(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.start_precondition */
extern void T359f2143(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_424 */
extern void T359f1617(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_class_assertion */
extern void T359f2142(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.add_untagged_assertion */
extern void T359f2152(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T359f2152ot1(T0* a1, T0** a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].force_last */
extern void T862f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].resize */
extern void T862f18(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1871f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1870f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].new_capacity */
extern T6 T862f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].extendible */
extern T1 T862f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].replace */
extern void T862f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_AST_FACTORY.new_assertion_semicolon */
extern T0* T369f328(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TAGGED_ASSERTION.set_untagged_assertion */
extern void T1718f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].last */
extern T0* T862f9(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_class_assertion */
extern T0* T369f235(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_ASSERTION.set_class_keyword */
extern void T2091f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_ASSERTION.make */
extern T0* T2091c7(GE_context* ac);
/* ET_CLASS_ASSERTION.tokens */
extern T0* T2091f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_423 */
extern void T359f1616(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_422 */
extern void T359f1615(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_tagged_assertion */
extern void T359f2141(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T359f2141ot1(T0* a1, T0** a2);
/* ET_AST_FACTORY.new_tagged_assertion */
extern T0* T369f327(GE_context* ac, T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.make */
extern T0* T1718c7(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.report_syntax_error */
extern void T359f1179(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_syntax_error */
extern void T359f1183(GE_context* ac, T0* C);
/* ET_FILE_POSITION.column */
extern T6 T1716f3(GE_context* ac, T0* C);
/* ET_FILE_POSITION.line */
extern T6 T1716f6(GE_context* ac, T0* C);
/* ET_FILE_POSITION.is_null */
extern T1 T1716f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.current_position */
extern T0* T359f700(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_421 */
extern void T359f1614(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_420 */
extern void T359f1613(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_expression_assertion */
extern void T359f2140(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_419 */
extern void T359f1612(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_418 */
extern void T359f1611(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_417 */
extern void T359f1610(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_416 */
extern void T359f1609(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_415 */
extern void T359f1608(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_414 */
extern void T359f1607(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_413 */
extern void T359f1606(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_412 */
extern void T359f1605(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].force */
extern void T1135f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].fill_with */
extern void T1137f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].extend */
extern void T1137f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T1135f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T1137f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_variable_semicolon */
extern T0* T369f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_local_variable */
extern T0* T369f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LOCAL_VARIABLE.make */
extern T0* T1655c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_411 */
extern void T359f1604(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_410 */
extern void T359f1603(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].force */
extern void T1132f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE].fill_with */
extern void T1134f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE].extend */
extern void T1134f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T1132f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T1134f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_comma_variable */
extern T0* T369f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LOCAL_COMMA_VARIABLE.make */
extern T0* T2089c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_type */
extern T0* T359f902(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_409 */
extern void T359f1602(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_local_name_comma */
extern T0* T369f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_408 */
extern void T359f1601(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.put_first */
extern void T2027f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LOCAL_VARIABLE_ITEM].force */
extern void T2461f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LOCAL_VARIABLE_ITEM].fill_with */
extern void T2459f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LOCAL_VARIABLE_ITEM].extend */
extern void T2459f7(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.fixed_array */
extern T0* T2027f10(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T2461c2(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_407 */
extern void T359f1600(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_406 */
extern void T359f1599(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.set_declared_type */
extern void T2089f8(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.first */
extern T0* T2027f6(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.is_empty */
extern T1 T2027f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_405 */
extern void T359f1598(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_404 */
extern void T359f1597(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_local_variables */
extern T0* T359f903(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_AST_FACTORY.new_local_variables */
extern T0* T369f339(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_LOCAL_VARIABLE_LIST.set_local_keyword */
extern void T2027f13(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern T0* T2027c11(GE_context* ac, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern void T2027f11p1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T2461f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LOCAL_VARIABLE_ITEM].make_empty */
extern T0* T2459c4(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.local_keyword */
extern T0* T94f709(GE_context* ac, T0* C);
/* ET_KEYWORD.make_local */
extern T0* T539c72(GE_context* ac);
/* ET_LOCAL_VARIABLE_LIST.tokens */
extern T0* T2027f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_403 */
extern void T359f1596(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_402 */
extern void T359f1595(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401 */
extern void T359f1594(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201_400 */
extern void T359f1174(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_400 */
extern void T359f1593(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_399 */
extern void T359f1592(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_398 */
extern void T359f1591(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].force */
extern void T1081f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].fill_with */
extern void T1083f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].extend */
extern void T1083f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T1081f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T1083f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_argument_semicolon */
extern T0* T369f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_formal_argument */
extern T0* T369f229(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_ARGUMENT.make */
extern T0* T350c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_397 */
extern void T359f1590(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_396 */
extern void T359f1589(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].force */
extern void T1078f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT].fill_with */
extern void T1080f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT].extend */
extern void T1080f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T1078f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T1080f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_comma_argument */
extern T0* T369f228(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.make */
extern T0* T2087c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_395 */
extern void T359f1588(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_argument_name_comma */
extern T0* T369f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_394 */
extern void T359f1587(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.put_first */
extern void T347f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_ARGUMENT_ITEM].force */
extern void T2402f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FORMAL_ARGUMENT_ITEM].fill_with */
extern void T2400f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FORMAL_ARGUMENT_ITEM].extend */
extern void T2400f7(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.fixed_array */
extern T0* T347f11(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T2402c2(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_393 */
extern void T359f1586(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_392 */
extern void T359f1585(GE_context* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_declared_type */
extern void T2087f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.first */
extern T0* T347f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_391 */
extern void T359f1584(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_390 */
extern void T359f1583(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_formal_arguments */
extern T0* T359f901(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AST_FACTORY.new_formal_arguments */
extern T0* T369f338(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T347c12(GE_context* ac, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern void T347f12p1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T2402f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_FORMAL_ARGUMENT_ITEM].make_empty */
extern T0* T2400c4(GE_context* ac, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.tokens */
extern T0* T347f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_389 */
extern void T359f1582(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_388 */
extern void T359f1581(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_387 */
extern void T359f1580(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_386 */
extern void T359f1579(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_385 */
extern void T359f1578(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_384 */
extern void T359f1577(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].force */
extern void T954f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ALIAS_NAME].fill_with */
extern void T956f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ALIAS_NAME].extend */
extern void T956f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T954f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T956f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_invalid_alias_name */
extern T0* T359f900(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_alias_free_name */
extern T0* T359f949(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_alias_free_name */
extern T0* T369f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_FREE_NAME.set_alias_keyword */
extern void T2086f45(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.make_infix */
extern T0* T2086c44(GE_context* ac, T0* a1);
/* ET_ALIAS_FREE_NAME.string_ */
extern T0* T2086f35(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.default_keyword */
extern T0* T2086f38(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_keyword */
extern T0* T94f705(GE_context* ac, T0* C);
/* ET_KEYWORD.make_alias */
extern T0* T539c68(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_383 */
extern void T359f1576(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_parenthesis_name */
extern T0* T369f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.set_alias_keyword */
extern void T1573f64(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.make_parenthesis */
extern T0* T1573c84(GE_context* ac, T0* a1);
/* ET_ALIAS_NAME.default_keyword */
extern T0* T1573f62(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_382 */
extern void T359f1575(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_bracket_name */
extern T0* T369f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_bracket */
extern T0* T1573c83(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_381 */
extern void T359f1574(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_380 */
extern void T359f1573(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_dotdot_name */
extern T0* T369f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_dotdot */
extern T0* T1573c82(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_379 */
extern void T359f1572(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_xor_name */
extern T0* T369f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_xor */
extern T0* T1573c81(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_378 */
extern void T359f1571(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_implies_name */
extern T0* T369f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_implies */
extern T0* T1573c80(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_377 */
extern void T359f1570(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_else_name */
extern T0* T369f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or_else */
extern T0* T1573c79(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_376 */
extern void T359f1569(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_name */
extern T0* T369f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or */
extern T0* T1573c78(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_375 */
extern void T359f1568(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_then_name */
extern T0* T369f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and_then */
extern T0* T1573c77(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_374 */
extern void T359f1567(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_name */
extern T0* T369f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and */
extern T0* T1573c76(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_373 */
extern void T359f1566(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_ge_name */
extern T0* T369f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_ge */
extern T0* T1573c75(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_372 */
extern void T359f1565(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_gt_name */
extern T0* T369f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_gt */
extern T0* T1573c74(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_371 */
extern void T359f1564(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_le_name */
extern T0* T369f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_le */
extern T0* T1573c73(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_370 */
extern void T359f1563(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_lt_name */
extern T0* T369f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_lt */
extern T0* T1573c72(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_369 */
extern void T359f1562(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_power_name */
extern T0* T369f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_power */
extern T0* T1573c71(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_368 */
extern void T359f1561(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_mod_name */
extern T0* T369f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_mod */
extern T0* T1573c70(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_367 */
extern void T359f1560(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_div_name */
extern T0* T369f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_div */
extern T0* T1573c69(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_366 */
extern void T359f1559(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_divide_name */
extern T0* T369f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_divide */
extern T0* T1573c68(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_365 */
extern void T359f1558(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_times_name */
extern T0* T369f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_times */
extern T0* T1573c67(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_364 */
extern void T359f1557(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_minus_name */
extern T0* T369f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_minus */
extern T0* T1573c66(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_363 */
extern void T359f1556(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_plus_name */
extern T0* T369f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_plus */
extern T0* T1573c65(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_362 */
extern void T359f1555(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_not_name */
extern T0* T369f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_not */
extern T0* T1573c63(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_361 */
extern void T359f1554(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].force */
extern void T1058f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].fill_with */
extern void T1060f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].extend */
extern void T1060f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T1058f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T1060f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_aliased_feature_name */
extern T0* T369f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_360 */
extern void T359f1553(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_359 */
extern void T359f1552(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].force */
extern void T1073f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME].fill_with */
extern void T1074f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME].extend */
extern void T1074f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1073f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1074f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_invalid_infix_name */
extern T0* T359f899(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_infix_free_name */
extern T0* T359f948(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_infix_free_name */
extern T0* T369f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_FREE_NAME.set_infix_keyword */
extern void T1533f69(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.make */
extern T0* T1533c68(GE_context* ac, T0* a1);
/* ET_INFIX_FREE_NAME.string_ */
extern T0* T1533f19(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.default_keyword */
extern T0* T1533f16(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_keyword */
extern T0* T94f708(GE_context* ac, T0* C);
/* ET_KEYWORD.make_infix */
extern T0* T539c71(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_358 */
extern void T359f1551(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_357 */
extern void T359f1550(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_invalid_prefix_name */
extern T0* T359f898(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_prefix_free_name */
extern T0* T359f947(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_name */
extern T0* T369f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_FREE_NAME.set_prefix_keyword */
extern void T2084f69(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.make */
extern T0* T2084c68(GE_context* ac, T0* a1);
/* ET_PREFIX_FREE_NAME.string_ */
extern T0* T2084f45(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.default_keyword */
extern T0* T2084f47(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.prefix_keyword */
extern T0* T94f714(GE_context* ac, T0* C);
/* ET_KEYWORD.make_prefix */
extern T0* T539c77(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_356 */
extern void T359f1549(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_355 */
extern void T359f1548(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_354 */
extern void T359f1547(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_353 */
extern void T359f1546(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_352 */
extern void T359f1545(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_351 */
extern void T359f1544(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_350 */
extern void T359f1543(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_349 */
extern void T359f1542(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_348 */
extern void T359f1541(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_347 */
extern void T359f1540(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_346 */
extern void T359f1539(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_345 */
extern void T359f1538(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_344 */
extern void T359f1537(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_343 */
extern void T359f1536(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_342 */
extern void T359f1535(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_341 */
extern void T359f1534(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_340 */
extern void T359f1533(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_xor_name */
extern T0* T369f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.set_infix_keyword */
extern void T2085f85(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_NAME.make_xor */
extern T0* T2085c101(GE_context* ac, T0* a1);
/* ET_INFIX_NAME.default_keyword */
extern T0* T2085f64(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_339 */
extern void T359f1532(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_implies_name */
extern T0* T369f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_implies */
extern T0* T2085c100(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_338 */
extern void T359f1531(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_else_name */
extern T0* T369f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or_else */
extern T0* T2085c99(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_337 */
extern void T359f1530(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_name */
extern T0* T369f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or */
extern T0* T2085c98(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_336 */
extern void T359f1529(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_then_name */
extern T0* T369f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and_then */
extern T0* T2085c97(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_335 */
extern void T359f1528(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_name */
extern T0* T369f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and */
extern T0* T2085c96(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_334 */
extern void T359f1527(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_ge_name */
extern T0* T369f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_ge */
extern T0* T2085c95(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_333 */
extern void T359f1526(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_gt_name */
extern T0* T369f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_gt */
extern T0* T2085c94(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_332 */
extern void T359f1525(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_le_name */
extern T0* T369f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_le */
extern T0* T2085c93(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_331 */
extern void T359f1524(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_lt_name */
extern T0* T369f193(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_lt */
extern T0* T2085c92(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_330 */
extern void T359f1523(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_power_name */
extern T0* T369f192(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_power */
extern T0* T2085c91(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_329 */
extern void T359f1522(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_mod_name */
extern T0* T369f191(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_mod */
extern T0* T2085c90(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_328 */
extern void T359f1521(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_div_name */
extern T0* T369f190(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_div */
extern T0* T2085c89(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_327 */
extern void T359f1520(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_divide_name */
extern T0* T369f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_divide */
extern T0* T2085c88(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_326 */
extern void T359f1519(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_times_name */
extern T0* T369f188(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_times */
extern T0* T2085c87(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_325 */
extern void T359f1518(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_minus_name */
extern T0* T369f187(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_minus */
extern T0* T2085c86(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_324 */
extern void T359f1517(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_plus_name */
extern T0* T369f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_plus */
extern T0* T2085c84(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_323 */
extern void T359f1516(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_322 */
extern void T359f1515(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_minus_name */
extern T0* T369f184(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.set_prefix_keyword */
extern void T2083f85(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_NAME.make_minus */
extern T0* T2083c87(GE_context* ac, T0* a1);
/* ET_PREFIX_NAME.default_keyword */
extern T0* T2083f50(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_321 */
extern void T359f1514(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_plus_name */
extern T0* T369f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_plus */
extern T0* T2083c86(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_320 */
extern void T359f1513(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_not_name */
extern T0* T369f182(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_not */
extern T0* T2083c84(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_319 */
extern void T359f1512(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_318 */
extern void T359f1511(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].force */
extern void T957f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ASSIGNER].fill_with */
extern void T959f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ASSIGNER].extend */
extern void T959f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T957f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T959f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_assigner */
extern T0* T369f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_317 */
extern void T359f1510(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_316 */
extern void T359f1509(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].force */
extern void T1061f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXTERNAL_ALIAS].fill_with */
extern void T1063f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXTERNAL_ALIAS].extend */
extern void T1063f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T1061f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T1063f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_external_alias */
extern T0* T369f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_315 */
extern void T359f1508(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_314 */
extern void T359f1507(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].force */
extern void T920f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_SEMICOLON_SYMBOL].fill_with */
extern void T922f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_SEMICOLON_SYMBOL].extend */
extern void T922f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_313 */
extern void T359f1506(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T920f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T922f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_312 */
extern void T359f1505(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_311 */
extern void T359f1504(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_310 */
extern void T359f1503(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].force */
extern void T1177f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PROCEDURE].fill_with */
extern void T1178f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PROCEDURE].extend */
extern void T1178f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].aliased_resized_area */
extern T0* T1177f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_PROCEDURE].aliased_resized_area */
extern T0* T1178f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_external_procedure */
extern T0* T359f897(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_AST_FACTORY.new_external_procedure */
extern T0* T369f337(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EXTERNAL_PROCEDURE.set_first_indexing */
extern void T2152f96(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_alias_clause */
extern void T2152f94(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_postconditions */
extern void T2152f93(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_preconditions */
extern void T2152f92(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_obsolete_message */
extern void T2152f91(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_is_keyword */
extern void T2152f90(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_keyword */
extern T0* T94f698(GE_context* ac, T0* C);
/* ET_KEYWORD.make_is */
extern T0* T539c61(GE_context* ac);
/* ET_EXTERNAL_PROCEDURE.make */
extern T0* T2152c86(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.tokens */
extern T0* T2152f69(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_309 */
extern void T359f1502(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_308 */
extern void T359f1501(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_deferred_procedure */
extern T0* T369f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13);
/* ET_DEFERRED_PROCEDURE.set_first_indexing */
extern void T596f89(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_postconditions */
extern void T596f87(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_preconditions */
extern void T596f86(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_obsolete_message */
extern void T596f85(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_is_keyword */
extern void T596f84(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_307 */
extern void T359f1500(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_306 */
extern void T359f1499(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_procedure */
extern T0* T369f178(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_ONCE_PROCEDURE.set_first_indexing */
extern void T2082f94(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_rescue_clause */
extern void T2082f92(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_postconditions */
extern void T2082f91(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_compound */
extern void T2082f90(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_keys */
extern void T2082f89(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_locals */
extern void T2082f88(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_preconditions */
extern void T2082f87(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_obsolete_message */
extern void T2082f86(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_is_keyword */
extern void T2082f85(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.make */
extern T0* T2082c81(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.tokens */
extern T0* T2082f56(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_305 */
extern void T359f1498(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_304 */
extern void T359f1497(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_procedure */
extern T0* T369f177(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DO_PROCEDURE.set_first_indexing */
extern void T592f93(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_rescue_clause */
extern void T592f91(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_postconditions */
extern void T592f90(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_compound */
extern void T592f89(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_locals */
extern void T592f88(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_preconditions */
extern void T592f87(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_obsolete_message */
extern void T592f86(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_is_keyword */
extern void T592f85(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_303 */
extern void T359f1496(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_302 */
extern void T359f1495(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUERY].force */
extern void T1182f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_QUERY].fill_with */
extern void T1183f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_QUERY].extend */
extern void T1183f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUERY].aliased_resized_area */
extern T0* T1182f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_QUERY].aliased_resized_area */
extern T0* T1183f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_external_function */
extern T0* T359f896(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_AST_FACTORY.new_external_function */
extern T0* T369f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EXTERNAL_FUNCTION.set_first_indexing */
extern void T344f99(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_alias_clause */
extern void T344f97(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_postconditions */
extern void T344f96(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_preconditions */
extern void T344f95(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_obsolete_message */
extern void T344f94(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_assigner */
extern void T344f93(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_is_keyword */
extern void T344f92(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.make */
extern T0* T344c88(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_FUNCTION.tokens */
extern T0* T344f60(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_301 */
extern void T359f1494(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_300 */
extern void T359f1493(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_299 */
extern void T359f1492(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_298 */
extern void T359f1491(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_deferred_function */
extern T0* T369f175(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DEFERRED_FUNCTION.set_first_indexing */
extern void T2081f89(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_postconditions */
extern void T2081f87(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_preconditions */
extern void T2081f86(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_obsolete_message */
extern void T2081f85(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_assigner */
extern void T2081f84(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_is_keyword */
extern void T2081f83(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.make */
extern T0* T2081c79(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.make */
extern void T2081f79p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.tokens */
extern T0* T2081f66(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_297 */
extern void T359f1490(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_296 */
extern void T359f1489(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_295 */
extern void T359f1488(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_294 */
extern void T359f1487(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_function */
extern T0* T369f174(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17, T0* a18);
/* ET_ONCE_FUNCTION.set_first_indexing */
extern void T2080f96(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_rescue_clause */
extern void T2080f94(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_postconditions */
extern void T2080f93(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_compound */
extern void T2080f92(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_keys */
extern void T2080f91(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_locals */
extern void T2080f90(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_preconditions */
extern void T2080f89(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_obsolete_message */
extern void T2080f88(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_assigner */
extern void T2080f87(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_is_keyword */
extern void T2080f86(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.make */
extern T0* T2080c82(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ONCE_FUNCTION.tokens */
extern T0* T2080f70(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_293 */
extern void T359f1486(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_292 */
extern void T359f1485(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_291 */
extern void T359f1484(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_290 */
extern void T359f1483(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_function */
extern T0* T369f172(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_DO_FUNCTION.set_first_indexing */
extern void T2079f93(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_rescue_clause */
extern void T2079f91(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_postconditions */
extern void T2079f90(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_compound */
extern void T2079f89(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_locals */
extern void T2079f88(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_preconditions */
extern void T2079f87(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_obsolete_message */
extern void T2079f86(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_assigner */
extern void T2079f85(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_is_keyword */
extern void T2079f84(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.make */
extern T0* T2079c80(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DO_FUNCTION.tokens */
extern T0* T2079f66(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_289 */
extern void T359f1482(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_288 */
extern void T359f1481(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_287 */
extern void T359f1480(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_286 */
extern void T359f1479(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_unique_attribute */
extern T0* T369f171(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_UNIQUE_ATTRIBUTE.set_assigner */
extern void T494f84(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.make */
extern T0* T494c80(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_INTEGER_CONSTANT.make */
extern T0* T495c64(GE_context* ac, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.compute_value */
extern void T495f70(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.make_leaf */
extern void T495f69(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unique_keyword */
extern T0* T94f776(GE_context* ac, T0* C);
/* ET_KEYWORD.make_unique */
extern T0* T539c53(GE_context* ac);
/* ET_UNIQUE_ATTRIBUTE.tokens */
extern T0* T494f31(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_285 */
extern void T359f1478(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_284 */
extern void T359f1477(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_constant_attribute */
extern T0* T369f170(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CONSTANT_ATTRIBUTE.set_assigner */
extern void T492f83(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.make */
extern T0* T492c79(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTANT_ATTRIBUTE.tokens */
extern T0* T492f26(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_283 */
extern void T359f1476(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_282 */
extern void T359f1475(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_extended_attribute */
extern T0* T369f169(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_EXTENDED_ATTRIBUTE.set_first_indexing */
extern void T454f91(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_rescue_clause */
extern void T454f89(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_postconditions */
extern void T454f88(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_compound */
extern void T454f87(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_locals */
extern void T454f86(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_preconditions */
extern void T454f85(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_obsolete_message */
extern void T454f84(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_assigner */
extern void T454f83(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.make */
extern T0* T454c79(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.make */
extern void T454f79p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.tokens */
extern T0* T454f33(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_281 */
extern void T359f1474(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_attribute */
extern T0* T369f168(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ATTRIBUTE.set_assigner */
extern void T496f80(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.make */
extern T0* T496c76(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ATTRIBUTE.tokens */
extern T0* T496f24(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_280 */
extern void T359f1473(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_279 */
extern void T359f1472(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_procedure_synonym */
extern void T359f2138(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].back */
extern void T864f21(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].cursor_back */
extern void T864f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].add_traversing_cursor */
extern void T864f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].remove_traversing_cursor */
extern void T864f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].set_position */
extern void T1876f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].force_left */
extern void T864f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].force_left_cursor */
extern void T864f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].put */
extern void T864f31(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].move_cursors_right */
extern void T864f34(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].move_right */
extern void T864f33(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].put_last */
extern void T864f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].index */
extern T6 T1876f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].cursor_index */
extern T6 T864f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].forth */
extern void T864f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].cursor_forth */
extern void T864f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].before */
extern T1 T864f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].cursor_before */
extern T1 T864f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].before */
extern T1 T1876f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_procedure_synonym */
extern T0* T359f894(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_278 */
extern void T359f1471(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_extended_feature_name_comma */
extern T0* T369f166(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_277 */
extern void T359f1470(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_276 */
extern void T359f1469(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_275 */
extern void T359f1468(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_procedure */
extern void T359f2137(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].finish */
extern void T864f18(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].cursor_finish */
extern void T864f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].off */
extern T1 T1876f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].after */
extern T1 T1876f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_274 */
extern void T359f1467(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_273 */
extern void T359f1466(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_query_synonym */
extern void T359f2136(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].back */
extern void T863f21(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].cursor_back */
extern void T863f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].add_traversing_cursor */
extern void T863f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].remove_traversing_cursor */
extern void T863f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].set_position */
extern void T1874f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].force_left */
extern void T863f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].force_left_cursor */
extern void T863f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].put */
extern void T863f31(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].move_cursors_right */
extern void T863f34(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].move_right */
extern void T863f33(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].put_last */
extern void T863f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].index */
extern T6 T1874f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].cursor_index */
extern T6 T863f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].forth */
extern void T863f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].cursor_forth */
extern void T863f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].before */
extern T1 T863f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].cursor_before */
extern T1 T863f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].before */
extern T1 T1874f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_query_synonym */
extern T0* T359f893(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_272 */
extern void T359f1465(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_271 */
extern void T359f1464(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_270 */
extern void T359f1463(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_269 */
extern void T359f1462(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_query */
extern void T359f2135(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].finish */
extern void T863f18(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].cursor_finish */
extern void T863f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].off */
extern T1 T1874f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].after */
extern T1 T1874f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_268 */
extern void T359f1461(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_267 */
extern void T359f1460(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_266 */
extern void T359f1459(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_265 */
extern void T359f1458(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_264 */
extern void T359f1457(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_263 */
extern void T359f1456(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].force */
extern void T1064f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE].fill_with */
extern void T1066f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE].extend */
extern void T1066f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T1064f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T1066f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_clause */
extern T0* T369f165(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CLAUSE.make */
extern T0* T1631c4(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.feature_keyword */
extern T0* T94f719(GE_context* ac, T0* C);
/* ET_KEYWORD.make_feature */
extern T0* T539c82(GE_context* ac);
/* ET_FEATURE_CLAUSE.tokens */
extern T0* T1631f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_any_clients */
extern T0* T359f892(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_client */
extern T0* T359f890(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_client */
extern T0* T369f334(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.current_system */
extern T0* T359f946(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_262 */
extern void T359f1455(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_261 */
extern void T359f1454(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_260 */
extern void T359f1453(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_259 */
extern void T359f1452(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].force */
extern void T1067f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].fill_with */
extern void T1069f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].extend */
extern void T1069f10(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE_LIST.put_first */
extern void T2077f5(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_CLAUSE].force */
extern void T2471f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FEATURE_CLAUSE].fill_with */
extern void T2470f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FEATURE_CLAUSE].extend */
extern void T2470f6(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE_LIST.fixed_array */
extern T0* T2077f3(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_CLAUSE].default_create */
extern T0* T2471c2(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_258 */
extern void T359f1451(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T1067f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T1069f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_clauses */
extern T0* T369f164(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CLAUSE_LIST.make_with_capacity */
extern T0* T2077c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE_CLAUSE].make */
extern T0* T2471f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_FEATURE_CLAUSE].make_empty */
extern T0* T2470c3(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_257 */
extern void T359f1450(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_features */
extern void T359f2134(GE_context* ac, T0* C);
extern T1 T359f2134ot1(T0* a1, T0** a2);
/* ET_REGULAR_INTEGER_CONSTANT.set_value */
extern void T495f71(GE_context* ac, T0* C, T11 a1);
/* NATURAL_64.out */
extern T0* T11f10(GE_context* ac, T11* C);
/* STRING_8.append_natural_64 */
extern void T17f80(GE_context* ac, T0* C, T11 a1);
/* ET_EIFFEL_PARSER.yy_do_action_256 */
extern void T359f1449(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_255 */
extern void T359f1448(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_254 */
extern void T359f1447(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].force */
extern void T1197f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_TYPE_ITEM].fill_with */
extern void T1199f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_TYPE_ITEM].extend */
extern void T1199f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T1197f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T1199f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_comma */
extern T0* T369f163(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_253 */
extern void T359f1446(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].force */
extern void T1200f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_TYPE_LIST].fill_with */
extern void T1202f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_TYPE_LIST].extend */
extern void T1202f10(GE_context* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.put_first */
extern void T1820f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_TYPE_ITEM].force */
extern void T2294f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_TYPE_ITEM].fill_with */
extern void T2293f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_TYPE_ITEM].extend */
extern void T2293f7(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_252 */
extern void T359f1445(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T1200f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T1202f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_types */
extern T0* T369f162(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACED_TYPE_LIST.set_left_brace */
extern void T1820f11(GE_context* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern T0* T1820c9(GE_context* ac, T6 a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern void T1820f9p1(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_251 */
extern void T359f1444(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_250 */
extern void T359f1443(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_249 */
extern void T359f1442(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_248 */
extern void T359f1441(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].force */
extern void T1012f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE].fill_with */
extern void T1014f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE].extend */
extern void T1014f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T1012f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T1014f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_procedure */
extern T0* T369f161(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_PROCEDURE.make */
extern T0* T2076c9(GE_context* ac, T0* a1, T0* a2);
/* ET_CONVERT_PROCEDURE.tokens */
extern T0* T2076f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_247 */
extern void T359f1440(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_convert_function */
extern T0* T369f160(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FUNCTION.make */
extern T0* T2075c8(GE_context* ac, T0* a1, T0* a2);
/* ET_CONVERT_FUNCTION.tokens */
extern T0* T2075f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_246 */
extern void T359f1439(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].force */
extern void T1015f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].fill_with */
extern void T1017f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].extend */
extern void T1017f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T1015f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T1017f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_feature_comma */
extern T0* T369f159(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_245 */
extern void T359f1438(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].force */
extern void T1018f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_LIST].fill_with */
extern void T1020f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_LIST].extend */
extern void T1020f10(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_FEATURE_LIST.put_first */
extern void T1726f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CONVERT_FEATURE_ITEM].force */
extern void T2261f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CONVERT_FEATURE_ITEM].fill_with */
extern void T2260f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CONVERT_FEATURE_ITEM].extend */
extern void T2260f7(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_FEATURE_LIST.fixed_array */
extern T0* T1726f5(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T2261c2(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_244 */
extern void T359f1437(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T1018f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T1020f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_features */
extern T0* T369f158(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern T0* T1726c8(GE_context* ac, T6 a1);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern void T1726f8p1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CONVERT_FEATURE_ITEM].make */
extern T0* T2261f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CONVERT_FEATURE_ITEM].make_empty */
extern T0* T2260c4(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.convert_keyword */
extern T0* T94f718(GE_context* ac, T0* C);
/* ET_KEYWORD.make_convert */
extern T0* T539c81(GE_context* ac);
/* ET_CONVERT_FEATURE_LIST.tokens */
extern T0* T1726f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_243 */
extern void T359f1436(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_242 */
extern void T359f1435(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_241 */
extern void T359f1434(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_240 */
extern void T359f1433(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_239 */
extern void T359f1432(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_238 */
extern void T359f1431(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].force */
extern void T1075f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME_ITEM].fill_with */
extern void T1077f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME_ITEM].extend */
extern void T1077f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T1075f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T1077f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_name_comma */
extern T0* T369f155(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_237 */
extern void T359f1430(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR].force */
extern void T1027f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CREATOR].fill_with */
extern void T1029f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CREATOR].extend */
extern void T1029f10(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR.put_first */
extern void T1625f17(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR.fixed_array */
extern T0* T1625f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_236 */
extern void T359f1429(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR].aliased_resized_area */
extern T0* T1027f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CREATOR].aliased_resized_area */
extern T0* T1029f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_creator */
extern T0* T369f157(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CREATOR.make_with_capacity */
extern T0* T1625c16(GE_context* ac, T0* a1, T6 a2);
/* ET_CREATOR.make_feature_name_list_with_capacity */
extern void T1625f18(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.creation_keyword */
extern T0* T94f723(GE_context* ac, T0* C);
/* ET_KEYWORD.make_creation */
extern T0* T539c86(GE_context* ac);
/* ET_CREATOR.tokens */
extern T0* T1625f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_235 */
extern void T359f1428(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_234 */
extern void T359f1427(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_233 */
extern void T359f1426(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_232 */
extern void T359f1425(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_231 */
extern void T359f1424(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_230 */
extern void T359f1423(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_229 */
extern void T359f1422(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_228 */
extern void T359f1421(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_227 */
extern void T359f1420(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_226 */
extern void T359f1419(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_225 */
extern void T359f1418(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_224 */
extern void T359f1417(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_223 */
extern void T359f1416(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_222 */
extern void T359f1415(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].force */
extern void T1030f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CREATOR_LIST].fill_with */
extern void T1032f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CREATOR_LIST].extend */
extern void T1032f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T1030f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T1032f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_221 */
extern void T359f1414(GE_context* ac, T0* C);
/* ET_CREATOR_LIST.put_first */
extern void T1537f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CREATOR].force */
extern void T2241f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CREATOR].fill_with */
extern void T2240f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CREATOR].extend */
extern void T2240f7(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.fixed_array */
extern T0* T1537f3(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CREATOR].default_create */
extern T0* T2241c2(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_220 */
extern void T359f1413(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_creators */
extern T0* T369f156(GE_context* ac, T0* C, T6 a1);
/* ET_CREATOR_LIST.make_with_capacity */
extern T0* T1537c9(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CREATOR].make */
extern T0* T2241f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CREATOR].make_empty */
extern T0* T2240c4(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_219 */
extern void T359f1412(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_218 */
extern void T359f1411(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_217 */
extern void T359f1410(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_216 */
extern void T359f1409(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].force */
extern void T1127f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].fill_with */
extern void T1128f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].extend */
extern void T1128f10(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.put_first */
extern void T1935f9(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.fixed_array */
extern T0* T1935f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_215 */
extern void T359f1408(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T1127f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T1128f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_keyword_feature_name_list */
extern T0* T369f154(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern T0* T1935c8(GE_context* ac, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern void T1935f8p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.redefine_keyword */
extern T0* T94f728(GE_context* ac, T0* C);
/* ET_KEYWORD.make_redefine */
extern T0* T539c91(GE_context* ac);
/* ET_KEYWORD_FEATURE_NAME_LIST.tokens */
extern T0* T1935f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_214 */
extern void T359f1407(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_213 */
extern void T359f1406(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_212 */
extern void T359f1405(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_211 */
extern void T359f1404(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_210 */
extern void T359f1403(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_209 */
extern void T359f1402(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_208 */
extern void T359f1401(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_207 */
extern void T359f1400(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_206 */
extern void T359f1399(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_205 */
extern void T359f1398(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_204 */
extern void T359f1397(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_203 */
extern void T359f1396(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_202 */
extern void T359f1395(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201 */
extern void T359f1394(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_1_200 */
extern void T359f1173(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_200 */
extern void T359f1393(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_199 */
extern void T359f1392(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_198 */
extern void T359f1391(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].force */
extern void T989f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CLIENTS].fill_with */
extern void T991f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CLIENTS].extend */
extern void T991f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T989f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T991f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_clients */
extern T0* T369f153(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CLIENTS.set_left_brace */
extern void T2040f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.make_with_capacity */
extern T0* T2040c19(GE_context* ac, T6 a1);
/* ET_CLIENTS.make_with_capacity */
extern void T2040f19p1(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENTS.tokens */
extern T0* T2040f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_197 */
extern void T359f1390(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_196 */
extern void T359f1389(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_195 */
extern void T359f1388(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].force */
extern void T986f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CLIENT_ITEM].fill_with */
extern void T988f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CLIENT_ITEM].extend */
extern void T988f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T986f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T988f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_client_comma */
extern T0* T359f891(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_client_comma */
extern T0* T369f335(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_194 */
extern void T359f1387(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_193 */
extern void T359f1386(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_192 */
extern void T359f1385(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_191 */
extern void T359f1384(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_190 */
extern void T359f1383(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_189 */
extern void T359f1382(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_none_clients */
extern T0* T369f152(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.make */
extern T0* T2040c16(GE_context* ac);
/* ET_CLIENTS.make */
extern void T2040f16p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_188 */
extern void T359f1381(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_187 */
extern void T359f1380(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_186 */
extern void T359f1379(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].force */
extern void T1070f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FEATURE_EXPORT].fill_with */
extern void T1072f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FEATURE_EXPORT].extend */
extern void T1072f10(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.put_first */
extern void T1934f11(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.fixed_array */
extern T0* T1934f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_185 */
extern void T359f1378(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T1070f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T1072f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_export */
extern T0* T369f150(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_with_capacity */
extern T0* T1934c10(GE_context* ac, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_feature_name_list_with_capacity */
extern void T1934f12(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_184 */
extern void T359f1377(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_183 */
extern void T359f1376(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT].force */
extern void T1048f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXPORT].fill_with */
extern void T1050f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXPORT].extend */
extern void T1050f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT].aliased_resized_area */
extern T0* T1048f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_EXPORT].aliased_resized_area */
extern T0* T1050f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_null_export */
extern T0* T369f151(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_182 */
extern void T359f1375(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_181 */
extern void T359f1374(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_180 */
extern void T359f1373(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_179 */
extern void T359f1372(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_all_export */
extern T0* T369f149(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALL_EXPORT.make */
extern T0* T1933c7(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.all_keyword */
extern T0* T94f1441(GE_context* ac, T0* C);
/* ET_KEYWORD.make_all */
extern T0* T539c46(GE_context* ac);
/* ET_ALL_EXPORT.tokens */
extern T0* T1933f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_178 */
extern void T359f1371(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].force */
extern void T1051f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXPORT_LIST].fill_with */
extern void T1052f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXPORT_LIST].extend */
extern void T1052f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T1051f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T1052f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_177 */
extern void T359f1370(GE_context* ac, T0* C);
/* ET_EXPORT_LIST.put_first */
extern void T1932f8(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPORT].force */
extern void T2340f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_EXPORT].fill_with */
extern void T2339f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_EXPORT].extend */
extern void T2339f7(GE_context* ac, T0* C, T0* a1);
/* ET_EXPORT_LIST.fixed_array */
extern T0* T1932f5(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPORT].default_create */
extern T0* T2340c2(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_176 */
extern void T359f1369(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_exports */
extern T0* T369f148(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_EXPORT_LIST.make_with_capacity */
extern T0* T1932c7(GE_context* ac, T6 a1);
/* ET_EXPORT_LIST.make_with_capacity */
extern void T1932f7p1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EXPORT].make */
extern T0* T2340f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_EXPORT].make_empty */
extern T0* T2339c4(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.export_keyword */
extern T0* T94f713(GE_context* ac, T0* C);
/* ET_KEYWORD.make_export */
extern T0* T539c76(GE_context* ac);
/* ET_EXPORT_LIST.tokens */
extern T0* T1932f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_175 */
extern void T359f1368(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_174 */
extern void T359f1367(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_173 */
extern void T359f1366(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_172 */
extern void T359f1365(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_171 */
extern void T359f1364(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_170 */
extern void T359f1363(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].force */
extern void T1184f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_RENAME_ITEM].fill_with */
extern void T1186f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_RENAME_ITEM].extend */
extern void T1186f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T1184f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T1186f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_rename_comma */
extern T0* T369f147(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_169 */
extern void T359f1362(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_rename */
extern T0* T369f146(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_168 */
extern void T359f1361(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].force */
extern void T1187f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_RENAME_LIST].fill_with */
extern void T1188f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_RENAME_LIST].extend */
extern void T1188f10(GE_context* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.put_first */
extern void T1931f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_RENAME_ITEM].force */
extern void T2337f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_RENAME_ITEM].fill_with */
extern void T2336f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_RENAME_ITEM].extend */
extern void T2336f7(GE_context* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.fixed_array */
extern T0* T1931f5(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_RENAME_ITEM].default_create */
extern T0* T2337c2(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_167 */
extern void T359f1360(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T1187f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T1188f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_renames */
extern T0* T369f145(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_RENAME_LIST.make_with_capacity */
extern T0* T1931c8(GE_context* ac, T6 a1);
/* ET_RENAME_LIST.make_with_capacity */
extern void T1931f8p1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_RENAME_ITEM].make */
extern T0* T2337f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_RENAME_ITEM].make_empty */
extern T0* T2336c4(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.rename_keyword */
extern T0* T94f715(GE_context* ac, T0* C);
/* ET_KEYWORD.make_rename */
extern T0* T539c78(GE_context* ac);
/* ET_RENAME_LIST.tokens */
extern T0* T1931f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_166 */
extern void T359f1359(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_165 */
extern void T359f1358(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_164 */
extern void T359f1357(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_163 */
extern void T359f1356(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_162 */
extern void T359f1355(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].force */
extern void T1166f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PARENT_ITEM].fill_with */
extern void T1168f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PARENT_ITEM].extend */
extern void T1168f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T1166f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T1168f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parent_semicolon */
extern T0* T369f144(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_161 */
extern void T359f1354(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].force */
extern void T1169f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PARENT_LIST].fill_with */
extern void T1171f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PARENT_LIST].extend */
extern void T1171f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_160 */
extern void T359f1353(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_159 */
extern void T359f1352(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T1169f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T1171f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parents */
extern T0* T369f143(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_158 */
extern void T359f1351(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_157 */
extern void T359f1350(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT].force */
extern void T1160f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PARENT].fill_with */
extern void T1162f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PARENT].extend */
extern void T1162f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT].aliased_resized_area */
extern T0* T1160f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_PARENT].aliased_resized_area */
extern T0* T1162f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_parent */
extern T0* T359f889(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_AST_FACTORY.new_parent */
extern T0* T369f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_CLASS.has_formal_parameter */
extern T1 T95f171(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_parameter */
extern T1 T1242f15(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_156 */
extern void T359f1349(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_155 */
extern void T359f1348(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_154 */
extern void T359f1347(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_153 */
extern void T359f1346(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_152 */
extern void T359f1345(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_151 */
extern void T359f1344(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_150 */
extern void T359f1343(GE_context* ac, T0* C);
/* ET_PARENT_LIST.set_clients_clause */
extern void T699f13(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_149 */
extern void T359f1342(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_148 */
extern void T359f1341(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].force */
extern void T1163f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PARENT_CLAUSE_LIST].fill_with */
extern void T1165f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PARENT_CLAUSE_LIST].extend */
extern void T1165f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].aliased_resized_area */
extern T0* T1163f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_PARENT_CLAUSE_LIST].aliased_resized_area */
extern T0* T1165f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_147 */
extern void T359f1340(GE_context* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.put_first */
extern void T1534f7(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_LIST].force */
extern void T2239f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_PARENT_LIST].fill_with */
extern void T2238f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_PARENT_LIST].extend */
extern void T2238f7(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CLAUSE_LIST.fixed_array */
extern T0* T1534f3(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_LIST].default_create */
extern T0* T2239c2(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_146 */
extern void T359f1339(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_parent_clauses */
extern T0* T369f142(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT_CLAUSE_LIST.make_with_capacity */
extern T0* T1534c6(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_LIST].make */
extern T0* T2239f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_PARENT_LIST].make_empty */
extern T0* T2238c4(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_145 */
extern void T359f1338(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_144 */
extern void T359f1337(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_143 */
extern void T359f1336(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].force */
extern void T1154f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_OBSOLETE].fill_with */
extern void T1156f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_OBSOLETE].extend */
extern void T1156f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T1154f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T1156f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_obsolete_message */
extern T0* T369f141(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_142 */
extern void T359f1335(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_141 */
extern void T359f1334(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].force */
extern void T1000f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T1002f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].extend */
extern void T1002f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1000f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1002f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter_semicolon */
extern T0* T369f140(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter */
extern T0* T369f138(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.make */
extern T0* T2073c6(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_140 */
extern void T359f1333(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_139 */
extern void T359f1332(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].force */
extern void T1003f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].fill_with */
extern void T1005f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].extend */
extern void T1005f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.add_to_constraint_actual_parameter_list */
extern void T359f2133(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.put_first */
extern void T2072f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].force */
extern void T2469f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T2467f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].extend */
extern void T2467f7(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.fixed_array */
extern T0* T2072f8(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T2469c2(GE_context* ac);
/* ET_AST_FACTORY.new_constraint_labeled_comma_actual_parameter */
extern T0* T369f139(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T2074c6(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.first */
extern T0* T2072f7(GE_context* ac, T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T2072f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_138 */
extern void T359f1331(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_137 */
extern void T359f1330(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_136 */
extern void T359f1329(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1003f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1005f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_actual_parameters */
extern T0* T369f136(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T2072f14(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T2072c12(GE_context* ac, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T2072f12p1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T2469f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T2467c4(GE_context* ac, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T2072f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_135 */
extern void T359f1328(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_134 */
extern void T359f1327(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_133 */
extern void T359f1326(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_132 */
extern void T359f1325(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_131 */
extern void T359f1324(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_130 */
extern void T359f1323(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_constraint_actual_parameter_comma */
extern T0* T369f137(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_129 */
extern void T359f1322(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_constraint_named_type */
extern T0* T359f888(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_constraint_named_type */
extern T0* T369f330(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.make */
extern T0* T2151c7(GE_context* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_generic_named_type */
extern T0* T369f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.make */
extern T0* T2150c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_128 */
extern void T359f1321(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_127 */
extern void T359f1320(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_126 */
extern void T359f1319(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_125 */
extern void T359f1318(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_124 */
extern void T359f1317(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_123 */
extern void T359f1316(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_122 */
extern void T359f1315(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].force */
extern void T1009f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_TYPE].fill_with */
extern void T1011f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_TYPE].extend */
extern void T1011f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T1009f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T1011f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_121 */
extern void T359f1314(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_120 */
extern void T359f1313(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_119 */
extern void T359f1312(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_118 */
extern void T359f1311(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_117 */
extern void T359f1310(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_116 */
extern void T359f1309(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_115 */
extern void T359f1308(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_114 */
extern void T359f1307(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_113 */
extern void T359f1306(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_112 */
extern void T359f1305(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_111 */
extern void T359f1304(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_110 */
extern void T359f1303(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_109 */
extern void T359f1302(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_108 */
extern void T359f1301(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_107 */
extern void T359f1300(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_106 */
extern void T359f1299(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_105 */
extern void T359f1298(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_104 */
extern void T359f1297(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_103 */
extern void T359f1296(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_102 */
extern void T359f1295(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_101 */
extern void T359f1294(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_100 */
extern void T359f1293(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_99 */
extern void T359f1292(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_98 */
extern void T359f1291(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_97 */
extern void T359f1290(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_96 */
extern void T359f1289(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_95 */
extern void T359f1288(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_94 */
extern void T359f1287(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_93 */
extern void T359f1286(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_92 */
extern void T359f1285(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_91 */
extern void T359f1284(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_90 */
extern void T359f1283(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_89 */
extern void T359f1282(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_88 */
extern void T359f1281(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_87 */
extern void T359f1280(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_86 */
extern void T359f1279(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_85 */
extern void T359f1278(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_84 */
extern void T359f1277(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_83 */
extern void T359f1276(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_82 */
extern void T359f1275(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_81 */
extern void T359f1274(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_80 */
extern void T359f1273(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_79 */
extern void T359f1272(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_78 */
extern void T359f1271(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_77 */
extern void T359f1270(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_76 */
extern void T359f1269(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].force */
extern void T1006f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_CREATOR].fill_with */
extern void T1008f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_CREATOR].extend */
extern void T1008f10(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.put_first */
extern void T1244f13(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.fixed_array */
extern T0* T1244f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_75 */
extern void T359f1268(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T1006f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T1008f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_creator */
extern T0* T369f133(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern T0* T1244c12(GE_context* ac, T6 a1);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern void T1244f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.tokens */
extern T0* T1244f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_74 */
extern void T359f1267(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_73 */
extern void T359f1266(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_72 */
extern void T359f1265(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_71 */
extern void T359f1264(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_70 */
extern void T359f1263(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].force */
extern void T1086f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER].fill_with */
extern void T1088f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER].extend */
extern void T1088f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T1086f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T1088f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.register_constraint */
extern void T359f2132(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].force_last */
extern void T865f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].resize */
extern void T865f15(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_capacity */
extern T6 T865f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].extendible */
extern T1 T865f7(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constrained_formal_parameter */
extern T0* T369f132(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_type_mark */
extern void T1712f76(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make */
extern T0* T1712c75(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make_unconstrained */
extern void T1712f78(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.arrow_symbol */
extern T0* T94f691(GE_context* ac, T0* C);
/* ET_SYMBOL.make_arrow */
extern T0* T474c90(GE_context* ac);
/* ET_CONSTRAINED_FORMAL_PARAMETER.tokens */
extern T0* T1712f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.dummy_constraint */
extern T0* T359f887(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_69 */
extern void T359f1262(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_68 */
extern void T359f1261(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_67 */
extern void T359f1260(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_66 */
extern void T359f1259(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_65 */
extern void T359f1258(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_64 */
extern void T359f1257(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_formal_parameter */
extern T0* T369f131(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.set_type_mark */
extern void T1243f75(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.make */
extern T0* T1243c74(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_63 */
extern void T359f1256(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_62 */
extern void T359f1255(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_61 */
extern void T359f1254(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].force */
extern void T1089f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].fill_with */
extern void T1091f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].extend */
extern void T1091f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1089f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1091f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_parameter_comma */
extern T0* T369f130(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_60 */
extern void T359f1253(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].force */
extern void T1092f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].fill_with */
extern void T1093f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].extend */
extern void T1093f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T1242f28(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_index */
extern void T1712f77(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.set_index */
extern void T1243f76(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.capacity */
extern T6 T1242f9(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T1242f28p1(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER_ITEM].force */
extern void T2197f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FORMAL_PARAMETER_ITEM].fill_with */
extern void T2196f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FORMAL_PARAMETER_ITEM].extend */
extern void T2196f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.fixed_array */
extern T0* T1242f8(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T2197c2(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_59 */
extern void T359f1252(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1092f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1093f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_parameters */
extern T0* T369f129(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_PARAMETER_LIST.set_left_bracket */
extern void T1242f29(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern T0* T1242c26(GE_context* ac, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern void T1242f26p1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T2197f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_FORMAL_PARAMETER_ITEM].make_empty */
extern T0* T2196c4(GE_context* ac, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.tokens */
extern T0* T1242f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_58 */
extern void T359f1251(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_57 */
extern void T359f1250(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_formal_parameters */
extern void T359f2129(GE_context* ac, T0* C, T0* a1);
extern T1 T359f2129ot1(T0* a1, T0** a2);
/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].wipe_out */
extern void T865f11(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_TYPE].keep_head */
extern void T1011f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_TYPE].set_count */
extern void T1011f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].move_all_cursors_after */
extern void T865f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_next_cursor */
extern void T1878f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_after */
extern void T1878f6(GE_context* ac, T0* C);
/* ET_CLASS.set_formal_parameters */
extern void T95f279(GE_context* ac, T0* C, T0* a1);
extern T1 T95f279ot1(T0* a1);
/* ET_FORMAL_PARAMETER_LIST.remove */
extern void T1242f27(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T2197f3(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T2196f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_FORMAL_PARAMETER_ITEM].set_count */
extern void T2196f8(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint */
extern void T1712f79(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].item */
extern T0* T865f6(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_56 */
extern void T359f1249(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_55 */
extern void T359f1248(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_54 */
extern void T359f1247(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_53 */
extern void T359f1246(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_52 */
extern void T359f1245(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_51 */
extern void T359f1244(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_50 */
extern void T359f1243(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLASS].force */
extern void T983f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CLASS].fill_with */
extern void T985f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CLASS].extend */
extern void T985f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLASS].aliased_resized_area */
extern T0* T983f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CLASS].aliased_resized_area */
extern T0* T985f4(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.set_external_keyword */
extern void T95f277(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_frozen_keyword */
extern void T95f276(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_class_mark */
extern void T95f290(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_class_keyword */
extern void T95f275(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_class */
extern T0* T359f885(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_name */
extern void T95f292(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.reset */
extern void T95f291(GE_context* ac, T0* C);
/* ET_CLASS.reset_parsed */
extern void T95f273(GE_context* ac, T0* C);
/* ET_CLASS.reset_ancestors_built */
extern void T95f272(GE_context* ac, T0* C);
/* ET_CLASS.reset_features_flattened */
extern void T95f271(GE_context* ac, T0* C);
/* ET_CLASS.reset_interface_checked */
extern void T95f270(GE_context* ac, T0* C);
/* ET_CLASS.reset_implementation_checked */
extern void T95f269(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.set_modified */
extern void T672f68(GE_context* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.file_system */
extern T0* T359f945(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.unix_file_system */
extern T0* T359f955(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.windows_file_system */
extern T0* T359f954(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.operating_system */
extern T0* T359f953(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvscn1a_error */
extern void T53f231(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvscn1a */
extern T0* T1418c786(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvscn1a_error */
extern void T36f230(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MASTER_CLASS.first_local_class */
extern T0* T672f26(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.has_local_class */
extern T1 T672f25(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_hidden_class */
extern T1 T672f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].has */
extern T1 T365f12(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_ignored_class */
extern T1 T672f29(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_non_override_class */
extern T1 T672f28(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_override_class */
extern T1 T672f27(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_49 */
extern void T359f1242(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_48 */
extern void T359f1241(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_47 */
extern void T359f1240(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_46 */
extern void T359f1239(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].force */
extern void T1109f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_ITEM].fill_with */
extern void T1111f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_ITEM].extend */
extern void T1111f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].aliased_resized_area */
extern T0* T1109f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_ITEM].aliased_resized_area */
extern T0* T1111f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_indexing_term_comma */
extern T0* T369f128(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_45 */
extern void T359f1238(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].force */
extern void T1106f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM].fill_with */
extern void T1108f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM].extend */
extern void T1108f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].aliased_resized_area */
extern T0* T1106f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM].aliased_resized_area */
extern T0* T1108f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_custom_attribute */
extern T0* T369f127(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CUSTOM_ATTRIBUTE.make */
extern T0* T2070c9(GE_context* ac, T0* a1, T0* a2);
/* ET_CUSTOM_ATTRIBUTE.tokens */
extern T0* T2070f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_44 */
extern void T359f1237(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_43 */
extern void T359f1236(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_42 */
extern void T359f1235(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_41 */
extern void T359f1234(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_40 */
extern void T359f1233(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_39 */
extern void T359f1232(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_38 */
extern void T359f1231(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_37 */
extern void T359f1230(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].force */
extern void T1112f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_LIST].fill_with */
extern void T1114f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_LIST].extend */
extern void T1114f10(GE_context* ac, T0* C, T0* a1);
/* ET_INDEXING_TERM_LIST.put_first */
extern void T2068f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM_ITEM].force */
extern void T2466f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_INDEXING_TERM_ITEM].fill_with */
extern void T2465f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_INDEXING_TERM_ITEM].extend */
extern void T2465f7(GE_context* ac, T0* C, T0* a1);
/* ET_INDEXING_TERM_LIST.fixed_array */
extern T0* T2068f3(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM_ITEM].default_create */
extern T0* T2466c2(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_36 */
extern void T359f1229(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].aliased_resized_area */
extern T0* T1112f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_LIST].aliased_resized_area */
extern T0* T1114f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_indexing_terms */
extern T0* T369f126(GE_context* ac, T0* C, T6 a1);
/* ET_INDEXING_TERM_LIST.make_with_capacity */
extern T0* T2068c9(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM_ITEM].make */
extern T0* T2466f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_INDEXING_TERM_ITEM].make_empty */
extern T0* T2465c4(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_35 */
extern void T359f1228(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].force */
extern void T1103f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INDEXING_ITEM].fill_with */
extern void T1105f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INDEXING_ITEM].extend */
extern void T1105f10(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_indexing_semicolon */
extern T0* T369f124(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_34 */
extern void T359f1227(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_33 */
extern void T359f1226(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].aliased_resized_area */
extern T0* T1103f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_INDEXING_ITEM].aliased_resized_area */
extern T0* T1105f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_tagged_indexing */
extern T0* T369f123(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TAGGED_INDEXING.make */
extern T0* T2066c5(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_32 */
extern void T359f1225(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_indexing */
extern T0* T369f125(GE_context* ac, T0* C, T0* a1);
/* ET_INDEXING.make */
extern T0* T2069c5(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_31 */
extern void T359f1224(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_30 */
extern void T359f1223(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].force */
extern void T1100f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INDEXING_LIST].fill_with */
extern void T1102f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INDEXING_LIST].extend */
extern void T1102f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].aliased_resized_area */
extern T0* T1100f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_INDEXING_LIST].aliased_resized_area */
extern T0* T1102f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_29 */
extern void T359f1222(GE_context* ac, T0* C);
/* ET_INDEXING_LIST.put_first */
extern void T2065f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_ITEM].force */
extern void T2464f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_INDEXING_ITEM].fill_with */
extern void T2463f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_INDEXING_ITEM].extend */
extern void T2463f7(GE_context* ac, T0* C, T0* a1);
/* ET_INDEXING_LIST.fixed_array */
extern T0* T2065f5(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_ITEM].default_create */
extern T0* T2464c2(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_28 */
extern void T359f1221(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_27 */
extern void T359f1220(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_26 */
extern void T359f1219(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_indexings */
extern T0* T369f121(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_INDEXING_LIST.set_indexing_keyword */
extern void T2065f13(GE_context* ac, T0* C, T0* a1);
/* ET_INDEXING_LIST.make_with_capacity */
extern T0* T2065c11(GE_context* ac, T6 a1);
/* ET_INDEXING_LIST.make_with_capacity */
extern void T2065f11p1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_ITEM].make */
extern T0* T2464f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_INDEXING_ITEM].make_empty */
extern T0* T2463c4(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.indexing_keyword */
extern T0* T94f726(GE_context* ac, T0* C);
/* ET_KEYWORD.make_indexing */
extern T0* T539c89(GE_context* ac);
/* ET_INDEXING_LIST.tokens */
extern T0* T2065f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_25 */
extern void T359f1218(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_24 */
extern void T359f1217(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_23 */
extern void T359f1216(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_22 */
extern void T359f1215(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_21 */
extern void T359f1214(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_20 */
extern void T359f1213(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_19 */
extern void T359f1212(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_18 */
extern void T359f1211(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_17 */
extern void T359f1210(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_16 */
extern void T359f1209(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_15 */
extern void T359f1208(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_14 */
extern void T359f1207(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_13 */
extern void T359f1206(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_12 */
extern void T359f1205(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_11 */
extern void T359f1204(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_10 */
extern void T359f1203(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_9 */
extern void T359f1202(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_8 */
extern void T359f1201(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_providers */
extern void T359f2123(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].forth */
extern void T866f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].put_last */
extern void T866f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].compress */
extern void T866f56(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].key_storage_keep_head */
extern void T866f66(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].item_storage_keep_head */
extern void T866f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].move_all_cursors */
extern void T866f64(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].key_storage_put */
extern void T866f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].item_for_iteration */
extern T0* T866f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].after */
extern T1 T866f17(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].cursor_after */
extern T1 T866f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].start */
extern void T866f38(GE_context* ac, T0* C);
/* ET_CLASS.set_providers */
extern void T95f278(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_7 */
extern void T359f1200(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_to_end */
extern void T359f2122(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CLASS.set_parsed */
extern void T95f252(GE_context* ac, T0* C);
/* ET_CLASS.set_end_keyword */
extern void T95f289(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_second_indexing */
extern void T95f288(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_invariants */
extern void T95f287(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_feature_clauses */
extern void T95f286(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_convert_features */
extern void T95f285(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_creators */
extern void T95f284(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_parent_clauses */
extern void T95f283(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_obsolete_message */
extern void T95f282(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_6 */
extern void T359f1199(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_5 */
extern void T359f1198(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_4 */
extern void T359f1197(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_3 */
extern void T359f1196(GE_context* ac, T0* C);
/* ET_CLASS.set_first_indexing */
extern void T95f281(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_2 */
extern void T359f1195(GE_context* ac, T0* C);
/* ET_CLASS.set_leading_break */
extern void T95f280(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_1 */
extern void T359f1194(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_push_last_value */
extern void T359f1150(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].force */
extern void T926f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].fill_with */
extern void T928f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].extend */
extern void T928f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T926f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T928f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].force */
extern void T923f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_BRACKET_SYMBOL].fill_with */
extern void T925f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_BRACKET_SYMBOL].extend */
extern void T925f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T923f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T925f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_VOID].force */
extern void T917f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_VOID].fill_with */
extern void T919f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_VOID].extend */
extern void T919f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_VOID].aliased_resized_area */
extern T0* T917f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_VOID].aliased_resized_area */
extern T0* T919f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].force */
extern void T914f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_SYMBOL_OPERATOR].fill_with */
extern void T916f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_SYMBOL_OPERATOR].extend */
extern void T916f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T914f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T916f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].force */
extern void T911f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_RETRY_INSTRUCTION].fill_with */
extern void T913f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_RETRY_INSTRUCTION].extend */
extern void T913f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T911f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T913f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RESULT].force */
extern void T909f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_RESULT].fill_with */
extern void T910f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_RESULT].extend */
extern void T910f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RESULT].aliased_resized_area */
extern T0* T909f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_RESULT].aliased_resized_area */
extern T0* T910f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T906f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T908f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].force */
extern void T900f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_KEYWORD_OPERATOR].fill_with */
extern void T902f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_KEYWORD_OPERATOR].extend */
extern void T902f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T900f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T902f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T897f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T899f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].force */
extern void T894f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FREE_OPERATOR].fill_with */
extern void T896f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FREE_OPERATOR].extend */
extern void T896f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T894f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T896f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CURRENT].force */
extern void T891f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CURRENT].fill_with */
extern void T893f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CURRENT].extend */
extern void T893f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CURRENT].aliased_resized_area */
extern T0* T891f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CURRENT].aliased_resized_area */
extern T0* T893f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BREAK].force */
extern void T885f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_BREAK].fill_with */
extern void T887f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_BREAK].extend */
extern void T887f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BREAK].aliased_resized_area */
extern T0* T885f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_BREAK].aliased_resized_area */
extern T0* T887f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T882f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T884f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_POSITION].force */
extern void T879f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_POSITION].fill_with */
extern void T881f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_POSITION].extend */
extern void T881f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_POSITION].aliased_resized_area */
extern T0* T879f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_POSITION].aliased_resized_area */
extern T0* T881f3(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].force */
extern void T873f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PRECURSOR_KEYWORD].fill_with */
extern void T875f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PRECURSOR_KEYWORD].extend */
extern void T875f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T873f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T875f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].force */
extern void T870f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_AGENT_KEYWORD].fill_with */
extern void T872f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_AGENT_KEYWORD].extend */
extern void T872f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T870f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T872f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.accept */
extern void T359f1149(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action */
extern void T359f1147(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_error */
extern void T359f1172(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1600_1799 */
extern void T359f1171(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_eof_expected_error */
extern void T359f1193(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1400_1599 */
extern void T359f1170(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1200_1399 */
extern void T359f1169(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1000_1199 */
extern void T359f1168(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_800_999 */
extern void T359f1167(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_600_799 */
extern void T359f1166(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_400_599 */
extern void T359f1165(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_200_399 */
extern void T359f1164(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_0_199 */
extern void T359f1163(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.read_token */
extern void T359f1146(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_execute_action */
extern void T359f1162(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.less */
extern void T359f1192(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_break */
extern void T359f1181(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_comment */
extern T0* T369f15(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_break */
extern T0* T369f14(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_underscored_real_constant */
extern T0* T369f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_position */
extern void T2053f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_REAL_CONSTANT.make */
extern T0* T2053c42(GE_context* ac, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.make_leaf */
extern void T2053f50(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_literal */
extern T0* T359f956(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_regular_real_constant */
extern T0* T369f12(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_position */
extern void T2052f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_REAL_CONSTANT.make */
extern T0* T2052c42(GE_context* ac, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.make_leaf */
extern void T2052f50(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_binary_integer_constant */
extern T0* T369f11(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_position */
extern void T2051f67(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_BINARY_INTEGER_CONSTANT.make */
extern T0* T2051c64(GE_context* ac, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.compute_value */
extern void T2051f73(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.make_leaf */
extern void T2051f72(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_octal_integer_constant */
extern T0* T369f10(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_position */
extern void T2050f67(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_OCTAL_INTEGER_CONSTANT.make */
extern T0* T2050c64(GE_context* ac, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.compute_value */
extern void T2050f73(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.make_leaf */
extern void T2050f72(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_hexadecimal_integer_constant */
extern T0* T369f9(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_position */
extern void T2049f67(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make */
extern T0* T2049c64(GE_context* ac, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.compute_value */
extern void T2049f73(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make_leaf */
extern void T2049f72(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_underscored_integer_constant */
extern T0* T369f8(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_position */
extern void T2048f67(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make */
extern T0* T2048c64(GE_context* ac, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.compute_value */
extern void T2048f73(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make_leaf */
extern void T2048f72(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_regular_integer_constant */
extern T0* T369f7(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_position */
extern void T495f67(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_ssel_error */
extern void T53f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssel_error */
extern void T36f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sscu_error */
extern void T53f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sscu_error */
extern void T36f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssac_error */
extern void T53f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssac_error */
extern void T36f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssas_error */
extern void T53f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssas_error */
extern void T36f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssao_error */
extern void T53f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssao_error */
extern void T36f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_special_manifest_string */
extern T0* T369f6(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_position */
extern void T2047f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_special_manifest_string */
extern T0* T359f959(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.make */
extern T0* T2047c43(GE_context* ac, T0* a1, T0* a2);
/* ET_SPECIAL_MANIFEST_STRING.make_leaf */
extern void T2047f49(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.integer_ */
extern T0* T359f962(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_verbatim_string */
extern T0* T369f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* ET_VERBATIM_STRING.set_position */
extern void T2046f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_verbatim_string */
extern T0* T359f958(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_VERBATIM_STRING.make */
extern T0* T2046c47(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_VERBATIM_STRING.make_leaf */
extern void T2046f53(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.is_verbatim_string_closer */
extern T1 T359f726(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.text */
extern T0* T359f724(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.append_text_to_string */
extern void T359f2156(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.text_substring */
extern T0* T359f722(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.process_regular_manifest_string */
extern void T359f1191(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_regular_manifest_string */
extern T0* T369f4(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_position */
extern void T1532f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_MANIFEST_STRING.make */
extern T0* T1532c42(GE_context* ac, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.make_leaf */
extern void T1532f46(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_scao_error */
extern void T53f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scao_error */
extern void T36f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_c3_character_constant */
extern T0* T369f3(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_position */
extern void T2045f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_c3_character_constant */
extern T0* T359f957(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.make */
extern T0* T2045c44(GE_context* ac, T0* a1, T3 a2);
/* ET_C3_CHARACTER_CONSTANT.make_leaf */
extern void T2045f50(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_c2_character_constant */
extern void T359f1190(GE_context* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_c2_character_constant */
extern T0* T369f120(GE_context* ac, T0* C, T2 a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.set_position */
extern void T2064f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_C2_CHARACTER_CONSTANT.make */
extern T0* T2064c43(GE_context* ac, T3 a1);
/* ET_C2_CHARACTER_CONSTANT.make_leaf */
extern void T2064f49(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_scsc_error */
extern void T53f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scsc_error */
extern void T36f229(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sccu_error */
extern void T53f229(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sccu_error */
extern void T36f228(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.process_c1_character_constant */
extern void T359f1189(GE_context* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_c1_character_constant */
extern T0* T369f119(GE_context* ac, T0* C, T2 a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.set_position */
extern void T2063f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.make */
extern T0* T2063c43(GE_context* ac, T3 a1);
/* ET_C1_CHARACTER_CONSTANT.make_leaf */
extern void T2063f49(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_sctq_error */
extern void T53f228(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sctq_error */
extern void T36f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_free_operator */
extern T0* T369f2(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_position */
extern void T2044f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FREE_OPERATOR.make_prefix */
extern T0* T2044c47(GE_context* ac, T0* a1);
/* ET_FREE_OPERATOR.string_ */
extern T0* T2044f10(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.make_token */
extern void T2044f51(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_leaf */
extern void T2044f52(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_start_condition */
extern void T359f1182(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.more */
extern void T359f1188(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_identifier */
extern void T359f1187(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_detachable_keyword */
extern T0* T369f118(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.set_position */
extern void T539f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.use_detachable_keyword */
extern T1 T359f859(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_reference_keyword */
extern T0* T369f117(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_reference */
extern T0* T539c57(GE_context* ac);
/* ET_EIFFEL_PARSER.use_reference_keyword */
extern T1 T359f857(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_keyword */
extern T0* T369f116(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_position */
extern void T2062f19(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_invariant_keyword */
extern T0* T369f115(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_attribute_keyword */
extern T0* T369f114(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_attribute_keyword */
extern T1 T359f853(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_undefine_keyword */
extern T0* T369f113(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.undefine_keyword */
extern T0* T94f729(GE_context* ac, T0* C);
/* ET_KEYWORD.make_undefine */
extern T0* T539c92(GE_context* ac);
/* ET_AST_FACTORY.new_separate_keyword */
extern T0* T369f112(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_redefine_keyword */
extern T0* T369f111(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_obsolete_keyword */
extern T0* T369f110(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.obsolete_keyword */
extern T0* T94f727(GE_context* ac, T0* C);
/* ET_KEYWORD.make_obsolete */
extern T0* T539c90(GE_context* ac);
/* ET_AST_FACTORY.new_indexing_keyword */
extern T0* T369f109(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_external_keyword */
extern T0* T369f108(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.external_keyword */
extern T0* T94f725(GE_context* ac, T0* C);
/* ET_KEYWORD.make_external */
extern T0* T539c88(GE_context* ac);
/* ET_AST_FACTORY.new_expanded_keyword */
extern T0* T369f107(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_expanded */
extern T0* T539c56(GE_context* ac);
/* ET_AST_FACTORY.new_deferred_keyword */
extern T0* T369f106(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_creation_keyword */
extern T0* T369f105(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_attached_keyword */
extern T0* T369f104(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_attached_keyword */
extern T1 T359f842(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_variant_keyword */
extern T0* T369f103(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_require_keyword */
extern T0* T369f102(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_inspect_keyword */
extern T0* T369f101(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.inspect_keyword */
extern T0* T94f721(GE_context* ac, T0* C);
/* ET_KEYWORD.make_inspect */
extern T0* T539c84(GE_context* ac);
/* ET_AST_FACTORY.new_inherit_keyword */
extern T0* T369f100(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_implies_keyword */
extern T0* T369f99(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.set_position */
extern void T2057f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_OPERATOR.make_implies */
extern T0* T2057c52(GE_context* ac);
/* ET_AST_FACTORY.new_feature_keyword */
extern T0* T369f98(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_convert_keyword */
extern T0* T369f97(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_current_keyword */
extern T0* T369f96(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.set_position */
extern void T390f37(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_unique_keyword */
extern T0* T369f95(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_select_keyword */
extern T0* T369f94(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.select_keyword */
extern T0* T94f717(GE_context* ac, T0* C);
/* ET_KEYWORD.make_select */
extern T0* T539c80(GE_context* ac);
/* ET_AST_FACTORY.new_result_keyword */
extern T0* T369f93(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT.set_position */
extern void T422f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_rescue_keyword */
extern T0* T369f92(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_rename_keyword */
extern T0* T369f91(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_prefix_keyword */
extern T0* T369f90(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_frozen_keyword */
extern T0* T369f89(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_frozen */
extern T0* T539c52(GE_context* ac);
/* ET_AST_FACTORY.new_export_keyword */
extern T0* T369f88(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_ensure_keyword */
extern T0* T369f87(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_elseif_keyword */
extern T0* T369f86(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.elseif_keyword */
extern T0* T94f712(GE_context* ac, T0* C);
/* ET_KEYWORD.make_elseif */
extern T0* T539c75(GE_context* ac);
/* ET_AST_FACTORY.new_create_keyword */
extern T0* T369f85(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_keyword */
extern T0* T369f84(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.assign_keyword */
extern T0* T94f711(GE_context* ac, T0* C);
/* ET_KEYWORD.make_assign */
extern T0* T539c74(GE_context* ac);
/* ET_AST_FACTORY.new_across_keyword */
extern T0* T369f83(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_until_keyword */
extern T0* T369f82(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.until_keyword */
extern T0* T94f710(GE_context* ac, T0* C);
/* ET_KEYWORD.make_until */
extern T0* T539c73(GE_context* ac);
/* ET_AST_FACTORY.new_strip_keyword */
extern T0* T369f81(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_retry_keyword */
extern T0* T369f80(GE_context* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.set_position */
extern void T2061f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_RETRY_INSTRUCTION.make */
extern T0* T2061c13(GE_context* ac);
/* ET_RETRY_INSTRUCTION.make_token */
extern void T2061f15(GE_context* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.make_leaf */
extern void T2061f16(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.tokens */
extern T0* T2061f7(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_local_keyword */
extern T0* T369f79(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_infix_keyword */
extern T0* T369f78(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_false_keyword */
extern T0* T369f77(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.set_position */
extern void T2060f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FALSE_CONSTANT.make */
extern T0* T2060c40(GE_context* ac);
/* ET_FALSE_CONSTANT.make_token */
extern void T2060f45(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.make_leaf */
extern void T2060f46(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.tokens */
extern T0* T2060f17(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_debug_keyword */
extern T0* T369f76(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_class_keyword */
extern T0* T369f75(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_check_keyword */
extern T0* T369f74(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_alias_keyword */
extern T0* T369f73(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_agent_keyword */
extern T0* T369f72(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_KEYWORD.set_position */
extern void T2059f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_when_keyword */
extern T0* T369f71(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_void_keyword */
extern T0* T369f70(GE_context* ac, T0* C, T0* a1);
/* ET_VOID.set_position */
extern void T2058f31(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_VOID.make */
extern T0* T2058c30(GE_context* ac);
/* ET_VOID.make_token */
extern void T2058f34(GE_context* ac, T0* C, T0* a1);
/* ET_VOID.make_leaf */
extern void T2058f35(GE_context* ac, T0* C);
/* ET_VOID.tokens */
extern T0* T2058f14(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_true_keyword */
extern T0* T369f69(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.set_position */
extern void T2032f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_then_keyword */
extern T0* T369f68(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_some_keyword */
extern T0* T369f67(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_some */
extern T0* T539c48(GE_context* ac);
/* ET_AST_FACTORY.new_note_keyword */
extern T0* T369f66(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.note_keyword */
extern T0* T94f702(GE_context* ac, T0* C);
/* ET_KEYWORD.make_note */
extern T0* T539c65(GE_context* ac);
/* ET_EIFFEL_PARSER.use_note_keyword */
extern T1 T359f801(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_keyword */
extern T0* T369f64(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_like_keyword */
extern T0* T369f63(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_from_keyword */
extern T0* T369f62(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_else_keyword */
extern T0* T369f61(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_xor_keyword */
extern T0* T369f60(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_xor */
extern T0* T2057c51(GE_context* ac);
/* ET_AST_FACTORY.new_old_keyword */
extern T0* T369f59(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_not_keyword */
extern T0* T369f58(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_not */
extern T0* T2057c50(GE_context* ac);
/* ET_AST_FACTORY.new_end_keyword */
extern T0* T369f57(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_all_keyword */
extern T0* T369f56(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_and_keyword */
extern T0* T369f55(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_or_keyword */
extern T0* T369f54(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_is_keyword */
extern T0* T369f53(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_if_keyword */
extern T0* T369f52(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.if_keyword */
extern T0* T94f697(GE_context* ac, T0* C);
/* ET_KEYWORD.make_if */
extern T0* T539c60(GE_context* ac);
/* ET_AST_FACTORY.new_do_keyword */
extern T0* T369f51(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_as_keyword */
extern T0* T369f50(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_keyword */
extern T0* T369f1(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_two_char_symbol */
extern void T359f1186(GE_context* ac, T0* C, T2 a1, T2 a2);
/* ET_AST_FACTORY.new_assign_attempt_symbol */
extern T0* T369f49(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_symbol */
extern T0* T369f48(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_dotdot_symbol */
extern T0* T369f47(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_arrow_symbol */
extern T0* T369f46(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_array_symbol */
extern T0* T369f45(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.set_position */
extern void T474f76(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_le_symbol */
extern T0* T369f44(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_position */
extern void T2054f84(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_SYMBOL_OPERATOR.make_le */
extern T0* T2054c94(GE_context* ac);
/* ET_AST_FACTORY.new_right_array_symbol */
extern T0* T369f43(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_ge_symbol */
extern T0* T369f42(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_ge */
extern T0* T2054c93(GE_context* ac);
/* ET_AST_FACTORY.new_mod_symbol */
extern T0* T369f41(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_mod */
extern T0* T2054c92(GE_context* ac);
/* ET_AST_FACTORY.new_not_tilde_symbol */
extern T0* T369f40(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_not_tilde */
extern T0* T474c81(GE_context* ac);
/* ET_AST_FACTORY.new_not_equal_symbol */
extern T0* T369f39(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_not_equal */
extern T0* T474c80(GE_context* ac);
/* ET_AST_FACTORY.new_div_symbol */
extern T0* T369f38(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_div */
extern T0* T2054c91(GE_context* ac);
/* ET_EIFFEL_PARSER.text_count */
extern T6 T359f708(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_set_line_column */
extern void T359f1185(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_one_char_symbol */
extern void T359f1184(GE_context* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_tilde_symbol */
extern T0* T369f37(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_tilde */
extern T0* T474c79(GE_context* ac);
/* ET_AST_FACTORY.new_dollar_symbol */
extern T0* T369f36(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_bracket_symbol */
extern T0* T369f35(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_bracket_symbol */
extern T0* T369f34(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.set_position */
extern void T846f103(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_right_brace_symbol */
extern T0* T369f33(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_brace_symbol */
extern T0* T369f32(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_parenthesis_symbol */
extern T0* T369f31(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_parenthesis_symbol */
extern T0* T369f30(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_question_mark_symbol */
extern T0* T369f29(GE_context* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.set_position */
extern void T2056f73(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_bang_symbol */
extern T0* T369f28(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_symbol */
extern T0* T369f27(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_comma_symbol */
extern T0* T369f26(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.comma_symbol */
extern T0* T94f686(GE_context* ac, T0* C);
/* ET_SYMBOL.make_comma */
extern T0* T474c85(GE_context* ac);
/* ET_AST_FACTORY.new_semicolon_symbol */
extern T0* T369f25(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.semicolon_symbol */
extern T0* T94f685(GE_context* ac, T0* C);
/* ET_SEMICOLON_SYMBOL.make */
extern T0* T2055c4(GE_context* ac);
/* ET_SEMICOLON_SYMBOL.make_leaf */
extern void T2055f5(GE_context* ac, T0* C);
/* ET_SEMICOLON_SYMBOL.tokens */
extern T0* T2055f3(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_dot_symbol */
extern T0* T369f24(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.dot_symbol */
extern T0* T94f684(GE_context* ac, T0* C);
/* ET_SYMBOL.make_dot */
extern T0* T474c84(GE_context* ac);
/* ET_AST_FACTORY.new_lt_symbol */
extern T0* T369f23(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_gt_symbol */
extern T0* T369f22(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_equal_symbol */
extern T0* T369f21(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_equal */
extern T0* T474c75(GE_context* ac);
/* ET_AST_FACTORY.new_power_symbol */
extern T0* T369f20(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_power */
extern T0* T2054c88(GE_context* ac);
/* ET_AST_FACTORY.new_divide_symbol */
extern T0* T369f19(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_divide */
extern T0* T2054c87(GE_context* ac);
/* ET_AST_FACTORY.new_times_symbol */
extern T0* T369f18(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_times */
extern T0* T2054c86(GE_context* ac);
/* ET_AST_FACTORY.new_plus_symbol */
extern T0* T369f17(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_plus */
extern T0* T2054c85(GE_context* ac);
/* ET_AST_FACTORY.new_minus_symbol */
extern T0* T369f16(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_minus */
extern T0* T2054c83(GE_context* ac);
/* ET_EIFFEL_PARSER.text_item */
extern T2 T359f707(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_execute_eof_action */
extern void T359f1161(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.terminate */
extern void T359f1180(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.wrap */
extern T1 T359f670(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_refill_input_buffer */
extern void T359f1160(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_null_trans_state */
extern T6 T359f669(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_previous_state */
extern T6 T359f668(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.fatal_error */
extern void T359f1159(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_init_value_stacks */
extern void T359f1145(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_clear_all */
extern void T359f1154(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.clear_all */
extern void T359f1178(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.clear_stacks */
extern void T359f2120(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T359f2151(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_WRITABLE].keep_head */
extern void T1213f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_WRITABLE].set_count */
extern void T1213f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_WHEN_PART_LIST].keep_head */
extern void T1211f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_WHEN_PART_LIST].set_count */
extern void T1211f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_WHEN_PART].keep_head */
extern void T1208f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_WHEN_PART].set_count */
extern void T1208f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_VARIANT].keep_head */
extern void T1205f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_VARIANT].set_count */
extern void T1205f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_TYPE_LIST].keep_head */
extern void T1202f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_TYPE_LIST].set_count */
extern void T1202f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_TYPE_ITEM].keep_head */
extern void T1199f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_TYPE_ITEM].set_count */
extern void T1199f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_TYPE].keep_head */
extern void T1196f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_TYPE].set_count */
extern void T1196f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_STRIP_EXPRESSION].keep_head */
extern void T1194f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_STRIP_EXPRESSION].set_count */
extern void T1194f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].keep_head */
extern void T1191f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].set_count */
extern void T1191f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RENAME_LIST].keep_head */
extern void T1188f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RENAME_LIST].set_count */
extern void T1188f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RENAME_ITEM].keep_head */
extern void T1186f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RENAME_ITEM].set_count */
extern void T1186f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUERY].keep_head */
extern void T1183f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUERY].set_count */
extern void T1183f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].keep_head */
extern void T1181f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].set_count */
extern void T1181f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PROCEDURE].keep_head */
extern void T1178f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PROCEDURE].set_count */
extern void T1178f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PRECONDITIONS].keep_head */
extern void T1176f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PRECONDITIONS].set_count */
extern void T1176f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_POSTCONDITIONS].keep_head */
extern void T1174f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_POSTCONDITIONS].set_count */
extern void T1174f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT_LIST].keep_head */
extern void T1171f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT_LIST].set_count */
extern void T1171f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT_ITEM].keep_head */
extern void T1168f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT_ITEM].set_count */
extern void T1168f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT_CLAUSE_LIST].keep_head */
extern void T1165f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT_CLAUSE_LIST].set_count */
extern void T1165f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT].keep_head */
extern void T1162f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT].set_count */
extern void T1162f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].keep_head */
extern void T1159f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].set_count */
extern void T1159f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_OBSOLETE].keep_head */
extern void T1156f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_OBSOLETE].set_count */
extern void T1156f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_TUPLE].keep_head */
extern void T1153f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_TUPLE].set_count */
extern void T1153f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_LIST].keep_head */
extern void T1151f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_LIST].set_count */
extern void T1151f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_ITEM].keep_head */
extern void T1148f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_ITEM].set_count */
extern void T1148f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_ARRAY].keep_head */
extern void T1145f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_ARRAY].set_count */
extern void T1145f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOOP_INVARIANTS].keep_head */
extern void T1142f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOOP_INVARIANTS].set_count */
extern void T1142f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].keep_head */
extern void T1137f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].set_count */
extern void T1137f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE].keep_head */
extern void T1134f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE].set_count */
extern void T1134f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LIKE_TYPE].keep_head */
extern void T1131f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LIKE_TYPE].set_count */
extern void T1131f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].keep_head */
extern void T1128f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].set_count */
extern void T1128f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INVARIANTS].keep_head */
extern void T1126f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INVARIANTS].set_count */
extern void T1126f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INSTRUCTION].keep_head */
extern void T1123f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INSTRUCTION].set_count */
extern void T1123f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INSPECT_INSTRUCTION].keep_head */
extern void T1120f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INSPECT_INSTRUCTION].set_count */
extern void T1120f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INLINE_AGENT].keep_head */
extern void T1117f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INLINE_AGENT].set_count */
extern void T1117f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_LIST].keep_head */
extern void T1114f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_LIST].set_count */
extern void T1114f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_ITEM].keep_head */
extern void T1111f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_ITEM].set_count */
extern void T1111f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM].keep_head */
extern void T1108f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM].set_count */
extern void T1108f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_ITEM].keep_head */
extern void T1105f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_ITEM].set_count */
extern void T1105f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_LIST].keep_head */
extern void T1102f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_LIST].set_count */
extern void T1102f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_IF_INSTRUCTION].keep_head */
extern void T1099f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_IF_INSTRUCTION].set_count */
extern void T1099f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_IF_EXPRESSION].keep_head */
extern void T1096f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_IF_EXPRESSION].set_count */
extern void T1096f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].keep_head */
extern void T1093f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].set_count */
extern void T1093f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T1091f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].set_count */
extern void T1091f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER].keep_head */
extern void T1088f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER].set_count */
extern void T1088f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].keep_head */
extern void T1083f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].set_count */
extern void T1083f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT].keep_head */
extern void T1080f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT].set_count */
extern void T1080f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME_ITEM].keep_head */
extern void T1077f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME_ITEM].set_count */
extern void T1077f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME].keep_head */
extern void T1074f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME].set_count */
extern void T1074f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_EXPORT].keep_head */
extern void T1072f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_EXPORT].set_count */
extern void T1072f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].keep_head */
extern void T1069f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].set_count */
extern void T1069f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE].keep_head */
extern void T1066f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE].set_count */
extern void T1066f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXTERNAL_ALIAS].keep_head */
extern void T1063f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXTERNAL_ALIAS].set_count */
extern void T1063f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].keep_head */
extern void T1060f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].set_count */
extern void T1060f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPRESSION_ITEM].keep_head */
extern void T1057f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPRESSION_ITEM].set_count */
extern void T1057f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPRESSION].keep_head */
extern void T1054f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPRESSION].set_count */
extern void T1054f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPORT_LIST].keep_head */
extern void T1052f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPORT_LIST].set_count */
extern void T1052f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPORT].keep_head */
extern void T1050f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPORT].set_count */
extern void T1050f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART_LIST].keep_head */
extern void T1047f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART_LIST].set_count */
extern void T1047f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART].keep_head */
extern void T1044f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART].set_count */
extern void T1044f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].keep_head */
extern void T1041f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].set_count */
extern void T1041f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION].keep_head */
extern void T1038f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION].set_count */
extern void T1038f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_DEBUG_INSTRUCTION].keep_head */
extern void T1035f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_DEBUG_INSTRUCTION].set_count */
extern void T1035f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATOR_LIST].keep_head */
extern void T1032f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATOR_LIST].set_count */
extern void T1032f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATOR].keep_head */
extern void T1029f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATOR].set_count */
extern void T1029f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATION_REGION].keep_head */
extern void T1026f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATION_REGION].set_count */
extern void T1026f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATE_EXPRESSION].keep_head */
extern void T1023f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATE_EXPRESSION].set_count */
extern void T1023f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_LIST].keep_head */
extern void T1020f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_LIST].set_count */
extern void T1020f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].keep_head */
extern void T1017f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].set_count */
extern void T1017f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE].keep_head */
extern void T1014f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE].set_count */
extern void T1014f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_CREATOR].keep_head */
extern void T1008f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_CREATOR].set_count */
extern void T1008f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].keep_head */
extern void T1005f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].set_count */
extern void T1005f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T1002f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].set_count */
extern void T1002f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTANT].keep_head */
extern void T999f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTANT].set_count */
extern void T999f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONDITIONAL].keep_head */
extern void T996f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONDITIONAL].set_count */
extern void T996f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_COMPOUND].keep_head */
extern void T993f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_COMPOUND].set_count */
extern void T993f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CLIENTS].keep_head */
extern void T991f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CLIENTS].set_count */
extern void T991f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CLIENT_ITEM].keep_head */
extern void T988f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CLIENT_ITEM].set_count */
extern void T988f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CLASS].keep_head */
extern void T985f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CLASS].set_count */
extern void T985f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE_LIST].keep_head */
extern void T982f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE_LIST].set_count */
extern void T982f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE_ITEM].keep_head */
extern void T979f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE_ITEM].set_count */
extern void T979f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE_CONSTANT].keep_head */
extern void T976f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE_CONSTANT].set_count */
extern void T976f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE].keep_head */
extern void T973f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE].set_count */
extern void T973f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHECK_INSTRUCTION].keep_head */
extern void T970f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHECK_INSTRUCTION].set_count */
extern void T970f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].keep_head */
extern void T967f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].set_count */
extern void T967f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CALL_AGENT].keep_head */
extern void T965f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CALL_AGENT].set_count */
extern void T965f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BRACKET_EXPRESSION].keep_head */
extern void T962f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BRACKET_EXPRESSION].set_count */
extern void T962f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ASSIGNER].keep_head */
extern void T959f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ASSIGNER].set_count */
extern void T959f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ALIAS_NAME].keep_head */
extern void T956f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ALIAS_NAME].set_count */
extern void T956f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_TARGET].keep_head */
extern void T953f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_TARGET].set_count */
extern void T953f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].keep_head */
extern void T950f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].set_count */
extern void T950f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].keep_head */
extern void T947f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].set_count */
extern void T947f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].keep_head */
extern void T944f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].set_count */
extern void T944f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].keep_head */
extern void T941f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].set_count */
extern void T941f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T939f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].set_count */
extern void T939f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].keep_head */
extern void T936f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].set_count */
extern void T936f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACROSS_INSTRUCTION].keep_head */
extern void T934f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACROSS_INSTRUCTION].set_count */
extern void T934f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACROSS_EXPRESSION].keep_head */
extern void T931f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACROSS_EXPRESSION].set_count */
extern void T931f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].keep_head */
extern void T928f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].set_count */
extern void T928f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BRACKET_SYMBOL].keep_head */
extern void T925f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BRACKET_SYMBOL].set_count */
extern void T925f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_SEMICOLON_SYMBOL].keep_head */
extern void T922f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_SEMICOLON_SYMBOL].set_count */
extern void T922f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_VOID].keep_head */
extern void T919f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_VOID].set_count */
extern void T919f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_SYMBOL_OPERATOR].keep_head */
extern void T916f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_SYMBOL_OPERATOR].set_count */
extern void T916f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RETRY_INSTRUCTION].keep_head */
extern void T913f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RETRY_INSTRUCTION].set_count */
extern void T913f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RESULT].keep_head */
extern void T910f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RESULT].set_count */
extern void T910f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_REAL_CONSTANT].keep_head */
extern void T908f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_REAL_CONSTANT].set_count */
extern void T908f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING].keep_head */
extern void T905f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING].set_count */
extern void T905f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_KEYWORD_OPERATOR].keep_head */
extern void T902f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_KEYWORD_OPERATOR].set_count */
extern void T902f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INTEGER_CONSTANT].keep_head */
extern void T899f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INTEGER_CONSTANT].set_count */
extern void T899f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FREE_OPERATOR].keep_head */
extern void T896f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FREE_OPERATOR].set_count */
extern void T896f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CURRENT].keep_head */
extern void T893f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CURRENT].set_count */
extern void T893f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHARACTER_CONSTANT].keep_head */
extern void T890f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHARACTER_CONSTANT].set_count */
extern void T890f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BREAK].keep_head */
extern void T887f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BREAK].set_count */
extern void T887f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BOOLEAN_CONSTANT].keep_head */
extern void T884f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BOOLEAN_CONSTANT].set_count */
extern void T884f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_POSITION].keep_head */
extern void T881f5(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_POSITION].set_count */
extern void T881f8(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PRECURSOR_KEYWORD].keep_head */
extern void T875f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PRECURSOR_KEYWORD].set_count */
extern void T875f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_KEYWORD].keep_head */
extern void T872f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_KEYWORD].set_count */
extern void T872f9(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.abort */
extern void T359f1148(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T359f1144(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].wipe_out */
extern void T862f12(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].move_all_cursors_after */
extern void T862f17(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL].wipe_out */
extern void T857f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD].wipe_out */
extern void T856f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32].wipe_out */
extern void T853f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T359f1144p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T359f1144p0(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T359f1144p2(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.tmp_file */
extern T0* T359f699(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.shared_file */
extern T0* T359f940(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_preparsed */
extern void T95f253(GE_context* ac, T0* C);
/* ET_CLASS.is_in_cluster */
extern T1 T95f110(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.error_handler */
extern T0* T359f698(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_fatal_error */
extern void T359f1138(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_none_class */
extern void T359f1137(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_identifier */
extern void T1235f25(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_identifier */
extern void T524f7(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_identifier */
extern void T520f12(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_identifier */
extern void T505f124(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_cursor_validity */
extern void T505f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_COMPONENT_LIST.across_component */
extern T0* T1585f8(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.current_closure_impl */
extern T0* T505f48(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_across_cursor */
extern void T505f245(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.copy_type_context */
extern void T517f61(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.item */
extern T0* T517f15(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set_root_context */
extern void T517f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].found_item */
extern T0* T521f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].found */
extern T1 T521f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].search */
extern void T521f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].search_position */
extern void T521f65(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].hash_position */
extern T6 T521f32(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.hash_code */
extern T6 T2156f15(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.hash_code */
extern T6 T2161f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].key_storage_item */
extern T0* T521f36(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].slots_item */
extern T6 T521f34(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_veen9b_error */
extern void T53f363(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen9b */
extern T0* T1418c914(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen9_error */
extern T1 T53f105(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen9b_error */
extern void T36f362(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen9_error */
extern T1 T36f104(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen9a_error */
extern void T53f362(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen9a */
extern T0* T1418c913(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen9a_error */
extern void T36f361(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACROSS_CURSOR_SCOPE.across_component */
extern T0* T522f3(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].item */
extern T0* T1394f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.has_implementation_error */
extern T1 T505f51(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_test_local_validity */
extern void T505f184(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST_LIST.object_test */
extern T0* T1583f8(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_object_test_local */
extern void T505f244(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].found_item */
extern T0* T518f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].found */
extern T1 T518f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].search */
extern void T518f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].search_position */
extern void T518f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].hash_position */
extern T6 T518f32(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_OBJECT_TEST.hash_code */
extern T6 T2159f25(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.hash_code */
extern T6 T1384f22(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].key_storage_item */
extern T0* T518f36(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].slots_item */
extern T6 T518f34(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_veen8b_error */
extern void T53f361(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen8b */
extern T0* T1418c912(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen8_error */
extern T1 T53f104(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen8b_error */
extern void T36f360(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen8_error */
extern T1 T36f103(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen8a_error */
extern void T53f360(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen8a */
extern T0* T1418c911(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen8a_error */
extern void T36f359(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST_SCOPE.object_test */
extern T0* T519f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].item */
extern T0* T1387f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_local_variable_validity */
extern void T505f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_variable */
extern void T505f243(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vevi0a_error */
extern void T53f359(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vevi0a */
extern T0* T1418c910(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vevi_error */
extern T1 T53f93(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vevi0a_error */
extern void T36f358(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vevi_error */
extern T1 T36f92(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_expanded */
extern T1 T517f39(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_detachable */
extern T1 T517f38(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.attached_like_current */
extern T0* T94f1465(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.has_local_variable */
extern T1 T523f8(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_attached */
extern T1 T517f37(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen2c_error */
extern void T53f358(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2c */
extern T0* T1418c909(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen2_error */
extern T1 T53f103(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen2c_error */
extern void T36f357(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen2_error */
extern T1 T36f102(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2e_error */
extern void T53f357(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2e */
extern T0* T1418c908(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2e_error */
extern void T36f356(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_validity */
extern void T505f182(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_formal_argument */
extern void T505f242(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE.has_formal_argument */
extern T1 T523f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_identifier */
extern void T91f147(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_cursor_validity */
extern void T91f161(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_closure_impl */
extern T0* T91f63(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_cursor */
extern void T91f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.has_implementation_error */
extern T1 T91f69(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_validity */
extern void T91f160(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_local */
extern void T91f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_validity */
extern void T91f159(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable */
extern void T91f172(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_validity */
extern void T91f158(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument */
extern void T91f171(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_identifier */
extern void T84f971(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand */
extern void T84f977(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_closed_operand */
extern T1 T232f33(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_agent_open_operand */
extern void T84f976(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_open_operand */
extern T1 T232f32(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_local */
extern void T84f975(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test_local_name */
extern void T84f981(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_current */
extern void T1235f27(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_current */
extern void T524f10(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_current */
extern void T520f15(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current */
extern void T505f127(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_validity */
extern void T505f188(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_current */
extern void T505f247(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0f_error */
extern void T53f388(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0f */
extern T0* T1418c933(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vucr_error */
extern T1 T53f94(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vucr0f_error */
extern void T36f387(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vucr_error */
extern T1 T36f93(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current */
extern void T91f276(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_validity */
extern void T91f362(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current */
extern void T91f421(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_dynamic_type_set */
extern void T91f136(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.put */
extern void T373f16(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.process_current */
extern void T84f972(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_current */
extern void T84f978(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_qualified_call_expression */
extern void T1235f44(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_actual_argument_list */
extern void T1235f78(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_qualified_call_expression */
extern void T524f12(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_qualified_call_expression */
extern void T520f17(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_qualified_call_expression */
extern void T505f129(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_expression_validity */
extern void T505f190(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T505f190ot1(T0* a1, T0** a2);
extern T1 T505f190ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vuex2a_error */
extern void T53f390(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuex2a */
extern T0* T1418c935(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T53f114(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex2a_error */
extern void T36f389(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T36f113(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_expression_validity */
extern void T505f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_tuple_label_expression */
extern void T505f319(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.formal_parameter_type */
extern T0* T95f199(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].replace */
extern void T2583f11(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].item */
extern T0* T2583f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].put_last */
extern void T2583f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].force */
extern void T2719f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].fill_with */
extern void T2718f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].extend */
extern void T2718f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].resize */
extern void T2583f9(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T2719f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T2718f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T2583c8(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].set_internal_cursor */
extern void T2583f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].new_cursor */
extern T0* T2583f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T2720c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T2719f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].make_empty */
extern T0* T2718c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].default_create */
extern T0* T2719c3(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.report_vuar1c_error */
extern void T53f421(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar1c */
extern T0* T1418c966(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T53f121(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar1c_error */
extern void T36f420(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T36f120(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuta2b_error */
extern void T53f420(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuta2b */
extern T0* T1418c965(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T53f119(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuta2b_error */
extern void T36f419(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T36f118(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.is_entity_attached */
extern T1 T505f53(GE_context* ac, T0* C, T0* a1);
extern T1 T505f53ot1(T0* a1);
extern T1 T505f53ot2(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE.has_attribute */
extern T1 T523f10(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.has_result */
extern T1 T523f6(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T517f42(GE_context* ac, T0* C, T0* a1);
extern T1 T517f42ot1(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.put_last */
extern void T517f58(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.remove_last */
extern void T517f56(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.put */
extern void T517f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.last */
extern T0* T517f16(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vkcn2a_error */
extern void T53f389(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn2a */
extern T0* T1418c934(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T53f113(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn2a_error */
extern void T36f388(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T36f112(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_query_call_expression_validity */
extern void T505f251(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.reset_fatal_error */
extern void T505f318(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_query_call_type_validity */
extern void T505f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T505f317ot1(T0* a1, T0** a2);
extern T1 T505f317ot2(T0* a1, T0** a2);
extern T1 T505f317ot3(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_qualified_call_expression */
extern void T505f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_validity */
extern void T505f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_actual_arguments_validity */
extern void T505f310(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T505f310ot1(T0* a1, T0** a2);
extern T1 T505f310ot2(T0* a1);
extern T1 T505f310ot3(T0* a1, T0** a2);
extern T1 T505f310ot4(T0* a1);
extern T1 T505f310ot5(T0* a1, T0** a2);
extern T1 T505f310ot6(T0* a1, T0** a2);
extern T1 T505f310ot7(T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2b_error */
extern void T53f466(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vuar2b */
extern T0* T1418c1011(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T53f120(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar2b_error */
extern void T36f465(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T36f119(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2a_error */
extern void T53f401(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar2a */
extern T0* T1418c946(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vuar2a_error */
extern void T36f400(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vdpr4b_error */
extern void T53f465(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vdpr4b */
extern T0* T1418c1010(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T53f145(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr4b_error */
extern void T36f464(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T36f144(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_basic */
extern T1 T95f162(GE_context* ac, T0* C);
/* ET_CLASS_CODES.is_basic */
extern T1 T540f34(GE_context* ac, T0* C, T8 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.put */
extern void T2487f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_ACTUAL_ARGUMENT_LIST.put */
extern void T391f19(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.item */
extern T0* T2487f6(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.item */
extern T0* T391f5(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.convert_expression */
extern T0* T505f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_builtin_conversion */
extern void T505f376(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_BUILTIN_EXPRESSION.make */
extern T0* T2684c18(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_TO_EXPRESSION.make */
extern T0* T2686c23(GE_context* ac, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_creation_expression */
extern void T505f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FROM_EXPRESSION.make */
extern T0* T2685c23(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.current_universe */
extern T0* T505f57(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.convert_feature */
extern T0* T510f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.convert_from_feature */
extern T0* T95f228(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BRACED_TYPE_LIST.has_named_type_with_type_marks */
extern T1 T1820f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TOKEN_CONSTANTS.attached_separate_type_mark */
extern T0* T94f1509(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identity_type */
extern T0* T94f777(GE_context* ac, T0* C);
/* ET_CLASS.convert_to_feature */
extern T0* T95f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context */
extern T1 T517f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context_with_type_marks */
extern T1 T517f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.tokens */
extern T0* T517f17(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar1b_error */
extern void T53f464(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuar1b */
extern T0* T1418c1009(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuar1b_error */
extern void T36f463(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuar1a_error */
extern void T53f402(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuar1a */
extern T0* T1418c947(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vuar1a_error */
extern void T36f401(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr4a_error */
extern void T53f463(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr4a */
extern T0* T1418c1008(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr4a_error */
extern void T36f462(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make */
extern T0* T2487c13(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ET_MANIFEST_TUPLE.make */
extern T0* T399c36(GE_context* ac);
/* ET_MANIFEST_TUPLE.make */
extern void T399f36p1(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.put_first */
extern void T2487f18(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T2487f11(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T2487f17(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T2487f17p1(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T2487f10(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.tuple_argument_position */
extern T6 T505f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_vape_validity */
extern void T505f278(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape0b_error */
extern void T53f436(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape0b */
extern T0* T1418c981(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vape_error */
extern T1 T53f135(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vape0b_error */
extern void T36f435(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vape_error */
extern T1 T36f134(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuex2b_error */
extern void T53f400(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuex2b */
extern T0* T1418c945(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vuex2b_error */
extern void T36f399(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vuta2a_error */
extern void T53f399(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuta2a */
extern T0* T1418c944(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vuta2a_error */
extern void T36f398(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_query_parenthesis_call_validity */
extern void T505f250(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T505f250ot1(T0* a1, T0** a2);
extern T1 T505f250ot2(T0* a1, T0** a2);
extern T1 T505f250ot3(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_expression_validity */
extern void T505f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T505f315ot1(T0* a1, T0** a2);
extern T1 T505f315ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_instruction_validity */
extern void T505f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T505f314ot1(T0* a1, T0** a2);
extern T1 T505f314ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vkcn1a_error */
extern void T53f413(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn1a */
extern T0* T1418c958(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T53f127(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn1a_error */
extern void T36f412(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T36f126(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_instruction_validity */
extern void T505f303(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_call_instruction */
extern void T505f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_expression_validity */
extern void T505f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_call_expression */
extern void T505f325(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_vape_validity */
extern void T505f324(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vape0a_error */
extern void T53f467(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0a */
extern T0* T1418c1012(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vape0a_error */
extern void T36f466(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vucr0d_error */
extern void T53f432(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0d */
extern T0* T1418c977(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vucr0d_error */
extern void T36f431(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.set_parenthesis_call_position */
extern void T505f313(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIS_SYMBOL.set_position */
extern void T2615f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_CLASS.named_feature */
extern T0* T95f191(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_SYMBOL.make */
extern T0* T2615c41(GE_context* ac);
/* ET_PARENTHESIS_SYMBOL.make_leaf */
extern void T2615f44(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.tokens */
extern T0* T2615f36(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_qualified_dotnet_query_call_expression_validity */
extern void T505f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.free_overloaded_queries */
extern void T505f312(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].force_last */
extern void T514f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].force */
extern void T1368f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].fill_with */
extern void T1369f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].extend */
extern void T1369f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].resize */
extern void T514f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].aliased_resized_area */
extern T0* T1368f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].aliased_resized_area */
extern T0* T1369f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].new_capacity */
extern T6 T514f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].extendible */
extern T1 T514f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].first */
extern T0* T863f14(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.keep_best_overloaded_features */
extern void T505f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].keep_first */
extern void T863f38(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].keep_first */
extern void T864f38(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.free_overloaded_features */
extern void T505f353(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].force_last */
extern void T515f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].force */
extern void T1371f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].fill_with */
extern void T1373f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].extend */
extern void T1373f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].resize */
extern void T515f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].aliased_resized_area */
extern T0* T1371f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].aliased_resized_area */
extern T0* T1373f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].new_capacity */
extern T6 T515f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].extendible */
extern T1 T515f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].has */
extern T1 T1372f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].remove */
extern void T1372f15(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].move_left */
extern void T1372f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].move_cursors_left */
extern void T1372f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE].set_position */
extern void T2702f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].remove_last */
extern void T1372f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].move_last_cursors_after */
extern void T1372f22(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE].set_next_cursor */
extern void T2702f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE].set_after */
extern void T2702f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].item */
extern T0* T1372f11(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type */
extern T1 T517f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].wipe_out */
extern void T1372f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].move_all_cursors_after */
extern void T1372f18(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].force_last */
extern void T1372f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].resize */
extern void T1372f17(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].new_capacity */
extern T6 T1372f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].extendible */
extern T1 T1372f9(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.new_overloaded_features */
extern T0* T505f58(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].remove_last */
extern void T515f15(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].keep_head */
extern void T1373f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].set_count */
extern void T1373f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].move_last_cursors_after */
extern void T515f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].set_next_cursor */
extern void T1374f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].set_after */
extern void T1374f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].last */
extern T0* T515f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].make */
extern T0* T1372c12(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].set_internal_cursor */
extern void T1372f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].new_cursor */
extern T0* T1372f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE].make */
extern T0* T2702c5(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].is_empty */
extern T1 T515f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].remove */
extern void T863f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].move_left */
extern void T863f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].move_cursors_left */
extern void T863f40(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].remove_last */
extern void T863f39(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].move_last_cursors_after */
extern void T863f42(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].remove */
extern void T864f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].move_left */
extern void T864f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].move_cursors_left */
extern void T864f40(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].remove_last */
extern void T864f39(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].move_last_cursors_after */
extern void T864f42(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].is_empty */
extern T1 T863f13(GE_context* ac, T0* C);
/* ET_CLASS.add_overloaded_queries */
extern void T95f307(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUERY_LIST.add_overloaded_features */
extern void T351f14(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T351f14ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.new_overloaded_queries */
extern T0* T505f55(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].remove_last */
extern void T514f15(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].keep_head */
extern void T1369f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].set_count */
extern void T1369f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].move_last_cursors_after */
extern void T514f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].set_next_cursor */
extern void T1370f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].set_after */
extern void T1370f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].last */
extern T0* T514f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].is_empty */
extern T1 T514f9(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.set_boolean_operator */
extern void T2134f29(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.is_boolean_class */
extern T1 T95f135(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_current_type_needed */
extern void T505f105(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_expression */
extern void T91f293(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_expression_validity */
extern void T91f379(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f379ot1(T0* a1, T0** a2);
extern T1 T91f379ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_expression_validity */
extern void T91f433(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_expression */
extern void T91f476(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f476ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_qualified_call_target_dynamic_types */
extern void T91f336(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dynamic_type_set */
extern T0* T91f82(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.is_entity_attached */
extern T1 T91f73(GE_context* ac, T0* C, T0* a1);
extern T1 T91f73ot1(T0* a1);
extern T1 T91f73ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_expression_validity */
extern void T91f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.reset_fatal_error */
extern void T91f347(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_call_type_validity */
extern void T91f413(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T91f413ot1(T0* a1, T0** a2);
extern T1 T91f413ot2(T0* a1, T0** a2);
extern T1 T91f413ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_expression */
extern void T91f412(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T91f412ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_validity */
extern void T91f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_arguments_validity */
extern void T91f257(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T91f257ot1(T0* a1, T0** a2);
extern T1 T91f257ot2(T0* a1);
extern T1 T91f257ot3(T0* a1, T0** a2);
extern T1 T91f257ot4(T0* a1);
extern T1 T91f257ot5(T0* a1, T0** a2);
extern T1 T91f257ot6(T0* a1, T0** a2);
extern T1 T91f257ot7(T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.convert_expression */
extern T0* T91f74(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_conversion */
extern void T91f514(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_expression */
extern void T91f474(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_operand_dynamic_types */
extern void T91f415(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe */
extern T0* T91f79(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tuple_argument_position */
extern T6 T91f81(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_vape_validity */
extern void T91f351(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_parenthesis_call_validity */
extern void T91f253(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T91f253ot1(T0* a1, T0** a2);
extern T1 T91f253ot2(T0* a1, T0** a2);
extern T1 T91f253ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_expression_validity */
extern void T91f334(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T91f334ot1(T0* a1, T0** a2);
extern T1 T91f334ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_instruction_validity */
extern void T91f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T91f333ot1(T0* a1, T0** a2);
extern T1 T91f333ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_instruction_validity */
extern void T91f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_instruction */
extern void T91f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.make */
extern T0* T429c11(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_expression_validity */
extern void T91f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_expression */
extern void T91f414(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f414ot1(T0* a1, T0** a2);
extern T1 T91f414ot2(T0* a1, T0** a2);
extern T1 T91f414ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_like_argument_dynamic_types */
extern void T91f467(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_dynamic_types */
extern void T91f420(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_vape_validity */
extern void T91f360(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_parenthesis_call_position */
extern void T91f330(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_query_call_expression_validity */
extern void T91f432(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_queries */
extern void T91f255(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.keep_best_overloaded_features */
extern void T91f254(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_features */
extern void T91f335(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_features */
extern T0* T91f80(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_queries */
extern T0* T91f72(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_validity */
extern void T91f250(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_expression_supplier */
extern void T91f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current_type_needed */
extern void T91f167(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_qualified_call_expression */
extern void T84f973(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_expression */
extern void T84f979(GE_context* ac, T0* C, T0* a1);
extern T1 T84f979ot1(T0* a1, T0** a2);
extern T1 T84f979ot2(T0* a1, T0** a2);
extern T1 T84f979ot3(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_expressions_unfrozen */
extern void T84f984(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_expressions_frozen */
extern void T84f983(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_used */
extern void T84f982(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_result */
extern void T1235f39(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_result */
extern void T524f9(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_result */
extern void T520f14(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result */
extern void T505f126(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_validity */
extern void T505f187(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result */
extern void T505f246(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vevi0b_error */
extern void T53f387(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0b */
extern T0* T1418c932(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0b_error */
extern void T36f386(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2a_error */
extern void T53f386(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2a */
extern T0* T1418c931(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2a_error */
extern void T36f385(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2g_error */
extern void T53f385(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2g */
extern T0* T1418c930(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2g_error */
extern void T36f384(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2d_error */
extern void T53f384(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen2d */
extern T0* T1418c929(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_veen2d_error */
extern void T36f383(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2b_error */
extern void T53f383(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2b */
extern T0* T1418c928(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2b_error */
extern void T36f382(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2f_error */
extern void T53f382(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2f */
extern T0* T1418c927(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2f_error */
extern void T36f381(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result */
extern void T91f288(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_validity */
extern void T91f374(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result */
extern void T91f426(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_result */
extern void T84f974(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_result */
extern void T84f980(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_value */
extern void T84f985(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_DYNAMIC_PRECURSOR.is_once_per_process */
extern T1 T416f21(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once_per_process */
extern T1 T332f20(GE_context* ac, T0* C);
/* ET_C_GENERATOR.once_prefixes */
extern T0* T84f441(GE_context* ac, T0* C);
/* ET_C_GENERATOR.once_kind */
extern T6 T84f440(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_real_64_class */
extern T1 T95f148(GE_context* ac, T0* C);
/* ET_CLASS.is_real_32_class */
extern T1 T95f147(GE_context* ac, T0* C);
/* ET_CLASS.is_pointer_class */
extern T1 T95f146(GE_context* ac, T0* C);
/* ET_CLASS.is_natural_64_class */
extern T1 T95f145(GE_context* ac, T0* C);
/* ET_CLASS.is_natural_32_class */
extern T1 T95f144(GE_context* ac, T0* C);
/* ET_CLASS.is_natural_16_class */
extern T1 T95f143(GE_context* ac, T0* C);
/* ET_CLASS.is_natural_8_class */
extern T1 T95f142(GE_context* ac, T0* C);
/* ET_CLASS.is_integer_64_class */
extern T1 T95f141(GE_context* ac, T0* C);
/* ET_CLASS.is_integer_32_class */
extern T1 T95f140(GE_context* ac, T0* C);
/* ET_CLASS.is_integer_16_class */
extern T1 T95f139(GE_context* ac, T0* C);
/* ET_CLASS.is_integer_8_class */
extern T1 T95f138(GE_context* ac, T0* C);
/* ET_CLASS.is_character_32_class */
extern T1 T95f137(GE_context* ac, T0* C);
/* ET_CLASS.is_character_8_class */
extern T1 T95f136(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].found_item */
extern T6 T401f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].item_storage_item */
extern T6 T401f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].found */
extern T1 T401f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].search */
extern void T401f50(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unqualified_call_expression */
extern void T1235f69(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T524f17(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T520f22(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unqualified_call_expression */
extern void T505f134(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_expression_validity */
extern void T505f195(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T505f195ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vuex1a_error */
extern void T53f394(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuex1a */
extern T0* T1418c939(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T53f116(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex1a_error */
extern void T36f393(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T36f115(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn2c_error */
extern void T53f393(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn2c */
extern T0* T1418c938(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vkcn2c_error */
extern void T36f392(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_expression_validity */
extern void T505f261(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuao0c_error */
extern void T53f431(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0c */
extern T0* T1418c976(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T53f134(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuao0c_error */
extern void T36f430(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T36f133(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuao0a_error */
extern void T53f430(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0a */
extern T0* T1418c975(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuao0a_error */
extern void T36f429(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuao0b_error */
extern void T53f429(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0b */
extern T0* T1418c974(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuao0b_error */
extern void T36f428(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_object_test_local_parenthesis_call_validity */
extern void T505f323(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_identifier_parenthesis_call_validity */
extern void T505f354(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T505f354ot1(T0* a1, T0** a2);
extern T1 T505f354ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_unqualified_across_cursor_call_expression_validity */
extern void T505f260(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuac0c_error */
extern void T53f428(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0c */
extern T0* T1418c973(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T53f133(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuac0c_error */
extern void T36f427(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T36f132(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuac0a_error */
extern void T53f427(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0a */
extern T0* T1418c972(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuac0a_error */
extern void T36f426(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuac0b_error */
extern void T53f426(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0b */
extern T0* T1418c971(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuac0b_error */
extern void T36f425(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_across_cursor_parenthesis_call_validity */
extern void T505f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_local_variable_call_expression_validity */
extern void T505f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvual0a_error */
extern void T53f425(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0a */
extern T0* T1418c970(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvual_error */
extern T1 T53f132(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvual0a_error */
extern void T36f424(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvual_error */
extern T1 T36f131(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0b_error */
extern void T53f424(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0b */
extern T0* T1418c969(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvual0b_error */
extern void T36f423(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_local_variable_parenthesis_call_validity */
extern void T505f321(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_expression_validity */
extern void T505f258(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0a_error */
extern void T53f423(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0a */
extern T0* T1418c968(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T53f131(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuaa0a_error */
extern void T36f422(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T36f130(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0b_error */
extern void T53f422(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0b */
extern T0* T1418c967(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuaa0b_error */
extern void T36f421(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_parenthesis_call_validity */
extern void T505f320(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_expression */
extern void T91f318(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_expression_validity */
extern void T91f404(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f404ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_expression_validity */
extern void T91f461(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_parenthesis_call_validity */
extern void T91f359(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_identifier_parenthesis_call_validity */
extern void T91f419(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T91f419ot1(T0* a1, T0** a2);
extern T1 T91f419ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_across_cursor_call_expression_validity */
extern void T91f460(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_cursor_parenthesis_call_validity */
extern void T91f358(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_expression_validity */
extern void T91f459(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_parenthesis_call_validity */
extern void T91f357(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_expression_validity */
extern void T91f458(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_parenthesis_call_validity */
extern void T91f356(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_unqualified_call_expression */
extern void T84f986(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_expression */
extern void T84f997(GE_context* ac, T0* C, T0* a1);
extern T1 T84f997ot1(T0* a1, T0** a2);
extern T1 T84f997ot2(T0* a1, T0** a2);
extern T1 T84f997ot3(T0* a1, T0** a2);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T397f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_constant_attribute */
extern T1 T416f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_constant_attribute */
extern T1 T332f25(GE_context* ac, T0* C);
/* ET_C_GENERATOR.in_target */
extern T1 T84f445(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].is_empty */
extern T1 T380f11(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_attribute */
extern T1 T416f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_attribute */
extern T1 T332f24(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_expression_static_call */
extern void T84f1005(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T84f1005ot1(T0* a1, T0** a2);
extern T1 T84f1005ot2(T0* a1, T0** a2);
extern T1 T84f1005ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PRECURSOR.set_static_generated */
extern void T416f34(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_static_generated */
extern void T332f40(GE_context* ac, T0* C, T1 a1);
/* ET_PRECURSOR_CHECKER.process_manifest_tuple */
extern void T1235f60(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_tuple */
extern void T524f16(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_tuple */
extern void T520f21(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_tuple */
extern void T505f133(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_tuple_validity */
extern void T505f194(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T505f194ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_manifest_tuple */
extern void T505f257(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_tuple */
extern void T91f309(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_tuple_validity */
extern void T91f395(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f395ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_tuple */
extern void T91f445(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T91f445ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe_impl */
extern T0* T91f64(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_manifest_tuple */
extern void T84f987(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple */
extern void T84f998(GE_context* ac, T0* C, T0* a1);
extern T1 T84f998ot1(T0* a1, T0** a2);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].force_last */
extern void T400f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].slots_put */
extern void T400f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].clashes_put */
extern void T400f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].slots_item */
extern T6 T400f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].hash_position */
extern T6 T400f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].resize */
extern void T400f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].clashes_resize */
extern void T400f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].special_integer_ */
extern T0* T400f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].key_storage_resize */
extern void T400f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].item_storage_resize */
extern void T400f61(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T1304f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T1303f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].key_storage_item */
extern T0* T400f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].slots_resize */
extern void T400f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].new_capacity */
extern T6 T400f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].item_storage_put */
extern void T400f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE].force */
extern void T1304f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE].fill_with */
extern void T1303f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE].extend */
extern void T1303f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].search_position */
extern void T400f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].key_equality_tester */
extern T0* T400f30(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_object_test */
extern void T1235f56(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_object_test */
extern void T524f15(GE_context* ac, T0* C, T0* a1);
extern T1 T524f15ot1(T0* a1);
extern T1 T524f15ot2(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE.add_name */
extern void T523f16(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_attribute */
extern void T523f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].force_last */
extern void T1395f81(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE.add_formal_argument */
extern void T523f21(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_local_variable */
extern void T523f20(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_result */
extern void T523f15(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_object_test */
extern void T520f20(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_object_test */
extern void T505f132(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_test_validity */
extern void T505f193(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_object_test */
extern void T505f256(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_object_test_type */
extern void T505f255(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_type_validity */
extern void T505f113(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_type_validity */
extern void T510f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_test */
extern void T91f305(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_validity */
extern void T91f391(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test */
extern void T91f442(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_constant_expression */
extern void T91f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].force_last */
extern void T507f62(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].new_capacity */
extern T6 T507f34(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_type */
extern void T91f441(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_type_validity */
extern void T91f201(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_object_test */
extern void T84f988(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test */
extern void T84f999(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].force_last */
extern void T385f14(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST].force */
extern void T1283f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_OBJECT_TEST].fill_with */
extern void T1282f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_OBJECT_TEST].extend */
extern void T1282f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].resize */
extern void T385f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST].aliased_resized_area */
extern T0* T1283f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_OBJECT_TEST].aliased_resized_area */
extern T0* T1282f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].new_capacity */
extern T6 T385f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].extendible */
extern T1 T385f8(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_object_equality_expression */
extern void T1235f52(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_object_equality_expression */
extern void T524f14(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_object_equality_expression */
extern void T520f19(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_object_equality_expression */
extern void T505f131(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_equality_expression_validity */
extern void T505f192(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_object_equality_expression */
extern void T505f254(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vweq0b_error */
extern void T53f392(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0b */
extern T0* T1418c937(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vweq_error */
extern T1 T53f115(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vweq0b_error */
extern void T36f391(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vweq_error */
extern T1 T36f114(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_left */
extern void T432f27(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_right */
extern void T432f26(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.name */
extern T0* T432f14(GE_context* ac, T0* C);
/* ET_IDENTIFIER.twin */
extern T0* T232f96(GE_context* ac, T0* C);
/* ET_IDENTIFIER.copy */
extern void T232f129(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.tokens */
extern T0* T432f18(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_equality_expression */
extern void T91f301(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_equality_expression_validity */
extern void T91f387(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_equality_expression */
extern void T91f439(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_object_equality_expression_target_dynamic_types */
extern void T91f479(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T2676c6(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_object_equality_expression */
extern void T84f989(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_equality_expression */
extern void T1235f51(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_equality_expression */
extern void T524f13(GE_context* ac, T0* C, T0* a1);
extern T1 T524f13ot1(T0* a1);
extern T1 T524f13ot2(T0* a1);
extern T1 T524f13ot3(T0* a1, T0** a2);
extern T1 T524f13ot4(T0* a1);
extern T1 T524f13ot5(T0* a1);
extern T1 T524f13ot6(T0* a1, T0** a2);
/* ET_BRACKET_SYMBOL.is_equal_symbol */
extern T1 T846f95(GE_context* ac, T0* C);
/* ET_SYMBOL.is_equal_symbol */
extern T1 T474f68(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_equality_expression */
extern void T520f18(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_equality_expression */
extern void T505f130(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_equality_expression_validity */
extern void T505f191(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_equality_expression */
extern void T505f253(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vweq0a_error */
extern void T53f391(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0a */
extern T0* T1418c936(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vweq0a_error */
extern void T36f390(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EQUALITY_EXPRESSION.set_left */
extern void T433f25(GE_context* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.set_right */
extern void T433f24(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_equality_expression */
extern void T91f300(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_equality_expression_validity */
extern void T91f386(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_equality_expression */
extern void T91f438(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_equality_expression_target_dynamic_types */
extern void T91f478(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.make */
extern T0* T2675c6(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_equality_expression */
extern void T84f990(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_expression */
extern void T1235f42(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_create_expression */
extern void T524f11(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_create_expression */
extern void T520f16(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_expression */
extern void T505f128(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_expression_validity */
extern void T505f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_creation_expression_validity */
extern void T505f248(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T505f248ot1(T0* a1, T0** a2);
extern T1 T505f248ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vgcc6c_error */
extern void T53f419(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6c */
extern T0* T1418c964(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc6c_error */
extern void T36f418(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc8a_error */
extern void T53f418(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8a */
extern T0* T1418c963(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T53f130(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc8a_error */
extern void T36f417(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T36f129(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.has_feature */
extern T1 T1244f8(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc1a_error */
extern void T53f417(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc1a */
extern T0* T1418c962(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T53f129(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc1a_error */
extern void T36f416(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T36f128(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc5a_error */
extern void T53f416(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5a */
extern T0* T1418c961(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T53f128(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc5a_error */
extern void T36f415(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T36f127(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_type_validity */
extern void T505f309(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TYPE_CHECKER.check_creation_type_validity */
extern void T510f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T510f21ot1(T0* a1, T0** a2);
extern T1 T510f21ot2(T0* a1, T0** a2);
extern T1 T510f21ot3(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vtcg4a_error */
extern void T53f479(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4a */
extern T0* T1418c1024(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T53f152(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg4a_error */
extern void T36f478(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T36f151(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.current_system */
extern T0* T510f14(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.ise_6_0_6_7358 */
extern T0* T510f13(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtcg4b_error */
extern void T53f478(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4b */
extern T0* T1418c1023(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vtcg4b_error */
extern void T36f477(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_CONSTRAINT_CREATOR.is_empty */
extern T1 T1244f9(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.error_handler */
extern T0* T510f11(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.set_fatal_error */
extern void T510f24(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.type_position */
extern T0* T2685f21(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.type_position */
extern T0* T444f20(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_create_supplier */
extern void T505f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_create_supplier */
extern void T1250f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6b_error */
extern void T53f415(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6b */
extern T0* T1418c960(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6b_error */
extern void T36f414(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.free_overloaded_procedures */
extern void T505f307(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].force_last */
extern void T513f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].force */
extern void T1365f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].fill_with */
extern void T1366f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].extend */
extern void T1366f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].resize */
extern void T513f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].aliased_resized_area */
extern T0* T1365f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].aliased_resized_area */
extern T0* T1366f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].new_capacity */
extern T6 T513f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].extendible */
extern T1 T513f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].first */
extern T0* T864f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].is_empty */
extern T1 T864f13(GE_context* ac, T0* C);
/* ET_CLASS.add_overloaded_procedures */
extern void T95f308(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PROCEDURE_LIST.add_overloaded_features */
extern void T352f14(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T352f14ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.new_overloaded_procedures */
extern T0* T505f54(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].remove_last */
extern void T513f15(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].keep_head */
extern void T1366f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].set_count */
extern void T1366f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].move_last_cursors_after */
extern void T513f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].set_next_cursor */
extern void T1367f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].set_after */
extern void T1367f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].last */
extern T0* T513f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].is_empty */
extern T1 T513f9(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.column */
extern T6 T2776f3(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.line */
extern T6 T2776f2(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.last_position */
extern T0* T2685f20(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.last_position */
extern T0* T444f19(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.creation_call */
extern T0* T2685f19(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_expression */
extern void T91f291(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_expression_validity */
extern void T91f377(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_expression_validity */
extern void T91f428(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f428ot1(T0* a1, T0** a2);
extern T1 T91f428ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_type_validity */
extern void T91f345(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_create_supplier */
extern void T91f344(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_procedures */
extern void T91f328(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_procedures */
extern T0* T91f78(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_create_expression */
extern void T84f991(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_expression */
extern void T84f1000(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_integer_constant */
extern void T1235f29(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_integer_constant */
extern void T524f8(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_integer_constant */
extern void T520f13(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_integer_constant */
extern void T505f125(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_integer_constant_validity */
extern void T505f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_integer_constant_validity */
extern void T505f106(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYMBOL_OPERATOR.is_minus */
extern T1 T2054f18(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_natural_64_constant */
extern void T505f121(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_32_constant */
extern void T505f120(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_16_constant */
extern void T505f119(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_8_constant */
extern void T505f118(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_64_constant */
extern void T505f117(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_32_constant */
extern void T505f116(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_16_constant */
extern void T505f115(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvwmc2a_error */
extern void T53f353(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvwmc2a */
extern T0* T1418c905(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T53f102(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvwmc2a_error */
extern void T36f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T36f101(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_8_constant */
extern void T505f114(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0a_error */
extern void T53f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0a */
extern T0* T1418c904(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.type_name */
extern T0* T1418f355(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T53f101(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwmq0a_error */
extern void T36f351(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T36f100(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_integer_constant */
extern void T91f278(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_integer_constant_validity */
extern void T91f364(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_integer_constant_validity */
extern void T91f168(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_64_constant */
extern void T91f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_32_constant */
extern void T91f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_16_constant */
extern void T91f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_8_constant */
extern void T91f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_64_constant */
extern void T91f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_32_constant */
extern void T91f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_16_constant */
extern void T91f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_8_constant */
extern void T91f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_integer_constant */
extern void T84f992(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_integer_constant */
extern void T84f1001(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_integer_constant */
extern void T84f1006(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_integer_value */
extern void T84f1009(GE_context* ac, T0* C, T11 a1, T1 a2, T0* a3, T1 a4);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_64 */
extern void T186f11(GE_context* ac, T0* C, T11 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_64 */
extern void T374f12(GE_context* ac, T0* C, T11 a1);
/* ET_PRECURSOR_CHECKER.process_do_procedure */
extern void T1235f18(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_compound */
extern void T1235f24(GE_context* ac, T0* C, T0* a1);
/* ET_COMPOUND.item */
extern T0* T456f7(GE_context* ac, T0* C, T6 a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_do_procedure */
extern void T1234f19(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure */
extern void T505f82(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_validity */
extern void T505f89(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_rescue_validity */
extern void T505f101(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_instructions_validity */
extern void T505f100(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_locals_validity */
extern void T505f99(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_supplier */
extern void T505f112(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_local_supplier */
extern void T1250f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_variable_declaration */
extern void T505f111(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_local_type_validity */
extern void T505f110(GE_context* ac, T0* C, T0* a1);
extern T1 T505f110ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vrle1a_error */
extern void T53f340(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle1a */
extern T0* T1418c894(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T53f91(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle1a_error */
extern void T36f339(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T36f90(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle2a_error */
extern void T53f339(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle2a */
extern T0* T1418c893(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T53f90(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle2a_error */
extern void T36f338(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T36f89(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0b_error */
extern void T53f338(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0b */
extern T0* T1418c892(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vreg0b_error */
extern void T36f337(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_across_components_validity */
extern void T505f98(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_object_tests_validity */
extern void T505f97(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot3a_error */
extern void T53f337(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuot3a */
extern T0* T1418c891(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T53f89(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot3a_error */
extern void T36f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T36f88(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_6_4_7_7252 */
extern T0* T505f45(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_formal_arguments_validity */
extern void T505f96(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_argument_supplier */
extern void T505f109(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_argument_supplier */
extern void T1250f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_formal_argument_declaration */
extern void T505f108(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_signature_type_validity */
extern void T505f107(GE_context* ac, T0* C, T0* a1);
extern T1 T505f107ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure */
extern void T91f120(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T91f122(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_rescue_validity */
extern void T91f129(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_instructions_validity */
extern void T91f128(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_locals_validity */
extern void T91f127(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_supplier */
extern void T91f135(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable_declaration */
extern void T91f134(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_type_validity */
extern void T91f133(GE_context* ac, T0* C, T0* a1);
extern T1 T91f133ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_components_validity */
extern void T91f126(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_tests_validity */
extern void T91f125(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_4_7_7252 */
extern T0* T91f59(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_arguments_validity */
extern void T91f124(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_argument_supplier */
extern void T91f132(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument_declaration */
extern void T91f131(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_signature_type_validity */
extern void T91f130(GE_context* ac, T0* C, T0* a1);
extern T1 T91f130ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_do_procedure */
extern void T84f993(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure */
extern void T84f1002(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_procedure */
extern void T84f1007(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_address_routine */
extern void T84f1011(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.argument_type_set */
extern T0* T84f460(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_address_routine_name */
extern void T84f1033(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_feature_name_comment */
extern void T84f1012(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_internal_routine */
extern void T84f1010(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_assign_completed_to_once_status */
extern void T84f1032(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_internal_routine_body_declaration */
extern void T84f1031(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_assign_last_exception_to_once_exception */
extern void T84f1041(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_exception */
extern void T84f1037(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_compound */
extern void T84f1040(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_instruction */
extern void T84f1042(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.reset_rescue_data */
extern void T84f1039(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_malloc_current */
extern void T84f1030(GE_context* ac, T0* C, T0* a1);
extern T1 T84f1030ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.current_universe */
extern T0* T84f469(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_feature_trace_message_call */
extern void T84f1029(GE_context* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_unindented_feature_info_message_call */
extern void T84f1038(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assign_result_to_once_value */
extern void T84f1028(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_assign_called_to_once_status */
extern void T84f1027(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_once_value */
extern void T84f1026(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_status */
extern void T84f1025(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_status_is_completed */
extern void T84f1024(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_statement */
extern void T84f1023(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assign_called_to_thread_safe_once_status */
extern void T84f1022(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_assign_once_exception_to_thread_safe_once_exception */
extern void T84f1021(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_thread_safe_once_exception */
extern void T84f1034(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_assign_result_to_thread_safe_once_value */
extern void T84f1020(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_thread_safe_once_value */
extern void T84f1035(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_assign_once_value_to_result */
extern void T84f1019(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex_unlock */
extern void T84f1018(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex */
extern void T84f1036(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex_lock */
extern void T84f1017(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex_try_lock */
extern void T84f1016(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_thread_safe_once_value */
extern void T84f1015(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_raise_thread_safe_once_exception_if_any */
extern void T84f1014(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_thread_safe_once_status */
extern void T84f1013(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].force_last */
extern void T401f51(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].key_storage_put */
extern void T401f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].slots_put */
extern void T401f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].clashes_put */
extern void T401f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].resize */
extern void T401f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].clashes_resize */
extern void T401f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].special_integer_ */
extern T0* T401f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].key_storage_resize */
extern void T401f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].item_storage_resize */
extern void T401f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].slots_resize */
extern void T401f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].new_capacity */
extern T6 T401f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].item_storage_put */
extern void T401f52(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_PRECURSOR_CHECKER.process_deferred_procedure */
extern void T1235f12(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_deferred_procedure */
extern void T1234f20(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_procedure */
extern void T505f83(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_procedure_validity */
extern void T505f90(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_procedure */
extern void T91f121(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_procedure_validity */
extern void T91f123(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_procedure */
extern void T84f994(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_procedure */
extern void T84f1003(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_named_object_test */
extern void T1235f72(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_named_object_test */
extern void T524f5(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_named_object_test */
extern void T520f10(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE.add_object_test */
extern void T519f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].force_last */
extern void T1387f15(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].resize */
extern void T1387f16(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T1387f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].extendible */
extern T1 T1387f8(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vuot1f_error */
extern void T53f524(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1f */
extern T0* T1418c1068(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T53f111(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot1f_error */
extern void T36f523(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T36f110(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.error_handler */
extern T0* T520f7(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.set_fatal_error */
extern void T520f63(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.process_named_object_test */
extern void T505f122(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_named_object_test_validity */
extern void T505f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_named_object_test */
extern void T505f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot4b_error */
extern void T53f381(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuot4b */
extern T0* T1418c926(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T53f112(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot4b_error */
extern void T36f380(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T36f111(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuot4a_error */
extern void T53f380(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuot4a */
extern T0* T1418c925(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuot4a_error */
extern void T36f379(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.ise_6_3_7_5660 */
extern T0* T505f49(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuot1e_error */
extern void T53f379(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1e */
extern T0* T1418c924(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1e_error */
extern void T36f378(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1d_error */
extern void T53f378(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1d */
extern T0* T1418c923(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1d_error */
extern void T36f377(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].remove_last */
extern void T512f15(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_INLINE_AGENT].keep_head */
extern void T1363f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_INLINE_AGENT].set_count */
extern void T1363f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].move_last_cursors_after */
extern void T512f17(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INLINE_AGENT].set_next_cursor */
extern void T1364f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INLINE_AGENT].set_after */
extern void T1364f6(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuot1c_error */
extern void T53f377(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1c */
extern T0* T1418c922(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1c_error */
extern void T36f376(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1b_error */
extern void T53f376(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1b */
extern T0* T1418c921(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1b_error */
extern void T36f375(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].item */
extern T0* T512f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].force_last */
extern void T512f14(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_AGENT].force */
extern void T1361f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_INLINE_AGENT].fill_with */
extern void T1363f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_INLINE_AGENT].extend */
extern void T1363f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].resize */
extern void T512f16(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_AGENT].aliased_resized_area */
extern T0* T1361f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_INLINE_AGENT].aliased_resized_area */
extern T0* T1363f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].new_capacity */
extern T6 T512f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].extendible */
extern T1 T512f10(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vuot1a_error */
extern void T53f375(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1a */
extern T0* T1418c920(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1a_error */
extern void T36f374(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].force_last */
extern void T518f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].key_storage_put */
extern void T518f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].slots_put */
extern void T518f66(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].clashes_put */
extern void T518f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].resize */
extern void T518f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].clashes_resize */
extern void T518f71(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].special_integer_ */
extern T0* T518f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].key_storage_resize */
extern void T518f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].item_storage_resize */
extern void T518f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].slots_resize */
extern void T518f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T518f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].item_storage_put */
extern void T518f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_named_object_test */
extern void T91f321(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_named_object_test_validity */
extern void T91f406(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_named_object_test */
extern void T91f465(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_named_object_test_dynamic_types */
extern void T91f497(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_3_7_5660 */
extern T0* T91f86(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_named_object_test */
extern void T84f995(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_manifest_string */
extern void T1235f28(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_manifest_string */
extern void T524f6(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_manifest_string */
extern void T520f11(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_manifest_string */
extern void T505f123(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_manifest_string_validity */
extern void T505f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_manifest_string_validity */
extern void T505f241(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_32_constant */
extern void T505f305(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_8_constant */
extern void T505f304(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0d_error */
extern void T53f414(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0d */
extern T0* T1418c959(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0d_error */
extern void T36f413(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_manifest_string */
extern void T91f277(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_manifest_string_validity */
extern void T91f363(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_string_validity */
extern void T91f422(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_32_constant */
extern void T91f469(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_constant */
extern void T91f498(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_manifest_string_area_dynamic_type */
extern void T91f505(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_8_constant */
extern void T91f468(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_manifest_string */
extern void T84f996(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_manifest_string */
extern void T84f1004(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_string */
extern void T84f1008(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function */
extern void T1235f13(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_external_function */
extern void T1234f14(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_external_feature_validity */
extern void T1234f21(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_feature_validity */
extern void T1234f22(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbu1a_error */
extern void T53f489(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbu1a */
extern T0* T1418c1034(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T53f158(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbu1a_error */
extern void T36f488(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T36f157(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.error_handler */
extern T0* T1234f9(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.set_fatal_error */
extern void T1234f48(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.unknown_builtin_reported */
extern T1 T1234f8(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_builtin_code */
extern void T2152f117(GE_context* ac, T0* C, T8 a1, T8 a2);
/* ET_EXTERNAL_FUNCTION.set_builtin_code */
extern void T344f109(GE_context* ac, T0* C, T8 a1, T8 a2);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_real_n_feature_validity */
extern void T1234f47(GE_context* ac, T0* C, T0* a1, T8 a2);
/* ET_BUILTIN_FEATURE_CHECKER.check_expected_builtin_feature_validity */
extern void T1234f50(GE_context* ac, T0* C, T0* a1, T8 a2, T0* a3);
/* ET_BUILTIN_FEATURE_CHECKER.check_signature_validity */
extern void T1234f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvkbs0a_error */
extern void T53f490(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkbs0a */
extern T0* T1418c1035(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T53f159(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs0a_error */
extern void T36f489(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T36f158(GE_context* ac, T0* C, T0* a1);
/* [attached] ARRAY [[attached] ET_TYPE].count */
extern T6 T348f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].found_item */
extern T0* T2370f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].item_storage_item */
extern T0* T2370f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].found */
extern T1 T2370f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].search */
extern void T2370f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].search_position */
extern void T2370f40(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].hash_position */
extern T6 T2370f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].key_storage_item */
extern T0* T2370f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].clashes_item */
extern T6 T2370f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].slots_item */
extern T6 T2370f26(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.truncated_to_real_feature_name */
extern T0* T94f1410(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_64_feature_name */
extern T0* T94f1408(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_feature_name */
extern T0* T94f1406(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_double_feature_name */
extern T0* T94f1367(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.quotient_feature_name */
extern T0* T94f1363(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.product_feature_name */
extern T0* T94f1361(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.power_feature_name */
extern T0* T94f1359(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.plus_feature_name */
extern T0* T94f947(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.out_feature_name */
extern T0* T94f945(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.opposite_feature_name */
extern T0* T94f1356(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.minus_feature_name */
extern T0* T94f1354(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_positive_infinity_feature_name */
extern T0* T94f1396(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_negative_infinity_feature_name */
extern T0* T94f1394(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_nan_feature_name */
extern T0* T94f1392(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_less_feature_name */
extern T0* T94f1352(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identity_feature_name */
extern T0* T94f1346(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_64_feature_name */
extern T0* T94f1388(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_32_feature_name */
extern T0* T94f1386(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_64_feature_name */
extern T0* T94f1384(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.register_builtin_feature */
extern void T1234f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T8 a4, T0* a5);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].force_last */
extern void T2370f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].key_storage_put */
extern void T2370f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].slots_put */
extern void T2370f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].clashes_put */
extern void T2370f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].resize */
extern void T2370f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].clashes_resize */
extern void T2370f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].special_integer_ */
extern T0* T2370f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].key_storage_resize */
extern void T2370f49(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].item_storage_resize */
extern void T2370f48(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].aliased_resized_area */
extern T0* T2563f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].aliased_resized_area */
extern T0* T2559f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].slots_resize */
extern void T2370f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].new_modulus */
extern T6 T2370f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].new_capacity */
extern T6 T2370f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].item_storage_put */
extern void T2370f41(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].force */
extern void T2563f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].fill_with */
extern void T2559f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].extend */
extern void T2559f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].unset_found_item */
extern void T2370f39(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_32_feature_name */
extern T0* T94f1382(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].force_last */
extern void T1950f43(GE_context* ac, T0* C, T0* a1, T8 a2);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].key_storage_put */
extern void T1950f49(GE_context* ac, T0* C, T8 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].slots_put */
extern void T1950f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].clashes_put */
extern void T1950f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].slots_item */
extern T6 T1950f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].hash_position */
extern T6 T1950f23(GE_context* ac, T0* C, T8 a1);
/* NATURAL_8.hash_code */
extern T6 T8f20(GE_context* ac, T8* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].resize */
extern void T1950f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].clashes_resize */
extern void T1950f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].special_integer_ */
extern T0* T1950f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].key_storage_resize */
extern void T1950f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].item_storage_resize */
extern void T1950f51(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].aliased_resized_area */
extern T0* T2369f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].aliased_resized_area */
extern T0* T2371f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].key_storage_item */
extern T8 T1950f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].clashes_item */
extern T6 T1950f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].slots_resize */
extern void T1950f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].new_capacity */
extern T6 T1950f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].item_storage_put */
extern void T1950f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].force */
extern void T2369f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].fill_with */
extern void T2371f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].extend */
extern void T2371f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].search_position */
extern void T1950f44(GE_context* ac, T0* C, T8 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].set_key_equality_tester */
extern void T2370f35(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.feature_name_tester */
extern T0* T1234f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_map */
extern T0* T2370c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_with_equality_testers */
extern void T2370f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_sparse_container */
extern void T2370f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].set_internal_cursor */
extern void T2370f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].new_cursor */
extern T0* T2370f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make */
extern T0* T2564c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_slots */
extern void T2370f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_clashes */
extern void T2370f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_key_storage */
extern void T2370f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_item_storage */
extern void T2370f51(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].make */
extern T0* T2563f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].make_empty */
extern T0* T2559c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].default_create */
extern T0* T2563c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].found_item */
extern T0* T1950f20(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].item_storage_item */
extern T0* T1950f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].found */
extern T1 T1950f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].search */
extern void T1950f42(GE_context* ac, T0* C, T8 a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_real_n_ref_feature_validity */
extern void T1234f46(GE_context* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_TOKEN_CONSTANTS.set_item_feature_name */
extern T0* T94f913(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.positive_infinity_feature_name */
extern T0* T94f1379(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.negative_infinity_feature_name */
extern T0* T94f1377(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.nan_feature_name */
extern T0* T94f1375(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_ref_class_name */
extern T0* T94f846(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_ref_class_name */
extern T0* T94f841(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_ref_class_name */
extern T0* T94f838(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_ref_class_name */
extern T0* T94f835(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_ref_class_name */
extern T0* T94f830(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_integer_n_feature_validity */
extern void T1234f45(GE_context* ac, T0* C, T0* a1, T8 a2);
/* ET_TOKEN_CONSTANTS.to_real_64_feature_name */
extern T0* T94f1373(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_real_32_feature_name */
extern T0* T94f1371(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_real_feature_name */
extern T0* T94f1369(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_character_32_feature_name */
extern T0* T94f921(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_character_8_feature_name */
extern T0* T94f919(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_remainder_feature_name */
extern T0* T94f1350(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_quotient_feature_name */
extern T0* T94f1348(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_xor_feature_name */
extern T0* T94f1344(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_right_feature_name */
extern T0* T94f1342(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_left_feature_name */
extern T0* T94f1340(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_or_feature_name */
extern T0* T94f1338(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_not_feature_name */
extern T0* T94f1336(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_and_feature_name */
extern T0* T94f1334(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_64_feature_name */
extern T0* T94f1332(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_32_feature_name */
extern T0* T94f1330(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_16_feature_name */
extern T0* T94f1328(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_8_feature_name */
extern T0* T94f1326(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_64_feature_name */
extern T0* T94f1324(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_32_feature_name */
extern T0* T94f1322(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_16_feature_name */
extern T0* T94f1320(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_8_feature_name */
extern T0* T94f1318(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_integer_n_ref_feature_validity */
extern void T1234f44(GE_context* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_TOKEN_CONSTANTS.integer_8_ref_class_name */
extern T0* T94f827(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_tuple_feature_validity */
extern void T1234f43(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_object_comparison_feature_name */
extern T0* T94f1315(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_reference_feature_name */
extern T0* T94f96(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_real_64_feature_name */
extern T0* T94f1312(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_real_32_feature_name */
extern T0* T94f1310(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_pointer_feature_name */
extern T0* T94f1308(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_64_feature_name */
extern T0* T94f1306(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_32_feature_name */
extern T0* T94f1304(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_16_feature_name */
extern T0* T94f1302(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_8_feature_name */
extern T0* T94f1300(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_64_feature_name */
extern T0* T94f1298(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_32_feature_name */
extern T0* T94f1296(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_16_feature_name */
extern T0* T94f1294(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_8_feature_name */
extern T0* T94f1292(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_character_32_feature_name */
extern T0* T94f1290(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_character_8_feature_name */
extern T0* T94f1288(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_boolean_feature_name */
extern T0* T94f1286(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_item_feature_name */
extern T0* T94f98(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_item_feature_name */
extern T0* T94f1283(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_item_feature_name */
extern T0* T94f1281(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.object_comparison_feature_name */
extern T0* T94f1279(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_item_feature_name */
extern T0* T94f1277(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_item_feature_name */
extern T0* T94f1275(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_item_feature_name */
extern T0* T94f1273(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_item_feature_name */
extern T0* T94f1271(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.item_code_feature_name */
extern T0* T94f1269(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_item_feature_name */
extern T0* T94f1267(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_item_feature_name */
extern T0* T94f1265(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_item_feature_name */
extern T0* T94f1263(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_item_feature_name */
extern T0* T94f1261(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_item_feature_name */
extern T0* T94f1258(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_item_feature_name */
extern T0* T94f1256(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_item_feature_name */
extern T0* T94f1254(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_function_feature_validity */
extern void T1234f42(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.detachable_separate_formal_parameter_type */
extern T0* T1234f11(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.fast_item_feature_name */
extern T0* T94f1252(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_procedure_feature_validity */
extern void T1234f41(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.fast_call_feature_name */
extern T0* T94f1250(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_platform_feature_validity */
extern void T1234f40(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_bytes_feature_name */
extern T0* T94f1248(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_bytes_feature_name */
extern T0* T94f1246(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_bytes_feature_name */
extern T0* T94f1244(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_windows_feature_name */
extern T0* T94f1242(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_vxworks_feature_name */
extern T0* T94f1240(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_vms_feature_name */
extern T0* T94f1238(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_unix_feature_name */
extern T0* T94f1236(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_thread_capable_feature_name */
extern T0* T94f1234(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_scoop_capable_feature_name */
extern T0* T94f1232(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_mac_feature_name */
extern T0* T94f1230(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_dotnet_feature_name */
extern T0* T94f1228(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_64_bits_feature_name */
extern T0* T94f1226(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_bytes_feature_name */
extern T0* T94f1224(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.double_bytes_feature_name */
extern T0* T94f1222(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_bytes_feature_name */
extern T0* T94f1220(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_bytes_feature_name */
extern T0* T94f1218(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.platform_class_name */
extern T0* T94f826(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_runtime_feature_validity */
extern void T1234f39(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.unmark_object_feature_name */
extern T0* T94f1215(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unlock_marking_feature_name */
extern T0* T94f1213(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_reference_field_at_feature_name */
extern T0* T94f1212(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_reference_field_feature_name */
extern T0* T94f1211(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_64_field_at_feature_name */
extern T0* T94f1209(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_64_field_feature_name */
extern T0* T94f1207(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_32_field_at_feature_name */
extern T0* T94f1205(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_32_field_feature_name */
extern T0* T94f1203(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_pre_ecma_mapping_feature_name */
extern T0* T94f1201(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_pointer_field_at_feature_name */
extern T0* T94f1199(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_pointer_field_feature_name */
extern T0* T94f1197(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_64_field_at_feature_name */
extern T0* T94f1195(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_64_field_feature_name */
extern T0* T94f1193(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_32_field_at_feature_name */
extern T0* T94f1191(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_32_field_feature_name */
extern T0* T94f1189(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_16_field_at_feature_name */
extern T0* T94f1187(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_16_field_feature_name */
extern T0* T94f1185(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_8_field_at_feature_name */
extern T0* T94f1183(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_8_field_feature_name */
extern T0* T94f1181(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_64_field_at_feature_name */
extern T0* T94f1179(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_64_field_feature_name */
extern T0* T94f1177(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_32_field_at_feature_name */
extern T0* T94f1175(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_32_field_feature_name */
extern T0* T94f1173(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_16_field_at_feature_name */
extern T0* T94f1171(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_16_field_feature_name */
extern T0* T94f1169(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_8_field_at_feature_name */
extern T0* T94f1167(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_8_field_feature_name */
extern T0* T94f1165(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_32_field_at_feature_name */
extern T0* T94f1163(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_32_field_feature_name */
extern T0* T94f1161(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_8_field_at_feature_name */
extern T0* T94f1159(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_8_field_feature_name */
extern T0* T94f1157(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_boolean_field_at_feature_name */
extern T0* T94f1155(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_boolean_field_feature_name */
extern T0* T94f1153(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.mark_object_feature_name */
extern T0* T94f1151(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.lock_marking_feature_name */
extern T0* T94f1149(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_id_from_name_feature_name */
extern T0* T94f1147(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_conforms_to_feature_name */
extern T0* T94f1145(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.storable_version_of_type_feature_name */
extern T0* T94f1143(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_field_at_offset_feature_name */
extern T0* T94f1142(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_field_at_feature_name */
extern T0* T94f1141(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_field_feature_name */
extern T0* T94f1140(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_field_at_feature_name */
extern T0* T94f1138(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_field_feature_name */
extern T0* T94f1136(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_field_at_feature_name */
extern T0* T94f1134(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_field_feature_name */
extern T0* T94f1132(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raw_reference_field_at_offset_feature_name */
extern T0* T94f1130(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raw_reference_field_at_feature_name */
extern T0* T94f1128(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pre_ecma_mapping_status_feature_name */
extern T0* T94f1126(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_field_at_feature_name */
extern T0* T94f1124(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_field_feature_name */
extern T0* T94f1122(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.persistent_field_count_of_type_feature_name */
extern T0* T94f1120(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.once_objects_feature_name */
extern T0* T94f1118(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.object_size_feature_name */
extern T0* T94f1116(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_type_instance_of_feature_name */
extern T0* T94f1115(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_tuple_instance_of_feature_name */
extern T0* T94f1114(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_special_of_reference_instance_of_feature_name */
extern T0* T94f1113(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_instance_of_feature_name */
extern T0* T94f1112(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_field_at_feature_name */
extern T0* T94f1110(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_field_feature_name */
extern T0* T94f1108(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_field_at_feature_name */
extern T0* T94f1106(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_field_feature_name */
extern T0* T94f1104(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_field_at_feature_name */
extern T0* T94f1102(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_field_feature_name */
extern T0* T94f1100(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_field_at_feature_name */
extern T0* T94f1098(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_field_feature_name */
extern T0* T94f1096(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_tuple_type_feature_name */
extern T0* T94f1094(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_tuple_feature_name */
extern T0* T94f1092(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_type_feature_name */
extern T0* T94f1090(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_or_basic_type_feature_name */
extern T0* T94f1088(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_feature_name */
extern T0* T94f1086(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_expanded_feature_name */
extern T0* T94f1084(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_copy_semantics_item_feature_name */
extern T0* T94f1082(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_feature_name */
extern T0* T94f1080(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_object_marked_feature_name */
extern T0* T94f1078(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_field_transient_of_type_feature_name */
extern T0* T94f1076(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_field_expanded_of_type_feature_name */
extern T0* T94f1074(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_expanded_feature_name */
extern T0* T94f891(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_copy_semantics_field_feature_name */
extern T0* T94f1071(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_attached_type_feature_name */
extern T0* T94f1069(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_field_at_feature_name */
extern T0* T94f1067(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_field_feature_name */
extern T0* T94f1065(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_field_at_feature_name */
extern T0* T94f1063(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_field_feature_name */
extern T0* T94f1061(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_field_at_feature_name */
extern T0* T94f1059(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_field_feature_name */
extern T0* T94f1057(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_field_at_feature_name */
extern T0* T94f1055(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_field_feature_name */
extern T0* T94f1053(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.in_assertion_feature_name */
extern T0* T94f1051(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_count_feature_name */
extern T0* T94f883(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generator_of_type_feature_name */
extern T0* T94f1048(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generating_type_of_type_feature_name */
extern T0* T94f1046(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_type_of_type_feature_name */
extern T0* T94f1044(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_static_type_of_type_feature_name */
extern T0* T94f1042(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_offset_of_type_feature_name */
extern T0* T94f1040(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_name_of_type_feature_name */
extern T0* T94f1038(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_count_of_type_feature_name */
extern T0* T94f1036(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_gen_param_id_feature_name */
extern T0* T94f1034(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dynamic_type_at_offset_feature_name */
extern T0* T94f1032(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dynamic_type_feature_name */
extern T0* T94f1030(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_type_feature_name */
extern T0* T94f1028(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.compiler_version_feature_name */
extern T0* T94f1026(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.check_assert_feature_name */
extern T0* T94f1024(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_field_at_feature_name */
extern T0* T94f1022(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_field_feature_name */
extern T0* T94f1020(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_field_at_feature_name */
extern T0* T94f1018(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_field_feature_name */
extern T0* T94f1016(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_field_at_feature_name */
extern T0* T94f1014(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_field_feature_name */
extern T0* T94f1012(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.attached_type_feature_name */
extern T0* T94f1010(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ise_runtime_class_name */
extern T0* T94f825(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_identified_routines_feature_validity */
extern void T1234f38(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.eif_object_id_free_feature_name */
extern T0* T94f1008(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_object_id_feature_name */
extern T0* T94f1007(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_id_object_feature_name */
extern T0* T94f1006(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identified_routines_class_name */
extern T0* T94f824(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_exception_manager_feature_validity */
extern void T1234f37(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.developer_raise_feature_name */
extern T0* T94f1004(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_factory_feature_validity */
extern void T1234f36(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.exception_manager_feature_name */
extern T0* T94f1001(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_factory_class_name */
extern T0* T94f823(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_feature_validity */
extern void T1234f35(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_is_ignored_feature_name */
extern T0* T94f998(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raise_feature_name */
extern T0* T94f996(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ignore_feature_name */
extern T0* T94f994(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.catch_feature_name */
extern T0* T94f992(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_of_code_feature_name */
extern T0* T94f990(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_raisable_feature_name */
extern T0* T94f987(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_ignored_feature_name */
extern T0* T94f985(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_ignorable_feature_name */
extern T0* T94f983(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_caught_feature_name */
extern T0* T94f981(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_from_code_feature_name */
extern T0* T94f979(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_memory_feature_validity */
extern void T1234f34(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.free_feature_name */
extern T0* T94f976(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.find_referers_feature_name */
extern T0* T94f974(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.memory_class_name */
extern T0* T94f822(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_com_failure_feature_validity */
extern void T1234f33(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.cwin_local_free_feature_name */
extern T0* T94f971(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.cwin_error_text_feature_name */
extern T0* T94f969(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_size_feature_name */
extern T0* T94f967(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_facility_feature_name */
extern T0* T94f965(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_code_feature_name */
extern T0* T94f963(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_feature_name */
extern T0* T94f961(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.c_strlen_feature_name */
extern T0* T94f959(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.com_failure_class_name */
extern T0* T94f821(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_arguments_32_feature_validity */
extern void T1234f32(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.i_th_argument_string_feature_name */
extern T0* T94f956(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.i_th_argument_pointer_feature_name */
extern T0* T94f954(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.argument_count_feature_name */
extern T0* T94f952(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.arguments_32_class_name */
extern T0* T94f820(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_feature_validity */
extern void T1234f31(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.to_integer_32_feature_name */
extern T0* T94f949(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_default_pointer_feature_name */
extern T0* T94f943(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.hash_code_feature_name */
extern T0* T94f941(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_ref_feature_validity */
extern void T1234f30(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.pointer_ref_class_name */
extern T0* T94f819(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_feature_validity */
extern void T1234f29(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.negated_feature_name */
extern T0* T94f937(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implication_feature_name */
extern T0* T94f935(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_semistrict_feature_name */
extern T0* T94f933(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_exclusive_feature_name */
extern T0* T94f931(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_feature_name */
extern T0* T94f929(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conjuncted_semistrict_feature_name */
extern T0* T94f927(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conjuncted_feature_name */
extern T0* T94f925(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_ref_feature_validity */
extern void T1234f28(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.boolean_ref_class_name */
extern T0* T94f818(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_character_n_feature_validity */
extern void T1234f27(GE_context* ac, T0* C, T0* a1, T8 a2);
/* ET_TOKEN_CONSTANTS.natural_32_code_feature_name */
extern T0* T94f917(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.code_feature_name */
extern T0* T94f915(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_character_n_ref_feature_validity */
extern void T1234f26(GE_context* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_BUILTIN_FEATURE_CHECKER.current_universe */
extern T0* T1234f7(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_special_feature_validity */
extern void T1234f25(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_count_feature_name */
extern T0* T94f911(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_feature_name */
extern T0* T94f95(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.make_empty_feature_name */
extern T0* T94f908(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.extend_feature_name */
extern T0* T94f99(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.element_size_feature_name */
extern T0* T94f904(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.base_address_feature_name */
extern T0* T94f900(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.aliased_resized_area_feature_name */
extern T0* T94f898(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_type_feature_validity */
extern void T1234f24(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.type_id_feature_name */
extern T0* T94f895(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.runtime_name_feature_name */
extern T0* T94f893(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_deferred_feature_name */
extern T0* T94f889(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_attached_feature_name */
extern T0* T94f887(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.has_default_feature_name */
extern T0* T94f885(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_type_feature_name */
extern T0* T94f881(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_feature_name */
extern T0* T94f879(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_any_feature_validity */
extern void T1234f23(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.standard_copy_feature_name */
extern T0* T94f876(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.twin_feature_name */
extern T0* T94f873(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.tagged_out_feature_name */
extern T0* T94f871(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.standard_twin_feature_name */
extern T0* T94f869(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.standard_is_equal_feature_name */
extern T0* T94f867(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.same_type_feature_name */
extern T0* T94f865(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_deep_equal_feature_name */
extern T0* T94f862(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generator_feature_name */
extern T0* T94f860(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generating_type_feature_name */
extern T0* T94f858(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.deep_twin_feature_name */
extern T0* T94f856(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conforms_to_feature_name */
extern T0* T94f854(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.string_ */
extern T0* T1234f6(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.process_external_function */
extern void T505f84(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_validity */
extern void T505f91(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_result_supplier */
extern void T505f104(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_result_supplier */
extern void T1250f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_result_declaration */
extern void T505f103(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_query_type_validity */
extern void T505f102(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function */
extern void T91f137(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T91f148(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_warning_message */
extern void T53f354(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_warning_message */
extern void T36f353(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_string_type_alive */
extern void T91f163(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.result_type_set */
extern T0* T91f65(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_function_validity */
extern void T91f162(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_generic_parameter_type */
extern void T91f200(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_default */
extern void T91f199(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_reference_item */
extern void T91f198(GE_context* ac, T0* C, T0* a1);
extern T1 T91f198ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_item */
extern void T91f197(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_type_conforms_to */
extern void T91f196(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_type_conforms_to_feature */
extern void T80f101(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_storable_version_of_type */
extern void T91f195(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field_at_offset */
extern void T91f194(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field_at */
extern void T91f193(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field */
extern void T91f192(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_type_instance_of */
extern void T91f191(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_tuple_instance_of */
extern void T91f190(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_special_of_reference_instance_of */
extern void T91f189(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_instance_of */
extern void T91f188(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_object_id */
extern void T91f187(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_id_object */
extern void T91f186(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function_item */
extern void T91f185(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_factory_exception_manager */
extern void T91f184(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_type_of_code */
extern void T91f183(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.argument_type_set */
extern T0* T91f71(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_last_exception */
extern void T91f182(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_raisable */
extern void T91f181(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignored */
extern void T91f180(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignorable */
extern void T91f179(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_caught */
extern void T91f178(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_exception_from_code */
extern void T91f177(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function */
extern void T91f176(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_twin */
extern void T91f175(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_builtin_unknown */
extern T1 T344f78(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_builtin */
extern T1 T344f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T91f148p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_supplier */
extern void T91f166(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_declaration */
extern void T91f165(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_type_validity */
extern void T91f164(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_function */
extern void T84f1043(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function */
extern void T84f1092(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_routine */
extern void T84f1145(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.flush_to_cpp_file */
extern void T84f1162(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_external_dllwin_body */
extern void T84f1161(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.print_external_cpp_body */
extern void T84f1160(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].item */
extern T0* T178f15(GE_context* ac, T0* C, T6 a1);
/* ST_SPLITTER.make_with_separators */
extern T0* T2012c11(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.print_external_c_struct_body */
extern void T84f1159(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_external_c_body */
extern void T84f1158(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T1 a7);
/* ET_C_GENERATOR.print_external_c_prototype */
extern void T84f1157(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_C_GENERATOR.print_external_builtin_body */
extern void T84f1156(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_body */
extern void T84f1166(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_tuple_procedure_body */
extern void T84f1204(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_reference_body */
extern void T84f1263(GE_context* ac, T0* C, T0* a1);
extern T1 T84f1263ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_64_body */
extern void T84f1262(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_basic_expanded_item_body */
extern void T84f1265(GE_context* ac, T0* C, T0* a1);
extern T1 T84f1265ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_32_body */
extern void T84f1261(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_pointer_body */
extern void T84f1260(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_64_body */
extern void T84f1259(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_32_body */
extern void T84f1258(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_16_body */
extern void T84f1257(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_8_body */
extern void T84f1256(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_64_body */
extern void T84f1255(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_32_body */
extern void T84f1254(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_16_body */
extern void T84f1253(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_8_body */
extern void T84f1252(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_32_body */
extern void T84f1251(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_8_body */
extern void T84f1250(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_boolean_body */
extern void T84f1249(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_procedure_body */
extern void T84f1203(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_set_count_body */
extern void T84f1248(GE_context* ac, T0* C, T0* a1);
extern T1 T84f1248ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_special_extend_body */
extern void T84f1247(GE_context* ac, T0* C, T0* a1);
extern T1 T84f1247ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_external_builtin_real_n_ref_procedure_body */
extern void T84f1202(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_procedure_body */
extern void T84f1201(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_ref_procedure_body */
extern void T84f1200(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_memory_procedure_body */
extern void T84f1199(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_runtime_procedure_body */
extern void T84f1198(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pre_ecma_mapping_body */
extern void T84f1246(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_exception_manager_procedure_body */
extern void T84f1197(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_ref_procedure_body */
extern void T84f1196(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_routines_procedure_body */
extern void T84f1195(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_procedure_body */
extern void T84f1194(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_set_is_ignored_body */
extern void T84f1245(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_raise_body */
extern void T84f1244(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_ignore_body */
extern void T84f1243(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_catch_body */
extern void T84f1242(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_com_failure_procedure_body */
extern void T84f1193(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_ref_procedure_body */
extern void T84f1192(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_ref_procedure_body */
extern void T84f1191(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_procedure_body */
extern void T84f1190(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_body */
extern void T84f1165(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_type_function_body */
extern void T84f1189(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_type_body */
extern void T84f1241(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_semicolon_newline */
extern void T84f1207(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_indentation_assign_to_result */
extern void T84f1206(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_external_builtin_tuple_function_body */
extern void T84f1188(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern void T84f1240(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern T0* T84f1240ac1(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T84f1240ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_real_64_item_body */
extern void T84f1239(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_basic_expanded_item_body */
extern void T84f1264(GE_context* ac, T0* C, T0* a1);
extern T1 T84f1264ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_real_32_item_body */
extern void T84f1238(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_pointer_item_body */
extern void T84f1237(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_64_item_body */
extern void T84f1236(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_32_item_body */
extern void T84f1235(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_16_item_body */
extern void T84f1234(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_8_item_body */
extern void T84f1233(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_item_code_body */
extern void T84f1232(GE_context* ac, T0* C, T0* a1);
extern T1 T84f1232ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_integer_64_item_body */
extern void T84f1231(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_32_item_body */
extern void T84f1230(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_16_item_body */
extern void T84f1229(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_8_item_body */
extern void T84f1228(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_32_item_body */
extern void T84f1227(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_8_item_body */
extern void T84f1226(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_boolean_item_body */
extern void T84f1225(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_function_body */
extern void T84f1187(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_aliased_resized_area_body */
extern void T84f1224(GE_context* ac, T0* C, T0* a1);
extern T1 T84f1224ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_external_builtin_real_n_ref_function_body */
extern void T84f1186(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_real_n_function_body */
extern void T84f1185(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_real_n_out_body */
extern void T84f1223(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_ref_function_body */
extern void T84f1184(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_function_body */
extern void T84f1183(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_out_body */
extern void T84f1222(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_platform_function_body */
extern void T84f1182(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_memory_function_body */
extern void T84f1181(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_runtime_function_body */
extern void T84f1180(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pre_ecma_mapping_status_body */
extern void T84f1221(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_in_assertion_body */
extern void T84f1220(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_ref_function_body */
extern void T84f1179(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_function_body */
extern void T84f1178(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_routines_function_body */
extern void T84f1177(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_function_body */
extern void T84f1176(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_factory_function_body */
extern void T84f1175(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_factory_exception_manager_body */
extern void T84f1219(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_function_body */
extern void T84f1174(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_type_of_code_body */
extern void T84f1218(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_last_exception_body */
extern void T84f1217(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_raisable_body */
extern void T84f1216(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_ignored_body */
extern void T84f1215(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_ignorable_body */
extern void T84f1214(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_caught_body */
extern void T84f1213(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_exception_from_code_body */
extern void T84f1212(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_com_failure_function_body */
extern void T84f1173(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_ref_function_body */
extern void T84f1172(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_function_body */
extern void T84f1171(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_ref_function_body */
extern void T84f1170(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_function_body */
extern void T84f1169(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_arguments_32_function_body */
extern void T84f1168(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_function_body */
extern void T84f1167(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body */
extern void T84f1211(GE_context* ac, T0* C, T0* a1);
extern T1 T84f1211ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_tagged_out_body */
extern void T84f1210(GE_context* ac, T0* C, T0* a1);
extern T1 T84f1210ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body */
extern void T84f1209(GE_context* ac, T0* C, T0* a1);
extern T1 T84f1209ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_is_deep_equal_body */
extern void T84f1208(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_conforms_to_body */
extern void T84f1205(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_function */
extern T1 T2152f75(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_builtin */
extern T1 T2152f68(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_external_c_inline_body */
extern void T84f1155(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_ROUTINES.as_lower */
extern T2 T2577f1(GE_context* ac, T0* C, T2 a1);
/* ET_C_GENERATOR.character_ */
extern T0* T84f488(GE_context* ac, T0* C);
/* KL_CHARACTER_ROUTINES.default_create */
extern T0* T2577c2(GE_context* ac);
/* UC_UTF8_STRING.has_substring */
extern T1 T1557f65(GE_context* ac, T0* C, T0* a1);
/* STRING_8.has_substring */
extern T1 T17f44(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_c_includes */
extern void T84f1154(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_header_filename */
extern void T84f1164(GE_context* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring_count */
extern T6 T410f301(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_feature_info_message_call */
extern void T84f1153(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_routine_name */
extern void T84f1152(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T84f1152ot1(T0* a1, T0** a2);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_tuple_type */
extern void T1806f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_tuple_type_validity */
extern void T1806f14(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.set_fatal_error */
extern void T1806f15(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.has_flattening_error */
extern T1 T672f48(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.features_flattened */
extern T1 T672f47(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_tuple_type */
extern void T1805f8(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_actual_parameters_validity */
extern void T1805f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_tuple_type */
extern void T1804f4(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_tuple_type_validity */
extern void T1804f6(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.set_fatal_error */
extern void T1804f7(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.has_ancestors_error */
extern T1 T672f43(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.ancestors_built */
extern T1 T672f42(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_tuple_type */
extern void T1803f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_tuple_type_validity */
extern void T1803f14(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_syntax_error */
extern T1 T672f46(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_parsed */
extern T1 T672f45(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.set_fatal_error */
extern void T1803f15(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_preparsed */
extern T1 T672f36(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_tuple_type */
extern void T1240f8(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_tuple_type */
extern void T1240f10(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1239f11(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_actual_parameters_validity */
extern void T1239f13(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_tuple_type */
extern void T1238f13(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_tuple_type */
extern void T1233f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_tuple_type_constraint */
extern void T1233f23(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_tuple_type */
extern void T1232f14(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_tuple_type_validity */
extern void T1232f21(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_tuple_type */
extern void T1231f18(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_tuple_actual_parameters_unfolded */
extern void T1231f21(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_vtct_validity */
extern void T1231f20(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1230f11(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_actual_parameters_to_sorter */
extern void T1230f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_tuple_type */
extern void T1229f8(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_tuple_type */
extern void T1229f10(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_tuple_type */
extern void T1228f9(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_actual_parameters */
extern void T1228f11(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.reset_fatal_error */
extern void T1228f13(GE_context* ac, T0* C, T1 a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_tuple_type */
extern void T1217f25(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_tuple_type_constraint */
extern void T1217f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_tuple_type */
extern void T1216f13(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_tuple_type_validity */
extern void T1216f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvhpr5a_error */
extern void T53f525(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr5a */
extern T0* T1418c1069(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T53f174(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr5a_error */
extern void T36f524(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T36f173(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.error_handler */
extern T0* T1216f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.set_fatal_error */
extern void T1216f12(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.process_tuple_type */
extern void T510f23(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_tuple_type_validity */
extern void T510f26(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.reset_fatal_error */
extern void T510f28(GE_context* ac, T0* C, T1 a1);
/* ET_PRECURSOR_CHECKER.process_extended_attribute */
extern void T1235f14(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_extended_attribute */
extern void T1234f15(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_extended_attribute */
extern void T505f85(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_extended_attribute_validity */
extern void T505f92(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0a_error */
extern void T53f344(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vucr0a */
extern T0* T1418c896(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vucr0a_error */
extern void T36f343(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vevi0e_error */
extern void T53f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0e */
extern T0* T1418c895(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0e_error */
extern void T36f342(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_COMPOUND.has_non_null_instruction */
extern T1 T456f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_extended_attribute */
extern void T91f138(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_extended_attribute_validity */
extern void T91f149(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_extended_attribute */
extern void T84f1044(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_extended_attribute */
extern void T84f1093(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute */
extern void T84f1096(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_wrapper */
extern void T84f1146(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_name */
extern void T397f32(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_constant_attribute */
extern void T1235f15(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_constant_attribute */
extern void T1234f16(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_constant_attribute */
extern void T505f86(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_constant_attribute_validity */
extern void T505f93(GE_context* ac, T0* C, T0* a1);
extern T1 T505f93ot1(T0* a1, T0** a2);
extern T1 T505f93ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vqmc5a_error */
extern void T53f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc5a */
extern T0* T1418c902(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T53f99(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc5a_error */
extern void T36f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T36f98(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc4a_error */
extern void T53f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc4a */
extern T0* T1418c901(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T53f98(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc4a_error */
extern void T36f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T36f97(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_type */
extern void T2053f48(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_type */
extern void T2052f48(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3a_error */
extern void T53f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc3a */
extern T0* T1418c900(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T53f97(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc3a_error */
extern void T36f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T36f96(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3b_error */
extern void T53f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vqmc3b */
extern T0* T1418c899(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vqmc3b_error */
extern void T36f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vqmc2a_error */
extern void T53f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc2a */
extern T0* T1418c898(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T53f96(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc2a_error */
extern void T36f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T36f95(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc1a_error */
extern void T53f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc1a */
extern T0* T1418c897(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T53f95(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc1a_error */
extern void T36f344(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T36f94(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_constant_attribute */
extern void T91f139(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_constant_attribute_validity */
extern void T91f150(GE_context* ac, T0* C, T0* a1);
extern T1 T91f150ot1(T0* a1, T0** a2);
extern T1 T91f150ot2(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_constant_attribute */
extern void T84f1045(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_constant_attribute */
extern void T84f1094(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unique_attribute */
extern void T1235f16(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_unique_attribute */
extern void T1234f17(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unique_attribute */
extern void T505f87(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unique_attribute_validity */
extern void T505f94(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqui0a_error */
extern void T53f351(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqui0a */
extern T0* T1418c903(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqui_error */
extern T1 T53f100(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqui0a_error */
extern void T36f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqui_error */
extern T1 T36f99(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unique_attribute */
extern void T91f140(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unique_attribute_validity */
extern void T91f151(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_unique_attribute */
extern void T84f1046(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unique_attribute */
extern void T84f1095(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_attribute */
extern void T1235f17(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_attribute */
extern void T1234f18(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_attribute */
extern void T505f88(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_attribute_validity */
extern void T505f95(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_attribute */
extern void T91f141(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_attribute_validity */
extern void T91f152(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_attribute */
extern void T84f1047(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_current */
extern void T1806f6(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_current */
extern void T1805f9(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_current */
extern void T1804f5(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_current */
extern void T1803f6(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_current */
extern void T1240f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1239f12(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_current */
extern void T1238f15(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_current */
extern void T1233f16(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_current */
extern void T1232f16(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_current */
extern void T1231f19(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1230f12(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_current */
extern void T1229f9(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_current */
extern void T1228f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_current */
extern void T1217f20(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_type */
extern void T1217f27(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_like_type_constraint */
extern void T1217f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3a_error */
extern void T53f532(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3a */
extern T0* T1418c1075(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3a_error */
extern void T36f531(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_like_current */
extern void T1216f15(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_type */
extern void T1216f21(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_like_type_validity */
extern void T1216f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3a_error */
extern void T53f526(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3a */
extern T0* T1418c1070(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T53f175(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr3a_error */
extern void T36f525(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T36f174(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_current */
extern void T510f22(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_current_validity */
extern void T510f25(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter_type */
extern void T1806f10(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter_type */
extern void T1805f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter_type */
extern void T1804f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter_type */
extern void T1803f10(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter_type */
extern void T1240f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1239f16(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter_type */
extern void T1238f16(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter_type */
extern void T1233f20(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter_type */
extern void T1232f17(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter_type */
extern void T1231f26(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1230f16(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter_type */
extern void T1229f12(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter_type */
extern void T1228f15(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter_type */
extern void T1217f24(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameter_type_constraint */
extern void T1217f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3g_error */
extern void T53f531(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtct0b */
extern T0* T1418c1071(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3g_error */
extern void T36f530(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3f_error */
extern void T53f530(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3f */
extern T0* T1418c1074(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3f_error */
extern void T36f529(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3d_error */
extern void T53f529(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3d_error */
extern void T36f528(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3c_error */
extern void T53f528(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3c */
extern T0* T1418c1073(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3c_error */
extern void T36f527(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].force_relation */
extern void T1892f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].put_indexed_relation */
extern void T1892f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].force */
extern void T1892f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].put */
extern void T1892f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].put_new */
extern void T2303f49(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].key_storage_put */
extern void T2303f57(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].item_storage_put */
extern void T2303f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].slots_put */
extern void T2303f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].clashes_put */
extern void T2303f52(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].slots_item */
extern T6 T2303f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].hash_position */
extern T6 T2303f23(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.hash_code */
extern T6 T1712f73(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.hash_code */
extern T6 T1243f72(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].clashes_item */
extern T6 T2303f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].resize */
extern void T2303f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].clashes_resize */
extern void T2303f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].special_integer_ */
extern T0* T2303f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].key_storage_resize */
extern void T2303f54(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T2305f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T2304f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].item_storage_resize */
extern void T2303f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].key_storage_item */
extern T0* T2303f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].slots_resize */
extern void T2303f50(GE_context* ac, T0* C, T6 a1);
/* attached DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].resize */
extern void T1894f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].capacity */
extern T6 T1892f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].index_of */
extern T6 T1892f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].found_item */
extern T6 T2303f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].item_storage_item */
extern T6 T2303f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].found */
extern T1 T2303f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].search */
extern void T2303f58(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].search_position */
extern void T2303f59(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3b_error */
extern void T53f527(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3b */
extern T0* T1418c1072(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3b_error */
extern void T36f526(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_CHECKER1.process_formal_parameter_type */
extern void T1216f16(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter_type */
extern void T510f31(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_true_constant */
extern void T1235f36(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_true_constant */
extern void T524f18(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_true_constant */
extern void T520f23(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_true_constant */
extern void T505f135(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_true_constant_validity */
extern void T505f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_boolean_constant */
extern void T505f263(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_true_constant */
extern void T91f285(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_true_constant_validity */
extern void T91f371(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_boolean_constant */
extern void T91f424(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_true_constant */
extern void T84f1048(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_true_constant */
extern void T84f1097(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c3_character_constant */
extern void T1235f75(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c3_character_constant */
extern void T524f19(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c3_character_constant */
extern void T520f24(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c3_character_constant */
extern void T505f136(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c3_character_constant_validity */
extern void T505f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_character_constant_validity */
extern void T505f264(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_32_constant */
extern void T505f327(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_8_constant */
extern void T505f326(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0c_error */
extern void T53f433(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0c */
extern T0* T1418c978(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0c_error */
extern void T36f432(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c3_character_constant */
extern void T91f324(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c3_character_constant_validity */
extern void T91f409(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_character_constant_validity */
extern void T91f427(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_32_constant */
extern void T91f473(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_8_constant */
extern void T91f472(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c3_character_constant */
extern void T84f1049(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_character_constant */
extern void T84f1098(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_character_8 */
extern void T84f1147(GE_context* ac, T0* C, T2 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_32 */
extern void T186f12(GE_context* ac, T0* C, T10 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_32 */
extern void T374f13(GE_context* ac, T0* C, T10 a1);
/* ET_PRECURSOR_CHECKER.process_verbatim_string */
extern void T1235f76(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_verbatim_string */
extern void T524f20(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_verbatim_string */
extern void T520f25(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_verbatim_string */
extern void T505f137(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_verbatim_string_validity */
extern void T505f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_verbatim_string */
extern void T91f325(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_verbatim_string_validity */
extern void T91f410(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_verbatim_string */
extern void T84f1050(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_verbatim_string */
extern void T84f1099(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_special_manifest_string */
extern void T1235f77(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_special_manifest_string */
extern void T524f21(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_special_manifest_string */
extern void T520f26(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_special_manifest_string */
extern void T505f138(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_special_manifest_string_validity */
extern void T505f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_special_manifest_string */
extern void T91f326(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_special_manifest_string_validity */
extern void T91f411(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_special_manifest_string */
extern void T84f1051(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_special_manifest_string */
extern void T84f1100(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_underscored_integer_constant */
extern void T1235f30(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T524f22(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T520f27(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_integer_constant */
extern void T505f139(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_integer_constant_validity */
extern void T505f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_integer_constant */
extern void T91f279(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_integer_constant_validity */
extern void T91f365(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_integer_constant */
extern void T84f1052(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_integer_constant */
extern void T84f1101(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_hexadecimal_integer_constant */
extern void T1235f31(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T524f23(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T520f28(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_hexadecimal_integer_constant */
extern void T505f140(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_hexadecimal_integer_constant_validity */
extern void T505f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_hexadecimal_integer_constant */
extern void T91f280(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_hexadecimal_integer_constant_validity */
extern void T91f366(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_hexadecimal_integer_constant */
extern void T84f1053(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_hexadecimal_integer_constant */
extern void T84f1102(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_octal_integer_constant */
extern void T1235f32(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_octal_integer_constant */
extern void T524f24(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_octal_integer_constant */
extern void T520f29(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_octal_integer_constant */
extern void T505f141(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_octal_integer_constant_validity */
extern void T505f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_octal_integer_constant */
extern void T91f281(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_octal_integer_constant_validity */
extern void T91f367(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_octal_integer_constant */
extern void T84f1054(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_octal_integer_constant */
extern void T84f1103(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_binary_integer_constant */
extern void T1235f33(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_binary_integer_constant */
extern void T524f25(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_binary_integer_constant */
extern void T520f30(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_binary_integer_constant */
extern void T505f142(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_binary_integer_constant_validity */
extern void T505f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_binary_integer_constant */
extern void T91f282(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_binary_integer_constant_validity */
extern void T91f368(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_binary_integer_constant */
extern void T84f1055(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_binary_integer_constant */
extern void T84f1104(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_real_constant */
extern void T1235f34(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_real_constant */
extern void T524f26(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_real_constant */
extern void T520f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_real_constant */
extern void T505f143(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_real_constant_validity */
extern void T505f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_real_constant_validity */
extern void T505f265(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_real_64_constant */
extern void T505f329(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_real_32_constant */
extern void T505f328(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0b_error */
extern void T53f434(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0b */
extern T0* T1418c979(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0b_error */
extern void T36f433(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_real_constant */
extern void T91f283(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_real_constant_validity */
extern void T91f369(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_real_constant_validity */
extern void T91f423(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_64_constant */
extern void T91f471(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_32_constant */
extern void T91f470(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_real_constant */
extern void T84f1056(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_real_constant */
extern void T84f1105(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.is_negative */
extern T1 T2052f23(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_underscored_real_constant */
extern void T1235f35(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_real_constant */
extern void T524f27(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_real_constant */
extern void T520f32(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_real_constant */
extern void T505f144(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_real_constant_validity */
extern void T505f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_real_constant */
extern void T91f284(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_real_constant_validity */
extern void T91f370(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_real_constant */
extern void T84f1057(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_real_constant */
extern void T84f1106(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.is_negative */
extern T1 T2053f23(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_void */
extern void T1235f37(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_void */
extern void T524f28(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_void */
extern void T520f33(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_void */
extern void T505f145(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_void_validity */
extern void T505f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_void_constant */
extern void T505f266(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_void */
extern void T91f286(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_void_validity */
extern void T91f372(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_void_constant */
extern void T91f425(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_void */
extern void T84f1058(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_void */
extern void T84f1107(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_false_constant */
extern void T1235f38(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_false_constant */
extern void T524f29(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_false_constant */
extern void T520f34(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_false_constant */
extern void T505f146(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_false_constant_validity */
extern void T505f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_false_constant */
extern void T91f287(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_false_constant_validity */
extern void T91f373(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_false_constant */
extern void T84f1059(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_false_constant */
extern void T84f1108(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c1_character_constant */
extern void T1235f40(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c1_character_constant */
extern void T524f30(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c1_character_constant */
extern void T520f35(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c1_character_constant */
extern void T505f147(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c1_character_constant_validity */
extern void T505f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c1_character_constant */
extern void T91f289(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c1_character_constant_validity */
extern void T91f375(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c1_character_constant */
extern void T84f1060(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c2_character_constant */
extern void T1235f41(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c2_character_constant */
extern void T524f31(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c2_character_constant */
extern void T520f36(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c2_character_constant */
extern void T505f148(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c2_character_constant_validity */
extern void T505f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c2_character_constant */
extern void T91f290(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c2_character_constant_validity */
extern void T91f376(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c2_character_constant */
extern void T84f1061(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function */
extern void T1235f19(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_do_function */
extern void T1234f52(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function */
extern void T505f149(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_validity */
extern void T505f210(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vevi0c_error */
extern void T53f355(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0c */
extern T0* T1418c906(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0c_error */
extern void T36f354(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function */
extern void T91f142(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_validity */
extern void T91f153(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function */
extern void T84f1062(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function */
extern void T84f1109(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_function */
extern void T84f1148(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function */
extern void T1235f20(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_once_function */
extern void T1234f53(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function */
extern void T505f150(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_validity */
extern void T505f211(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0b_error */
extern void T53f356(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vucr0b */
extern T0* T1418c907(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vucr0b_error */
extern void T36f355(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_once_keys_validity */
extern void T505f267(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vvok2a_error */
extern void T53f368(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vvok2a */
extern T0* T1418c919(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T53f107(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vvok2a_error */
extern void T36f367(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T36f106(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_process_key */
extern T1 T2472f10(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_expected_key */
extern T1 T2472f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_STANDARD_ONCE_KEYS.string_ */
extern T0* T2472f7(GE_context* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.is_thread_key */
extern T1 T2472f9(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vvok1b_error */
extern void T53f367(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1b */
extern T0* T1418c918(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T53f106(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vvok1b_error */
extern void T36f366(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T36f105(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vvok1a_error */
extern void T53f366(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1a */
extern T0* T1418c917(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vvok1a_error */
extern void T36f365(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STANDARD_ONCE_KEYS.is_object_key */
extern T1 T2472f8(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.standard_once_keys */
extern T0* T505f56(GE_context* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.default_create */
extern T0* T2472c12(GE_context* ac);
/* ET_MANIFEST_STRING_LIST.manifest_string */
extern T0* T2119f7(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_STRING_LIST.item */
extern T0* T2119f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].wipe_out */
extern void T526f12(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_INDEXING_TERM].keep_head */
extern void T1404f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_INDEXING_TERM].set_count */
extern void T1404f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].move_all_cursors_after */
extern void T526f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INDEXING_TERM].set_next_cursor */
extern void T1405f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INDEXING_TERM].set_after */
extern void T1405f6(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vvok2b_error */
extern void T53f365(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vvok2b */
extern T0* T1418c916(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vvok2b_error */
extern void T36f364(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vvok1c_error */
extern void T53f364(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1c */
extern T0* T1418c915(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vvok1c_error */
extern void T36f363(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].item */
extern T0* T526f7(GE_context* ac, T0* C, T6 a1);
/* ET_INDEXING_LIST.append_tagged_indexing_terms_to_list */
extern void T2065f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INDEXING_TERM_LIST.append_indexing_terms_to_list */
extern void T2068f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].force_last */
extern void T526f14(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM].force */
extern void T1402f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_INDEXING_TERM].fill_with */
extern void T1404f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_INDEXING_TERM].extend */
extern void T1404f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].resize */
extern void T526f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INDEXING_TERM].aliased_resized_area */
extern T0* T1402f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_INDEXING_TERM].aliased_resized_area */
extern T0* T1404f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].new_capacity */
extern T6 T526f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].extendible */
extern T1 T526f8(GE_context* ac, T0* C, T6 a1);
/* ET_INDEXING_LIST.string_ */
extern T0* T2065f8(GE_context* ac, T0* C);
/* ET_INDEXING.tag */
extern T0* T2069f4(GE_context* ac, T0* C);
/* ET_INDEXING.indexing_clause */
extern T0* T2069f2(GE_context* ac, T0* C);
/* ET_TAGGED_INDEXING.indexing_clause */
extern T0* T2066f3(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function */
extern void T91f143(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_validity */
extern void T91f154(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_keys_validity */
extern void T91f169(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.standard_once_keys */
extern T0* T91f70(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_once_function */
extern void T84f1063(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function */
extern void T84f1110(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_function */
extern void T1235f21(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_deferred_function */
extern void T1234f54(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_function */
extern void T505f151(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_function_validity */
extern void T505f212(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_function */
extern void T91f144(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_function_validity */
extern void T91f155(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_function */
extern void T84f1064(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_function */
extern void T84f1111(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure */
extern void T1235f22(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_once_procedure */
extern void T1234f55(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure */
extern void T505f152(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_validity */
extern void T505f213(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.is_once_per_object */
extern T1 T2082f72(GE_context* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.has_object_key */
extern T1 T2472f1(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.has_expected_key */
extern T1 T2472f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.standard_once_keys */
extern T0* T2082f54(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure */
extern void T91f145(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_validity */
extern void T91f156(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_procedure */
extern void T84f1065(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure */
extern void T84f1112(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_braced_type */
extern void T1806f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_qualified_like_identifier_validity */
extern void T1806f13(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_braced_type */
extern void T1805f14(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_qualified_like_identifier_validity */
extern void T1805f19(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.set_fatal_error */
extern void T1805f20(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_braced_type */
extern void T1804f12(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_qualified_like_identifier_validity */
extern void T1804f17(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_braced_type */
extern void T1803f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_qualified_like_identifier_validity */
extern void T1803f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_braced_type */
extern void T1240f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_qualified_like_identifier */
extern void T1240f17(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1239f17(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T1239f20(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1c_error */
extern void T53f486(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1c */
extern T0* T1418c1031(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T53f157(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat1c_error */
extern void T36f485(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T36f156(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat2b_error */
extern void T53f485(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat2b */
extern T0* T1418c1030(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat2b_error */
extern void T36f484(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.resolve_identifier_type */
extern void T2098f78(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolve_identifier_type */
extern void T2097f82(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1239f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.seed */
extern T6 T2098f47(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.seed */
extern T6 T2097f44(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1239f22(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.process_qualified_like_braced_type */
extern void T1238f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_braced_type */
extern void T1233f17(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_qualified_like_braced_type */
extern void T1232f18(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_qualified_like_braced_type */
extern void T1231f27(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_qualified_like_identifier_tuple_actual_parameters_unfolded */
extern void T1231f31(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_qualified_like_identifier_vtct_validity */
extern void T1231f30(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1230f17(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_qualified_like_identifier_to_sorter */
extern void T1230f20(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_braced_type */
extern void T1229f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_qualified_like_identifier */
extern void T1229f17(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_braced_type */
extern void T1228f16(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_qualified_like_identifier */
extern void T1228f19(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_braced_type */
extern void T1217f21(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_qualified_like_braced_type */
extern void T1216f17(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T510f32(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T510f35(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.report_qualified_anchored_type_supplier */
extern void T510f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.report_qualified_anchored_type_supplier */
extern void T1250f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_type */
extern void T1806f8(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_type */
extern void T1805f15(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_type */
extern void T1804f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_type */
extern void T1803f8(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_type */
extern void T1240f14(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1239f18(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_qualified_like_type */
extern void T1238f18(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_type */
extern void T1233f18(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_qualified_like_type */
extern void T1232f19(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_qualified_like_type */
extern void T1231f28(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1230f18(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_type */
extern void T1229f14(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_type */
extern void T1228f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_type */
extern void T1217f22(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_qualified_like_type */
extern void T1216f18(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_qualified_like_type */
extern void T510f33(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_if_expression */
extern void T1235f43(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_expression_list */
extern void T1235f79(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION.process */
extern void T1676f8(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_expression */
extern void T1235f106(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION_LIST.item */
extern T0* T2112f3(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_if_expression */
extern void T524f32(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_if_expression */
extern void T520f37(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_if_expression */
extern void T505f153(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_expression_validity */
extern void T505f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.free_common_ancestor_types */
extern void T505f270(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].keep_first */
extern void T516f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].move_all_cursors_after */
extern void T516f22(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].item */
extern T0* T516f11(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_if_expression */
extern void T505f269(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST_SCOPE_BUILDER.build_negated_scope */
extern void T520f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.update_common_ancestor_type_list */
extern void T505f268(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].remove */
extern void T516f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].move_left */
extern void T516f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].move_cursors_left */
extern void T516f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT].set_position */
extern void T1377f8(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.build_negated_scope */
extern void T524f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_expression */
extern void T91f292(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_expression_validity */
extern void T91f378(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_common_ancestor_types */
extern void T91f431(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_if_expression */
extern void T91f430(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_if_expression_dynamic_types */
extern void T91f475(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.update_common_ancestor_type_list */
extern void T91f429(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_C_GENERATOR.process_if_expression */
extern void T84f1066(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_expression */
extern void T84f1113(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_expression */
extern void T1235f45(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_static_call_expression */
extern void T524f33(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_static_call_expression */
extern void T520f38(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_expression */
extern void T505f154(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_expression_validity */
extern void T505f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_static_query_call_expression_validity */
extern void T505f273(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_static_call_expression */
extern void T505f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_feature_validity */
extern void T505f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T505f331ot1(T0* a1, T0** a2);
extern T1 T505f331ot2(T0* a1, T0** a2);
extern T1 T505f331ot3(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vuno5a_error */
extern void T53f470(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuno5a */
extern T0* T1418c1015(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuno5_error */
extern T1 T53f147(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuno5a_error */
extern void T36f469(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuno5_error */
extern T1 T36f146(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_implicitly_static */
extern T1 T2152f54(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_builtin_static */
extern T1 T2152f70(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.string_ */
extern T0* T2152f73(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_implicitly_static */
extern T1 T344f61(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_builtin_static */
extern T1 T344f63(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.string_ */
extern T0* T344f67(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_implicitly_static */
extern T1 T494f60(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_implicitly_static */
extern T1 T492f58(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuno5b_error */
extern void T53f469(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuno5b */
extern T0* T1418c1014(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuno5b_error */
extern void T36f468(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuno3a_error */
extern void T53f468(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuno3a */
extern T0* T1418c1013(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuno3_error */
extern T1 T53f146(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuno3a_error */
extern void T36f467(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuno3_error */
extern T1 T36f145(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_static_supplier */
extern void T505f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_static_supplier */
extern void T1250f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_parenthesis_call_validity */
extern void T505f272(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T505f272ot1(T0* a1, T0** a2);
extern T1 T505f272ot2(T0* a1, T0** a2);
/* ET_STATIC_CALL_INSTRUCTION.set_parenthesis_call */
extern void T2121f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.set_parenthesis_call */
extern void T2122f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_dotnet_query_call_expression_validity */
extern void T505f271(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_expression */
extern void T91f294(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_expression_validity */
extern void T91f380(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_query_call_expression_validity */
extern void T91f354(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_expression */
extern void T91f418(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_feature_validity */
extern void T91f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T91f352ot1(T0* a1, T0** a2);
extern T1 T91f352ot2(T0* a1, T0** a2);
extern T1 T91f352ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_supplier */
extern void T91f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_parenthesis_call_validity */
extern void T91f269(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T91f269ot1(T0* a1, T0** a2);
extern T1 T91f269ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_query_call_expression_validity */
extern void T91f434(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_expression */
extern void T84f1067(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_expression */
extern void T84f1114(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_expression */
extern void T1235f46(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_precursor_validity */
extern void T1235f80(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3c_error */
extern void T53f536(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3c */
extern T0* T1418c1079(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.tokens */
extern T0* T1418f767(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T53f118(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr3c_error */
extern void T36f535(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T36f117(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3b_error */
extern void T53f535(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3b */
extern T0* T1418c1078(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.position */
extern T0* T2120f8(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdpr3b_error */
extern void T36f534(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_parent_type */
extern void T2120f17(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_parent_type */
extern void T2123f32(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_seed */
extern void T2062f22(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3a_error */
extern void T53f534(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vdpr3a */
extern T0* T1418c1077(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vdpr3a_error */
extern void T36f533(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vdpr2a_error */
extern void T53f533(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr2a */
extern T0* T1418c1076(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T53f177(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr2a_error */
extern void T36f532(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T36f176(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.error_handler */
extern T0* T1235f9(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.set_fatal_error */
extern void T1235f83(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.current_universe */
extern T0* T1235f8(GE_context* ac, T0* C);
/* ET_IDENTIFIER.class_name */
extern T0* T232f88(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_precursor_expression */
extern void T524f34(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_precursor_expression */
extern void T520f39(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_expression */
extern void T505f155(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_expression_validity */
extern void T505f216(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T505f216ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_precursor_query_expression_validity */
extern void T505f275(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].force_last */
extern void T1249f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].slots_put */
extern void T1249f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].clashes_put */
extern void T1249f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].slots_item */
extern T6 T1249f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].hash_position */
extern T6 T1249f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].resize */
extern void T1249f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].clashes_resize */
extern void T1249f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].special_integer_ */
extern T0* T1249f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].key_storage_resize */
extern void T1249f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].item_storage_resize */
extern void T1249f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].key_storage_item */
extern T0* T1249f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].slots_resize */
extern void T1249f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].new_capacity */
extern T6 T1249f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].item_storage_put */
extern void T1249f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].search_position */
extern void T1249f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].key_equality_tester */
extern T0* T1249f30(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_precursor_expression */
extern void T505f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vucr0h_error */
extern void T53f435(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0h */
extern T0* T1418c980(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vucr0h_error */
extern void T36f434(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_precursor_parenthesis_call_validity */
extern void T505f274(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T505f274ot1(T0* a1, T0** a2);
extern T1 T505f274ot2(T0* a1, T0** a2);
/* ET_PRECURSOR_INSTRUCTION.set_parenthesis_call */
extern void T2120f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.set_parenthesis_call */
extern void T2123f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.ancestor */
extern T0* T95f187(GE_context* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.base_type */
extern T0* T538f4(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_generic */
extern T1 T93f18(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdpr3d_error */
extern void T53f397(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3d */
extern T0* T1418c942(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr3d_error */
extern void T36f396(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3e_error */
extern void T53f396(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3e */
extern T0* T1418c941(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3e_error */
extern void T36f395(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr1b_error */
extern void T53f395(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1b */
extern T0* T1418c940(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T53f117(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr1b_error */
extern void T36f394(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T36f116(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_expression */
extern void T91f295(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_expression_validity */
extern void T91f381(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_query_expression_validity */
extern void T91f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_expression */
extern void T91f417(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.dynamic_precursor */
extern T0* T416f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FEATURE.dynamic_precursor */
extern T0* T332f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR_LIST.force_last */
extern void T418f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR].force */
extern void T2595f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR].fill_with */
extern void T2594f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR].extend */
extern void T2594f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.fixed_array */
extern T0* T418f4(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR].default_create */
extern T0* T2595c3(GE_context* ac);
/* ET_DYNAMIC_PRECURSOR_LIST.resize */
extern void T418f10(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T2595f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T2594f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.new_capacity */
extern T6 T418f6(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.capacity */
extern T6 T418f5(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.put_last */
extern void T418f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.make_with_capacity */
extern T0* T418c7(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR].make */
extern T0* T2595f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR].make_empty */
extern T0* T2594c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_PRECURSOR.make */
extern T0* T416c33(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PRECURSOR.make_feature */
extern void T416f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T416f42ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PRECURSOR.tokens */
extern T0* T416f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.empty_dynamic_type_sets */
extern T0* T416f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_parenthesis_call_validity */
extern void T91f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T91f266ot1(T0* a1, T0** a2);
extern T1 T91f266ot2(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_precursor_expression */
extern void T84f1068(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_expression */
extern void T84f1115(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_current_address */
extern void T1235f47(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_current_address */
extern void T524f35(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_current_address */
extern void T520f40(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current_address */
extern void T505f156(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_address_validity */
extern void T505f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_pointer_expression */
extern void T505f277(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_typed_pointer_expression */
extern void T505f276(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vucr0g_error */
extern void T53f398(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0g */
extern T0* T1418c943(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0g_error */
extern void T36f397(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current_address */
extern void T91f296(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_address_validity */
extern void T91f382(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_pointer_expression */
extern void T91f436(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_typed_pointer_expression */
extern void T91f435(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_current_address */
extern void T84f1069(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_current_address */
extern void T84f1116(GE_context* ac, T0* C, T0* a1);
extern T1 T84f1116ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_FEATURE_LIST.is_empty */
extern T1 T414f9(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_result_address */
extern void T1235f48(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_result_address */
extern void T524f36(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_result_address */
extern void T520f41(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result_address */
extern void T505f157(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_address_validity */
extern void T505f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result_address */
extern void T91f297(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_address_validity */
extern void T91f383(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_result_address */
extern void T84f1070(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_result_address */
extern void T84f1117(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_expression_address */
extern void T1235f49(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_expression_address */
extern void T524f37(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_expression_address */
extern void T520f42(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_expression_address */
extern void T505f158(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expression_address_validity */
extern void T505f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_expression_address */
extern void T91f298(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_address_validity */
extern void T91f384(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_expression_address */
extern void T84f1071(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_expression_address */
extern void T84f1118(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_address */
extern void T84f1142(GE_context* ac, T0* C, T0* a1);
extern T1 T84f1142ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_parenthesized_expression */
extern void T1235f58(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_parenthesized_expression */
extern void T524f38(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_parenthesized_expression */
extern void T520f43(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_parenthesized_expression */
extern void T505f159(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_parenthesized_expression_validity */
extern void T505f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_parenthesized_expression */
extern void T91f307(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_parenthesized_expression_validity */
extern void T91f393(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_parenthesized_expression */
extern void T84f1072(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_parenthesized_expression */
extern void T84f1119(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_expression */
extern void T1235f50(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_infix_expression */
extern void T524f39(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_expression */
extern void T520f44(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_expression */
extern void T505f160(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_expression_validity */
extern void T505f221(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T505f221ot1(T0* a1, T0** a2);
extern T1 T505f221ot2(T0* a1, T0** a2);
extern T1 T505f221ot3(T0* a1, T0** a2);
/* ET_INFIX_CAST_EXPRESSION.make */
extern T0* T2489c17(GE_context* ac, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_context */
extern T1 T517f45(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_context_with_type_marks */
extern T1 T517f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE.is_subset */
extern T1 T523f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].go_after */
extern void T1395f79(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].cursor_go_after */
extern void T1395f80(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.set_right */
extern void T2128f29(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.set_left */
extern void T2128f28(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.set_boolean_operator */
extern void T2128f27(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_expression */
extern void T91f299(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_expression_validity */
extern void T91f385(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f385ot1(T0* a1, T0** a2);
extern T1 T91f385ot2(T0* a1, T0** a2);
extern T1 T91f385ot3(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_infix_expression */
extern void T84f1073(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_expression */
extern void T84f1120(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_type */
extern void T1235f53(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_type */
extern void T524f40(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_type */
extern void T520f45(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_type */
extern void T505f161(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_type_validity */
extern void T505f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_type */
extern void T505f280(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_type */
extern void T91f302(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_type_validity */
extern void T91f388(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_type */
extern void T91f440(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_manifest_type */
extern void T84f1074(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_type */
extern void T84f1121(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_prefix_expression */
extern void T1235f54(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_prefix_expression */
extern void T524f41(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_prefix_expression */
extern void T520f46(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_prefix_expression */
extern void T505f162(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_prefix_expression_validity */
extern void T505f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_prefix_expression */
extern void T91f303(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_prefix_expression_validity */
extern void T91f389(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_prefix_expression */
extern void T84f1075(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_prefix_expression */
extern void T84f1122(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_expression */
extern void T1235f55(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_old_expression */
extern void T524f42(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_old_expression */
extern void T520f47(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_expression */
extern void T505f163(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_old_expression_validity */
extern void T505f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vaol1a_error */
extern void T53f403(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vaol1a */
extern T0* T1418c948(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T53f122(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vaol1a_error */
extern void T36f402(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T36f121(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_expression */
extern void T91f304(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_old_expression_validity */
extern void T91f390(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_old_expression */
extern void T84f1076(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_old_expression */
extern void T84f1123(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bracket_expression */
extern void T1235f57(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.process */
extern void T2487f16(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unfolded_tuple_actual_argument_list */
extern void T1235f100(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.process */
extern void T391f20(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_bracket_expression */
extern void T524f43(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_bracket_expression */
extern void T520f48(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bracket_expression */
extern void T505f164(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bracket_expression_validity */
extern void T505f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bracket_expression */
extern void T91f306(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bracket_expression_validity */
extern void T91f392(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_bracket_expression */
extern void T84f1077(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bracket_expression */
extern void T84f1124(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_array */
extern void T1235f59(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.expression */
extern T0* T2137f13(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.item */
extern T0* T2137f10(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_array */
extern void T524f44(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_array */
extern void T520f49(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_array */
extern void T505f165(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_array_validity */
extern void T505f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_untyped_manifest_array_validity */
extern void T505f282(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T505f282ot1(T0* a1, T0** a2);
extern T1 T505f282ot2(T0* a1, T0** a2);
/* ET_MANIFEST_ARRAY.put */
extern void T2137f34(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_CHECKER.report_manifest_array */
extern void T505f334(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.conforms_to_context */
extern T1 T93f99(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.conforms_to_context_with_type_marks */
extern T1 T93f106(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.tokens */
extern T0* T93f17(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_typed_manifest_array_validity */
extern void T505f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T505f281ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vwma2a_error */
extern void T53f438(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vwma2a */
extern T0* T1418c983(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vwma2_error */
extern T1 T53f137(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwma2a_error */
extern void T36f437(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vwma2_error */
extern T1 T36f136(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwma1a_error */
extern void T53f437(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwma1a */
extern T0* T1418c982(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwma1_error */
extern T1 T53f136(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwma1a_error */
extern void T36f436(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwma1_error */
extern T1 T36f135(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_array */
extern void T91f308(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_array_validity */
extern void T91f394(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_untyped_manifest_array_validity */
extern void T91f444(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f444ot1(T0* a1, T0** a2);
extern T1 T91f444ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_array */
extern void T91f480(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T91f480ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_manifest_array_validity */
extern void T91f443(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T91f443ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_manifest_array */
extern void T84f1078(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array */
extern void T84f1125(GE_context* ac, T0* C, T0* a1);
extern T1 T84f1125ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_strip_expression */
extern void T1235f61(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_strip_expression */
extern void T524f45(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_strip_expression */
extern void T520f50(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_strip_expression */
extern void T505f166(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_strip_expression_validity */
extern void T505f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_strip_expression */
extern void T505f283(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwst2a_error */
extern void T53f406(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst2a */
extern T0* T1418c951(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T53f124(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst2a_error */
extern void T36f405(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T36f123(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1a_error */
extern void T53f405(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vwst1a */
extern T0* T1418c950(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T53f123(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1a_error */
extern void T36f404(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T36f122(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1b_error */
extern void T53f404(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst1b */
extern T0* T1418c949(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwst1b_error */
extern void T36f403(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.feature_name */
extern T0* T2138f20(GE_context* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.item */
extern T0* T2138f10(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_strip_expression */
extern void T91f310(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_strip_expression_validity */
extern void T91f396(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_strip_expression */
extern void T91f446(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_strip_expression */
extern void T84f1079(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_strip_expression */
extern void T84f1126(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_call_agent */
extern void T1235f62(GE_context* ac, T0* C, T0* a1);
extern T1 T1235f62ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_agent_argument_operand_list */
extern void T1235f81(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_call_agent */
extern void T524f46(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_call_agent */
extern void T520f51(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_agent */
extern void T505f167(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_agent_validity */
extern void T505f228(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T505f228ot1(T0* a1, T0** a2);
extern T1 T505f228ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_typed_call_agent_validity */
extern void T505f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T505f286ot1(T0* a1, T0** a2);
extern T1 T505f286ot2(T0* a1, T0** a2);
/* ET_CALL_AGENT.is_procedure */
extern T1 T2139f19(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vpca1b_error */
extern void T53f441(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca1b */
extern T0* T1418c986(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T53f138(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca1b_error */
extern void T36f440(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T36f137(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_tuple_label_call_agent_validity */
extern void T505f342(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_tuple_label_call_agent */
extern void T505f359(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_query_call_agent_validity */
extern void T505f341(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_query_call_agent */
extern void T505f358(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_agent_arguments_validity */
extern void T505f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T505f348ot1(T0* a1, T0** a2);
extern T1 T505f348ot2(T0* a1, T0** a2);
extern T1 T505f348ot3(T0* a1, T0** a2);
extern T1 T505f348ot4(T0* a1, T0** a2);
extern T1 T505f348ot5(T0* a1, T0** a2);
extern T1 T505f348ot6(T0* a1, T0** a2);
extern T1 T505f348ot7(T0* a1, T0** a2);
extern T1 T505f348ot8(T0* a1, T0** a2);
extern T1 T505f348ot9(T0* a1, T0** a2);
extern T1 T505f348ot10(T0* a1, T0** a2);
extern T1 T505f348ot11(T0* a1, T0** a2);
extern T1 T505f348ot12(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vpca5b_error */
extern void T53f477(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca5b */
extern T0* T1418c1022(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T53f151(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca5b_error */
extern void T36f476(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T36f150(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5a_error */
extern void T53f476(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca5a */
extern T0* T1418c1021(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca5a_error */
extern void T36f475(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca4b_error */
extern void T53f475(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca4b */
extern T0* T1418c1020(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T53f150(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca4b_error */
extern void T36f474(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T36f149(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca4a_error */
extern void T53f474(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca4a */
extern T0* T1418c1019(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca4a_error */
extern void T36f473(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put */
extern void T2148f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.item */
extern T0* T2148f8(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3b_error */
extern void T53f473(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca3b */
extern T0* T1418c1018(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T53f149(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca3b_error */
extern void T36f472(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T36f148(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3a_error */
extern void T53f472(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpca3a */
extern T0* T1418c1017(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpca3a_error */
extern void T36f471(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.force_first */
extern void T333f34(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resize */
extern void T333f35(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T848f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T845f4(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.new_capacity */
extern T6 T333f24(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.capacity */
extern T6 T333f23(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_implicit_agent_open_arguments */
extern void T505f347(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.put_last */
extern void T2621f8(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT].force */
extern void T2722f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT].fill_with */
extern void T2721f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT].extend */
extern void T2721f7(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.fixed_array */
extern T0* T2621f6(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT].default_create */
extern T0* T2722c2(GE_context* ac);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.make */
extern T0* T2622c5(GE_context* ac, T0* a1, T6 a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.make_with_capacity */
extern T0* T2621c7(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T2722f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make_empty */
extern T0* T2721c4(GE_context* ac, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vpca2a_error */
extern void T53f471(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vpca2a */
extern T0* T1418c1016(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T53f148(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca2a_error */
extern void T36f470(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T36f147(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_procedure_call_agent_validity */
extern void T505f340(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_procedure_call_agent */
extern void T505f357(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_procedure */
extern void T2139f35(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_qualified_call_agent_validity */
extern void T505f285(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T505f285ot1(T0* a1, T0** a2);
extern T1 T505f285ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_agent_validity */
extern void T505f339(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_query_call_agent_validity */
extern void T505f338(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_agent_validity */
extern void T505f337(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_call_agent_validity */
extern void T505f284(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpca1a_error */
extern void T53f440(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpca1a */
extern T0* T1418c985(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpca1a_error */
extern void T36f439(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_agent_validity */
extern void T505f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_query_call_agent */
extern void T505f356(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_agent_validity */
extern void T505f335(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_procedure_call_agent */
extern void T505f355(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vucr0j_error */
extern void T53f439(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0j */
extern T0* T1418c984(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0j_error */
extern void T36f438(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_agent */
extern void T91f311(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_agent_validity */
extern void T91f397(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f397ot1(T0* a1, T0** a2);
extern T1 T91f397ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_call_agent_validity */
extern void T91f449(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T91f449ot1(T0* a1, T0** a2);
extern T1 T91f449ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_tuple_label_call_agent_validity */
extern void T91f488(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_call_agent */
extern void T91f503(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T91f503ot1(T0* a1, T0** a2);
extern T1 T91f503ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_query_call */
extern void T91f508(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TYPE_SET_LIST.is_empty */
extern T1 T373f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_query_call_agent_validity */
extern void T91f487(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_query_call_agent */
extern void T91f502(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_agent */
extern void T91f507(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T91f507ot1(T0* a1, T0** a2);
extern T1 T91f507ot2(T0* a1, T0** a2);
extern T1 T91f507ot3(T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_agent_closed_operands_dynamic_types */
extern void T91f510(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f510ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_agent_arguments_validity */
extern void T91f494(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T91f494ot1(T0* a1, T0** a2);
extern T1 T91f494ot2(T0* a1, T0** a2);
extern T1 T91f494ot3(T0* a1, T0** a2);
extern T1 T91f494ot4(T0* a1, T0** a2);
extern T1 T91f494ot5(T0* a1, T0** a2);
extern T1 T91f494ot6(T0* a1, T0** a2);
extern T1 T91f494ot7(T0* a1, T0** a2);
extern T1 T91f494ot8(T0* a1, T0** a2);
extern T1 T91f494ot9(T0* a1, T0** a2);
extern T1 T91f494ot10(T0* a1, T0** a2);
extern T1 T91f494ot11(T0* a1, T0** a2);
extern T1 T91f494ot12(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_implicit_agent_open_arguments */
extern void T91f493(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_procedure_call_agent_validity */
extern void T91f486(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_procedure_call_agent */
extern void T91f501(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_agent_validity */
extern void T91f448(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T91f448ot1(T0* a1, T0** a2);
extern T1 T91f448ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_agent_validity */
extern void T91f485(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_agent_validity */
extern void T91f484(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_agent_validity */
extern void T91f483(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_agent_validity */
extern void T91f447(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_agent_validity */
extern void T91f482(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_query_call_agent */
extern void T91f500(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_agent */
extern void T91f506(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T91f506ot1(T0* a1, T0** a2);
extern T1 T91f506ot2(T0* a1, T0** a2);
extern T1 T91f506ot3(T0* a1, T0** a2);
extern T1 T91f506ot4(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_call_agent_result_dynamic_types */
extern void T91f511(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_agent_validity */
extern void T91f481(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_procedure_call_agent */
extern void T91f499(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_call_agent */
extern void T84f1080(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent */
extern void T84f1128(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent */
extern void T84f1150(GE_context* ac, T0* C, T0* a1);
extern T1 T84f1150ot1(T0* a1, T0** a2);
extern T1 T84f1150ot2(T0* a1, T0** a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT].force_last */
extern void T388f14(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT].force */
extern void T1295f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_AGENT].fill_with */
extern void T1294f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_AGENT].extend */
extern void T1294f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT].resize */
extern void T388f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT].aliased_resized_area */
extern T0* T1295f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_AGENT].aliased_resized_area */
extern T0* T1294f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT].new_capacity */
extern T6 T388f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT].extendible */
extern T1 T388f8(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_agent_body_declaration */
extern void T84f1127(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_instruction */
extern void T84f1149(GE_context* ac, T0* C, T0* a1);
extern T1 T84f1149ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_name */
extern void T392f14(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_target */
extern void T392f13(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_name */
extern void T396f32(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function_inline_agent */
extern void T1235f63(GE_context* ac, T0* C, T0* a1);
extern T1 T1235f63ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T524f47(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T520f52(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function_inline_agent */
extern void T505f168(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_inline_agent_validity */
extern void T505f229(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_query_inline_agent_validity */
extern void T505f293(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_query_inline_agent */
extern void T505f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].last */
extern T0* T512f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].is_empty */
extern T1 T512f8(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vevi0d_error */
extern void T53f408(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0d */
extern T0* T1418c953(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0d_error */
extern void T36f407(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_inline_agent_locals_validity */
extern void T505f292(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_local_supplier */
extern void T505f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_local_supplier */
extern void T1250f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_local_variable_declaration */
extern void T505f345(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1h_error */
extern void T53f455(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1h */
extern T0* T1418c1000(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T53f139(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1h_error */
extern void T36f454(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T36f138(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_CURSOR_SCOPE.hidden_across_component */
extern T0* T522f5(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1f_error */
extern void T53f454(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1f */
extern T0* T1418c999(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1f_error */
extern void T36f453(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_OBJECT_TEST_SCOPE.hidden_object_test */
extern T0* T519f5(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1d_error */
extern void T53f453(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1d */
extern T0* T1418c998(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1d_error */
extern void T36f452(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1c_error */
extern void T53f452(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1c */
extern T0* T1418c997(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1c_error */
extern void T36f451(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vrlv1b_error */
extern void T53f451(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv1b */
extern T0* T1418c996(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T53f141(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv1b_error */
extern void T36f450(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T36f140(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv2b_error */
extern void T53f450(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv2b */
extern T0* T1418c995(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T53f140(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv2b_error */
extern void T36f449(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T36f139(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vred0d_error */
extern void T53f449(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0d */
extern T0* T1418c994(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0d_error */
extern void T36f448(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_inline_agent_across_components_validity */
extern void T505f291(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_inline_agent_object_tests_validity */
extern void T505f290(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot3b_error */
extern void T53f448(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot3b */
extern T0* T1418c993(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot3b_error */
extern void T36f447(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_supplier */
extern void T505f289(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_result_supplier */
extern void T1250f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_declaration */
extern void T505f288(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inline_agent_formal_arguments_validity */
extern void T505f287(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_argument_supplier */
extern void T505f344(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_argument_supplier */
extern void T1250f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_formal_argument_declaration */
extern void T505f343(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1g_error */
extern void T53f447(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1g */
extern T0* T1418c992(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1g_error */
extern void T36f446(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1e_error */
extern void T53f446(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1e */
extern T0* T1418c991(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1e_error */
extern void T36f445(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1b_error */
extern void T53f445(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1b */
extern T0* T1418c990(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1b_error */
extern void T36f444(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1a_error */
extern void T53f444(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1a */
extern T0* T1418c989(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1a_error */
extern void T36f443(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vrfa0b_error */
extern void T53f443(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrfa0b */
extern T0* T1418c988(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vrfa0b_error */
extern void T36f442(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vred0c_error */
extern void T53f442(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0c */
extern T0* T1418c987(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0c_error */
extern void T36f441(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vucr0i_error */
extern void T53f407(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0i */
extern T0* T1418c952(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0i_error */
extern void T36f406(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACROSS_CURSOR_SCOPE.hide_across_components */
extern void T522f8(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_CURSOR_SCOPE.count */
extern T6 T522f4(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.hide_object_tests */
extern void T519f9(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function_inline_agent */
extern void T91f312(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_inline_agent_validity */
extern void T91f398(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_inline_agent_validity */
extern void T91f456(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_query_inline_agent */
extern void T91f495(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent */
extern void T91f504(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T91f504ot1(T0* a1, T0** a2);
extern T1 T91f504ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_agent_result_dynamic_types */
extern void T91f509(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_locals_validity */
extern void T91f455(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_supplier */
extern void T91f492(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_variable_declaration */
extern void T91f491(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_across_components_validity */
extern void T91f454(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_object_tests_validity */
extern void T91f453(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_supplier */
extern void T91f452(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_declaration */
extern void T91f451(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_formal_arguments_validity */
extern void T91f450(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_argument_supplier */
extern void T91f490(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_formal_argument_declaration */
extern void T91f489(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function_inline_agent */
extern void T84f1081(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent */
extern void T84f1130(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent_body_declaration */
extern void T84f1129(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine_inline_agent_body_declaration */
extern void T84f1151(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_trace_message_call */
extern void T84f1163(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_PRECURSOR_CHECKER.process_once_function_inline_agent */
extern void T1235f64(GE_context* ac, T0* C, T0* a1);
extern T1 T1235f64ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T524f48(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T520f53(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function_inline_agent */
extern void T505f169(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_inline_agent_validity */
extern void T505f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpir3a_error */
extern void T53f409(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpir3a */
extern T0* T1418c954(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T53f125(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir3a_error */
extern void T36f408(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T36f124(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_indexing */
extern T0* T2141f32(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function_inline_agent */
extern void T91f313(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_inline_agent_validity */
extern void T91f399(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_function_inline_agent */
extern void T84f1082(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent */
extern void T84f1132(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_once_per_object */
extern T1 T2141f27(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.standard_once_keys */
extern T0* T2141f34(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_once_function_inline_agent_body_declaration */
extern void T84f1131(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function_inline_agent */
extern void T1235f65(GE_context* ac, T0* C, T0* a1);
extern T1 T1235f65ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T524f49(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T520f54(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function_inline_agent */
extern void T505f170(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_inline_agent_validity */
extern void T505f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpir3b_error */
extern void T53f410(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpir3b */
extern T0* T1418c955(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpir3b_error */
extern void T36f409(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function_inline_agent */
extern void T91f314(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_inline_agent_validity */
extern void T91f400(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_function_inline_agent */
extern void T84f1083(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent */
extern void T84f1134(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent_body_declaration */
extern void T84f1133(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_procedure_inline_agent */
extern void T1235f66(GE_context* ac, T0* C, T0* a1);
extern T1 T1235f66ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T524f50(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T520f55(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure_inline_agent */
extern void T505f171(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_inline_agent_validity */
extern void T505f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_procedure_inline_agent_validity */
extern void T505f294(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_inline_agent */
extern void T505f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure_inline_agent */
extern void T91f315(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_inline_agent_validity */
extern void T91f401(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_procedure_inline_agent_validity */
extern void T91f457(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_inline_agent */
extern void T91f496(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_do_procedure_inline_agent */
extern void T84f1084(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent */
extern void T84f1136(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent_body_declaration */
extern void T84f1135(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure_inline_agent */
extern void T1235f67(GE_context* ac, T0* C, T0* a1);
extern T1 T1235f67ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T524f51(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T520f56(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure_inline_agent */
extern void T505f172(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_inline_agent_validity */
extern void T505f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_indexing */
extern T0* T2145f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure_inline_agent */
extern void T91f316(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_inline_agent_validity */
extern void T91f402(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_procedure_inline_agent */
extern void T84f1085(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent */
extern void T84f1138(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_once_per_object */
extern T1 T2145f25(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.standard_once_keys */
extern T0* T2145f33(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_once_procedure_inline_agent_body_declaration */
extern void T84f1137(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure_inline_agent */
extern void T1235f68(GE_context* ac, T0* C, T0* a1);
extern T1 T1235f68ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T524f52(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T520f57(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure_inline_agent */
extern void T505f173(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_inline_agent_validity */
extern void T505f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure_inline_agent */
extern void T91f317(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_inline_agent_validity */
extern void T91f403(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_procedure_inline_agent */
extern void T84f1086(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent */
extern void T84f1140(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent_body_declaration */
extern void T84f1139(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure */
extern void T1235f23(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_external_procedure */
extern void T1234f56(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure */
extern void T505f174(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_validity */
extern void T505f235(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure */
extern void T91f146(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T91f157(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_procedure_validity */
extern void T91f170(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_reference */
extern void T91f215(GE_context* ac, T0* C, T0* a1);
extern T1 T91f215ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_procedure */
extern void T91f214(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_set_is_ignored */
extern void T91f213(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_raise */
extern void T91f212(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_ignore */
extern void T91f211(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_catch */
extern void T91f210(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_builtin_unknown */
extern T1 T2152f76(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T91f157p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_procedure */
extern void T84f1087(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure */
extern void T84f1141(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_feature */
extern void T1806f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_feature */
extern void T1805f16(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_feature */
extern void T1804f14(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_feature */
extern void T1803f9(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_feature */
extern void T1240f15(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1239f19(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_like_feature_validity */
extern void T1239f21(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.index */
extern T6 T2154f49(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.process_like_feature */
extern void T1238f19(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_feature */
extern void T1233f19(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_feature */
extern void T1232f20(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_feature */
extern void T1231f29(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1230f19(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_like_feature_to_sorter */
extern void T1230f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].force_relation */
extern void T1944f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].put_indexed_relation */
extern void T1944f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].force */
extern void T1944f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].put */
extern void T1944f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].put_new */
extern void T2362f49(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].key_storage_put */
extern void T2362f57(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].item_storage_put */
extern void T2362f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].slots_put */
extern void T2362f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].clashes_put */
extern void T2362f52(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].slots_item */
extern T6 T2362f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].hash_position */
extern T6 T2362f23(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.hash_code */
extern T6 T2154f75(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].clashes_item */
extern T6 T2362f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].resize */
extern void T2362f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].clashes_resize */
extern void T2362f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].special_integer_ */
extern T0* T2362f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].key_storage_resize */
extern void T2362f54(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T2364f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T2363f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].item_storage_resize */
extern void T2362f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].key_storage_item */
extern T0* T2362f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].slots_resize */
extern void T2362f50(GE_context* ac, T0* C, T6 a1);
/* attached DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].resize */
extern void T1946f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].capacity */
extern T6 T1944f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].count */
extern T6 T1944f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].index_of */
extern T6 T1944f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].found_item */
extern T6 T2362f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].item_storage_item */
extern T6 T2362f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].found */
extern T1 T2362f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].search */
extern void T2362f58(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].search_position */
extern void T2362f59(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_feature */
extern void T1229f15(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_feature */
extern void T1228f18(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_like_feature */
extern void T1228f20(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1a_error */
extern void T53f488(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat1a */
extern T0* T1418c1033(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtat1a_error */
extern void T36f487(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtat1b_error */
extern void T53f487(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1b */
extern T0* T1418c1032(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1b_error */
extern void T36f486(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER_TYPE_RESOLVER.error_handler */
extern T0* T1228f6(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.set_fatal_error */
extern void T1228f21(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.resolve_like_argument */
extern void T2154f84(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolve_like_feature */
extern void T2154f83(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_feature */
extern void T1217f23(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_feature */
extern void T1216f19(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_feature */
extern void T510f34(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_feature_validity */
extern void T510f36(GE_context* ac, T0* C, T0* a1);
extern T1 T510f36ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_feature_address */
extern void T1235f70(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_feature_address */
extern void T524f53(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_feature_address */
extern void T520f58(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_feature_address */
extern void T505f175(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_feature_address_validity */
extern void T505f236(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar4a_error */
extern void T53f412(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar4a */
extern T0* T1418c957(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T53f126(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar4a_error */
extern void T36f411(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T36f125(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_function_address */
extern void T505f297(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_attribute_address */
extern void T505f296(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vucr0e_error */
extern void T53f411(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0e */
extern T0* T1418c956(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vucr0e_error */
extern void T36f410(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_procedure_address */
extern void T505f295(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_feature_address */
extern void T91f319(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_address_validity */
extern void T91f405(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_function_address */
extern void T91f464(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.set_address */
extern void T416f43(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_address */
extern void T332f41(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_address */
extern void T91f463(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_address */
extern void T91f462(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_feature_address */
extern void T84f1088(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_object_test */
extern void T1235f71(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_old_object_test */
extern void T524f54(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_old_object_test */
extern void T520f59(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_object_test */
extern void T505f176(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_object_test */
extern void T91f320(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_old_object_test */
extern void T84f1089(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_manifest_string */
extern void T1235f73(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_manifest_string */
extern void T524f55(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_manifest_string */
extern void T520f60(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_manifest_string */
extern void T505f177(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_manifest_string_validity */
extern void T505f237(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_manifest_string */
extern void T91f322(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_manifest_string_validity */
extern void T91f407(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_manifest_string */
extern void T84f1090(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_manifest_string */
extern void T84f1143(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].force_last */
extern void T404f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].key_storage_put */
extern void T404f66(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT].force */
extern void T1321f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_INLINE_CONSTANT].fill_with */
extern void T1318f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_INLINE_CONSTANT].extend */
extern void T1318f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].slots_put */
extern void T404f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].clashes_put */
extern void T404f64(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].slots_item */
extern T6 T404f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].hash_position */
extern T6 T404f33(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.hash_code */
extern T6 T2160f19(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].resize */
extern void T404f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].clashes_resize */
extern void T404f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].special_integer_ */
extern T0* T404f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].key_storage_resize */
extern void T404f69(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T1321f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T1318f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].item_storage_resize */
extern void T404f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].slots_resize */
extern void T404f67(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].new_capacity */
extern T6 T404f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].item_storage_put */
extern void T404f62(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].search_position */
extern void T404f61(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_across_expression */
extern void T1235f74(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_invariants */
extern void T1235f82(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.assertion */
extern T0* T2153f7(GE_context* ac, T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.item */
extern T0* T2153f8(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_across_expression */
extern void T524f56(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_across_expression */
extern void T520f61(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_across_expression */
extern void T505f178(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_expression_validity */
extern void T505f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_across_expression */
extern void T505f301(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].remove_found_item */
extern void T521f63(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].remove_position */
extern void T521f66(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].key_storage_put */
extern void T521f71(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].item_storage_put */
extern void T521f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].key_storage_keep_head */
extern void T521f75(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].item_storage_keep_head */
extern void T521f74(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].clashes_put */
extern void T521f69(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].slots_put */
extern void T521f70(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].move_cursors_forth */
extern void T521f73(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].internal_set_key_equality_tester */
extern void T521f72(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_CURSOR_SCOPE.remove_across_components */
extern void T522f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].prune_last */
extern void T1394f15(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_loop_variant_validity */
extern void T505f300(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vave0a_error */
extern void T53f462(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vave0a */
extern T0* T1418c1007(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vave_error */
extern T1 T53f144(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vave0a_error */
extern void T36f461(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vave_error */
extern T1 T36f143(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_invariant_validity */
extern void T505f299(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_CURSOR_SCOPE.add_across_component */
extern void T522f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].force_last */
extern void T1394f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].resize */
extern void T1394f16(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].new_capacity */
extern T6 T1394f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].extendible */
extern T1 T1394f8(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_across_component_header_validity */
extern void T505f298(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_instruction_validity */
extern void T505f239(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_INSTRUCTION.parenthesis_call */
extern T0* T2597f4(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T505f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].force_last */
extern void T521f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].resize */
extern void T521f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].clashes_resize */
extern void T521f79(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].special_integer_ */
extern T0* T521f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].key_storage_resize */
extern void T521f78(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].item_storage_resize */
extern void T521f77(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].slots_resize */
extern void T521f76(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].new_capacity */
extern T6 T521f31(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_across_cursor_declaration */
extern void T505f351(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_voit2e_error */
extern void T53f461(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2e */
extern T0* T1418c1006(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_voit2_error */
extern T1 T53f143(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit2e_error */
extern void T36f460(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_voit2_error */
extern T1 T36f142(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_voit2d_error */
extern void T53f460(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2d */
extern T0* T1418c1005(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2d_error */
extern void T36f459(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2c_error */
extern void T53f459(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2c */
extern T0* T1418c1004(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2c_error */
extern void T36f458(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2b_error */
extern void T53f458(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2b */
extern T0* T1418c1003(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2b_error */
extern void T36f457(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2a_error */
extern void T53f457(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2a */
extern T0* T1418c1002(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2a_error */
extern void T36f456(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit1a_error */
extern void T53f456(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_voit1a */
extern T0* T1418c1001(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_voit1_error */
extern T1 T53f142(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit1a_error */
extern void T36f455(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_voit1_error */
extern T1 T36f141(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_expression */
extern void T91f323(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_expression_validity */
extern void T91f408(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_expression */
extern void T91f466(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T91f343(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T91f343p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T91f342(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T91f342p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_component_header_validity */
extern void T91f270(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_instruction_validity */
extern void T91f234(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T91f251(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_cursor_declaration */
extern void T91f355(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_across_expression */
extern void T84f1091(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_expression */
extern void T84f1144(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class_type */
extern void T1806f5(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_class_type_validity */
extern void T1806f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class_type */
extern void T1805f12(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class_type */
extern void T1804f9(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_class_type_validity */
extern void T1804f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class_type */
extern void T1803f5(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_class_type_validity */
extern void T1803f12(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class_type */
extern void T1240f16(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_class_type */
extern void T1240f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_2 */
extern void T93f117(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T2580c19(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.make */
extern T0* T2581c22(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_1 */
extern void T93f116(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.position */
extern T0* T2581f13(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_position */
extern T0* T94f1467(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.tokens */
extern T0* T2581f20(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.current_universe */
extern T0* T1240f5(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1239f15(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class_type */
extern void T1238f10(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_class_type_validity */
extern void T1238f11(GE_context* ac, T0* C, T0* a1);
extern T1 T1238f11ot1(T0* a1, T0** a2);
extern T1 T1238f11ot2(T0* a1, T0** a2);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].force_last */
extern void T1237f50(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].resize */
extern void T1237f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].clashes_resize */
extern void T1237f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].special_integer_ */
extern T0* T1237f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].key_storage_resize */
extern void T1237f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].item_storage_resize */
extern void T1237f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].slots_resize */
extern void T1237f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].new_capacity */
extern T6 T1237f30(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT_CHECKER3.error_handler */
extern T0* T1238f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.set_fatal_error */
extern void T1238f12(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class_type */
extern void T1233f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_class_type_constraint */
extern void T1233f13(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg3a_error */
extern void T53f484(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vtcg3a */
extern T0* T1418c1029(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T53f156(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg3a_error */
extern void T36f483(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T36f155(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.error_handler */
extern T0* T1233f7(GE_context* ac, T0* C);
/* ET_CLASS.resolve_unfolded_tuple_actual_parameters_2 */
extern void T95f304(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_CHECKER2.set_fatal_error */
extern void T1233f14(GE_context* ac, T0* C);
/* ET_CLASS.resolve_unfolded_tuple_actual_parameters_1 */
extern void T95f303(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.current_universe */
extern T0* T1233f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.process_class_type */
extern void T1232f11(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_class_type_validity */
extern void T1232f12(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.error_handler */
extern T0* T1232f8(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.current_system */
extern T0* T1232f7(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.set_fatal_error */
extern void T1232f13(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.current_universe */
extern T0* T1232f6(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.process_class_type */
extern void T1231f23(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_tuple_actual_parameters_unfolded */
extern void T1231f25(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_vtct_validity */
extern void T1231f24(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1230f15(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class_type */
extern void T1229f16(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_class_type */
extern void T1229f18(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.current_universe */
extern T0* T1229f5(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class_type */
extern void T1228f14(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class_type */
extern void T1217f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_class_type_constraint */
extern void T1217f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5a_error */
extern void T53f483(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_gvtcg5a */
extern T0* T1418c1028(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T53f155(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvtcg5a_error */
extern void T36f482(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T36f154(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_reference */
extern T1 T1712f13(GE_context* ac, T0* C);
/* ET_KEYWORD.is_reference */
extern T1 T539f12(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_reference */
extern T1 T1243f11(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5b_error */
extern void T53f482(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_gvtcg5b */
extern T0* T1418c1027(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_gvtcg5b_error */
extern void T36f481(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_expanded */
extern T1 T1712f12(GE_context* ac, T0* C);
/* ET_KEYWORD.is_expanded */
extern T1 T539f11(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_expanded */
extern T1 T1243f10(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtug2a_error */
extern void T53f481(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug2a */
extern T0* T1418c1026(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T53f154(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug2a_error */
extern void T36f480(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T36f153(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtug1a_error */
extern void T53f480(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug1a */
extern T0* T1418c1025(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T53f153(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug1a_error */
extern void T36f479(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T36f152(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class_type */
extern void T1216f10(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_class_type_validity */
extern void T1216f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.current_universe */
extern T0* T1216f7(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.process_class_type */
extern void T510f29(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_class_type_validity */
extern void T510f30(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.current_universe */
extern T0* T510f15(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_qualified_call_instruction */
extern void T1235f26(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_qualified_call_instruction */
extern void T505f179(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_instruction */
extern void T91f218(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_qualified_call_instruction */
extern void T84f1266(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter */
extern void T1806f16(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter */
extern void T1805f17(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter */
extern void T1804f15(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter */
extern void T1803f16(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter */
extern void T1240f19(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1239f23(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter */
extern void T1238f20(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter */
extern void T1233f15(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter */
extern void T1232f22(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter */
extern void T1231f32(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1230f22(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter */
extern void T1229f19(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter */
extern void T1228f22(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter */
extern void T1217f19(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter */
extern void T1216f23(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter */
extern void T510f38(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_constrained_formal_parameter */
extern void T1806f17(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_constrained_formal_parameter */
extern void T1805f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_constrained_formal_parameter */
extern void T1804f16(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_constrained_formal_parameter */
extern void T1803f17(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_constrained_formal_parameter */
extern void T1240f20(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1239f24(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_constrained_formal_parameter */
extern void T1238f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_constrained_formal_parameter */
extern void T1233f22(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_constrained_formal_parameter */
extern void T1232f23(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_constrained_formal_parameter */
extern void T1231f33(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1230f23(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_constrained_formal_parameter */
extern void T1229f20(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_constrained_formal_parameter */
extern void T1228f23(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_constrained_formal_parameter */
extern void T1217f26(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_constrained_formal_parameter */
extern void T1216f24(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T510f39(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_retry_instruction */
extern void T1235f84(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_retry_instruction */
extern void T505f360(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_retry_instruction_validity */
extern void T505f377(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vxrt0a_error */
extern void T53f492(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vxrt0a */
extern T0* T1418c1036(GE_context* ac, T0* a1, T0* a2);
/* ET_RETRY_INSTRUCTION.position */
extern T0* T2061f9(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T53f160(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vxrt0a_error */
extern void T36f491(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T36f159(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_retry_instruction */
extern void T91f219(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_retry_instruction_validity */
extern void T91f235(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_retry_instruction */
extern void T84f1267(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_retry_instruction */
extern void T84f1283(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assigner_instruction */
extern void T1235f85(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assigner_instruction */
extern void T505f361(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assigner_instruction_validity */
extern void T505f378(GE_context* ac, T0* C, T0* a1);
extern T1 T505f378ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_tuple_label_setter */
extern void T505f394(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vbac1a_error */
extern void T53f494(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vbac1a */
extern T0* T1418c1038(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T53f162(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac1a_error */
extern void T36f493(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T36f161(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_source */
extern void T2100f19(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac2a_error */
extern void T53f493(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vbac2a */
extern T0* T1418c1037(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T53f161(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac2a_error */
extern void T36f492(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T36f160(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_name */
extern void T2100f18(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expressions_validity */
extern void T505f393(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assigner_instruction */
extern void T91f220(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assigner_instruction_validity */
extern void T91f236(GE_context* ac, T0* C, T0* a1);
extern T1 T91f236ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_setter */
extern void T91f258(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expressions_validity */
extern void T91f256(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_assigner_instruction */
extern void T84f1268(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assigner_instruction */
extern void T84f1284(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment */
extern void T1235f86(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment */
extern void T505f362(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_validity */
extern void T505f379(GE_context* ac, T0* C, T0* a1);
extern T1 T505f379ot1(T0* a1);
extern T1 T505f379ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_assignment */
extern void T505f396(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_name */
extern void T523f18(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_attribute */
extern void T523f25(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_formal_argument */
extern void T523f24(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_local_variable */
extern void T523f23(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_result */
extern void T523f17(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vjar0a_error */
extern void T53f495(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0a */
extern T0* T1418c1039(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vjar_error */
extern T1 T53f163(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjar0a_error */
extern void T36f494(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vjar_error */
extern T1 T36f162(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT.set_source */
extern void T2101f8(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_writable_validity */
extern void T505f395(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T505f395ot1(T0* a1, T0** a2);
extern T1 T505f395ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_veen0a_error */
extern void T53f507(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0a */
extern T0* T1418c1051(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen_error */
extern T1 T53f168(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen0a_error */
extern void T36f506(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen_error */
extern T1 T36f167(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen0b_error */
extern void T53f506(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0b */
extern T0* T1418c1050(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen0b_error */
extern void T36f505(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0b_error */
extern void T53f505(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0b */
extern T0* T1418c1049(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T53f167(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjaw0b_error */
extern void T36f504(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T36f166(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjaw0c_error */
extern void T53f504(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0c */
extern T0* T1418c1048(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0c_error */
extern void T36f503(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_attribute_assignment_target */
extern void T505f410(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vucr0c_error */
extern void T53f503(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0c */
extern T0* T1418c1047(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vucr0c_error */
extern void T36f502(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vjaw0a_error */
extern void T53f502(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0a */
extern T0* T1418c1046(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0a_error */
extern void T36f501(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_assignment_target */
extern void T505f409(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result_assignment_target */
extern void T505f408(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment */
extern void T91f221(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_validity */
extern void T91f237(GE_context* ac, T0* C, T0* a1);
extern T1 T91f237ot1(T0* a1);
extern T1 T91f237ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment */
extern void T91f261(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_dynamic_types */
extern void T91f340(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_writable_validity */
extern void T91f260(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f260ot1(T0* a1, T0** a2);
extern T1 T91f260ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_assignment_target */
extern void T91f339(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_assignment_target */
extern void T91f338(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_assignment_target */
extern void T91f337(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_assignment */
extern void T84f1269(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment */
extern void T84f1285(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_result */
extern T1 T232f93(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_assignment_attempt */
extern void T1235f87(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment_attempt */
extern void T505f363(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_attempt_validity */
extern void T505f380(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment_attempt */
extern void T505f397(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjrv0a_error */
extern void T53f496(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vjrv0a */
extern T0* T1418c1040(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T53f164(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjrv0a_error */
extern void T36f495(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T36f163(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference */
extern T1 T517f49(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.newer_or_same_ise_version */
extern T1 T81f47(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.newer_or_same_ise_version */
extern T1 T87f49(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_5_7_0 */
extern T0* T505f60(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment_attempt */
extern void T91f222(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_attempt_validity */
extern void T91f238(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment_attempt */
extern void T91f262(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_attempt_dynamic_types */
extern void T91f341(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_5_7_0 */
extern T0* T91f75(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_assignment_attempt */
extern void T84f1270(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment_attempt */
extern void T84f1286(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_instruction */
extern void T1235f88(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_loop_instruction */
extern void T505f364(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_instruction_validity */
extern void T505f381(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_component_no_from_validity */
extern void T505f398(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_loop_instruction */
extern void T91f223(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_instruction_validity */
extern void T91f239(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_component_no_from_validity */
extern void T91f263(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_loop_instruction */
extern void T84f1271(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_loop_instruction */
extern void T84f1287(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bang_instruction */
extern void T1235f89(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bang_instruction */
extern void T505f365(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bang_instruction_validity */
extern void T505f382(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_instruction_validity */
extern void T505f399(GE_context* ac, T0* C, T0* a1);
extern T1 T505f399ot1(T0* a1, T0** a2);
extern T1 T505f399ot2(T0* a1, T0** a2);
extern T1 T505f399ot3(T0* a1, T0** a2);
extern T1 T505f399ot4(T0* a1, T0** a2);
extern T1 T505f399ot5(T0* a1);
extern T1 T505f399ot6(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_creation_instruction */
extern void T505f411(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6e_error */
extern void T53f513(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6e */
extern T0* T1418c1057(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc6e_error */
extern void T36f512(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc8b_error */
extern void T53f512(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8b */
extern T0* T1418c1056(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vgcc8b_error */
extern void T36f511(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vgcc1b_error */
extern void T53f511(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc1b */
extern T0* T1418c1055(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.position */
extern T0* T2107f11(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.position */
extern T0* T2106f10(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vgcc1b_error */
extern void T36f510(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc5b_error */
extern void T53f510(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5b */
extern T0* T1418c1054(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc5b_error */
extern void T36f509(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.is_type_valid */
extern T1 T505f62(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.set_class_interface_error_only */
extern void T510f40(GE_context* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc3a_error */
extern void T53f509(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc3a */
extern T0* T1418c1053(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T53f169(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc3a_error */
extern void T36f508(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T36f168(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc6d_error */
extern void T53f508(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6d */
extern T0* T1418c1052(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6d_error */
extern void T36f507(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.first */
extern T0* T517f50(GE_context* ac, T0* C);
/* ET_CREATE_INSTRUCTION.last_position */
extern T0* T2107f8(GE_context* ac, T0* C);
/* ET_CREATE_INSTRUCTION.last_leaf */
extern T0* T2107f10(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.last_leaf */
extern T0* T445f4(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T2487f12(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T391f12(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.last_position */
extern T0* T2106f7(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.last_leaf */
extern T0* T2106f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bang_instruction */
extern void T91f224(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bang_instruction_validity */
extern void T91f240(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_instruction_validity */
extern void T91f264(GE_context* ac, T0* C, T0* a1);
extern T1 T91f264ot1(T0* a1, T0** a2);
extern T1 T91f264ot2(T0* a1, T0** a2);
extern T1 T91f264ot3(T0* a1, T0** a2);
extern T1 T91f264ot4(T0* a1, T0** a2);
extern T1 T91f264ot5(T0* a1);
extern T1 T91f264ot6(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_instruction */
extern void T91f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_creation_dynamic_type */
extern void T91f416(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATE_INSTRUCTION.arguments */
extern T0* T2107f9(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.arguments */
extern T0* T2106f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.is_type_valid */
extern T1 T91f83(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_bang_instruction */
extern void T84f1272(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bang_instruction */
extern void T84f1288(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_instruction */
extern void T84f1299(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_instruction */
extern void T1235f90(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_instruction */
extern void T505f366(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_instruction_validity */
extern void T505f383(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_instruction */
extern void T91f225(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_instruction_validity */
extern void T91f241(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_create_instruction */
extern void T84f1273(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_instruction */
extern void T84f1289(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_if_instruction */
extern void T1235f91(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part_list */
extern void T1235f103(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART.process */
extern void T1675f6(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part */
extern void T1235f111(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.item */
extern T0* T2110f4(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_if_instruction */
extern void T505f367(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_instruction_validity */
extern void T505f384(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_instruction */
extern void T91f226(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_instruction_validity */
extern void T91f242(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_if_instruction */
extern void T84f1274(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_instruction */
extern void T84f1290(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inspect_instruction */
extern void T1235f92(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part_list */
extern void T1235f104(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part */
extern void T1235f105(GE_context* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.item */
extern T0* T2114f4(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_inspect_instruction */
extern void T505f368(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_instruction_validity */
extern void T505f385(GE_context* ac, T0* C, T0* a1);
extern T1 T505f385ot1(T0* a1, T0** a2);
extern T1 T505f385ot2(T0* a1, T0** a2);
extern T1 T505f385ot3(T0* a1, T0** a2);
extern T1 T505f385ot4(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vomb2a_error */
extern void T53f499(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vomb2a */
extern T0* T1418c1043(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T53f166(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2a_error */
extern void T36f498(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T36f165(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vomb2b_error */
extern void T53f498(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vomb2b */
extern T0* T1418c1042(GE_context* ac, T0* a1, T0* a2, T0* a3);
extern T1 T1418f1042ot1(T0* a1, T0** a2);
extern T1 T1418f1042ot2(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vomb2b_error */
extern void T36f497(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.choice_constant */
extern T0* T505f61(GE_context* ac, T0* C, T0* a1);
extern T1 T505f61ot1(T0* a1, T0** a2);
extern T1 T505f61ot2(T0* a1, T0** a2);
extern T1 T505f61ot3(T0* a1, T0** a2);
extern T1 T505f61ot4(T0* a1, T0** a2);
extern T1 T505f61ot5(T0* a1, T0** a2);
extern T1 T505f61ot6(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.integer_choice_constant */
extern T0* T505f64(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.character_choice_constant */
extern T0* T505f63(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.arguments_count */
extern T6 T397f23(GE_context* ac, T0* C);
/* ET_IDENTIFIER.arguments_count */
extern T6 T232f105(GE_context* ac, T0* C);
/* ET_IDENTIFIER.arguments */
extern T0* T232f109(GE_context* ac, T0* C);
/* ET_CHOICE_LIST.choice */
extern T0* T2115f6(GE_context* ac, T0* C, T6 a1);
/* ET_CHOICE_LIST.item */
extern T0* T2115f7(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vomb1a_error */
extern void T53f497(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vomb1a */
extern T0* T1418c1041(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T53f165(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb1a_error */
extern void T36f496(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T36f164(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_instruction */
extern void T91f227(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_instruction_validity */
extern void T91f243(GE_context* ac, T0* C, T0* a1);
extern T1 T91f243ot1(T0* a1, T0** a2);
extern T1 T91f243ot2(T0* a1, T0** a2);
extern T1 T91f243ot3(T0* a1, T0** a2);
extern T1 T91f243ot4(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.choice_constant */
extern T0* T91f76(GE_context* ac, T0* C, T0* a1);
extern T1 T91f76ot1(T0* a1, T0** a2);
extern T1 T91f76ot2(T0* a1, T0** a2);
extern T1 T91f76ot3(T0* a1, T0** a2);
extern T1 T91f76ot4(T0* a1, T0** a2);
extern T1 T91f76ot5(T0* a1, T0** a2);
extern T1 T91f76ot6(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.integer_choice_constant */
extern T0* T91f88(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.character_choice_constant */
extern T0* T91f87(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_inspect_instruction */
extern void T84f1275(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_instruction */
extern void T84f1291(GE_context* ac, T0* C, T0* a1);
extern T1 T84f1291ot1(T0* a1, T0** a2);
extern T1 T84f1291ot2(T0* a1, T0** a2);
extern T1 T84f1291ot3(T0* a1, T0** a2);
extern T1 T84f1291ot4(T0* a1, T0** a2);
extern T1 T84f1291ot5(T0* a1, T0** a2);
extern T1 T84f1291ot6(T0* a1, T0** a2);
/* INTEGER_32.abs */
extern T6 T6f31(GE_context* ac, T6* C);
/* INTEGER_32.abs_ref */
extern T6 T6f32(GE_context* ac, T6* C);
/* ET_C_GENERATOR.choice_constant */
extern T0* T84f497(GE_context* ac, T0* C, T0* a1);
extern T1 T84f497ot1(T0* a1, T0** a2);
extern T1 T84f497ot2(T0* a1, T0** a2);
extern T1 T84f497ot3(T0* a1, T0** a2);
extern T1 T84f497ot4(T0* a1, T0** a2);
extern T1 T84f497ot5(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_debug_instruction */
extern void T1235f93(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_debug_instruction */
extern void T505f369(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_debug_instruction_validity */
extern void T505f386(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_debug_instruction */
extern void T91f228(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T91f244(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T91f244p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_debug_instruction */
extern void T84f1276(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_debug_instruction */
extern void T84f1292(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_instruction */
extern void T1235f94(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_instruction */
extern void T505f370(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_instruction_validity */
extern void T505f387(GE_context* ac, T0* C, T0* a1);
extern T1 T505f387ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_precursor_procedure_instruction_validity */
extern void T505f400(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].force_last */
extern void T1248f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].slots_put */
extern void T1248f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].clashes_put */
extern void T1248f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].slots_item */
extern T6 T1248f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].hash_position */
extern T6 T1248f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].resize */
extern void T1248f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].clashes_resize */
extern void T1248f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].special_integer_ */
extern T0* T1248f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].key_storage_resize */
extern void T1248f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].item_storage_resize */
extern void T1248f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].key_storage_item */
extern T0* T1248f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].slots_resize */
extern void T1248f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].new_capacity */
extern T6 T1248f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].item_storage_put */
extern void T1248f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].search_position */
extern void T1248f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].key_equality_tester */
extern T0* T1248f30(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_precursor_instruction */
extern void T505f412(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr1a_error */
extern void T53f500(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1a */
extern T0* T1418c1044(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vdpr1a_error */
extern void T36f499(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_instruction */
extern void T91f229(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_instruction_validity */
extern void T91f245(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_procedure_instruction_validity */
extern void T91f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_instruction */
extern void T91f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_precursor_instruction */
extern void T84f1277(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_instruction */
extern void T84f1293(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_instruction */
extern void T1235f95(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_instruction */
extern void T505f371(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_instruction_validity */
extern void T505f388(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_procedure_call_instruction_validity */
extern void T505f402(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_static_call_instruction */
extern void T505f413(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_dotnet_procedure_call_instruction_validity */
extern void T505f401(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_instruction */
extern void T91f230(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_instruction_validity */
extern void T91f246(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_procedure_call_instruction_validity */
extern void T91f268(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_instruction */
extern void T91f353(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_procedure_call_instruction_validity */
extern void T91f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_instruction */
extern void T84f1278(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_instruction */
extern void T84f1294(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_instruction_static_call */
extern void T84f1300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_check_instruction */
extern void T1235f97(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.assertion */
extern T0* T2155f8(GE_context* ac, T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.item */
extern T0* T2155f9(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_check_instruction */
extern void T505f372(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_check_instruction_validity */
extern void T505f389(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.set_code_unreachable */
extern void T523f19(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_check_instruction */
extern void T91f231(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T91f247(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T91f247p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_check_instruction */
extern void T84f1279(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_check_instruction */
extern void T84f1295(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_across_instruction */
extern void T1235f98(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_across_instruction */
extern void T505f373(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_instruction_validity */
extern void T505f390(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_instruction */
extern void T91f232(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_instruction_validity */
extern void T91f248(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_across_instruction */
extern void T84f1280(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_instruction */
extern void T84f1296(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unqualified_call_instruction */
extern void T1235f99(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unqualified_call_instruction */
extern void T505f374(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_instruction_validity */
extern void T505f391(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn1c_error */
extern void T53f501(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1c */
extern T0* T1418c1045(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vkcn1c_error */
extern void T36f500(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_instruction_validity */
extern void T505f407(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_unqualified_call_instruction */
extern void T505f414(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_instruction_validity */
extern void T505f406(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuio0c_error */
extern void T53f523(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0c */
extern T0* T1418c1067(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T53f173(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuio0c_error */
extern void T36f522(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T36f172(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuio0a_error */
extern void T53f522(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0a */
extern T0* T1418c1066(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuio0a_error */
extern void T36f521(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuio0b_error */
extern void T53f521(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0b */
extern T0* T1418c1065(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuio0b_error */
extern void T36f520(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_across_cursor_call_instruction_validity */
extern void T505f405(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuic0c_error */
extern void T53f520(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0c */
extern T0* T1418c1064(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T53f172(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuic0c_error */
extern void T36f519(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T36f171(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuic0a_error */
extern void T53f519(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0a */
extern T0* T1418c1063(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuic0a_error */
extern void T36f518(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuic0b_error */
extern void T53f518(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0b */
extern T0* T1418c1062(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuic0b_error */
extern void T36f517(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_local_variable_call_instruction_validity */
extern void T505f404(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuil0a_error */
extern void T53f517(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0a */
extern T0* T1418c1061(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T53f171(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuil0a_error */
extern void T36f516(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T36f170(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuil0b_error */
extern void T53f516(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0b */
extern T0* T1418c1060(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuil0b_error */
extern void T36f515(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_instruction_validity */
extern void T505f403(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuia0a_error */
extern void T53f515(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0a */
extern T0* T1418c1059(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T53f170(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuia0a_error */
extern void T36f514(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T36f169(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuia0b_error */
extern void T53f514(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0b */
extern T0* T1418c1058(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuia0b_error */
extern void T36f513(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_instruction */
extern void T91f233(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_instruction_validity */
extern void T91f249(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_instruction_validity */
extern void T91f275(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_instruction */
extern void T91f361(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f361ot1(T0* a1, T0** a2);
extern T1 T91f361ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_instruction_validity */
extern void T91f274(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_across_cursor_call_instruction_validity */
extern void T91f273(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_instruction_validity */
extern void T91f272(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_instruction_validity */
extern void T91f271(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_unqualified_call_instruction */
extern void T84f1281(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_instruction */
extern void T84f1297(GE_context* ac, T0* C, T0* a1);
extern T1 T84f1297ot1(T0* a1, T0** a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T2157f4(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_infix_cast_expression */
extern void T1235f101(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_infix_cast_expression */
extern void T524f58(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_cast_expression */
extern void T520f64(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_cast_expression */
extern void T505f375(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_cast_expression_validity */
extern void T505f392(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_cast_expression */
extern void T91f437(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_cast_expression_validity */
extern void T91f477(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_cast_expression */
extern void T84f1282(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_cast_expression */
extern void T84f1298(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_builtin_expression */
extern void T1235f112(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T524f59(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T520f65(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_builtin_expression */
extern void T505f415(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_builtin_expression_validity */
extern void T505f418(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_builtin_expression */
extern void T91f518(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_builtin_expression_validity */
extern void T91f521(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_builtin_expression */
extern void T84f1301(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_builtin_expression */
extern void T84f1304(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_from_expression */
extern void T1235f113(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_from_expression */
extern void T524f60(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_from_expression */
extern void T520f66(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_from_expression */
extern void T505f416(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_from_expression_validity */
extern void T505f419(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_from_expression */
extern void T91f519(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_from_expression_validity */
extern void T91f522(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_from_expression */
extern void T84f1302(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_from_expression */
extern void T84f1305(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_to_expression */
extern void T1235f114(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_to_expression */
extern void T524f61(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_to_expression */
extern void T520f67(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_to_expression */
extern void T505f417(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_to_expression_validity */
extern void T505f420(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_to_expression */
extern void T91f520(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_to_expression_validity */
extern void T91f523(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_to_expression */
extern void T84f1303(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_to_expression */
extern void T84f1306(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_NAME.set_seed */
extern void T2085f103(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_FREE_NAME.set_seed */
extern void T2084f71(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_NAME.set_seed */
extern void T2083f89(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_FREE_NAME.set_seed */
extern void T1533f70(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_seed */
extern void T232f113(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_NAME.reset */
extern void T2085f102(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.reset */
extern void T2084f70(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.reset */
extern void T2083f88(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.reset */
extern void T1533f71(GE_context* ac, T0* C);
/* ET_IDENTIFIER.reset */
extern void T232f127(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_frozen_keyword */
extern void T2081f82(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_frozen_keyword */
extern void T2080f85(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_frozen_keyword */
extern void T2079f83(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_frozen_keyword */
extern void T496f79(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_frozen_keyword */
extern void T494f83(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_frozen_keyword */
extern void T492f82(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_frozen_keyword */
extern void T454f82(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_frozen_keyword */
extern void T344f91(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_object_tests */
extern void T2081f80(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_object_tests */
extern void T2080f83(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_object_tests */
extern void T2079f81(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_object_tests */
extern void T496f77(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_object_tests */
extern void T494f81(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_object_tests */
extern void T492f80(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_object_tests */
extern void T454f80(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_object_tests */
extern void T344f89(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_across_components */
extern void T2081f81(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_across_components */
extern void T2080f84(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_across_components */
extern void T2079f82(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_across_components */
extern void T496f78(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_across_components */
extern void T494f82(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_across_components */
extern void T492f81(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_across_components */
extern void T454f81(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_across_components */
extern void T344f90(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_frozen_keyword */
extern void T2152f89(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_frozen_keyword */
extern void T2082f84(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_frozen_keyword */
extern void T596f83(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_frozen_keyword */
extern void T592f84(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_object_tests */
extern void T2152f87(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_object_tests */
extern void T2082f82(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_object_tests */
extern void T596f81(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_object_tests */
extern void T592f82(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_across_components */
extern void T2152f88(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_across_components */
extern void T2082f83(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_across_components */
extern void T596f82(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_across_components */
extern void T592f83(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_id */
extern void T587f64(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_id */
extern void T586f64(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_id */
extern void T434f62(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_id */
extern void T412f62(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.set_id */
extern void T320f60(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_hash_code */
extern void T587f55(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_hash_code */
extern void T586f55(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_hash_code */
extern void T434f53(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_hash_code */
extern void T412f53(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.set_hash_code */
extern void T320f52(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_next_type */
extern void T587f56(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_next_type */
extern void T586f56(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_next_type */
extern void T434f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_next_type */
extern void T412f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_next_type */
extern void T320f53(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_attribute_position */
extern void T587f65(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_FEATURE_LIST.put */
extern void T414f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_FEATURE_LIST.index_of */
extern T6 T414f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_attribute_position */
extern void T586f65(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_SPECIAL_TYPE.set_attribute_position */
extern void T434f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TUPLE_TYPE.set_attribute_position */
extern void T412f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TYPE.set_attribute_position */
extern void T320f61(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_FUNCTION_TYPE.set_alive */
extern void T587f53(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_alive */
extern void T586f53(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_alive */
extern void T434f51(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_alive */
extern void T412f51(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.set_alive */
extern void T320f50(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_meta_type */
extern void T587f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_meta_type */
extern void T586f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_meta_type */
extern void T434f52(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_meta_type */
extern void T412f52(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_meta_type */
extern void T320f51(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.use_all_attributes */
extern void T587f67(GE_context* ac, T0* C, T0* a1);
extern T1 T587f67ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.use_all_attributes */
extern void T586f67(GE_context* ac, T0* C, T0* a1);
extern T1 T586f67ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_SPECIAL_TYPE.use_all_attributes */
extern void T434f64(GE_context* ac, T0* C, T0* a1);
extern T1 T434f64ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_TUPLE_TYPE.use_all_attributes */
extern void T412f64(GE_context* ac, T0* C, T0* a1);
extern T1 T412f64ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_TYPE.use_all_attributes */
extern void T320f62(GE_context* ac, T0* C, T0* a1);
extern T1 T320f62ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_FUNCTION_TYPE.set_static */
extern void T587f68(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_static */
extern void T586f68(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_static */
extern void T434f65(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_static */
extern void T412f65(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_TYPE.set_static */
extern void T320f63(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_equality_expression */
extern void T587f70(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.set_next */
extern void T2675f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_equality_expression */
extern void T586f70(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_equality_expression */
extern void T434f67(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_equality_expression */
extern void T412f67(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_equality_expression */
extern void T320f65(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_object_equality_expression */
extern void T587f71(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.set_next */
extern void T2676f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_object_equality_expression */
extern void T586f71(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_object_equality_expression */
extern void T434f68(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_object_equality_expression */
extern void T412f68(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_object_equality_expression */
extern void T320f66(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_target */
extern void T587f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_target */
extern void T586f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_target */
extern void T434f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_target */
extern void T412f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_target */
extern void T320f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure_call */
extern void T587f69(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure_call */
extern void T586f69(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure_call */
extern void T434f66(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure_call */
extern void T412f66(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_procedure_call */
extern void T320f64(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_query_call */
extern void T587f58(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_query_call */
extern void T586f58(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_query_call */
extern void T434f56(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_query_call */
extern void T412f56(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_query_call */
extern void T320f56(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.export_classes */
extern void T311f195(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].key */
extern T0* T828f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].cursor_key */
extern T0* T314f35(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.actual_intrinsic_class */
extern T0* T672f38(GE_context* ac, T0* C);
/* ET_CLASS.actual_intrinsic_class */
extern T0* T95f194(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.export_classes */
extern void T290f181(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.export_classes */
extern void T267f39(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_ecf_namespace */
extern void T236f122(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_ecf_namespace */
extern void T233f13(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_ecf_namespace */
extern void T69f161(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_ecf_version */
extern void T236f123(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_ecf_version */
extern void T233f14(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_ecf_version */
extern void T69f162(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_description */
extern void T236f124(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_description */
extern void T233f15(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_description */
extern void T69f163(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_notes */
extern void T236f125(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_notes */
extern void T233f16(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_notes */
extern void T69f164(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_targets */
extern void T236f126(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_targets */
extern void T233f17(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_targets */
extern void T69f165(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_read_only */
extern void T236f127(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM_CONFIG.set_read_only */
extern void T233f18(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_read_only */
extern void T69f166(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_uuid */
extern void T236f128(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_uuid */
extern void T233f19(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_uuid */
extern void T69f167(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_library_target */
extern void T236f129(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_library_target */
extern void T233f20(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_library_target */
extern void T69f168(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start */
extern void T635f2(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start */
extern void T632f28(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start */
extern void T194f14(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T193f9(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T193f9p1(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.on_comment */
extern void T635f4(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_comment */
extern void T632f30(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_comment */
extern void T194f16(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.handle_position */
extern void T194f24(GE_context* ac, T0* C, T0* a1);
/* XM_POSITION_TABLE.put */
extern void T637f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].put_last */
extern void T1779f8(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].put_right */
extern void T2287f4(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].make */
extern T0* T2287c3(GE_context* ac, T0* a1);
/* [attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE].make */
extern T0* T1780c3(GE_context* ac, T0* a1, T0* a2);
/* XM_COMMENT.make_last_in_document */
extern T0* T2002c4(GE_context* ac, T0* a1, T0* a2);
/* XM_COMMENT.make_last */
extern T0* T2002c3(GE_context* ac, T0* a1, T0* a2);
/* XM_ELEMENT.force_last */
extern void T189f27(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].force_last */
extern void T1542f13(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].force_last */
extern void T1542f13p1(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] XM_ELEMENT_NODE].make */
extern T0* T2407c3(GE_context* ac, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].before_addition */
extern void T1542f18(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.before_addition */
extern void T189f29(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.last */
extern T0* T189f19(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].last */
extern T0* T1542f8(GE_context* ac, T0* C);
/* XM_ELEMENT.is_empty */
extern T1 T189f18(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].is_empty */
extern T1 T1542f7(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T193f11(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T193f11p1(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_processing_instruction */
extern void T635f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.on_processing_instruction */
extern void T632f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.on_processing_instruction */
extern void T194f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_PROCESSING_INSTRUCTION.make_last_in_document */
extern T0* T2003c5(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_PROCESSING_INSTRUCTION.make_last */
extern T0* T2003c4(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T193f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T193f12p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_NULL.on_content */
extern void T635f6(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_content */
extern void T632f32(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_content */
extern void T194f18(GE_context* ac, T0* C, T0* a1);
/* XM_CHARACTER_DATA.make_last */
extern T0* T2004c3(GE_context* ac, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T193f13(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T193f13p1(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start_tag */
extern void T635f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_start_tag */
extern void T632f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.push */
extern void T1773f12(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].force_last */
extern void T2282f10(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].put_right */
extern void T2551f5(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].attach_left */
extern void T2551f6(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].make */
extern T0* T2551c4(GE_context* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.new_string_string_table */
extern T0* T1773f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].set_equality_tester */
extern void T57f105(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.string_equality_tester */
extern T0* T1773f9(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag */
extern void T194f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_root */
extern T0* T189c26(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_DOCUMENT.set_root_element */
extern void T188f15(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.remove_previous_root_element */
extern void T188f16(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].go_after */
extern void T2001f14(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].cursor_go_after */
extern void T1540f28(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.make_last */
extern T0* T189c25(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.new_namespace */
extern T0* T194f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].force_last */
extern void T638f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].slots_put */
extern void T638f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].clashes_put */
extern void T638f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].slots_item */
extern T6 T638f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].hash_position */
extern T6 T638f20(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE.hash_code */
extern T6 T583f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].resize */
extern void T638f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].clashes_resize */
extern void T638f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].special_integer_ */
extern T0* T638f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].key_storage_resize */
extern void T638f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].item_storage_resize */
extern void T638f46(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE].aliased_resized_area */
extern T0* T1785f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] XM_NAMESPACE].aliased_resized_area */
extern T0* T1786f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].key_storage_item */
extern T0* T638f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].item_storage_item */
extern T0* T638f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].clashes_item */
extern T6 T638f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].slots_resize */
extern void T638f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].new_capacity */
extern T6 T638f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].item_storage_put */
extern void T638f41(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE].force */
extern void T1785f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_NAMESPACE].fill_with */
extern void T1786f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_NAMESPACE].extend */
extern void T1786f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].search_position */
extern void T638f40(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_EQUALITY_TESTER [[attached] XM_NAMESPACE].test */
extern T1 T1783f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].key_equality_tester */
extern T0* T638f25(GE_context* ac, T0* C);
/* XM_NAMESPACE.same_prefix */
extern T1 T583f5(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].item */
extern T0* T638f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].has */
extern T1 T638f30(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T193f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T193f14p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_end_tag */
extern void T635f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T632f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.pop */
extern void T1773f11(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].remove_last */
extern void T2282f9(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].set_last_cell */
extern void T2282f14(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].forget_right */
extern void T2551f7(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].move_last_cursors_after */
extern void T2282f13(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].set_next_cursor */
extern void T2283f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].set_after */
extern void T2283f12(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].wipe_out */
extern void T2282f12(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].move_all_cursors_after */
extern void T2282f15(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve_default */
extern T0* T1773f3(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_pseudo_prefix */
extern T0* T1773f7(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T632f34p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve */
extern T0* T1773f2(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].back */
extern void T2283f11(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].cursor_back */
extern void T2282f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].add_traversing_cursor */
extern void T2282f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].remove_traversing_cursor */
extern void T2282f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].set */
extern void T2283f14(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].go_before */
extern void T2283f10(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].cursor_go_before */
extern void T2282f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].set_before */
extern void T2283f15(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].cursor_off */
extern T1 T2282f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].off */
extern T1 T2283f7(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].item */
extern T0* T2283f6(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].finish */
extern void T2283f9(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].cursor_finish */
extern void T2282f16(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_namespace */
extern T0* T1773f6(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.has_prefix */
extern T1 T632f10(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_end_tag */
extern void T194f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.parent_element */
extern T0* T189f16(GE_context* ac, T0* C);
extern T1 T189f16ot1(T0* a1, T0** a2);
/* XM_ELEMENT.is_root_node */
extern T1 T189f17(GE_context* ac, T0* C);
/* XM_DOCUMENT.is_root_node */
extern T1 T188f8(GE_context* ac, T0* C);
/* XM_DOCUMENT.parent */
extern T0* T188f9(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T193f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T193f16p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_attribute */
extern void T635f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER.on_attribute */
extern void T632f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add */
extern void T1773f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].force_new */
extern void T57f106(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].last */
extern T0* T2282f5(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.shallow_has */
extern T1 T1773f4(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.attributes_force */
extern void T632f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_LINKED_QUEUE [[attached] STRING_8].force */
extern void T1777f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_QUEUE [detachable STRING_8].force */
extern void T1776f7(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [detachable STRING_8].put_right */
extern void T2285f4(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [detachable STRING_8].make */
extern T0* T2285c3(GE_context* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add_default */
extern void T1773f13(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.is_xmlns */
extern T1 T632f9(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.same_string */
extern T1 T632f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.string_equality_tester */
extern T0* T632f26(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns */
extern T0* T632f22(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_attribute */
extern void T194f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_ATTRIBUTE.make_last */
extern T0* T245c5(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T193f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T193f18p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_CALLBACKS_NULL.on_finish */
extern void T635f3(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_finish */
extern void T632f29(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_finish */
extern void T194f15(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T193f10(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T193f10p1(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.on_start_tag_finish */
extern void T635f7(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T632f33(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T632f33p1(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.string_ */
extern T0* T632f14(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_delayed_attributes */
extern void T632f40(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_remove */
extern void T632f44(GE_context* ac, T0* C);
/* [attached] DS_LINKED_QUEUE [[attached] STRING_8].remove */
extern void T1777f7(GE_context* ac, T0* C);
/* [attached] DS_LINKED_QUEUE [[attached] STRING_8].wipe_out */
extern void T1777f8(GE_context* ac, T0* C);
/* [attached] DS_LINKED_QUEUE [detachable STRING_8].remove */
extern void T1776f8(GE_context* ac, T0* C);
/* [attached] DS_LINKED_QUEUE [detachable STRING_8].wipe_out */
extern void T1776f9(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.unprefixed_attribute_namespace */
extern T0* T632f19(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.default_namespace */
extern T0* T632f25(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns_namespace */
extern T0* T632f18(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xml_prefix_namespace */
extern T0* T632f17(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.is_xml */
extern T1 T632f16(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.xml_prefix */
extern T0* T632f24(GE_context* ac, T0* C);
/* [attached] DS_LINKED_QUEUE [[attached] STRING_8].item */
extern T0* T1777f4(GE_context* ac, T0* C);
/* [attached] DS_LINKED_QUEUE [detachable STRING_8].item */
extern T0* T1776f5(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_is_empty */
extern T1 T632f12(GE_context* ac, T0* C);
/* [attached] DS_LINKED_QUEUE [detachable STRING_8].is_empty */
extern T1 T1776f4(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.has */
extern T1 T1773f5(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag_finish */
extern void T194f20(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T193f15(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T193f15p1(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.on_error */
extern void T635f11(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_error */
extern void T632f37(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_error */
extern void T194f22(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T193f17(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T193f17p1(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_xml_declaration */
extern void T635f12(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.on_xml_declaration */
extern void T632f45(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_xml_declaration */
extern void T194f25(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_STOP_ON_ERROR_FILTER.on_xml_declaration */
extern void T193f19(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.set_next */
extern void T632f42(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.set_next */
extern void T194f13(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.set_next */
extern void T193f8(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.record_occurrence */
extern void T168f25(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.display_help */
extern void T168f26(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.exceptions */
extern T0* T168f17(GE_context* ac, T0* C);
/* AP_ERROR_HANDLER.report_info_message */
extern void T172f11(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_help_text */
extern T0* T168f16(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.full_help_text */
extern T0* T42f35(GE_context* ac, T0* C);
/* AP_PARSER.option_help_text */
extern T0* T42f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_QUICK_SORTER [[attached] AP_OPTION].sort */
extern void T2568f3(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_QUICK_SORTER [[attached] AP_OPTION].sort_with_comparator */
extern void T2568f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_QUICK_SORTER [[attached] AP_OPTION].subsort_with_comparator */
extern void T2568f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].swap */
extern void T169f28(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].replace */
extern void T169f27(GE_context* ac, T0* C, T0* a1, T6 a2);
/* AP_OPTION_COMPARATOR.less_than */
extern T1 T2567f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.three_way_comparison */
extern T6 T38f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* AP_OPTION_COMPARATOR.string_ */
extern T0* T2567f2(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].item */
extern T0* T169f16(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_QUICK_SORTER [[attached] AP_OPTION].make */
extern T0* T2568c2(GE_context* ac, T0* a1);
/* AP_OPTION_COMPARATOR.default_create */
extern T0* T2567c3(GE_context* ac);
/* AP_INTEGER_OPTION.record_occurrence */
extern void T49f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] INTEGER_32].force_last */
extern void T185f10(GE_context* ac, T0* C, T6 a1);
/* AP_BOOLEAN_OPTION.record_occurrence */
extern void T48f32(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.false_strings */
extern T0* T48f22(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].set_equality_tester */
extern void T171f40(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.case_insensitive_string_equality_tester */
extern T0* T48f23(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].has */
extern T1 T171f18(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.true_strings */
extern T0* T48f21(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] BOOLEAN].force_last */
extern void T182f10(GE_context* ac, T0* C, T1 a1);
/* attached DS_LINKABLE [[attached] BOOLEAN].put_right */
extern void T626f4(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] BOOLEAN].make */
extern T0* T626c3(GE_context* ac, T1 a1);
/* AP_ENUMERATION_OPTION.record_occurrence */
extern void T47f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].has */
extern T1 T178f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable STRING_8].force_last */
extern void T176f19(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable STRING_8].force */
extern void T621f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] DS_ARRAYED_LIST [detachable STRING_8].resize */
extern void T176f20(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable STRING_8].aliased_resized_area */
extern T0* T621f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [detachable STRING_8].new_capacity */
extern T6 T176f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable STRING_8].extendible */
extern T1 T176f11(GE_context* ac, T0* C, T6 a1);
/* AP_FLAG.record_occurrence */
extern void T46f24(GE_context* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.record_occurrence */
extern void T44f29(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_line */
extern void T411f32(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.put_line */
extern void T374f6(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_line */
extern void T186f4(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T411f37(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T411f37p1(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T374f10(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T374f10p1(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T186f9(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T186f9p1(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_string */
extern void T411f30(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_put_string */
extern void T411f42(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.file_ps */
extern void T411f49(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_OUTPUT_STREAM.put_string */
extern void T374f8(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.string_ */
extern T0* T374f3(GE_context* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_string */
extern void T186f5(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_new_line */
extern void T411f33(GE_context* ac, T0* C);
/* KL_STRING_OUTPUT_STREAM.put_new_line */
extern void T374f5(GE_context* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_new_line */
extern void T186f7(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.put_character */
extern void T411f31(GE_context* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.old_put_character */
extern void T411f43(GE_context* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.file_pc */
extern void T411f50(GE_context* ac, T0* C, T14 a1, T2 a2);
/* KL_STRING_OUTPUT_STREAM.put_character */
extern void T374f7(GE_context* ac, T0* C, T2 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_character */
extern void T186f8(GE_context* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.put_integer */
extern void T411f36(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.put_integer_64 */
extern void T411f45(GE_context* ac, T0* C, T7 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer */
extern void T374f9(GE_context* ac, T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer_64 */
extern void T374f11(GE_context* ac, T0* C, T7 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer */
extern void T186f6(GE_context* ac, T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_64 */
extern void T186f10(GE_context* ac, T0* C, T7 a1);
/* AP_DISPLAY_HELP_FLAG.reset */
extern void T168f24(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.reset */
extern void T49f28(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] INTEGER_32].make */
extern T0* T185c8(GE_context* ac);
/* [attached] DS_LINKED_LIST [[attached] INTEGER_32].set_internal_cursor */
extern void T185f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] INTEGER_32].new_cursor */
extern T0* T185f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] INTEGER_32].make */
extern T0* T630c3(GE_context* ac, T0* a1);
/* AP_BOOLEAN_OPTION.reset */
extern void T48f31(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] BOOLEAN].make */
extern T0* T182c8(GE_context* ac);
/* [attached] DS_LINKED_LIST [[attached] BOOLEAN].set_internal_cursor */
extern void T182f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] BOOLEAN].new_cursor */
extern T0* T182f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] BOOLEAN].make */
extern T0* T627c3(GE_context* ac, T0* a1);
/* AP_ENUMERATION_OPTION.reset */
extern void T47f31(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable STRING_8].make */
extern T0* T176c13(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable STRING_8].set_internal_cursor */
extern void T176f14(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable STRING_8].make */
extern T0* T621f1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable STRING_8].default_create */
extern T0* T621c3(GE_context* ac);
/* AP_FLAG.reset */
extern void T46f22(GE_context* ac, T0* C);
/* AP_STRING_OPTION.reset */
extern void T44f28(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.classes_do_recursive_until */
extern void T283f161(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_recursive_until */
extern T0* T283f161ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_do_recursive_until */
extern T0* T283f161ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.universes_do_recursive_until */
extern void T283f175(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].forth */
extern void T694f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].cursor_forth */
extern void T694f51(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].add_traversing_cursor */
extern void T694f57(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE].set_next_cursor */
extern void T1808f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE].set_position */
extern void T1808f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].remove_traversing_cursor */
extern void T694f56(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE].set_after */
extern void T1808f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].item_for_iteration */
extern T0* T694f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].cursor_item */
extern T0* T694f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].go_after */
extern void T694f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].cursor_go_after */
extern void T694f50(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].cursor_off */
extern T1 T694f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE].off */
extern T1 T1808f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].after */
extern T1 T694f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].cursor_after */
extern T1 T694f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE].after */
extern T1 T1808f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].start */
extern void T694f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].cursor_start */
extern void T694f49(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].is_empty */
extern T1 T694f31(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.add_universe_recursive */
extern void T283f237(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.add_universe_recursive */
extern T0* T283f237ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.add_universe_recursive */
extern T0* T283f237ac2(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_LIBRARY]].set_rout_disp_final */
extern void T661f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_LIBRARY.add_universe_recursive */
extern void T236f198(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T236f198ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T236f198ac2(GE_context* ac, T0* a1);
/* ET_LIBRARY.add_universe_recursive */
extern void T659f172(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_universe_recursive */
extern T0* T659f172ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.add_universe_recursive */
extern T0* T659f172ac2(GE_context* ac, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_all */
extern void T264f9(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_all */
extern void T237f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].make */
extern T0* T694c36(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].set_internal_cursor */
extern void T694f48(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].new_cursor */
extern T0* T694f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE].make */
extern T0* T1808c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].make_slots */
extern void T694f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].make_clashes */
extern void T694f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].make_key_storage */
extern void T694f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].make_item_storage */
extern void T694f43(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE].make */
extern T0* T1812f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_UNIVERSE].make_empty */
extern T0* T1809c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE].default_create */
extern T0* T1812c3(GE_context* ac);
/* ET_LACE_SYSTEM.initial_universes_capacity */
extern T6 T283f137(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.universes_do_recursive */
extern void T283f174(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].do_all */
extern void T694f37(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.classes_do_recursive_until */
extern void T197f159(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_recursive_until */
extern T0* T197f159ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_do_recursive_until */
extern T0* T197f159ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.universes_do_recursive_until */
extern void T197f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.add_universe_recursive */
extern void T197f193(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.add_universe_recursive */
extern T0* T197f193ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.add_universe_recursive */
extern T0* T197f193ac2(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.initial_universes_capacity */
extern T6 T197f142(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.universes_do_recursive */
extern void T197f177(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.classes_do_recursive_until */
extern void T69f171(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T69f171ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T69f171ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.universes_do_recursive_until */
extern void T69f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.add_universe_recursive */
extern void T69f194(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T69f194ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T69f194ac2(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.initial_universes_capacity */
extern T6 T69f147(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.universes_do_recursive */
extern void T69f179(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.classes_do_recursive */
extern void T283f160(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_recursive */
extern T0* T283f160ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.classes_do_recursive */
extern void T197f158(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_recursive */
extern T0* T197f158ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.classes_do_recursive */
extern void T69f170(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_recursive */
extern T0* T69f170ac1(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.preparse_recursive */
extern void T283f159(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.build_scm_write_mappings */
extern void T283f169(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.build_scm_write_mappings */
extern T0* T283f169ac1(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]].set_rout_disp_final */
extern void T675f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_LACE_SYSTEM.build_scm_write_mapping */
extern void T283f232(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.clusters_do_explicit_recursive */
extern void T283f231(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.clusters_do_explicit_recursive */
extern T0* T283f231ac1(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_INTERNAL_UNIVERSE]].set_rout_disp_final */
extern void T655f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_LACE_SYSTEM.internal_universes_do_recursive */
extern void T283f170(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].do_all */
extern void T677f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].item_storage_item */
extern T0* T677f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].clashes_item */
extern T6 T677f22(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.add_internal_universe_recursive */
extern void T283f233(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.add_internal_universe_recursive */
extern T0* T283f233ac1(GE_context* ac, T0* a1);
/* ET_ECF_LIBRARY.add_internal_universe_recursive */
extern void T236f197(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_internal_universe_recursive */
extern T0* T236f197ac1(GE_context* ac, T0* a1);
/* ET_LIBRARY.add_internal_universe_recursive */
extern void T659f171(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_internal_universe_recursive */
extern T0* T659f171ac1(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].force_last */
extern void T677f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].slots_put */
extern void T677f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].clashes_put */
extern void T677f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].slots_item */
extern T6 T677f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].hash_position */
extern T6 T677f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].resize */
extern void T677f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].clashes_resize */
extern void T677f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].special_integer_ */
extern T0* T677f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].key_storage_resize */
extern void T677f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].item_storage_resize */
extern void T677f45(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1801f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1802f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].key_storage_item */
extern T0* T677f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].slots_resize */
extern void T677f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].new_modulus */
extern T6 T677f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].new_capacity */
extern T6 T677f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].item_storage_put */
extern void T677f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE].force */
extern void T1801f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_INTERNAL_UNIVERSE].fill_with */
extern void T1802f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_INTERNAL_UNIVERSE].extend */
extern void T1802f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].search_position */
extern void T677f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].key_equality_tester */
extern T0* T677f19(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].unset_found_item */
extern void T677f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].has */
extern T1 T677f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].make */
extern T0* T677c30(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].set_internal_cursor */
extern void T677f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].new_cursor */
extern T0* T677f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_INTERNAL_UNIVERSE].make */
extern T0* T1797c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].make_slots */
extern void T677f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].make_clashes */
extern void T677f36(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].make_key_storage */
extern void T677f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].make_item_storage */
extern void T677f34(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE].make */
extern T0* T1801f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_INTERNAL_UNIVERSE].make_empty */
extern T0* T1802c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE].default_create */
extern T0* T1801c3(GE_context* ac);
/* ET_LACE_SYSTEM.build_scm_read_mappings */
extern void T283f168(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.build_scm_read_mappings */
extern T0* T283f168ac1(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.build_scm_read_mapping */
extern void T283f230(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.check_master_class_validity */
extern void T81f107(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_PROCESSOR.check_master_class_validity */
extern T0* T81f107ac1(GE_context* ac, T0* a1);
/* ET_MASTER_CLASS.process */
extern void T672f69(GE_context* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.process_master_class */
extern void T367f4(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.process_master_class */
extern void T358f8(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.check_master_class_validity */
extern void T358f9(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.check_overriding_classes_validity */
extern void T358f12(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0d_error */
extern void T53f370(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_universe_error */
extern void T53f491(GE_context* ac, T0* C, T0* a1);
/* ET_UNIVERSE_ERROR.make_vscn0d */
extern T0* T2670c21(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_MASTER_CLASS.upper_name */
extern T0* T672f49(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vscn_error */
extern T1 T53f108(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vscn0d_error */
extern void T36f369(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_universe_error */
extern void T36f490(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vscn_error */
extern T1 T36f107(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.current_universe */
extern T0* T358f6(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.error_handler */
extern T0* T358f5(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.set_fatal_error */
extern void T358f13(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.check_intrinsic_classes_validity */
extern void T358f11(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.check_overridden_class_validity */
extern void T358f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0c_error */
extern void T53f372(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNIVERSE_ERROR.make_vscn0c */
extern T0* T2670c23(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vscn0c_error */
extern void T36f371(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vscn0b_error */
extern void T53f371(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNIVERSE_ERROR.make_vscn0b */
extern T0* T2670c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vscn0b_error */
extern void T36f370(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vscn0a_error */
extern void T53f369(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNIVERSE_ERROR.make_vscn0a */
extern T0* T2670c20(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vscn0a_error */
extern void T36f368(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_MASTER_CLASS_CHECKER.reset_fatal_error */
extern void T358f10(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.check_master_class_validity */
extern void T87f111(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.check_master_class_validity */
extern T0* T87f111ac1(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.preparse_recursive */
extern void T283f159p1(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T283f159p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T283f159p1ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T283f159p1ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T283f159p1ac4(GE_context* ac, T0* a1);
/* Creation of agent #5 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T283f159p1ac5(GE_context* ac, T0* a1);
/* Creation of agent #6 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T283f159p1ac6(GE_context* ac, T0* a1);
/* Creation of agent #7 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T283f159p1ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T283f159p1ac8(GE_context* ac);
/* ET_ECF_LIBRARY.import_classes */
extern void T236f196(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T236f196ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T236f196ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T236f196ac3(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T682f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_LIBRARY.export_classes */
extern void T260f36(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_unknown_imported_classes */
extern void T672f66(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.remove_imported_class */
extern void T672f79(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_adapted */
extern void T264f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].do_all */
extern void T810f11(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.import_classes */
extern void T659f170(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LIBRARY.import_classes */
extern T0* T659f170ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_LIBRARY.import_classes */
extern T0* T659f170ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.import_classes */
extern T0* T659f170ac3(GE_context* ac, T0* a1);
/* ET_ECF_LIBRARY.preparse */
extern void T236f195(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.preparse */
extern void T236f195p1(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.preparse */
extern T0* T236f195p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.preparse */
extern T0* T236f195p1ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.preparse */
extern T0* T236f195p1ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_ECF_LIBRARY.preparse */
extern T0* T236f195p1ac4(GE_context* ac, T0* a1);
/* ET_MASTER_CLASS.remove_unknown_local_classes */
extern void T672f65(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.remove_local_ignored_class */
extern void T672f78(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].remove_first */
extern void T365f32(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].delete */
extern void T365f31(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_local_non_override_class */
extern void T672f77(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_local_override_class */
extern void T672f76(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].remove */
extern void T365f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].move_left */
extern void T365f35(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].move_cursors_left */
extern void T365f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].remove_last */
extern void T365f33(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].move_last_cursors_after */
extern void T365f36(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.reset_local_modified_classes */
extern void T672f64(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T672f64ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T672f64ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T672f64ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T672f64ac4(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #5 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T672f64ac5(GE_context* ac);
/* ET_MASTER_CLASS.reset_local_modified_class */
extern void T672f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.file_time_stamp */
extern T6 T147f29(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.file_time_stamp */
extern T6 T146f32(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.file_system */
extern T0* T672f32(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.unix_file_system */
extern T0* T672f41(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.windows_file_system */
extern T0* T672f40(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.operating_system */
extern T0* T672f39(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_parsed_and_errors */
extern void T95f294(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_parsed */
extern void T95f295(GE_context* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.reset */
extern void T1726f10(GE_context* ac, T0* C);
/* ET_CONVERT_PROCEDURE.reset */
extern void T2076f10(GE_context* ac, T0* C);
/* ET_BRACED_TYPE_LIST.reset */
extern void T1820f12(GE_context* ac, T0* C);
/* ET_CONVERT_FUNCTION.reset */
extern void T2075f9(GE_context* ac, T0* C);
/* ET_CREATOR_LIST.reset */
extern void T1537f11(GE_context* ac, T0* C);
/* ET_CREATOR.reset */
extern void T1625f19(GE_context* ac, T0* C);
/* ET_INVARIANTS.reset */
extern void T1735f34(GE_context* ac, T0* C);
/* ET_INVARIANTS.reset */
extern void T1735f34p1(GE_context* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.reset */
extern void T1534f8(GE_context* ac, T0* C);
/* ET_PARENT_LIST.reset */
extern void T699f14(GE_context* ac, T0* C);
/* ET_PARENT.reset */
extern void T698f12(GE_context* ac, T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.reset */
extern void T1935f10(GE_context* ac, T0* C);
/* ET_EXPORT_LIST.reset */
extern void T1932f9(GE_context* ac, T0* C);
/* ET_FEATURE_EXPORT.reset */
extern void T1934f13(GE_context* ac, T0* C);
/* ET_ALL_EXPORT.reset */
extern void T1933f8(GE_context* ac, T0* C);
/* ET_RENAME_LIST.reset */
extern void T1931f10(GE_context* ac, T0* C);
/* ET_RENAME.reset */
extern void T1731f7(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.reset */
extern void T352f11(GE_context* ac, T0* C);
/* ET_QUERY_LIST.reset */
extern void T351f11(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_ignored_classes_do_all */
extern void T672f74(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].do_all */
extern void T365f29(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_non_override_classes_do_all */
extern void T672f73(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_override_classes_do_all */
extern void T672f72(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTERS.do_all */
extern void T791f4(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.preparse */
extern void T659f169(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.preparse */
extern void T659f169p1(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.preparse */
extern T0* T659f169p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.preparse */
extern T0* T659f169p1ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.preparse */
extern T0* T659f169p1ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_LIBRARY.preparse */
extern T0* T659f169p1ac4(GE_context* ac, T0* a1);
/* ET_DOTNET_ASSEMBLIES.put_last */
extern void T648f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].force_last */
extern void T1792f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].resize */
extern void T1792f15(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1792f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].extendible */
extern T1 T1792f7(GE_context* ac, T0* C, T6 a1);
/* [attached] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T651f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern void T283f173(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac4(GE_context* ac);
/* Creation of agent #5 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac5(GE_context* ac);
/* Creation of agent #6 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac6(GE_context* ac);
/* Creation of agent #7 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac8(GE_context* ac);
/* Creation of agent #9 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac9(GE_context* ac);
/* Creation of agent #10 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac10(GE_context* ac);
/* Creation of agent #11 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac11(GE_context* ac);
/* Creation of agent #12 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac12(GE_context* ac);
/* Creation of agent #13 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac13(GE_context* ac);
/* Creation of agent #14 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac14(GE_context* ac);
/* Creation of agent #15 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac15(GE_context* ac);
/* Creation of agent #16 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac16(GE_context* ac);
/* Creation of agent #17 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac17(GE_context* ac);
/* Creation of agent #18 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac18(GE_context* ac);
/* Creation of agent #19 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac19(GE_context* ac);
/* Creation of agent #20 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac20(GE_context* ac);
/* Creation of agent #21 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac21(GE_context* ac);
/* Creation of agent #22 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac22(GE_context* ac);
/* Creation of agent #23 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac23(GE_context* ac, T0* a1);
/* Creation of agent #24 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac24(GE_context* ac);
/* Creation of agent #25 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac25(GE_context* ac, T0* a1);
/* Creation of agent #26 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac26(GE_context* ac);
/* Creation of agent #27 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac27(GE_context* ac, T0* a1);
/* Creation of agent #28 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac28(GE_context* ac);
/* Creation of agent #29 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac29(GE_context* ac, T0* a1);
/* Creation of agent #30 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac30(GE_context* ac);
/* Creation of agent #31 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T283f173ac31(GE_context* ac, T1 a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.process_class */
extern void T686f6(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.internal_process_class */
extern void T686f8(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_providers_validity */
extern void T686f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].go_after */
extern void T1807f15(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].cursor_go_after */
extern void T866f73(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_interface_error */
extern T1 T672f35(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.interface_checked */
extern T1 T672f34(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_suppliers_validity */
extern void T686f9(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.set_fatal_error */
extern void T686f7(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.error_handler */
extern T0* T686f4(GE_context* ac, T0* C);
/* ET_CLASS.unset_implementation_error */
extern void T95f302(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.process_class */
extern void T685f8(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.internal_process_class */
extern void T685f10(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_parents_validity */
extern void T685f13(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_type_validity */
extern void T1806f3(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_formal_parameters_validity */
extern void T685f12(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.check_qualified_anchored_signatures_validity */
extern void T685f11(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_signatures_validity */
extern void T1805f6(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_feature_signatures_validity */
extern void T1805f7(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.set_fatal_error */
extern void T685f9(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.error_handler */
extern T0* T685f6(GE_context* ac, T0* C);
/* ET_CLASS.unset_interface_error */
extern void T95f301(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.process_class */
extern void T684f7(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.internal_process_class */
extern void T684f9(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_signatures_validity */
extern void T684f12(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_feature_signatures_validity */
extern void T684f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_type_validity */
extern void T1804f3(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_parents_validity */
extern void T684f11(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_formal_parameters_validity */
extern void T684f10(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.set_fatal_error */
extern void T684f8(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.error_handler */
extern T0* T684f5(GE_context* ac, T0* C);
/* ET_CLASS.unset_flattening_error */
extern void T95f300(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.process_class */
extern void T683f7(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.internal_process_class */
extern void T683f9(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_parents_validity */
extern void T683f11(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_type_validity */
extern void T1803f3(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_formal_parameters_validity */
extern void T683f10(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.set_fatal_error */
extern void T683f8(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.error_handler */
extern T0* T683f5(GE_context* ac, T0* C);
/* ET_CLASS.unset_ancestors_error */
extern void T95f299(GE_context* ac, T0* C);
/* ET_CLASS.not_implementation_checked */
extern T1 T95f185(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_interface_checked */
extern void T95f298(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.reset_after_interface_checked */
extern void T352f13(GE_context* ac, T0* C);
/* ET_QUERY_LIST.reset_after_interface_checked */
extern void T351f13(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_features_flattened */
extern void T95f297(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_constraint_creation_procedures */
extern void T1242f33(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_constraint_creation_procedures */
extern void T1243f77(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.reset_after_features_flattened */
extern void T352f12(GE_context* ac, T0* C);
/* ET_QUERY_LIST.reset_after_features_flattened */
extern void T351f12(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_ancestors_built */
extern void T95f296(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_system_processor */
extern T0* T94f93(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_classes_do_unless_actual */
extern void T672f67(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_non_override_classes_do_unless_actual */
extern void T672f81(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_override_classes_do_unless_actual */
extern void T672f80(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.make */
extern T0* T686c5(GE_context* ac, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.tokens */
extern T0* T686f3(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern T0* T685c7(GE_context* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.make */
extern T0* T1806c2(GE_context* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.make */
extern T0* T1805c5(GE_context* ac, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.tokens */
extern T0* T1805f4(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern void T685f7p1(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.tokens */
extern T0* T685f5(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern T0* T684c6(GE_context* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.make */
extern T0* T1804c2(GE_context* ac);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern void T684f6p1(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.tokens */
extern T0* T684f4(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern T0* T683c6(GE_context* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.make */
extern T0* T1803c2(GE_context* ac);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern void T683f6p1(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.tokens */
extern T0* T683f4(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.classes_do_if_recursive */
extern void T283f236(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_if_recursive */
extern T0* T283f236ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.master_classes_do_recursive */
extern void T283f235(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.master_classes_do_recursive */
extern T0* T283f235ac1(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.classes_modified_recursive */
extern T1 T283f127(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T283f127ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T283f127ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T283f127ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T283f127ac4(GE_context* ac, T0* a1);
/* [attached] PREDICATE [[attached] TUPLE].set_rout_disp_final */
extern void T1551f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [attached] PREDICATE [[attached] TUPLE [[attached] ET_MASTER_CLASS]].set_rout_disp_final */
extern void T1550f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [attached] KL_AGENT_ROUTINES [[attached] ANY].call */
extern void T1547f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UT_TRISTATE.set_true */
extern void T1546f4(GE_context* ac, T0* C);
/* UT_TRISTATE.is_true */
extern T1 T1546f2(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.master_classes_do_if_recursive_until */
extern void T283f241(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T283f241ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T283f241ac2(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_SYSTEM.any_actions */
extern T0* T283f145(GE_context* ac, T0* C);
/* [attached] KL_AGENT_ROUTINES [[attached] ANY].default_create */
extern T0* T1547c1(GE_context* ac);
/* UT_TRISTATE.make_false */
extern T0* T1546c3(GE_context* ac);
/* UT_TRISTATE.set_false */
extern void T1546f5(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.import_classes */
extern void T283f172(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T283f172ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T283f172ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T283f172ac3(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.preparse */
extern void T283f171(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.preparse */
extern T0* T283f171ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.preparse */
extern T0* T283f171ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.preparse */
extern T0* T283f171ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.preparse */
extern T0* T283f171ac4(GE_context* ac, T0* a1);
/* ET_LACE_CLUSTERS.do_all */
extern void T285f6(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_recursive */
extern void T237f7(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_LIBRARIES.do_recursive */
extern T0* T237f7ac1(GE_context* ac, T0* a1);
/* ET_ECF_LIBRARY.add_library_recursive */
extern void T236f199(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_library_recursive */
extern T0* T236f199ac1(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].force_last */
extern void T793f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].slots_put */
extern void T793f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].clashes_put */
extern void T793f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].slots_item */
extern T6 T793f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].hash_position */
extern T6 T793f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].resize */
extern void T793f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].clashes_resize */
extern void T793f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].special_integer_ */
extern T0* T793f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].key_storage_resize */
extern void T793f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].item_storage_resize */
extern void T793f45(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY].aliased_resized_area */
extern T0* T1855f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_LIBRARY].aliased_resized_area */
extern T0* T1856f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].key_storage_item */
extern T0* T793f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].item_storage_item */
extern T0* T793f17(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].clashes_item */
extern T6 T793f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].slots_resize */
extern void T793f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].new_modulus */
extern T6 T793f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].new_capacity */
extern T6 T793f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].item_storage_put */
extern void T793f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY].force */
extern void T1855f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LIBRARY].fill_with */
extern void T1856f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LIBRARY].extend */
extern void T1856f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].search_position */
extern void T793f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].key_equality_tester */
extern T0* T793f25(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].unset_found_item */
extern void T793f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].has */
extern T1 T793f18(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.add_library_recursive */
extern void T659f173(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_library_recursive */
extern T0* T659f173ac1(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].do_all */
extern void T793f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].make */
extern T0* T793c30(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].set_internal_cursor */
extern void T793f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].new_cursor */
extern T0* T793f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_LIBRARY].make */
extern T0* T1854c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].make_slots */
extern void T793f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].make_clashes */
extern void T793f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].make_key_storage */
extern void T793f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].make_item_storage */
extern void T793f32(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY].make */
extern T0* T1855f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LIBRARY].make_empty */
extern T0* T1856c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY].default_create */
extern T0* T1855c3(GE_context* ac);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern void T264f7(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern T0* T264f7ac1(GE_context* ac, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assemblies */
extern void T371f4(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T648f2(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_ASSEMBLIES.count */
extern T6 T648f3(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].do_all */
extern void T647f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].make */
extern T0* T647c30(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T647f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T647f17(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_ASSEMBLY].make */
extern T0* T1787c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].make_slots */
extern void T647f36(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].make_clashes */
extern void T647f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].make_key_storage */
extern void T647f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].make_item_storage */
extern void T647f33(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.preparse_recursive */
extern void T197f157(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.build_scm_write_mappings */
extern void T197f172(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.build_scm_write_mappings */
extern T0* T197f172ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.build_scm_write_mapping */
extern void T197f188(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.clusters_do_explicit_recursive */
extern void T197f187(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.clusters_do_explicit_recursive */
extern T0* T197f187ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.internal_universes_do_recursive */
extern void T197f173(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.add_internal_universe_recursive */
extern void T197f189(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.add_internal_universe_recursive */
extern T0* T197f189ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.build_scm_read_mappings */
extern void T197f171(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.build_scm_read_mappings */
extern T0* T197f171ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.build_scm_read_mapping */
extern void T197f186(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.preparse_recursive */
extern void T197f157p1(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T197f157p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T197f157p1ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T197f157p1ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T197f157p1ac4(GE_context* ac, T0* a1);
/* Creation of agent #5 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T197f157p1ac5(GE_context* ac, T0* a1);
/* Creation of agent #6 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T197f157p1ac6(GE_context* ac, T0* a1);
/* Creation of agent #7 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T197f157p1ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T197f157p1ac8(GE_context* ac);
/* ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern void T197f176(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac4(GE_context* ac);
/* Creation of agent #5 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac5(GE_context* ac);
/* Creation of agent #6 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac6(GE_context* ac);
/* Creation of agent #7 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac8(GE_context* ac);
/* Creation of agent #9 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac9(GE_context* ac);
/* Creation of agent #10 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac10(GE_context* ac);
/* Creation of agent #11 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac11(GE_context* ac);
/* Creation of agent #12 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac12(GE_context* ac);
/* Creation of agent #13 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac13(GE_context* ac);
/* Creation of agent #14 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac14(GE_context* ac);
/* Creation of agent #15 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac15(GE_context* ac);
/* Creation of agent #16 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac16(GE_context* ac);
/* Creation of agent #17 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac17(GE_context* ac);
/* Creation of agent #18 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac18(GE_context* ac);
/* Creation of agent #19 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac19(GE_context* ac);
/* Creation of agent #20 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac20(GE_context* ac);
/* Creation of agent #21 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac21(GE_context* ac);
/* Creation of agent #22 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac22(GE_context* ac);
/* Creation of agent #23 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac23(GE_context* ac, T0* a1);
/* Creation of agent #24 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac24(GE_context* ac);
/* Creation of agent #25 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac25(GE_context* ac, T0* a1);
/* Creation of agent #26 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac26(GE_context* ac);
/* Creation of agent #27 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac27(GE_context* ac, T0* a1);
/* Creation of agent #28 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac28(GE_context* ac);
/* Creation of agent #29 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac29(GE_context* ac, T0* a1);
/* Creation of agent #30 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac30(GE_context* ac);
/* Creation of agent #31 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T197f176ac31(GE_context* ac, T1 a1);
/* ET_XACE_SYSTEM.classes_do_if_recursive */
extern void T197f192(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_if_recursive */
extern T0* T197f192ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.master_classes_do_recursive */
extern void T197f191(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.master_classes_do_recursive */
extern T0* T197f191ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.classes_modified_recursive */
extern T1 T197f145(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T197f145ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T197f145ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T197f145ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T197f145ac4(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.master_classes_do_if_recursive_until */
extern void T197f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T197f252ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T197f252ac2(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM.any_actions */
extern T0* T197f150(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.import_classes */
extern void T197f175(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.import_classes */
extern T0* T197f175ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.import_classes */
extern T0* T197f175ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.import_classes */
extern T0* T197f175ac3(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.preparse */
extern void T197f174(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.preparse */
extern T0* T197f174ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.preparse */
extern T0* T197f174ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.preparse */
extern T0* T197f174ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.preparse */
extern T0* T197f174ac4(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.preparse_recursive */
extern void T69f169(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.build_scm_write_mappings */
extern void T69f174(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.build_scm_write_mappings */
extern T0* T69f174ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.build_scm_write_mapping */
extern void T69f189(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern void T69f188(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern T0* T69f188ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.internal_universes_do_recursive */
extern void T69f175(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.add_internal_universe_recursive */
extern void T69f190(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.add_internal_universe_recursive */
extern T0* T69f190ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.build_scm_read_mappings */
extern void T69f173(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.build_scm_read_mappings */
extern T0* T69f173ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.build_scm_read_mapping */
extern void T69f187(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.preparse_recursive */
extern void T69f169p1(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T69f169p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T69f169p1ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T69f169p1ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T69f169p1ac4(GE_context* ac, T0* a1);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T69f169p1ac5(GE_context* ac, T0* a1);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T69f169p1ac6(GE_context* ac, T0* a1);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T69f169p1ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T69f169p1ac8(GE_context* ac);
/* ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern void T69f178(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac4(GE_context* ac);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac5(GE_context* ac);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac6(GE_context* ac);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac8(GE_context* ac);
/* Creation of agent #9 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac9(GE_context* ac);
/* Creation of agent #10 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac10(GE_context* ac);
/* Creation of agent #11 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac11(GE_context* ac);
/* Creation of agent #12 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac12(GE_context* ac);
/* Creation of agent #13 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac13(GE_context* ac);
/* Creation of agent #14 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac14(GE_context* ac);
/* Creation of agent #15 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac15(GE_context* ac);
/* Creation of agent #16 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac16(GE_context* ac);
/* Creation of agent #17 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac17(GE_context* ac);
/* Creation of agent #18 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac18(GE_context* ac);
/* Creation of agent #19 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac19(GE_context* ac);
/* Creation of agent #20 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac20(GE_context* ac);
/* Creation of agent #21 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac21(GE_context* ac);
/* Creation of agent #22 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac22(GE_context* ac);
/* Creation of agent #23 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac23(GE_context* ac, T0* a1);
/* Creation of agent #24 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac24(GE_context* ac);
/* Creation of agent #25 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac25(GE_context* ac, T0* a1);
/* Creation of agent #26 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac26(GE_context* ac);
/* Creation of agent #27 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac27(GE_context* ac, T0* a1);
/* Creation of agent #28 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac28(GE_context* ac);
/* Creation of agent #29 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac29(GE_context* ac, T0* a1);
/* Creation of agent #30 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac30(GE_context* ac);
/* Creation of agent #31 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T69f178ac31(GE_context* ac, T1 a1);
/* ET_ECF_SYSTEM.classes_do_if_recursive */
extern void T69f193(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_if_recursive */
extern T0* T69f193ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_recursive */
extern void T69f192(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_recursive */
extern T0* T69f192ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.classes_modified_recursive */
extern T1 T69f149(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T69f149ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T69f149ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T69f149ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T69f149ac4(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern void T69f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T69f252ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T69f252ac2(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.any_actions */
extern T0* T69f138(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.import_classes */
extern void T69f177(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T69f177ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T69f177ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T69f177ac3(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.preparse */
extern void T69f176(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.preparse */
extern T0* T69f176ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.preparse */
extern T0* T69f176ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.preparse */
extern T0* T69f176ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.preparse */
extern T0* T69f176ac4(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.master_classes_do_recursive_until */
extern void T283f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T283f240ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T283f240ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.master_classes_do_recursive_until */
extern void T197f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T197f251ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T197f251ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern void T69f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T69f251ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T69f251ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.set_default_create_seed */
extern void T283f243(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_default_create_seed */
extern void T197f253(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_default_create_seed */
extern void T69f254(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_default_create_seed */
extern void T40f199(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_copy_seed */
extern void T283f244(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_copy_seed */
extern void T197f254(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_copy_seed */
extern void T69f255(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_copy_seed */
extern void T40f200(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_is_equal_seed */
extern void T283f245(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_is_equal_seed */
extern void T197f255(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_is_equal_seed */
extern void T69f256(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_is_equal_seed */
extern void T40f201(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_routine_call_seed */
extern void T283f246(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_routine_call_seed */
extern void T197f256(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_routine_call_seed */
extern void T69f257(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_routine_call_seed */
extern void T40f202(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_function_item_seed */
extern void T283f247(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_function_item_seed */
extern void T197f257(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_function_item_seed */
extern void T69f258(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_function_item_seed */
extern void T40f203(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_dispose_seed */
extern void T283f248(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_dispose_seed */
extern void T197f258(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_dispose_seed */
extern void T69f259(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_dispose_seed */
extern void T40f204(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_iterable_new_cursor_seed */
extern void T283f249(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_iterable_new_cursor_seed */
extern void T197f259(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iterable_new_cursor_seed */
extern void T69f260(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iterable_new_cursor_seed */
extern void T40f205(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_iteration_cursor_after_seed */
extern void T283f250(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_iteration_cursor_after_seed */
extern void T197f260(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iteration_cursor_after_seed */
extern void T69f261(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iteration_cursor_after_seed */
extern void T40f206(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_iteration_cursor_forth_seed */
extern void T283f251(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_iteration_cursor_forth_seed */
extern void T197f261(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iteration_cursor_forth_seed */
extern void T69f262(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iteration_cursor_forth_seed */
extern void T40f207(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.register_class */
extern void T283f238(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_id */
extern void T95f247(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.register_class */
extern void T197f249(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.register_class */
extern void T69f249(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.register_class */
extern void T40f196(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_INPUT_STREAM.read_character */
extern void T1577f10(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_character */
extern void T1558f32(GE_context* ac, T0* C);
/* [attached] DS_LINKED_QUEUE [[attached] CHARACTER_8].remove */
extern void T2249f6(GE_context* ac, T0* C);
/* [attached] DS_LINKED_QUEUE [[attached] CHARACTER_8].wipe_out */
extern void T2249f8(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.noqueue_read_character */
extern void T1558f35(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_read_character */
extern void T1558f37(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.append_character */
extern void T1558f38(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_LINKED_QUEUE [[attached] CHARACTER_8].force */
extern void T2249f7(GE_context* ac, T0* C, T2 a1);
/* attached DS_LINKABLE [[attached] CHARACTER_8].put_right */
extern void T2549f4(GE_context* ac, T0* C, T0* a1);
/* attached DS_LINKABLE [[attached] CHARACTER_8].make */
extern T0* T2549c3(GE_context* ac, T2 a1);
/* XM_EIFFEL_INPUT_STREAM.utf8 */
extern T0* T1558f24(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf8_buffer */
extern T0* T1558f27(GE_context* ac, T0* C);
/* UC_UTF16_ROUTINES.surrogate */
extern T6 T2250f7(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_low_surrogate */
extern T1 T2250f6(GE_context* ac, T0* C, T6 a1);
/* UC_UTF16_ROUTINES.least_10_bits */
extern T6 T2250f5(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_high_surrogate */
extern T1 T2250f4(GE_context* ac, T0* C, T6 a1);
/* UC_UTF16_ROUTINES.is_surrogate */
extern T1 T2250f3(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.utf16 */
extern T0* T1558f22(GE_context* ac, T0* C);
/* UC_UTF16_ROUTINES.default_create */
extern T0* T2250c16(GE_context* ac);
/* XM_EIFFEL_INPUT_STREAM.least_significant */
extern T6 T1558f26(GE_context* ac, T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.most_significant */
extern T6 T1558f25(GE_context* ac, T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.latin1_read_character */
extern void T1558f36(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_detect_read_character */
extern void T1558f34(GE_context* ac, T0* C);
/* UC_UTF8_ROUTINES.is_endian_detection_character */
extern T1 T1556f31(GE_context* ac, T0* C, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.is_endian_detection_character_start */
extern T1 T1556f30(GE_context* ac, T0* C, T2 a1, T2 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_least_first */
extern T1 T2250f2(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_most_first */
extern T1 T2250f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_STDIN_FILE.read_character */
extern void T851f13(GE_context* ac, T0* C);
/* CONSOLE.read_character */
extern void T1748f30(GE_context* ac, T0* C);
/* CONSOLE.console_readchar */
extern T2 T1748f14(GE_context* ac, T0* C, T14 a1);
/* CONSOLE.end_of_file */
extern T1 T1748f11(GE_context* ac, T0* C);
/* CONSOLE.console_eof */
extern T1 T1748f13(GE_context* ac, T0* C, T14 a1);
/* KL_STDIN_FILE.console */
extern T0* T851f7(GE_context* ac, T0* C);
/* STD_FILES.input */
extern T0* T485f5(GE_context* ac, T0* C);
/* CONSOLE.make_open_stdin */
extern T0* T1748c29(GE_context* ac, T0* a1);
/* CONSOLE.set_read_mode */
extern void T1748f32(GE_context* ac, T0* C);
/* KL_STDIN_FILE.io */
extern T0* T851f9(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.read_character */
extern void T33f67(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_read_character */
extern void T33f71(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_gc */
extern T2 T33f26(GE_context* ac, T0* C, T14 a1);
/* KL_STRING_INPUT_STREAM.close */
extern void T1577f11(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.close */
extern void T1558f33(GE_context* ac, T0* C);
/* KL_STDIN_FILE.close */
extern void T851f14(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.close */
extern void T33f62(GE_context* ac, T0* C);
/* SERIALIZATION_FAILURE.set_throwing_exception */
extern void T144f7(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_throwing_exception */
extern void T143f7(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_throwing_exception */
extern void T142f11(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_throwing_exception */
extern void T141f7(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_throwing_exception */
extern void T140f7(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_throwing_exception */
extern void T139f7(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_throwing_exception */
extern void T138f7(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_throwing_exception */
extern void T137f7(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_throwing_exception */
extern void T136f7(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_throwing_exception */
extern void T135f7(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_throwing_exception */
extern void T134f7(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_throwing_exception */
extern void T133f7(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_throwing_exception */
extern void T132f7(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_throwing_exception */
extern void T131f7(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_throwing_exception */
extern void T130f7(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_throwing_exception */
extern void T129f7(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_throwing_exception */
extern void T128f7(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_throwing_exception */
extern void T125f10(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_throwing_exception */
extern void T124f13(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_throwing_exception */
extern void T123f8(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_throwing_exception */
extern void T122f10(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_throwing_exception */
extern void T121f8(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_throwing_exception */
extern void T120f8(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_throwing_exception */
extern void T119f11(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_throwing_exception */
extern void T116f7(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_throwing_exception */
extern void T114f11(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_throwing_exception */
extern void T112f7(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_exception_trace */
extern void T144f8(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_exception_trace */
extern void T143f8(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_exception_trace */
extern void T142f12(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_exception_trace */
extern void T141f8(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_exception_trace */
extern void T140f8(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_exception_trace */
extern void T139f8(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_exception_trace */
extern void T138f8(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_exception_trace */
extern void T137f8(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_exception_trace */
extern void T136f8(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_exception_trace */
extern void T135f8(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_exception_trace */
extern void T134f8(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_exception_trace */
extern void T133f8(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_exception_trace */
extern void T132f8(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_exception_trace */
extern void T131f8(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_exception_trace */
extern void T130f8(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_exception_trace */
extern void T129f8(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_exception_trace */
extern void T128f8(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_exception_trace */
extern void T125f11(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_exception_trace */
extern void T124f16(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_exception_trace */
extern void T123f10(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_exception_trace */
extern void T122f12(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_exception_trace */
extern void T121f10(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_exception_trace */
extern void T120f10(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_exception_trace */
extern void T119f9(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_exception_trace */
extern void T116f8(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_exception_trace */
extern void T114f12(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_exception_trace */
extern void T112f8(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_description */
extern void T144f9(GE_context* ac, T0* C, T0* a1);
/* C_STRING.set_count */
extern void T31f8(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.utf_32_string_into_utf_8_0_pointer */
extern void T598f12(GE_context* ac, T598* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_description */
extern void T143f9(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_description */
extern void T142f13(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_description */
extern void T141f9(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_description */
extern void T140f9(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_description */
extern void T139f9(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_description */
extern void T138f9(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_description */
extern void T137f9(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_description */
extern void T136f9(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_description */
extern void T135f9(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_description */
extern void T134f9(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_description */
extern void T133f9(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_description */
extern void T132f9(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_description */
extern void T131f9(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_description */
extern void T130f9(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_description */
extern void T129f9(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_description */
extern void T128f9(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_description */
extern void T125f12(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_description */
extern void T124f17(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_description */
extern void T123f11(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_description */
extern void T122f13(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_description */
extern void T121f11(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_description */
extern void T120f11(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_description */
extern void T119f12(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_description */
extern void T116f9(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_description */
extern void T114f13(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_description */
extern void T112f9(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_recipient_name */
extern void T144f10(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_recipient_name */
extern void T143f10(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_recipient_name */
extern void T142f14(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_recipient_name */
extern void T141f10(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_recipient_name */
extern void T140f10(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_recipient_name */
extern void T139f10(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_recipient_name */
extern void T138f10(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_recipient_name */
extern void T137f10(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_recipient_name */
extern void T136f10(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_recipient_name */
extern void T135f10(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_recipient_name */
extern void T134f10(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_recipient_name */
extern void T133f10(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_recipient_name */
extern void T132f10(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_recipient_name */
extern void T131f10(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_recipient_name */
extern void T130f10(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_recipient_name */
extern void T129f10(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_recipient_name */
extern void T128f10(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_recipient_name */
extern void T125f13(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_recipient_name */
extern void T124f18(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_recipient_name */
extern void T123f12(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_recipient_name */
extern void T122f14(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_recipient_name */
extern void T121f12(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_recipient_name */
extern void T120f12(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_recipient_name */
extern void T119f13(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_recipient_name */
extern void T116f10(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_recipient_name */
extern void T114f14(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_recipient_name */
extern void T112f10(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_type_name */
extern void T144f11(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_type_name */
extern void T143f11(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_type_name */
extern void T142f15(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_type_name */
extern void T141f11(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_type_name */
extern void T140f11(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_type_name */
extern void T139f11(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_type_name */
extern void T138f11(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_type_name */
extern void T137f11(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_type_name */
extern void T136f11(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_type_name */
extern void T135f11(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_type_name */
extern void T134f11(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_type_name */
extern void T133f11(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_type_name */
extern void T132f11(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_type_name */
extern void T131f11(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_type_name */
extern void T130f11(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_type_name */
extern void T129f11(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_type_name */
extern void T128f11(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_type_name */
extern void T125f14(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_type_name */
extern void T124f19(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_type_name */
extern void T123f13(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_type_name */
extern void T122f15(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_type_name */
extern void T121f13(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_type_name */
extern void T120f13(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_type_name */
extern void T119f14(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_type_name */
extern void T116f11(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_type_name */
extern void T114f15(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_type_name */
extern void T112f11(GE_context* ac, T0* C, T0* a1);
/* [attached] LX_SYMBOL_TRANSITION [[attached] LX_NFA_STATE].labeled */
extern T1 T2793f3(GE_context* ac, T0* C, T6 a1);
/* [attached] LX_EPSILON_TRANSITION [[attached] LX_NFA_STATE].labeled */
extern T1 T2790f2(GE_context* ac, T0* C, T6 a1);
/* [attached] LX_SYMBOL_CLASS_TRANSITION [[attached] LX_NFA_STATE].labeled */
extern T1 T2788f3(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_KEYWORD.position */
extern T0* T2059f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.name */
extern T0* T2098f51(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.name */
extern T0* T2097f48(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.target */
extern T0* T2157f5(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.target */
extern T0* T397f14(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.name */
extern T0* T2685f18(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.name */
extern T0* T2122f12(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.name */
extern T0* T2121f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.name */
extern T0* T445f3(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.arguments */
extern T0* T2685f15(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.target */
extern T0* T2100f7(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_freeop */
extern T1 T2086f10(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_freeop */
extern T1 T2084f11(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_freeop */
extern T1 T2044f37(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.operator_name */
extern T0* T2086f11(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.operator_name */
extern T0* T2084f12(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.operator_name */
extern T0* T1533f12(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.position */
extern T0* T2086f39(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.position */
extern T0* T1573f59(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_once_per_process */
extern T1 T2145f28(GE_context* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.has_process_key */
extern T1 T2472f2(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_once_per_process */
extern T1 T2144f26(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_once_per_process */
extern T1 T2141f29(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_once_per_process */
extern T1 T2140f27(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.full_name */
extern T0* T1463f43(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.relative_name */
extern T0* T1463f58(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_CLUSTER.relative_name */
extern T0* T1463f58p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.relative_name */
extern T0* T236f110(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.string_ */
extern T0* T236f112(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].is_empty */
extern T1 T1564f10(GE_context* ac, T0* C);
/* ET_NONE_GROUP.full_name */
extern T0* T723f13(GE_context* ac, T0* C, T2 a1);
/* ET_NONE_GROUP.relative_name */
extern T0* T723f17(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.string_ */
extern T0* T723f23(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.full_name */
extern T0* T564f30(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_CLUSTER.relative_name */
extern T0* T564f47(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_CLUSTER.relative_name */
extern T0* T564f47p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.full_name */
extern T0* T536f14(GE_context* ac, T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.relative_name */
extern T0* T536f18(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.string_ */
extern T0* T536f24(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.full_name */
extern T0* T286f44(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_CLUSTER.relative_name */
extern T0* T286f48(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_CLUSTER.relative_name */
extern T0* T286f48p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.parent */
extern T0* T723f14(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.parent */
extern T0* T536f15(GE_context* ac, T0* C);
/* ET_NONE_GROUP.absolute_pathname */
extern T0* T723f15(GE_context* ac, T0* C);
/* ET_NONE_GROUP.file_system */
extern T0* T723f21(GE_context* ac, T0* C);
/* ET_NONE_GROUP.unix_file_system */
extern T0* T723f27(GE_context* ac, T0* C);
/* ET_NONE_GROUP.windows_file_system */
extern T0* T723f26(GE_context* ac, T0* C);
/* ET_NONE_GROUP.operating_system */
extern T0* T723f25(GE_context* ac, T0* C);
/* ET_NONE_GROUP.full_pathname */
extern T0* T723f20(GE_context* ac, T0* C);
/* ET_NONE_GROUP.pathname */
extern T0* T723f24(GE_context* ac, T0* C);
/* ET_NONE_GROUP.execution_environment */
extern T0* T723f19(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.absolute_pathname */
extern T0* T536f16(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.file_system */
extern T0* T536f22(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.unix_file_system */
extern T0* T536f28(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.windows_file_system */
extern T0* T536f27(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.operating_system */
extern T0* T536f26(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.full_pathname */
extern T0* T536f21(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.pathname */
extern T0* T536f25(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.execution_environment */
extern T0* T536f20(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.kind_lower_name */
extern T0* T1463f50(GE_context* ac, T0* C);
/* ET_LIBRARY.kind_lower_name */
extern T0* T659f99(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.kind_lower_name */
extern T0* T564f37(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.kind_lower_name */
extern T0* T286f46(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.kind_lower_name */
extern T0* T236f113(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.last_position */
extern T0* T2776f4(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_position */
extern T0* T2064f42(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.last_position */
extern T0* T2063f42(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.last_position */
extern T0* T2062f17(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.last_position */
extern T0* T2060f39(GE_context* ac, T0* C);
/* ET_VOID.last_position */
extern T0* T2058f29(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_position */
extern T0* T2053f41(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_position */
extern T0* T2052f41(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.last_position */
extern T0* T2051f63(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.last_position */
extern T0* T2050f63(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_position */
extern T0* T2049f63(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_position */
extern T0* T2048f63(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_position */
extern T0* T2047f31(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.last_position */
extern T0* T2046f35(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_position */
extern T0* T2045f43(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.last_position */
extern T0* T2032f39(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_position */
extern T0* T1532f32(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.last_position */
extern T0* T846f101(GE_context* ac, T0* C);
/* ET_KEYWORD.last_position */
extern T0* T539f35(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_position */
extern T0* T495f63(GE_context* ac, T0* C);
/* ET_SYMBOL.last_position */
extern T0* T474f71(GE_context* ac, T0* C);
/* ET_RESULT.last_position */
extern T0* T422f30(GE_context* ac, T0* C);
/* ET_CURRENT.last_position */
extern T0* T390f28(GE_context* ac, T0* C);
/* ET_IDENTIFIER.last_position */
extern T0* T232f99(GE_context* ac, T0* C);
/* ET_KEYWORD_EXPRESSION.position */
extern T0* T2103f3(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.like_keyword */
extern T0* T2098f45(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_8 */
extern T1 T2051f9(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T2051f27(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T2050f9(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T2050f28(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T2049f9(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T2049f27(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_8 */
extern T1 T2048f9(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T2048f28(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_8 */
extern T1 T495f23(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T495f38(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_16 */
extern T1 T2051f10(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T2051f28(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T2050f10(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T2050f29(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T2049f10(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T2049f28(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_16 */
extern T1 T2048f10(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T2048f29(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_16 */
extern T1 T495f24(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T495f39(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_8 */
extern T1 T2051f13(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T2050f13(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T2049f13(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_8 */
extern T1 T2048f13(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_8 */
extern T1 T495f27(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_16 */
extern T1 T2051f14(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T2050f14(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T2049f14(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_16 */
extern T1 T2048f14(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_16 */
extern T1 T495f28(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_32 */
extern T1 T2051f15(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T2050f15(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T2049f15(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_32 */
extern T1 T2048f15(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_32 */
extern T1 T495f29(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_32 */
extern T1 T2051f11(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T2051f29(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T2050f11(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T2050f30(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T2049f11(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T2049f29(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_32 */
extern T1 T2048f11(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T2048f30(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_32 */
extern T1 T495f25(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T495f17(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_64 */
extern T1 T2051f12(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T2051f30(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T2050f12(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T2050f31(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T2049f12(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T2049f30(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_64 */
extern T1 T2048f12(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T2048f31(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_64 */
extern T1 T495f26(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T495f40(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T2051f18(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T2050f18(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T2048f18(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T495f32(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_binary */
extern T1 T2050f19(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_binary */
extern T1 T2049f19(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_binary */
extern T1 T2048f19(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_binary */
extern T1 T495f33(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_64 */
extern T1 T2051f16(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T2050f16(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T2049f16(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_64 */
extern T1 T2048f16(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_64 */
extern T1 T495f30(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.value_position */
extern T0* T2051f44(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.value_position */
extern T0* T2050f44(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.value_position */
extern T0* T2049f44(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.value_position */
extern T0* T2048f44(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.value_position */
extern T0* T495f45(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_negative */
extern T1 T2051f31(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_negative */
extern T1 T2050f27(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_negative */
extern T1 T2049f31(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_negative */
extern T1 T2048f27(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_negative */
extern T1 T495f15(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.selected_count */
extern T6 T1724f25(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.selected_count */
extern T6 T1246f27(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.has_replication */
extern T1 T1724f22(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.has_replication */
extern T1 T1246f24(GE_context* ac, T0* C);
/* ET_REPLICATED_FEATURE.replicated_feature */
extern T0* T1930f4(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.replicated_feature */
extern T0* T1724f23(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.replicated_feature */
extern T0* T1246f25(GE_context* ac, T0* C);
/* ET_REPLICATED_FEATURE.first_feature */
extern T0* T1930f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].first */
extern T0* T1936f8(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.first_feature */
extern T0* T1724f24(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.first_feature */
extern T0* T1246f26(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T1895f23(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T1712f42(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T1243f40(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].item */
extern T0* T2212f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].item */
extern T0* T1759f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].item */
extern T0* T820f9(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.has_type */
extern T1 T377f14(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.index_of */
extern T6 T587f47(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.index_of */
extern T6 T586f47(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.index_of */
extern T6 T434f45(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.index_of */
extern T6 T412f45(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.index_of */
extern T6 T377f16(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.index_of */
extern T6 T320f44(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_ASSERTION.position */
extern T0* T2091f2(GE_context* ac, T0* C);
/* ET_TAGGED_ASSERTION.position */
extern T0* T1718f6(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.assertion */
extern T0* T2161f19(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.assertion */
extern T0* T2160f5(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.assertion */
extern T0* T2159f13(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.assertion */
extern T0* T2158f5(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T2146f18(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T2145f19(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T2144f19(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.assertion */
extern T0* T2142f18(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.assertion */
extern T0* T2141f18(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.assertion */
extern T0* T2140f18(GE_context* ac, T0* C);
/* ET_CALL_AGENT.assertion */
extern T0* T2139f12(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.assertion */
extern T0* T2138f13(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.assertion */
extern T0* T2137f14(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.assertion */
extern T0* T2136f5(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.assertion */
extern T0* T2135f5(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.assertion */
extern T0* T2134f5(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.assertion */
extern T0* T2133f5(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.assertion */
extern T0* T2128f11(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.assertion */
extern T0* T2127f5(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.assertion */
extern T0* T2126f5(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.assertion */
extern T0* T2125f5(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.assertion */
extern T0* T2124f5(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.assertion */
extern T0* T2123f11(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.assertion */
extern T0* T2122f13(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.assertion */
extern T0* T2111f12(GE_context* ac, T0* C);
/* ET_CLASS_ASSERTION.assertion */
extern T0* T2091f5(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.assertion */
extern T0* T2064f8(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.assertion */
extern T0* T2063f8(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.assertion */
extern T0* T2060f8(GE_context* ac, T0* C);
/* ET_VOID.assertion */
extern T0* T2058f5(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.assertion */
extern T0* T2053f9(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.assertion */
extern T0* T2052f9(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.assertion */
extern T0* T2051f21(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.assertion */
extern T0* T2050f21(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.assertion */
extern T0* T2049f21(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.assertion */
extern T0* T2048f21(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.assertion */
extern T0* T2047f10(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.assertion */
extern T0* T2046f27(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.assertion */
extern T0* T2045f8(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.assertion */
extern T0* T2032f8(GE_context* ac, T0* C);
/* ET_TAGGED_ASSERTION.assertion */
extern T0* T1718f3(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.assertion */
extern T0* T1532f16(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.assertion */
extern T0* T1384f12(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.assertion */
extern T0* T495f34(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.assertion */
extern T0* T444f12(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.assertion */
extern T0* T433f8(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.assertion */
extern T0* T432f8(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.assertion */
extern T0* T431f11(GE_context* ac, T0* C);
/* ET_RESULT.assertion */
extern T0* T422f16(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.assertion */
extern T0* T399f17(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T397f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T396f12(GE_context* ac, T0* C);
/* ET_CURRENT.assertion */
extern T0* T390f13(GE_context* ac, T0* C);
/* ET_IDENTIFIER.assertion */
extern T0* T232f54(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.agent_actual_argument */
extern T0* T2686f14(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.agent_actual_argument */
extern T0* T2685f14(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.agent_actual_argument */
extern T0* T2684f14(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.agent_actual_argument */
extern T0* T2489f14(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.agent_actual_argument */
extern T0* T2161f26(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.agent_actual_argument */
extern T0* T2160f17(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.agent_actual_argument */
extern T0* T2159f22(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.agent_actual_argument */
extern T0* T2158f15(GE_context* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.agent_actual_argument */
extern T0* T2149f6(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T2146f29(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T2145f35(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T2144f31(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T2142f30(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T2141f36(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T2140f32(GE_context* ac, T0* C);
/* ET_CALL_AGENT.agent_actual_argument */
extern T0* T2139f22(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.agent_actual_argument */
extern T0* T2138f22(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.agent_actual_argument */
extern T0* T2137f22(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.agent_actual_argument */
extern T0* T2136f19(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.agent_actual_argument */
extern T0* T2135f15(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.agent_actual_argument */
extern T0* T2134f20(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.agent_actual_argument */
extern T0* T2133f16(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.agent_actual_argument */
extern T0* T2128f18(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.agent_actual_argument */
extern T0* T2127f17(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.agent_actual_argument */
extern T0* T2126f15(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.agent_actual_argument */
extern T0* T2125f15(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.agent_actual_argument */
extern T0* T2124f15(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.agent_actual_argument */
extern T0* T2123f19(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.agent_actual_argument */
extern T0* T2122f19(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.agent_actual_argument */
extern T0* T2111f21(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T2064f26(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T2063f26(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.agent_actual_argument */
extern T0* T2060f26(GE_context* ac, T0* C);
/* ET_VOID.agent_actual_argument */
extern T0* T2058f23(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.agent_actual_argument */
extern T0* T2056f67(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.agent_actual_argument */
extern T0* T2053f28(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.agent_actual_argument */
extern T0* T2052f28(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T2051f45(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T2050f45(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T2049f45(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T2048f45(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.agent_actual_argument */
extern T0* T2047f28(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.agent_actual_argument */
extern T0* T2046f32(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T2045f27(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.agent_actual_argument */
extern T0* T2032f26(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.agent_actual_argument */
extern T0* T1532f27(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.agent_actual_argument */
extern T0* T1384f19(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T495f46(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.agent_actual_argument */
extern T0* T444f22(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T433f15(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T432f16(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.agent_actual_argument */
extern T0* T431f18(GE_context* ac, T0* C);
/* ET_RESULT.agent_actual_argument */
extern T0* T422f24(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.agent_actual_argument */
extern T0* T399f22(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T397f18(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T396f20(GE_context* ac, T0* C);
/* ET_CURRENT.agent_actual_argument */
extern T0* T390f25(GE_context* ac, T0* C);
/* ET_IDENTIFIER.agent_actual_argument */
extern T0* T232f92(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.choice */
extern T0* T2122f22(GE_context* ac, T0* C);
/* ET_CHOICE_RANGE.choice */
extern T0* T2116f5(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.choice */
extern T0* T2064f33(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.choice */
extern T0* T2063f33(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.choice */
extern T0* T2051f52(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.choice */
extern T0* T2050f52(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.choice */
extern T0* T2049f52(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.choice */
extern T0* T2048f52(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.choice */
extern T0* T2045f34(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.choice */
extern T0* T495f53(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.choice */
extern T0* T397f21(GE_context* ac, T0* C);
/* ET_IDENTIFIER.choice */
extern T0* T232f102(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.lower */
extern T0* T2122f25(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.lower */
extern T0* T2064f38(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.lower */
extern T0* T2063f38(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.lower */
extern T0* T2051f59(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.lower */
extern T0* T2050f59(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.lower */
extern T0* T2049f59(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.lower */
extern T0* T2048f59(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.lower */
extern T0* T2045f39(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.lower */
extern T0* T495f58(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.lower */
extern T0* T397f25(GE_context* ac, T0* C);
/* ET_IDENTIFIER.lower */
extern T0* T232f107(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_range */
extern T1 T2122f24(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_range */
extern T1 T2064f37(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_range */
extern T1 T2063f37(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_range */
extern T1 T2051f58(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_range */
extern T1 T2050f58(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_range */
extern T1 T2049f58(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_range */
extern T1 T2048f58(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_range */
extern T1 T2045f38(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_range */
extern T1 T495f57(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_range */
extern T1 T397f24(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_range */
extern T1 T232f106(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.upper */
extern T0* T2122f26(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.upper */
extern T0* T2064f39(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.upper */
extern T0* T2063f39(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.upper */
extern T0* T2051f60(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.upper */
extern T0* T2050f60(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.upper */
extern T0* T2049f60(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.upper */
extern T0* T2048f60(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.upper */
extern T0* T2045f40(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.upper */
extern T0* T495f59(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.upper */
extern T0* T397f26(GE_context* ac, T0* C);
/* ET_IDENTIFIER.upper */
extern T0* T232f108(GE_context* ac, T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.position */
extern T0* T2151f5(GE_context* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.position */
extern T0* T2150f6(GE_context* ac, T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T2074f4(GE_context* ac, T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.position */
extern T0* T2073f4(GE_context* ac, T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.type */
extern T0* T2151f4(GE_context* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.type */
extern T0* T2150f5(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T2154f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T2151f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T2150f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T2098f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T2097f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T2074f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_comma_actual_parameter */
extern T0* T359f967(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T2073f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_actual_parameter */
extern T0* T359f966(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint_with_type */
extern T0* T498f68(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CUSTOM_ATTRIBUTE.indexing_term */
extern T0* T2070f7(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.indexing_term */
extern T0* T2064f32(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.indexing_term */
extern T0* T2063f32(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.indexing_term */
extern T0* T2060f32(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.indexing_term */
extern T0* T2053f34(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.indexing_term */
extern T0* T2052f34(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.indexing_term */
extern T0* T2051f51(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.indexing_term */
extern T0* T2050f51(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.indexing_term */
extern T0* T2049f51(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.indexing_term */
extern T0* T2048f51(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.indexing_term */
extern T0* T2047f36(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.indexing_term */
extern T0* T2046f40(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.indexing_term */
extern T0* T2045f33(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.indexing_term */
extern T0* T2032f32(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.indexing_term */
extern T0* T1532f35(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.indexing_term */
extern T0* T495f52(GE_context* ac, T0* C);
/* ET_IDENTIFIER.indexing_term */
extern T0* T232f101(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix */
extern T1 T2086f8(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix */
extern T1 T1573f13(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.lower_name */
extern T0* T649f97(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.lower_name */
extern T0* T311f113(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.lower_name */
extern T0* T290f106(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.lower_name */
extern T0* T267f23(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.lower_name */
extern T0* T265f97(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.lower_name */
extern T0* T260f21(GE_context* ac, T0* C);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_capability_aware */
extern T1 T1525f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_capability_aware */
extern T1 T1524f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.is_capability_aware */
extern T1 T1523f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_capability_aware */
extern T1 T1522f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_CONDITION.is_capability_aware */
extern T1 T1521f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.is_capability_aware */
extern T1 T1520f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.is_capability_aware */
extern T1 T1519f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.string_ */
extern T0* T1519f6(GE_context* ac, T0* C);
/* ET_ECF_BUILD_CONDITION.is_capability_aware */
extern T1 T1518f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_capability_supported */
extern T1 T1525f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_capability_supported */
extern T1 T1524f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_PLATFORM_CONDITION.is_capability_supported */
extern T1 T1523f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_capability_supported */
extern T1 T1522f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_CONDITION.is_capability_supported */
extern T1 T1521f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CUSTOM_CONDITION.is_capability_supported */
extern T1 T1520f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T1 T1519f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T0* T1519f4ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T0* T1519f4ac2(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].go_after */
extern void T109f82(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].cursor_go_after */
extern void T109f78(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].put_last */
extern void T109f81(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].compress */
extern void T109f84(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].move_all_cursors */
extern void T109f85(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].do_all */
extern void T178f27(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].append_last */
extern void T109f80(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].extend_last */
extern void T109f83(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].extendible */
extern T1 T109f38(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_CONCURRENCY_CONDITION.supported_concurrency_capability_values */
extern T0* T1519f8(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.supported_concurrency_capability_values */
extern T0* T1519f8ac1(GE_context* ac, T0* a1);
/* UC_UTF8_STRING.has */
extern T1 T1557f66(GE_context* ac, T0* C, T2 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].set_hash_function */
extern void T109f79(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.case_insensitive_string_equality_tester */
extern T0* T1519f7(GE_context* ac, T0* C);
/* ET_ECF_BUILD_CONDITION.is_capability_supported */
extern T1 T1518f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_enabled */
extern T1 T1525f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_included */
extern T1 T1525f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_enabled */
extern T1 T1524f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_included */
extern T1 T1524f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T1 T1523f5(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T0* T1523f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].there_exists */
extern T1 T178f16(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.string_ */
extern T0* T1523f7(GE_context* ac, T0* C);
/* ET_ECF_PLATFORM_CONDITION.operating_system */
extern T0* T1523f6(GE_context* ac, T0* C);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_enabled */
extern T1 T1522f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_CONDITION.is_enabled */
extern T1 T1521f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.is_enabled */
extern T1 T1520f7(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.compile_case_sensitive */
extern T0* T2452c18(GE_context* ac, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.string_ */
extern T0* T1520f8(GE_context* ac, T0* C);
/* ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T1 T1519f5(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T0* T1519f5ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_BUILD_CONDITION.is_enabled */
extern T1 T1518f5(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_BUILD_CONDITION.is_enabled */
extern T0* T1518f5ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_BUILD_CONDITION.string_ */
extern T0* T1518f6(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.parenthesis_call */
extern T0* T2686f20(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.parenthesis_call */
extern T0* T2136f16(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.parenthesis_call */
extern T0* T2134f17(GE_context* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.parenthesis_call */
extern T0* T1528f7(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments_count */
extern T6 T2686f21(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.arguments_count */
extern T6 T2136f17(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.arguments_count */
extern T6 T2134f18(GE_context* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.arguments_count */
extern T6 T1528f8(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.arguments_count */
extern T6 T396f18(GE_context* ac, T0* C);
/* ET_CUSTOM_ATTRIBUTE.has_indexing_term_value */
extern T1 T2070f5(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.has_indexing_term_value */
extern T1 T2064f30(GE_context* ac, T0* C, T0* a1);
/* CHARACTER_32.as_lower */
extern T3 T3f5(GE_context* ac, T3* C);
/* CHARACTER_PROPERTY.to_lower */
extern T3 T2821f1(GE_context* ac, T0* C, T3 a1);
/* CHARACTER_PROPERTY.to_lower_table_15 */
extern T0* T2821f17(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_14 */
extern T0* T2821f16(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_13 */
extern T0* T2821f15(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_12 */
extern T0* T2821f14(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_11 */
extern T0* T2821f13(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_10 */
extern T0* T2821f12(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_9 */
extern T0* T2821f11(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_8 */
extern T0* T2821f10(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_7 */
extern T0* T2821f9(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_6 */
extern T0* T2821f8(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_5 */
extern T0* T2821f7(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_4 */
extern T0* T2821f6(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_3 */
extern T0* T2821f5(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_2 */
extern T0* T2821f4(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_1 */
extern T0* T2821f3(GE_context* ac, T0* C);
/* CHARACTER_32.plus */
extern T3 T3f10(GE_context* ac, T3* C, T10 a1);
/* CHARACTER_32.is_less_equal */
extern T1 T3f9(GE_context* ac, T3* C, T3 a1);
/* CHARACTER_32.is_less */
extern T1 T3f11(GE_context* ac, T3* C, T3 a1);
/* CHARACTER_32.properties */
extern T0* T3f7(GE_context* ac, T3* C);
/* CHARACTER_PROPERTY.make */
extern T0* T2821c18(GE_context* ac);
/* ET_C1_CHARACTER_CONSTANT.has_indexing_term_value */
extern T1 T2063f30(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.has_indexing_term_value */
extern T1 T2060f30(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.string_ */
extern T0* T2060f35(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_indexing_term_value */
extern T1 T2053f32(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.is_plus */
extern T1 T2054f57(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.string_ */
extern T0* T2053f37(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_indexing_term_value */
extern T1 T2052f32(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.string_ */
extern T0* T2052f37(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.has_indexing_term_value */
extern T1 T2051f49(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.string_ */
extern T0* T2051f56(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_indexing_term_value */
extern T1 T2050f49(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.string_ */
extern T0* T2050f56(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_indexing_term_value */
extern T1 T2049f49(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.string_ */
extern T0* T2049f56(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_indexing_term_value */
extern T1 T2048f49(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.string_ */
extern T0* T2048f56(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_indexing_term_value */
extern T1 T2047f34(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.string_ */
extern T0* T2047f39(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.has_indexing_term_value */
extern T1 T2046f38(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.string_ */
extern T0* T2046f43(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_indexing_term_value */
extern T1 T2045f31(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.has_indexing_term_value */
extern T1 T2032f30(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.string_ */
extern T0* T2032f35(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_indexing_term_value */
extern T1 T1532f33(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.string_ */
extern T0* T1532f38(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_indexing_term_value */
extern T1 T495f50(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.string_ */
extern T0* T495f56(GE_context* ac, T0* C);
/* ET_IDENTIFIER.has_indexing_term_value */
extern T1 T232f100(GE_context* ac, T0* C, T0* a1);
/* ET_CUSTOM_ATTRIBUTE.position */
extern T0* T2070f6(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.indexing_term_value */
extern T0* T2064f36(GE_context* ac, T0* C);
/* CHARACTER_32.out */
extern T0* T3f6(GE_context* ac, T3* C);
/* NATURAL_32.to_hex_string */
extern T0* T10f27(GE_context* ac, T10* C);
/* NATURAL_32.to_hex_character */
extern T2 T10f28(GE_context* ac, T10* C);
/* ET_C1_CHARACTER_CONSTANT.indexing_term_value */
extern T0* T2063f36(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.indexing_term_value */
extern T0* T2060f36(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.indexing_term_value */
extern T0* T2053f38(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.text */
extern T0* T2054f58(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.indexing_term_value */
extern T0* T2052f38(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.indexing_term_value */
extern T0* T2051f57(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.indexing_term_value */
extern T0* T2050f57(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.indexing_term_value */
extern T0* T2049f57(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.indexing_term_value */
extern T0* T2048f57(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.indexing_term_value */
extern T0* T2047f40(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.indexing_term_value */
extern T0* T2046f44(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.indexing_term_value */
extern T0* T2045f37(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.indexing_term_value */
extern T0* T2032f36(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.indexing_term_value */
extern T0* T1532f39(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.indexing_term_value */
extern T0* T495f61(GE_context* ac, T0* C);
/* ET_IDENTIFIER.indexing_term_value */
extern T0* T232f110(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.locals */
extern T0* T2146f25(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.locals */
extern T0* T2142f27(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.type */
extern T0* T2146f17(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.type */
extern T0* T2145f22(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.type */
extern T0* T2144f21(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.type */
extern T0* T2142f17(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.type */
extern T0* T2141f24(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.type */
extern T0* T2140f23(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_immediate_feature */
extern T0* T2152f33(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_immediate_feature */
extern T0* T2082f32(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_immediate_feature */
extern T0* T2081f36(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_immediate_feature */
extern T0* T2080f36(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_immediate_feature */
extern T0* T2079f36(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.immediate_feature */
extern T0* T1724f10(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.immediate_feature */
extern T0* T1246f11(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_immediate_feature */
extern T0* T596f49(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_immediate_feature */
extern T0* T592f51(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_immediate_feature */
extern T0* T496f49(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_immediate_feature */
extern T0* T494f53(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_immediate_feature */
extern T0* T492f51(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_immediate_feature */
extern T0* T454f54(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_immediate_feature */
extern T0* T344f39(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_feature */
extern T0* T2152f31(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_feature */
extern T0* T2082f69(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_feature */
extern T0* T2081f34(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_feature */
extern T0* T2080f34(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_feature */
extern T0* T2079f34(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_feature */
extern T0* T596f47(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_feature */
extern T0* T592f49(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_feature */
extern T0* T496f47(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_feature */
extern T0* T494f51(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_feature */
extern T0* T492f49(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_feature */
extern T0* T454f52(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_feature */
extern T0* T344f37(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_redeclared */
extern T1 T2152f35(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_redeclared */
extern T1 T2082f34(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_redeclared */
extern T1 T2081f38(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_redeclared */
extern T1 T2080f38(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_redeclared */
extern T1 T2079f38(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.is_redeclared */
extern T1 T1246f13(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_redeclared */
extern T1 T596f51(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_redeclared */
extern T1 T592f53(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_redeclared */
extern T1 T496f51(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_redeclared */
extern T1 T494f55(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_redeclared */
extern T1 T492f53(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_redeclared */
extern T1 T454f56(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_redeclared */
extern T1 T344f41(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_redeclared_feature */
extern T0* T2152f36(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_redeclared_feature */
extern T0* T2082f35(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_redeclared_feature */
extern T0* T2081f39(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_redeclared_feature */
extern T0* T2080f39(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_redeclared_feature */
extern T0* T2079f39(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.redeclared_feature */
extern T0* T1724f13(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.redeclared_feature */
extern T0* T1246f14(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_redeclared_feature */
extern T0* T596f52(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_redeclared_feature */
extern T0* T592f54(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T496f52(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T494f56(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T492f54(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T454f57(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_redeclared_feature */
extern T0* T344f42(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_inherited */
extern T1 T2152f37(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_inherited */
extern T1 T2082f36(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_inherited */
extern T1 T2081f40(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_inherited */
extern T1 T2080f40(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_inherited */
extern T1 T2079f40(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_inherited */
extern T1 T1724f14(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_inherited */
extern T1 T596f53(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_inherited */
extern T1 T592f55(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_inherited */
extern T1 T496f53(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_inherited */
extern T1 T494f57(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_inherited */
extern T1 T492f55(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_inherited */
extern T1 T454f58(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_inherited */
extern T1 T344f43(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_inherited_feature */
extern T0* T2152f38(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_inherited_feature */
extern T0* T2082f37(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_inherited_feature */
extern T0* T2081f41(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_inherited_feature */
extern T0* T2080f41(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_inherited_feature */
extern T0* T2079f41(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.inherited_feature */
extern T0* T1724f15(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.inherited_feature */
extern T0* T1246f16(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_inherited_feature */
extern T0* T596f54(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_inherited_feature */
extern T0* T592f56(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_inherited_feature */
extern T0* T496f54(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_inherited_feature */
extern T0* T494f58(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_inherited_feature */
extern T0* T492f56(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_inherited_feature */
extern T0* T454f59(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_inherited_feature */
extern T0* T344f44(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_adapted */
extern T1 T2152f39(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_adapted */
extern T1 T2082f38(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_adapted */
extern T1 T2081f42(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_adapted */
extern T1 T2080f42(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_adapted */
extern T1 T2079f42(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_adapted */
extern T1 T596f55(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_adapted */
extern T1 T592f57(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_adapted */
extern T1 T496f55(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_adapted */
extern T1 T494f59(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_adapted */
extern T1 T492f57(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_adapted */
extern T1 T454f60(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_adapted */
extern T1 T344f45(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_adapted_feature */
extern T0* T2152f34(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_adapted_feature */
extern T0* T2082f33(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_adapted_feature */
extern T0* T2081f37(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_adapted_feature */
extern T0* T2080f37(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_adapted_feature */
extern T0* T2079f37(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.adapted_feature */
extern T0* T1724f11(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.adapted_feature */
extern T0* T1246f12(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_adapted_feature */
extern T0* T596f50(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_adapted_feature */
extern T0* T592f52(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_adapted_feature */
extern T0* T496f50(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_adapted_feature */
extern T0* T494f54(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_adapted_feature */
extern T0* T492f52(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_adapted_feature */
extern T0* T454f55(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_adapted_feature */
extern T0* T344f40(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.manifest_string */
extern T0* T2047f12(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.manifest_string */
extern T0* T2046f12(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.manifest_string */
extern T0* T1532f11(GE_context* ac, T0* C);
/* ET_CONVERT_FUNCTION.is_convert_from */
extern T1 T2075f7(GE_context* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_from */
extern T1 T701f4(GE_context* ac, T0* C);
/* ET_CONVERT_PROCEDURE.is_convert_to */
extern T1 T2076f7(GE_context* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_to */
extern T1 T701f5(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint */
extern T0* T2154f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T2151f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_named_type */
extern T0* T359f964(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T2150f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_generic_named_type */
extern T0* T359f963(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.resolved_syntactical_constraint */
extern T0* T2072f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_actual_parameter_list */
extern T0* T359f965(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.item */
extern T0* T2072f11(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.position */
extern T0* T2072f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint */
extern T0* T2098f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint */
extern T0* T2097f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint */
extern T0* T498f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C2_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T2064f35(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T2063f35(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_integer_constant */
extern T1 T2060f34(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_integer_constant */
extern T1 T2053f36(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_integer_constant */
extern T1 T2052f36(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_integer_constant */
extern T1 T2047f38(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_integer_constant */
extern T1 T2046f42(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T2045f36(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_integer_constant */
extern T1 T2032f34(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_integer_constant */
extern T1 T1532f37(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.same_alias_name */
extern T1 T2086f9(GE_context* ac, T0* C, T0* a1);
extern T1 T2086f9ot1(T0* a1, T0** a2);
/* ET_INFIX_NAME.same_alias_name */
extern T1 T2085f38(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_alias_name */
extern T1 T2084f42(GE_context* ac, T0* C, T0* a1);
extern T1 T2084f42ot1(T0* a1, T0** a2);
/* ET_PREFIX_NAME.same_alias_name */
extern T1 T2083f38(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.same_alias_name */
extern T1 T1573f14(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_alias_name */
extern T1 T1533f31(GE_context* ac, T0* C, T0* a1);
extern T1 T1533f31ot1(T0* a1, T0** a2);
/* ET_ALIAS_FREE_NAME.is_infix */
extern T1 T2086f43(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix */
extern T1 T1573f10(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infixable */
extern T1 T2086f37(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infixable */
extern T1 T1573f9(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefixable */
extern T1 T2086f36(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefixable */
extern T1 T1573f8(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.alias_lower_name */
extern T0* T2086f40(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.alias_name */
extern T0* T2086f41(GE_context* ac, T0* C);
/* ET_INFIX_NAME.alias_lower_name */
extern T0* T2085f75(GE_context* ac, T0* C);
/* ET_INFIX_NAME.alias_name */
extern T0* T2085f77(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.alias_lower_name */
extern T0* T2084f62(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.alias_name */
extern T0* T2084f64(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.alias_lower_name */
extern T0* T2083f61(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.alias_name */
extern T0* T2083f63(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.alias_lower_name */
extern T0* T1573f60(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.alias_name */
extern T0* T1573f61(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.alias_lower_name */
extern T0* T1533f62(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.alias_name */
extern T0* T1533f63(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_32 */
extern T6 T2051f54(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T2050f54(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T2049f54(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_32 */
extern T6 T2048f54(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_32 */
extern T6 T495f14(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.named_parameter_with_type */
extern T0* T2154f44(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_parameter_with_type */
extern T0* T2098f43(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_parameter_with_type */
extern T0* T2097f40(GE_context* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T2095f4(GE_context* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T2093f4(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_with_type */
extern T0* T1895f17(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T1712f66(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T1243f64(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_with_type */
extern T0* T498f26(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_with_type */
extern T0* T345f52(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.named_parameter_with_type */
extern T0* T95f156(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_with_type */
extern T0* T93f50(GE_context* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T2095f8(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.position */
extern T0* T2093f8(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.label */
extern T0* T2154f72(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.label */
extern T0* T2098f69(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.label */
extern T0* T2097f72(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.label */
extern T0* T2095f7(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.label */
extern T0* T2093f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.label */
extern T0* T1895f66(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.label */
extern T0* T1712f72(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.label */
extern T0* T1243f71(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.label */
extern T0* T498f67(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.label */
extern T0* T345f101(GE_context* ac, T0* C);
/* ET_CLASS.label */
extern T0* T95f236(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.label */
extern T0* T93f107(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.last_leaf */
extern T0* T2095f9(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.last_leaf */
extern T0* T2093f9(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.last_leaf */
extern T0* T1712f74(GE_context* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.last_leaf */
extern T0* T1244f11(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.last_leaf */
extern T0* T1243f73(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.error_position */
extern T0* T775f60(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.error_position */
extern T0* T773f56(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.error_position */
extern T0* T772f58(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.error_position */
extern T0* T732f66(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.end_of_file */
extern T1 T775f62(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.end_of_file */
extern T1 T773f63(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.end_of_file */
extern T1 T772f60(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.end_of_file */
extern T1 T732f68(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_applicable_encoding */
extern T1 T775f63(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_applicable_encoding */
extern T1 T1558f20(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_valid_encoding */
extern T1 T1558f13(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.is_applicable_encoding */
extern T1 T773f49(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_applicable_encoding */
extern T1 T772f61(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T732f69(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.start_condition */
extern T6 T775f64(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.start_condition */
extern T6 T773f51(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.start_condition */
extern T6 T772f62(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.start_condition */
extern T6 T732f44(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T1463f48(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.is_included */
extern T1 T1488f3(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_FILE_RULES.is_included */
extern T0* T1488f3ac1(GE_context* ac, T0* a1);
/* ET_ECF_FILE_RULE.is_included */
extern T1 T1487f10(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_FILE_RULE.is_included */
extern T0* T1487f10ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_FILE_RULE.is_included */
extern T0* T1487f10ac2(GE_context* ac, T0* a1);
/* [attached] PREDICATE [[attached] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION]].set_rout_disp_final */
extern void T2831f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [attached] DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION].there_exists */
extern T1 T2433f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION].item */
extern T0* T2433f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].for_all */
extern T1 T2221f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.implicit_relative_name */
extern T0* T1463f62(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.unix_file_system */
extern T0* T1463f61(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T1463f48p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.has_eiffel_extension */
extern T1 T1463f63(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.operating_system */
extern T0* T1463f67(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T564f35(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_case_insensitive */
extern T1 T564f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8].go_after */
extern void T544f15(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.operating_system */
extern T0* T564f49(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T564f35p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_eiffel_extension */
extern T1 T564f51(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T286f26(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_EXCLUDE.has */
extern T1 T288f4(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_EXCLUDE.string_ */
extern T0* T288f5(GE_context* ac, T0* C);
/* ET_LACE_EXCLUDE.has_case_insensitive */
extern T1 T288f3(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.operating_system */
extern T0* T286f24(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T286f26p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.has_eiffel_extension */
extern T1 T286f37(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T1463f49(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T1463f49p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T564f36(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T564f36p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T286f27(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T286f27p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.full_pathname */
extern T0* T1463f47(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.windows_file_system */
extern T0* T1463f60(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.file_system */
extern T0* T1463f57(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.full_pathname */
extern T0* T564f34(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.file_system */
extern T0* T564f46(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.unix_file_system */
extern T0* T564f56(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.windows_file_system */
extern T0* T564f55(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.full_pathname */
extern T0* T286f35(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.file_system */
extern T0* T286f23(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.unix_file_system */
extern T0* T286f28(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.windows_file_system */
extern T0* T286f25(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.pathname */
extern T0* T286f49(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.absolute_pathname */
extern T0* T1463f42(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.execution_environment */
extern T0* T1463f56(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.absolute_pathname */
extern T0* T564f29(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.execution_environment */
extern T0* T564f45(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.absolute_pathname */
extern T0* T286f45(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.execution_environment */
extern T0* T286f50(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.scm_write_mapping_recursive */
extern T0* T1463f54(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.scm_write_mapping_recursive */
extern T0* T564f43(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.scm_write_mapping_recursive */
extern T0* T286f42(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.is_consumable */
extern T1 T649f96(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.is_consumable */
extern T1 T311f106(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.is_consumable */
extern T1 T290f99(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.is_consumable */
extern T1 T265f96(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.overridden_type_mark */
extern T0* T2071f17(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.implicit_type_mark */
extern T0* T94f49(GE_context* ac, T0* C, T1 a1, T1 a2, T1 a3, T1 a4, T1 a5);
/* ET_TOKEN_CONSTANTS.implicit_no_type_mark */
extern T0* T94f86(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_reference_type_mark */
extern T0* T94f85(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_reference_mark */
extern void T472f18(GE_context* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_expanded_type_mark */
extern T0* T94f84(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_expanded_mark */
extern void T472f17(GE_context* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_separate_reference_type_mark */
extern T0* T94f83(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_separate_expanded_type_mark */
extern T0* T94f82(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_reference_type_mark */
extern T0* T94f80(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_expanded_type_mark */
extern T0* T94f79(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_type_mark */
extern T0* T94f78(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_reference_type_mark */
extern T0* T94f77(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_expanded_type_mark */
extern T0* T94f76(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_reference_type_mark */
extern T0* T94f75(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_expanded_type_mark */
extern T0* T94f74(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_reference_type_mark */
extern T0* T94f73(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_expanded_type_mark */
extern T0* T94f72(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.tokens */
extern T0* T2071f13(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.overridden_type_mark */
extern T0* T2056f62(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.overridden_type_mark */
extern T0* T846f73(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.overridden_type_mark */
extern T0* T717f11(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.tokens */
extern T0* T717f15(GE_context* ac, T0* C);
/* ET_KEYWORD.overridden_type_mark */
extern T0* T539f18(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.overridden_type_mark */
extern T0* T474f3(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.overridden_type_mark */
extern T0* T472f12(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.tokens */
extern T0* T472f11(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.text */
extern T0* T2071f11(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.text */
extern T0* T2056f11(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.text */
extern T0* T846f12(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.text */
extern T0* T717f10(GE_context* ac, T0* C);
/* ET_SYMBOL.text */
extern T0* T474f12(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.text */
extern T0* T472f9(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_implicit_mark */
extern T1 T2071f10(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_implicit_mark */
extern T1 T2056f10(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_implicit_mark */
extern T1 T846f11(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_implicit_mark */
extern T1 T717f9(GE_context* ac, T0* C);
/* ET_KEYWORD.is_implicit_mark */
extern T1 T539f21(GE_context* ac, T0* C);
/* ET_SYMBOL.is_implicit_mark */
extern T1 T474f11(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.position */
extern T0* T472f13(GE_context* ac, T0* C);
/* ET_INFIX_NAME.same_extended_feature_name */
extern T1 T2085f76(GE_context* ac, T0* C, T0* a1);
/* KL_ANY_ROUTINES.same_objects */
extern T1 T164f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.any_ */
extern T0* T2085f60(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.same_extended_feature_name */
extern T1 T2084f63(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.any_ */
extern T0* T2084f44(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.same_extended_feature_name */
extern T1 T2083f62(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_NAME.any_ */
extern T0* T2083f46(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.same_extended_feature_name */
extern T1 T1728f4(GE_context* ac, T0* C, T0* a1);
/* ET_ALIASED_FEATURE_NAME.any_ */
extern T0* T1728f6(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.same_extended_feature_name */
extern T1 T1533f65(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.any_ */
extern T0* T1533f26(GE_context* ac, T0* C);
/* ET_IDENTIFIER.same_extended_feature_name */
extern T1 T232f90(GE_context* ac, T0* C, T0* a1);
/* ET_ALIASED_FEATURE_NAME.position */
extern T0* T1728f3(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.same_call_name */
extern T1 T1728f5(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_NAME.feature_alias_name */
extern T0* T2085f39(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.feature_alias_name */
extern T0* T2084f6(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.feature_alias_name */
extern T0* T2083f39(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.feature_alias_name */
extern T0* T1533f24(GE_context* ac, T0* C);
/* ET_IDENTIFIER.alias_name */
extern T0* T232f53(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_none */
extern T1 T1463f51(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_none */
extern T1 T564f28(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_none */
extern T1 T536f11(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_none */
extern T1 T286f29(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_unknown */
extern T1 T1463f55(GE_context* ac, T0* C);
/* ET_NONE_GROUP.is_unknown */
extern T1 T723f7(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_unknown */
extern T1 T564f31(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_unknown */
extern T1 T286f30(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_dotnet_assembly */
extern T1 T1463f37(GE_context* ac, T0* C);
/* ET_NONE_GROUP.is_dotnet_assembly */
extern T1 T723f10(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_dotnet_assembly */
extern T1 T564f33(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_dotnet_assembly */
extern T1 T536f4(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_dotnet_assembly */
extern T1 T286f31(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.dotnet_assembly */
extern T0* T1463f41(GE_context* ac, T0* C);
/* ET_NONE_GROUP.dotnet_assembly */
extern T0* T723f6(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.dotnet_assembly */
extern T0* T564f27(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.dotnet_assembly */
extern T0* T536f7(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.dotnet_assembly */
extern T0* T286f33(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.cluster */
extern T0* T1463f40(GE_context* ac, T0* C);
/* ET_NONE_GROUP.cluster */
extern T0* T723f5(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.cluster */
extern T0* T564f44(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.cluster */
extern T0* T536f6(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.cluster */
extern T0* T286f32(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.universe */
extern T0* T536f5(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.tokens */
extern T0* T536f8(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.current_system */
extern T0* T1463f39(GE_context* ac, T0* C);
/* ET_NONE_GROUP.current_system */
extern T0* T723f11(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.current_system */
extern T0* T564f40(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.current_system */
extern T0* T536f12(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.current_system */
extern T0* T286f36(GE_context* ac, T0* C);
/* ET_NONE_GROUP.is_cluster */
extern T1 T723f8(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_cluster */
extern T1 T536f9(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.full_lower_name */
extern T0* T1463f44(GE_context* ac, T0* C, T2 a1);
/* ET_NONE_GROUP.full_lower_name */
extern T0* T723f12(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_CLUSTER.full_lower_name */
extern T0* T564f32(GE_context* ac, T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.full_lower_name */
extern T0* T536f13(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_CLUSTER.full_lower_name */
extern T0* T286f43(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.kind_name */
extern T0* T1463f66(GE_context* ac, T0* C);
/* ET_NONE_GROUP.kind_name */
extern T0* T723f28(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.kind_name */
extern T0* T564f54(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.kind_name */
extern T0* T536f29(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.kind_name */
extern T0* T286f51(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.relative_lower_name */
extern T0* T1463f59(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_CLUSTER.relative_lower_name */
extern T0* T1463f59p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.relative_lower_name */
extern T0* T236f117(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.lower_name */
extern T0* T236f120(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.lower_name */
extern T0* T1463f68(GE_context* ac, T0* C);
/* ET_NONE_GROUP.relative_lower_name */
extern T0* T723f16(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.lower_name */
extern T0* T723f22(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.relative_lower_name */
extern T0* T564f48(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_CLUSTER.relative_lower_name */
extern T0* T564f48p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_CLUSTER.lower_name */
extern T0* T564f57(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.relative_lower_name */
extern T0* T536f17(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.lower_name */
extern T0* T536f23(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.relative_lower_name */
extern T0* T286f47(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_CLUSTER.relative_lower_name */
extern T0* T286f47p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_CLUSTER.lower_name */
extern T0* T286f52(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_class_assertion */
extern T1 T2161f17(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_class_assertion */
extern T1 T2160f9(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_class_assertion */
extern T1 T2159f16(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_class_assertion */
extern T1 T2158f8(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T2146f14(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T2145f15(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T2144f15(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T2142f22(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T2141f22(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T2140f22(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_class_assertion */
extern T1 T2139f10(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_class_assertion */
extern T1 T2138f11(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_class_assertion */
extern T1 T2137f11(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_class_assertion */
extern T1 T2136f8(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_class_assertion */
extern T1 T2135f9(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_class_assertion */
extern T1 T2134f8(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_class_assertion */
extern T1 T2133f9(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_class_assertion */
extern T1 T2128f8(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_class_assertion */
extern T1 T2127f9(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_class_assertion */
extern T1 T2126f8(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_class_assertion */
extern T1 T2125f8(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_class_assertion */
extern T1 T2124f8(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_class_assertion */
extern T1 T2123f10(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_class_assertion */
extern T1 T2122f9(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.is_class_assertion */
extern T1 T2111f16(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T2064f14(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T2063f14(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_class_assertion */
extern T1 T2060f13(GE_context* ac, T0* C);
/* ET_VOID.is_class_assertion */
extern T1 T2058f10(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_class_assertion */
extern T1 T2053f15(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_class_assertion */
extern T1 T2052f15(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_class_assertion */
extern T1 T2051f32(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_class_assertion */
extern T1 T2050f32(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_class_assertion */
extern T1 T2049f32(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_class_assertion */
extern T1 T2048f32(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_class_assertion */
extern T1 T2047f16(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_class_assertion */
extern T1 T2046f16(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T2045f14(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_class_assertion */
extern T1 T2032f13(GE_context* ac, T0* C);
/* ET_TAGGED_ASSERTION.is_class_assertion */
extern T1 T1718f5(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_class_assertion */
extern T1 T1532f22(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_class_assertion */
extern T1 T1384f14(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_class_assertion */
extern T1 T495f41(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_class_assertion */
extern T1 T444f16(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_class_assertion */
extern T1 T433f12(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_class_assertion */
extern T1 T432f12(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_class_assertion */
extern T1 T431f15(GE_context* ac, T0* C);
/* ET_RESULT.is_class_assertion */
extern T1 T422f20(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_class_assertion */
extern T1 T399f19(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_class_assertion */
extern T1 T397f13(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_class_assertion */
extern T1 T396f16(GE_context* ac, T0* C);
/* ET_CURRENT.is_class_assertion */
extern T1 T390f20(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_class_assertion */
extern T1 T232f81(GE_context* ac, T0* C);
/* ET_CLASS_ASSERTION.expression */
extern T0* T2091f3(GE_context* ac, T0* C);
/* ET_TAGGED_ASSERTION.expression */
extern T0* T1718f4(GE_context* ac, T0* C);
extern T1 T1718f4ot1(T0* a1, T0** a2);
/* ET_INVARIANTS.clients */
extern T0* T1735f21(GE_context* ac, T0* C);
/* ET_INVARIANTS.type */
extern T0* T1735f17(GE_context* ac, T0* C);
/* ET_INVARIANTS.arguments */
extern T0* T1735f13(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.locals */
extern T0* T2152f79(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.locals */
extern T0* T2081f72(GE_context* ac, T0* C);
/* ET_INVARIANTS.locals */
extern T0* T1735f14(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.locals */
extern T0* T596f70(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.locals */
extern T0* T496f68(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.locals */
extern T0* T494f72(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.locals */
extern T0* T492f71(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.locals */
extern T0* T344f81(GE_context* ac, T0* C);
/* ET_INVARIANTS.preconditions */
extern T0* T1735f23(GE_context* ac, T0* C);
/* ET_INVARIANTS.postconditions */
extern T0* T1735f24(GE_context* ac, T0* C);
/* ET_INVARIANTS.implementation_feature */
extern T0* T1735f22(GE_context* ac, T0* C);
/* ET_INVARIANTS.first_precursor */
extern T0* T1735f18(GE_context* ac, T0* C);
/* ET_INVARIANTS.is_feature */
extern T1 T1735f15(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.as_feature */
extern T0* T2152f78(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.as_feature */
extern T0* T2082f74(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.as_feature */
extern T0* T2081f71(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.as_feature */
extern T0* T2080f75(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.as_feature */
extern T0* T2079f73(GE_context* ac, T0* C);
/* ET_INVARIANTS.as_feature */
extern T0* T1735f16(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.as_feature */
extern T0* T596f69(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.as_feature */
extern T0* T592f71(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.as_feature */
extern T0* T496f67(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_feature */
extern T0* T494f71(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_feature */
extern T0* T492f70(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.as_feature */
extern T0* T454f72(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.as_feature */
extern T0* T344f80(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_invariants */
extern T1 T2152f80(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_invariants */
extern T1 T2082f75(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_invariants */
extern T1 T2081f74(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_invariants */
extern T1 T2080f77(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_invariants */
extern T1 T2079f75(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_invariants */
extern T1 T596f71(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_invariants */
extern T1 T592f72(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_invariants */
extern T1 T496f71(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_invariants */
extern T1 T494f75(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_invariants */
extern T1 T492f74(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_invariants */
extern T1 T454f74(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_invariants */
extern T1 T344f83(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.as_invariants */
extern T0* T2152f81(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.as_invariants */
extern T0* T2082f76(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.as_invariants */
extern T0* T2081f75(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.as_invariants */
extern T0* T2080f78(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.as_invariants */
extern T0* T2079f76(GE_context* ac, T0* C);
/* ET_INVARIANTS.as_invariants */
extern T0* T1735f20(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.as_invariants */
extern T0* T596f72(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.as_invariants */
extern T0* T592f73(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.as_invariants */
extern T0* T496f72(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_invariants */
extern T0* T494f76(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_invariants */
extern T0* T492f75(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.as_invariants */
extern T0* T454f75(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.as_invariants */
extern T0* T344f84(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_HASH_LIST.dynamic_type */
extern T0* T377f6(GE_context* ac, T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.is_bang */
extern T1 T2056f17(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_bang */
extern T1 T846f18(GE_context* ac, T0* C);
/* ET_SYMBOL.is_bang */
extern T1 T474f18(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_question_mark */
extern T1 T2056f19(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_question_mark */
extern T1 T846f20(GE_context* ac, T0* C);
/* ET_SYMBOL.is_question_mark */
extern T1 T474f20(GE_context* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.is_instance_free */
extern T1 T2149f7(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_instance_free */
extern T1 T2056f68(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.position */
extern T0* T2493f3(GE_context* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.position */
extern T0* T2147f6(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_instance_free */
extern T1 T2493f5(GE_context* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.is_instance_free */
extern T1 T2147f7(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_open_operand */
extern T1 T2686f19(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_open_operand */
extern T1 T2685f16(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_open_operand */
extern T1 T2684f15(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_open_operand */
extern T1 T2493f4(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_open_operand */
extern T1 T2489f15(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_open_operand */
extern T1 T2161f31(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_open_operand */
extern T1 T2160f22(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_open_operand */
extern T1 T2159f27(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_open_operand */
extern T1 T2158f19(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T2146f33(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T2145f39(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T2144f35(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T2142f34(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T2141f40(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T2140f36(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_open_operand */
extern T1 T2139f27(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_open_operand */
extern T1 T2138f25(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_open_operand */
extern T1 T2137f25(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_open_operand */
extern T1 T2136f22(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_open_operand */
extern T1 T2135f18(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_open_operand */
extern T1 T2134f23(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_open_operand */
extern T1 T2133f19(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_open_operand */
extern T1 T2128f21(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_open_operand */
extern T1 T2127f16(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_open_operand */
extern T1 T2126f18(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_open_operand */
extern T1 T2125f18(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_open_operand */
extern T1 T2124f18(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_open_operand */
extern T1 T2123f22(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_open_operand */
extern T1 T2122f23(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.is_open_operand */
extern T1 T2111f24(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_open_operand */
extern T1 T2064f29(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_open_operand */
extern T1 T2063f29(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_open_operand */
extern T1 T2060f29(GE_context* ac, T0* C);
/* ET_VOID.is_open_operand */
extern T1 T2058f26(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_open_operand */
extern T1 T2053f31(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_open_operand */
extern T1 T2052f31(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_open_operand */
extern T1 T2051f48(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T2050f48(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T2049f48(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_open_operand */
extern T1 T2048f48(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_open_operand */
extern T1 T2047f32(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_open_operand */
extern T1 T2046f36(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_open_operand */
extern T1 T2045f30(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_open_operand */
extern T1 T2032f29(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_open_operand */
extern T1 T1532f30(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_open_operand */
extern T1 T1384f23(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_open_operand */
extern T1 T495f48(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_open_operand */
extern T1 T444f25(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T433f17(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T432f19(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_open_operand */
extern T1 T431f20(GE_context* ac, T0* C);
/* ET_RESULT.is_open_operand */
extern T1 T422f23(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_open_operand */
extern T1 T399f24(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T397f17(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T396f22(GE_context* ac, T0* C);
/* ET_CURRENT.is_open_operand */
extern T1 T390f23(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_open_operand */
extern T1 T232f89(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.expression_item */
extern T0* T2686f13(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.expression_item */
extern T0* T2685f13(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.expression_item */
extern T0* T2684f13(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.expression_item */
extern T0* T2489f13(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.expression_item */
extern T0* T2161f21(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.expression_item */
extern T0* T2160f7(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.expression_item */
extern T0* T2159f15(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.expression_item */
extern T0* T2158f7(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T2146f13(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T2145f21(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T2144f14(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T2142f20(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T2141f21(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T2140f21(GE_context* ac, T0* C);
/* ET_CALL_AGENT.expression_item */
extern T0* T2139f7(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.expression_item */
extern T0* T2138f7(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.expression_item */
extern T0* T2137f7(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.expression_item */
extern T0* T2136f7(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.expression_item */
extern T0* T2135f7(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.expression_item */
extern T0* T2134f7(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.expression_item */
extern T0* T2133f7(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.expression_item */
extern T0* T2128f7(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.expression_item */
extern T0* T2127f7(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.expression_item */
extern T0* T2126f7(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.expression_item */
extern T0* T2125f7(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.expression_item */
extern T0* T2124f7(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.expression_item */
extern T0* T2123f14(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.expression_item */
extern T0* T2122f7(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.expression_item */
extern T0* T2111f15(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.expression_item */
extern T0* T2064f10(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.expression_item */
extern T0* T2063f10(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.expression_item */
extern T0* T2060f14(GE_context* ac, T0* C);
/* ET_VOID.expression_item */
extern T0* T2058f11(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.expression_item */
extern T0* T2053f11(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.expression_item */
extern T0* T2052f11(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.expression_item */
extern T0* T2051f39(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.expression_item */
extern T0* T2050f39(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.expression_item */
extern T0* T2049f39(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.expression_item */
extern T0* T2048f39(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.expression_item */
extern T0* T2047f17(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.expression_item */
extern T0* T2046f17(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.expression_item */
extern T0* T2045f10(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.expression_item */
extern T0* T2032f14(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.expression_item */
extern T0* T1532f21(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.expression_item */
extern T0* T1384f8(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.expression_item */
extern T0* T495f11(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.expression_item */
extern T0* T444f8(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.expression_item */
extern T0* T433f6(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.expression_item */
extern T0* T432f6(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.expression_item */
extern T0* T431f7(GE_context* ac, T0* C);
/* ET_RESULT.expression_item */
extern T0* T422f7(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.expression_item */
extern T0* T399f14(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T397f6(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T396f10(GE_context* ac, T0* C);
/* ET_CURRENT.expression_item */
extern T0* T390f7(GE_context* ac, T0* C);
/* ET_IDENTIFIER.expression_item */
extern T0* T232f47(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_empty_actual_argument */
extern T1 T2686f12(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_empty_actual_argument */
extern T1 T2685f12(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_empty_actual_argument */
extern T1 T2684f12(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_empty */
extern T1 T2621f4(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_empty_actual_argument */
extern T1 T2489f12(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T2487f9(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_empty_actual_argument */
extern T1 T2161f27(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T2160f18(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_empty_actual_argument */
extern T1 T2159f23(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_empty_actual_argument */
extern T1 T2158f16(GE_context* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_empty */
extern T1 T2148f10(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T2146f30(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T2145f36(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T2144f32(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T2142f31(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T2141f37(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T2140f33(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_empty_actual_argument */
extern T1 T2139f23(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_empty_actual_argument */
extern T1 T2138f23(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_empty_actual_argument */
extern T1 T2137f23(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_empty_actual_argument */
extern T1 T2136f20(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_empty_actual_argument */
extern T1 T2135f16(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T2134f21(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_empty_actual_argument */
extern T1 T2133f17(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T2128f19(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_empty_actual_argument */
extern T1 T2127f18(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_empty_actual_argument */
extern T1 T2126f16(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_empty_actual_argument */
extern T1 T2125f16(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_empty_actual_argument */
extern T1 T2124f16(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_empty_actual_argument */
extern T1 T2123f20(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T2122f20(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.is_empty_actual_argument */
extern T1 T2111f22(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_empty */
extern T1 T2100f14(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T2064f27(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T2063f27(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_empty_actual_argument */
extern T1 T2060f27(GE_context* ac, T0* C);
/* ET_VOID.is_empty_actual_argument */
extern T1 T2058f24(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T2053f29(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T2052f29(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T2051f46(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T2050f46(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T2049f46(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T2048f46(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T2047f29(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_empty_actual_argument */
extern T1 T2046f33(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T2045f28(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_empty_actual_argument */
extern T1 T2032f27(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1532f28(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_empty_actual_argument */
extern T1 T1384f20(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T495f47(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_empty_actual_argument */
extern T1 T444f23(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T433f16(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T432f17(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_empty_actual_argument */
extern T1 T431f19(GE_context* ac, T0* C);
/* ET_RESULT.is_empty_actual_argument */
extern T1 T422f26(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_empty_actual_argument */
extern T1 T399f23(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T397f19(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T396f21(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T391f10(GE_context* ac, T0* C);
/* ET_CURRENT.is_empty_actual_argument */
extern T1 T390f26(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_empty_actual_argument */
extern T1 T232f94(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.count */
extern T6 T2100f12(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.actual_argument */
extern T0* T2686f11(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.actual_argument */
extern T0* T2685f11(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.actual_argument */
extern T0* T2684f11(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.actual_argument */
extern T0* T2621f5(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.actual_argument */
extern T0* T2489f11(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T2487f8(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_EXPRESSION.actual_argument */
extern T0* T2161f23(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.actual_argument */
extern T0* T2160f13(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_OBJECT_TEST.actual_argument */
extern T0* T2159f19(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.actual_argument */
extern T0* T2158f12(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.actual_argument */
extern T0* T2148f6(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T2146f22(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T2145f24(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T2144f23(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T2142f24(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T2141f26(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T2140f25(GE_context* ac, T0* C, T6 a1);
/* ET_CALL_AGENT.actual_argument */
extern T0* T2139f16(GE_context* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.actual_argument */
extern T0* T2138f18(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.actual_argument */
extern T0* T2137f19(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.actual_argument */
extern T0* T2136f12(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.actual_argument */
extern T0* T2135f12(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.actual_argument */
extern T0* T2134f12(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TYPE.actual_argument */
extern T0* T2133f13(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.actual_argument */
extern T0* T2128f13(GE_context* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument */
extern T0* T2127f13(GE_context* ac, T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.actual_argument */
extern T0* T2126f12(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT_ADDRESS.actual_argument */
extern T0* T2125f12(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.actual_argument */
extern T0* T2124f12(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.actual_argument */
extern T0* T2123f16(GE_context* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.actual_argument */
extern T0* T2122f16(GE_context* ac, T0* C, T6 a1);
/* ET_IF_EXPRESSION.actual_argument */
extern T0* T2111f18(GE_context* ac, T0* C, T6 a1);
/* ET_ASSIGNER_INSTRUCTION.actual_argument */
extern T0* T2100f13(GE_context* ac, T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.actual_argument */
extern T0* T2064f23(GE_context* ac, T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.actual_argument */
extern T0* T2063f23(GE_context* ac, T0* C, T6 a1);
/* ET_FALSE_CONSTANT.actual_argument */
extern T0* T2060f23(GE_context* ac, T0* C, T6 a1);
/* ET_VOID.actual_argument */
extern T0* T2058f20(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument */
extern T0* T2053f25(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.actual_argument */
extern T0* T2052f25(GE_context* ac, T0* C, T6 a1);
/* ET_BINARY_INTEGER_CONSTANT.actual_argument */
extern T0* T2051f41(GE_context* ac, T0* C, T6 a1);
/* ET_OCTAL_INTEGER_CONSTANT.actual_argument */
extern T0* T2050f41(GE_context* ac, T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument */
extern T0* T2049f41(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument */
extern T0* T2048f41(GE_context* ac, T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument */
extern T0* T2047f25(GE_context* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.actual_argument */
extern T0* T2046f29(GE_context* ac, T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.actual_argument */
extern T0* T2045f24(GE_context* ac, T0* C, T6 a1);
/* ET_TRUE_CONSTANT.actual_argument */
extern T0* T2032f23(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.actual_argument */
extern T0* T1532f24(GE_context* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.actual_argument */
extern T0* T1384f16(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument */
extern T0* T495f37(GE_context* ac, T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.actual_argument */
extern T0* T444f15(GE_context* ac, T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.actual_argument */
extern T0* T433f11(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.actual_argument */
extern T0* T432f11(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST.actual_argument */
extern T0* T431f14(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT.actual_argument */
extern T0* T422f19(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.actual_argument */
extern T0* T399f11(GE_context* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T397f12(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T396f15(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T391f6(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT.actual_argument */
extern T0* T390f16(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.actual_argument */
extern T0* T232f76(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.named_types */
extern T0* T2581f11(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T2580f11(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.named_types */
extern T0* T1242f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T724f2(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.named_types */
extern T0* T333f7(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.resolved_formal_parameters */
extern T0* T2581f9(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T2580f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T1242f19(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T724f10(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T333f18(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T2064f21(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T2063f21(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_boolean_constant */
extern T1 T2053f22(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_boolean_constant */
extern T1 T2052f22(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T2051f33(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T2050f33(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T2049f33(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T2048f33(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_boolean_constant */
extern T1 T2047f7(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_boolean_constant */
extern T1 T2046f21(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T2045f18(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_boolean_constant */
extern T1 T1532f13(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T495f21(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_character_constant */
extern T1 T2060f6(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_character_constant */
extern T1 T2053f7(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_character_constant */
extern T1 T2052f7(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_character_constant */
extern T1 T2051f35(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T2050f35(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T2049f35(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_character_constant */
extern T1 T2048f35(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_character_constant */
extern T1 T2047f8(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_character_constant */
extern T1 T2046f22(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_character_constant */
extern T1 T2032f6(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_character_constant */
extern T1 T1532f14(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_character_constant */
extern T1 T495f22(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_string_constant */
extern T1 T2064f7(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_string_constant */
extern T1 T2063f7(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_string_constant */
extern T1 T2060f7(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_string_constant */
extern T1 T2053f8(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_string_constant */
extern T1 T2052f8(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_string_constant */
extern T1 T2051f17(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T2050f17(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T2049f17(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_string_constant */
extern T1 T2048f17(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_string_constant */
extern T1 T2045f7(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_string_constant */
extern T1 T2032f7(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_string_constant */
extern T1 T495f31(GE_context* ac, T0* C);
/* ET_LIKE_N.base_class */
extern T0* T1749f36(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.named_type */
extern T0* T1749f40(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.shallow_named_type */
extern T0* T1749f37(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_like_current */
extern T1 T1749f38(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.name */
extern T0* T431f8(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.type */
extern T0* T2159f17(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.type */
extern T0* T1384f10(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.type */
extern T0* T431f9(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T2146f27(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T2145f27(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T2144f25(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_qualified_call */
extern T1 T2139f17(GE_context* ac, T0* C);
extern T1 T2139f17ot1(T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T2146f28(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T2146f32(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T2145f34(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T2145f38(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T2144f30(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T2144f34(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T2142f29(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T2142f33(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T2141f35(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T2141f39(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T2140f31(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T2140f35(GE_context* ac, T0* C);
/* ET_CALL_AGENT.implicit_target_position */
extern T0* T2139f21(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.same_call_name */
extern T1 T2086f6(GE_context* ac, T0* C, T0* a1);
extern T1 T2086f6ot1(T0* a1, T0** a2);
/* ET_INFIX_NAME.same_call_name */
extern T1 T2085f14(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_call_name */
extern T1 T2084f16(GE_context* ac, T0* C, T0* a1);
extern T1 T2084f16ot1(T0* a1, T0** a2);
/* ET_PREFIX_NAME.same_call_name */
extern T1 T2083f11(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.same_call_name */
extern T1 T1573f11(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_call_name */
extern T1 T1533f25(GE_context* ac, T0* C, T0* a1);
extern T1 T1533f25ot1(T0* a1, T0** a2);
/* ET_IDENTIFIER.same_call_name */
extern T1 T232f55(GE_context* ac, T0* C, T0* a1);
extern T1 T232f55ot1(T0* a1, T0** a2);
/* ET_PARENTHESIS_SYMBOL.is_bracket */
extern T1 T2615f24(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_bracket */
extern T1 T2132f11(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_bracket */
extern T1 T2130f11(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_bracket */
extern T1 T2086f7(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_bracket */
extern T1 T2085f21(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_bracket */
extern T1 T2084f25(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_bracket */
extern T1 T2083f18(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_bracket */
extern T1 T2057f20(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_bracket */
extern T1 T2054f20(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_bracket */
extern T1 T2044f19(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_bracket */
extern T1 T1573f6(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_bracket */
extern T1 T1533f27(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_bracket */
extern T1 T232f57(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_parenthesis */
extern T1 T2132f12(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_parenthesis */
extern T1 T2130f12(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_parenthesis */
extern T1 T2086f33(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_parenthesis */
extern T1 T2085f22(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_parenthesis */
extern T1 T2084f26(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_parenthesis */
extern T1 T2083f19(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_parenthesis */
extern T1 T2057f21(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_parenthesis */
extern T1 T2054f21(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_parenthesis */
extern T1 T2044f20(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_parenthesis */
extern T1 T1573f7(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_parenthesis */
extern T1 T1533f28(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_parenthesis */
extern T1 T846f76(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_parenthesis */
extern T1 T232f58(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_dotdot */
extern T1 T2615f20(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_dotdot */
extern T1 T2132f25(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_dotdot */
extern T1 T2130f25(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_dotdot */
extern T1 T2086f29(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_dotdot */
extern T1 T2085f37(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_dotdot */
extern T1 T2084f41(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_dotdot */
extern T1 T2083f34(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_dotdot */
extern T1 T2057f34(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_dotdot */
extern T1 T2054f34(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_dotdot */
extern T1 T2044f33(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_dotdot */
extern T1 T1573f57(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_dotdot */
extern T1 T1533f48(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_dotdot */
extern T1 T846f89(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_dotdot */
extern T1 T232f71(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.hash_code */
extern T6 T1573f12(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_minus */
extern T1 T2615f21(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_minus */
extern T1 T2132f26(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_minus */
extern T1 T2130f26(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_minus */
extern T1 T2086f30(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix_minus */
extern T1 T2085f11(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_minus */
extern T1 T2084f13(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_prefix_minus */
extern T1 T2083f35(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_minus */
extern T1 T2057f35(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_minus */
extern T1 T2054f35(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_minus */
extern T1 T2044f34(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_minus */
extern T1 T1573f18(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_minus */
extern T1 T1533f49(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_minus */
extern T1 T846f90(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_minus */
extern T1 T232f72(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_plus */
extern T1 T2615f22(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_plus */
extern T1 T2132f27(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_plus */
extern T1 T2130f27(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_plus */
extern T1 T2086f31(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix_plus */
extern T1 T2085f12(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_plus */
extern T1 T2084f14(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_prefix_plus */
extern T1 T2083f36(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_plus */
extern T1 T2057f36(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_plus */
extern T1 T2054f36(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_plus */
extern T1 T2044f35(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_plus */
extern T1 T1573f17(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_plus */
extern T1 T1533f50(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_plus */
extern T1 T846f91(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_plus */
extern T1 T232f73(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_not */
extern T1 T2615f23(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not */
extern T1 T2132f28(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not */
extern T1 T2130f28(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not */
extern T1 T2086f32(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix_not */
extern T1 T2085f13(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_not */
extern T1 T2084f15(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_prefix_not */
extern T1 T2083f37(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not */
extern T1 T2057f37(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_not */
extern T1 T2054f37(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_not */
extern T1 T2044f36(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_not */
extern T1 T1573f58(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_not */
extern T1 T1533f51(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_not */
extern T1 T846f92(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_not */
extern T1 T232f74(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and */
extern T1 T2615f37(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and */
extern T1 T2132f8(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and */
extern T1 T2130f8(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and */
extern T1 T2086f12(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_and */
extern T1 T2085f18(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and */
extern T1 T2084f20(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_and */
extern T1 T2083f15(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and */
extern T1 T2057f16(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and */
extern T1 T2054f16(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and */
extern T1 T2044f15(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and */
extern T1 T1573f42(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and */
extern T1 T1533f9(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and */
extern T1 T846f71(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and */
extern T1 T232f42(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_div */
extern T1 T2615f5(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_div */
extern T1 T2132f13(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_div */
extern T1 T2130f13(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_div */
extern T1 T2086f14(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_div */
extern T1 T2085f25(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_div */
extern T1 T2084f29(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_div */
extern T1 T2083f22(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_div */
extern T1 T2057f22(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_div */
extern T1 T2054f22(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_div */
extern T1 T2044f21(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_div */
extern T1 T1573f44(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_div */
extern T1 T1533f36(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_div */
extern T1 T846f77(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_div */
extern T1 T232f59(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_divide */
extern T1 T2615f6(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_divide */
extern T1 T2132f14(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_divide */
extern T1 T2130f14(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_divide */
extern T1 T2086f15(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_divide */
extern T1 T2085f26(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_divide */
extern T1 T2084f30(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_divide */
extern T1 T2083f23(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_divide */
extern T1 T2057f23(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_divide */
extern T1 T2054f23(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_divide */
extern T1 T2044f22(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_divide */
extern T1 T1573f45(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_divide */
extern T1 T1533f37(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_divide */
extern T1 T846f78(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_divide */
extern T1 T232f60(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_ge */
extern T1 T2615f7(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_ge */
extern T1 T2132f15(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_ge */
extern T1 T2130f15(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_ge */
extern T1 T2086f16(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_ge */
extern T1 T2085f27(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_ge */
extern T1 T2084f31(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_ge */
extern T1 T2083f24(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_ge */
extern T1 T2057f24(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_ge */
extern T1 T2054f24(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_ge */
extern T1 T2044f23(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_ge */
extern T1 T1573f46(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_ge */
extern T1 T1533f38(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_ge */
extern T1 T846f79(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_ge */
extern T1 T232f61(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_gt */
extern T1 T2615f8(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_gt */
extern T1 T2132f16(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_gt */
extern T1 T2130f16(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_gt */
extern T1 T2086f17(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_gt */
extern T1 T2085f28(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_gt */
extern T1 T2084f32(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_gt */
extern T1 T2083f25(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_gt */
extern T1 T2057f25(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_gt */
extern T1 T2054f25(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_gt */
extern T1 T2044f24(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_gt */
extern T1 T1573f47(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_gt */
extern T1 T1533f39(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_gt */
extern T1 T846f80(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_gt */
extern T1 T232f62(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_le */
extern T1 T2615f10(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_le */
extern T1 T2132f17(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_le */
extern T1 T2130f17(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_le */
extern T1 T2086f19(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_le */
extern T1 T2085f29(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_le */
extern T1 T2084f33(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_le */
extern T1 T2083f26(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_le */
extern T1 T2057f26(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_le */
extern T1 T2054f26(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_le */
extern T1 T2044f25(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_le */
extern T1 T1573f49(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_le */
extern T1 T1533f40(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_le */
extern T1 T846f81(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_le */
extern T1 T232f63(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_lt */
extern T1 T2615f11(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_lt */
extern T1 T2132f18(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_lt */
extern T1 T2130f18(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_lt */
extern T1 T2086f20(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_lt */
extern T1 T2085f30(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_lt */
extern T1 T2084f34(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_lt */
extern T1 T2083f27(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_lt */
extern T1 T2057f27(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_lt */
extern T1 T2054f27(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_lt */
extern T1 T2044f26(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_lt */
extern T1 T1573f50(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_lt */
extern T1 T1533f41(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_lt */
extern T1 T846f82(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_lt */
extern T1 T232f64(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_minus */
extern T1 T2615f12(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_minus */
extern T1 T2132f19(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_minus */
extern T1 T2130f19(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_minus */
extern T1 T2086f21(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_minus */
extern T1 T2085f31(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_minus */
extern T1 T2084f35(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_minus */
extern T1 T2083f28(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_minus */
extern T1 T2057f28(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_minus */
extern T1 T2054f28(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_minus */
extern T1 T2044f27(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_minus */
extern T1 T1573f16(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_minus */
extern T1 T1533f42(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_minus */
extern T1 T846f83(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_minus */
extern T1 T232f65(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_mod */
extern T1 T2615f13(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_mod */
extern T1 T2132f20(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_mod */
extern T1 T2130f20(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_mod */
extern T1 T2086f22(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_mod */
extern T1 T2085f32(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_mod */
extern T1 T2084f36(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_mod */
extern T1 T2083f29(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_mod */
extern T1 T2057f29(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_mod */
extern T1 T2054f29(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_mod */
extern T1 T2044f28(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_mod */
extern T1 T1573f51(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_mod */
extern T1 T1533f43(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_mod */
extern T1 T846f84(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_mod */
extern T1 T232f66(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or */
extern T1 T2615f14(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or */
extern T1 T2132f9(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or */
extern T1 T2130f9(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or */
extern T1 T2086f23(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_or */
extern T1 T2085f19(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or */
extern T1 T2084f21(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_or */
extern T1 T2083f16(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or */
extern T1 T2057f17(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or */
extern T1 T2054f17(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or */
extern T1 T2044f16(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or */
extern T1 T1573f52(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or */
extern T1 T1533f10(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or */
extern T1 T846f72(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or */
extern T1 T232f43(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_plus */
extern T1 T2615f16(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_plus */
extern T1 T2132f21(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_plus */
extern T1 T2130f21(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_plus */
extern T1 T2086f25(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_plus */
extern T1 T2085f33(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_plus */
extern T1 T2084f37(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_plus */
extern T1 T2083f30(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_plus */
extern T1 T2057f30(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_plus */
extern T1 T2054f30(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_plus */
extern T1 T2044f29(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_plus */
extern T1 T1573f15(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_plus */
extern T1 T1533f44(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_plus */
extern T1 T846f85(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_plus */
extern T1 T232f67(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_power */
extern T1 T2615f17(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_power */
extern T1 T2132f22(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_power */
extern T1 T2130f22(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_power */
extern T1 T2086f26(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_power */
extern T1 T2085f34(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_power */
extern T1 T2084f38(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_power */
extern T1 T2083f31(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_power */
extern T1 T2057f31(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_power */
extern T1 T2054f31(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_power */
extern T1 T2044f30(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_power */
extern T1 T1573f54(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_power */
extern T1 T1533f45(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_power */
extern T1 T846f86(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_power */
extern T1 T232f68(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_times */
extern T1 T2615f18(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_times */
extern T1 T2132f23(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_times */
extern T1 T2130f23(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_times */
extern T1 T2086f27(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_times */
extern T1 T2085f35(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_times */
extern T1 T2084f39(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_times */
extern T1 T2083f32(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_times */
extern T1 T2057f32(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_times */
extern T1 T2054f32(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_times */
extern T1 T2044f31(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_times */
extern T1 T1573f55(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_times */
extern T1 T1533f46(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_times */
extern T1 T846f87(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_times */
extern T1 T232f69(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_xor */
extern T1 T2615f19(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor */
extern T1 T2132f24(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor */
extern T1 T2130f24(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor */
extern T1 T2086f28(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_xor */
extern T1 T2085f36(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_xor */
extern T1 T2084f40(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_xor */
extern T1 T2083f33(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor */
extern T1 T2057f33(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor */
extern T1 T2054f33(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_xor */
extern T1 T2044f32(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_xor */
extern T1 T1573f56(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_xor */
extern T1 T1533f47(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor */
extern T1 T846f88(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_xor */
extern T1 T232f70(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_precursor */
extern T1 T2615f28(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_precursor */
extern T1 T2085f73(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_precursor */
extern T1 T2084f60(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_precursor */
extern T1 T2083f59(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_precursor */
extern T1 T2062f11(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_precursor */
extern T1 T2057f38(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_precursor */
extern T1 T2054f38(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_precursor */
extern T1 T2044f38(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_precursor */
extern T1 T1533f60(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_precursor */
extern T1 T846f93(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_precursor */
extern T1 T232f85(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.precursor_keyword */
extern T0* T2615f29(GE_context* ac, T0* C);
/* ET_INFIX_NAME.precursor_keyword */
extern T0* T2085f74(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.precursor_keyword */
extern T0* T2084f61(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.precursor_keyword */
extern T0* T2083f60(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.precursor_keyword */
extern T0* T2062f12(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.precursor_keyword */
extern T0* T2057f39(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.precursor_keyword */
extern T0* T2054f39(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.precursor_keyword */
extern T0* T2044f39(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.precursor_keyword */
extern T0* T1533f61(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.precursor_keyword */
extern T0* T846f94(GE_context* ac, T0* C);
/* ET_IDENTIFIER.precursor_keyword */
extern T0* T232f86(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and_then */
extern T1 T2615f4(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then */
extern T1 T2132f5(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then */
extern T1 T2086f13(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_and_then */
extern T1 T2085f15(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and_then */
extern T1 T2084f17(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_and_then */
extern T1 T2083f12(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then */
extern T1 T2057f13(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then */
extern T1 T2054f13(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and_then */
extern T1 T2044f12(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and_then */
extern T1 T1573f43(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and_then */
extern T1 T1533f6(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then */
extern T1 T846f68(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and_then */
extern T1 T232f39(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_implies */
extern T1 T2615f9(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies */
extern T1 T2132f7(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies */
extern T1 T2130f7(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies */
extern T1 T2086f18(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_implies */
extern T1 T2085f17(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_implies */
extern T1 T2084f19(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_implies */
extern T1 T2083f14(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies */
extern T1 T2057f15(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies */
extern T1 T2054f15(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_implies */
extern T1 T2044f14(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_implies */
extern T1 T1573f48(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_implies */
extern T1 T1533f8(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies */
extern T1 T846f70(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_implies */
extern T1 T232f41(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or_else */
extern T1 T2615f15(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else */
extern T1 T2130f6(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else */
extern T1 T2086f24(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_or_else */
extern T1 T2085f16(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or_else */
extern T1 T2084f18(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_or_else */
extern T1 T2083f13(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else */
extern T1 T2057f14(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else */
extern T1 T2054f14(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else */
extern T1 T2044f13(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or_else */
extern T1 T1573f53(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or_else */
extern T1 T1533f7(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else */
extern T1 T846f69(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or_else */
extern T1 T232f40(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.lower_name */
extern T0* T2615f27(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.name */
extern T0* T2615f33(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.lower_name */
extern T0* T2132f29(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.name */
extern T0* T2132f31(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.lower_name */
extern T0* T2130f29(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.name */
extern T0* T2130f31(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.lower_name */
extern T0* T2062f16(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.lower_name */
extern T0* T2057f40(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.name */
extern T0* T2057f41(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.lower_name */
extern T0* T2054f40(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.name */
extern T0* T2054f41(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.lower_name */
extern T0* T2044f43(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.name */
extern T0* T2044f44(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.lower_name */
extern T0* T846f97(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.name */
extern T0* T846f98(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_tuple_label */
extern T1 T2615f25(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_tuple_label */
extern T1 T2132f10(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_tuple_label */
extern T1 T2130f10(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_tuple_label */
extern T1 T2057f19(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_tuple_label */
extern T1 T2054f19(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_tuple_label */
extern T1 T2044f18(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_tuple_label */
extern T1 T846f74(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.position */
extern T0* T2615f26(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.position */
extern T0* T2132f30(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.position */
extern T0* T2130f30(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.position */
extern T0* T2062f9(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.position */
extern T0* T2057f5(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.position */
extern T0* T2054f8(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.position */
extern T0* T2044f11(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_call_agent */
extern T1 T2686f18(GE_context* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.is_call_agent */
extern T1 T2597f6(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_call_agent */
extern T1 T2136f14(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_call_agent */
extern T1 T2134f15(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_call_agent */
extern T1 T2128f15(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_call_agent */
extern T1 T2100f10(GE_context* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.is_call_agent */
extern T1 T1528f6(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T396f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T392f6(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_tuple_label */
extern T1 T2686f17(GE_context* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.is_tuple_label */
extern T1 T2597f5(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_tuple_label */
extern T1 T2139f24(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_tuple_label */
extern T1 T2136f13(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_tuple_label */
extern T1 T2134f14(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_tuple_label */
extern T1 T2128f14(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_tuple_label */
extern T1 T2100f9(GE_context* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.is_tuple_label */
extern T1 T1528f5(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_tuple_label */
extern T1 T396f8(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_tuple_label */
extern T1 T392f5(GE_context* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.position */
extern T0* T2597f7(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.position */
extern T0* T2100f11(GE_context* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.position */
extern T0* T1528f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.position */
extern T0* T392f8(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments */
extern T0* T2686f15(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.arguments */
extern T0* T2134f13(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.arguments */
extern T0* T2100f8(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.name */
extern T0* T2686f16(GE_context* ac, T0* C);
/* ET_CALL_AGENT.name */
extern T0* T2139f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.name */
extern T0* T396f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.name */
extern T0* T392f7(GE_context* ac, T0* C);
/* ET_INFIX_NAME.feature_name */
extern T0* T2085f41(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.feature_name */
extern T0* T2084f24(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.feature_name */
extern T0* T2083f41(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.feature_name */
extern T0* T1533f14(GE_context* ac, T0* C);
/* ET_IDENTIFIER.feature_name */
extern T0* T232f27(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once */
extern T1 T2152f67(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once */
extern T1 T596f45(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_once */
extern T1 T592f47(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_query */
extern T1 T2152f74(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_query */
extern T1 T2082f68(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_query */
extern T1 T2081f33(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_query */
extern T1 T2080f33(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_query */
extern T1 T2079f33(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_query */
extern T1 T596f46(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_query */
extern T1 T592f48(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_query */
extern T1 T496f46(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_query */
extern T1 T494f50(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_query */
extern T1 T492f48(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_query */
extern T1 T454f51(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_query */
extern T1 T344f36(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_dotnet */
extern T1 T2152f56(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_dotnet */
extern T1 T2082f58(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_dotnet */
extern T1 T2081f63(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_dotnet */
extern T1 T2080f67(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_dotnet */
extern T1 T2079f62(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_dotnet */
extern T1 T596f63(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_dotnet */
extern T1 T592f65(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_dotnet */
extern T1 T496f62(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_dotnet */
extern T1 T494f68(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_dotnet */
extern T1 T492f67(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_dotnet */
extern T1 T454f67(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_dotnet */
extern T1 T344f75(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.same_version */
extern T1 T2152f49(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.same_version */
extern T1 T2082f48(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.same_version */
extern T1 T2081f49(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.same_version */
extern T1 T2080f49(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.same_version */
extern T1 T2079f49(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.same_version */
extern T1 T596f64(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.same_version */
extern T1 T592f66(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.same_version */
extern T1 T496f63(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.same_version */
extern T1 T494f69(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.same_version */
extern T1 T492f68(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.same_version */
extern T1 T454f68(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.same_version */
extern T1 T344f76(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.undefined_feature */
extern T0* T2152f45(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_feature_clause */
extern void T596f93(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_semicolon */
extern void T596f92(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_end_keyword */
extern void T596f91(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.undefined_feature */
extern T0* T2082f44(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.undefined_feature */
extern T0* T2081f45(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_feature_clause */
extern void T2081f109(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_semicolon */
extern void T2081f108(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_end_keyword */
extern void T2081f107(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.undefined_feature */
extern T0* T2080f45(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.undefined_feature */
extern T0* T2079f45(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.undefined_feature */
extern T0* T596f61(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.undefined_feature */
extern T0* T592f63(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.undefined_feature */
extern T0* T496f60(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.obsolete_message */
extern T0* T496f69(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.undefined_feature */
extern T0* T494f66(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.obsolete_message */
extern T0* T494f73(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.undefined_feature */
extern T0* T492f65(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.obsolete_message */
extern T0* T492f72(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.undefined_feature */
extern T0* T454f65(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.undefined_feature */
extern T0* T344f73(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.renamed_feature */
extern T0* T2152f46(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_feature_clause */
extern void T2152f116(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_semicolon */
extern void T2152f115(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_end_keyword */
extern void T2152f114(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.renamed_feature */
extern T0* T2082f45(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_feature_clause */
extern void T2082f114(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_semicolon */
extern void T2082f113(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_end_keyword */
extern void T2082f112(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.renamed_feature */
extern T0* T2081f46(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_deferred_keyword */
extern void T2081f110(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.renamed_feature */
extern T0* T2080f46(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_feature_clause */
extern void T2080f116(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_semicolon */
extern void T2080f115(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_end_keyword */
extern void T2080f114(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.renamed_feature */
extern T0* T2079f46(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_feature_clause */
extern void T2079f113(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_semicolon */
extern void T2079f112(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_end_keyword */
extern void T2079f111(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.renamed_feature */
extern T0* T596f62(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_deferred_keyword */
extern void T596f90(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.renamed_feature */
extern T0* T592f64(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_feature_clause */
extern void T592f96(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_semicolon */
extern void T592f95(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_end_keyword */
extern void T592f94(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.renamed_feature */
extern T0* T496f61(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_indexing */
extern void T496f84(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_feature_clause */
extern void T496f83(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_semicolon */
extern void T496f82(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.renamed_feature */
extern T0* T494f67(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_constant */
extern void T494f91(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_indexing */
extern void T494f90(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_feature_clause */
extern void T494f89(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_semicolon */
extern void T494f88(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_unique_keyword */
extern void T494f87(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_is_keyword */
extern void T494f86(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.renamed_feature */
extern T0* T492f66(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_indexing */
extern void T492f88(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_feature_clause */
extern void T492f87(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_semicolon */
extern void T492f86(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_is_keyword */
extern void T492f85(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.renamed_feature */
extern T0* T454f66(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_feature_clause */
extern void T454f94(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_semicolon */
extern void T454f93(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_end_keyword */
extern void T454f92(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.renamed_feature */
extern T0* T344f74(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_feature_clause */
extern void T344f107(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_semicolon */
extern void T344f106(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_end_keyword */
extern void T344f105(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_bracketable */
extern T1 T2152f43(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_bracketable */
extern T1 T2082f42(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_bracketable */
extern T1 T596f60(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_bracketable */
extern T1 T592f62(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_prefixable */
extern T1 T2152f42(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_prefixable */
extern T1 T2082f41(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_prefixable */
extern T1 T596f59(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_prefixable */
extern T1 T592f61(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_infixable */
extern T1 T2152f41(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_infixable */
extern T1 T2082f40(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_infixable */
extern T1 T596f58(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_infixable */
extern T1 T592f60(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.has_class_postcondition_recursive */
extern T1 T2152f53(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.has_class_assertion */
extern T1 T1734f7(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.has_class_postcondition_recursive */
extern T1 T2082f52(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_class_postcondition_recursive */
extern T1 T2081f52(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.has_class_postcondition_recursive */
extern T1 T2080f52(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.has_class_postcondition_recursive */
extern T1 T2079f65(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.has_class_postcondition_recursive */
extern T1 T596f37(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.has_class_postcondition_recursive */
extern T1 T592f39(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T496f57(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T494f64(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T492f62(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T454f62(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.has_class_postcondition_recursive */
extern T1 T344f66(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_attribute */
extern T1 T2152f59(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_attribute */
extern T1 T2082f60(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_attribute */
extern T1 T596f39(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_attribute */
extern T1 T592f37(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once_per_process */
extern T1 T2152f61(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_once_per_process */
extern T1 T2082f62(GE_context* ac, T0* C);
/* ET_INDEXING_LIST.has_tagged_indexing_term_value */
extern T1 T2065f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INDEXING_TERM_LIST.has_indexing_term_value */
extern T1 T2068f4(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.is_once_per_process */
extern T1 T2081f67(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once_per_process */
extern T1 T2080f65(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.standard_once_keys */
extern T0* T2080f54(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_once_per_process */
extern T1 T2079f67(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once_per_process */
extern T1 T596f35(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_once_per_process */
extern T1 T592f35(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_once_per_process */
extern T1 T496f42(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once_per_process */
extern T1 T494f46(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once_per_process */
extern T1 T492f44(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once_per_process */
extern T1 T454f47(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once_per_process */
extern T1 T344f69(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.type */
extern T0* T2152f64(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.type */
extern T0* T2082f65(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.type */
extern T0* T596f29(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.type */
extern T0* T592f38(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_constant_attribute */
extern T1 T2152f52(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_constant_attribute */
extern T1 T2082f53(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_constant_attribute */
extern T1 T596f30(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_constant_attribute */
extern T1 T592f41(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_unique_attribute */
extern T1 T2152f57(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_unique_attribute */
extern T1 T2082f55(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_unique_attribute */
extern T1 T596f31(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_unique_attribute */
extern T1 T592f30(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T2152f71(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.is_instance_free */
extern T1 T529f10(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T2082f70(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T2081f68(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T2080f72(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T2079f70(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T596f66(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T592f68(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T496f64(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T494f62(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T492f60(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T454f69(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T344f64(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T2152f72(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.is_instance_free */
extern T1 T1734f12(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T2082f71(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T2081f69(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T2080f73(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T2079f71(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T596f67(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T592f69(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T496f65(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T494f63(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T492f61(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T454f70(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T344f65(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_procedure */
extern T1 T2152f66(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_procedure */
extern T1 T2082f66(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_procedure */
extern T1 T2081f32(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_procedure */
extern T1 T2080f71(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_procedure */
extern T1 T2079f32(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_procedure */
extern T1 T596f44(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_procedure */
extern T1 T592f46(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_procedure */
extern T1 T496f45(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_procedure */
extern T1 T494f49(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_procedure */
extern T1 T492f47(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_procedure */
extern T1 T454f50(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_procedure */
extern T1 T344f35(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.lower_name */
extern T0* T2152f58(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.lower_name */
extern T0* T2082f59(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.lower_name */
extern T0* T596f38(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.lower_name */
extern T0* T592f34(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_never_void */
extern T1 T2686f4(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_never_void */
extern T1 T2684f16(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_never_void */
extern T1 T2489f9(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_never_void */
extern T1 T2161f16(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_never_void */
extern T1 T2159f10(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_never_void */
extern T1 T2136f9(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_never_void */
extern T1 T2135f8(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_never_void */
extern T1 T2134f9(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_never_void */
extern T1 T2128f9(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_never_void */
extern T1 T2127f8(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_never_void */
extern T1 T2123f8(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_never_void */
extern T1 T2122f8(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.is_never_void */
extern T1 T2111f10(GE_context* ac, T0* C);
/* ET_VOID.is_never_void */
extern T1 T2058f13(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_never_void */
extern T1 T1384f7(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_never_void */
extern T1 T433f5(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_never_void */
extern T1 T432f5(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_never_void */
extern T1 T431f6(GE_context* ac, T0* C);
/* ET_RESULT.is_never_void */
extern T1 T422f5(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T397f5(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T396f6(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_never_void */
extern T1 T232f8(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_current */
extern T1 T2686f8(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_current */
extern T1 T2685f8(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_current */
extern T1 T2684f8(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_current */
extern T1 T2489f5(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_current */
extern T1 T2161f24(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_current */
extern T1 T2160f14(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_current */
extern T1 T2159f20(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_current */
extern T1 T2158f13(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T2146f24(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T2145f30(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T2144f28(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_current */
extern T1 T2142f26(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_current */
extern T1 T2141f31(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_current */
extern T1 T2140f29(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_current */
extern T1 T2139f18(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_current */
extern T1 T2138f19(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_current */
extern T1 T2137f20(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_current */
extern T1 T2136f15(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_current */
extern T1 T2135f13(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_current */
extern T1 T2134f16(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_current */
extern T1 T2133f14(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_current */
extern T1 T2128f16(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_current */
extern T1 T2127f14(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_current */
extern T1 T2126f13(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_current */
extern T1 T2125f13(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_current */
extern T1 T2124f13(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_current */
extern T1 T2123f17(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_current */
extern T1 T2122f17(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.is_current */
extern T1 T2111f19(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_current */
extern T1 T2064f24(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_current */
extern T1 T2063f24(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_current */
extern T1 T2060f24(GE_context* ac, T0* C);
/* ET_VOID.is_current */
extern T1 T2058f21(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_current */
extern T1 T2053f26(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_current */
extern T1 T2052f26(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_current */
extern T1 T2051f42(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_current */
extern T1 T2050f42(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_current */
extern T1 T2049f42(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_current */
extern T1 T2048f42(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_current */
extern T1 T2047f26(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_current */
extern T1 T2046f30(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_current */
extern T1 T2045f25(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_current */
extern T1 T2032f24(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_current */
extern T1 T1532f25(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_current */
extern T1 T1384f17(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_current */
extern T1 T495f43(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_current */
extern T1 T444f18(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_current */
extern T1 T433f13(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_current */
extern T1 T432f13(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_current */
extern T1 T431f16(GE_context* ac, T0* C);
/* ET_RESULT.is_current */
extern T1 T422f21(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_current */
extern T1 T399f20(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_current */
extern T1 T397f15(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_current */
extern T1 T396f17(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_current */
extern T1 T232f84(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.unparenthesized_expression */
extern T0* T2686f6(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.unparenthesized_expression */
extern T0* T2685f6(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.unparenthesized_expression */
extern T0* T2684f6(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.unparenthesized_expression */
extern T0* T2489f8(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.unparenthesized_expression */
extern T0* T2161f25(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.unparenthesized_expression */
extern T0* T2160f15(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.unparenthesized_expression */
extern T0* T2159f21(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.unparenthesized_expression */
extern T0* T2158f14(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T2146f26(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T2145f32(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T2144f29(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T2142f28(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T2141f33(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T2140f30(GE_context* ac, T0* C);
/* ET_CALL_AGENT.unparenthesized_expression */
extern T0* T2139f20(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.unparenthesized_expression */
extern T0* T2138f21(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.unparenthesized_expression */
extern T0* T2137f21(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.unparenthesized_expression */
extern T0* T2136f18(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.unparenthesized_expression */
extern T0* T2135f14(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.unparenthesized_expression */
extern T0* T2134f19(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.unparenthesized_expression */
extern T0* T2133f15(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.unparenthesized_expression */
extern T0* T2128f17(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.unparenthesized_expression */
extern T0* T2127f15(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.unparenthesized_expression */
extern T0* T2126f14(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.unparenthesized_expression */
extern T0* T2125f14(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.unparenthesized_expression */
extern T0* T2124f14(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.unparenthesized_expression */
extern T0* T2123f18(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T2122f18(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.unparenthesized_expression */
extern T0* T2111f20(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T2064f25(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T2063f25(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.unparenthesized_expression */
extern T0* T2060f25(GE_context* ac, T0* C);
/* ET_VOID.unparenthesized_expression */
extern T0* T2058f22(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.unparenthesized_expression */
extern T0* T2053f27(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.unparenthesized_expression */
extern T0* T2052f27(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T2051f43(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T2050f43(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T2049f43(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T2048f43(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.unparenthesized_expression */
extern T0* T2047f27(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.unparenthesized_expression */
extern T0* T2046f31(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T2045f26(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.unparenthesized_expression */
extern T0* T2032f25(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1532f26(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.unparenthesized_expression */
extern T0* T1384f18(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T495f44(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.unparenthesized_expression */
extern T0* T444f21(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T433f14(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T432f15(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.unparenthesized_expression */
extern T0* T431f17(GE_context* ac, T0* C);
/* ET_RESULT.unparenthesized_expression */
extern T0* T422f22(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.unparenthesized_expression */
extern T0* T399f21(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T397f16(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T396f19(GE_context* ac, T0* C);
/* ET_CURRENT.unparenthesized_expression */
extern T0* T390f22(GE_context* ac, T0* C);
/* ET_IDENTIFIER.unparenthesized_expression */
extern T0* T232f87(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2686f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FROM_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2685f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_BUILTIN_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2684f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_CAST_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2489f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACROSS_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2161f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T2160f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T2159f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_ADDRESS.manifest_constant_convert_feature */
extern T0* T2158f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T2146f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T2145f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T2144f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T2142f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T2141f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T2140f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.manifest_constant_convert_feature */
extern T0* T2139f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2138f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_ARRAY.manifest_constant_convert_feature */
extern T0* T2137f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2136f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2135f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PREFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2134f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.manifest_constant_convert_feature */
extern T0* T2133f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2128f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2127f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXPRESSION_ADDRESS.manifest_constant_convert_feature */
extern T0* T2126f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT_ADDRESS.manifest_constant_convert_feature */
extern T0* T2125f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CURRENT_ADDRESS.manifest_constant_convert_feature */
extern T0* T2124f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2123f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2122f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IF_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2111f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C2_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T2064f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C1_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T2063f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FALSE_CONSTANT.manifest_constant_convert_feature */
extern T0* T2060f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VOID.manifest_constant_convert_feature */
extern T0* T2058f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T2053f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T2052f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BINARY_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T2051f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OCTAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T2050f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T2049f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T2048f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SPECIAL_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T2047f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SPECIAL_MANIFEST_STRING.tokens */
extern T0* T2047f33(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.manifest_constant_convert_feature */
extern T0* T2046f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VERBATIM_STRING.tokens */
extern T0* T2046f37(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T2045f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TRUE_CONSTANT.manifest_constant_convert_feature */
extern T0* T2032f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1532f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.tokens */
extern T0* T1532f31(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T1384f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T495f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.manifest_constant_convert_feature */
extern T0* T444f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T433f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T432f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T431f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT.manifest_constant_convert_feature */
extern T0* T422f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TUPLE.manifest_constant_convert_feature */
extern T0* T399f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T397f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T396f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CURRENT.manifest_constant_convert_feature */
extern T0* T390f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER.manifest_constant_convert_feature */
extern T0* T232f98(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACROSS_EXPRESSION.is_false */
extern T1 T2161f30(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_false */
extern T1 T2160f21(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_false */
extern T1 T2159f26(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_false */
extern T1 T2158f18(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T2146f34(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T2145f40(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T2144f36(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_false */
extern T1 T2142f35(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_false */
extern T1 T2141f41(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_false */
extern T1 T2140f37(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_false */
extern T1 T2139f28(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_false */
extern T1 T2138f26(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_false */
extern T1 T2137f26(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_false */
extern T1 T2136f23(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_false */
extern T1 T2135f19(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_false */
extern T1 T2134f24(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_false */
extern T1 T2133f20(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_false */
extern T1 T2128f22(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_false */
extern T1 T2127f20(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_false */
extern T1 T2126f19(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_false */
extern T1 T2125f19(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_false */
extern T1 T2124f19(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_false */
extern T1 T2123f23(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_false */
extern T1 T2122f27(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.is_false */
extern T1 T2111f25(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_false */
extern T1 T2064f34(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_false */
extern T1 T2063f34(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_false */
extern T1 T2060f33(GE_context* ac, T0* C);
/* ET_VOID.is_false */
extern T1 T2058f27(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_false */
extern T1 T2053f35(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_false */
extern T1 T2052f35(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_false */
extern T1 T2051f53(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_false */
extern T1 T2050f53(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_false */
extern T1 T2049f53(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_false */
extern T1 T2048f53(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_false */
extern T1 T2047f37(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_false */
extern T1 T2046f41(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_false */
extern T1 T2045f35(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_false */
extern T1 T2032f33(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_false */
extern T1 T1532f36(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_false */
extern T1 T1384f24(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_false */
extern T1 T495f54(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_false */
extern T1 T444f27(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_false */
extern T1 T433f19(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_false */
extern T1 T432f21(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_false */
extern T1 T431f22(GE_context* ac, T0* C);
/* ET_RESULT.is_false */
extern T1 T422f29(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_false */
extern T1 T399f26(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T397f22(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T396f24(GE_context* ac, T0* C);
/* ET_CURRENT.is_false */
extern T1 T390f30(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_false */
extern T1 T232f104(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_instance_free */
extern T1 T2686f9(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_instance_free */
extern T1 T2685f9(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_instance_free */
extern T1 T2684f9(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_instance_free */
extern T1 T2489f4(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_instance_free */
extern T1 T2161f20(GE_context* ac, T0* C);
/* ET_LOOP_INVARIANTS.is_instance_free */
extern T1 T2153f6(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_instance_free */
extern T1 T2160f6(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_instance_free */
extern T1 T2159f14(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_instance_free */
extern T1 T2158f6(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T2146f19(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T2145f20(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T2144f20(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T2142f19(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T2141f20(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T2140f20(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_instance_free */
extern T1 T2139f14(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_instance_free */
extern T1 T2621f3(GE_context* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_instance_free */
extern T1 T2148f5(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_instance_free */
extern T1 T2138f15(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_instance_free */
extern T1 T2137f16(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_instance_free */
extern T1 T2136f6(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.is_instance_free */
extern T1 T2487f7(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_instance_free */
extern T1 T391f11(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_instance_free */
extern T1 T2135f6(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_instance_free */
extern T1 T2134f6(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_instance_free */
extern T1 T2133f6(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_instance_free */
extern T1 T2128f6(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_instance_free */
extern T1 T2127f6(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_instance_free */
extern T1 T2126f6(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_instance_free */
extern T1 T2125f6(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_instance_free */
extern T1 T2124f6(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_instance_free */
extern T1 T2123f13(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_instance_free */
extern T1 T2122f14(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.is_instance_free */
extern T1 T2111f13(GE_context* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.is_instance_free */
extern T1 T2112f4(GE_context* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.is_instance_free */
extern T1 T1676f5(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_instance_free */
extern T1 T2064f9(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_instance_free */
extern T1 T2063f9(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_instance_free */
extern T1 T2060f9(GE_context* ac, T0* C);
/* ET_VOID.is_instance_free */
extern T1 T2058f6(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_instance_free */
extern T1 T2053f10(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_instance_free */
extern T1 T2052f10(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_instance_free */
extern T1 T2051f22(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_instance_free */
extern T1 T2050f22(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_instance_free */
extern T1 T2049f22(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_instance_free */
extern T1 T2048f22(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_instance_free */
extern T1 T2047f11(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_instance_free */
extern T1 T2046f11(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_instance_free */
extern T1 T2045f9(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_instance_free */
extern T1 T2032f9(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_instance_free */
extern T1 T1532f17(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_instance_free */
extern T1 T1384f13(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_instance_free */
extern T1 T495f35(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_instance_free */
extern T1 T444f13(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_instance_free */
extern T1 T433f9(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_instance_free */
extern T1 T432f9(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_instance_free */
extern T1 T431f12(GE_context* ac, T0* C);
/* ET_RESULT.is_instance_free */
extern T1 T422f17(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_instance_free */
extern T1 T399f18(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_instance_free */
extern T1 T397f10(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_instance_free */
extern T1 T396f13(GE_context* ac, T0* C);
/* ET_CURRENT.is_instance_free */
extern T1 T390f14(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_instance_free */
extern T1 T232f56(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_feature_name */
extern T1 T232f82(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.position */
extern T0* T2686f7(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.position */
extern T0* T2685f7(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.position */
extern T0* T2684f7(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.position */
extern T0* T2489f6(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.position */
extern T0* T2161f18(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.position */
extern T0* T2160f11(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.position */
extern T0* T2159f11(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.position */
extern T0* T2158f4(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.position */
extern T0* T2146f16(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.position */
extern T0* T2145f17(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.position */
extern T0* T2144f17(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.position */
extern T0* T2142f16(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.position */
extern T0* T2141f17(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.position */
extern T0* T2140f17(GE_context* ac, T0* C);
/* ET_CALL_AGENT.position */
extern T0* T2139f11(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.position */
extern T0* T2138f12(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_empty */
extern T1 T2138f9(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T2137f12(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T2137f12p1(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_empty */
extern T1 T2137f9(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.position */
extern T0* T2136f10(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.position */
extern T0* T2135f4(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.position */
extern T0* T2134f10(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.position */
extern T0* T2133f11(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.position */
extern T0* T2128f10(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.position */
extern T0* T2127f11(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.position */
extern T0* T2126f4(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.position */
extern T0* T2125f4(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.position */
extern T0* T2124f4(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.position */
extern T0* T2123f9(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.position */
extern T0* T2122f11(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.position */
extern T0* T2111f11(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.position */
extern T0* T2064f17(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.position */
extern T0* T2063f17(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.position */
extern T0* T2060f21(GE_context* ac, T0* C);
/* ET_VOID.position */
extern T0* T2058f18(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.position */
extern T0* T2053f18(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.position */
extern T0* T2052f18(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.position */
extern T0* T2051f26(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.position */
extern T0* T2050f26(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position */
extern T0* T2049f26(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position */
extern T0* T2048f26(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.position */
extern T0* T2047f23(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.position */
extern T0* T2046f20(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.position */
extern T0* T2045f17(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.position */
extern T0* T2032f21(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.position */
extern T0* T1532f12(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.position */
extern T0* T1384f11(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.position */
extern T0* T495f16(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.position */
extern T0* T444f11(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.position */
extern T0* T433f7(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.position */
extern T0* T432f7(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.position */
extern T0* T431f10(GE_context* ac, T0* C);
/* ET_RESULT.position */
extern T0* T422f12(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.position */
extern T0* T399f15(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_empty */
extern T1 T399f16(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.position */
extern T0* T397f8(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.position */
extern T0* T396f11(GE_context* ac, T0* C);
/* ET_CURRENT.position */
extern T0* T390f12(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.last_leaf */
extern T0* T2686f22(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.last_leaf */
extern T0* T2685f22(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.last_leaf */
extern T0* T2684f17(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.last_leaf */
extern T0* T2489f16(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.last_leaf */
extern T0* T2161f32(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.last_leaf */
extern T0* T2160f23(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.last_leaf */
extern T0* T2159f28(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.last_leaf */
extern T0* T2158f20(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T2146f35(GE_context* ac, T0* C);
extern T1 T2146f35ot1(T0* a1, T0** a2);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.last_leaf */
extern T0* T2148f11(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T2145f41(GE_context* ac, T0* C);
extern T1 T2145f41ot1(T0* a1, T0** a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T2144f37(GE_context* ac, T0* C);
extern T1 T2144f37ot1(T0* a1, T0** a2);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T2142f36(GE_context* ac, T0* C);
extern T1 T2142f36ot1(T0* a1, T0** a2);
/* ET_ONCE_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T2141f42(GE_context* ac, T0* C);
extern T1 T2141f42ot1(T0* a1, T0** a2);
/* ET_DO_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T2140f38(GE_context* ac, T0* C);
extern T1 T2140f38ot1(T0* a1, T0** a2);
/* ET_CALL_AGENT.last_leaf */
extern T0* T2139f29(GE_context* ac, T0* C);
extern T1 T2139f29ot1(T0* a1, T0** a2);
/* ET_STRIP_EXPRESSION.last_leaf */
extern T0* T2138f27(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.last_leaf */
extern T0* T2137f27(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.last_leaf */
extern T0* T2136f24(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.last_leaf */
extern T0* T846f100(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.last_leaf */
extern T0* T2135f20(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.last_leaf */
extern T0* T2134f25(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.last_leaf */
extern T0* T2133f21(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.last_leaf */
extern T0* T2128f23(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.last_leaf */
extern T0* T2127f21(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.last_leaf */
extern T0* T2126f20(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.last_leaf */
extern T0* T2125f20(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.last_leaf */
extern T0* T2124f20(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.last_leaf */
extern T0* T2123f24(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.last_leaf */
extern T0* T2122f28(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.last_leaf */
extern T0* T2111f26(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_leaf */
extern T0* T2064f41(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.last_leaf */
extern T0* T2063f41(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.last_leaf */
extern T0* T2060f38(GE_context* ac, T0* C);
/* ET_VOID.last_leaf */
extern T0* T2058f28(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_leaf */
extern T0* T2053f40(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_leaf */
extern T0* T2052f40(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.last_leaf */
extern T0* T2051f62(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.last_leaf */
extern T0* T2050f62(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_leaf */
extern T0* T2049f62(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_leaf */
extern T0* T2048f62(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_leaf */
extern T0* T2047f42(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.last_leaf */
extern T0* T2046f46(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_leaf */
extern T0* T2045f42(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.last_leaf */
extern T0* T2032f38(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_leaf */
extern T0* T1532f41(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.last_leaf */
extern T0* T1384f25(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_leaf */
extern T0* T495f62(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.last_leaf */
extern T0* T444f24(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.last_leaf */
extern T0* T433f20(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.last_leaf */
extern T0* T432f22(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.last_leaf */
extern T0* T431f23(GE_context* ac, T0* C);
/* ET_RESULT.last_leaf */
extern T0* T422f28(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.last_leaf */
extern T0* T399f27(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.last_leaf */
extern T0* T397f27(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.last_leaf */
extern T0* T396f25(GE_context* ac, T0* C);
/* ET_CURRENT.last_leaf */
extern T0* T390f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T1998f7(GE_context* ac, T0* C, T0* a1);
extern T1 T1998f7ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T1998f7p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T1998f11(GE_context* ac, T0* C, T0* a1);
extern T1 T1998f11ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T1998f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T595f10(GE_context* ac, T0* C, T0* a1);
extern T1 T595f10ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T595f10p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T595f13(GE_context* ac, T0* C, T0* a1);
extern T1 T595f13ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T595f13p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_type */
extern T1 T587f31(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_type */
extern T1 T586f31(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.has_type */
extern T1 T434f37(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.has_type */
extern T1 T412f37(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T378f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T378f7p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T378f11(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T378f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.has_type */
extern T1 T320f21(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_types */
extern T0* T587f41(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_types */
extern T0* T586f41(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_types */
extern T0* T434f39(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_types */
extern T0* T412f39(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.dynamic_types */
extern T0* T320f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_expanded */
extern T1 T1998f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_expanded */
extern T1 T595f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_expanded */
extern T1 T587f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_expanded */
extern T1 T586f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_expanded */
extern T1 T434f35(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_expanded */
extern T1 T412f35(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_expanded */
extern T1 T378f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.has_expanded */
extern T1 T320f48(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.can_be_void */
extern T1 T1998f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.can_be_void */
extern T1 T595f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.can_be_void */
extern T1 T587f37(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.can_be_void */
extern T1 T586f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.can_be_void */
extern T1 T434f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.can_be_void */
extern T1 T412f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.can_be_void */
extern T1 T378f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.can_be_void */
extern T1 T320f47(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_never_void */
extern T1 T587f51(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_never_void */
extern T1 T586f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_never_void */
extern T1 T434f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_never_void */
extern T1 T412f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_never_void */
extern T1 T320f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.count */
extern T6 T587f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.count */
extern T6 T586f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.count */
extern T6 T434f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.count */
extern T6 T412f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.count */
extern T6 T320f39(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.dynamic_type */
extern T0* T1998f13(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.dynamic_type */
extern T0* T595f11(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_type */
extern T0* T587f29(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_type */
extern T0* T586f29(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_type */
extern T0* T434f34(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_type */
extern T0* T412f34(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.dynamic_type */
extern T0* T378f5(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.dynamic_type */
extern T0* T320f41(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.special_type */
extern T0* T1998f14(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.special_type */
extern T0* T595f14(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.special_type */
extern T0* T587f48(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.special_type */
extern T0* T586f48(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.special_type */
extern T0* T434f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.special_type */
extern T0* T412f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.special_type */
extern T0* T378f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.special_type */
extern T0* T320f45(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_empty */
extern T1 T1998f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_empty */
extern T1 T595f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_empty */
extern T1 T587f50(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_empty */
extern T1 T586f51(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_empty */
extern T1 T434f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_empty */
extern T1 T412f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_empty */
extern T1 T378f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_empty */
extern T1 T320f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_expanded */
extern T1 T1998f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_expanded */
extern T1 T595f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_expanded */
extern T1 T378f10(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.conforms_to_types */
extern T1 T2581f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T2580f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_LIST.conforms_to_types */
extern T1 T1242f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T724f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.conforms_to_types */
extern T1 T333f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_SUBLIST.same_named_types */
extern T1 T2581f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T2580f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_LIST.same_named_types */
extern T1 T1242f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T724f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_named_types */
extern T1 T333f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_anchored_type */
extern T1 T2581f7(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_anchored_type */
extern T1 T2580f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_anchored_type */
extern T1 T1242f17(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_anchored_type */
extern T1 T724f8(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_anchored_type */
extern T1 T333f16(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_formal_types */
extern T1 T2581f8(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T2580f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_types */
extern T1 T1242f18(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T724f9(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.has_formal_types */
extern T1 T333f17(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.same_syntactical_types */
extern T1 T2581f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T2580f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T1242f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T724f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T333f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.depends_on_qualified_anchored_type */
extern T1 T2581f14(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T2580f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T1242f21(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T724f13(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T333f20(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.index_of_label */
extern T6 T2581f15(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T2580f13(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.index_of_label */
extern T6 T1242f22(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T724f14(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.index_of_label */
extern T6 T333f21(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_identifier_anchored_type */
extern T1 T2581f16(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T2580f14(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T1242f23(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T724f15(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T333f22(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.is_empty */
extern T1 T2581f4(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T2580f16(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.is_empty */
extern T1 T1242f11(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T724f5(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T333f10(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.count */
extern T6 T2581f18(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.actual_parameter */
extern T0* T2581f17(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T2580f17(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.actual_parameter */
extern T0* T1242f24(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T724f12(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.actual_parameter */
extern T0* T333f5(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.item */
extern T0* T333f6(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.type */
extern T0* T2581f19(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T2580f15(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.type */
extern T0* T1242f10(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T724f4(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.type */
extern T0* T333f8(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.last_leaf */
extern T0* T2581f21(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_leaf */
extern T0* T94f1511(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.make */
extern T0* T2776c5(GE_context* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T2580f18(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.last_leaf */
extern T0* T1242f25(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T724f16(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.last_leaf */
extern T0* T333f25(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_reference_mark */
extern T1 T2071f4(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_reference */
extern T1 T2071f15(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference_mark */
extern T1 T2056f4(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference */
extern T1 T2056f15(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_reference_mark */
extern T1 T846f5(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_reference */
extern T1 T846f16(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_reference_mark */
extern T1 T717f16(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_reference */
extern T1 T717f13(GE_context* ac, T0* C);
/* ET_KEYWORD.is_reference_mark */
extern T1 T539f20(GE_context* ac, T0* C);
/* ET_SYMBOL.is_reference_mark */
extern T1 T474f5(GE_context* ac, T0* C);
/* ET_SYMBOL.is_reference */
extern T1 T474f16(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate_mark */
extern T1 T2056f7(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate */
extern T1 T2056f20(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separate_mark */
extern T1 T846f8(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separate */
extern T1 T846f21(GE_context* ac, T0* C);
/* ET_KEYWORD.is_separate_mark */
extern T1 T539f5(GE_context* ac, T0* C);
/* ET_KEYWORD.is_separate */
extern T1 T539f13(GE_context* ac, T0* C);
/* ET_SYMBOL.is_separate_mark */
extern T1 T474f8(GE_context* ac, T0* C);
/* ET_SYMBOL.is_separate */
extern T1 T474f21(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_expandedness_mark */
extern T1 T2071f8(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expandedness_mark */
extern T1 T2056f8(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expandedness_mark */
extern T1 T846f9(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_expandedness_mark */
extern T1 T717f6(GE_context* ac, T0* C);
/* ET_KEYWORD.is_expandedness_mark */
extern T1 T539f4(GE_context* ac, T0* C);
/* ET_SYMBOL.is_expandedness_mark */
extern T1 T474f9(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_expandedness_mark */
extern T1 T472f6(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_expanded_mark */
extern T1 T2071f3(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_expanded */
extern T1 T2071f14(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded_mark */
extern T1 T2056f70(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded */
extern T1 T2056f14(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expanded_mark */
extern T1 T846f4(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expanded */
extern T1 T846f15(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_expanded_mark */
extern T1 T717f14(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_expanded */
extern T1 T717f12(GE_context* ac, T0* C);
/* ET_KEYWORD.is_expanded_mark */
extern T1 T539f19(GE_context* ac, T0* C);
/* ET_SYMBOL.is_expanded_mark */
extern T1 T474f4(GE_context* ac, T0* C);
/* ET_SYMBOL.is_expanded */
extern T1 T474f15(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_separateness_mark */
extern T1 T2071f9(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separateness_mark */
extern T1 T2056f9(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separateness_mark */
extern T1 T846f10(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_separateness_mark */
extern T1 T717f7(GE_context* ac, T0* C);
/* ET_KEYWORD.is_separateness_mark */
extern T1 T539f6(GE_context* ac, T0* C);
/* ET_SYMBOL.is_separateness_mark */
extern T1 T474f10(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_separateness_mark */
extern T1 T472f7(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.position */
extern T0* T2071f12(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.position */
extern T0* T2056f12(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.position */
extern T0* T846f61(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.position */
extern T0* T717f17(GE_context* ac, T0* C);
/* ET_KEYWORD.position */
extern T0* T539f22(GE_context* ac, T0* C);
/* ET_SYMBOL.position */
extern T0* T474f61(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_attachment_mark */
extern T1 T2071f16(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attachment_mark */
extern T1 T2056f21(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attachment_mark */
extern T1 T846f22(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_attachment_mark */
extern T1 T717f8(GE_context* ac, T0* C);
/* ET_KEYWORD.is_attachment_mark */
extern T1 T539f9(GE_context* ac, T0* C);
/* ET_SYMBOL.is_attachment_mark */
extern T1 T474f22(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_attachment_mark */
extern T1 T472f10(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_detachable_mark */
extern T1 T2071f6(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_detachable_mark */
extern T1 T2056f6(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_detachable */
extern T1 T2056f18(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_detachable_mark */
extern T1 T846f7(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_detachable */
extern T1 T846f19(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_detachable_mark */
extern T1 T717f4(GE_context* ac, T0* C);
/* ET_KEYWORD.is_detachable */
extern T1 T539f16(GE_context* ac, T0* C);
/* ET_KEYWORD.is_detachable_mark */
extern T1 T539f8(GE_context* ac, T0* C);
/* ET_KEYWORD.is_question_mark */
extern T1 T539f17(GE_context* ac, T0* C);
/* ET_SYMBOL.is_detachable_mark */
extern T1 T474f7(GE_context* ac, T0* C);
/* ET_SYMBOL.is_detachable */
extern T1 T474f19(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_attached_mark */
extern T1 T2071f5(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attached_mark */
extern T1 T2056f5(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attached */
extern T1 T2056f16(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attached_mark */
extern T1 T846f6(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attached */
extern T1 T846f17(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_attached_mark */
extern T1 T717f3(GE_context* ac, T0* C);
/* ET_KEYWORD.is_attached */
extern T1 T539f14(GE_context* ac, T0* C);
/* ET_KEYWORD.is_attached_mark */
extern T1 T539f7(GE_context* ac, T0* C);
/* ET_KEYWORD.is_bang */
extern T1 T539f15(GE_context* ac, T0* C);
/* ET_SYMBOL.is_attached_mark */
extern T1 T474f6(GE_context* ac, T0* C);
/* ET_SYMBOL.is_attached */
extern T1 T474f17(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.actual_parameter */
extern T0* T2154f46(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.actual_parameter */
extern T0* T2098f52(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.actual_parameter */
extern T0* T2097f43(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.actual_parameter */
extern T0* T2095f5(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.actual_parameter */
extern T0* T2093f5(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.actual_parameter */
extern T0* T1895f22(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.actual_parameter */
extern T0* T1712f30(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.actual_parameter */
extern T0* T1243f28(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.actual_parameter */
extern T0* T498f13(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.actual_parameter */
extern T0* T345f45(GE_context* ac, T0* C);
/* ET_CLASS.actual_parameter */
extern T0* T95f132(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.actual_parameter */
extern T0* T93f44(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T2095f3(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.type */
extern T0* T2093f3(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type */
extern T0* T1712f14(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.type */
extern T0* T1243f12(GE_context* ac, T0* C);
/* ET_CLASS.type */
extern T0* T95f131(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type */
extern T0* T2154f60(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type */
extern T0* T2098f58(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type */
extern T0* T2097f61(GE_context* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T2095f6(GE_context* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T2093f6(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type */
extern T0* T1895f56(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1712f67(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1243f65(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type */
extern T0* T498f55(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type */
extern T0* T345f87(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type */
extern T0* T95f216(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T93f91(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.classes_in_group */
extern T0* T283f140(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_in_group */
extern T0* T283f140ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_in_group */
extern T0* T283f140ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.classes_in_group */
extern T0* T283f140ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.initial_classes_in_group_capacity */
extern T6 T283f142(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.classes_in_group */
extern T0* T236f109(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T236f109ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T236f109ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T236f109ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.initial_classes_in_group_capacity */
extern T6 T236f111(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.classes_in_group */
extern T0* T197f148(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_in_group */
extern T0* T197f148ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_in_group */
extern T0* T197f148ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.classes_in_group */
extern T0* T197f148ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.initial_classes_in_group_capacity */
extern T6 T197f151(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.classes_in_group */
extern T0* T69f155(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T69f155ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T69f155ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T69f155ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.initial_classes_in_group_capacity */
extern T6 T69f156(GE_context* ac, T0* C);
/* ET_SYSTEM.classes_in_group */
extern T0* T40f125(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.classes_in_group */
extern T0* T40f125ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM.classes_in_group */
extern T0* T40f125ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_SYSTEM.classes_in_group */
extern T0* T40f125ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_SYSTEM.initial_classes_in_group_capacity */
extern T6 T40f128(GE_context* ac, T0* C);
/* ET_LIBRARY.full_name */
extern T0* T659f96(GE_context* ac, T0* C, T2 a1);
/* ET_LIBRARY.relative_name */
extern T0* T659f97(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.string_ */
extern T0* T659f98(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.full_name */
extern T0* T649f95(GE_context* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.relative_name */
extern T0* T649f98(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_DOTNET_ASSEMBLY.string_ */
extern T0* T649f100(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.full_name */
extern T0* T311f105(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.relative_name */
extern T0* T311f107(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.string_ */
extern T0* T311f109(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.full_name */
extern T0* T290f98(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_ASSEMBLY.relative_name */
extern T0* T290f100(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_ASSEMBLY.string_ */
extern T0* T290f102(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.full_name */
extern T0* T283f128(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.full_name */
extern T0* T265f95(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.relative_name */
extern T0* T265f98(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_DOTNET_ASSEMBLY.string_ */
extern T0* T265f100(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.full_name */
extern T0* T236f107(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_SYSTEM.full_name */
extern T0* T197f136(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_SYSTEM.full_name */
extern T0* T69f142(GE_context* ac, T0* C, T2 a1);
/* ET_SYSTEM.full_name */
extern T0* T40f121(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_SYSTEM.relative_lower_name */
extern T0* T283f143(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_SYSTEM.string_ */
extern T0* T283f134(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.lower_name */
extern T0* T283f146(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.relative_lower_name */
extern T0* T197f149(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_SYSTEM.string_ */
extern T0* T197f140(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.lower_name */
extern T0* T197f152(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.relative_lower_name */
extern T0* T69f153(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.string_ */
extern T0* T69f145(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.lower_name */
extern T0* T69f154(GE_context* ac, T0* C);
/* ET_SYSTEM.relative_lower_name */
extern T0* T40f129(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.string_ */
extern T0* T40f130(GE_context* ac, T0* C);
/* ET_SYSTEM.lower_name */
extern T0* T40f132(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.relative_name */
extern T0* T283f131(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_SYSTEM.relative_name */
extern T0* T197f137(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.relative_name */
extern T0* T69f143(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.relative_name */
extern T0* T40f123(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_SYSTEM.has_master_class */
extern T1 T283f130(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.has_master_class */
extern T1 T236f108(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.has_master_class */
extern T1 T197f135(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.has_master_class */
extern T1 T69f141(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.has_master_class */
extern T1 T40f122(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.hash_code */
extern T6 T659f94(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.hash_code */
extern T6 T649f93(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.hash_code */
extern T6 T311f104(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.hash_code */
extern T6 T290f97(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.hash_code */
extern T6 T283f129(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.hash_code */
extern T6 T265f93(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.hash_code */
extern T6 T236f105(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.hash_code */
extern T6 T197f134(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.hash_code */
extern T6 T69f140(GE_context* ac, T0* C);
/* ET_SYSTEM.hash_code */
extern T6 T40f127(GE_context* ac, T0* C);
/* ET_LIBRARY.master_class */
extern T0* T659f93(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.master_class */
extern T0* T283f144(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.master_class */
extern T0* T236f115(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.master_class */
extern T0* T197f132(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.master_class */
extern T0* T69f151(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.master_class */
extern T0* T40f117(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.kind_name */
extern T0* T659f102(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.kind_name */
extern T0* T649f103(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.kind_name */
extern T0* T311f115(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.kind_name */
extern T0* T290f108(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.kind_name */
extern T0* T283f147(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.kind_name */
extern T0* T265f102(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.kind_name */
extern T0* T236f118(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.kind_name */
extern T0* T197f153(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.kind_name */
extern T0* T69f157(GE_context* ac, T0* C);
/* ET_SYSTEM.kind_name */
extern T0* T40f133(GE_context* ac, T0* C);
/* ET_LIBRARY.full_lower_name */
extern T0* T659f100(GE_context* ac, T0* C, T2 a1);
/* ET_LIBRARY.relative_lower_name */
extern T0* T659f103(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.lower_name */
extern T0* T659f104(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T649f101(GE_context* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T649f102(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.full_lower_name */
extern T0* T311f112(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.relative_lower_name */
extern T0* T311f114(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T290f105(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T290f107(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_SYSTEM.full_lower_name */
extern T0* T283f148(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T265f101(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T265f104(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.full_lower_name */
extern T0* T236f114(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_SYSTEM.full_lower_name */
extern T0* T197f154(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_SYSTEM.full_lower_name */
extern T0* T69f158(GE_context* ac, T0* C, T2 a1);
/* ET_SYSTEM.full_lower_name */
extern T0* T40f134(GE_context* ac, T0* C, T2 a1);
/* ET_LIBRARY.shortest_path */
extern T0* T659f105(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.shortest_path */
extern T0* T659f105ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LIBRARY.shortest_path */
extern T0* T659f105ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.shortest_path */
extern T0* T659f105ac3(GE_context* ac, T0* a1, T0* a2);
/* [attached] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE].negated */
extern T1 T1991f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]].set_rout_disp_final */
extern void T1992f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_LIBRARY.insert_in_hash_table */
extern void T659f185(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].force_first */
extern void T1564f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].put */
extern void T1564f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].move_cursors_right */
extern void T1564f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_UNIVERSE].set_position */
extern void T2254f5(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].move_right */
extern void T1564f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE].force */
extern void T2253f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ADAPTED_UNIVERSE].fill_with */
extern void T2252f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ADAPTED_UNIVERSE].extend */
extern void T2252f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].put_last */
extern void T1564f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].resize */
extern void T1564f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T2253f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T2252f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].new_capacity */
extern T6 T1564f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].extendible */
extern T1 T1564f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].before */
extern T1 T1989f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].back */
extern void T1989f16(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_back */
extern void T1988f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].add_traversing_cursor */
extern void T1988f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].set_next_cursor */
extern void T1989f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].set_position */
extern void T1989f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].remove_traversing_cursor */
extern void T1988f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].set_before */
extern void T1989f19(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].clashes_item */
extern T6 T1988f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].finish */
extern void T1989f15(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_finish */
extern void T1988f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_off */
extern T1 T1988f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].off */
extern T1 T1989f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].is_empty */
extern T1 T1988f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].forth */
extern void T1989f14(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_forth */
extern void T1988f58(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].set_after */
extern void T1989f17(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].go_after */
extern void T1989f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_go_after */
extern void T1988f57(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].has */
extern T1 T1988f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].search_position */
extern void T1988f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].hash_position */
extern T6 T1988f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].key_storage_item */
extern T0* T1988f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].slots_item */
extern T6 T1988f32(GE_context* ac, T0* C, T6 a1);
/* ET_LIBRARY.universe_actions */
extern T0* T659f106(GE_context* ac, T0* C);
/* [attached] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE].default_create */
extern T0* T1991c2(GE_context* ac);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].item */
extern T6 T1989f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_item */
extern T6 T1988f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].item_storage_item */
extern T6 T1988f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].key */
extern T0* T1989f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_key */
extern T0* T1988f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].after */
extern T1 T1989f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].start */
extern void T1989f12(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_start */
extern void T1988f56(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].new_cursor */
extern T0* T1988f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].make */
extern T0* T1989c11(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].force_last */
extern void T1988f37(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].key_storage_put */
extern void T1988f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].slots_put */
extern void T1988f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].clashes_put */
extern void T1988f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].resize */
extern void T1988f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].clashes_resize */
extern void T1988f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].special_integer_ */
extern T0* T1988f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].key_storage_resize */
extern void T1988f49(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].item_storage_resize */
extern void T1988f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].slots_resize */
extern void T1988f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].new_modulus */
extern T6 T1988f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].new_capacity */
extern T6 T1988f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].item_storage_put */
extern void T1988f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].unset_found_item */
extern void T1988f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_map */
extern T0* T1988c36(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_with_equality_testers */
extern void T1988f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_sparse_container */
extern void T1988f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].set_internal_cursor */
extern void T1988f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_slots */
extern void T1988f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_clashes */
extern void T1988f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_key_storage */
extern void T1988f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_item_storage */
extern void T1988f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].make */
extern T0* T1564c11(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].set_internal_cursor */
extern void T1564f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].new_cursor */
extern T0* T1564f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_UNIVERSE].make */
extern T0* T2254c4(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE].make */
extern T0* T2253f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ADAPTED_UNIVERSE].make_empty */
extern T0* T2252c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE].default_create */
extern T0* T2253c3(GE_context* ac);
/* ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T649f104(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T649f104ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T649f104ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T649f104ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T649f183(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.universe_actions */
extern T0* T649f105(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T311f116(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T311f116ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T311f116ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T311f116ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.insert_in_hash_table */
extern void T311f206(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.universe_actions */
extern T0* T311f117(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T290f109(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T290f109ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T290f109ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T290f109ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T290f192(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.universe_actions */
extern T0* T290f110(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.shortest_path */
extern T0* T283f133(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.shortest_path */
extern T0* T283f133ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.shortest_path */
extern T0* T283f133ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.shortest_path */
extern T0* T283f133ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.insert_in_hash_table */
extern void T283f260(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_LACE_SYSTEM.universe_actions */
extern T0* T283f135(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T265f103(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T265f103ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T265f103ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T265f103ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T265f183(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.universe_actions */
extern T0* T265f105(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.shortest_path */
extern T0* T236f116(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T236f116ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T236f116ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T236f116ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.insert_in_hash_table */
extern void T236f211(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_LIBRARY.universe_actions */
extern T0* T236f119(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.shortest_path */
extern T0* T197f139(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.shortest_path */
extern T0* T197f139ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.shortest_path */
extern T0* T197f139ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.shortest_path */
extern T0* T197f139ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.insert_in_hash_table */
extern void T197f270(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_XACE_SYSTEM.universe_actions */
extern T0* T197f141(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.shortest_path */
extern T0* T69f135(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T69f135ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T69f135ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T69f135ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.insert_in_hash_table */
extern void T69f253(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_SYSTEM.universe_actions */
extern T0* T69f139(GE_context* ac, T0* C);
/* ET_SYSTEM.shortest_path */
extern T0* T40f126(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.shortest_path */
extern T0* T40f126ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_SYSTEM.shortest_path */
extern T0* T40f126ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_SYSTEM.shortest_path */
extern T0* T40f126ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_SYSTEM.insert_in_hash_table */
extern void T40f208(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_SYSTEM.universe_actions */
extern T0* T40f131(GE_context* ac, T0* C);
/* ET_LIBRARY.adapted_universe */
extern T0* T659f95(GE_context* ac, T0* C, T0* a1);
extern T1 T659f95ot1(T0* a1, T0** a2);
extern T1 T659f95ot2(T0* a1, T0** a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.adapted_dotnet_assembly */
extern T0* T264f5(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.adapted_library */
extern T0* T237f5(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T649f94(GE_context* ac, T0* C, T0* a1);
extern T1 T649f94ot1(T0* a1, T0** a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].has */
extern T1 T1792f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.adapted_universe */
extern T0* T311f111(GE_context* ac, T0* C, T0* a1);
extern T1 T311f111ot1(T0* a1, T0** a2);
/* ET_LACE_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T290f104(GE_context* ac, T0* C, T0* a1);
extern T1 T290f104ot1(T0* a1, T0** a2);
/* ET_LACE_SYSTEM.adapted_universe */
extern T0* T283f132(GE_context* ac, T0* C, T0* a1);
extern T1 T283f132ot1(T0* a1, T0** a2);
extern T1 T283f132ot2(T0* a1, T0** a2);
/* ET_ECF_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T265f94(GE_context* ac, T0* C, T0* a1);
extern T1 T265f94ot1(T0* a1, T0** a2);
/* ET_ECF_LIBRARY.adapted_universe */
extern T0* T236f106(GE_context* ac, T0* C, T0* a1);
extern T1 T236f106ot1(T0* a1, T0** a2);
extern T1 T236f106ot2(T0* a1, T0** a2);
/* ET_XACE_SYSTEM.adapted_universe */
extern T0* T197f138(GE_context* ac, T0* C, T0* a1);
extern T1 T197f138ot1(T0* a1, T0** a2);
extern T1 T197f138ot2(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.adapted_universe */
extern T0* T69f144(GE_context* ac, T0* C, T0* a1);
extern T1 T69f144ot1(T0* a1, T0** a2);
extern T1 T69f144ot2(T0* a1, T0** a2);
/* ET_SYSTEM.adapted_universe */
extern T0* T40f124(GE_context* ac, T0* C, T0* a1);
extern T1 T40f124ot1(T0* a1, T0** a2);
extern T1 T40f124ot2(T0* a1, T0** a2);
/* ET_EXTERNAL_PROCEDURE.is_deferred */
extern T1 T2152f40(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_deferred */
extern T1 T2082f43(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_deferred */
extern T1 T592f42(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_frozen */
extern T1 T2152f44(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_frozen */
extern T1 T2082f46(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_frozen */
extern T1 T596f41(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_frozen */
extern T1 T592f43(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_parenthesisable */
extern T1 T2152f48(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_parenthesisable */
extern T1 T2082f50(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_parenthesisable */
extern T1 T596f43(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_parenthesisable */
extern T1 T592f45(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_name */
extern T0* T2152f83(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_extended_name */
extern T0* T2152f85(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_name */
extern T0* T2082f78(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_extended_name */
extern T0* T2082f80(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_name */
extern T0* T596f74(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_extended_name */
extern T0* T596f76(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_name */
extern T0* T592f75(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_extended_name */
extern T0* T592f77(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.alias_name */
extern T0* T2152f47(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.alias_name */
extern T0* T2082f47(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.alias_name */
extern T0* T596f42(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.alias_name */
extern T0* T592f44(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_alias_name */
extern T0* T2152f84(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_alias_name */
extern T0* T2082f79(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_alias_name */
extern T0* T596f75(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_alias_name */
extern T0* T592f76(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_exported_to */
extern T1 T2152f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.has_descendant */
extern T1 T2040f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_ancestor */
extern T1 T95f231(GE_context* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.has_class */
extern T1 T538f6(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.has_descendant */
extern T1 T700f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_exported_to */
extern T1 T2082f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_PROCEDURE.is_exported_to */
extern T1 T596f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE.is_exported_to */
extern T1 T592f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.is_static */
extern T1 T2152f63(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_static */
extern T1 T2152f63p1(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.has_static_mark */
extern T1 T2152f55(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_static */
extern T1 T2082f63(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.has_static_mark */
extern T1 T2082f57(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_static */
extern T1 T596f36(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.has_static_mark */
extern T1 T596f28(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_static */
extern T1 T592f36(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.has_static_mark */
extern T1 T592f58(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_deferred */
extern T1 T2080f44(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_deferred */
extern T1 T2079f44(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_deferred */
extern T1 T496f29(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_deferred */
extern T1 T494f33(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_deferred */
extern T1 T492f31(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_deferred */
extern T1 T454f35(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_deferred */
extern T1 T344f34(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_frozen */
extern T1 T2081f47(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_frozen */
extern T1 T2080f47(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_frozen */
extern T1 T2079f47(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_frozen */
extern T1 T496f30(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_frozen */
extern T1 T494f34(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_frozen */
extern T1 T492f32(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_frozen */
extern T1 T454f36(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_frozen */
extern T1 T344f46(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_bracketable */
extern T1 T2081f53(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_bracketable */
extern T1 T2080f53(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_bracketable */
extern T1 T2079f52(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_bracketable */
extern T1 T496f34(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_bracketable */
extern T1 T494f38(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_bracketable */
extern T1 T492f36(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_bracketable */
extern T1 T454f40(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_bracketable */
extern T1 T344f50(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_parenthesisable */
extern T1 T2081f54(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_parenthesisable */
extern T1 T2080f55(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_parenthesisable */
extern T1 T2079f53(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_parenthesisable */
extern T1 T496f35(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_parenthesisable */
extern T1 T494f39(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_parenthesisable */
extern T1 T492f37(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_parenthesisable */
extern T1 T454f41(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_parenthesisable */
extern T1 T344f51(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once */
extern T1 T2081f55(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_once */
extern T1 T2079f54(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_once */
extern T1 T496f36(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once */
extern T1 T494f40(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once */
extern T1 T492f38(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once */
extern T1 T454f42(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once */
extern T1 T344f52(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once_per_object */
extern T1 T2081f56(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once_per_object */
extern T1 T2080f57(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_once_per_object */
extern T1 T2079f55(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_once_per_object */
extern T1 T496f37(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once_per_object */
extern T1 T494f41(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once_per_object */
extern T1 T492f39(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once_per_object */
extern T1 T454f43(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once_per_object */
extern T1 T344f53(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.preconditions */
extern T0* T496f44(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.preconditions */
extern T0* T494f48(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.preconditions */
extern T0* T492f46(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.postconditions */
extern T0* T496f39(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.postconditions */
extern T0* T494f43(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.postconditions */
extern T0* T492f41(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_infixable */
extern T1 T2081f50(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_infixable */
extern T1 T2080f50(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_infixable */
extern T1 T2079f50(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_infixable */
extern T1 T496f32(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_infixable */
extern T1 T494f36(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_infixable */
extern T1 T492f34(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_infixable */
extern T1 T454f38(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_infixable */
extern T1 T344f48(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_prefixable */
extern T1 T2081f48(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_prefixable */
extern T1 T2080f48(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_prefixable */
extern T1 T2079f48(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_prefixable */
extern T1 T344f47(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.arguments_count */
extern T6 T2081f58(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.arguments_count */
extern T6 T2080f59(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.arguments_count */
extern T6 T2079f57(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.arguments_count */
extern T6 T496f38(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments_count */
extern T6 T494f42(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments_count */
extern T6 T492f40(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.arguments_count */
extern T6 T454f44(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.arguments_count */
extern T6 T344f55(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_static */
extern T1 T2081f59(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_static_mark */
extern T1 T2081f65(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_static */
extern T1 T2080f60(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.has_static_mark */
extern T1 T2080f69(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_static */
extern T1 T2079f58(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.has_static_mark */
extern T1 T2079f64(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_static */
extern T1 T496f23(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.has_static_mark */
extern T1 T496f56(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_static */
extern T1 T494f27(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_static */
extern T1 T494f27p1(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.has_static_mark */
extern T1 T494f61(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_static */
extern T1 T492f25(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_static */
extern T1 T492f25p1(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.has_static_mark */
extern T1 T492f59(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_static */
extern T1 T454f64(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.has_static_mark */
extern T1 T454f61(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_static */
extern T1 T344f56(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_static */
extern T1 T344f56p1(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.has_static_mark */
extern T1 T344f62(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.name */
extern T0* T2081f43(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.name */
extern T0* T2080f43(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.name */
extern T0* T2079f43(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.name */
extern T0* T496f27(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.name */
extern T0* T494f29(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.name */
extern T0* T492f29(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.name */
extern T0* T454f30(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.name */
extern T0* T344f72(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_name */
extern T0* T2081f76(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_extended_name */
extern T0* T2081f78(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_name */
extern T0* T2080f79(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_extended_name */
extern T0* T2080f81(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_name */
extern T0* T2079f77(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_extended_name */
extern T0* T2079f79(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_name */
extern T0* T496f73(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_extended_name */
extern T0* T496f75(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_name */
extern T0* T494f77(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_extended_name */
extern T0* T494f79(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_name */
extern T0* T492f76(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_extended_name */
extern T0* T492f78(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_name */
extern T0* T454f76(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_extended_name */
extern T0* T454f78(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_name */
extern T0* T344f85(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_extended_name */
extern T0* T344f87(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.alias_name */
extern T0* T2081f51(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.alias_name */
extern T0* T2080f51(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.alias_name */
extern T0* T2079f51(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.alias_name */
extern T0* T496f33(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.alias_name */
extern T0* T494f37(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.alias_name */
extern T0* T492f35(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.alias_name */
extern T0* T454f39(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.alias_name */
extern T0* T344f49(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_alias_name */
extern T0* T2081f77(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_alias_name */
extern T0* T2080f80(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_alias_name */
extern T0* T2079f78(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_alias_name */
extern T0* T496f74(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_alias_name */
extern T0* T494f78(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_alias_name */
extern T0* T492f77(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_alias_name */
extern T0* T454f77(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_alias_name */
extern T0* T344f86(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.lower_name */
extern T0* T2081f64(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.lower_name */
extern T0* T2080f64(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.lower_name */
extern T0* T2079f63(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.lower_name */
extern T0* T496f41(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.lower_name */
extern T0* T494f45(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.lower_name */
extern T0* T492f43(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.lower_name */
extern T0* T454f46(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.lower_name */
extern T0* T344f68(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.named_base_class */
extern T0* T517f19(GE_context* ac, T0* C);
extern T1 T517f19ot1(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T517f32(GE_context* ac, T0* C, T0* a1);
extern T1 T517f32ot1(T0* a1, T0** a2);
/* ET_TOKEN_CONSTANTS.like_0 */
extern T0* T94f246(GE_context* ac, T0* C);
/* ET_LIKE_N.make_zero */
extern T0* T1749c41(GE_context* ac, T0* a1);
/* ET_LIKE_N.tokens */
extern T0* T1749f10(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T345f31(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_expanded_with_type_mark */
extern T1 T95f62(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T93f27(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T517f36(GE_context* ac, T0* C, T0* a1);
extern T1 T517f36ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_base_type_with_type_mark */
extern T0* T345f32(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_base_type_with_type_mark */
extern T0* T95f63(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_with_type_mark */
extern T0* T93f28(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_base_class_type_with_type_marks */
extern T1 T517f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T517f33ot1(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.cloned_type_context */
extern T0* T517f11(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.context_same_base_class_type_with_type_marks */
extern T1 T345f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_class_type_with_type_marks */
extern T1 T95f174(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_class_type_with_type_marks */
extern T1 T93f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_base_tuple_type_with_type_marks */
extern T1 T517f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T517f34ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_base_tuple_type_with_type_marks */
extern T1 T345f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_tuple_type_with_type_marks */
extern T1 T95f175(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_tuple_type_with_type_marks */
extern T1 T93f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T517f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T517f28ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T345f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_class_type_with_type_marks */
extern T1 T95f177(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T93f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T517f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T517f29ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T345f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_tuple_type_with_type_marks */
extern T1 T95f178(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T93f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T517f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T517f21ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T345f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_class_type_with_type_marks */
extern T1 T95f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T93f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T517f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T517f22ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T345f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_tuple_type_with_type_marks */
extern T1 T95f180(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T93f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T517f35(GE_context* ac, T0* C, T0* a1);
extern T1 T517f35ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T345f60(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_detachable_with_type_mark */
extern T1 T95f181(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T93f59(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T517f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T517f23ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T345f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_to_type_with_type_marks */
extern T1 T95f182(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T93f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T517f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T517f12ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_type_with_type_marks */
extern T1 T345f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_type_with_type_marks */
extern T1 T95f183(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_type_with_type_marks */
extern T1 T93f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T517f13(GE_context* ac, T0* C, T0* a1);
extern T1 T517f13ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_named_type_with_type_mark */
extern T0* T345f63(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_named_type_with_type_mark */
extern T0* T95f184(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_named_type_with_type_mark */
extern T0* T93f62(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T517f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T517f30ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T345f72(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T95f197(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T93f71(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T517f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T517f31ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T345f73(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T95f198(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T93f72(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T517f40(GE_context* ac, T0* C, T0* a1);
extern T1 T517f40ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_reference_with_type_mark */
extern T1 T345f91(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_reference_with_type_mark */
extern T1 T95f222(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_reference_with_type_mark */
extern T1 T93f93(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T517f41(GE_context* ac, T0* C, T0* a1);
extern T1 T517f41ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_attached_with_type_mark */
extern T1 T345f92(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_attached_with_type_mark */
extern T1 T95f223(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_attached_with_type_mark */
extern T1 T93f94(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_base_type_with_type_marks */
extern T1 T517f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T517f48ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_base_type_with_type_marks */
extern T1 T345f94(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_type_with_type_marks */
extern T1 T95f225(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_type_with_type_marks */
extern T1 T93f96(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.named_type */
extern T0* T517f10(GE_context* ac, T0* C);
/* ET_CLASS.context_named_type */
extern T0* T95f226(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.context_named_type */
extern T0* T93f97(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T517f5(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.attachment_type_conformance_mode */
extern T1 T345f28(GE_context* ac, T0* C);
/* ET_CLASS.attachment_type_conformance_mode */
extern T1 T95f168(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.attachment_type_conformance_mode */
extern T1 T93f26(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.scoop_mode */
extern T1 T517f6(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.scoop_mode */
extern T1 T345f34(GE_context* ac, T0* C);
/* ET_CLASS.scoop_mode */
extern T1 T95f65(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.scoop_mode */
extern T1 T93f35(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_class */
extern T0* T517f25(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual_count */
extern T6 T517f26(GE_context* ac, T0* C);
extern T1 T517f26ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_base_type_actual_count */
extern T6 T345f55(GE_context* ac, T0* C);
/* ET_CLASS.context_base_type_actual_count */
extern T6 T95f176(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.context_base_type_actual_count */
extern T6 T93f54(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual */
extern T0* T517f27(GE_context* ac, T0* C, T6 a1);
extern T1 T517f27ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_base_type_actual */
extern T0* T345f64(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.context_base_type_actual */
extern T0* T95f188(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.context_base_type_actual */
extern T0* T93f63(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.is_root_context */
extern T1 T517f20(GE_context* ac, T0* C);
extern T1 T517f20ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.is_root_context */
extern T1 T345f16(GE_context* ac, T0* C);
/* ET_CLASS.is_root_context */
extern T1 T95f116(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_root_context */
extern T1 T93f20(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.root_context */
extern T0* T345f17(GE_context* ac, T0* C);
/* ET_CLASS.root_context */
extern T0* T95f121(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.root_context */
extern T0* T93f21(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.as_nested_type_context */
extern T0* T517f7(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.as_nested_type_context */
extern T0* T345f35(GE_context* ac, T0* C);
/* ET_CLASS.as_nested_type_context */
extern T0* T95f66(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.as_nested_type_context */
extern T0* T93f37(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.to_nested_type_context */
extern T0* T517f8(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.to_nested_type_context */
extern T0* T345f36(GE_context* ac, T0* C);
/* ET_CLASS.to_nested_type_context */
extern T0* T95f67(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.to_nested_type_context */
extern T0* T93f38(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.type */
extern T0* T2154f45(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.type */
extern T0* T2098f46(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type */
extern T0* T2097f42(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T1895f21(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.type */
extern T0* T498f12(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.type */
extern T0* T345f12(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.type */
extern T0* T93f22(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.base_type */
extern T0* T2154f26(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_type */
extern T0* T2098f25(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type */
extern T0* T2097f7(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.base_type */
extern T0* T1895f5(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type */
extern T0* T1712f40(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.base_type */
extern T0* T1243f38(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_type */
extern T0* T498f11(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type */
extern T0* T345f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.base_type */
extern T0* T95f100(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_type */
extern T0* T93f7(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_base_type */
extern T0* T2154f56(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_base_type */
extern T0* T2098f54(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type */
extern T0* T2097f57(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type */
extern T0* T1895f52(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type */
extern T0* T1712f58(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_base_type */
extern T0* T1243f51(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_base_type */
extern T0* T498f51(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_base_type */
extern T0* T345f84(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.shallow_base_type */
extern T0* T95f208(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_base_type */
extern T0* T93f85(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_named_type */
extern T1 T2154f43(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_named_type */
extern T1 T2098f42(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_named_type */
extern T1 T2097f39(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_named_type */
extern T1 T1895f40(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_named_type */
extern T1 T1712f59(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_named_type */
extern T1 T1243f52(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.is_named_type */
extern T1 T498f37(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_named_type */
extern T1 T345f74(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_named_type */
extern T1 T93f73(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.is_type_reference */
extern T1 T2154f42(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_reference */
extern T1 T2098f41(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference */
extern T1 T2097f38(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T1895f44(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference */
extern T1 T1712f53(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_reference */
extern T1 T1243f46(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_reference */
extern T1 T498f45(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_reference */
extern T1 T345f78(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_reference */
extern T1 T95f210(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_reference */
extern T1 T93f78(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_type_with_type_mark */
extern T0* T2154f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.overridden_type_mark */
extern T0* T2154f50(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_type_with_type_mark */
extern T0* T2098f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.overridden_type_mark */
extern T0* T2098f48(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.tokens */
extern T0* T2098f49(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type_with_type_mark */
extern T0* T2097f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.overridden_type_mark */
extern T0* T2097f45(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_type_with_type_mark */
extern T0* T1895f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.tokens */
extern T0* T1895f24(GE_context* ac, T0* C);
/* ET_LIKE_N.named_type_with_type_mark */
extern T0* T1749f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_N.overridden_type_mark */
extern T0* T1749f9(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.valid_index */
extern T1 T517f24(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T1712f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T1243f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.tokens */
extern T0* T1243f63(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.named_type_with_type_mark */
extern T0* T498f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.overridden_type_mark */
extern T0* T498f7(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.same_named_class_type_with_type_marks */
extern T1 T2154f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_named_class_type_with_type_marks */
extern T1 T2098f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_class_type_with_type_marks */
extern T1 T2097f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_class_type_with_type_marks */
extern T1 T1895f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1895f13ot1(T0* a1);
/* ET_LIKE_N.same_named_class_type_with_type_marks */
extern T1 T1749f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T1712f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1712f18ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T1243f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1243f16ot1(T0* a1);
/* ET_LIKE_CURRENT.same_named_class_type_with_type_marks */
extern T1 T498f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_tuple_type_with_type_marks */
extern T1 T2154f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T2098f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T2097f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1895f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1895f14ot1(T0* a1);
/* ET_LIKE_N.same_named_tuple_type_with_type_marks */
extern T1 T1749f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T1712f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1712f19ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T1243f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1243f17ot1(T0* a1);
/* ET_LIKE_CURRENT.same_named_tuple_type_with_type_marks */
extern T1 T498f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.base_type_actual_count */
extern T6 T2154f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual_count */
extern T6 T2098f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual_count */
extern T6 T2097f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual_count */
extern T6 T1895f8(GE_context* ac, T0* C, T0* a1);
extern T1 T1895f8ot1(T0* a1, T0** a2);
extern T1 T1895f8ot2(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_actual_count */
extern T6 T1749f14(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T1712f21(GE_context* ac, T0* C, T0* a1);
extern T1 T1712f21ot1(T0* a1, T0** a2);
extern T1 T1712f21ot2(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T1243f19(GE_context* ac, T0* C, T0* a1);
extern T1 T1243f19ot1(T0* a1, T0** a2);
extern T1 T1243f19ot2(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.base_type_actual_count */
extern T6 T498f17(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.conforms_from_class_type_with_type_marks */
extern T1 T2154f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T2098f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T2097f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1895f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1895f10ot1(T0* a1);
/* ET_LIKE_N.conforms_from_class_type_with_type_marks */
extern T1 T1749f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T1712f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1712f23ot1(T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T1243f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1243f21ot1(T0* a1);
/* ET_LIKE_CURRENT.conforms_from_class_type_with_type_marks */
extern T1 T498f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_FEATURE.conforms_from_tuple_type_with_type_marks */
extern T1 T2154f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T2098f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T2097f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1895f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1895f11ot1(T0* a1);
/* ET_LIKE_N.conforms_from_tuple_type_with_type_marks */
extern T1 T1749f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T1712f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1712f24ot1(T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T1243f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1243f22ot1(T0* a1);
/* ET_LIKE_CURRENT.conforms_from_tuple_type_with_type_marks */
extern T1 T498f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_FEATURE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T2154f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T2098f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T2097f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1895f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1895f31ot1(T0* a1, T0** a2);
extern T1 T1895f31ot2(T0* a1, T0** a2);
extern T1 T1895f31ot3(T0* a1, T0** a2);
/* ET_LIKE_N.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1749f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1712f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1712f25ot1(T0* a1, T0** a2);
extern T1 T1712f25ot2(T0* a1, T0** a2);
extern T1 T1712f25ot3(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1243f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1243f23ot1(T0* a1, T0** a2);
extern T1 T1243f23ot2(T0* a1, T0** a2);
extern T1 T1243f23ot3(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T498f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_FEATURE.conforms_to_type_with_type_marks */
extern T1 T2154f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_type_with_type_marks */
extern T1 T2098f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type_with_type_marks */
extern T1 T2097f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type_with_type_marks */
extern T1 T1895f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1895f27ot1(T0* a1, T0** a2);
/* ET_LIKE_N.conforms_to_type_with_type_marks */
extern T1 T1749f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T1712f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1712f20ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T1243f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1243f18ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.conforms_to_type_with_type_marks */
extern T1 T498f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_FEATURE.same_named_formal_parameter_type_with_type_marks */
extern T1 T2154f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T2098f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T2097f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1895f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1895f32ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_named_formal_parameter_type_with_type_marks */
extern T1 T1749f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T1712f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1712f26ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T1243f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1243f24ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.same_named_formal_parameter_type_with_type_marks */
extern T1 T498f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.is_type_expanded_with_type_mark */
extern T1 T2154f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_expanded_with_type_mark */
extern T1 T2098f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded_with_type_mark */
extern T1 T2097f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded_with_type_mark */
extern T1 T1895f19(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1895f19ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_expanded_with_type_mark */
extern T1 T1749f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T1712f27(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1712f27ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T1243f25(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1243f25ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.is_type_expanded_with_type_mark */
extern T1 T498f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.same_syntactical_type_with_type_marks */
extern T1 T2154f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T2098f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T2097f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1895f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1895f43ot1(T0* a1, T0** a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T1712f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1712f45ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T1243f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1243f43ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.same_syntactical_type_with_type_marks */
extern T1 T498f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T345f77(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_generic */
extern T1 T345f26(GE_context* ac, T0* C);
/* ET_CLASS.same_syntactical_type_with_type_marks */
extern T1 T95f202(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_type_with_type_marks */
extern T1 T93f77(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T2154f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T2098f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T2097f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1895f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1895f46ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1749f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1712f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1712f44ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1243f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1243f42ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T498f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T345f79(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T95f206(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T93f80(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_base_class_type_with_type_marks */
extern T1 T2154f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_base_class_type_with_type_marks */
extern T1 T2098f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_class_type_with_type_marks */
extern T1 T2097f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_base_class_type_with_type_marks */
extern T1 T1895f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1895f6ot1(T0* a1);
/* ET_LIKE_N.same_base_class_type_with_type_marks */
extern T1 T1749f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_class_type_with_type_marks */
extern T1 T1712f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1712f31ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_base_class_type_with_type_marks */
extern T1 T1243f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1243f29ot1(T0* a1);
/* ET_LIKE_CURRENT.same_base_class_type_with_type_marks */
extern T1 T498f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_base_tuple_type_with_type_marks */
extern T1 T2154f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T2098f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T2097f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T1895f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1895f7ot1(T0* a1);
/* ET_LIKE_N.same_base_tuple_type_with_type_marks */
extern T1 T1749f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_tuple_type_with_type_marks */
extern T1 T1712f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1712f32ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_base_tuple_type_with_type_marks */
extern T1 T1243f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1243f30ot1(T0* a1);
/* ET_LIKE_CURRENT.same_base_tuple_type_with_type_marks */
extern T1 T498f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.is_type_detachable_with_type_mark */
extern T1 T2154f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_detachable_with_type_mark */
extern T1 T2098f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable_with_type_mark */
extern T1 T2097f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T1895f25(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1895f25ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_detachable_with_type_mark */
extern T1 T1749f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T1712f33(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1712f33ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T1243f31(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1243f31ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.is_type_detachable_with_type_mark */
extern T1 T498f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_reference_with_type_mark */
extern T1 T2154f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_reference_with_type_mark */
extern T1 T2098f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference_with_type_mark */
extern T1 T2097f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference_with_type_mark */
extern T1 T1895f26(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1895f26ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_reference_with_type_mark */
extern T1 T1749f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T1712f35(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1712f35ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T1243f33(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1243f33ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.is_type_reference_with_type_mark */
extern T1 T498f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_attached_with_type_mark */
extern T1 T2154f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_attached_with_type_mark */
extern T1 T2098f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_attached_with_type_mark */
extern T1 T2097f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T1895f33(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1895f33ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_attached_with_type_mark */
extern T1 T1749f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T1712f36(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1712f36ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T1243f34(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1243f34ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.is_type_attached_with_type_mark */
extern T1 T498f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.named_base_class */
extern T0* T2154f8(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_base_class */
extern T0* T2098f8(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_base_class */
extern T0* T2097f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_base_class */
extern T0* T1895f18(GE_context* ac, T0* C, T0* a1);
extern T1 T1895f18ot1(T0* a1, T0** a2);
/* ET_LIKE_N.named_base_class */
extern T0* T1749f5(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_base_class */
extern T0* T1712f17(GE_context* ac, T0* C, T0* a1);
extern T1 T1712f17ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.named_base_class */
extern T0* T1243f15(GE_context* ac, T0* C, T0* a1);
extern T1 T1243f15ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.named_base_class */
extern T0* T498f4(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_base_class_in_context */
extern T0* T345f5(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.named_base_class_in_context */
extern T0* T95f106(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_base_class_in_context */
extern T0* T93f8(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T2154f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T2098f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_attachment_marks_with_default */
extern T1 T2098f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T2097f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_attachment_marks_with_default */
extern T1 T2097f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1895f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1895f48ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1749f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1712f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1712f49ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1243f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1243f57ot1(T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T498f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T345f82(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T95f219(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T93f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_like_feature_with_type_marks */
extern T1 T2154f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_attachment_marks_with_default */
extern T1 T2154f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T2098f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T2097f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1895f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1895f51ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_like_feature_with_type_marks */
extern T1 T1749f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T1712f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1712f50ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T1243f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1243f58ot1(T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_like_feature_with_type_marks */
extern T1 T498f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T345f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_like_feature_with_type_marks */
extern T1 T95f220(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T93f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_class_type_with_type_marks */
extern T1 T2154f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T2098f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T2097f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1895f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1895f54ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_class_type_with_type_marks */
extern T1 T1749f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T1712f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1712f46ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T1243f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1243f54ot1(T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_class_type_with_type_marks */
extern T1 T498f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T345f85(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_class_type_with_type_marks */
extern T1 T95f217(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.is_type_separate_with_type_mark */
extern T1 T93f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_separate */
extern T1 T93f15(GE_context* ac, T0* C);
/* ET_CLASS.is_separate */
extern T1 T95f94(GE_context* ac, T0* C);
/* ET_CLASS.has_separate_mark */
extern T1 T95f105(GE_context* ac, T0* C);
/* ET_CLASS.is_type_separate_with_type_mark */
extern T1 T95f80(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T93f87(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_tuple_type_with_type_marks */
extern T1 T2154f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T2098f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T2097f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1895f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1895f57ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_tuple_type_with_type_marks */
extern T1 T1749f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T1712f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1712f47ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T1243f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1243f55ot1(T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_tuple_type_with_type_marks */
extern T1 T498f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T345f88(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_type_separate_with_type_mark */
extern T1 T345f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_separate */
extern T1 T345f21(GE_context* ac, T0* C);
/* ET_CLASS.same_syntactical_tuple_type_with_type_marks */
extern T1 T95f221(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T93f92(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_like_current_with_type_marks */
extern T1 T2154f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T2098f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T2097f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1895f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1895f58ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_like_current_with_type_marks */
extern T1 T1749f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T1712f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1712f48ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T1243f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1243f56ot1(T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_like_current_with_type_marks */
extern T1 T498f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_attachment_marks_with_default */
extern T1 T498f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T345f93(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_like_current_with_type_marks */
extern T1 T95f224(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T93f95(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.type_with_type_mark */
extern T0* T2154f68(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.set_type_mark */
extern void T2154f85(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.twin */
extern T0* T2154f70(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.copy */
extern void T2154f86(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.type_with_type_mark */
extern T0* T2098f66(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_with_type_mark */
extern T0* T2097f69(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_right_brace */
extern void T2097f84(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_left_brace */
extern void T2097f83(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.type_with_type_mark */
extern T0* T1895f36(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T1712f43(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T1243f41(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.type_with_type_mark */
extern T0* T498f61(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.set_current_keyword */
extern void T498f77(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_type_actual */
extern T0* T2154f13(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual */
extern T0* T2098f13(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual */
extern T0* T2097f51(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual */
extern T0* T1895f50(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1895f50ot1(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_actual */
extern T0* T1749f15(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual */
extern T0* T1712f22(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1712f22ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_actual */
extern T0* T1243f20(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1243f20ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.base_type_actual */
extern T0* T498f41(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_with_type_mark */
extern T0* T2154f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_with_type_mark */
extern T0* T2098f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_with_type_mark */
extern T0* T2097f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_with_type_mark */
extern T0* T1895f20(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1895f20ot1(T0* a1, T0** a2);
extern T1 T1895f20ot2(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_with_type_mark */
extern T0* T1749f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T1712f34(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1712f34ot1(T0* a1, T0** a2);
extern T1 T1712f34ot2(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T1243f32(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1243f32ot1(T0* a1, T0** a2);
extern T1 T1243f32ot2(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.base_type_with_type_mark */
extern T0* T498f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_index_of_label */
extern T6 T2154f65(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_index_of_label */
extern T6 T2098f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_index_of_label */
extern T6 T2097f66(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_index_of_label */
extern T6 T1895f61(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1895f61ot1(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_index_of_label */
extern T6 T1749f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T1712f37(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1712f37ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T1243f35(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1243f35ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.base_type_index_of_label */
extern T6 T498f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.shallow_base_type_with_type_mark */
extern T0* T2154f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.shallow_base_type_with_type_mark */
extern T0* T2098f65(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type_with_type_mark */
extern T0* T2097f68(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type_with_type_mark */
extern T0* T1895f63(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1895f63ot1(T0* a1, T0** a2);
extern T1 T1895f63ot2(T0* a1, T0** a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T1712f64(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1712f64ot1(T0* a1, T0** a2);
extern T1 T1712f64ot2(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T1243f66(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1243f66ot1(T0* a1, T0** a2);
extern T1 T1243f66ot2(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.shallow_base_type_with_type_mark */
extern T0* T498f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_expanded */
extern T1 T2154f25(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_expanded */
extern T1 T2098f24(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded */
extern T1 T2097f54(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded */
extern T1 T1895f34(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded */
extern T1 T1712f39(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_expanded */
extern T1 T1243f37(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_expanded */
extern T1 T498f9(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_expanded */
extern T1 T345f9(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_expanded */
extern T1 T95f99(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_expanded */
extern T1 T93f90(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_named_type */
extern T0* T2154f39(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_named_type */
extern T0* T2098f38(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type */
extern T0* T2097f33(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type */
extern T0* T1895f41(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type */
extern T0* T1712f56(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_named_type */
extern T0* T1243f49(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_named_type */
extern T0* T498f38(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_named_type */
extern T0* T345f75(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.shallow_named_type */
extern T0* T95f204(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_named_type */
extern T0* T93f74(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_like_current */
extern T1 T2154f40(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_like_current */
extern T1 T2098f39(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_like_current */
extern T1 T2097f34(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_like_current */
extern T1 T1895f47(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_like_current */
extern T1 T1712f57(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_like_current */
extern T1 T1243f50(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_like_current */
extern T1 T345f81(GE_context* ac, T0* C);
/* ET_CLASS.is_like_current */
extern T1 T95f205(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_like_current */
extern T1 T93f82(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.is_type_attached */
extern T1 T2154f71(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_attached */
extern T1 T2098f68(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_attached */
extern T1 T2097f71(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_attached */
extern T1 T1895f65(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_attached */
extern T1 T498f66(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_attached */
extern T1 T345f100(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_attached */
extern T1 T93f105(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_base_type */
extern T1 T2154f63(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_base_type */
extern T1 T2098f61(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_base_type */
extern T1 T2097f64(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_base_type */
extern T1 T1895f59(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_base_type */
extern T1 T1712f70(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_base_type */
extern T1 T1243f69(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.is_base_type */
extern T1 T498f62(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_base_type */
extern T1 T345f95(GE_context* ac, T0* C);
/* ET_CLASS.is_base_type */
extern T1 T95f233(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_base_type */
extern T1 T93f98(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.is_type_detachable */
extern T1 T2154f29(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_detachable */
extern T1 T2098f28(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable */
extern T1 T2097f11(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_detachable */
extern T1 T1895f9(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable */
extern T1 T1712f41(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_detachable */
extern T1 T1243f39(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_detachable */
extern T1 T498f18(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_detachable */
extern T1 T345f42(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_detachable */
extern T1 T95f152(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_detachable */
extern T1 T93f43(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.to_text */
extern T0* T2154f19(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.to_text */
extern T0* T2098f19(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.to_text */
extern T0* T2097f52(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.to_text */
extern T0* T1895f49(GE_context* ac, T0* C);
/* ET_LIKE_N.to_text */
extern T0* T1749f13(GE_context* ac, T0* C);
/* ET_LIKE_N.append_to_string */
extern void T1749f42(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.to_text */
extern T0* T1712f28(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.to_text */
extern T0* T1243f26(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.to_text */
extern T0* T498f42(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.same_base_type_with_type_marks */
extern T1 T2154f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_base_type_with_type_marks */
extern T1 T2098f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_type_with_type_marks */
extern T1 T2097f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_base_type_with_type_marks */
extern T1 T1895f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1895f53ot1(T0* a1, T0** a2);
/* ET_CLASS_TYPE.same_base_formal_parameter_type_with_type_marks */
extern T1 T93f104(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_base_type_with_type_marks */
extern T1 T1749f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_type_with_type_marks */
extern T1 T1712f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1712f69ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_base_type_with_type_marks */
extern T1 T1243f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1243f68ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.same_base_type_with_type_marks */
extern T1 T498f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.shallow_named_type_with_type_mark */
extern T0* T2154f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.shallow_named_type_with_type_mark */
extern T0* T2098f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type_with_type_mark */
extern T0* T2097f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type_with_type_mark */
extern T0* T1895f45(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1895f45ot1(T0* a1, T0** a2);
/* ET_LIKE_N.shallow_named_type_with_type_mark */
extern T0* T1749f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T1712f55(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1712f55ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T1243f48(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1243f48ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.shallow_named_type_with_type_mark */
extern T0* T498f47(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.same_named_type_with_type_marks */
extern T1 T2154f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_named_type_with_type_marks */
extern T1 T2098f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type_with_type_marks */
extern T1 T2097f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type_with_type_marks */
extern T1 T1895f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1895f28ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_named_type_with_type_marks */
extern T1 T1749f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T1712f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1712f15ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T1243f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1243f13ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.same_named_type_with_type_marks */
extern T1 T498f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_type */
extern T1 T2154f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_named_type */
extern T1 T2098f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type */
extern T1 T2097f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type */
extern T1 T1895f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type */
extern T1 T1712f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_named_type */
extern T1 T1243f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_named_type */
extern T1 T498f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.has_anchored_type */
extern T1 T2154f41(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.has_anchored_type */
extern T1 T2098f40(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_anchored_type */
extern T1 T2097f36(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.has_anchored_type */
extern T1 T1895f37(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_anchored_type */
extern T1 T1712f62(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.has_anchored_type */
extern T1 T1243f60(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.has_anchored_type */
extern T1 T498f34(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.has_anchored_type */
extern T1 T345f68(GE_context* ac, T0* C);
/* ET_CLASS.has_anchored_type */
extern T1 T95f214(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.has_anchored_type */
extern T1 T93f68(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.has_formal_types */
extern T1 T2154f20(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.has_formal_types */
extern T1 T2098f20(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_formal_types */
extern T1 T2097f30(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.has_formal_types */
extern T1 T1895f38(GE_context* ac, T0* C, T0* a1);
extern T1 T1895f38ot1(T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_formal_types */
extern T1 T1712f51(GE_context* ac, T0* C, T0* a1);
extern T1 T1712f51ot1(T0* a1);
/* ET_FORMAL_PARAMETER.has_formal_types */
extern T1 T1243f45(GE_context* ac, T0* C, T0* a1);
extern T1 T1243f45ot1(T0* a1);
/* ET_LIKE_CURRENT.has_formal_types */
extern T1 T498f35(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.has_formal_types */
extern T1 T345f69(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.has_formal_types */
extern T1 T95f201(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.has_formal_types */
extern T1 T93f69(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters */
extern T0* T2154f59(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type_mark */
extern T0* T2154f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters */
extern T0* T2098f57(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T2098f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters */
extern T0* T2097f60(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T2097f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters */
extern T0* T1895f55(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1895f64(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1895f64ot1(T0* a1, T0** a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T1712f65(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T1712f68(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1712f68ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T1243f62(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T1243f67(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1243f67ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.resolved_formal_parameters */
extern T0* T498f54(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type_mark */
extern T0* T498f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.resolved_formal_parameters */
extern T0* T345f86(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T345f90(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.overridden_type_mark */
extern T0* T345f10(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_attached */
extern T1 T345f22(GE_context* ac, T0* C);
/* ET_CLASS.resolved_formal_parameters */
extern T0* T95f215(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type_mark */
extern T0* T95f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.overridden_type_mark */
extern T0* T95f82(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_attached */
extern T1 T95f95(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.resolved_formal_parameters */
extern T0* T93f76(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T93f86(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.overridden_type_mark */
extern T0* T93f12(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_attached */
extern T1 T93f16(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.same_syntactical_type */
extern T1 T2154f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type */
extern T1 T2098f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type */
extern T1 T2097f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type */
extern T1 T1895f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T1712f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T1243f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_type */
extern T1 T498f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_type */
extern T1 T345f76(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_type */
extern T1 T95f218(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_type */
extern T1 T93f75(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.named_type */
extern T0* T2154f32(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_type */
extern T0* T2098f31(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type */
extern T0* T2097f20(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_type */
extern T0* T1895f16(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type */
extern T0* T1712f52(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_type */
extern T0* T1243f44(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_type */
extern T0* T498f25(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_type */
extern T0* T345f51(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.named_type */
extern T0* T95f155(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_type */
extern T0* T93f49(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.conforms_to_type */
extern T1 T2154f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_type */
extern T1 T2098f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type */
extern T1 T2097f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type */
extern T1 T1895f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type */
extern T1 T1712f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_to_type */
extern T1 T1243f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_to_type */
extern T1 T498f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.depends_on_qualified_anchored_type */
extern T1 T2154f64(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.depends_on_qualified_anchored_type */
extern T1 T2098f62(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.depends_on_qualified_anchored_type */
extern T1 T2097f65(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.depends_on_qualified_anchored_type */
extern T1 T1895f60(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T1712f71(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T1243f70(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.depends_on_qualified_anchored_type */
extern T1 T498f63(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.depends_on_qualified_anchored_type */
extern T1 T345f96(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.depends_on_qualified_anchored_type */
extern T1 T95f235(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.depends_on_qualified_anchored_type */
extern T1 T93f100(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.has_identifier_anchored_type */
extern T1 T2154f66(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.has_identifier_anchored_type */
extern T1 T2098f64(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_identifier_anchored_type */
extern T1 T2097f67(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.has_identifier_anchored_type */
extern T1 T1895f62(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T1712f61(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T1243f59(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.has_identifier_anchored_type */
extern T1 T498f65(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.has_identifier_anchored_type */
extern T1 T345f99(GE_context* ac, T0* C);
/* ET_CLASS.has_identifier_anchored_type */
extern T1 T95f232(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.has_identifier_anchored_type */
extern T1 T93f103(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.base_class */
extern T0* T2154f55(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_class */
extern T0* T2098f5(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_class */
extern T0* T2097f53(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.base_class */
extern T0* T1895f30(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_class */
extern T0* T1712f38(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.base_class */
extern T0* T1243f36(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_class */
extern T0* T498f8(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_class_in_context */
extern T0* T345f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.base_class_in_context */
extern T0* T95f98(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_class_in_context */
extern T0* T93f89(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.position */
extern T0* T2154f47(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.position */
extern T0* T2098f4(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.position */
extern T0* T2097f50(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.position */
extern T0* T1895f39(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.position */
extern T0* T1712f60(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.position */
extern T0* T1243f53(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.position */
extern T0* T498f36(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.position */
extern T0* T345f71(GE_context* ac, T0* C);
/* ET_CLASS.position */
extern T0* T95f196(GE_context* ac, T0* C);
/* ET_INDEXING_LIST.position */
extern T0* T2065f7(GE_context* ac, T0* C);
/* ET_INDEXING.position */
extern T0* T2069f3(GE_context* ac, T0* C);
/* ET_INDEXING_TERM_LIST.position */
extern T0* T2068f5(GE_context* ac, T0* C);
/* ET_INDEXING_TERM_LIST.tokens */
extern T0* T2068f8(GE_context* ac, T0* C);
/* ET_INDEXING_TERM_LIST.first */
extern T0* T2068f7(GE_context* ac, T0* C);
/* ET_INDEXING_TERM_LIST.is_empty */
extern T1 T2068f6(GE_context* ac, T0* C);
/* ET_TAGGED_INDEXING.position */
extern T0* T2066f4(GE_context* ac, T0* C);
/* ET_INDEXING_LIST.first */
extern T0* T2065f10(GE_context* ac, T0* C);
/* ET_INDEXING_LIST.is_empty */
extern T1 T2065f9(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.position */
extern T0* T93f70(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.last_leaf */
extern T0* T2154f74(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.last_leaf */
extern T0* T2098f71(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.last_leaf */
extern T0* T2097f74(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.last_leaf */
extern T0* T1895f67(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.last_leaf */
extern T0* T498f69(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.last_leaf */
extern T0* T345f102(GE_context* ac, T0* C);
/* ET_CLASS.last_leaf */
extern T0* T95f237(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.last_leaf */
extern T0* T93f108(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix */
extern T1 T2084f10(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix */
extern T1 T2083f10(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix */
extern T1 T232f52(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix */
extern T1 T2085f9(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix */
extern T1 T1533f21(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix */
extern T1 T232f51(GE_context* ac, T0* C);
/* ET_INFIX_NAME.hash_code */
extern T6 T2085f6(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.hash_code */
extern T6 T2083f6(GE_context* ac, T0* C);
/* ET_INFIX_NAME.same_feature_name */
extern T1 T2085f8(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_feature_name */
extern T1 T2084f8(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_NAME.same_feature_name */
extern T1 T2083f8(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_feature_name */
extern T1 T1533f20(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.same_feature_name */
extern T1 T232f37(GE_context* ac, T0* C, T0* a1);
extern T1 T232f37ot1(T0* a1, T0** a2);
/* ET_INFIX_NAME.is_argument */
extern T1 T2085f65(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_argument */
extern T1 T2084f52(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_argument */
extern T1 T2083f51(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_argument */
extern T1 T1533f52(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_argument */
extern T1 T232f28(GE_context* ac, T0* C);
/* ET_INFIX_NAME.argument_name */
extern T0* T2085f66(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.argument_name */
extern T0* T2084f53(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.argument_name */
extern T0* T2083f52(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.argument_name */
extern T0* T1533f53(GE_context* ac, T0* C);
/* ET_IDENTIFIER.argument_name */
extern T0* T232f77(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_local */
extern T1 T2085f67(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_local */
extern T1 T2084f54(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_local */
extern T1 T2083f53(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_local */
extern T1 T1533f54(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_local */
extern T1 T232f30(GE_context* ac, T0* C);
/* ET_INFIX_NAME.local_name */
extern T0* T2085f68(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.local_name */
extern T0* T2084f55(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.local_name */
extern T0* T2083f54(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.local_name */
extern T0* T1533f55(GE_context* ac, T0* C);
/* ET_IDENTIFIER.local_name */
extern T0* T232f78(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_object_test_local */
extern T1 T2085f69(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_object_test_local */
extern T1 T2084f56(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_object_test_local */
extern T1 T2083f55(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_object_test_local */
extern T1 T1533f56(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_object_test_local */
extern T1 T232f7(GE_context* ac, T0* C);
/* ET_INFIX_NAME.object_test_local_name */
extern T0* T2085f70(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.object_test_local_name */
extern T0* T2084f57(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.object_test_local_name */
extern T0* T2083f56(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.object_test_local_name */
extern T0* T1533f57(GE_context* ac, T0* C);
/* ET_IDENTIFIER.object_test_local_name */
extern T0* T232f79(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_across_cursor */
extern T1 T2085f71(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_across_cursor */
extern T1 T2084f58(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_across_cursor */
extern T1 T2083f57(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_across_cursor */
extern T1 T1533f58(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_across_cursor */
extern T1 T232f31(GE_context* ac, T0* C);
/* ET_INFIX_NAME.across_cursor_name */
extern T0* T2085f72(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.across_cursor_name */
extern T0* T2084f59(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.across_cursor_name */
extern T0* T2083f58(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.across_cursor_name */
extern T0* T1533f59(GE_context* ac, T0* C);
/* ET_IDENTIFIER.across_cursor_name */
extern T0* T232f80(GE_context* ac, T0* C);
/* ET_INFIX_NAME.first_leaf */
extern T0* T2085f83(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.first_leaf */
extern T0* T2084f67(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.first_leaf */
extern T0* T2083f83(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.first_leaf */
extern T0* T1533f67(GE_context* ac, T0* C);
/* ET_IDENTIFIER.first_leaf */
extern T0* T232f103(GE_context* ac, T0* C);
/* ET_INFIX_NAME.position */
extern T0* T2085f40(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.position */
extern T0* T2084f23(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.position */
extern T0* T2083f40(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.position */
extern T0* T1533f23(GE_context* ac, T0* C);
/* ET_IDENTIFIER.position */
extern T0* T232f23(GE_context* ac, T0* C);
/* ET_INFIX_NAME.name */
extern T0* T2085f7(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.name */
extern T0* T2084f7(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.name */
extern T0* T2083f7(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.name */
extern T0* T1533f15(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_tuple_label */
extern T1 T2085f20(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_tuple_label */
extern T1 T2084f22(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_tuple_label */
extern T1 T2083f17(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_tuple_label */
extern T1 T1533f11(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_tuple_label */
extern T1 T232f44(GE_context* ac, T0* C);
/* ET_INFIX_NAME.last_leaf */
extern T0* T2085f82(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.last_leaf */
extern T0* T2084f66(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.last_leaf */
extern T0* T2083f82(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.last_leaf */
extern T0* T1533f66(GE_context* ac, T0* C);
/* ET_IDENTIFIER.last_leaf */
extern T0* T232f97(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.new_synonym */
extern T0* T2081f57(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_synonym */
extern void T2081f111(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.new_synonym */
extern T0* T2080f58(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_synonym */
extern void T2080f117(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.new_synonym */
extern T0* T2079f56(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_synonym */
extern void T2079f114(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.new_synonym */
extern T0* T496f25(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_synonym */
extern void T496f85(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.new_synonym */
extern T0* T494f28(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_synonym */
extern void T494f92(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.new_synonym */
extern T0* T492f27(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_synonym */
extern void T492f89(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.new_synonym */
extern T0* T454f31(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_synonym */
extern void T454f95(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.new_synonym */
extern T0* T344f54(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_synonym */
extern void T344f108(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.is_constant_attribute */
extern T1 T2081f60(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_constant_attribute */
extern T1 T2080f61(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_constant_attribute */
extern T1 T2079f59(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_constant_attribute */
extern T1 T496f58(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_constant_attribute */
extern T1 T494f65(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_constant_attribute */
extern T1 T454f49(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_constant_attribute */
extern T1 T344f57(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_unique_attribute */
extern T1 T2081f61(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_unique_attribute */
extern T1 T2080f62(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_unique_attribute */
extern T1 T2079f60(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_unique_attribute */
extern T1 T496f59(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_unique_attribute */
extern T1 T492f64(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_unique_attribute */
extern T1 T454f63(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_unique_attribute */
extern T1 T344f58(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_seed */
extern T1 T2081f30(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.has_seed */
extern T1 T2080f66(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.has_seed */
extern T1 T2079f68(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.has_seed */
extern T1 T496f43(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.has_seed */
extern T1 T494f47(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.has_seed */
extern T1 T492f45(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.has_seed */
extern T1 T454f48(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.has_seed */
extern T1 T344f70(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.arguments */
extern T0* T496f28(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments */
extern T0* T494f32(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments */
extern T0* T492f30(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.arguments */
extern T0* T454f34(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_attribute */
extern T1 T2081f62(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_attribute */
extern T1 T2080f63(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_attribute */
extern T1 T2079f61(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_attribute */
extern T1 T494f44(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_attribute */
extern T1 T492f42(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_attribute */
extern T1 T344f59(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_exported_to */
extern T1 T2081f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_FUNCTION.is_exported_to */
extern T1 T2080f76(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_FUNCTION.is_exported_to */
extern T1 T2079f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTRIBUTE.is_exported_to */
extern T1 T496f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_UNIQUE_ATTRIBUTE.is_exported_to */
extern T1 T494f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTANT_ATTRIBUTE.is_exported_to */
extern T1 T492f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTENDED_ATTRIBUTE.is_exported_to */
extern T1 T454f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_exported_to */
extern T1 T344f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_FUNCTION.type */
extern T0* T2081f31(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.type */
extern T0* T2080f68(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.type */
extern T0* T2079f69(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.type */
extern T0* T496f26(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.type */
extern T0* T494f30(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.type */
extern T0* T492f28(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.type */
extern T0* T454f32(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.type */
extern T0* T344f71(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.name */
extern T0* T2152f65(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.name */
extern T0* T2082f39(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.name */
extern T0* T596f33(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.name */
extern T0* T592f31(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.new_synonym */
extern T0* T2152f51(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_synonym */
extern void T2152f118(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.new_synonym */
extern T0* T2082f51(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_synonym */
extern void T2082f115(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.new_synonym */
extern T0* T596f56(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_synonym */
extern void T596f94(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.new_synonym */
extern T0* T592f40(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_synonym */
extern void T592f97(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.has_seed */
extern T1 T2152f62(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.has_seed */
extern T1 T2082f64(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.has_seed */
extern T1 T596f32(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.has_seed */
extern T1 T592f32(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.arguments_count */
extern T6 T2152f60(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.arguments_count */
extern T6 T2082f61(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.arguments_count */
extern T6 T596f34(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.arguments_count */
extern T6 T592f33(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_creation_exported_to */
extern T1 T2152f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.is_creation_exported_to */
extern T1 T95f207(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR_LIST.is_exported_to */
extern T1 T1537f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.is_exported_to */
extern T1 T1625f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.is_creation_exported_to */
extern T1 T2082f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEFERRED_PROCEDURE.is_creation_exported_to */
extern T1 T596f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.is_creation_exported_to */
extern T1 T592f67(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_NAME.lower_name */
extern T0* T2085f5(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.lower_name */
extern T0* T2084f48(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.lower_name */
extern T0* T2083f5(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.lower_name */
extern T0* T1533f17(GE_context* ac, T0* C);
/* ET_IDENTIFIER.lower_name */
extern T0* T232f18(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_tuple */
extern T1 T587f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_tuple */
extern T1 T586f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_tuple */
extern T1 T434f44(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_tuple */
extern T1 T320f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.static_type */
extern T0* T587f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.static_type */
extern T0* T586f37(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.static_type */
extern T0* T434f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.static_type */
extern T0* T412f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.static_type */
extern T0* T320f35(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_generic */
extern T1 T587f35(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_generic */
extern T1 T586f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_generic */
extern T1 T434f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_generic */
extern T1 T412f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_generic */
extern T1 T320f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_reference_attributes */
extern T1 T587f42(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_reference_attributes */
extern T1 T586f42(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_reference_attributes */
extern T1 T434f41(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_reference_attributes */
extern T1 T412f40(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.has_nested_reference_attributes */
extern T1 T320f40(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_builtin_attribute */
extern T1 T587f25(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_builtin_attribute */
extern T1 T586f25(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_SPECIAL_TYPE.is_builtin_attribute */
extern T1 T434f22(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_TUPLE_TYPE.is_builtin_attribute */
extern T1 T412f49(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_TYPE.is_builtin_attribute */
extern T1 T320f37(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_FUNCTION_TYPE.is_special */
extern T1 T587f45(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_special */
extern T1 T586f45(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_special */
extern T1 T412f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_special */
extern T1 T320f42(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_procedure */
extern T0* T587f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.force_last */
extern void T414f12(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.resize */
extern void T414f15(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.new_capacity */
extern T6 T414f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.capacity */
extern T6 T414f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.put_last */
extern void T414f11(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T587f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.make_with_capacity */
extern T0* T414c10(GE_context* ac, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_procedure */
extern T0* T586f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T586f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_agent_call */
extern void T319f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_agent_call */
extern void T91f119(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.make */
extern T0* T1998c15(GE_context* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.tokens */
extern T0* T586f24(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T586f44p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_procedure */
extern T0* T434f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T434f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.tokens */
extern T0* T434f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T434f42p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_procedure */
extern T0* T412f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T412f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_put */
extern void T319f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_put */
extern void T91f116(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.tokens */
extern T0* T412f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T412f42p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T320f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_procedure */
extern T0* T320f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_query */
extern T0* T587f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_attribute */
extern void T587f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T587f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.set_result_type_set */
extern void T332f36(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.tokens */
extern T0* T587f24(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T587f44p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_query */
extern T0* T586f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_attribute */
extern void T586f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_query */
extern T0* T586f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_query */
extern T0* T434f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_attribute */
extern void T434f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T434f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T434f48p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_query */
extern T0* T412f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_attribute */
extern void T412f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T412f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_item */
extern void T319f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_item */
extern void T91f117(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_at_feature_name */
extern T0* T94f97(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T412f48p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T320f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_attribute */
extern void T320f55(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_query */
extern T0* T320f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_procedure */
extern T0* T587f34(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_procedure */
extern T0* T586f35(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_procedure */
extern T0* T434f26(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_procedure */
extern T0* T412f26(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T320f30(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.is_agent_type */
extern T1 T434f47(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_agent_type */
extern T1 T412f47(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T320f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_expanded */
extern T1 T587f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_expanded */
extern T1 T586f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_expanded */
extern T1 T434f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_expanded */
extern T1 T412f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_expanded */
extern T1 T320f26(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_basic */
extern T1 T587f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_basic */
extern T1 T586f34(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_basic */
extern T1 T434f25(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_basic */
extern T1 T412f25(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_basic */
extern T1 T320f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_query */
extern T0* T587f26(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_query */
extern T0* T586f26(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_query */
extern T0* T434f32(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_query */
extern T0* T412f32(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T320f29(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_type */
extern T1 T587f38(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_type */
extern T1 T586f39(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_type */
extern T1 T434f30(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_type */
extern T1 T412f30(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T320f31(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.tokens */
extern T0* T320f28(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_null_position */
extern T1 T2615f32(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_null_position */
extern T1 T2064f13(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_null_position */
extern T1 T2063f13(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_null_position */
extern T1 T2062f15(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.is_null_position */
extern T1 T2061f12(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_null_position */
extern T1 T2060f12(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.is_null_position */
extern T1 T2059f12(GE_context* ac, T0* C);
/* ET_VOID.is_null_position */
extern T1 T2058f9(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_null_position */
extern T1 T2057f6(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_null_position */
extern T1 T2056f58(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_null_position */
extern T1 T2054f7(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_null_position */
extern T1 T2053f14(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_null_position */
extern T1 T2052f14(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_null_position */
extern T1 T2051f25(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_null_position */
extern T1 T2050f25(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_null_position */
extern T1 T2049f25(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_null_position */
extern T1 T2048f25(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_null_position */
extern T1 T2047f15(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_null_position */
extern T1 T2046f15(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_null_position */
extern T1 T2045f13(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_null_position */
extern T1 T2044f42(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_null_position */
extern T1 T2032f12(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_null_position */
extern T1 T1532f20(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_null_position */
extern T1 T846f13(GE_context* ac, T0* C);
/* ET_KEYWORD.is_null_position */
extern T1 T539f25(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_null_position */
extern T1 T495f20(GE_context* ac, T0* C);
/* ET_SYMBOL.is_null_position */
extern T1 T474f13(GE_context* ac, T0* C);
/* ET_RESULT.is_null_position */
extern T1 T422f15(GE_context* ac, T0* C);
/* ET_CURRENT.is_null_position */
extern T1 T390f19(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.is_null */
extern T1 T241f8(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_null_position */
extern T1 T232f38(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.to_text */
extern T0* T2064f31(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.append_to_string */
extern void T2064f51(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.integer_ */
extern T0* T2064f40(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.to_text */
extern T0* T2063f31(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.append_to_string */
extern void T2063f51(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.integer_ */
extern T0* T2063f40(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.to_text */
extern T0* T2060f31(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.append_to_string */
extern void T2060f47(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.integer_ */
extern T0* T2060f37(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.to_text */
extern T0* T2056f66(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.append_to_string */
extern void T2056f75(GE_context* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.integer_ */
extern T0* T2056f71(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.to_text */
extern T0* T2054f56(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.append_to_string */
extern void T2054f102(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.integer_ */
extern T0* T2054f82(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.to_text */
extern T0* T2053f33(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.append_to_string */
extern void T2053f51(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.integer_ */
extern T0* T2053f39(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.to_text */
extern T0* T2052f33(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.append_to_string */
extern void T2052f51(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.integer_ */
extern T0* T2052f39(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_text */
extern T0* T2051f50(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.append_to_string */
extern void T2051f74(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.integer_ */
extern T0* T2051f61(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_text */
extern T0* T2050f50(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.append_to_string */
extern void T2050f74(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.integer_ */
extern T0* T2050f61(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_text */
extern T0* T2049f50(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.append_to_string */
extern void T2049f74(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_ */
extern T0* T2049f61(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_text */
extern T0* T2048f50(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.append_to_string */
extern void T2048f74(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_ */
extern T0* T2048f61(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.to_text */
extern T0* T2047f35(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.append_to_string */
extern void T2047f51(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.integer_ */
extern T0* T2047f41(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.to_text */
extern T0* T2046f39(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.append_to_string */
extern void T2046f55(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.integer_ */
extern T0* T2046f45(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.to_text */
extern T0* T2045f32(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.append_to_string */
extern void T2045f52(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.integer_ */
extern T0* T2045f41(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.to_text */
extern T0* T2032f31(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.append_to_string */
extern void T2032f47(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.integer_ */
extern T0* T2032f37(GE_context* ac, T0* C);
/* ET_FILE_POSITION.to_text */
extern T0* T1716f10(GE_context* ac, T0* C);
/* ET_FILE_POSITION.append_to_string */
extern void T1716f15(GE_context* ac, T0* C, T0* a1);
/* ET_FILE_POSITION.append_to_string_with_filename */
extern void T1716f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_context_to_string */
extern void T1716f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_line_to_string */
extern void T1716f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.skip_lines */
extern void T1716f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_FILE_POSITION.integer_ */
extern T0* T1716f11(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.to_text */
extern T0* T1532f34(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.append_to_string */
extern void T1532f50(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.integer_ */
extern T0* T1532f40(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.to_text */
extern T0* T846f96(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.append_to_string */
extern void T846f107(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.integer_ */
extern T0* T846f99(GE_context* ac, T0* C);
/* ET_KEYWORD.to_text */
extern T0* T539f33(GE_context* ac, T0* C);
/* ET_KEYWORD.append_to_string */
extern void T539f95(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.integer_ */
extern T0* T539f34(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_text */
extern T0* T495f51(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.append_to_string */
extern void T495f75(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.integer_ */
extern T0* T495f60(GE_context* ac, T0* C);
/* ET_SYMBOL.to_text */
extern T0* T474f69(GE_context* ac, T0* C);
/* ET_SYMBOL.append_to_string */
extern void T474f94(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.integer_ */
extern T0* T474f70(GE_context* ac, T0* C);
/* ET_CURRENT.to_text */
extern T0* T390f24(GE_context* ac, T0* C);
/* ET_CURRENT.append_to_string */
extern void T390f39(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.integer_ */
extern T0* T390f27(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.to_text */
extern T0* T241f9(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.append_to_string */
extern void T241f14(GE_context* ac, T0* C, T0* a1);
/* ET_COMPRESSED_POSITION.integer_ */
extern T0* T241f10(GE_context* ac, T0* C);
/* ET_IDENTIFIER.to_text */
extern T0* T232f91(GE_context* ac, T0* C);
/* ET_IDENTIFIER.append_to_string */
extern void T232f128(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.integer_ */
extern T0* T232f95(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.line */
extern T6 T2615f30(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.line */
extern T6 T2064f11(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.line */
extern T6 T2063f11(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.line */
extern T6 T2062f13(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.line */
extern T6 T2061f10(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.line */
extern T6 T2060f10(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.line */
extern T6 T2059f10(GE_context* ac, T0* C);
/* ET_VOID.line */
extern T6 T2058f7(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.line */
extern T6 T2057f11(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.line */
extern T6 T2056f59(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.line */
extern T6 T2054f5(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.line */
extern T6 T2053f12(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.line */
extern T6 T2052f12(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.line */
extern T6 T2051f23(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.line */
extern T6 T2050f23(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.line */
extern T6 T2049f23(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.line */
extern T6 T2048f23(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.line */
extern T6 T2047f13(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.line */
extern T6 T2046f13(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.line */
extern T6 T2045f11(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.line */
extern T6 T2044f40(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.line */
extern T6 T2032f10(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.line */
extern T6 T1532f18(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.line */
extern T6 T846f59(GE_context* ac, T0* C);
/* ET_KEYWORD.line */
extern T6 T539f26(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.line */
extern T6 T495f18(GE_context* ac, T0* C);
/* ET_SYMBOL.line */
extern T6 T474f59(GE_context* ac, T0* C);
/* ET_RESULT.line */
extern T6 T422f13(GE_context* ac, T0* C);
/* ET_CURRENT.line */
extern T6 T390f17(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.line */
extern T6 T241f6(GE_context* ac, T0* C);
/* ET_IDENTIFIER.line */
extern T6 T232f25(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.column */
extern T6 T2615f31(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.column */
extern T6 T2064f12(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.column */
extern T6 T2063f12(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.column */
extern T6 T2062f14(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.column */
extern T6 T2061f11(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.column */
extern T6 T2060f11(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.column */
extern T6 T2059f11(GE_context* ac, T0* C);
/* ET_VOID.column */
extern T6 T2058f8(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.column */
extern T6 T2057f12(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.column */
extern T6 T2056f60(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.column */
extern T6 T2054f6(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.column */
extern T6 T2053f13(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.column */
extern T6 T2052f13(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.column */
extern T6 T2051f24(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.column */
extern T6 T2050f24(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.column */
extern T6 T2049f24(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.column */
extern T6 T2048f24(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.column */
extern T6 T2047f14(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.column */
extern T6 T2046f14(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.column */
extern T6 T2045f12(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.column */
extern T6 T2044f41(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.column */
extern T6 T2032f11(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.column */
extern T6 T1532f19(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.column */
extern T6 T846f67(GE_context* ac, T0* C);
/* ET_KEYWORD.column */
extern T6 T539f27(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.column */
extern T6 T495f19(GE_context* ac, T0* C);
/* ET_SYMBOL.column */
extern T6 T474f67(GE_context* ac, T0* C);
/* ET_RESULT.column */
extern T6 T422f14(GE_context* ac, T0* C);
/* ET_CURRENT.column */
extern T6 T390f18(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.column */
extern T6 T241f7(GE_context* ac, T0* C);
/* ET_IDENTIFIER.column */
extern T6 T232f26(GE_context* ac, T0* C);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.test */
extern T1 T212f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.string_ */
extern T0* T212f2(GE_context* ac, T0* C);
/* attached KL_EQUALITY_TESTER [[attached] STRING_8].test */
extern T1 T206f1(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T206f1oe1(GE_context* ac, T0* a1, T0* a2);
/* UC_UTF8_STRING.is_equal */
extern T1 T1557f12(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_EQUALITY_TESTER.test */
extern T1 T179f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.test */
extern T1 T58f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.string_ */
extern T0* T58f2(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.allows_parameter */
extern T1 T168f10(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.allows_parameter */
extern T1 T49f18(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.allows_parameter */
extern T1 T48f15(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.allows_parameter */
extern T1 T47f17(GE_context* ac, T0* C);
/* AP_FLAG.allows_parameter */
extern T1 T46f13(GE_context* ac, T0* C);
/* AP_STRING_OPTION.allows_parameter */
extern T1 T44f15(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.needs_parameter */
extern T1 T168f13(GE_context* ac, T0* C);
/* AP_FLAG.needs_parameter */
extern T1 T46f12(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.default_message */
extern T0* T2777f5(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.message */
extern T0* T2777f3(GE_context* ac, T0* C, T0* a1);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.arguments */
extern T0* T2777f6(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.string_ */
extern T0* T2777f4(GE_context* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.default_message */
extern T0* T2745f3(GE_context* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.message */
extern T0* T2745f5(GE_context* ac, T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.arguments */
extern T0* T2745f7(GE_context* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.string_ */
extern T0* T2745f6(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.default_message */
extern T0* T2744f3(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.message */
extern T0* T2744f5(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.arguments */
extern T0* T2744f7(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.string_ */
extern T0* T2744f6(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.default_message */
extern T0* T2743f3(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.message */
extern T0* T2743f5(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_AND_REJECT_ERROR.arguments */
extern T0* T2743f7(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.string_ */
extern T0* T2743f6(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.default_message */
extern T0* T2742f3(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.message */
extern T0* T2742f5(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_AND_META_ERROR.arguments */
extern T0* T2742f7(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.string_ */
extern T0* T2742f6(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.default_message */
extern T0* T2741f3(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.message */
extern T0* T2741f5(GE_context* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.arguments */
extern T0* T2741f7(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.string_ */
extern T0* T2741f6(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.default_message */
extern T0* T2740f3(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.message */
extern T0* T2740f5(GE_context* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_CLASS_ERROR.arguments */
extern T0* T2740f7(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.string_ */
extern T0* T2740f6(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.default_message */
extern T0* T2739f3(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.message */
extern T0* T2739f5(GE_context* ac, T0* C, T0* a1);
/* LX_MISSING_QUOTE_ERROR.arguments */
extern T0* T2739f7(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.string_ */
extern T0* T2739f6(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.default_message */
extern T0* T2738f3(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.message */
extern T0* T2738f5(GE_context* ac, T0* C, T0* a1);
/* LX_UNRECOGNIZED_RULE_ERROR.arguments */
extern T0* T2738f7(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.string_ */
extern T0* T2738f6(GE_context* ac, T0* C);
/* ET_UNIVERSE_ERROR.default_message */
extern T0* T2670f12(GE_context* ac, T0* C);
/* ET_UNIVERSE_ERROR.message */
extern T0* T2670f7(GE_context* ac, T0* C, T0* a1);
/* ET_UNIVERSE_ERROR.arguments */
extern T0* T2670f6(GE_context* ac, T0* C);
/* ET_UNIVERSE_ERROR.string_ */
extern T0* T2670f9(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.default_message */
extern T0* T2374f12(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.message */
extern T0* T2374f7(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.arguments */
extern T0* T2374f6(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.string_ */
extern T0* T2374f9(GE_context* ac, T0* C);
/* ET_SYNTAX_ERROR.default_message */
extern T0* T2373f11(GE_context* ac, T0* C);
/* ET_SYNTAX_ERROR.message */
extern T0* T2373f14(GE_context* ac, T0* C, T0* a1);
/* ET_SYNTAX_ERROR.arguments */
extern T0* T2373f12(GE_context* ac, T0* C);
/* ET_SYNTAX_ERROR.string_ */
extern T0* T2373f16(GE_context* ac, T0* C);
/* ET_CLUSTER_ERROR.default_message */
extern T0* T2372f12(GE_context* ac, T0* C);
/* ET_CLUSTER_ERROR.message */
extern T0* T2372f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_ERROR.arguments */
extern T0* T2372f6(GE_context* ac, T0* C);
/* ET_CLUSTER_ERROR.string_ */
extern T0* T2372f9(GE_context* ac, T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.default_message */
extern T0* T1986f5(GE_context* ac, T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.message */
extern T0* T1986f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_INVALID_EXPRESSION_ERROR.arguments */
extern T0* T1986f6(GE_context* ac, T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.string_ */
extern T0* T1986f4(GE_context* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.default_message */
extern T0* T1765f5(GE_context* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.message */
extern T0* T1765f3(GE_context* ac, T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.arguments */
extern T0* T1765f6(GE_context* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.string_ */
extern T0* T1765f4(GE_context* ac, T0* C);
/* UT_SYNTAX_ERROR.default_message */
extern T0* T1764f5(GE_context* ac, T0* C);
/* UT_SYNTAX_ERROR.message */
extern T0* T1764f3(GE_context* ac, T0* C, T0* a1);
/* UT_SYNTAX_ERROR.arguments */
extern T0* T1764f6(GE_context* ac, T0* C);
/* UT_SYNTAX_ERROR.string_ */
extern T0* T1764f4(GE_context* ac, T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T1434f5(GE_context* ac, T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T1434f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T1434f6(GE_context* ac, T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T1434f4(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.default_message */
extern T0* T1433f5(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.message */
extern T0* T1433f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.arguments */
extern T0* T1433f6(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.string_ */
extern T0* T1433f4(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.default_message */
extern T0* T1432f5(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.message */
extern T0* T1432f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.arguments */
extern T0* T1432f6(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.string_ */
extern T0* T1432f4(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.default_message */
extern T0* T1431f5(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.message */
extern T0* T1431f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MISSING_ELEMENT_ERROR.arguments */
extern T0* T1431f6(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.string_ */
extern T0* T1431f4(GE_context* ac, T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.default_message */
extern T0* T1430f5(GE_context* ac, T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.message */
extern T0* T1430f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.arguments */
extern T0* T1430f6(GE_context* ac, T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.string_ */
extern T0* T1430f4(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.default_message */
extern T0* T1429f5(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.message */
extern T0* T1429f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.arguments */
extern T0* T1429f6(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.string_ */
extern T0* T1429f4(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.default_message */
extern T0* T1428f5(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.message */
extern T0* T1428f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.arguments */
extern T0* T1428f6(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.string_ */
extern T0* T1428f4(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.default_message */
extern T0* T1427f5(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.message */
extern T0* T1427f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.arguments */
extern T0* T1427f6(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.string_ */
extern T0* T1427f4(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.default_message */
extern T0* T1418f46(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.message */
extern T0* T1418f16(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.arguments */
extern T0* T1418f13(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.string_ */
extern T0* T1418f45(GE_context* ac, T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.default_message */
extern T0* T576f5(GE_context* ac, T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.message */
extern T0* T576f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.arguments */
extern T0* T576f6(GE_context* ac, T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.string_ */
extern T0* T576f4(GE_context* ac, T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T575f5(GE_context* ac, T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T575f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T575f6(GE_context* ac, T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T575f4(GE_context* ac, T0* C);
/* ET_INTERNAL_ERROR.default_message */
extern T0* T549f5(GE_context* ac, T0* C);
/* ET_INTERNAL_ERROR.message */
extern T0* T549f7(GE_context* ac, T0* C, T0* a1);
/* ET_INTERNAL_ERROR.arguments */
extern T0* T549f6(GE_context* ac, T0* C);
/* ET_INTERNAL_ERROR.string_ */
extern T0* T549f9(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.default_message */
extern T0* T548f5(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.message */
extern T0* T548f7(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.arguments */
extern T0* T548f6(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.string_ */
extern T0* T548f9(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.default_message */
extern T0* T413f5(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.message */
extern T0* T413f3(GE_context* ac, T0* C, T0* a1);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.arguments */
extern T0* T413f6(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.string_ */
extern T0* T413f4(GE_context* ac, T0* C);
/* AP_ERROR.default_message */
extern T0* T108f17(GE_context* ac, T0* C);
/* AP_ERROR.message */
extern T0* T108f18(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.arguments */
extern T0* T108f20(GE_context* ac, T0* C);
/* AP_ERROR.string_ */
extern T0* T108f19(GE_context* ac, T0* C);
/* UT_MESSAGE.default_message */
extern T0* T103f3(GE_context* ac, T0* C);
/* UT_MESSAGE.message */
extern T0* T103f5(GE_context* ac, T0* C, T0* a1);
/* UT_MESSAGE.arguments */
extern T0* T103f7(GE_context* ac, T0* C);
/* UT_MESSAGE.string_ */
extern T0* T103f6(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.default_message */
extern T0* T102f3(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.message */
extern T0* T102f5(GE_context* ac, T0* C, T0* a1);
/* UT_VERSION_NUMBER.arguments */
extern T0* T102f7(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.string_ */
extern T0* T102f6(GE_context* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.default_message */
extern T0* T100f3(GE_context* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.message */
extern T0* T100f5(GE_context* ac, T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.arguments */
extern T0* T100f7(GE_context* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.string_ */
extern T0* T100f6(GE_context* ac, T0* C);
/* UC_UTF8_STRING.character_32_item */
extern T3 T1557f30(GE_context* ac, T0* C, T6 a1);
/* STRING_32.item */
extern T3 T18f10(GE_context* ac, T0* C, T6 a1);
/* STRING_8.character_32_item */
extern T3 T17f33(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.substring */
extern T0* T1557f16(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.make_from_substring */
extern T0* T1557c75(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.make_from_substring_general */
extern void T1557f94(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_32.substring */
extern T0* T18f11(GE_context* ac, T0* C, T6 a1, T6 a2);
/* STRING_32.new_string */
extern T0* T18f13(GE_context* ac, T0* C, T6 a1);
/* STRING_8.substring */
extern T0* T17f6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.code */
extern T10 T1557f15(GE_context* ac, T0* C, T6 a1);
/* STRING_32.code */
extern T10 T18f9(GE_context* ac, T0* C, T6 a1);
/* STRING_8.code */
extern T10 T17f11(GE_context* ac, T0* C, T6 a1);
/* ET_TUPLE_TYPE.same_named_type */
extern T1 T345f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_named_type */
extern T1 T95f166(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_named_type */
extern T1 T93f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_as_base_class */
extern T1 T345f14(GE_context* ac, T0* C);
/* ET_CLASS.same_as_base_class */
extern T1 T95f88(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.same_as_base_class */
extern T1 T93f14(GE_context* ac, T0* C);
/* ET_CLASS.is_expanded */
extern T1 T95f124(GE_context* ac, T0* C);
/* ET_CLASS.has_expanded_mark */
extern T1 T95f68(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_expanded */
extern T1 T93f11(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.same_named_type_with_type_marks */
extern T1 T345f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_type_with_type_marks */
extern T1 T95f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_type_with_type_marks */
extern T1 T93f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.named_type_with_type_mark */
extern T0* T345f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.named_type_with_type_mark */
extern T0* T95f134(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.named_type_with_type_mark */
extern T0* T93f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.same_named_class_type_with_type_marks */
extern T1 T345f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_class_type_with_type_marks */
extern T1 T95f153(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_class_type_with_type_marks */
extern T1 T93f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T345f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_tuple_type_with_type_marks */
extern T1 T95f154(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T93f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_to_type_with_type_marks */
extern T1 T345f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforms_to_type_with_type_marks */
extern T1 T95f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_to_type_with_type_marks */
extern T1 T93f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.base_type_actual_count */
extern T6 T345f41(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.base_type_actual_count */
extern T6 T95f151(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_type_actual_count */
extern T6 T93f42(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T345f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforms_from_class_type_with_type_marks */
extern T1 T95f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforming_ancestor */
extern T0* T95f85(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T93f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T345f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACTUAL_PARAMETER_SUBLIST.tuple_conforms_to_types */
extern T1 T2581f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.tuple_conforms_to_types */
extern T1 T333f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_from_tuple_type_with_type_marks */
extern T1 T95f167(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T93f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T345f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T95f189(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T93f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T345f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_formal_parameter_type_with_type_marks */
extern T1 T95f190(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T93f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_type_expanded_with_type_mark */
extern T1 T345f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_expanded_with_type_mark */
extern T1 T95f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_expanded_with_type_mark */
extern T1 T93f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.unaliased_to_text */
extern T0* T345f15(GE_context* ac, T0* C);
/* ET_CLASS.unaliased_to_text */
extern T0* T95f111(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.unaliased_to_text */
extern T0* T93f23(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.to_text */
extern T0* T345f39(GE_context* ac, T0* C);
/* ET_CLASS.to_text */
extern T0* T95f127(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.to_text */
extern T0* T93f40(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.shallow_base_type_with_type_mark */
extern T0* T345f89(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_base_type_with_type_mark */
extern T0* T95f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_base_type_with_type_mark */
extern T0* T93f88(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.index_of_label */
extern T6 T345f97(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.index_of_label */
extern T6 T95f229(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.index_of_label */
extern T6 T93f101(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.actual_parameter_count */
extern T6 T345f49(GE_context* ac, T0* C);
/* ET_CLASS.formal_parameter_count */
extern T6 T95f157(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.actual_parameter_count */
extern T6 T93f47(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.same_base_class_type_with_type_marks */
extern T1 T345f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_class_type_with_type_marks */
extern T1 T95f149(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_class_type_with_type_marks */
extern T1 T93f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T345f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_tuple_type_with_type_marks */
extern T1 T95f170(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T93f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_type_detachable_with_type_mark */
extern T1 T345f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_detachable_with_type_mark */
extern T1 T95f158(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_detachable_with_type_mark */
extern T1 T93f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type_with_type_mark */
extern T0* T345f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_with_type_mark */
extern T0* T95f107(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_with_type_mark */
extern T0* T93f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_reference_with_type_mark */
extern T1 T345f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_reference_with_type_mark */
extern T1 T95f192(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_reference_with_type_mark */
extern T1 T93f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_attached_with_type_mark */
extern T1 T345f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_attached_with_type_mark */
extern T1 T95f79(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_attached_with_type_mark */
extern T1 T93f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type_actual */
extern T0* T345f70(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T345f70ot1(T0* a1, T0** a2);
/* ET_CLASS.base_type_actual */
extern T0* T95f193(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_CLASS_TYPE.base_type_actual */
extern T0* T93f66(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T93f66ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.base_type_index_of_label */
extern T6 T345f98(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_index_of_label */
extern T6 T95f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_index_of_label */
extern T6 T93f102(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.type_with_type_mark */
extern T0* T345f37(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.type_with_type_mark */
extern T0* T95f78(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.type_with_type_mark */
extern T0* T93f32(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_class */
extern T0* T345f13(GE_context* ac, T0* C);
/* ET_CLASS.base_class */
extern T0* T95f71(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.base_class */
extern T0* T93f13(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.same_base_type_with_type_marks */
extern T1 T345f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_type_with_type_marks */
extern T1 T95f128(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_type_with_type_marks */
extern T1 T93f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.shallow_named_type_with_type_mark */
extern T0* T345f80(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_named_type_with_type_mark */
extern T0* T95f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_named_type_with_type_mark */
extern T0* T93f81(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.conforms_to_type */
extern T1 T345f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_to_type */
extern T1 T95f133(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_to_type */
extern T1 T93f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* AP_DISPLAY_HELP_FLAG.example */
extern T0* T168f11(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.example */
extern T0* T49f15(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.example */
extern T0* T48f17(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.example */
extern T0* T47f13(GE_context* ac, T0* C);
/* AP_FLAG.example */
extern T0* T46f11(GE_context* ac, T0* C);
/* AP_STRING_OPTION.example */
extern T0* T44f17(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.was_found */
extern T1 T168f12(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.was_found */
extern T1 T49f13(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.was_found */
extern T1 T48f16(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.was_found */
extern T1 T47f18(GE_context* ac, T0* C);
/* AP_FLAG.was_found */
extern T1 T46f9(GE_context* ac, T0* C);
/* AP_STRING_OPTION.was_found */
extern T1 T44f12(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.occurrences */
extern T6 T49f16(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.occurrences */
extern T6 T48f14(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.occurrences */
extern T6 T47f16(GE_context* ac, T0* C);
/* AP_STRING_OPTION.occurrences */
extern T6 T44f16(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.name */
extern T0* T168f9(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.name */
extern T0* T49f17(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.name */
extern T0* T48f13(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.name */
extern T0* T47f15(GE_context* ac, T0* C);
/* AP_FLAG.name */
extern T0* T46f10(GE_context* ac, T0* C);
/* AP_STRING_OPTION.name */
extern T0* T44f13(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.names */
extern T0* T168f18(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T49f21(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.has_long_form */
extern T1 T49f22(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T49f21p1(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T48f24(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.has_long_form */
extern T1 T48f25(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T48f24p1(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T47f23(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.has_long_form */
extern T1 T47f24(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T47f23p1(GE_context* ac, T0* C);
/* AP_FLAG.names */
extern T0* T46f16(GE_context* ac, T0* C);
/* AP_STRING_OPTION.names */
extern T0* T44f21(GE_context* ac, T0* C);
/* AP_STRING_OPTION.has_long_form */
extern T1 T44f22(GE_context* ac, T0* C);
/* AP_STRING_OPTION.names */
extern T0* T44f21p1(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.class_count_recursive */
extern T6 T283f126(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.class_count_recursive */
extern T0* T283f126ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.class_count_recursive */
extern T0* T283f126ac2(GE_context* ac, T0* a1, T0* a2);
/* [attached] KL_AGENT_ROUTINES [[attached] ET_CLASS].call */
extern void T643f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UT_COUNTER.increment */
extern void T642f3(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.class_actions */
extern T0* T283f139(GE_context* ac, T0* C);
/* [attached] KL_AGENT_ROUTINES [[attached] ET_CLASS].default_create */
extern T0* T643c1(GE_context* ac);
/* UT_COUNTER.make */
extern T0* T642c2(GE_context* ac, T6 a1);
/* ET_XACE_SYSTEM.class_count_recursive */
extern T6 T197f143(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.class_count_recursive */
extern T0* T197f143ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.class_count_recursive */
extern T0* T197f143ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.class_actions */
extern T0* T197f146(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.class_count_recursive */
extern T6 T69f146(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.class_count_recursive */
extern T0* T69f146ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.class_count_recursive */
extern T0* T69f146ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.class_actions */
extern T0* T69f136(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.last_character */
extern T2 T1558f6(GE_context* ac, T0* C);
/* [attached] DS_LINKED_QUEUE [[attached] CHARACTER_8].item */
extern T2 T2249f4(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.end_of_input */
extern T1 T1558f21(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.end_of_input */
extern T1 T33f33(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.is_closable */
extern T1 T1577f7(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.is_closable */
extern T1 T1558f7(GE_context* ac, T0* C);
/* KL_STDIN_FILE.is_closable */
extern T1 T851f6(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_closable */
extern T1 T33f38(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.read_to_string */
extern T6 T1577f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T1558f28(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T1558f28p1(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.read_to_string */
extern T6 T851f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* CONSOLE.read_stream */
extern void T1748f31(GE_context* ac, T0* C, T6 a1);
/* CONSOLE.read_stream_thread_aware */
extern void T1748f33(GE_context* ac, T0* C, T6 a1);
/* C_STRING.read_string_into */
extern void T31f15(GE_context* ac, T0* C, T0* a1);
/* CONSOLE.console_readstream */
extern T6 T1748f17(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* CONSOLE.read_data_buffer */
extern T0* T1748f16(GE_context* ac, T0* C);
/* KL_STDIN_FILE.any_ */
extern T0* T851f10(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.read_to_string */
extern T6 T33f37(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.dummy_kl_character_buffer */
extern T0* T33f47(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.any_ */
extern T0* T33f45(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.name */
extern T0* T1577f6(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.name */
extern T0* T1558f5(GE_context* ac, T0* C);
/* ET_ECF_OPTION_DEFAULTS.valid_assertions_latest */
extern T0* T2386s2(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_OPTION_DEFAULTS.valid_assertions_latest */
extern T0* T2386s2ac1(GE_context* ac, T0* a1);
/* ET_ECF_OPTION_DEFAULTS.boolean_option_value_regexp */
extern T0* T2386s8(GE_context* ac);
/* ET_ECF_OPTION_DEFAULTS.string_ */
extern T0* T2386s7(GE_context* ac);
/* ET_ECF_OPTION_DEFAULTS.case_insensitive_string_equality_tester */
extern T0* T2386s6(GE_context* ac);
/* ET_ECF_OPTION_DEFAULTS.valid_assertions */
extern T0* T2386s1(GE_context* ac, T0* a1);
/* ET_ECF_OPTION_DEFAULTS.valid_assertions_1_0_0 */
extern T0* T2386s5(GE_context* ac);
/* ET_ECF_OPTION_DEFAULTS.valid_assertions_1_2_0 */
extern T0* T2386s4(GE_context* ac);
/* ET_ECF_OPTION_DEFAULTS.ecf_1_2_0 */
extern T0* T2386s3(GE_context* ac);
/* EXECUTION_ENVIRONMENT.available_cpu_count */
extern T10 T145s7(GE_context* ac);
/* THREAD_CONTROL.join_all */
extern void T504s1(GE_context* ac);
/* ISE_RUNTIME.check_assert */
extern T1 T2247s1(GE_context* ac, T1 a1);
/* PLATFORM.is_thread_capable */
extern T1 T50s1(GE_context* ac);
/* PLATFORM.is_windows */
extern T1 T50s2(GE_context* ac);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].remove */
extern void T256f68(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].remove_position */
extern void T256f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].key_storage_keep_head */
extern void T256f80(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].item_storage_keep_head */
extern void T256f79(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION].keep_head */
extern void T809f10(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION].set_count */
extern void T809f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].move_cursors_forth */
extern void T256f78(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].internal_set_key_equality_tester */
extern void T256f77(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].twin */
extern T0* T256f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].copy */
extern void T256f69(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].copy */
extern void T256f69p1(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].clone_clashes */
extern void T256f76(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].clone_slots */
extern void T256f75(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].clone_key_storage */
extern void T256f74(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].clone_item_storage */
extern void T256f73(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION].resized_area */
extern T0* T809f5(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION].copy_data */
extern void T809f11(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION].force */
extern void T809f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION].move_data */
extern void T809f13(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION].overlapping_move */
extern void T809f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION].non_overlapping_move */
extern void T809f15(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].valid_cursor */
extern T1 T256f40(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].move_all_cursors_after */
extern void T256f71(GE_context* ac, T0* C);
extern T0* GE_ma1342(T6 c, T6 n, ...);
extern T0* GE_ma449(T6 c, T6 n, ...);
extern T0* GE_ma402(T6 c, T6 n, ...);
extern T0* GE_ma348(T6 c, T6 n, ...);
extern T0* GE_ma633(T6 c, T6 n, ...);
extern T0* GE_ma2848(T6 c, T6 n, ...);
extern T0* GE_ma2847(T6 c, T6 n, ...);
extern void GE_bma2847(T0* C, T6 s, T6 n, ...);
extern T0* GE_mt216(void);
extern T0* GE_mt32(T6 a1, T6 a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T6 a10, T1 a11);
extern T0* GE_mt2410(T0* a1, T0* a2, T8 a3);
extern T0* GE_mt674(T0* a1);
extern T0* ge390ov5849095;
extern T0* ge1000ov16646146;
extern T0* ge389ov5963777;
extern T0* ge345ov5652513;
extern T0* ge698ov11436038;
extern T0* ge475ov7782443;
extern T0* ge465ov7618620;
extern T0* ge391ov5963777;
extern T0* ge1525ov24986098;
extern T0* ge1525ov24986102;
extern T0* ge375ov6144008;
extern T0* ge1525ov24986094;
extern T0* ge1525ov24986101;
extern T0* ge1525ov24986099;
extern T0* ge1525ov24986100;
extern T0* ge376ov6160400;
extern T0* ge1525ov24986095;
extern T0* ge1525ov24986097;
extern T0* ge1525ov24985754;
extern T0* ge1525ov24986036;
extern T0* ge1525ov24986049;
extern T0* ge374ov6127635;
extern T0* ge374ov6127636;
extern T0* ge839ov13746214;
extern T0* ge839ov13746199;
extern T0* ge839ov13746192;
extern T0* ge839ov13746177;
extern T0* ge839ov13746202;
extern T0* ge839ov13746195;
extern T0* ge839ov13746203;
extern T0* ge839ov13746212;
extern T0* ge839ov13746205;
extern T0* ge839ov13746201;
extern T0* ge839ov13746189;
extern T0* ge839ov13746190;
extern T0* ge839ov13746204;
extern T0* ge839ov13746191;
extern T0* ge839ov13746178;
extern T0* ge839ov13746179;
extern T0* ge839ov13746180;
extern T0* ge839ov13746186;
extern T0* ge839ov13746188;
extern T0* ge839ov13746183;
extern T0* ge839ov13746208;
extern T0* ge839ov13746207;
extern T0* ge839ov13746184;
extern T0* ge839ov13746185;
extern T0* ge839ov13746182;
extern T0* ge839ov13746181;
extern T0* ge835ov13680657;
extern T0* ge1525ov24986103;
extern T0* ge1525ov24986096;
extern T0* ge1525ov24986034;
extern T0* ge1525ov24985788;
extern T0* ge1525ov24985762;
extern T0* ge1525ov24986029;
extern T0* ge1525ov24986033;
extern T0* ge1525ov24986030;
extern T0* ge1525ov24986032;
extern T0* ge1525ov24986031;
extern T0* ge1525ov24986037;
extern T0* ge1525ov24986039;
extern T0* ge1525ov24986038;
extern T0* ge1525ov24986040;
extern T0* ge1519ov24887299;
extern T0* ge1519ov24887298;
extern T0* ge1519ov24887297;
extern T0* ge1305ov21382030;
extern T0* ge396ov5799967;
extern T0* ge396ov5799968;
extern T0* ge382ov6258700;
extern T0* ge382ov6258699;
extern T0* ge399ov5799967;
extern T0* ge399ov5799968;
extern T0* ge375ov6144010;
extern T0* ge1525ov24985833;
extern T0* ge1525ov24986079;
extern T0* ge1525ov24985839;
extern T0* ge1525ov24985743;
extern T0* ge1525ov24986080;
extern T0* ge1525ov24985924;
extern T0* ge1525ov24985923;
extern T0* ge1525ov24985862;
extern T0* ge1525ov24985893;
extern T0* ge1525ov24985939;
extern T0* ge1525ov24985978;
extern T0* ge1525ov24986005;
extern T0* ge1525ov24986045;
extern T0* ge1525ov24985796;
extern T0* ge1525ov24986073;
extern T0* ge1525ov24985841;
extern T0* ge1525ov24985818;
extern T0* ge1525ov24985745;
extern T0* ge1525ov24986041;
extern T0* ge1525ov24985814;
extern T0* ge1305ov21382001;
extern T0* ge1305ov21382021;
extern T0* ge1525ov24986003;
extern T0* ge1525ov24985790;
extern T0* ge1525ov24986026;
extern T0* ge1525ov24985763;
extern T0* ge1525ov24985789;
extern T0* ge1525ov24986067;
extern T0* ge1525ov24986025;
extern T0* ge1525ov24986023;
extern T0* ge1525ov24986024;
extern T0* ge1525ov24986019;
extern T0* ge1525ov24986006;
extern T0* ge1525ov24986007;
extern T0* ge1525ov24986008;
extern T0* ge1525ov24986011;
extern T0* ge1525ov24986012;
extern T0* ge1525ov24986013;
extern T0* ge1525ov24986014;
extern T0* ge1525ov24986015;
extern T0* ge1525ov24986016;
extern T0* ge1525ov24986017;
extern T0* ge1525ov24986018;
extern T0* ge1525ov24986020;
extern T0* ge1525ov24986021;
extern T0* ge1525ov24986022;
extern T0* ge1525ov24986010;
extern T0* ge1525ov24986009;
extern T0* ge1525ov24986074;
extern T0* ge1305ov21381851;
extern T0* ge1525ov24985802;
extern T0* ge1525ov24985791;
extern T0* ge1525ov24986090;
extern T0* ge1525ov24985861;
extern T0* ge1525ov24985837;
extern T0* ge1525ov24985836;
extern T0* ge1525ov24986078;
extern T0* ge1525ov24985750;
extern T0* ge1525ov24985838;
extern T0* ge1525ov24986044;
extern T0* ge1525ov24985795;
extern T0* ge1525ov24986043;
extern T0* ge1525ov24986059;
extern T0* ge1525ov24986046;
extern T0* ge1525ov24985899;
extern T0* ge1525ov24985900;
extern T0* ge1525ov24986060;
extern T0* ge1525ov24985806;
extern T0* ge1305ov21382004;
extern T0* ge1525ov24985907;
extern T0* ge1525ov24985811;
extern T0* ge1525ov24985896;
extern T0* ge1525ov24985747;
extern T0* ge1525ov24985753;
extern T0* ge1525ov24985946;
extern T0* ge1525ov24985848;
extern T0* ge1525ov24985774;
extern T0* ge1525ov24986028;
extern T0* ge1525ov24986027;
extern T0* ge1525ov24986002;
extern T0* ge1525ov24986001;
extern T0* ge1525ov24986000;
extern T0* ge1525ov24985999;
extern T0* ge1525ov24985998;
extern T0* ge1525ov24985997;
extern T0* ge1525ov24985996;
extern T0* ge1525ov24985995;
extern T0* ge1525ov24985994;
extern T0* ge1525ov24985993;
extern T0* ge1525ov24985992;
extern T0* ge1525ov24985991;
extern T0* ge1525ov24985990;
extern T0* ge1525ov24985989;
extern T0* ge1525ov24985988;
extern T0* ge1525ov24985987;
extern T0* ge1525ov24985986;
extern T0* ge1525ov24985985;
extern T0* ge1525ov24985984;
extern T0* ge1525ov24985983;
extern T0* ge1525ov24985982;
extern T0* ge1525ov24985981;
extern T0* ge1525ov24985980;
extern T0* ge1525ov24985979;
extern T0* ge1525ov24985977;
extern T0* ge1525ov24985976;
extern T0* ge1525ov24985975;
extern T0* ge1525ov24985974;
extern T0* ge1525ov24985973;
extern T0* ge1525ov24985972;
extern T0* ge1525ov24985901;
extern T0* ge1525ov24985895;
extern T0* ge1525ov24985840;
extern T0* ge1525ov24985937;
extern T0* ge1525ov24985824;
extern T0* ge1525ov24985807;
extern T0* ge1525ov24986076;
extern T0* ge1525ov24985856;
extern T0* ge1525ov24986083;
extern T0* ge1525ov24985879;
extern T0* ge1525ov24985876;
extern T0* ge1525ov24985958;
extern T0* ge1525ov24985966;
extern T0* ge1525ov24985957;
extern T0* ge1525ov24985965;
extern T0* ge1525ov24985956;
extern T0* ge1525ov24985964;
extern T0* ge1525ov24985943;
extern T0* ge1525ov24985755;
extern T0* ge1525ov24985955;
extern T0* ge1525ov24985963;
extern T0* ge1525ov24985954;
extern T0* ge1525ov24985962;
extern T0* ge1525ov24985953;
extern T0* ge1525ov24985961;
extern T0* ge1525ov24985855;
extern T0* ge1525ov24985826;
extern T0* ge1525ov24985751;
extern T0* ge1525ov24985760;
extern T0* ge1525ov24985784;
extern T0* ge1525ov24985782;
extern T0* ge1525ov24985773;
extern T0* ge1525ov24985772;
extern T0* ge1525ov24985771;
extern T0* ge1525ov24985770;
extern T0* ge1525ov24985769;
extern T0* ge1525ov24985875;
extern T0* ge1525ov24985767;
extern T0* ge1525ov24985785;
extern T0* ge1525ov24985759;
extern T0* ge1525ov24985757;
extern T0* ge1525ov24985803;
extern T0* ge1525ov24985843;
extern T0* ge1525ov24985842;
extern T0* ge1525ov24986004;
extern T0* ge1525ov24985933;
extern T0* ge1525ov24985968;
extern T0* ge1525ov24985967;
extern T0* ge1525ov24985960;
extern T0* ge1525ov24985959;
extern T0* ge1525ov24985952;
extern T0* ge1525ov24985951;
extern T0* ge1525ov24985948;
extern T0* ge1525ov24985949;
extern T0* ge1525ov24985942;
extern T0* ge1525ov24985941;
extern T0* ge1525ov24985940;
extern T0* ge1525ov24986068;
extern T0* ge1525ov24985938;
extern T0* ge1525ov24985931;
extern T0* ge1525ov24985930;
extern T0* ge1525ov24985927;
extern T0* ge1525ov24985925;
extern T0* ge1525ov24985922;
extern T0* ge1525ov24985921;
extern T0* ge1525ov24985920;
extern T0* ge1525ov24985919;
extern T0* ge1525ov24985918;
extern T0* ge1525ov24985917;
extern T0* ge1525ov24985916;
extern T0* ge1525ov24985915;
extern T0* ge1525ov24985889;
extern T0* ge1525ov24985890;
extern T0* ge1525ov24985886;
extern T0* ge1525ov24985888;
extern T0* ge1525ov24985887;
extern T0* ge1525ov24985885;
extern T0* ge1525ov24985883;
extern T0* ge1525ov24985884;
extern T0* ge1525ov24985882;
extern T0* ge1525ov24985881;
extern T0* ge1525ov24985880;
extern T0* ge1525ov24985878;
extern T0* ge1525ov24985877;
extern T0* ge1525ov24985874;
extern T0* ge1525ov24985873;
extern T0* ge1525ov24985872;
extern T0* ge1525ov24985871;
extern T0* ge1525ov24985870;
extern T0* ge1525ov24985869;
extern T0* ge1525ov24985868;
extern T0* ge1525ov24985867;
extern T0* ge1525ov24985859;
extern T0* ge1525ov24985857;
extern T0* ge1525ov24985854;
extern T0* ge1525ov24985853;
extern T0* ge1525ov24985852;
extern T0* ge1525ov24985851;
extern T0* ge1525ov24985850;
extern T0* ge1525ov24985858;
extern T0* ge1525ov24985935;
extern T0* ge1525ov24985934;
extern T0* ge1525ov24985932;
extern T0* ge1525ov24985832;
extern T0* ge1525ov24985831;
extern T0* ge1525ov24985830;
extern T0* ge1525ov24985829;
extern T0* ge1525ov24985828;
extern T0* ge1525ov24985827;
extern T0* ge1525ov24985813;
extern T0* ge1525ov24985812;
extern T0* ge1525ov24985810;
extern T0* ge1525ov24985936;
extern T0* ge1525ov24985860;
extern T0* ge1525ov24985820;
extern T0* ge1525ov24985819;
extern T0* ge1525ov24985823;
extern T0* ge1525ov24985822;
extern T0* ge1525ov24985821;
extern T0* ge1525ov24985825;
extern T0* ge1525ov24985891;
extern T0* ge1525ov24985809;
extern T0* ge1525ov24985808;
extern T0* ge1525ov24986058;
extern T0* ge1525ov24985904;
extern T0* ge1305ov21382047;
extern T0* ge1305ov21382026;
extern T0* ge1525ov24986069;
extern T0* ge1525ov24986062;
extern T0* ge1525ov24986063;
extern T0* ge1525ov24985744;
extern T0* ge1525ov24986064;
extern T0* ge1525ov24985797;
extern T0* ge1525ov24985792;
extern T0* ge1525ov24985815;
extern T0* ge1305ov21381655;
extern T0* ge1305ov21381679;
extern T0* ge1305ov21381721;
extern T0* ge1525ov24985748;
extern T0* ge1525ov24985749;
extern T0* ge1305ov21381690;
extern T0* ge1525ov24986050;
extern T0* ge1525ov24985897;
extern T0* ge1525ov24985898;
extern T0* ge1525ov24985950;
extern T0* ge1525ov24985926;
extern T0* ge1525ov24985929;
extern T0* ge1525ov24985928;
extern T0* ge1525ov24985756;
extern T0* ge1525ov24986077;
extern T0* ge1525ov24986085;
extern T0* ge1525ov24985804;
extern T0* ge1525ov24986086;
extern T0* ge1525ov24986066;
extern T0* ge1525ov24986084;
extern T0* ge1525ov24985780;
extern T0* ge1525ov24985779;
extern T0* ge1525ov24985778;
extern T0* ge1525ov24985777;
extern T0* ge1525ov24985768;
extern T0* ge1525ov24985766;
extern T0* ge1525ov24985765;
extern T0* ge1525ov24985761;
extern T0* ge1305ov21381651;
extern T0* ge1525ov24985783;
extern T0* ge1305ov21381680;
extern T0* ge1525ov24985776;
extern T0* ge1305ov21381670;
extern T0* ge1525ov24985764;
extern T0* ge1305ov21381658;
extern T0* ge1525ov24985793;
extern T0* ge1305ov21381693;
extern T0* ge1525ov24985758;
extern T0* ge1305ov21381646;
extern T0* ge1305ov21381667;
extern T0* ge1305ov21381666;
extern T0* ge1305ov21381650;
extern T0* ge1305ov21381688;
extern T0* ge1305ov21381642;
extern T0* ge1305ov21381644;
extern T0* ge1305ov21381692;
extern T0* ge1305ov21381691;
extern T0* ge1305ov21381684;
extern T0* ge1305ov21381683;
extern T0* ge1305ov21381678;
extern T0* ge1305ov21381677;
extern T0* ge1305ov21381682;
extern T0* ge1305ov21381681;
extern T0* ge1305ov21381674;
extern T0* ge1305ov21381673;
extern T0* ge1305ov21381672;
extern T0* ge1305ov21381671;
extern T0* ge1305ov21381662;
extern T0* ge1305ov21381661;
extern T0* ge1305ov21381660;
extern T0* ge1305ov21381659;
extern T0* ge1305ov21381648;
extern T0* ge1305ov21381647;
extern T0* ge1305ov21381645;
extern T0* ge1305ov21382019;
extern T0* ge1305ov21381694;
extern T0* ge1524ov24969943;
extern T0* ge1524ov24969652;
extern T0* ge1524ov24969477;
extern T0* ge1522ov24936465;
extern T0* ge1522ov24936459;
extern T0* ge1522ov24936453;
extern T0* ge1522ov24936461;
extern T0* ge1522ov24936455;
extern T0* ge1522ov24936449;
extern T0* ge1522ov24936464;
extern T0* ge1522ov24936458;
extern T0* ge1522ov24936452;
extern T0* ge1522ov24936466;
extern T0* ge1522ov24936460;
extern T0* ge1522ov24936454;
extern T0* ge1305ov21381750;
extern T0* ge1522ov24936463;
extern T0* ge1522ov24936457;
extern T0* ge1522ov24936451;
extern T0* ge1305ov21381943;
extern T0* ge1305ov21381889;
extern T0* ge1305ov21381853;
extern T0* ge1305ov21381799;
extern T0* ge1524ov24969968;
extern T0* ge1524ov24969673;
extern T0* ge1524ov24969502;
extern T0* ge1524ov24969966;
extern T0* ge1524ov24969671;
extern T0* ge1524ov24969500;
extern T0* ge1305ov21381973;
extern T0* ge1305ov21381933;
extern T0* ge1305ov21381738;
extern T0* ge1305ov21381984;
extern T0* ge1305ov21381897;
extern T0* ge1305ov21381999;
extern T0* ge1305ov21381856;
extern T0* ge1305ov21381697;
extern T0* ge1305ov21381722;
extern T0* ge1524ov24969965;
extern T0* ge1524ov24969670;
extern T0* ge1524ov24969499;
extern T0* ge1524ov24969963;
extern T0* ge1524ov24969668;
extern T0* ge1524ov24969497;
extern T0* ge1524ov24969964;
extern T0* ge1524ov24969669;
extern T0* ge1524ov24969498;
extern T0* ge1305ov21381745;
extern T0* ge1522ov24936462;
extern T0* ge1522ov24936456;
extern T0* ge1522ov24936450;
extern T0* ge1305ov21382025;
extern T0* ge1536ov25165862;
extern T0* ge1305ov21382149;
extern T0* ge1305ov21382133;
extern T0* ge1305ov21381685;
extern T0* ge1305ov21381686;
extern T0* ge1305ov21382146;
extern T0* ge1305ov21382147;
extern T0* ge1305ov21382140;
extern T0* ge1305ov21382143;
extern T0* ge1305ov21382135;
extern T0* ge1305ov21382138;
extern T0* ge1305ov21382134;
extern T0* ge1305ov21382148;
extern T0* ge1305ov21382131;
extern T0* ge1305ov21382132;
extern T0* ge1305ov21381689;
extern T0* ge1305ov21382043;
extern T0* ge1305ov21381687;
extern T0* ge1305ov21381664;
extern T0* ge1305ov21381657;
extern T0* ge1305ov21381653;
extern T0* ge1305ov21381652;
extern T0* ge1305ov21381675;
extern T0* ge1305ov21382067;
extern T0* ge919ov15056914;
extern T0* ge919ov15056953;
extern T0* ge919ov15056921;
extern T0* ge911ov14925834;
extern T0* ge911ov14925835;
extern T0* ge911ov14925844;
extern T0* ge868ov14221314;
extern T0* ge868ov14221321;
extern T0* ge868ov14221320;
extern T0* ge868ov14221315;
extern T0* ge868ov14221319;
extern T0* ge868ov14221316;
extern T0* ge868ov14221322;
extern T0* ge919ov15056906;
extern T0* ge919ov15056911;
extern T0* ge934ov15302741;
extern T0* ge934ov15302711;
extern T0* ge934ov15302679;
extern T0* ge934ov15302713;
extern T0* ge934ov15302735;
extern T0* ge934ov15302702;
extern T0* ge934ov15302725;
extern T0* ge930ov15237186;
extern T0* ge930ov15237151;
extern T0* ge930ov15237195;
extern T0* ge930ov15237160;
extern T0* ge930ov15237178;
extern T0* ge930ov15237143;
extern T0* ge937ov15351875;
extern T0* ge937ov15351874;
extern T0* ge934ov15302686;
extern T0* ge934ov15302687;
extern T0* ge934ov15302659;
extern T0* ge934ov15302666;
extern T0* ge934ov15302670;
extern T0* ge934ov15302688;
extern T0* ge934ov15302689;
extern T0* ge934ov15302690;
extern T0* ge934ov15302691;
extern T0* ge934ov15302692;
extern T0* ge934ov15302693;
extern T0* ge934ov15302694;
extern T0* ge934ov15302697;
extern T0* ge934ov15302717;
extern T0* ge934ov15302701;
extern T0* ge934ov15302704;
extern T0* ge934ov15302716;
extern T0* ge934ov15302720;
extern T0* ge934ov15302721;
extern T0* ge934ov15302722;
extern T0* ge934ov15302730;
extern T0* ge934ov15302731;
extern T0* ge934ov15302743;
extern T0* ge934ov15302744;
extern T0* ge934ov15302657;
extern T0* ge919ov15056916;
extern T0* ge911ov14925833;
extern T0* ge911ov14925843;
extern T0* ge911ov14925842;
extern T0* ge911ov14925868;
extern T0* ge911ov14925871;
extern T0* ge911ov14925870;
extern T0* ge911ov14925845;
extern T0* ge911ov14925861;
extern T0* ge911ov14925836;
extern T0* ge911ov14925831;
extern T0* ge868ov14221313;
extern T0* ge919ov15056905;
extern T0* ge919ov15056933;
extern T0* ge934ov15302703;
extern T0* ge934ov15302708;
extern T0* ge934ov15302728;
extern T0* ge934ov15302665;
extern T0* ge934ov15302724;
extern T0* ge934ov15302672;
extern T0* ge934ov15302676;
extern T0* ge934ov15302736;
extern T0* ge930ov15237184;
extern T0* ge930ov15237149;
extern T0* ge930ov15237181;
extern T0* ge930ov15237146;
extern T0* ge934ov15302742;
extern T0* ge934ov15302658;
extern T0* ge934ov15302667;
extern T0* ge934ov15302695;
extern T0* ge934ov15302714;
extern T0* ge934ov15302675;
extern T0* ge934ov15302668;
extern T0* ge934ov15302729;
extern T0* ge934ov15302745;
extern T0* ge934ov15302682;
extern T0* ge934ov15302723;
extern T0* ge934ov15302739;
extern T0* ge934ov15302669;
extern T0* ge934ov15302696;
extern T0* ge934ov15302715;
extern T0* ge934ov15302712;
extern T0* ge930ov15237179;
extern T0* ge930ov15237144;
extern T0* ge934ov15302674;
extern T0* ge934ov15302677;
extern T0* ge934ov15302680;
extern T0* ge934ov15302681;
extern T0* ge934ov15302710;
extern T0* ge934ov15302719;
extern T0* ge934ov15302707;
extern T0* ge934ov15302706;
extern T0* ge934ov15302737;
extern T0* ge934ov15302673;
extern T0* ge934ov15302709;
extern T0* ge930ov15237168;
extern T0* ge930ov15237133;
extern T0* ge930ov15237167;
extern T0* ge930ov15237132;
extern T0* ge930ov15237166;
extern T0* ge930ov15237131;
extern T0* ge930ov15237165;
extern T0* ge930ov15237130;
extern T0* ge930ov15237164;
extern T0* ge930ov15237129;
extern T0* ge934ov15302685;
extern T0* ge930ov15237183;
extern T0* ge930ov15237148;
extern T0* ge930ov15237185;
extern T0* ge930ov15237150;
extern T0* ge934ov15302705;
extern T0* ge934ov15302671;
extern T0* ge934ov15302732;
extern T0* ge934ov15302747;
extern T0* ge934ov15302664;
extern T0* ge934ov15302678;
extern T0* ge934ov15302746;
extern T0* ge934ov15302683;
extern T0* ge934ov15302718;
extern T0* ge934ov15302740;
extern T0* ge934ov15302699;
extern T0* ge934ov15302726;
extern T0* ge934ov15302698;
extern T0* ge934ov15302684;
extern T0* ge934ov15302700;
extern T0* ge934ov15302733;
extern T0* ge934ov15302738;
extern T0* ge934ov15302660;
extern T0* ge934ov15302661;
extern T0* ge934ov15302662;
extern T0* ge934ov15302663;
extern T0* ge911ov14925863;
extern T0* ge911ov14925872;
extern T0* ge911ov14925837;
extern T0* ge911ov14925866;
extern T0* ge911ov14925848;
extern T0* ge911ov14925832;
extern T0* ge911ov14925838;
extern T0* ge911ov14925840;
extern T0* ge911ov14925841;
extern T0* ge911ov14925846;
extern T0* ge911ov14925825;
extern T0* ge911ov14925826;
extern T0* ge911ov14925827;
extern T0* ge911ov14925828;
extern T0* ge911ov14925829;
extern T0* ge911ov14925830;
extern T0* ge911ov14925847;
extern T0* ge911ov14925849;
extern T0* ge911ov14925850;
extern T0* ge911ov14925851;
extern T0* ge911ov14925852;
extern T0* ge911ov14925853;
extern T0* ge911ov14925854;
extern T0* ge911ov14925855;
extern T0* ge911ov14925856;
extern T0* ge911ov14925857;
extern T0* ge911ov14925858;
extern T0* ge911ov14925859;
extern T0* ge911ov14925860;
extern T0* ge919ov15056897;
extern T0* ge919ov15056944;
extern T0* ge919ov15056898;
extern T0* ge919ov15056899;
extern T0* ge919ov15056900;
extern T0* ge919ov15056901;
extern T0* ge919ov15056902;
extern T0* ge919ov15056903;
extern T0* ge919ov15056904;
extern T0* ge919ov15056907;
extern T0* ge919ov15056908;
extern T0* ge919ov15056909;
extern T0* ge919ov15056910;
extern T0* ge919ov15056915;
extern T0* ge919ov15056917;
extern T0* ge919ov15056918;
extern T0* ge919ov15056919;
extern T0* ge919ov15056920;
extern T0* ge919ov15056922;
extern T0* ge919ov15056923;
extern T0* ge919ov15056941;
extern T0* ge919ov15056929;
extern T0* ge919ov15056930;
extern T0* ge919ov15056943;
extern T0* ge919ov15056932;
extern T0* ge919ov15056934;
extern T0* ge919ov15056935;
extern T0* ge919ov15056938;
extern T0* ge919ov15056939;
extern T0* ge919ov15056940;
extern T0* ge930ov15237180;
extern T0* ge930ov15237145;
extern T0* ge930ov15237182;
extern T0* ge930ov15237147;
extern T0* ge930ov15237176;
extern T0* ge930ov15237141;
extern T0* ge868ov14221317;
extern T0* ge868ov14221318;
extern T0* ge930ov15237170;
extern T0* ge930ov15237135;
extern T0* ge930ov15237169;
extern T0* ge930ov15237134;
extern T0* ge930ov15237187;
extern T0* ge930ov15237152;
extern T0* ge930ov15237188;
extern T0* ge930ov15237153;
extern T0* ge930ov15237189;
extern T0* ge930ov15237154;
extern T0* ge930ov15237177;
extern T0* ge930ov15237142;
extern T0* ge930ov15237190;
extern T0* ge930ov15237155;
extern T0* ge930ov15237163;
extern T0* ge930ov15237128;
extern T0* ge930ov15237192;
extern T0* ge930ov15237157;
extern T0* ge930ov15237193;
extern T0* ge930ov15237158;
extern T0* ge930ov15237194;
extern T0* ge930ov15237159;
extern T0* ge930ov15237191;
extern T0* ge930ov15237156;
extern T0* ge934ov15302734;
extern T0* ge934ov15302727;
extern T0* ge930ov15237162;
extern T0* ge930ov15237127;
extern T0* ge930ov15237171;
extern T0* ge930ov15237136;
extern T0* ge930ov15237172;
extern T0* ge930ov15237137;
extern T0* ge930ov15237175;
extern T0* ge930ov15237140;
extern T0* ge930ov15237174;
extern T0* ge930ov15237139;
extern T0* ge930ov15237173;
extern T0* ge930ov15237138;
extern T0* ge1687ov27639850;
extern T0* ge1687ov27639812;
extern T0* ge1687ov27639810;
extern T0* ge1687ov27639851;
extern T0* ge1687ov27639823;
extern T0* ge1687ov27639822;
extern T0* ge1687ov27639833;
extern T0* ge1687ov27639827;
extern T0* ge1687ov27639826;
extern T0* ge1687ov27639825;
extern T0* ge1687ov27639831;
extern T0* ge1687ov27639830;
extern T0* ge1687ov27639832;
extern T0* ge1687ov27639809;
extern T0* ge1687ov27639835;
extern T0* ge1687ov27639844;
extern T0* ge1690ov27688987;
extern T0* ge1690ov27688985;
extern T0* ge1690ov27688986;
extern T0* ge1687ov27639845;
extern T0* ge1687ov27639846;
extern T0* ge1687ov27639849;
extern T0* ge1687ov27639847;
extern T0* ge1687ov27639848;
extern T0* ge1687ov27639842;
extern T0* ge1683ov27574273;
extern T0* ge1683ov27574274;
extern T0* ge1687ov27639815;
extern T0* ge1687ov27639838;
extern T0* ge1698ov27820049;
extern T0* ge1698ov27820048;
extern T0* ge1687ov27639858;
extern T0* ge1687ov27639859;
extern T0* ge1687ov27639860;
extern T0* ge1687ov27639853;
extern T0* ge1687ov27639836;
extern T0* ge1687ov27639837;
extern T0* ge1687ov27639839;
extern T0* ge1687ov27639843;
extern T0* ge1742ov28540929;
extern T0* ge1590ov26050562;
extern T0* ge1590ov26050563;
extern T0* ge1590ov26050565;
extern T0* ge1590ov26050566;
extern T0* ge1590ov26050567;
extern T0* ge1590ov26050568;
extern T0* ge1590ov26050569;
extern T0* ge1590ov26050570;
extern T0* ge1590ov26050571;
extern T0* ge1590ov26050572;
extern T0* ge1590ov26050574;
extern T0* ge1590ov26050575;
extern T0* ge1590ov26050576;
extern T0* ge1590ov26050577;
extern T0* ge1590ov26050578;
extern T0* ge1590ov26050580;
extern T0* ge1590ov26050581;
extern T0* ge1590ov26050582;
extern T0* ge1590ov26050584;
extern T0* ge1590ov26050585;
extern T0* ge1590ov26050586;
extern T0* ge1590ov26050587;
extern T0* ge1590ov26050588;
extern T0* ge1590ov26050589;
extern T0* ge1590ov26050590;
extern T0* ge1590ov26050591;
extern T0* ge1590ov26050592;
extern T0* ge1590ov26050593;
extern T0* ge1590ov26050594;
extern T0* ge1590ov26050595;
extern T0* ge1590ov26050596;
extern T0* ge1590ov26050597;
extern T0* ge1590ov26050598;
extern T0* ge1590ov26050599;
extern T0* ge1590ov26050600;
extern T0* ge1590ov26050601;
extern T0* ge1590ov26050602;
extern T0* ge1590ov26050603;
extern T0* ge1590ov26050604;
extern T0* ge1590ov26050605;
extern T0* ge1590ov26050607;
extern T0* ge1590ov26050611;
extern T0* ge1590ov26050612;
extern T0* ge1590ov26050613;
extern T0* ge1590ov26050614;
extern T0* ge1590ov26050615;
extern T0* ge1590ov26050616;
extern T0* ge1590ov26050618;
extern T0* ge1590ov26050619;
extern T0* ge1590ov26050644;
extern T0* ge1590ov26050651;
extern T0* ge1590ov26050628;
extern T0* ge1590ov26050620;
extern T0* ge911ov14925867;
extern T0* ge911ov14925862;
extern T0* ge911ov14925864;
extern T0* ge1590ov26050633;
extern T0* ge1590ov26050631;
extern T0* ge1590ov26050625;
extern T0* ge1590ov26050643;
extern T0* ge1590ov26050645;
extern T0* ge1590ov26050653;
extern T0* ge1590ov26050650;
extern T0* ge1590ov26050648;
extern T0* ge1590ov26050621;
extern T0* ge1590ov26050627;
extern T0* ge1590ov26050647;
extern T0* ge1590ov26050637;
extern T0* ge1590ov26050622;
extern T0* ge1590ov26050641;
extern T0* ge1590ov26050635;
extern T0* ge1590ov26050624;
extern T0* ge1590ov26050636;
extern T0* ge1590ov26050649;
extern T0* ge1590ov26050652;
extern T0* ge1590ov26050632;
extern T0* ge1590ov26050638;
extern T0* ge1590ov26050639;
extern T0* ge1590ov26050640;
extern T0* ge1590ov26050623;
extern T0* ge1590ov26050654;
extern T0* ge1590ov26050583;
extern T0* ge1590ov26050561;
extern T0* ge1590ov26050564;
extern T0* ge1590ov26050573;
extern T0* ge1590ov26050579;
extern T0* ge1590ov26050606;
extern T0* ge1590ov26050608;
extern T0* ge1590ov26050609;
extern T0* ge1590ov26050610;
extern T0* ge1590ov26050617;
extern T0* ge1623ov26591255;
extern T0* ge1623ov26591254;
extern T0* ge1623ov26591253;
extern T0* ge1581ov25903121;
extern T0* ge1585ov25968642;
extern T0* ge1590ov26050634;
extern T0* ge1590ov26050642;
extern T0* ge1590ov26050629;
extern T0* ge1590ov26050630;
extern T0* ge318ov5210114;
extern T0* ge318ov5210121;
extern T0* ge313ov5128214;
extern T0* ge417ov6832129;
extern T0* ge315ov5160967;
extern T0* ge318ov5210117;
extern T0* ge318ov5210124;
extern T0* ge318ov5210115;
extern T0* ge318ov5210122;
extern T0* ge318ov5210116;
extern T0* ge318ov5210123;
extern T0* ge318ov5210118;
extern T0* ge318ov5210125;
extern T0* ge318ov5210119;
extern T0* ge318ov5210126;
extern T0* ge315ov5160962;
extern T0* ge315ov5160961;
extern T0* ge315ov5160969;
extern T0* ge315ov5160968;
extern T0* ge1576ov25821187;
extern T0* ge1576ov25821185;
extern T0* ge1694ov27754515;
extern T0* ge1694ov27754516;
extern T0* ge1685ov27607044;
extern T0* ge1685ov27607046;
extern T0* ge797ov13058065;
extern T0* ge520ov8519684;
extern T0* ge1514ov24805388;
extern T0* ge1514ov24805383;
extern T0* ge1514ov24805378;
extern T0* ge1514ov24805389;
extern T0* ge1514ov24805384;
extern T0* ge1514ov24805379;
extern T0* ge1521ov24920067;
extern T0* ge1521ov24920066;
extern T0* ge1305ov21382130;
extern T0* ge1305ov21382136;
extern T0* ge1305ov21382137;
extern T0* ge1305ov21382139;
extern T0* ge1305ov21382141;
extern T0* ge1305ov21382142;
extern T0* ge1305ov21382144;
extern T0* ge1305ov21382145;
extern T0* ge1305ov21382192;
extern T0* ge1305ov21382193;
extern T0* ge1305ov21382194;
extern T0* ge1305ov21381643;
extern T0* ge1305ov21381649;
extern T0* ge1305ov21381654;
extern T0* ge1305ov21381656;
extern T0* ge1305ov21381663;
extern T0* ge1305ov21381665;
extern T0* ge1305ov21381668;
extern T0* ge1305ov21381669;
extern T0* ge1305ov21381676;
extern T0* ge1305ov21381695;
extern T0* ge1305ov21381696;
extern T0* ge1305ov21381698;
extern T0* ge1305ov21381699;
extern T0* ge1305ov21381700;
extern T0* ge1305ov21381701;
extern T0* ge1305ov21381702;
extern T0* ge1305ov21381703;
extern T0* ge1305ov21381704;
extern T0* ge1305ov21381705;
extern T0* ge1305ov21381706;
extern T0* ge1305ov21381707;
extern T0* ge1305ov21381708;
extern T0* ge1305ov21381709;
extern T0* ge1305ov21381710;
extern T0* ge1305ov21381711;
extern T0* ge1305ov21381712;
extern T0* ge1305ov21381713;
extern T0* ge1305ov21381714;
extern T0* ge1305ov21381715;
extern T0* ge1305ov21381716;
extern T0* ge1305ov21381717;
extern T0* ge1305ov21381718;
extern T0* ge1305ov21381719;
extern T0* ge1305ov21381720;
extern T0* ge1305ov21381723;
extern T0* ge1305ov21381724;
extern T0* ge1305ov21381725;
extern T0* ge1305ov21381726;
extern T0* ge1305ov21381727;
extern T0* ge1305ov21381728;
extern T0* ge1305ov21381729;
extern T0* ge1305ov21381730;
extern T0* ge1305ov21381731;
extern T0* ge1305ov21381732;
extern T0* ge1305ov21381733;
extern T0* ge1305ov21381734;
extern T0* ge1305ov21381735;
extern T0* ge1305ov21381736;
extern T0* ge1305ov21381737;
extern T0* ge1305ov21381739;
extern T0* ge1305ov21381740;
extern T0* ge1305ov21381741;
extern T0* ge1305ov21381742;
extern T0* ge1305ov21381743;
extern T0* ge1305ov21381744;
extern T0* ge1305ov21381746;
extern T0* ge1305ov21381747;
extern T0* ge1305ov21381748;
extern T0* ge1305ov21381749;
extern T0* ge1305ov21381751;
extern T0* ge1305ov21381752;
extern T0* ge1305ov21381753;
extern T0* ge1305ov21381754;
extern T0* ge1305ov21381755;
extern T0* ge1305ov21381756;
extern T0* ge1305ov21381757;
extern T0* ge1305ov21381758;
extern T0* ge1305ov21381759;
extern T0* ge1305ov21381760;
extern T0* ge1305ov21381761;
extern T0* ge1305ov21381762;
extern T0* ge1305ov21381763;
extern T0* ge1305ov21381764;
extern T0* ge1305ov21381765;
extern T0* ge1305ov21381766;
extern T0* ge1305ov21381767;
extern T0* ge1305ov21381768;
extern T0* ge1305ov21381769;
extern T0* ge1305ov21381770;
extern T0* ge1305ov21381771;
extern T0* ge1305ov21381772;
extern T0* ge1305ov21381773;
extern T0* ge1305ov21381774;
extern T0* ge1305ov21381775;
extern T0* ge1305ov21381776;
extern T0* ge1305ov21381777;
extern T0* ge1305ov21381778;
extern T0* ge1305ov21381779;
extern T0* ge1305ov21381780;
extern T0* ge1305ov21381781;
extern T0* ge1305ov21381782;
extern T0* ge1305ov21381783;
extern T0* ge1305ov21381784;
extern T0* ge1305ov21381785;
extern T0* ge1305ov21381786;
extern T0* ge1305ov21381787;
extern T0* ge1305ov21381788;
extern T0* ge1305ov21381789;
extern T0* ge1305ov21381790;
extern T0* ge1305ov21381791;
extern T0* ge1305ov21381792;
extern T0* ge1305ov21381793;
extern T0* ge1305ov21381794;
extern T0* ge1305ov21381795;
extern T0* ge1305ov21381796;
extern T0* ge1305ov21381797;
extern T0* ge1305ov21381798;
extern T0* ge1305ov21381800;
extern T0* ge1305ov21381801;
extern T0* ge1305ov21381802;
extern T0* ge1305ov21381803;
extern T0* ge1305ov21381804;
extern T0* ge1305ov21381805;
extern T0* ge1305ov21381806;
extern T0* ge1305ov21381807;
extern T0* ge1305ov21381808;
extern T0* ge1305ov21381809;
extern T0* ge1305ov21381810;
extern T0* ge1305ov21381811;
extern T0* ge1305ov21381812;
extern T0* ge1305ov21381813;
extern T0* ge1305ov21381814;
extern T0* ge1305ov21381815;
extern T0* ge1305ov21381816;
extern T0* ge1305ov21381817;
extern T0* ge1305ov21381818;
extern T0* ge1305ov21381819;
extern T0* ge1305ov21381820;
extern T0* ge1305ov21381821;
extern T0* ge1305ov21381822;
extern T0* ge1305ov21381823;
extern T0* ge1305ov21381824;
extern T0* ge1305ov21381825;
extern T0* ge1305ov21381826;
extern T0* ge1305ov21381827;
extern T0* ge1305ov21381828;
extern T0* ge1305ov21381829;
extern T0* ge1305ov21381830;
extern T0* ge1305ov21381831;
extern T0* ge1305ov21381832;
extern T0* ge1305ov21381833;
extern T0* ge1305ov21381834;
extern T0* ge1305ov21381835;
extern T0* ge1305ov21381836;
extern T0* ge1305ov21381837;
extern T0* ge1305ov21381838;
extern T0* ge1305ov21381839;
extern T0* ge1305ov21381840;
extern T0* ge1305ov21381841;
extern T0* ge1305ov21381842;
extern T0* ge1305ov21381843;
extern T0* ge1305ov21381844;
extern T0* ge1305ov21381845;
extern T0* ge1305ov21381846;
extern T0* ge1305ov21381847;
extern T0* ge1305ov21381848;
extern T0* ge1305ov21381849;
extern T0* ge1305ov21381850;
extern T0* ge1305ov21381852;
extern T0* ge1305ov21381854;
extern T0* ge1305ov21381855;
extern T0* ge1305ov21381857;
extern T0* ge1305ov21381858;
extern T0* ge1305ov21381859;
extern T0* ge1305ov21381860;
extern T0* ge1305ov21381861;
extern T0* ge1305ov21381862;
extern T0* ge1305ov21381863;
extern T0* ge1305ov21381864;
extern T0* ge1305ov21381865;
extern T0* ge1305ov21381866;
extern T0* ge1305ov21381867;
extern T0* ge1305ov21381868;
extern T0* ge1305ov21381869;
extern T0* ge1305ov21381870;
extern T0* ge1305ov21381871;
extern T0* ge1305ov21381872;
extern T0* ge1305ov21381873;
extern T0* ge1305ov21381874;
extern T0* ge1305ov21381875;
extern T0* ge1305ov21381876;
extern T0* ge1305ov21381877;
extern T0* ge1305ov21381878;
extern T0* ge1305ov21381879;
extern T0* ge1305ov21381880;
extern T0* ge1305ov21381881;
extern T0* ge1305ov21381882;
extern T0* ge1305ov21381883;
extern T0* ge1305ov21381884;
extern T0* ge1305ov21381885;
extern T0* ge1305ov21381886;
extern T0* ge1305ov21381887;
extern T0* ge1305ov21381888;
extern T0* ge1305ov21381890;
extern T0* ge1305ov21381891;
extern T0* ge1305ov21381892;
extern T0* ge1305ov21381893;
extern T0* ge1305ov21381894;
extern T0* ge1305ov21381895;
extern T0* ge1305ov21381896;
extern T0* ge1305ov21381898;
extern T0* ge1305ov21381899;
extern T0* ge1305ov21381900;
extern T0* ge1305ov21381901;
extern T0* ge1305ov21381902;
extern T0* ge1305ov21381903;
extern T0* ge1305ov21381904;
extern T0* ge1305ov21381905;
extern T0* ge1305ov21381906;
extern T0* ge1305ov21381907;
extern T0* ge1305ov21381908;
extern T0* ge1305ov21381909;
extern T0* ge1305ov21381910;
extern T0* ge1305ov21381911;
extern T0* ge1305ov21381912;
extern T0* ge1305ov21381913;
extern T0* ge1305ov21381914;
extern T0* ge1305ov21381915;
extern T0* ge1305ov21381916;
extern T0* ge1305ov21381917;
extern T0* ge1305ov21381918;
extern T0* ge1305ov21381919;
extern T0* ge1305ov21381920;
extern T0* ge1305ov21381921;
extern T0* ge1305ov21381922;
extern T0* ge1305ov21381923;
extern T0* ge1305ov21381924;
extern T0* ge1305ov21381925;
extern T0* ge1305ov21381926;
extern T0* ge1305ov21381927;
extern T0* ge1305ov21381928;
extern T0* ge1305ov21381929;
extern T0* ge1305ov21381930;
extern T0* ge1305ov21381931;
extern T0* ge1305ov21381932;
extern T0* ge1305ov21381934;
extern T0* ge1305ov21381935;
extern T0* ge1305ov21381936;
extern T0* ge1305ov21381937;
extern T0* ge1305ov21381938;
extern T0* ge1305ov21381939;
extern T0* ge1305ov21381940;
extern T0* ge1305ov21381941;
extern T0* ge1305ov21381942;
extern T0* ge1305ov21381944;
extern T0* ge1305ov21381945;
extern T0* ge1305ov21381946;
extern T0* ge1305ov21381947;
extern T0* ge1305ov21381948;
extern T0* ge1305ov21381949;
extern T0* ge1305ov21381950;
extern T0* ge1305ov21381951;
extern T0* ge1305ov21381952;
extern T0* ge1305ov21381953;
extern T0* ge1305ov21381954;
extern T0* ge1305ov21381955;
extern T0* ge1305ov21381956;
extern T0* ge1305ov21381957;
extern T0* ge1305ov21381958;
extern T0* ge1305ov21381959;
extern T0* ge1305ov21381960;
extern T0* ge1305ov21381961;
extern T0* ge1305ov21381962;
extern T0* ge1305ov21381963;
extern T0* ge1305ov21381964;
extern T0* ge1305ov21381965;
extern T0* ge1305ov21381966;
extern T0* ge1305ov21381967;
extern T0* ge1305ov21381968;
extern T0* ge1305ov21381969;
extern T0* ge1305ov21381970;
extern T0* ge1305ov21381971;
extern T0* ge1305ov21381972;
extern T0* ge1305ov21381974;
extern T0* ge1305ov21381975;
extern T0* ge1305ov21381976;
extern T0* ge1305ov21381977;
extern T0* ge1305ov21381978;
extern T0* ge1305ov21381979;
extern T0* ge1305ov21381980;
extern T0* ge1305ov21381981;
extern T0* ge1305ov21381982;
extern T0* ge1305ov21381983;
extern T0* ge1305ov21381985;
extern T0* ge1305ov21381986;
extern T0* ge1305ov21381987;
extern T0* ge1305ov21381988;
extern T0* ge1305ov21381989;
extern T0* ge1305ov21381990;
extern T0* ge1305ov21381991;
extern T0* ge1305ov21381992;
extern T0* ge1305ov21381993;
extern T0* ge1305ov21381994;
extern T0* ge1305ov21381995;
extern T0* ge1305ov21381996;
extern T0* ge1305ov21381997;
extern T0* ge1305ov21381998;
extern T0* ge1305ov21382000;
extern T0* ge1305ov21382002;
extern T0* ge1305ov21382003;
extern T0* ge1305ov21382005;
extern T0* ge1305ov21382006;
extern T0* ge1305ov21382007;
extern T0* ge1305ov21382008;
extern T0* ge1305ov21382009;
extern T0* ge1305ov21382010;
extern T0* ge1305ov21382011;
extern T0* ge1305ov21382012;
extern T0* ge1305ov21382014;
extern T0* ge1305ov21382015;
extern T0* ge1305ov21382016;
extern T0* ge1305ov21382017;
extern T0* ge1305ov21382018;
extern T0* ge1305ov21382020;
extern T0* ge1305ov21382022;
extern T0* ge1305ov21382023;
extern T0* ge1305ov21382024;
extern T0* ge1305ov21382027;
extern T0* ge1305ov21382028;
extern T0* ge1305ov21382029;
extern T0* ge1305ov21382031;
extern T0* ge1305ov21382032;
extern T0* ge1305ov21382033;
extern T0* ge1305ov21382034;
extern T0* ge1305ov21382035;
extern T0* ge1305ov21382036;
extern T0* ge1305ov21382037;
extern T0* ge1305ov21382038;
extern T0* ge1305ov21382039;
extern T0* ge1305ov21382040;
extern T0* ge1305ov21382041;
extern T0* ge1305ov21382042;
extern T0* ge1305ov21382044;
extern T0* ge1305ov21382045;
extern T0* ge1305ov21382046;
extern T0* ge1305ov21382048;
extern T0* ge1305ov21382049;
extern T0* ge1305ov21382050;
extern T0* ge1305ov21382051;
extern T0* ge1305ov21382052;
extern T0* ge1305ov21382053;
extern T0* ge1305ov21382054;
extern T0* ge1305ov21382055;
extern T0* ge1305ov21382057;
extern T0* ge1305ov21382058;
extern T0* ge1305ov21382059;
extern T0* ge1305ov21382060;
extern T0* ge1305ov21382061;
extern T0* ge1305ov21382062;
extern T0* ge1305ov21382063;
extern T0* ge1305ov21382064;
extern T0* ge1305ov21382065;
extern T0* ge1305ov21382066;
extern T0* ge1305ov21382068;
extern T0* ge1305ov21382069;
extern T0* ge1305ov21382070;
extern T0* ge1305ov21382071;
extern T0* ge1305ov21382072;
extern T0* ge1305ov21382073;
extern T0* ge1305ov21382074;
extern T0* ge1305ov21382075;
extern T0* ge1305ov21382076;
extern T0* ge1305ov21382077;
extern T0* ge1305ov21382078;
extern T0* ge1305ov21382092;
extern T0* ge1305ov21382093;
extern T0* ge1305ov21382094;
extern T0* ge1305ov21382095;
extern T0* ge1305ov21382096;
extern T0* ge1305ov21382098;
extern T0* ge1305ov21382099;
extern T0* ge1305ov21382100;
extern T0* ge1305ov21382101;
extern T0* ge1305ov21382102;
extern T0* ge1305ov21382103;
extern T0* ge1305ov21382104;
extern T0* ge1305ov21382105;
extern T0* ge1305ov21382106;
extern T0* ge1305ov21382107;
extern T0* ge1305ov21382108;
extern T0* ge1305ov21382109;
extern T0* ge1305ov21382110;
extern T0* ge1305ov21382111;
extern T0* ge1305ov21382112;
extern T0* ge1305ov21382113;
extern T0* ge1305ov21382114;
extern T0* ge1305ov21382115;
extern T0* ge1305ov21382116;
extern T0* ge1305ov21382119;
extern T0* ge1305ov21382120;
extern T0* ge1305ov21382121;
extern T0* ge1305ov21382122;
extern T0* ge1305ov21382123;
extern T0* ge1305ov21382124;
extern T0* ge1305ov21382125;
extern T0* ge1305ov21382126;
extern T0* ge1305ov21382127;
extern T0* ge1305ov21382128;
extern T0* ge349ov5718021;
extern T0* ge1536ov25165882;
extern T0* ge1515ov24821766;
extern T0* ge1515ov24821764;
extern T0* ge1515ov24821762;
extern T0* ge1403ov22986779;
extern T0* ge1396ov22872072;
extern T0* ge1392ov22806565;
extern T0* ge1524ov24969900;
extern T0* ge1524ov24969635;
extern T0* ge1524ov24969434;
extern T0* ge1524ov24969901;
extern T0* ge1524ov24969435;
extern T0* ge1524ov24969807;
extern T0* ge1524ov24969584;
extern T0* ge1524ov24969341;
extern T0* ge1524ov24969721;
extern T0* ge1524ov24969546;
extern T0* ge1524ov24969255;
extern T0* ge1524ov24969722;
extern T0* ge1524ov24969256;
extern T0* ge1524ov24969705;
extern T0* ge1524ov24969539;
extern T0* ge1524ov24969239;
extern T0* ge1524ov24969704;
extern T0* ge1524ov24969238;
extern T0* ge1524ov24969706;
extern T0* ge1524ov24969240;
extern T0* ge1524ov24969730;
extern T0* ge1524ov24969550;
extern T0* ge1524ov24969264;
extern T0* ge1524ov24969719;
extern T0* ge1524ov24969253;
extern T0* ge1524ov24969720;
extern T0* ge1524ov24969254;
extern T0* ge1524ov24969837;
extern T0* ge1524ov24969601;
extern T0* ge1524ov24969371;
extern T0* ge1524ov24969836;
extern T0* ge1524ov24969370;
extern T0* ge1524ov24969838;
extern T0* ge1524ov24969602;
extern T0* ge1524ov24969372;
extern T0* ge1524ov24969734;
extern T0* ge1524ov24969552;
extern T0* ge1524ov24969268;
extern T0* ge1524ov24969740;
extern T0* ge1524ov24969556;
extern T0* ge1524ov24969274;
extern T0* ge1524ov24969829;
extern T0* ge1524ov24969597;
extern T0* ge1524ov24969363;
extern T0* ge1524ov24969812;
extern T0* ge1524ov24969587;
extern T0* ge1524ov24969346;
extern T0* ge1524ov24969839;
extern T0* ge1524ov24969603;
extern T0* ge1524ov24969373;
extern T0* ge1524ov24969737;
extern T0* ge1524ov24969554;
extern T0* ge1524ov24969271;
extern T0* ge1524ov24969744;
extern T0* ge1524ov24969559;
extern T0* ge1524ov24969278;
extern T0* ge1524ov24969830;
extern T0* ge1524ov24969598;
extern T0* ge1524ov24969364;
extern T0* ge1524ov24969828;
extern T0* ge1524ov24969596;
extern T0* ge1524ov24969362;
extern T0* ge1524ov24969813;
extern T0* ge1524ov24969588;
extern T0* ge1524ov24969347;
extern T0* ge1524ov24969831;
extern T0* ge1524ov24969599;
extern T0* ge1524ov24969365;
extern T0* ge1524ov24969967;
extern T0* ge1524ov24969672;
extern T0* ge1524ov24969501;
extern T0* ge1524ov24969803;
extern T0* ge1524ov24969583;
extern T0* ge1524ov24969337;
extern T0* ge1524ov24969804;
extern T0* ge1524ov24969338;
extern T0* ge1524ov24969795;
extern T0* ge1524ov24969580;
extern T0* ge1524ov24969329;
extern T0* ge1524ov24969806;
extern T0* ge1524ov24969340;
extern T0* ge1524ov24969805;
extern T0* ge1524ov24969339;
extern T0* ge1524ov24969802;
extern T0* ge1524ov24969582;
extern T0* ge1524ov24969336;
extern T0* ge1524ov24969767;
extern T0* ge1524ov24969568;
extern T0* ge1524ov24969301;
extern T0* ge1524ov24969766;
extern T0* ge1524ov24969567;
extern T0* ge1524ov24969300;
extern T0* ge1524ov24969765;
extern T0* ge1524ov24969566;
extern T0* ge1524ov24969299;
extern T0* ge1524ov24969764;
extern T0* ge1524ov24969565;
extern T0* ge1524ov24969298;
extern T0* ge1524ov24969763;
extern T0* ge1524ov24969297;
extern T0* ge1524ov24969695;
extern T0* ge1524ov24969535;
extern T0* ge1524ov24969229;
extern T0* ge1524ov24969693;
extern T0* ge1524ov24969534;
extern T0* ge1524ov24969227;
extern T0* ge1524ov24969773;
extern T0* ge1524ov24969569;
extern T0* ge1524ov24969307;
extern T0* ge1524ov24969770;
extern T0* ge1524ov24969304;
extern T0* ge1524ov24969781;
extern T0* ge1524ov24969571;
extern T0* ge1524ov24969315;
extern T0* ge1524ov24969777;
extern T0* ge1524ov24969570;
extern T0* ge1524ov24969311;
extern T0* ge1524ov24969774;
extern T0* ge1524ov24969308;
extern T0* ge1524ov24969771;
extern T0* ge1524ov24969305;
extern T0* ge1524ov24969782;
extern T0* ge1524ov24969316;
extern T0* ge1524ov24969778;
extern T0* ge1524ov24969312;
extern T0* ge1524ov24969775;
extern T0* ge1524ov24969309;
extern T0* ge1524ov24969772;
extern T0* ge1524ov24969306;
extern T0* ge1524ov24969783;
extern T0* ge1524ov24969317;
extern T0* ge1524ov24969779;
extern T0* ge1524ov24969313;
extern T0* ge1524ov24969893;
extern T0* ge1524ov24969631;
extern T0* ge1524ov24969427;
extern T0* ge1524ov24969789;
extern T0* ge1524ov24969575;
extern T0* ge1524ov24969323;
extern T0* ge1524ov24969788;
extern T0* ge1524ov24969322;
extern T0* ge1524ov24969769;
extern T0* ge1524ov24969303;
extern T0* ge1524ov24969768;
extern T0* ge1524ov24969302;
extern T0* ge1524ov24969780;
extern T0* ge1524ov24969314;
extern T0* ge1524ov24969776;
extern T0* ge1524ov24969310;
extern T0* ge1524ov24969787;
extern T0* ge1524ov24969574;
extern T0* ge1524ov24969321;
extern T0* ge1524ov24969786;
extern T0* ge1524ov24969573;
extern T0* ge1524ov24969320;
extern T0* ge1524ov24969785;
extern T0* ge1524ov24969572;
extern T0* ge1524ov24969319;
extern T0* ge1524ov24969882;
extern T0* ge1524ov24969625;
extern T0* ge1524ov24969416;
extern T0* ge1524ov24969880;
extern T0* ge1524ov24969624;
extern T0* ge1524ov24969414;
extern T0* ge1524ov24969708;
extern T0* ge1524ov24969540;
extern T0* ge1524ov24969242;
extern T0* ge1524ov24969835;
extern T0* ge1524ov24969600;
extern T0* ge1524ov24969369;
extern T0* ge1524ov24969707;
extern T0* ge1524ov24969241;
extern T0* ge1524ov24969834;
extern T0* ge1524ov24969368;
extern T0* ge1524ov24969833;
extern T0* ge1524ov24969367;
extern T0* ge1524ov24969738;
extern T0* ge1524ov24969555;
extern T0* ge1524ov24969272;
extern T0* ge1524ov24969736;
extern T0* ge1524ov24969553;
extern T0* ge1524ov24969270;
extern T0* ge1524ov24969735;
extern T0* ge1524ov24969269;
extern T0* ge1524ov24969742;
extern T0* ge1524ov24969557;
extern T0* ge1524ov24969276;
extern T0* ge1524ov24969741;
extern T0* ge1524ov24969275;
extern T0* ge1524ov24969743;
extern T0* ge1524ov24969558;
extern T0* ge1524ov24969277;
extern T0* ge1524ov24969817;
extern T0* ge1524ov24969589;
extern T0* ge1524ov24969351;
extern T0* ge1524ov24969816;
extern T0* ge1524ov24969350;
extern T0* ge1524ov24969784;
extern T0* ge1524ov24969318;
extern T0* ge1524ov24969815;
extern T0* ge1524ov24969349;
extern T0* ge1524ov24969814;
extern T0* ge1524ov24969348;
extern T0* ge1524ov24969818;
extern T0* ge1524ov24969590;
extern T0* ge1524ov24969352;
extern T0* ge1524ov24969724;
extern T0* ge1524ov24969547;
extern T0* ge1524ov24969258;
extern T0* ge1524ov24969723;
extern T0* ge1524ov24969257;
extern T0* ge1524ov24969729;
extern T0* ge1524ov24969263;
extern T0* ge1524ov24969726;
extern T0* ge1524ov24969548;
extern T0* ge1524ov24969260;
extern T0* ge1524ov24969727;
extern T0* ge1524ov24969261;
extern T0* ge1524ov24969832;
extern T0* ge1524ov24969366;
extern T0* ge1524ov24969725;
extern T0* ge1524ov24969259;
extern T0* ge1524ov24969739;
extern T0* ge1524ov24969273;
extern T0* ge1524ov24969728;
extern T0* ge1524ov24969549;
extern T0* ge1524ov24969262;
extern T0* ge1524ov24969733;
extern T0* ge1524ov24969551;
extern T0* ge1524ov24969267;
extern T0* ge1524ov24969731;
extern T0* ge1524ov24969265;
extern T0* ge1524ov24969732;
extern T0* ge1524ov24969266;
extern T0* ge1524ov24969840;
extern T0* ge1524ov24969604;
extern T0* ge1524ov24969374;
extern T0* ge1524ov24969809;
extern T0* ge1524ov24969576;
extern T0* ge1524ov24969343;
extern T0* ge1524ov24969703;
extern T0* ge1524ov24969538;
extern T0* ge1524ov24969237;
extern T0* ge1524ov24969701;
extern T0* ge1524ov24969235;
extern T0* ge1524ov24969697;
extern T0* ge1524ov24969537;
extern T0* ge1524ov24969231;
extern T0* ge1524ov24969696;
extern T0* ge1524ov24969536;
extern T0* ge1524ov24969230;
extern T0* ge1524ov24969957;
extern T0* ge1524ov24969661;
extern T0* ge1524ov24969491;
extern T0* ge1524ov24969960;
extern T0* ge1524ov24969665;
extern T0* ge1524ov24969494;
extern T0* ge1524ov24969898;
extern T0* ge1524ov24969634;
extern T0* ge1524ov24969432;
extern T0* ge1524ov24969959;
extern T0* ge1524ov24969664;
extern T0* ge1524ov24969493;
extern T0* ge1524ov24969808;
extern T0* ge1524ov24969585;
extern T0* ge1524ov24969342;
extern T0* ge1524ov24969810;
extern T0* ge1524ov24969344;
extern T0* ge1514ov24805390;
extern T0* ge1514ov24805385;
extern T0* ge1514ov24805380;
extern T0* ge1514ov24805391;
extern T0* ge1514ov24805386;
extern T0* ge1514ov24805381;
extern T0* ge1524ov24969970;
extern T0* ge1524ov24969674;
extern T0* ge1524ov24969504;
extern T0* ge1524ov24969969;
extern T0* ge1524ov24969503;
extern T0* ge1524ov24969757;
extern T0* ge1524ov24969563;
extern T0* ge1524ov24969291;
extern T0* ge1524ov24969756;
extern T0* ge1524ov24969290;
extern T0* ge1524ov24969755;
extern T0* ge1524ov24969562;
extern T0* ge1524ov24969289;
extern T0* ge1524ov24969754;
extern T0* ge1524ov24969288;
extern T0* ge1524ov24969758;
extern T0* ge1524ov24969564;
extern T0* ge1524ov24969292;
extern T0* ge1524ov24969749;
extern T0* ge1524ov24969561;
extern T0* ge1524ov24969283;
extern T0* ge1524ov24969751;
extern T0* ge1524ov24969285;
extern T0* ge1524ov24969915;
extern T0* ge1524ov24969641;
extern T0* ge1524ov24969449;
extern T0* ge1524ov24969921;
extern T0* ge1524ov24969643;
extern T0* ge1524ov24969455;
extern T0* ge1524ov24969906;
extern T0* ge1524ov24969638;
extern T0* ge1524ov24969440;
extern T0* ge1524ov24969937;
extern T0* ge1524ov24969649;
extern T0* ge1524ov24969471;
extern T0* ge1524ov24969826;
extern T0* ge1524ov24969595;
extern T0* ge1524ov24969360;
extern T0* ge1524ov24969908;
extern T0* ge1524ov24969639;
extern T0* ge1524ov24969442;
extern T0* ge1524ov24969907;
extern T0* ge1524ov24969441;
extern T0* ge1524ov24969718;
extern T0* ge1524ov24969545;
extern T0* ge1524ov24969252;
extern T0* ge1524ov24969905;
extern T0* ge1524ov24969439;
extern T0* ge1524ov24969904;
extern T0* ge1524ov24969438;
extern T0* ge1524ov24969717;
extern T0* ge1524ov24969544;
extern T0* ge1524ov24969251;
extern T0* ge1524ov24969689;
extern T0* ge1524ov24969530;
extern T0* ge1524ov24969223;
extern T0* ge1524ov24969922;
extern T0* ge1524ov24969456;
extern T0* ge1524ov24969936;
extern T0* ge1524ov24969470;
extern T0* ge1524ov24969824;
extern T0* ge1524ov24969594;
extern T0* ge1524ov24969358;
extern T0* ge1524ov24969688;
extern T0* ge1524ov24969222;
extern T0* ge1524ov24969913;
extern T0* ge1524ov24969447;
extern T0* ge1524ov24969759;
extern T0* ge1524ov24969293;
extern T0* ge1524ov24969747;
extern T0* ge1524ov24969281;
extern T0* ge1524ov24969753;
extern T0* ge1524ov24969287;
extern T0* ge1524ov24969750;
extern T0* ge1524ov24969284;
extern T0* ge1524ov24969748;
extern T0* ge1524ov24969282;
extern T0* ge1525ov24985945;
extern T0* ge1525ov24986081;
extern T0* ge1525ov24986089;
extern T0* ge1524ov24969920;
extern T0* ge1524ov24969642;
extern T0* ge1524ov24969454;
extern T0* ge1524ov24969827;
extern T0* ge1524ov24969361;
extern T0* ge1524ov24969982;
extern T0* ge1524ov24969679;
extern T0* ge1524ov24969516;
extern T0* ge1524ov24969980;
extern T0* ge1524ov24969514;
extern T0* ge1524ov24969981;
extern T0* ge1524ov24969515;
extern T0* ge1524ov24969977;
extern T0* ge1524ov24969677;
extern T0* ge1524ov24969511;
extern T0* ge1524ov24969975;
extern T0* ge1524ov24969509;
extern T0* ge1524ov24969976;
extern T0* ge1524ov24969510;
extern T0* ge1524ov24969978;
extern T0* ge1524ov24969678;
extern T0* ge1524ov24969512;
extern T0* ge1524ov24969979;
extern T0* ge1524ov24969513;
extern T0* ge1524ov24969973;
extern T0* ge1524ov24969676;
extern T0* ge1524ov24969507;
extern T0* ge1524ov24969974;
extern T0* ge1524ov24969508;
extern T0* ge1524ov24969946;
extern T0* ge1524ov24969654;
extern T0* ge1524ov24969480;
extern T0* ge1524ov24969945;
extern T0* ge1524ov24969479;
extern T0* ge1524ov24969797;
extern T0* ge1524ov24969331;
extern T0* ge1524ov24969800;
extern T0* ge1524ov24969581;
extern T0* ge1524ov24969334;
extern T0* ge1524ov24969790;
extern T0* ge1524ov24969577;
extern T0* ge1524ov24969324;
extern T0* ge1524ov24969793;
extern T0* ge1524ov24969579;
extern T0* ge1524ov24969327;
extern T0* ge1524ov24969896;
extern T0* ge1524ov24969633;
extern T0* ge1524ov24969430;
extern T0* ge1524ov24969897;
extern T0* ge1524ov24969431;
extern T0* ge1524ov24969796;
extern T0* ge1524ov24969330;
extern T0* ge1524ov24969993;
extern T0* ge1524ov24969684;
extern T0* ge1524ov24969527;
extern T0* ge1524ov24969949;
extern T0* ge1524ov24969657;
extern T0* ge1524ov24969483;
extern T0* ge1525ov24985863;
extern T0* ge1525ov24985864;
extern T0* ge1525ov24985902;
extern T0* ge1525ov24985865;
extern T0* ge1525ov24985816;
extern T0* ge1525ov24985903;
extern T0* ge1525ov24985866;
extern T0* ge1525ov24985911;
extern T0* ge1525ov24985912;
extern T0* ge1525ov24985913;
extern T0* ge1525ov24985817;
extern T0* ge1525ov24985914;
extern T0* ge1524ov24969884;
extern T0* ge1524ov24969626;
extern T0* ge1524ov24969418;
extern T0* ge1524ov24969885;
extern T0* ge1524ov24969627;
extern T0* ge1524ov24969419;
extern T0* ge1524ov24969881;
extern T0* ge1524ov24969415;
extern T0* ge1524ov24969932;
extern T0* ge1524ov24969647;
extern T0* ge1524ov24969466;
extern T0* ge1525ov24985834;
extern T0* ge1525ov24986065;
extern T0* ge1525ov24985969;
extern T0* ge1525ov24986082;
extern T0* ge1525ov24986048;
extern T0* ge1525ov24985971;
extern T0* ge1525ov24985846;
extern T0* ge1525ov24985892;
extern T0* ge1525ov24985970;
extern T0* ge1525ov24986071;
extern T0* ge1525ov24986057;
extern T0* ge1525ov24986091;
extern T0* ge1525ov24985894;
extern T0* ge1525ov24985800;
extern T0* ge1525ov24986075;
extern T0* ge1525ov24986072;
extern T0* ge1525ov24985910;
extern T0* ge1525ov24985944;
extern T0* ge1525ov24986061;
extern T0* ge1525ov24985908;
extern T0* ge1525ov24985909;
extern T0* ge1525ov24985947;
extern T0* ge1524ov24969931;
extern T0* ge1524ov24969646;
extern T0* ge1524ov24969465;
extern T0* ge1524ov24969935;
extern T0* ge1524ov24969648;
extern T0* ge1524ov24969469;
extern T0* ge1524ov24969934;
extern T0* ge1524ov24969468;
extern T0* ge1524ov24969930;
extern T0* ge1524ov24969464;
extern T0* ge1524ov24969929;
extern T0* ge1524ov24969463;
extern T0* ge1524ov24969928;
extern T0* ge1524ov24969462;
extern T0* ge1524ov24969927;
extern T0* ge1524ov24969461;
extern T0* ge1524ov24969926;
extern T0* ge1524ov24969460;
extern T0* ge1524ov24969952;
extern T0* ge1524ov24969486;
extern T0* ge1525ov24985905;
extern T0* ge1525ov24985906;
extern T0* ge1524ov24969962;
extern T0* ge1524ov24969667;
extern T0* ge1524ov24969496;
extern T0* ge1524ov24969961;
extern T0* ge1524ov24969666;
extern T0* ge1524ov24969495;
extern T0* ge1525ov24985787;
extern T0* ge1525ov24985775;
extern T0* ge1525ov24986070;
extern T0* ge1525ov24985799;
extern T0* ge1525ov24986047;
extern T0* ge1524ov24969958;
extern T0* ge1524ov24969663;
extern T0* ge1524ov24969492;
extern T0* ge1524ov24969910;
extern T0* ge1524ov24969444;
extern T0* ge1524ov24969762;
extern T0* ge1524ov24969296;
extern T0* ge1524ov24969874;
extern T0* ge1524ov24969620;
extern T0* ge1524ov24969408;
extern T0* ge1524ov24969873;
extern T0* ge1524ov24969619;
extern T0* ge1524ov24969407;
extern T0* ge1524ov24969871;
extern T0* ge1524ov24969618;
extern T0* ge1524ov24969405;
extern T0* ge1524ov24969872;
extern T0* ge1524ov24969406;
extern T0* ge1524ov24969870;
extern T0* ge1524ov24969617;
extern T0* ge1524ov24969404;
extern T0* ge1524ov24969869;
extern T0* ge1524ov24969616;
extern T0* ge1524ov24969403;
extern T0* ge1524ov24969875;
extern T0* ge1524ov24969622;
extern T0* ge1524ov24969409;
extern T0* ge1524ov24969698;
extern T0* ge1524ov24969232;
extern T0* ge1524ov24969811;
extern T0* ge1524ov24969586;
extern T0* ge1524ov24969345;
extern T0* ge1524ov24969899;
extern T0* ge1524ov24969433;
extern T0* ge1524ov24969702;
extern T0* ge1524ov24969236;
extern T0* ge1524ov24969700;
extern T0* ge1524ov24969234;
extern T0* ge1524ov24969699;
extern T0* ge1524ov24969233;
extern T0* ge1524ov24969951;
extern T0* ge1524ov24969485;
extern T0* ge1524ov24969950;
extern T0* ge1524ov24969484;
extern T0* ge1524ov24969760;
extern T0* ge1524ov24969294;
extern T0* ge1524ov24969911;
extern T0* ge1524ov24969445;
extern T0* ge1305ov21382196;
extern T0* ge1305ov21382198;
extern T0* ge1305ov21382199;
extern T0* ge1524ov24969941;
extern T0* ge1524ov24969651;
extern T0* ge1524ov24969475;
extern T0* ge1299ov21282826;
extern T0* ge1299ov21282825;
extern T0* ge1524ov24969939;
extern T0* ge1524ov24969650;
extern T0* ge1524ov24969473;
extern T0* ge1524ov24969938;
extern T0* ge1524ov24969472;
extern T0* ge1299ov21282827;
extern T0* ge1524ov24969942;
extern T0* ge1524ov24969476;
extern T0* ge1524ov24969940;
extern T0* ge1524ov24969474;
extern T0* ge1524ov24969892;
extern T0* ge1524ov24969630;
extern T0* ge1524ov24969426;
extern T0* ge1524ov24969894;
extern T0* ge1524ov24969428;
extern T0* ge1524ov24969924;
extern T0* ge1524ov24969645;
extern T0* ge1524ov24969458;
extern T0* ge1524ov24969925;
extern T0* ge1524ov24969459;
extern T0* ge1524ov24969923;
extern T0* ge1524ov24969644;
extern T0* ge1524ov24969457;
extern T0* ge1524ov24969713;
extern T0* ge1524ov24969543;
extern T0* ge1524ov24969247;
extern T0* ge1524ov24969712;
extern T0* ge1524ov24969246;
extern T0* ge1524ov24969711;
extern T0* ge1524ov24969542;
extern T0* ge1524ov24969245;
extern T0* ge1524ov24969917;
extern T0* ge1524ov24969451;
extern T0* ge1524ov24969715;
extern T0* ge1524ov24969249;
extern T0* ge1524ov24969716;
extern T0* ge1524ov24969250;
extern T0* ge1524ov24969710;
extern T0* ge1524ov24969541;
extern T0* ge1524ov24969244;
extern T0* ge1524ov24969916;
extern T0* ge1524ov24969450;
extern T0* ge1525ov24986056;
extern T0* ge1524ov24969687;
extern T0* ge1524ov24969529;
extern T0* ge1524ov24969221;
extern T0* ge1524ov24969948;
extern T0* ge1524ov24969656;
extern T0* ge1524ov24969482;
extern T0* ge1524ov24969947;
extern T0* ge1524ov24969655;
extern T0* ge1524ov24969481;
extern T0* ge1525ov24986051;
extern T0* ge1524ov24969955;
extern T0* ge1524ov24969659;
extern T0* ge1524ov24969489;
extern T0* ge1524ov24969953;
extern T0* ge1524ov24969658;
extern T0* ge1524ov24969487;
extern T0* ge1524ov24969851;
extern T0* ge1524ov24969609;
extern T0* ge1524ov24969385;
extern T0* ge1524ov24969858;
extern T0* ge1524ov24969613;
extern T0* ge1524ov24969392;
extern T0* ge1524ov24969857;
extern T0* ge1524ov24969391;
extern T0* ge1524ov24969856;
extern T0* ge1524ov24969612;
extern T0* ge1524ov24969390;
extern T0* ge1524ov24969855;
extern T0* ge1524ov24969389;
extern T0* ge1524ov24969854;
extern T0* ge1524ov24969611;
extern T0* ge1524ov24969388;
extern T0* ge1524ov24969853;
extern T0* ge1524ov24969387;
extern T0* ge1524ov24969852;
extern T0* ge1524ov24969610;
extern T0* ge1524ov24969386;
extern T0* ge1524ov24969850;
extern T0* ge1524ov24969384;
extern T0* ge1524ov24969919;
extern T0* ge1524ov24969453;
extern T0* ge1524ov24969761;
extern T0* ge1524ov24969295;
extern T0* ge1524ov24969866;
extern T0* ge1524ov24969614;
extern T0* ge1524ov24969400;
extern T0* ge1524ov24969864;
extern T0* ge1524ov24969398;
extern T0* ge1524ov24969862;
extern T0* ge1524ov24969396;
extern T0* ge1524ov24969861;
extern T0* ge1524ov24969395;
extern T0* ge1524ov24969887;
extern T0* ge1524ov24969628;
extern T0* ge1524ov24969421;
extern T0* ge1524ov24969889;
extern T0* ge1524ov24969629;
extern T0* ge1524ov24969423;
extern T0* ge1524ov24969879;
extern T0* ge1524ov24969623;
extern T0* ge1524ov24969413;
extern T0* ge1524ov24969933;
extern T0* ge1524ov24969467;
extern T0* ge1524ov24969865;
extern T0* ge1524ov24969399;
extern T0* ge1524ov24969863;
extern T0* ge1524ov24969397;
extern T0* ge1524ov24969860;
extern T0* ge1524ov24969394;
extern T0* ge1524ov24969859;
extern T0* ge1524ov24969393;
extern T0* ge1524ov24969883;
extern T0* ge1524ov24969417;
extern T0* ge1524ov24969878;
extern T0* ge1524ov24969412;
extern T0* ge1524ov24969918;
extern T0* ge1524ov24969452;
extern T0* ge1524ov24969867;
extern T0* ge1524ov24969615;
extern T0* ge1524ov24969401;
extern T0* ge1524ov24969868;
extern T0* ge1524ov24969402;
extern T0* ge1524ov24969890;
extern T0* ge1524ov24969424;
extern T0* ge1524ov24969891;
extern T0* ge1524ov24969425;
extern T0* ge1524ov24969909;
extern T0* ge1524ov24969640;
extern T0* ge1524ov24969443;
extern T0* ge1524ov24969914;
extern T0* ge1524ov24969448;
extern T0* ge1524ov24969690;
extern T0* ge1524ov24969531;
extern T0* ge1524ov24969224;
extern T0* ge1524ov24969846;
extern T0* ge1524ov24969606;
extern T0* ge1524ov24969380;
extern T0* ge1524ov24969845;
extern T0* ge1524ov24969379;
extern T0* ge1524ov24969844;
extern T0* ge1524ov24969378;
extern T0* ge1524ov24969843;
extern T0* ge1524ov24969377;
extern T0* ge1524ov24969842;
extern T0* ge1524ov24969376;
extern T0* ge1524ov24969841;
extern T0* ge1524ov24969605;
extern T0* ge1524ov24969375;
extern T0* ge1525ov24986092;
extern T0* ge1524ov24969895;
extern T0* ge1524ov24969632;
extern T0* ge1524ov24969429;
extern T0* ge1524ov24969971;
extern T0* ge1524ov24969675;
extern T0* ge1524ov24969505;
extern T0* ge1524ov24969972;
extern T0* ge1524ov24969506;
extern T0* ge1524ov24969903;
extern T0* ge1524ov24969637;
extern T0* ge1524ov24969437;
extern T0* ge1524ov24969902;
extern T0* ge1524ov24969636;
extern T0* ge1524ov24969436;
extern T0* ge1524ov24969956;
extern T0* ge1524ov24969660;
extern T0* ge1524ov24969490;
extern T0* ge1525ov24985798;
extern T0* ge1525ov24985801;
extern T0* ge1525ov24986042;
extern T0* ge1524ov24969691;
extern T0* ge1524ov24969532;
extern T0* ge1524ov24969225;
extern T0* ge1524ov24969692;
extern T0* ge1524ov24969533;
extern T0* ge1524ov24969226;
extern T0* ge1524ov24969819;
extern T0* ge1524ov24969591;
extern T0* ge1524ov24969353;
extern T0* ge1524ov24969745;
extern T0* ge1524ov24969560;
extern T0* ge1524ov24969279;
extern T0* ge1524ov24969746;
extern T0* ge1524ov24969280;
extern T0* ge1524ov24969821;
extern T0* ge1524ov24969592;
extern T0* ge1524ov24969355;
extern T0* ge1524ov24969822;
extern T0* ge1524ov24969356;
extern T0* ge1524ov24969912;
extern T0* ge1524ov24969446;
extern T0* ge1524ov24969820;
extern T0* ge1524ov24969354;
extern T0* ge1524ov24969823;
extern T0* ge1524ov24969593;
extern T0* ge1524ov24969357;
extern T0* ge1524ov24969799;
extern T0* ge1524ov24969333;
extern T0* ge1524ov24969801;
extern T0* ge1524ov24969335;
extern T0* ge1524ov24969791;
extern T0* ge1524ov24969325;
extern T0* ge1524ov24969794;
extern T0* ge1524ov24969328;
extern T0* ge1524ov24969792;
extern T0* ge1524ov24969578;
extern T0* ge1524ov24969326;
extern T0* ge1524ov24969798;
extern T0* ge1524ov24969332;
extern T0* ge1524ov24969848;
extern T0* ge1524ov24969608;
extern T0* ge1524ov24969382;
extern T0* ge1524ov24969849;
extern T0* ge1524ov24969383;
extern T0* ge1524ov24969847;
extern T0* ge1524ov24969607;
extern T0* ge1524ov24969381;
extern T0* ge1525ov24985849;
extern T0* ge1524ov24969709;
extern T0* ge1524ov24969243;
extern T0* ge1525ov24985845;
extern T0* ge1524ov24969825;
extern T0* ge1524ov24969359;
extern T0* ge1524ov24969992;
extern T0* ge1524ov24969683;
extern T0* ge1524ov24969526;
extern T0* ge1524ov24969990;
extern T0* ge1524ov24969524;
extern T0* ge1524ov24969991;
extern T0* ge1524ov24969525;
extern T0* ge1524ov24969987;
extern T0* ge1524ov24969681;
extern T0* ge1524ov24969521;
extern T0* ge1524ov24969985;
extern T0* ge1524ov24969519;
extern T0* ge1524ov24969986;
extern T0* ge1524ov24969520;
extern T0* ge1524ov24969988;
extern T0* ge1524ov24969682;
extern T0* ge1524ov24969522;
extern T0* ge1524ov24969989;
extern T0* ge1524ov24969523;
extern T0* ge1524ov24969983;
extern T0* ge1524ov24969680;
extern T0* ge1524ov24969517;
extern T0* ge1524ov24969984;
extern T0* ge1524ov24969518;
extern T0* ge1654ov27099149;
extern T0* ge1654ov27099148;
extern T0* ge313ov5128215;
extern T0* ge313ov5128216;
extern T0* ge313ov5128217;
extern T0* ge395ov5963777;
extern T0* ge393ov5963777;
extern T0* ge380ov5963777;
extern T0* ge1523ov24952842;
extern T0* ge1523ov24952838;
extern T0* ge1523ov24952837;
extern T0* ge1523ov24952841;
extern T0* ge1523ov24952836;
extern T0* ge1523ov24952840;
extern T0* ge1523ov24952835;
extern T0* ge1523ov24952839;
extern T0* ge1523ov24952834;
extern T0* ge868ov14221324;
extern T0* ge919ov15056956;
extern T0* ge919ov15056954;
extern T0* ge877ov14368773;
extern T0* ge877ov14368774;
extern T0* ge877ov14368775;
extern T0* ge919ov15056945;
extern T0* ge919ov15056957;
extern T0* ge1305ov21382117;
extern T0* ge1305ov21382129;
extern T0* ge1309ov21446667;
extern T0* ge1305ov21382190;
extern T0* ge1305ov21382191;
extern T0* ge1305ov21382171;
extern T0* ge1305ov21382187;
extern T0* ge1305ov21382175;
extern T0* ge1305ov21382176;
extern T0* ge1305ov21382177;
extern T0* ge1305ov21382178;
extern T0* ge1305ov21382172;
extern T0* ge1305ov21382179;
extern T0* ge1305ov21382180;
extern T0* ge1305ov21382181;
extern T0* ge1305ov21382182;
extern T0* ge1305ov21382173;
extern T0* ge1305ov21382188;
extern T0* ge1305ov21382183;
extern T0* ge1305ov21382184;
extern T0* ge1305ov21382185;
extern T0* ge1305ov21382174;
extern T0* ge1305ov21382186;
extern T0* ge1305ov21382189;
extern T0* ge1685ov27607043;
extern T0* ge1685ov27607045;
extern T0* ge1205ov19742769;
extern T0* ge1205ov19742770;
extern T0* ge1305ov21382082;
extern T0* ge1305ov21382083;
extern T0* ge1305ov21382081;
extern T0* ge1305ov21382079;
extern T0* ge1305ov21382080;
extern T0* ge1305ov21382087;
extern T0* ge1305ov21382088;
extern T0* ge1305ov21382086;
extern T0* ge1305ov21382084;
extern T0* ge1305ov21382085;
extern T0* ge1305ov21382089;
extern T0* ge1305ov21382090;
extern T0* ge1305ov21382091;
extern T0* ge1305ov21382167;
extern T0* ge1305ov21382166;
extern T0* ge1305ov21382150;
extern T0* ge1305ov21382151;
extern T0* ge1305ov21382152;
extern T0* ge1305ov21382153;
extern T0* ge1305ov21382168;
extern T0* ge1305ov21382154;
extern T0* ge1305ov21382155;
extern T0* ge1305ov21382156;
extern T0* ge1305ov21382157;
extern T0* ge1305ov21382158;
extern T0* ge1305ov21382159;
extern T0* ge1305ov21382160;
extern T0* ge1305ov21382161;
extern T0* ge1305ov21382162;
extern T0* ge1305ov21382163;
extern T0* ge1305ov21382164;
extern T0* ge1305ov21382165;
extern T0* ge1305ov21382169;
extern T0* ge1305ov21382170;
extern T0* ge1331ov21807112;
extern T0* ge1331ov21807111;
extern T0* ge1350ov22118403;
extern T0* ge1338ov21921795;
extern T0* ge782ov11436036;
extern T0* ge768ov11436036;
extern T0* ge774ov11436036;
extern T0* ge773ov11436036;
extern T0* ge772ov11436036;
extern T0* ge763ov11436036;
extern T0* ge762ov11436036;
extern T0* ge779ov11436036;
extern T0* ge792ov11436036;
extern T0* ge1602ov11436036;
extern T0* ge703ov11436036;
extern T0* ge702ov11436036;
extern T0* ge1596ov11436036;
extern T0* ge1609ov11436036;
extern T0* ge1608ov11436036;
extern T0* ge1604ov11436036;
extern T0* ge1606ov11436036;
extern T0* ge1611ov11436036;
extern T0* ge1603ov11436036;
extern T0* ge1615ov11436036;
extern T0* ge1605ov11436036;
extern T0* ge1599ov11436036;
extern T0* ge697ov11436036;
extern T0* ge700ov11436036;
extern T0* ge707ov11436036;
extern T0* ge696ov11436036;
extern T0* ge390ov6389770;
extern T0* ge377ov6176778;
extern T0* geic24985601;
extern T0* geic24985602;
extern T0* geic24985603;
extern T0* geic14237697;
extern void GE_init_const1(void);
extern void GE_init_const2(void);
extern void GE_init_const3(void);
extern void GE_init_const4(void);
extern void GE_init_const5(void);
extern void GE_init_const6(void);
extern void GE_init_const7(void);
extern void GE_init_const8(void);
extern void GE_init_const9(void);
extern void GE_init_const10(void);
extern void GE_init_const11(void);
extern void GE_init_const12(void);
extern void GE_init_const13(void);
extern void GE_init_const14(void);
extern void GE_init_const15(void);
extern void GE_init_const16(void);
extern void GE_init_const17(void);
extern void GE_init_const18(void);
extern void GE_init_const19(void);
extern void GE_init_const20(void);
extern void GE_init_const21(void);
extern void GE_init_const22(void);
extern void GE_init_const23(void);
extern void GE_init_const(void);

#ifdef __cplusplus
}
#endif


/*
	description:

		"C functions used to implement class C_DATE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_TIME_H
#define GE_TIME_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#if defined _XOPEN_UNIX || defined __USE_XOPEN || defined __USE_BSD
#define HAS_GETTIMEOFDAY
#else
#ifndef WIN32
#define HAS_GETTIMEOFDAY
#endif
#endif

#ifdef HAS_GETTIMEOFDAY
/*
	OpenBSD does not support 'ftime' unless -lcompat is specified.
	Use the recommended XSI (X/Open System Interface) extension instead.
*/
#include <sys/time.h>
#include <sys/types.h>
#define GE_ftime(p) gettimeofday((struct timeval*)(p),((void*)0))
#define GE_timebsz sizeof(struct timeval)
#define GE_timebmillitm(p) (((struct timeval*)(p))->tv_usec/1000)
#define GE_timebtime(p) ((struct timeval*)(p))->tv_sec
#else
#include <sys/timeb.h>
extern void ftime(struct timeb *); /* Needed for lcc-win32 */
#define GE_ftime(p) ftime((struct timeb*)(p))
#define GE_timebsz sizeof(struct timeb)
#define GE_timebmillitm(p) ((struct timeb*)(p))->millitm
#define GE_timebtime(p) ((struct timeb*)(p))->time
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CECIL_H
#define EIF_CECIL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void (*EIF_PROCEDURE)(EIF_REFERENCE, ...);
#define EIF_PROC EIF_PROCEDURE
typedef EIF_INTEGER_32 (*EIF_INTEGER_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Integer 32 bits */
#define EIF_INTEGER_FUNCTION EIF_INTEGER_32_FUNCTION
typedef EIF_REFERENCE (*EIF_REFERENCE_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Reference */
typedef EIF_POINTER (*EIF_POINTER_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Pointer */
typedef EIF_BOOLEAN (*EIF_BOOLEAN_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Boolean */
typedef EIF_CHARACTER_8 (*EIF_CHARACTER_8_FUNCTION)(EIF_REFERENCE, ...); /* Returns char */
#define EIF_CHARACTER_FUNCTION EIF_CHARACTER_8_FUNCTION
typedef EIF_REAL_64 (*EIF_REAL_64_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Double */
#define EIF_DOUBLE_FUNCTION EIF_REAL_64_FUNCTION
typedef EIF_REAL_32 (*EIF_REAL_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Real */
#define EIF_REAL_FUNCTION EIF_REAL_32_FUNCTION

extern EIF_PROCEDURE eif_procedure(char* rout, EIF_TYPE_ID cid);
#define eif_proc eif_procedure /* Use `eif_procedure' instead */
extern EIF_INTEGER_FUNCTION eif_integer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REFERENCE_FUNCTION eif_reference_function(char* rout, EIF_TYPE_ID cid);
extern EIF_POINTER_FUNCTION eif_pointer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_BOOLEAN_FUNCTION eif_boolean_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REAL_64_FUNCTION eif_real_64_function(char* rout, EIF_TYPE_ID cid);
#define eif_double_function(rout,cid) eif_real_64_function((rout),(cid))
extern EIF_REAL_32_FUNCTION eif_real_32_function(char* rout, EIF_TYPE_ID cid);
#define eif_real_function(rout,cid) eif_real_32_function((rout),(cid))
extern EIF_CHARACTER_8_FUNCTION eif_character_8_function(char* rout, EIF_TYPE_ID cid);
#define eif_character_function(rout,cid) eif_character_8_function((rout),(cid))
extern EIF_OBJECT eif_create(EIF_TYPE_ID cid);
extern EIF_TYPE_ID eif_type_id(char* type_string);
extern EIF_INTEGER eifaddr_offset(EIF_REFERENCE object, char *name, int * const ret);
#define eif_string(s) RTMS(s)
#define makestr(s,c) RTMS_EX((s),(c))
#define eifaddr(object,name,ret) ((void *) ((char *) object + eifaddr_offset (object, name, ret)))
#define eif_field(object,name,type) *(type *)(eifaddr(object,name, NULL)) /* Obsolete. Use "eif_attribute" instead. */
#define eif_attribute(object,name,type,ret) *(type *)(eifaddr(object,name,ret)) /* Returns the attribute of an object. Return status in "ret".*/

/* Miscellaneous useful functions. */

/* Make an Eiffel array from a C array:
 * `eif_array' is the direct reference to the Eiffel array.
 * `c_array' is the C array.
 * `nelts' the number of elements to copy in the eiffel array, it has to
 * be equal to `eif_array.count'.
 * type is an Eiffel type.
 */
#define eif_make_from_c(eif_array, c_array, nelts, type) \
	{ \
		EIF_REFERENCE area = eif_field(eif_array, "area", EIF_REFERENCE); \
		memcpy((type *)area, c_array, nelts * sizeof(type));\
	}

#define eif_type eiftype /* Dynamic type ID */
extern EIF_TYPE_ID eiftype(EIF_OBJECT object); /* Give dynamic type of EIF_OBJECT. Obsolete, use "eif_type_by_object". */
extern EIF_TYPE_ID eif_type_by_reference(EIF_REFERENCE object);
extern EIF_TYPE_INDEX eif_gen_param_id(EIF_TYPE_INDEX dftype, uint32_t pos);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_PLUG_H
#define EIF_PLUG_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int nstcall;	/* Nested call global variable: signals a nested call and
					 * trigger an invariant check in generated C routines  */

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement Thread support"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_THREADS_H
#define EIF_THREADS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef EIF_CECIL_H
#include "eif_cecil.h"
#endif
#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifdef GE_USE_THREADS
#ifndef GE_THREAD_H
#include "ge_thread.h"
#endif
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifndef GE_USE_THREADS

/*
 * Empty stubs for EiffelThread library so that it may be compiled against a non-multithreaded run-time.
 */

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() NULL

/* THREAD_CONTROL */
#define eif_thr_yield()
#define eif_thr_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj, init_func, set_terminated_func, attr)
#define eif_thr_wait(obj,get_terminated)
#define eif_thr_wait_with_timeout(obj,get_terminated,tms) EIF_TRUE
#define eif_thr_last_thread() NULL
#define eif_thr_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() 0
#define eif_thr_min_priority() 0
#define eif_thr_max_priority() 0

/* MUTEX */
#define eif_thr_mutex_create() NULL
#define eif_thr_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) EIF_TRUE
#define eif_thr_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() NULL
#define eif_thr_cond_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr)
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) 1
#define eif_thr_cond_destroy(a_cond_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(a_count) NULL
#define eif_thr_sem_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) EIF_TRUE
#define eif_thr_sem_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() NULL
#define eif_thr_rwl_rdlock(a_read_write_lock_pointer)
#define eif_thr_rwl_unlock(a_read_write_lock_pointer)
#define eif_thr_rwl_wrlock(a_read_write_lock_pointer)
#define eif_thr_rwl_destroy(a_read_write_lock_pointer)

#else

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() GE_thread_id()

/* THREAD_CONTROL */
#define eif_thr_yield() GE_thread_yield()
#define eif_thr_join_all() GE_thread_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj,init_func,set_terminated_func,attr) GE_thread_create_with_attr((current_obj),(void (*)(EIF_REFERENCE))(init_func),(void (*)(EIF_REFERENCE,EIF_BOOLEAN))(set_terminated_func),(EIF_THR_ATTR_TYPE*)(attr))
#define eif_thr_wait(obj,get_terminated) GE_thread_wait((obj),(EIF_BOOLEAN (*)(EIF_REFERENCE))(get_terminated))
#define eif_thr_wait_with_timeout(obj,get_terminated,tms) GE_thread_wait_with_timeout((obj),(EIF_BOOLEAN (*)(EIF_REFERENCE))(get_terminated),(tms))
#define eif_thr_last_thread() GE_last_thread_created()
#define eif_thr_exit() GE_thread_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() GE_thread_default_priority()
#define eif_thr_min_priority() GE_thread_min_priority()
#define eif_thr_max_priority() GE_thread_max_priority()

/* MUTEX */
#define eif_thr_mutex_create() GE_mutex_create()
#define eif_thr_mutex_lock(a_mutex_pointer) GE_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) GE_mutex_try_lock(a_mutex_pointer)
#define eif_thr_mutex_unlock(a_mutex_pointer) GE_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer) GE_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() GE_condition_variable_create()
#define eif_thr_cond_broadcast(a_cond_ptr) GE_condition_variable_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr) GE_condition_variable_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr) GE_condition_variable_wait((a_cond_ptr),(a_mutex_ptr))
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) GE_condition_variable_wait_with_timeout((a_cond_ptr),(a_mutex_ptr),(a_timeout))
#define eif_thr_cond_destroy(a_cond_ptr) GE_condition_variable_destroy(a_cond_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(a_count) GE_semaphore_create(a_count)
#define eif_thr_sem_wait(a_sem_pointer) GE_semaphore_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer) GE_semaphore_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) GE_semaphore_try_wait(a_sem_pointer)
#define eif_thr_sem_destroy(a_sem_pointer) GE_semaphore_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() GE_read_write_lock_create()
#define eif_thr_rwl_rdlock(a_read_write_lock_pointer) GE_read_write_lock_read_lock(a_read_write_lock_pointer)
#define eif_thr_rwl_unlock(a_read_write_lock_pointer) GE_read_write_lock_unlock(a_read_write_lock_pointer)
#define eif_thr_rwl_wrlock(a_read_write_lock_pointer) GE_read_write_lock_write_lock(a_read_write_lock_pointer)
#define eif_thr_rwl_destroy(a_read_write_lock_pointer) GE_read_write_lock_destroy(a_read_write_lock_pointer)

/* WEL */
#ifdef EIF_WINDOWS
#define eif_thr_create_wel_per_thread_data(a_size) GE_thread_create_wel_per_thread_data(a_size)
#endif

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CONSOLE_H
#define EIF_CONSOLE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER console_def(EIF_INTEGER file);
extern EIF_BOOLEAN console_eof(FILE* fp);
extern EIF_CHARACTER_8 console_separator(FILE* f);
extern void console_ps(FILE* f, char* str, EIF_INTEGER len);
extern void console_pr(FILE* f, EIF_REAL_32 number);
extern void console_pc(FILE* f, EIF_CHARACTER_8 c);
extern void console_pd(FILE* f, EIF_REAL_64 val);
extern void console_pi(FILE* f, EIF_INTEGER number);
extern void console_tnwl(FILE* f);
extern EIF_CHARACTER_8 console_readchar(FILE* f);
extern EIF_REAL_32 console_readreal(FILE* f);
extern EIF_INTEGER console_readint(FILE* f);
extern EIF_REAL_64 console_readdouble(FILE* f);
extern EIF_INTEGER console_readword(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER console_readline(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern void console_next_line(FILE* f);
extern EIF_INTEGER console_readstream(FILE* f, char* s, EIF_INTEGER bound);
extern void console_file_close (FILE* f);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class FILE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_FILE_H
#define EIF_FILE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <time.h>
#include <sys/stat.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Let's define the stat structure for our platforms. */
/* The definition is the same for both ANSI and Unicode versions on Windows. */
#ifdef EIF_WINDOWS
#	ifdef __LCC__
#		define rt_stat_buf	struct stat
#	elif defined EIF_64_BITS
#		define rt_stat_buf	struct _stat64
#	else
#		define rt_stat_buf	struct _stat64i32
#	endif
#else
#	define rt_stat_buf		struct stat
#endif

/*
 * Create directory `dirname'.
 */
extern void eif_file_mkdir(EIF_FILENAME dirname);

/*
 * Rename file `from' into `to'.
 */
extern void eif_file_rename(EIF_FILENAME from, EIF_FILENAME  to);

/*
 * Link file `from' into `to'.
 */
extern void eif_file_link(EIF_FILENAME from, EIF_FILENAME to);

/*
 * Delete file or directory `name'.
 */
extern void eif_file_unlink(EIF_FILENAME name);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_reopen(EIF_FILENAME name, int how, FILE *old);

/*
 * Close the file.
 */
extern void eif_file_close(FILE *fp);

/*
 * Flush data held in stdio buffer.
 */
extern void eif_file_flush(FILE *fp);

/*
 * Return the associated file descriptor.
 */
extern EIF_INTEGER eif_file_fd(FILE *f);

/*
 * Get a character from `f'.
 */
extern EIF_CHARACTER_8 eif_file_gc(FILE *f);

/*
 * Get a string from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters.
 */
extern EIF_INTEGER eif_file_gs(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Read min (bound, remaining bytes in file) characters into `s' and
 * return the number of characters read.
 */
extern EIF_INTEGER eif_file_gss(FILE *f, char *s, EIF_INTEGER bound);

/*
 * Get a word from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters. Any leading
 * spaces are skipped.
 */
extern EIF_INTEGER eif_file_gw(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Look ahead one character. If EOF, return 0.
 */
extern EIF_CHARACTER_8 eif_file_lh(FILE *f);

/*
 * Size of file `fp'.
 */
extern EIF_INTEGER eif_file_size(FILE *fp);

/*
 * Read upto next input line.
 */
extern void eif_file_tnil(FILE *f);

/*
 * Current position within file.
 */
extern EIF_INTEGER eif_file_tell(FILE *f);

/*
 * Touch file `name' by setting both access and modification time to the
 * current time stamp. This external function exists only because there
 * is no way within UNIX_FILE to get the current time stamp. Otherwise,
 * we could simply call file_utime.
 */
extern void eif_file_touch(EIF_FILENAME name);

/*
 * Modify the modification and/or the access time stored in the file's
 * inode. The 'how' parameter tells which attributes should be set.
 */
extern void eif_file_utime(EIF_FILENAME name, time_t stamp, int how);

/*
 * This is an encapsulation of the stat() system call. The routine either
 * succeeds and returns or fails and raises the appropriate exception.
 */
extern int eif_file_stat(EIF_FILENAME path, rt_stat_buf *buf, int follow);

/*
 * Change permissions of file `name', using an interface like chmod(1).
 * The flag is true if permissions are to be added, 0 to remove them.
 */
extern void eif_file_perm(EIF_FILENAME name, char *who, char *what, int flag);

/*
 * Change permission mode on file `path'.
 */
extern void eif_file_chmod(EIF_FILENAME path, int mode);

/*
 * Change the owner of the file to `uid'.
 */
extern void eif_file_chown(EIF_FILENAME name, int uid);

/*
 * Change the group of the file to `gid'.
 */
extern void eif_file_chgrp(EIF_FILENAME name, int gid);

/*
 * Put new_line onto `f'.
 */
extern void eif_file_tnwl(FILE *f);

/*
 * Append a copy of `other' to `f'.
 */
extern void eif_file_append(FILE *f, FILE *other, EIF_INTEGER l);

/*
 * Write string `str' on `f'.
 */
extern void eif_file_ps(FILE *f, char *str, EIF_INTEGER len);

/*
 * Write character `c' on `f'.
 */
extern void eif_file_pc(FILE *f, char c);

/*
 * Go to absolute position `pos' counted from start.
 */
extern void eif_file_go(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from end.
 */
extern void eif_file_recede(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from current position.
 */
extern void eif_file_move(FILE *f, EIF_INTEGER pos);

/*
 * End of file.
 */
extern EIF_BOOLEAN eif_file_feof(FILE *fp);

/*
 * Test whether file exists or not. If `name' represents a symbolic link,
 * it will check that pointed file does exist.
 */
extern EIF_BOOLEAN eif_file_exists(EIF_FILENAME name);

/*
 * Test whether file exists or not without following the symbolic link
 * if `name' represents one.
 */
extern EIF_BOOLEAN eif_file_path_exists(EIF_FILENAME name);

/*
 * Check whether access permission `op' are possible on file `name' using
 * real UID and real GID. This is probably only useful to setuid or setgid
 * programs.
 */
extern EIF_BOOLEAN eif_file_access(EIF_FILENAME name, EIF_INTEGER op);

/*
 * Check whether the file `path' may be created: we need write permissions
 * in the parent directory and there must not be any file bearing that name
 * with no write permissions...
 */
extern EIF_BOOLEAN eif_file_creatable(EIF_FILENAME path, EIF_INTEGER nbytes);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gi(FILE *f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_gr(FILE *f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gd(FILE *f);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pi(FILE *f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pr(FILE *f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pd(FILE *f, EIF_REAL_64 val);

/*
 * Size of the stat structure. This is used by the Eiffel side to create
 * the area (special object) which will play the role of a stat buffer
 * structure.
 */
extern EIF_INTEGER stat_size(void);

/*
 * Check file permissions using effective UID and effective GID. The
 * current permission mode is held in the st_mode field of the stat()
 * buffer structure `buf'.
 */
extern EIF_BOOLEAN eif_file_eaccess(rt_stat_buf *buf, int op);

/*
 * Perform the field dereferencing from the appropriate stat structure,
 * which Eiffel cannot do directly.
 */
extern EIF_INTEGER eif_file_info(rt_stat_buf *buf, int op);

/*
 * Return the Eiffel string filled in with the name associated with `uid'
 * if found in /etc/passwd. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_owner(int uid);

/*
 * Return the Eiffel string filled in with the name associated with `gid'
 * if found in /etc/group. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_group(int gid);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gib(FILE* f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_grb(FILE* f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gdb(FILE* f);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_binary_reopen(EIF_FILENAME name, int how, FILE* old);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pib(FILE* f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_prb(FILE* f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pdb(FILE* f, EIF_REAL_64 val);

/*
 * Modification time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_date(EIF_FILENAME  name);

/*
 * Access time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_access_date(EIF_FILENAME  name);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXCEPTIONS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EXCEPT_H
#define EIF_EXCEPT_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#include <errno.h>

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define EN_VOID		GE_EX_VOID			/* Feature applied to void reference */
#define EN_MEM		GE_EX_MEM			/* No more memory */
#define EN_PRE		GE_EX_PRE			/* Pre-condition violated */
#define EN_POST		GE_EX_POST			/* Post-condition violated */
#define EN_FLOAT	GE_EX_FLOAT			/* Floating point exception (signal SIGFPE) */
#define EN_CINV		GE_EX_CINV			/* Class invariant violated */
#define EN_CHECK	GE_EX_CHECK			/* Assertion violated */
#define EN_FAIL		GE_EX_FAIL			/* Routine failure */
#define EN_WHEN		GE_EX_WHEN			/* Unmatched inspect value */
#define EN_VAR		GE_EX_VAR			/* Non-decreasing loop variant */
#define EN_LINV		GE_EX_LINV			/* Loop invariant violated */
#define EN_SIG		GE_EX_SIG			/* Operating system signal */
#define EN_BYE		GE_EX_BYE			/* Eiffel run-time panic */
#define EN_RESC		GE_EX_RESC			/* Exception in rescue clause */
#define EN_OMEM		GE_EX_OMEM			/* Out of memory (cannot be ignored) */
#define EN_RES		GE_EX_RES			/* Resumption failed (retry did not succeed) */
#define EN_CDEF		GE_EX_CDEF			/* Create on deferred */
#define EN_EXT		GE_EX_EXT			/* External event */
#define EN_VEXP		GE_EX_VEXP			/* Void assigned to expanded */
#define EN_HDLR		GE_EX_HDLR			/* Exception in signal handler */
#define EN_IO		GE_EX_IO			/* I/O error */
#define EN_SYS		GE_EX_SYS			/* Operating system error */
#define EN_RETR		GE_EX_RETR			/* Retrieval error */
#define EN_PROG		GE_EX_PROG			/* Developer exception */
#define EN_FATAL	GE_EX_FATAL			/* Eiffel run-time fatal error */
#define EN_DOL		GE_EX_DOL			/* $ applied to melted feature */
#define EN_ISE_IO	GE_EX_ISE_IO		/* I/O error raised by the ISE Eiffel runtime */
#define EN_COM		GE_EX_COM			/* COM error raised by EiffelCOM runtime */
#define EN_RT_CHECK	GE_EX_RT_CHECK		/* Runtime check error such as out-of-bound array access */
#define EN_OLD		GE_EX_OLD			/* Old violation */
#define EN_SEL		GE_EX_SEL			/* Serialization failure */
#define EN_DIRTY	GE_EX_DIRTY			/* SCOOP processor dirty exception. */
#define EN_NEX		GE_EX_NEX			/* Number of internal exceptions */

/*
 * Raise an Eiffel exception.
 */
extern void eraise(const char* name, long code);

/*
 * Raise an Eiffel exception of the given code with no associated tag.
 */
extern void xraise(int code);

/*
 * Raise an "Operating system error" exception.
 */
extern void esys(void);

/*
 * As a special case, an I/O error is raised when a system call which is I/O bound fails.
 */
extern void eise_io(const char* tag);

/*
 * Raise a "No more memory" exception.
 */
extern void enomem(void);

/*
 * Raise EiffelCOM exception.
 */
extern void com_eraise(const char* tag, long num);

/*
 * Terminate execution with exit status `code',
 * without triggering an exception.
 */
extern void esdie(int code);

/*
 * Exception tag associated with `code'.
 * This is a duplication from Eiffel classes, but still used for trace printing and in EiffelCom.
 */
extern EIF_REFERENCE eename(long except);

/*
 * Is exception `ex' defined?
 * Used in EiffelCOM.
 */
extern char eedefined(long ex);

/*
 * Enable/diable printing of the exception trace.
 * Per thead information.
 */
extern void eetrace(char b);

/*
 * Is current execution during rescue?
 */
extern EIF_BOOLEAN eif_is_in_rescue(void);

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void set_windows_exception_filter(void);
#endif

/*
 * Used in EiffelCOM.
 */
#define echval GE_current_context()->exception_code
#define echtg GE_current_context()->exception_tag

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class REAL"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_REAL_H
#define GE_REAL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <math.h>

#ifndef GE_power
#define GE_power(x,y) pow((x),(y))
#endif
#define GE_ceiling(x) ceil(x)
#define GE_floor(x) floor(x)

extern EIF_NATURAL_32 GE_real_32_to_bits (EIF_REAL_32 v);
extern EIF_NATURAL_64 GE_real_64_to_bits (EIF_REAL_64 v);
extern EIF_REAL_32 GE_real_32_from_bits (EIF_NATURAL_32 v);
extern EIF_REAL_64 GE_real_64_from_bits (EIF_NATURAL_64 v);

#define GE_real_32_is_nan(v) ((v)!=(v) ? EIF_TRUE : ((GE_real_32_to_bits(v) & ~GE_nat32(0x80000000)) > GE_nat32(0x7FF00000)))
#define GE_real_64_is_nan(v) ((v)!=(v) ? EIF_TRUE : ((GE_real_64_to_bits(v) & ~GE_nat64(0x8000000000000000)) > GE_nat64(0x7FF0000000000000)))
#define GE_real_32_is_negative_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0xFF800000))
#define GE_real_64_is_negative_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0xFFF0000000000000))
#define GE_real_32_is_positive_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0x7F800000))
#define GE_real_64_is_positive_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0x7FF0000000000000))
#define GE_real_32_nan GE_real_32_from_bits(GE_nat32(0x7FC00000))
#define GE_real_64_nan GE_real_64_from_bits(GE_nat64(0x7FF8000000000000))
#define GE_real_32_negative_infinity GE_real_32_from_bits(GE_nat32(0xFF800000))
#define GE_real_64_negative_infinity GE_real_64_from_bits(GE_nat64(0xFFF0000000000000))
#define GE_real_32_positive_infinity GE_real_32_from_bits(GE_nat32(0x7F800000))
#define GE_real_64_positive_infinity GE_real_64_from_bits(GE_nat64(0x7FF0000000000000))

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_GLOBALS_H
#define EIF_GLOBALS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif
#ifndef EIF_THREADS_H
#include "eif_threads.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef GE_USE_THREADS
#define EIF_GET_CONTEXT \
	GE_context* eif_globals = GE_current_context();
#else
#define EIF_GET_CONTEXT
#endif

#define GTCX EIF_GET_CONTEXT

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C declarations for the ISE Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EIFFEL_H
#define EIF_EIFFEL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_STRING_H
#include "ge_string.h"
#endif
#ifndef EIF_GLOBALS_H
#include "eif_globals.h"
#endif
#ifndef EIF_EXCEPT_H
#include "eif_except.h"
#endif

#endif
/*
	description:

		"C functions used to access DLLs"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_DLL_H
#define GE_DLL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

#include <windows.h>

/* DLL declarations */
#define GE_load_dll(name) LoadLibraryA((LPCSTR)(name))

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_MISC_H
#define EIF_MISC_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_DLL_H
#include "ge_dll.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER eif_system(EIF_NATIVE_CHAR* s);
extern void eif_system_asynchronous(EIF_NATIVE_CHAR* cmd);
extern void eif_sleep(EIF_INTEGER_64);

#ifdef EIF_WINDOWS
/* DLL declarations */
#define eif_load_dll(name) GE_load_dll(name)
#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class DIRECTORY"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_DIR_H
#define EIF_DIR_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER eif_dir_open(EIF_FILENAME dirname);
extern EIF_POINTER eif_dir_next(EIF_POINTER dir);
extern EIF_POINTER eif_dir_rewind(EIF_POINTER d, EIF_FILENAME dir_name);
extern void eif_dir_close(EIF_POINTER dir);
extern EIF_BOOLEAN eif_dir_exists(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_readable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_writable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_executable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_deletable(EIF_FILENAME name);
extern EIF_CHARACTER_8 eif_dir_separator(void);
extern EIF_INTEGER eif_dir_current(EIF_FILENAME a_buffer, EIF_INTEGER a_count);
extern EIF_INTEGER eif_chdir(EIF_FILENAME path);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class COM_FAILURE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_COM_FAILURE_H
#define GE_COM_FAILURE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER GE_ccom_hresult(EIF_POINTER an_exception_code);

extern EIF_INTEGER GE_ccom_hresult_code(EIF_INTEGER an_hresult);

extern EIF_INTEGER GE_ccom_hresult_facility(EIF_INTEGER an_hresult);

/*
 * Get text from error `a_code'. It is up to the caller to free
 * the returned buffer using `GE_ccom_local_free'.
 */
extern EIF_POINTER GE_ccom_error_text(EIF_INTEGER a_code);

/*
 * Number of characters in `ptr'.
 */
extern EIF_INTEGER_32 GE_ccom_strlen(EIF_POINTER ptr);

/*
 * Number of bytes occupied by a TCHAR.
 */
extern EIF_INTEGER_32 GE_ccom_character_size(void);

/*
 * Free `a_ptr' using LocalFree.
 */
extern void GE_ccom_local_free(EIF_POINTER a_ptr);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		""Part of ISE Eiffel runtime. Needed to compile class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_SYSTEM_H
#define EIF_SYSTEM_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef EIF_WINDOWS
#include "Winbase.h"
#elif defined(EIF_VMS) || defined(EIF_MACOSX)
#include "sysctl.conf"
#else
#include <unistd.h>
#endif

#endif
#include <string.h>
#include <stdlib.h>
#include <time.h>
