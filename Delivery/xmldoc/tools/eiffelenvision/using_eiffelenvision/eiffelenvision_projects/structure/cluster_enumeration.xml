<document output="envision" title="Automatic Enumeration">
	<meta_data>
		<help>
			<toc>
				<envision_title>Automatic Enumeration</envision_title>
				<envision_pseudo_name>00</envision_pseudo_name>
			</toc>
			<xml>
				<keyword>
					<index>K</index>
					<term>EiffelEnvision, Projects</term>
				</keyword>
				<keyword>
					<index>K</index>
					<term>Projects, EiffelEnvision</term>
				</keyword>
			</xml>
		</help>
	</meta_data>
	<paragraph>
	<link><url>url</url><label>*</label></link>
		<paragraph>
			One of the major ways <link><url>url</url><label>*Eiffel for .NET</label></link> and EiffelEnvision differs from other .NET languages is a directory-based compiler, and not a file-based compiler.
			The Eiffel for .NET compiler, in EiffelEnvision, will 
			examine the contents of a <link><url>url</url><label>*cluster</label></link> and examine all Eiffel source files (*.e), containing Eiffel <link><url>url</url><label>*classes</label></link>, when compiling. Examination does not 
			necessarly result in their inclusion when <link><url>url</url><label>*Built</label></link>, this depends on the project's <link><url>url</url><label>*Include All Classes</label></link> 
			project property or if the examined Eiffel <link><url>url</url><label>*class</label></link> is reachable via the project's <link><url>url</url><label>*Root Class</label></link>.
		</paragraph>
		<paragraph>
			Using a directory base compiler, EiffelEnvision relects what the Eiffel for .NET compiler will see and examine in an EiffelEnvision project. The <link><url>url</url><label>*Project Items</label></link> 
			and any <link><url>url</url><label>*Cluster Nodes</label></link> will automatically enumerate the contents of their associated <link><url>url</url><label>*Path</label></link>,  
			<link><url>url</url><label>*Project Items</label></link> will always examine the directory where your project is located. During examination, all located <italic>.e</italic> files are automatically 
			added to an EiffelEnvision project when projects are created or opened in Visual Studio .NET. EiffelEnvision will then monitor all future disk activity, external of Visual Studio .NET, and subsequently add or remove Eiffel source files and folders as they are 
			added and removed from the underlying file system.
		</paragraph>
		
		<anchor>excluding_items</anchor>
		<heading>
			<size>2</size>
			<content>Excluding Items</content>
		</heading>
		<paragraph>
			Given the nature of <link><url>project.xml</url><anchor_name>clean_separation</anchor_name><label>Source Code Reuse</label></link> and the <link><url>url</url><label>*cluster</label></link> mechanism, projects may include unwanted files or there may be a need to resolve <link><url>url</url><label>*class</label></link> name clashes by excluding Eiffel source files from a <link><url>url</url><label>*Build</label></link>.
		</paragraph>
		<paragraph>
			To exclude Eiffel source file or entire folders, include as a result of setting the <link><url>url</url><label>*Include Subdirectories</label></link> property on <link><url>url</url><label>*Cluster Nodes</label></link>.
		</paragraph>
		<paragraph>
			Select the folder (<image>
				<url>../../../images/icons/folder.ico</url>
			</image>) or file (<image>
				<url>../../../images/icons/file_class_blue.ico</url>
			</image>) and select <bold>Exclude From Project</bold> from it's context menu. Once selected the icon will change to <image>
				<url>../../../images/icons/folder_ex.ico</url>
			</image> for folders and <image>
				<url>../../../images/icons/file_class_ex.ico</url>
			</image> for files. When excluding folders, it and it's entire contents will be excluded.
			<note>
				<bold>Note</bold>: Exclusion is based on the item name alone and is per-<link><url>url</url><label>*cluster</label></link>. It is possible to exclude an item and it subsequently excludes a number of other items. For instance, in a cluster <italic>shared_resources</italic>, there are two folders: <italic>xml_reader</italic> and <italic>binary_reader</italic>. In both folder there exists <italic>common.e</italic>. Excluding <italic>common.e</italic> from <italic>xml_reader</italic> will also exclude <italic>common.e</italic> from <italic>binary_reader</italic>, because <italic>common.e</italic> is an excluded item of <italic>shared_resources</italic>. After excluding <italic>common.e</italic>, EiffelEnvision will automatically show both editons as being excluded by changing the their icons to the excluded class icon (<image>
				<url>../../../images/icons/file_class_ex.ico</url>
			</image>). If this is an undesired consequence, <link><url>url</url><label>*Converting Folders to Clusters</label></link> will permit the exclusion of only one instance of <italic>common.e</italic>.
			</note>
			Eiffel source files and folders may also be excluded using a <link><url>url</url><label>*Cluster Node</label></link>'s <link><url>url</url><label>*Excluded Items</label></link> property.
		</paragraph>
		
		<anchor>including_items</anchor>
		<heading>
			<size>2</size>
			<content>Including Items</content>
		</heading>
		<paragraph>
			In contrast to <link><url>cluster_enumeration.xml</url><anchor_name>excluding_item</anchor_name><label>Excluding Items</label></link>, Eiffel source files and folder may need to be included back into projects. For all excluded items, <bold>Include into Project</bold> is available from the excluded item's context menu. Selecting <bold>Include into Project</bold> will reintroduce any Eiffel source files back into the project. Some Eiffel source files and folders cannot be included, and <bold>Include into Project</bold> will be gray out. This is because the items were excluded as part of a higher exclusion. For example, when exluding a folder containing Eiffel source files, it is not possible to include any of those Eiffel source files into the project because they were not directly excluded.
		</paragraph>
		<paragraph>
			Eiffel source files and folders may also be included back using a <link><url>url</url><label>*Cluster Node</label></link>'s <link><url>url</url><label>*Excluded Items</label></link> property.
		</paragraph>
		
		<anchor>also_see</anchor>
		<heading>
			<size>2</size>
			<content>Related Sections</content>
		</heading>
		<seealso>
			<bold>See Also:</bold>
			<line_break/>
		</seealso>
	</paragraph>
</document>
