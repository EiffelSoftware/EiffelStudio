-- This file has been generated by EWG. Do not edit. Changes will be lost!

class CONTROL_FONT_STYLE_REC_STRUCT

inherit

	EWG_STRUCT

	CONTROL_FONT_STYLE_REC_STRUCT_EXTERNAL
		export
			{NONE} all
		end

create

	make_new_unshared,
	make_new_shared,
	make_unshared,
	make_shared

feature {ANY} -- Access

	sizeof: INTEGER is
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	flags: INTEGER is
			-- Access member `flags'
		require
			exists: exists
		do
			Result := get_flags_external (item)
		ensure
			result_correct: Result = get_flags_external (item)
		end

	set_flags (a_value: INTEGER) is
			-- Set member `flags'
		require
			exists: exists
		do
			set_flags_external (item, a_value)
		ensure
			a_value_set: a_value = flags
		end

	font: INTEGER is
			-- Access member `font'
		require
			exists: exists
		do
			Result := get_font_external (item)
		ensure
			result_correct: Result = get_font_external (item)
		end

	set_font (a_value: INTEGER) is
			-- Set member `font'
		require
			exists: exists
		do
			set_font_external (item, a_value)
		ensure
			a_value_set: a_value = font
		end

	size: INTEGER is
			-- Access member `size'
		require
			exists: exists
		do
			Result := get_size_external (item)
		ensure
			result_correct: Result = get_size_external (item)
		end

	set_size (a_value: INTEGER) is
			-- Set member `size'
		require
			exists: exists
		do
			set_size_external (item, a_value)
		ensure
			a_value_set: a_value = size
		end

	style: INTEGER is
			-- Access member `style'
		require
			exists: exists
		do
			Result := get_style_external (item)
		ensure
			result_correct: Result = get_style_external (item)
		end

	set_style (a_value: INTEGER) is
			-- Set member `style'
		require
			exists: exists
		do
			set_style_external (item, a_value)
		ensure
			a_value_set: a_value = style
		end

	mode: INTEGER is
			-- Access member `mode'
		require
			exists: exists
		do
			Result := get_mode_external (item)
		ensure
			result_correct: Result = get_mode_external (item)
		end

	set_mode (a_value: INTEGER) is
			-- Set member `mode'
		require
			exists: exists
		do
			set_mode_external (item, a_value)
		ensure
			a_value_set: a_value = mode
		end

	just: INTEGER is
			-- Access member `just'
		require
			exists: exists
		do
			Result := get_just_external (item)
		ensure
			result_correct: Result = get_just_external (item)
		end

	set_just (a_value: INTEGER) is
			-- Set member `just'
		require
			exists: exists
		do
			set_just_external (item, a_value)
		ensure
			a_value_set: a_value = just
		end

	forecolor: POINTER is
			-- Access member `foreColor'
		require
			exists: exists
		do
			Result := get_forecolor_external (item)
		ensure
			result_correct: Result = get_forecolor_external (item)
		end

	set_forecolor (a_value: POINTER) is
			-- Set member `foreColor'
		require
			exists: exists
		do
			set_forecolor_external (item, a_value)
		end

	backcolor: POINTER is
			-- Access member `backColor'
		require
			exists: exists
		do
			Result := get_backcolor_external (item)
		ensure
			result_correct: Result = get_backcolor_external (item)
		end

	set_backcolor (a_value: POINTER) is
			-- Set member `backColor'
		require
			exists: exists
		do
			set_backcolor_external (item, a_value)
		end

end
