<document output="envision" title="EiffelEnvision 2.5 Version Information">
	<meta_data>
		<help>
			<toc>
				<envision_title>EiffelEnvision 2.5 Version Information</envision_title>
				<envision_pseudo_name>20</envision_pseudo_name>
			</toc>
			<xml>
				<keyword>
					<index>K</index>
					<term>Version History, EiffelEnvision 2.5</term>
				</keyword>
				<keyword>
					<index>K</index>
					<term>History, EiffelEnvision 2.5</term>
				</keyword>
			</xml>
		</help>
	</meta_data>
	<paragraph>
		<paragraph>
		This document lists the changes, including additions and enhancments, made between <bold>Eiffel ENViSioN! 2.01</bold> and 
		<bold>EiffelEnvision 2.5</bold>.
		</paragraph>
		<anchor>project_system</anchor>
		<heading>
			<size>2</size>
			EiffelEnvision Project System:
		</heading>
		<paragraph>
			<list ordered="false">
				<item>Completely revised <link>
						<url>url</url>
						<label>*Solution Explorer</label>
					</link> that include the addition of a Eiffel Project Items and Eiffel Libraries node.</item>
				<item>Precompiled library assemblies and runtime assemblies are shown under the References node.</item>
				<item>COM references correctly use a Primary Interop Assembly (PIA) when available.</item>
				<item>All component references are updated in real-time. Any modifications to the project properties or changes in a project references are reflected automatically.</item>
				<item>Setting a prefix for a component reference will no longer force a rebuild as long as the assembly has not yet been compiled.</item>
				<item>The Other Project Items node now allows creation of folder hierarchies.</item>
				<item>All Solution Explorer items have context menus.</item>
				<item>Update automation model to be read/write and added support for all new Solution Explorer items and folders.</item>
				<item>Use of Environment variables permitted in solution item properties with paths.</item>
				<item>Resolved conflicting use of the ISE_EIFFEL environment variable.</item>
			</list>
		</paragraph>
		<anchor>new_projects_and_items</anchor>
		<heading>
			<size>2</size>
			EiffelEnvision New Projects and New Project Items:
		</heading>
		<paragraph>
			<list ordered="false">
				<item>Added concept of application project items.</item>
				<item>The Eiffel Graphical Application project does not show the EiffelVision2 graphical builder in the wizard any more. The builder is launched after a project has been compiled. See <link>
						<url>url</url>
						<label>*EiffelBuild</label>
					</link> for version history.</item>
				<item>Removed HTML Report project due to integration with Project System.</item>
				<item>Post creation of new project a build is performed displaying all build related output to the user.</item>
				<item>Adding new project items automatically adds all dependent clusters, assemblies and change the precompile library if deem necessary.</item>
				<item>All new projects create a user-configurable app.config file.</item>
				<item>Moved all unmanaged resource files to a "resources" project folder.</item>
				<item>app.rc files in the resources are taken as the projects unmanaged resource file.</item>
				<item>Added a blank Eiffel class item to the list of Solution Items.</item>
				<item>Added application configuration new project item.</item>
				<item>A new known "resource" folder has been added to contain all unmanaged resources and permit editing of .rc files from a project.</item>
			</list>
		</paragraph>
		<anchor>project_configuration</anchor>
		<heading>
			<size>2</size>
			EiffelEnvision Project Configuration:
		</heading>
		<paragraph>
			<list ordered="false">
				<item>Abstracted many project configurable items to common to all configurations.</item>
				<item>Removed cluster project property configuration page due to cluster integration with Solution Explorer.</item>
				<item>All properties that require a project to be rebuild from scratch now indicate this in their description.</item>
				<item>Added more project related properties to finer grain control compilation.</item>
				<item>Removed Support CLR Version property as it is redundant due to EiffelEnvision allow compilation to target a version of the CLR.</item>
				<item>The active configuration can now be renamed though the configuration manager.</item>
				<item>Removed project configuration dependency on Eiffel compiler configuration (*.ace) files. All configuration details are store in an EiffelEnvision project file (*.eifp)</item>
				<item>Use of Environment variables permitted in properties with paths.</item>
				<item>Active project and solution configurations may not be renamed or remove without switching the active configuration.</item>
			</list>
		</paragraph>
		<anchor>eiffel_editor</anchor>
		<heading>
			<size>2</size>
			Eiffel Editor:
		</heading>
		<paragraph>
			<list ordered="false">
				<item>Added sorted tracking feature dropdown list that contains all class features.</item>
				<item>Source code now has automatic and manual source code outlining.</item>
				<item>Go to Definition has been greatly improved and provide better naviagation results.</item>
				<item>Go to Definition work in create and convert clauses.</item>
				<item>Synchronize Class View has been added to the editor context menu allow caret position syncrosization with Class View.</item>
				<item>Removed Go to Declaration context menu item as it has become redundant and was confusing to many.</item>
				<item>Adjusted default syntax highlighting to better match and improve readability with EiffelStudio's default syntax highlighting color scheme. </item>
				<item>Syntax highlight color scheme is now completely configrable.</item>
				<item>Added completion for create and convert clauses.</item>
				<item>Fixed syntax error bug when no feature clause is present in class text.</item>
			</list>
		</paragraph>
		<anchor>object_browser</anchor>
		<heading>
			<size>2</size>
			EiffelEnvision Object Browser:
		</heading>
		<paragraph>
			<list ordered="false">
				<item>Better formatting for descriptions of .NET and Eiffel types and features.</item>
				<item>Formatted .NET types and method names in trees to match those produced by Visual Studio .NET.</item>
				<item>Added linking for .NET namespaces, .NET types, .NET features, and clusters.</item>
				<item>Searching no longer keeps the Eiffel compiler loaded.</item>
				<item>Resolved locking of active configuration's EIFGEN folder when searching.</item>
				<item>Add ability to search using Match Case, Match Whole Word and Match Prefix and not just Match Substring.</item>
				<item>Consumed Eiffel assembly type have project defined prefixes added to them.</item>
				<item>Consumed Eiffel assembly type contructors are now in the list of available features.</item>
				<item>Removed disambiguated Eiffel feature names under .NET Method as this is covered better in the description.</item>
				<item>Added obsolete messages to relivent description.</item>
			</list>
		</paragraph>
		<anchor>envision_compiler</anchor>
		<heading>
			<size>2</size>
			EiffelEnvision Compiler:
		</heading>
		<paragraph>
			<list ordered="false">
				<item>Revised and cleaned up project build output by sectioning related build steps into Pre/Main/Post build.</item>
				<item>Consuming metadata for assemblies is done prior to compiling the Eiffel code for better user progress status reporting.</item>
				<item>Added compile-time optimizations removing project component references and clusters from the Eiffel compilation given that they are in a precompile library and match the configuration in that library.</item>
				<item>Added additional optimization to compile in the most common Microsoft assemblies into the Eiffel precompiled libraries to prevent compilation of common classes (This is an install-time option.)</item>
				<item>Precompiled libraries can optionally be optimized to excluded assertions.</item>
				<item>Projects are only compiled and are compiled on as-needed basis.</item>
				<item>Eiffel compiler ace files are 100% generated and only generated when the project properties change.</item>
				<item>Compilation does not require user to save the project.</item>
			</list>
		</paragraph>
		<anchor>eiffel_compiler</anchor>
		<heading>
			<size>2</size>
			Eiffel Compiler:
		</heading>
		<paragraph>
			<list ordered="false">
				<item>Generates better and consistent .NET type and feature names. See <link>
						<url>url</url>
						<label>*Eiffel Type and Feature Name Formatting</label>
					</link>
				</item>
				<item>
					<class_name>NATIVE_ARRAY</class_name> permits use of expanded types.</item>
				<item>.NET <class_name>System.Real</class_name> and <class_name>System.Double</class_name> constants are imported, at compiled-time, and expressed correctly at run-time.</item>
				<item>For all other improvements see <link>
						<url>url</url>
						<label>*Eiffel Compiler Version History</label>
					</link>.</item>
			</list>
		</paragraph>
		<anchor>expression_evaluator</anchor>
		<heading>
			<size>2</size>
			EiffelEnvision Expression Evaluator:
		</heading>
		<paragraph>
			<list ordered="false">
				<item>Formatted all types names in Type column to show difference between Eiffel and .NET type.</item>
				<item>Arrays show length as content value.</item>
				<item>Void symbols show just Void.</item>
			</list>
		</paragraph>
		<anchor>project_deployment</anchor>
		<heading>
			<size>2</size>
			EiffelEnvision Project Deployment:
		</heading>
		<paragraph>
			<list ordered="false">
				<item>Precompiled Library projects can be deployed.</item>
				<item>Added Source Files and Content Files to the list of deployable project items.</item>
				<item>Added redistrbutable merge module for Eiffel framework assemblies.</item>
				<item>Added redistrbutable merge module for EiffelSoftware.Runtime.dll.</item>
			</list>
		</paragraph>
		<anchor>msic</anchor>
		<heading>
			<size>2</size>
			Miscellanous:
		</heading>
		<paragraph>
			<list ordered="false">
				<item>Fragmentated EBCL into a series of Eiffel framework assemblies.</item>
				<item>Included more of Eiffel Software and Third Party Eiffel libraries (includes <italic>gobo</italic>, <italic>lex</italic>, <italic>net</italic>, <italic>parse</italic>, <italic>store</italic>, <italic>thread</italic> and <italic>time</italic>).</item>
				<item>No Eiffel Software assemblies are present in the Global Assembly Cache (GAC).</item>
				<item>At install-time EiffelEnvision can be merged with EiffelStudio 5.5.</item>
				<item>Changed product name from Eiffel ENViSioN! to EiffelEnvision.</item>
			</list>
		</paragraph>
	</paragraph>
</document>
