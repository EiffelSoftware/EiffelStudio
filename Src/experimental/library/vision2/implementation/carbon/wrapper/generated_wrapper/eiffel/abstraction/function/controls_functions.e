-- This file has been generated by EWG. Do not edit. Changes will be lost!
-- functions wrapper
class CONTROLS_FUNCTIONS

obsolete
	"Use class CONTROLS_FUNCTIONS_EXTERNAL instead."

inherit

	CONTROLS_FUNCTIONS_EXTERNAL

feature
	new_control_action_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_control_action_upp_external (userroutine)
		end

	dispose_control_action_upp (userupp: POINTER) is
		local
		do
			dispose_control_action_upp_external (userupp)
		end

	invoke_control_action_upp (thecontrol: POINTER; partcode: INTEGER; userupp: POINTER) is
		local
		do
			invoke_control_action_upp_external (thecontrol, partcode, userupp)
		end

	new_control_def_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_control_def_upp_external (userroutine)
		end

	dispose_control_def_upp (userupp: POINTER) is
		local
		do
			dispose_control_def_upp_external (userupp)
		end

	invoke_control_def_upp (varcode: INTEGER; thecontrol: POINTER; message: INTEGER; param: INTEGER; userupp: POINTER): INTEGER is
		local
		do
			Result := invoke_control_def_upp_external (varcode, thecontrol, message, param, userupp)
		end

	new_control_key_filter_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_control_key_filter_upp_external (userroutine)
		end

	dispose_control_key_filter_upp (userupp: POINTER) is
		local
		do
			dispose_control_key_filter_upp_external (userupp)
		end

	invoke_control_key_filter_upp (thecontrol: POINTER; keycode: POINTER; charcode: POINTER; modifiers: POINTER; userupp: POINTER): INTEGER is
		local
		do
			Result := invoke_control_key_filter_upp_external (thecontrol, keycode, charcode, modifiers, userupp)
		end

	create_custom_control (owningwindow: POINTER; contbounds: POINTER; def: POINTER; initdata: POINTER; outcontrol: POINTER): INTEGER is
		local
		do
			Result := create_custom_control_external (owningwindow, contbounds, def, initdata, outcontrol)
		end

	new_control (owningwindow: POINTER; boundsrect: POINTER; controltitle: POINTER; initiallyvisible: INTEGER; initialvalue: INTEGER; minimumvalue: INTEGER; maximumvalue: INTEGER; procid: INTEGER; controlreference: INTEGER): POINTER is
		local
		do
			Result := new_control_external (owningwindow, boundsrect, controltitle, initiallyvisible, initialvalue, minimumvalue, maximumvalue, procid, controlreference)
		end

	get_new_control (resourceid: INTEGER; owningwindow: POINTER): POINTER is
		local
		do
			Result := get_new_control_external (resourceid, owningwindow)
		end

	dispose_control (thecontrol: POINTER) is
		local
		do
			dispose_control_external (thecontrol)
		end

	kill_controls (thewindow: POINTER) is
		local
		do
			kill_controls_external (thewindow)
		end

	new_control_cntlto_collection_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_control_cntlto_collection_upp_external (userroutine)
		end

	dispose_control_cntlto_collection_upp (userupp: POINTER) is
		local
		do
			dispose_control_cntlto_collection_upp_external (userupp)
		end

	invoke_control_cntlto_collection_upp (bounds: POINTER; value: INTEGER; visible: INTEGER; max: INTEGER; min: INTEGER; procid: INTEGER; refcon: INTEGER; title: POINTER; collection: POINTER; userupp: POINTER): INTEGER is
		local
		do
			Result := invoke_control_cntlto_collection_upp_external (bounds, value, visible, max, min, procid, refcon, title, collection, userupp)
		end

	register_control_definition (incdefresid: INTEGER; incontroldef: POINTER; inconversionproc: POINTER): INTEGER is
		local
		do
			Result := register_control_definition_external (incdefresid, incontroldef, inconversionproc)
		end

	hilite_control (thecontrol: POINTER; hilitestate: INTEGER) is
		local
		do
			hilite_control_external (thecontrol, hilitestate)
		end

	show_control (thecontrol: POINTER) is
		local
		do
			show_control_external (thecontrol)
		end

	hide_control (thecontrol: POINTER) is
		local
		do
			hide_control_external (thecontrol)
		end

	is_control_active (incontrol: POINTER): INTEGER is
		local
		do
			Result := is_control_active_external (incontrol)
		end

	is_control_visible (incontrol: POINTER): INTEGER is
		local
		do
			Result := is_control_visible_external (incontrol)
		end

	activate_control (incontrol: POINTER): INTEGER is
		local
		do
			Result := activate_control_external (incontrol)
		end

	deactivate_control (incontrol: POINTER): INTEGER is
		local
		do
			Result := deactivate_control_external (incontrol)
		end

	set_control_visibility (incontrol: POINTER; inisvisible: INTEGER; indodraw: INTEGER): INTEGER is
		local
		do
			Result := set_control_visibility_external (incontrol, inisvisible, indodraw)
		end

	is_control_enabled (incontrol: POINTER): INTEGER is
		local
		do
			Result := is_control_enabled_external (incontrol)
		end

	enable_control (incontrol: POINTER): INTEGER is
		local
		do
			Result := enable_control_external (incontrol)
		end

	disable_control (incontrol: POINTER): INTEGER is
		local
		do
			Result := disable_control_external (incontrol)
		end

	draw_controls (thewindow: POINTER) is
		local
		do
			draw_controls_external (thewindow)
		end

	draw1control (thecontrol: POINTER) is
		local
		do
			draw1control_external (thecontrol)
		end

	update_controls (inwindow: POINTER; inupdateregion: POINTER) is
		local
		do
			update_controls_external (inwindow, inupdateregion)
		end

	get_best_control_rect (incontrol: POINTER; outrect: POINTER; outbaselineoffset: POINTER): INTEGER is
		local
		do
			Result := get_best_control_rect_external (incontrol, outrect, outbaselineoffset)
		end

	set_control_font_style (incontrol: POINTER; instyle: POINTER): INTEGER is
		local
		do
			Result := set_control_font_style_external (incontrol, instyle)
		end

	draw_control_in_current_port (incontrol: POINTER) is
		local
		do
			draw_control_in_current_port_external (incontrol)
		end

	set_up_control_background (incontrol: POINTER; indepth: INTEGER; iniscolordevice: INTEGER): INTEGER is
		local
		do
			Result := set_up_control_background_external (incontrol, indepth, iniscolordevice)
		end

	set_up_control_text_color (incontrol: POINTER; indepth: INTEGER; iniscolordevice: INTEGER): INTEGER is
		local
		do
			Result := set_up_control_text_color_external (incontrol, indepth, iniscolordevice)
		end

	new_control_color_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_control_color_upp_external (userroutine)
		end

	dispose_control_color_upp (userupp: POINTER) is
		local
		do
			dispose_control_color_upp_external (userupp)
		end

	invoke_control_color_upp (incontrol: POINTER; inmessage: INTEGER; indrawdepth: INTEGER; indrawincolor: INTEGER; userupp: POINTER): INTEGER is
		local
		do
			Result := invoke_control_color_upp_external (incontrol, inmessage, indrawdepth, indrawincolor, userupp)
		end

	set_control_color_proc (incontrol: POINTER; inproc: POINTER): INTEGER is
		local
		do
			Result := set_control_color_proc_external (incontrol, inproc)
		end

	track_control (thecontrol: POINTER; startpoint: POINTER; actionproc: POINTER): INTEGER is
		local
		do
			Result := track_control_external (thecontrol, startpoint, actionproc)
		end

	drag_control (thecontrol: POINTER; startpoint: POINTER; limitrect: POINTER; sloprect: POINTER; axis: INTEGER) is
		local
		do
			drag_control_external (thecontrol, startpoint, limitrect, sloprect, axis)
		end

	test_control (thecontrol: POINTER; testpoint: POINTER): INTEGER is
		local
		do
			Result := test_control_external (thecontrol, testpoint)
		end

	find_control (testpoint: POINTER; thewindow: POINTER; thecontrol: POINTER): INTEGER is
		local
		do
			Result := find_control_external (testpoint, thewindow, thecontrol)
		end

	find_control_under_mouse (inwhere: POINTER; inwindow: POINTER; outpart: POINTER): POINTER is
		local
		do
			Result := find_control_under_mouse_external (inwhere, inwindow, outpart)
		end

	handle_control_click (incontrol: POINTER; inwhere: POINTER; inmodifiers: INTEGER; inaction: POINTER): INTEGER is
		local
		do
			Result := handle_control_click_external (incontrol, inwhere, inmodifiers, inaction)
		end

	handle_control_contextual_menu_click (incontrol: POINTER; inwhere: POINTER; menudisplayed: STRING): INTEGER is
		local
			menudisplayed_c_string: EWG_ZERO_TERMINATED_STRING
		do
			create menudisplayed_c_string.make_shared_from_string (menudisplayed)
			Result := handle_control_contextual_menu_click_external (incontrol, inwhere, menudisplayed_c_string.item)
		end

	get_control_click_activation (incontrol: POINTER; inwhere: POINTER; inmodifiers: INTEGER; outresult: POINTER): INTEGER is
		local
		do
			Result := get_control_click_activation_external (incontrol, inwhere, inmodifiers, outresult)
		end

	handle_control_key (incontrol: POINTER; inkeycode: INTEGER; incharcode: INTEGER; inmodifiers: INTEGER): INTEGER is
		local
		do
			Result := handle_control_key_external (incontrol, inkeycode, incharcode, inmodifiers)
		end

	handle_control_set_cursor (control: POINTER; localpoint: POINTER; modifiers: INTEGER; cursorwasset: STRING): INTEGER is
		local
			cursorwasset_c_string: EWG_ZERO_TERMINATED_STRING
		do
			create cursorwasset_c_string.make_shared_from_string (cursorwasset)
			Result := handle_control_set_cursor_external (control, localpoint, modifiers, cursorwasset_c_string.item)
		end

	move_control (thecontrol: POINTER; h: INTEGER; v: INTEGER) is
		local
		do
			move_control_external (thecontrol, h, v)
		end

	size_control (thecontrol: POINTER; w: INTEGER; h: INTEGER) is
		local
		do
			size_control_external (thecontrol, w, h)
		end

	set_control_title (thecontrol: POINTER; title: POINTER) is
		local
		do
			set_control_title_external (thecontrol, title)
		end

	get_control_title (thecontrol: POINTER; title: POINTER) is
		local
		do
			get_control_title_external (thecontrol, title)
		end

	set_control_title_with_cfstring (incontrol: POINTER; instring: POINTER): INTEGER is
		local
		do
			Result := set_control_title_with_cfstring_external (incontrol, instring)
		end

	copy_control_title_as_cfstring (incontrol: POINTER; outstring: POINTER): INTEGER is
		local
		do
			Result := copy_control_title_as_cfstring_external (incontrol, outstring)
		end

	get_control_value (thecontrol: POINTER): INTEGER is
		local
		do
			Result := get_control_value_external (thecontrol)
		end

	set_control_value (thecontrol: POINTER; newvalue: INTEGER) is
		local
		do
			set_control_value_external (thecontrol, newvalue)
		end

	get_control_minimum (thecontrol: POINTER): INTEGER is
		local
		do
			Result := get_control_minimum_external (thecontrol)
		end

	set_control_minimum (thecontrol: POINTER; newminimum: INTEGER) is
		local
		do
			set_control_minimum_external (thecontrol, newminimum)
		end

	get_control_maximum (thecontrol: POINTER): INTEGER is
		local
		do
			Result := get_control_maximum_external (thecontrol)
		end

	set_control_maximum (thecontrol: POINTER; newmaximum: INTEGER) is
		local
		do
			set_control_maximum_external (thecontrol, newmaximum)
		end

	get_control_view_size (thecontrol: POINTER): INTEGER is
		local
		do
			Result := get_control_view_size_external (thecontrol)
		end

	set_control_view_size (thecontrol: POINTER; newviewsize: INTEGER) is
		local
		do
			set_control_view_size_external (thecontrol, newviewsize)
		end

	get_control32bit_value (thecontrol: POINTER): INTEGER is
		local
		do
			Result := get_control32bit_value_external (thecontrol)
		end

	set_control32bit_value (thecontrol: POINTER; newvalue: INTEGER) is
		local
		do
			set_control32bit_value_external (thecontrol, newvalue)
		end

	get_control32bit_maximum (thecontrol: POINTER): INTEGER is
		local
		do
			Result := get_control32bit_maximum_external (thecontrol)
		end

	set_control32bit_maximum (thecontrol: POINTER; newmaximum: INTEGER) is
		local
		do
			set_control32bit_maximum_external (thecontrol, newmaximum)
		end

	get_control32bit_minimum (thecontrol: POINTER): INTEGER is
		local
		do
			Result := get_control32bit_minimum_external (thecontrol)
		end

	set_control32bit_minimum (thecontrol: POINTER; newminimum: INTEGER) is
		local
		do
			set_control32bit_minimum_external (thecontrol, newminimum)
		end

	is_valid_control_handle (thecontrol: POINTER): INTEGER is
		local
		do
			Result := is_valid_control_handle_external (thecontrol)
		end

	set_control_id (incontrol: POINTER; inid: POINTER): INTEGER is
		local
		do
			Result := set_control_id_external (incontrol, inid)
		end

	get_control_id (incontrol: POINTER; outid: POINTER): INTEGER is
		local
		do
			Result := get_control_id_external (incontrol, outid)
		end

	get_control_by_id (inwindow: POINTER; inid: POINTER; outcontrol: POINTER): INTEGER is
		local
		do
			Result := get_control_by_id_external (inwindow, inid, outcontrol)
		end

	set_control_command_id (incontrol: POINTER; incommandid: INTEGER): INTEGER is
		local
		do
			Result := set_control_command_id_external (incontrol, incommandid)
		end

	get_control_command_id (incontrol: POINTER; outcommandid: POINTER): INTEGER is
		local
		do
			Result := get_control_command_id_external (incontrol, outcommandid)
		end

	get_control_kind (incontrol: POINTER; outcontrolkind: POINTER): INTEGER is
		local
		do
			Result := get_control_kind_external (incontrol, outcontrolkind)
		end

	get_control_property (control: POINTER; propertycreator: INTEGER; propertytag: INTEGER; buffersize: INTEGER; actualsize: POINTER; propertybuffer: POINTER): INTEGER is
		local
		do
			Result := get_control_property_external (control, propertycreator, propertytag, buffersize, actualsize, propertybuffer)
		end

	get_control_property_size (control: POINTER; propertycreator: INTEGER; propertytag: INTEGER; size: POINTER): INTEGER is
		local
		do
			Result := get_control_property_size_external (control, propertycreator, propertytag, size)
		end

	set_control_property (control: POINTER; propertycreator: INTEGER; propertytag: INTEGER; propertysize: INTEGER; propertydata: POINTER): INTEGER is
		local
		do
			Result := set_control_property_external (control, propertycreator, propertytag, propertysize, propertydata)
		end

	remove_control_property (control: POINTER; propertycreator: INTEGER; propertytag: INTEGER): INTEGER is
		local
		do
			Result := remove_control_property_external (control, propertycreator, propertytag)
		end

	get_control_property_attributes (control: POINTER; propertycreator: INTEGER; propertytag: INTEGER; attributes: POINTER): INTEGER is
		local
		do
			Result := get_control_property_attributes_external (control, propertycreator, propertytag, attributes)
		end

	change_control_property_attributes (control: POINTER; propertycreator: INTEGER; propertytag: INTEGER; attributestoset: INTEGER; attributestoclear: INTEGER): INTEGER is
		local
		do
			Result := change_control_property_attributes_external (control, propertycreator, propertytag, attributestoset, attributestoclear)
		end

	get_control_region (incontrol: POINTER; inpart: INTEGER; outregion: POINTER): INTEGER is
		local
		do
			Result := get_control_region_external (incontrol, inpart, outregion)
		end

	get_control_variant (thecontrol: POINTER): INTEGER is
		local
		do
			Result := get_control_variant_external (thecontrol)
		end

	set_control_action (thecontrol: POINTER; actionproc: POINTER) is
		local
		do
			set_control_action_external (thecontrol, actionproc)
		end

	get_control_action (thecontrol: POINTER): POINTER is
		local
		do
			Result := get_control_action_external (thecontrol)
		end

	set_control_reference (thecontrol: POINTER; data: INTEGER) is
		local
		do
			set_control_reference_external (thecontrol, data)
		end

	get_control_reference (thecontrol: POINTER): INTEGER is
		local
		do
			Result := get_control_reference_external (thecontrol)
		end

	send_control_message (incontrol: POINTER; inmessage: INTEGER; inparam: POINTER): INTEGER is
		local
		do
			Result := send_control_message_external (incontrol, inmessage, inparam)
		end

	dump_control_hierarchy (inwindow: POINTER; indumpfile: POINTER): INTEGER is
		local
		do
			Result := dump_control_hierarchy_external (inwindow, indumpfile)
		end

	create_root_control (inwindow: POINTER; outcontrol: POINTER): INTEGER is
		local
		do
			Result := create_root_control_external (inwindow, outcontrol)
		end

	get_root_control (inwindow: POINTER; outcontrol: POINTER): INTEGER is
		local
		do
			Result := get_root_control_external (inwindow, outcontrol)
		end

	embed_control (incontrol: POINTER; incontainer: POINTER): INTEGER is
		local
		do
			Result := embed_control_external (incontrol, incontainer)
		end

	auto_embed_control (incontrol: POINTER; inwindow: POINTER): INTEGER is
		local
		do
			Result := auto_embed_control_external (incontrol, inwindow)
		end

	get_super_control (incontrol: POINTER; outparent: POINTER): INTEGER is
		local
		do
			Result := get_super_control_external (incontrol, outparent)
		end

	count_sub_controls (incontrol: POINTER; outnumchildren: POINTER): INTEGER is
		local
		do
			Result := count_sub_controls_external (incontrol, outnumchildren)
		end

	get_indexed_sub_control (incontrol: POINTER; inindex: INTEGER; outsubcontrol: POINTER): INTEGER is
		local
		do
			Result := get_indexed_sub_control_external (incontrol, inindex, outsubcontrol)
		end

	set_control_supervisor (incontrol: POINTER; inboss: POINTER): INTEGER is
		local
		do
			Result := set_control_supervisor_external (incontrol, inboss)
		end

	get_keyboard_focus (inwindow: POINTER; outcontrol: POINTER): INTEGER is
		local
		do
			Result := get_keyboard_focus_external (inwindow, outcontrol)
		end

	set_keyboard_focus (inwindow: POINTER; incontrol: POINTER; inpart: INTEGER): INTEGER is
		local
		do
			Result := set_keyboard_focus_external (inwindow, incontrol, inpart)
		end

	advance_keyboard_focus (inwindow: POINTER): INTEGER is
		local
		do
			Result := advance_keyboard_focus_external (inwindow)
		end

	reverse_keyboard_focus (inwindow: POINTER): INTEGER is
		local
		do
			Result := reverse_keyboard_focus_external (inwindow)
		end

	clear_keyboard_focus (inwindow: POINTER): INTEGER is
		local
		do
			Result := clear_keyboard_focus_external (inwindow)
		end

	get_control_features (incontrol: POINTER; outfeatures: POINTER): INTEGER is
		local
		do
			Result := get_control_features_external (incontrol, outfeatures)
		end

	set_control_data (incontrol: POINTER; inpart: INTEGER; intagname: INTEGER; insize: INTEGER; indata: POINTER): INTEGER is
		local
		do
			Result := set_control_data_external (incontrol, inpart, intagname, insize, indata)
		end

	get_control_data (incontrol: POINTER; inpart: INTEGER; intagname: INTEGER; inbuffersize: INTEGER; inbuffer: POINTER; outactualsize: POINTER): INTEGER is
		local
		do
			Result := get_control_data_external (incontrol, inpart, intagname, inbuffersize, inbuffer, outactualsize)
		end

	get_control_data_size (incontrol: POINTER; inpart: INTEGER; intagname: INTEGER; outmaxsize: POINTER): INTEGER is
		local
		do
			Result := get_control_data_size_external (incontrol, inpart, intagname, outmaxsize)
		end

	handle_control_drag_tracking (incontrol: POINTER; inmessage: INTEGER; indrag: POINTER; outlikesdrag: STRING): INTEGER is
		local
			outlikesdrag_c_string: EWG_ZERO_TERMINATED_STRING
		do
			create outlikesdrag_c_string.make_shared_from_string (outlikesdrag)
			Result := handle_control_drag_tracking_external (incontrol, inmessage, indrag, outlikesdrag_c_string.item)
		end

	handle_control_drag_receive (incontrol: POINTER; indrag: POINTER): INTEGER is
		local
		do
			Result := handle_control_drag_receive_external (incontrol, indrag)
		end

	set_control_drag_tracking_enabled (incontrol: POINTER; intracks: INTEGER): INTEGER is
		local
		do
			Result := set_control_drag_tracking_enabled_external (incontrol, intracks)
		end

	is_control_drag_tracking_enabled (incontrol: POINTER; outtracks: STRING): INTEGER is
		local
			outtracks_c_string: EWG_ZERO_TERMINATED_STRING
		do
			create outtracks_c_string.make_shared_from_string (outtracks)
			Result := is_control_drag_tracking_enabled_external (incontrol, outtracks_c_string.item)
		end

	set_automatic_control_drag_tracking_enabled_for_window (inwindow: POINTER; intracks: INTEGER): INTEGER is
		local
		do
			Result := set_automatic_control_drag_tracking_enabled_for_window_external (inwindow, intracks)
		end

	is_automatic_control_drag_tracking_enabled_for_window (inwindow: POINTER; outtracks: STRING): INTEGER is
		local
			outtracks_c_string: EWG_ZERO_TERMINATED_STRING
		do
			create outtracks_c_string.make_shared_from_string (outtracks)
			Result := is_automatic_control_drag_tracking_enabled_for_window_external (inwindow, outtracks_c_string.item)
		end

	get_control_bounds (control: POINTER; bounds: POINTER): POINTER is
		local
		do
			Result := get_control_bounds_external (control, bounds)
		end

	is_control_hilited (control: POINTER): INTEGER is
		local
		do
			Result := is_control_hilited_external (control)
		end

	get_control_hilite (control: POINTER): INTEGER is
		local
		do
			Result := get_control_hilite_external (control)
		end

	get_control_owner (control: POINTER): POINTER is
		local
		do
			Result := get_control_owner_external (control)
		end

	get_control_data_handle (control: POINTER): POINTER is
		local
		do
			Result := get_control_data_handle_external (control)
		end

	get_control_popup_menu_handle (control: POINTER): POINTER is
		local
		do
			Result := get_control_popup_menu_handle_external (control)
		end

	get_control_popup_menu_id (control: POINTER): INTEGER is
		local
		do
			Result := get_control_popup_menu_id_external (control)
		end

	set_control_data_handle (control: POINTER; datahandle: POINTER) is
		local
		do
			set_control_data_handle_external (control, datahandle)
		end

	set_control_bounds (control: POINTER; bounds: POINTER) is
		local
		do
			set_control_bounds_external (control, bounds)
		end

	set_control_popup_menu_handle (control: POINTER; popupmenu: POINTER) is
		local
		do
			set_control_popup_menu_handle_external (control, popupmenu)
		end

	set_control_popup_menu_id (control: POINTER; menuid: INTEGER) is
		local
		do
			set_control_popup_menu_id_external (control, menuid)
		end

	idle_controls (inwindow: POINTER) is
		local
		do
			idle_controls_external (inwindow)
		end

end
