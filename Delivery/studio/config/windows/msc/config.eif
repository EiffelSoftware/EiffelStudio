--
-- Config.eif for Microsoft Visual C++ 5.0 or greater
--

-- Directory separator
directory_separator: "\"
subcommand_separator: "%N%T"
quick_compilation: True
smart_checking: True

-- include_path
include_path: "$(INCLUDE_PATH)"

-- C-compiler
cc: "cl"
cpp: "cl"

-- C-linker
sharedlink: "link"

-- optimization flags
wkoptimize: "-Od -Zi -MT"
optimize: "-Ox -MT"

-- compiler flags
ccflags: "-w -nologo -D_WIN32_WINNT=0x0500 -DWINVER=0x0500 -D_CRT_SECURE_NO_DEPRECATE -DNONAMELESSUNION -D_UNICODE -DUNICODE $(ISE_CFLAGS)"
mtccflags: "$ccflags -DEIF_THREADS"
cppflags: "$ccflags"
mtcppflags: "$mtccflags"
shared_flags: "-DEIF_USE_DLL"
il_flags: "-DEIF_IL_DLL"

large: ""

-- linker flags
ar: ""
ld: ""
ldflags: "-STACK:5000000 -NODEFAULTLIB:libc"
mtldflags: "-STACK:5000000 -NODEFAULTLIB:libc"
ccldflags: "-STACK:5000000 -NODEFAULTLIB:libc"
console_flags: "-SUBSYSTEM:CONSOLE"
windows_flags: "-SUBSYSTEM:WINDOWS"
ldsharedflags: "-dll -incremental:no -NODEFAULTLIB:libc"
mtldsharedflags: "-dll -incremental:no -NODEFAULTLIB:libc"

-- eiffel run-time specification
prefix: "$(ISE_C_COMPILER)\"
shared_prefix: "$(ISE_C_COMPILER)\dll_"
mt_prefix: "mt"
eiflib: "finalized"
wkeiflib: "wkbench"
boehmgclib: "gc"
suffix: ".lib"
shared_suffix: ".dll"
shared_rt_suffix: ".lib"

-- libraries
libs: ""
mtlibs: ""
sharedlibs: "USER32.lib WSOCK32.lib ADVAPI32.lib GDI32.lib SHELL32.lib MSIMG32.lib \%N%
			%%TCOMDLG32.lib UUID.lib OLE32.lib OLEAUT32.lib COMCTL32.lib MPR.LIB $(ISE_SHAREDLIBS)"

mkdep: ""

-- platform $(MV) command
mv: "copy"
cp: "copy"

ranlib: "echo"

-- platform remove command
rm: "del"
file_exist: "if exist"
rmdir: "rd"

-- make program
make: "nmake -s -nologo"
make_utility: "nmake"
make_flags: "-s -nologo"
command_makefile: "%"for %%i in ($(EXTERNAL_MAKEFILES)) do $(MAKE) -e ISE_EIFFEL=%"$(ISE_EIFFEL)%" -f %%i%""

dpflags: ""

continuation: "\"

appl_make: "$appl.exe: $appl.lnk $appl.res%N%
%%T$(COMMAND_MAKEFILE)%N%
%%Tlink @$appl.lnk%N%
%%N%
%..\..\..\$appl.rc:%N%
%%Tif not exist ..\..\..\$appl.rc $(MV) %"$(ISE_EIFFEL)\studio\config\$(ISE_PLATFORM)\$(ISE_C_COMPILER)\eiffel.rc%" ..\..\..\$appl.rc%N%
%%N%
%$appl.res: ..\..\..\$appl.rc Makefile%N%
%%Trc -r -fo$appl.res ..\..\..\$appl.rc%N%
%%N%
%$appl.lnk: $(OBJECTS) e1\emain.obj $appl.res Makefile%N%
%%Tif exist $@ $(RM) $@%N%
%%T@echo $(LDFLAGS) $(CCLDFLAGS) -OUT:$appl.exe > $@%N%
%%T@echo e1\emain.obj >> $@%N%
%%T@echo $(EIFLIB) $(EXTERNALS) >> $@%N%
%%T@echo $sharedlibs $(PRECOMP_OBJECTS) >> $@%N%
%%T@echo $appl.res >> $@%N%
%$objects_redirection%N%
%"

-- precompilation
precompile: "driver.exe: driver.lnk driver.rc precomp.lib%N%
%%Tif exist driver.exe $(RM) driver.exe%N%
%%Tlink @driver.lnk%N%
%%Tif not exist $(ISE_C_COMPILER) mkdir $(ISE_C_COMPILER)%N%
%%T$(MV) driver.exe $(ISE_C_COMPILER)\driver.exe%N%
%%T$(MV) precomp.lib $(ISE_C_COMPILER)\precomp.lib%N%
%%Tif exist driver.exe $(RM) driver.exe%N%
%%Tif exist precomp.lib $(RM) precomp.lib%N%
%%N%
%driver.rc: %"$(ISE_EIFFEL)\studio\config\$(ISE_PLATFORM)\$(ISE_C_COMPILER)\eiffel.rc%"%N%
%%T$(MV) %"$(ISE_EIFFEL)\studio\config\$(ISE_PLATFORM)\$(ISE_C_COMPILER)\eiffel.rc%" driver.rc%N%
%%N%
%driver.res: driver.rc%N%
%%Trc -r driver.rc%N%
%%N%
%precomp.lib: $(C_OBJECTS)%N%
%%Tif exist $@ $(RM) $@%N%
%%Tlib -nologo -OUT:precomp.lib $(C_OBJECTS) $(EXTERNALS)%N%
%%N%
%driver.lnk: e1\emain.obj $(OBJECTS) driver.res %N%
%%Techo $(LDFLAGS) $(CCLDFLAGS) -OUT:driver.exe > $@%N%
%%Techo e1\emain.obj >> $@%N%
%%Techo $sharedlibs $(PRECOMP_OBJECTS) >> $@%N%
%$objects_redirection%N%
%%Techo $(EXTERNALS) $(EIFLIB) >> $@%N%
%%Techo driver.res >> $@"

-- cecil
cecil_make: "$(STATIC_CECIL): $(OBJECTS) $(EIFLIB) %N%
%%Tif exist $@ $(RM) $@%N%
%%Tlib -nologo -OUT:$(STATIC_CECIL) $(OBJECTS) $(EXTERNALS) $(EIFLIB) $(PRECOMP_OBJECTS)"

cecil_def: "%
%DEF_FILE= c_$appl.def %N%
%c_$appl.def: %N%
%%Tif exist $@ $(RM) $@%N%
%%Techo LIBRARY c_$appl.dll > $@%N%
%%Techo DESCRIPTION %'c_$appl.dll%' >> $@%N%
%%Ttype %"$(ISE_EIFFEL)\studio\spec\$(ISE_PLATFORM)\templates\cecil.def%"  >> $@"

cecil_dynlib: "%T/def:$(DEF_FILE) \%N%
	%%T/OUT:$(SHARED_CECIL) /IMPLIB:c_dll_$appl.lib%N"

system_dynlib: "%T/def:$(DEF_FILE) \%N%
	%%T/OUT:$(SYSTEM_IN_DYNAMIC_LIB) /IMPLIB:dll_$appl.lib $appl.res%N"

il_system_compilation_line: "%
	%$(IL_SYSTEM): $(OBJECTS) $(IL_RESOURCE).res%N%
	%%T$(FILE_EXIST) $(IL_SYSTEM) $(RM) $(IL_SYSTEM) %N%
	%%T$(SHAREDLINK) $(LDSHAREDFLAGS) -NODEFAULTLIB:libc -out:$(IL_SYSTEM) $(OBJECTS) $(SHAREDLIBS) $(EXTERNALS) $(IL_RESOURCE).res %N%
	%%T$(RM) $(OBJECTS)%N%
	%%Techo Success > completed.eif%N%N%
	%..\..\..\$(IL_RESOURCE).rc:%N%
	%%Tif not exist ..\..\..\$(IL_RESOURCE).rc $(MV) %"$(ISE_EIFFEL)\studio\config\$(ISE_PLATFORM)\$(ISE_C_COMPILER)\eiffel.rc%" ..\..\..\$(IL_RESOURCE).rc%N%
	%%N%
	%$(IL_RESOURCE).res: ..\..\..\$(IL_RESOURCE).rc Makefile%N%
	%%Trc -r -fo$(IL_RESOURCE).res ..\..\..\$(IL_RESOURCE).rc%N"

-- done
completed: "%Techo done > completed.eif"

all: "all:: "

intermediate_file_ext: "lib"

make_intermediate: "%Tif exist $@ $(RM) $@%N%
%%Tlib -nologo -OUT:$@ $(OBJECTS)%N%T$(CREATE_TEST)"

-- options below are for config internal use
-- mind the spaces!

no_subs: "!NO!SUBS!"

-- platform change directory command
cd: "cd"

-- text for remove command
rm_text: "RM ="

-- text for make command
make_text: "MAKE"

-- text for C-compiler command
cc_text: "$(CC) $(CFLAGS)"

cobj_text: ".c.obj:"
cppobj_text: ".cpp.obj:"
xobj_text: ".x.obj:"
xppobj_text: ".xpp.obj:"

obj_text: ".obj "

eobj_text: "$(OBJECTS"

objects__text: "$(OBJECTS)"

cecil_text: "cecil_make $appl"

-- platform 'parent' directory
updir: ".."

emain_text: "emain"

emain_obj_text: "emain.obj"

objects_text: "OBJECTS = "
c_objects_text: "C_OBJECTS = "

eobjects_text: "EOBJECTS = "

obj_file_ext: "obj"

executable_file_ext: ".exe"

driver_text: "\driver"

driver_filename: "driver.exe"

externals_text: "EXTERNALS"

externals_continuation_text: "EXTERNALS =  \"

start_test: "if not exist finished"

end_test: ""

create_test: "echo %"finished%" >> finished"

-- Layout variables

rt_include: "$ISE_EIFFEL\studio\spec\$ISE_PLATFORM\include"
rt_lib: "$ISE_EIFFEL\studio\spec\$ISE_PLATFORM\lib"
rt_templates: "$ISE_EIFFEL\studio\config\$ISE_PLATFORM\templates"
x2c: "$ISE_EIFFEL\studio\spec\$ISE_PLATFORM\bin\x2c.exe"

