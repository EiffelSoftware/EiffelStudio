<document title="Introduction" output="studio">
	<meta_data>
		<help/>
	</meta_data>
	<paragraph>
		<paragraph>The Eiffel compiler offers the possibility to generate a 
			<bold>dynamic shared library</bold> based on the system.
		</paragraph>
		<paragraph>Thanks to this dynamic library, it is possible to call Eiffel features from a C program, by using the real names of the features.</paragraph>
		<paragraph>In other words, the user can generate a DLL 
			<italic>(*.dll)</italic> using features of the system on windows, and/or a shared library 
			<italic>(*.so)</italic> on Unix.
		</paragraph>
		<paragraph>For that, the user has first to describe what he wants to export in his dynamic library. This is done via a definition file 
			<italic>(*.def)</italic>, which specifies what features should be exported. A 
			<link>
				<url>10_dynamic_library_builder.xml</url>
				<label>wizard</label>
			</link> helps build the definition file, which makes this step very intuitive. The second step is to select the definition file in the 
			<link>
				<url>../../25_project_settings/050_advanced_general.xml</url>
				<label>project settings</label>
			</link> to take this definition file into account. This done, the next compilation of the system will yield 
			<link>
				<url>30_output_files.xml</url>
				<label>C files</label>
			</link> that can be used to create the shared library.
		</paragraph>
	</paragraph></document>
