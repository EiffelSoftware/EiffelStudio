-- system:     "Gobo Eiffel Libraries precompilation %
--             %(with Gobo's 'base' cluster instead of EiffelBase)"
-- compiler:   "ISE Eiffel 4.4"
-- author:     "Eric Bezault <ericb@gobosoft.com>"
-- copyright:  "Copyright (c) 1999, Eric Bezault and others"
-- license:    "Eiffel Forum Freeware License v1 (see forum.txt)"
-- date:       "$Date$"
-- revision:   "$Revision$"

system

	gobo

root

	ANY

cluster

		-- Gobo Eiffel Lexical Library
	lx_automaton:		"$GOBO\library\lexical\automaton";
	lx_error:			"$GOBO\library\lexical\error";
	lx_generation:		"$GOBO\library\lexical\generation";
	lx_lex:				"$GOBO\library\lexical\lex";
	lx_regexp:			"$GOBO\library\lexical\regexp";
	lx_scanner:			"$GOBO\library\lexical\scanner";
	lx_skeleton:		"$GOBO\library\lexical\skeleton";
	lx_support:			"$GOBO\library\lexical\support";

		-- Gobo Eiffel Parse Library
	pr_error:			"$GOBO\library\parse\error";
	pr_fsm:				"$GOBO\library\parse\fsm";
	pr_generation:		"$GOBO\library\parse\generation";
	pr_grammar:			"$GOBO\library\parse\grammar";
	pr_parser:			"$GOBO\library\parse\parser";
	pr_skeleton:		"$GOBO\library\parse\skeleton";
	pr_support:			"$GOBO\library\parse\support";
	pr_yacc:			"$GOBO\library\parse\yacc";

		-- Gobo Eiffel Utility Library
	ut_command:			"$GOBO\library\utility\command";
	ut_error:			"$GOBO\library\utility\error";
	ut_formatter:		"$GOBO\library\utility\formatter";
	ut_support:			"$GOBO\library\utility\support";

		-- Gobo Eiffel Kernel Library
	kl_kernel:			"$GOBO\library\kernel";
	kl_kernel_spec:		"$GOBO\library\kernel\spec\ise";

		-- Gobo Eiffel Structure Library
	ds_base:			"$GOBO\library\structure\base";
	ds_container:		"$GOBO\library\structure\container";
	ds_cursor:			"$GOBO\library\structure\cursor";
	ds_dispenser:		"$GOBO\library\structure\dispenser";
	ds_list:			"$GOBO\library\structure\list";
	ds_sort:			"$GOBO\library\structure\sort";
	ds_support:			"$GOBO\library\structure\support";
	ds_table:			"$GOBO\library\structure\table";

		-- EiffelBase
	kernel:				"$EIFFEL4\library\base\kernel";
	support:			"$EIFFEL4\library\base\support";

external

	include_path: "$GOBO\library\kernel\include"

end
