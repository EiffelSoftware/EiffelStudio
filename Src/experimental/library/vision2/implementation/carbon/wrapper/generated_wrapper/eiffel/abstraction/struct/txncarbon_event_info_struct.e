-- This file has been generated by EWG. Do not edit. Changes will be lost!

class TXNCARBON_EVENT_INFO_STRUCT

inherit

	EWG_STRUCT

	TXNCARBON_EVENT_INFO_STRUCT_EXTERNAL
		export
			{NONE} all
		end

create

	make_new_unshared,
	make_new_shared,
	make_unshared,
	make_shared

feature {ANY} -- Access

	sizeof: INTEGER is
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	usecarbonevents: INTEGER is
			-- Access member `useCarbonEvents'
		require
			exists: exists
		do
			Result := get_usecarbonevents_external (item)
		ensure
			result_correct: Result = get_usecarbonevents_external (item)
		end

	set_usecarbonevents (a_value: INTEGER) is
			-- Set member `useCarbonEvents'
		require
			exists: exists
		do
			set_usecarbonevents_external (item, a_value)
		ensure
			a_value_set: a_value = usecarbonevents
		end

	filler: INTEGER is
			-- Access member `filler'
		require
			exists: exists
		do
			Result := get_filler_external (item)
		ensure
			result_correct: Result = get_filler_external (item)
		end

	set_filler (a_value: INTEGER) is
			-- Set member `filler'
		require
			exists: exists
		do
			set_filler_external (item, a_value)
		ensure
			a_value_set: a_value = filler
		end

	flags: INTEGER is
			-- Access member `flags'
		require
			exists: exists
		do
			Result := get_flags_external (item)
		ensure
			result_correct: Result = get_flags_external (item)
		end

	set_flags (a_value: INTEGER) is
			-- Set member `flags'
		require
			exists: exists
		do
			set_flags_external (item, a_value)
		ensure
			a_value_set: a_value = flags
		end

	fdictionary_struct: CFDICTIONARY_STRUCT is
			-- Access member `fDictionary'
		require
			exists: exists
		do
			create Result.make_shared (get_fdictionary_external (item))
		ensure
			result_not_void: Result /= Void
			result_has_correct_item: Result.item = fdictionary
		end

	set_fdictionary_struct (a_value: CFDICTIONARY_STRUCT) is
			-- Set member `fDictionary'
		require
			a_value_not_void: a_value /= Void
			exists: exists
		do
			set_fdictionary_external (item, a_value.item)
		ensure
			a_value_set: a_value.item = fdictionary
		end

	fdictionary: POINTER is
			-- Access member `fDictionary'
		require
			exists: exists
		do
			Result := get_fdictionary_external (item)
		ensure
			result_correct: Result = get_fdictionary_external (item)
		end

	set_fdictionary (a_value: POINTER) is
			-- Set member `fDictionary'
		require
			exists: exists
		do
			set_fdictionary_external (item, a_value)
		ensure
			a_value_set: a_value = fdictionary
		end

end
