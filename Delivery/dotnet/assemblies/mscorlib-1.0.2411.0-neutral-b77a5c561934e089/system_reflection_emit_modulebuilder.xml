<!DOCTYPE type SYSTEM "../type.dtd">
<class>
	<header>
		<modified>False</modified>
		<frozen>False</frozen>
		<expanded>False</expanded>
		<deferred>False</deferred>
		<generic>False</generic>
		<class_eiffel_name>SYSTEM_REFLECTION_EMIT_MODULEBUILDER</class_eiffel_name>
		<alias>
			<simple_name>ModuleBuilder</simple_name>
			<namespace>System.Reflection.Emit</namespace>
			<assembly_name>mscorlib</assembly_name>
			<assembly_version>1.0.2411.0</assembly_version>
			<assembly_culture>neutral</assembly_culture>
			<assembly_public_key>b77a5c561934e089</assembly_public_key>
		</alias>
		<inherit>
			<parent>
				<parent_name>SYSTEM_RUNTIME_SERIALIZATION_ISERIALIZABLE</parent_name>
			</parent>
			<parent>
				<parent_name>SYSTEM_REFLECTION_ICUSTOMATTRIBUTEPROVIDER</parent_name>
			</parent>
			<parent>
				<parent_name>SYSTEM_REFLECTION_MODULE</parent_name>
				<redefine>get_types, get_fully_qualified_name, get_type_string_boolean_boolean, get_type_string, get_type_string_boolean</redefine>
			</parent>
		</inherit>
		<create_none>True</create_none>
	</header>
	<body>
		<access>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_fully_qualified_name</feature_eiffel_name>
				<feature_external_name>get_FullyQualifiedName</feature_external_name>
				<return_type>STRING</return_type>
				<return_type_full_name>System.String</return_type_full_name>
			</feature>
		</access>
		<basic_operations>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_type_token_type</feature_eiffel_name>
				<feature_external_name>GetTypeToken</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>type</argument_eiffel_name>
						<argument_external_name>type</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_TYPETOKEN</return_type>
				<return_type_full_name>System.Reflection.Emit.TypeToken</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_type_string_type_attributes_type_packing_size</feature_eiffel_name>
				<feature_external_name>DefineType</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attr</argument_eiffel_name>
						<argument_external_name>attr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_TYPEATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.TypeAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parent</argument_eiffel_name>
						<argument_external_name>parent</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>packsize</argument_eiffel_name>
						<argument_external_name>packsize</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_PACKINGSIZE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.PackingSize</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_TYPEBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.TypeBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_document</feature_eiffel_name>
				<feature_external_name>DefineDocument</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>url</argument_eiffel_name>
						<argument_external_name>url</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>language</argument_eiffel_name>
						<argument_external_name>language</argument_external_name>
						<argument_type>SYSTEM_GUID</argument_type>
						<argument_type_full_name>System.Guid</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>language_vendor</argument_eiffel_name>
						<argument_external_name>languageVendor</argument_external_name>
						<argument_type>SYSTEM_GUID</argument_type>
						<argument_type_full_name>System.Guid</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>document_type</argument_eiffel_name>
						<argument_external_name>documentType</argument_external_name>
						<argument_type>SYSTEM_GUID</argument_type>
						<argument_type_full_name>System.Guid</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_DIAGNOSTICS_SYMBOLSTORE_ISYMBOLDOCUMENTWRITER</return_type>
				<return_type_full_name>System.Diagnostics.SymbolStore.ISymbolDocumentWriter</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_string_constant</feature_eiffel_name>
				<feature_external_name>GetStringConstant</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>str</argument_eiffel_name>
						<argument_external_name>str</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_STRINGTOKEN</return_type>
				<return_type_full_name>System.Reflection.Emit.StringToken</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_type_string_type_attributes_type</feature_eiffel_name>
				<feature_external_name>DefineType</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attr</argument_eiffel_name>
						<argument_external_name>attr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_TYPEATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.TypeAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parent</argument_eiffel_name>
						<argument_external_name>parent</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_TYPEBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.TypeBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_type_string_type_attributes_type_int32</feature_eiffel_name>
				<feature_external_name>DefineType</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attr</argument_eiffel_name>
						<argument_external_name>attr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_TYPEATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.TypeAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parent</argument_eiffel_name>
						<argument_external_name>parent</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>typesize</argument_eiffel_name>
						<argument_external_name>typesize</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_TYPEBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.TypeBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_custom_attribute_constructor_info</feature_eiffel_name>
				<feature_external_name>SetCustomAttribute</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>con</argument_eiffel_name>
						<argument_external_name>con</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_CONSTRUCTORINFO</argument_type>
						<argument_type_full_name>System.Reflection.ConstructorInfo</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>binary_attribute</argument_eiffel_name>
						<argument_external_name>binaryAttribute</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_enum</feature_eiffel_name>
				<feature_external_name>DefineEnum</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>visibility</argument_eiffel_name>
						<argument_external_name>visibility</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_TYPEATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.TypeAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>underlying_type</argument_eiffel_name>
						<argument_external_name>underlyingType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_ENUMBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.EnumBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_user_entry_point</feature_eiffel_name>
				<feature_external_name>SetUserEntryPoint</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>entry_point</argument_eiffel_name>
						<argument_external_name>entryPoint</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_METHODINFO</argument_type>
						<argument_type_full_name>System.Reflection.MethodInfo</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_global_method</feature_eiffel_name>
				<feature_external_name>DefineGlobalMethod</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_METHODATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.MethodAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>return_type</argument_eiffel_name>
						<argument_external_name>returnType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parameter_types</argument_eiffel_name>
						<argument_external_name>parameterTypes</argument_external_name>
						<argument_type>ARRAY [SYSTEM_TYPE]</argument_type>
						<argument_type_full_name>System.Type[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_METHODBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.MethodBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_signature_token</feature_eiffel_name>
				<feature_external_name>GetSignatureToken</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>sig_helper</argument_eiffel_name>
						<argument_external_name>sigHelper</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_SIGNATUREHELPER</argument_type>
						<argument_type_full_name>System.Reflection.Emit.SignatureHelper</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_SIGNATURETOKEN</return_type>
				<return_type_full_name>System.Reflection.Emit.SignatureToken</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_sym_custom_attribute</feature_eiffel_name>
				<feature_external_name>SetSymCustomAttribute</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>data</argument_eiffel_name>
						<argument_external_name>data</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_resource</feature_eiffel_name>
				<feature_external_name>DefineResource</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>description</argument_eiffel_name>
						<argument_external_name>description</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_RESOURCES_IRESOURCEWRITER</return_type>
				<return_type_full_name>System.Resources.IResourceWriter</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_custom_attribute</feature_eiffel_name>
				<feature_external_name>SetCustomAttribute</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>custom_builder</argument_eiffel_name>
						<argument_external_name>customBuilder</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_CUSTOMATTRIBUTEBUILDER</argument_type>
						<argument_type_full_name>System.Reflection.Emit.CustomAttributeBuilder</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_resource_string_string_resource_attributes</feature_eiffel_name>
				<feature_external_name>DefineResource</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>description</argument_eiffel_name>
						<argument_external_name>description</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attribute</argument_eiffel_name>
						<argument_external_name>attribute</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_RESOURCEATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.ResourceAttributes</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_RESOURCES_IRESOURCEWRITER</return_type>
				<return_type_full_name>System.Resources.IResourceWriter</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_type_string</feature_eiffel_name>
				<feature_external_name>GetType</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>class_name</argument_eiffel_name>
						<argument_external_name>className</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_TYPE</return_type>
				<return_type_full_name>System.Type</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_type_string_boolean</feature_eiffel_name>
				<feature_external_name>GetType</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>class_name</argument_eiffel_name>
						<argument_external_name>className</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>ignore_case</argument_eiffel_name>
						<argument_external_name>ignoreCase</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_TYPE</return_type>
				<return_type_full_name>System.Type</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_transient</feature_eiffel_name>
				<feature_external_name>IsTransient</feature_external_name>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_type</feature_eiffel_name>
				<feature_external_name>DefineType</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_TYPEBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.TypeBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_array_method</feature_eiffel_name>
				<feature_external_name>GetArrayMethod</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>array_class</argument_eiffel_name>
						<argument_external_name>arrayClass</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>method_name</argument_eiffel_name>
						<argument_external_name>methodName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>calling_convention</argument_eiffel_name>
						<argument_external_name>callingConvention</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_CALLINGCONVENTIONS</argument_type>
						<argument_type_full_name>System.Reflection.CallingConventions</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>return_type</argument_eiffel_name>
						<argument_external_name>returnType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parameter_types</argument_eiffel_name>
						<argument_external_name>parameterTypes</argument_external_name>
						<argument_type>ARRAY [SYSTEM_TYPE]</argument_type>
						<argument_type_full_name>System.Type[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_METHODINFO</return_type>
				<return_type_full_name>System.Reflection.MethodInfo</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_field_token</feature_eiffel_name>
				<feature_external_name>GetFieldToken</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>field</argument_eiffel_name>
						<argument_external_name>field</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_FIELDINFO</argument_type>
						<argument_type_full_name>System.Reflection.FieldInfo</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_FIELDTOKEN</return_type>
				<return_type_full_name>System.Reflection.Emit.FieldToken</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>create_global_functions</feature_eiffel_name>
				<feature_external_name>CreateGlobalFunctions</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_type_token</feature_eiffel_name>
				<feature_external_name>GetTypeToken</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_TYPETOKEN</return_type>
				<return_type_full_name>System.Reflection.Emit.TypeToken</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_sym_writer</feature_eiffel_name>
				<feature_external_name>GetSymWriter</feature_external_name>
				<return_type>SYSTEM_DIAGNOSTICS_SYMBOLSTORE_ISYMBOLWRITER</return_type>
				<return_type_full_name>System.Diagnostics.SymbolStore.ISymbolWriter</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_uninitialized_data</feature_eiffel_name>
				<feature_external_name>DefineUninitializedData</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>size</argument_eiffel_name>
						<argument_external_name>size</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_FIELDATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.FieldAttributes</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_FIELDBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.FieldBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_type_string_type_attributes</feature_eiffel_name>
				<feature_external_name>DefineType</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attr</argument_eiffel_name>
						<argument_external_name>attr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_TYPEATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.TypeAttributes</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_TYPEBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.TypeBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_initialized_data</feature_eiffel_name>
				<feature_external_name>DefineInitializedData</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>data</argument_eiffel_name>
						<argument_external_name>data</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_FIELDATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.FieldAttributes</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_FIELDBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.FieldBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_unmanaged_resource</feature_eiffel_name>
				<feature_external_name>DefineUnmanagedResource</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>resource_file_name</argument_eiffel_name>
						<argument_external_name>resourceFileName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_method_token</feature_eiffel_name>
				<feature_external_name>GetMethodToken</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>method</argument_eiffel_name>
						<argument_external_name>method</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_METHODINFO</argument_type>
						<argument_type_full_name>System.Reflection.MethodInfo</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_METHODTOKEN</return_type>
				<return_type_full_name>System.Reflection.Emit.MethodToken</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_type_string_type_attributes_type_array_type</feature_eiffel_name>
				<feature_external_name>DefineType</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attr</argument_eiffel_name>
						<argument_external_name>attr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_TYPEATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.TypeAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parent</argument_eiffel_name>
						<argument_external_name>parent</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>interfaces</argument_eiffel_name>
						<argument_external_name>interfaces</argument_external_name>
						<argument_type>ARRAY [SYSTEM_TYPE]</argument_type>
						<argument_type_full_name>System.Type[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_TYPEBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.TypeBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_signature_token_array_byte</feature_eiffel_name>
				<feature_external_name>GetSignatureToken</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>sig_bytes</argument_eiffel_name>
						<argument_external_name>sigBytes</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>sig_length</argument_eiffel_name>
						<argument_external_name>sigLength</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_SIGNATURETOKEN</return_type>
				<return_type_full_name>System.Reflection.Emit.SignatureToken</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_type_string_boolean_boolean</feature_eiffel_name>
				<feature_external_name>GetType</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>class_name</argument_eiffel_name>
						<argument_external_name>className</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>throw_on_error</argument_eiffel_name>
						<argument_external_name>throwOnError</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>ignore_case</argument_eiffel_name>
						<argument_external_name>ignoreCase</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_TYPE</return_type>
				<return_type_full_name>System.Type</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_unmanaged_resource_array_byte</feature_eiffel_name>
				<feature_external_name>DefineUnmanagedResource</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>resource</argument_eiffel_name>
						<argument_external_name>resource</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_type_string_type_attributes_type_packing_size_int32</feature_eiffel_name>
				<feature_external_name>DefineType</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attr</argument_eiffel_name>
						<argument_external_name>attr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_TYPEATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.TypeAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parent</argument_eiffel_name>
						<argument_external_name>parent</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>packing_size</argument_eiffel_name>
						<argument_external_name>packingSize</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_PACKINGSIZE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.PackingSize</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>typesize</argument_eiffel_name>
						<argument_external_name>typesize</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_TYPEBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.TypeBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_global_method_string_method_attributes_calling_conventions</feature_eiffel_name>
				<feature_external_name>DefineGlobalMethod</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_METHODATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.MethodAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>calling_convention</argument_eiffel_name>
						<argument_external_name>callingConvention</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_CALLINGCONVENTIONS</argument_type>
						<argument_type_full_name>System.Reflection.CallingConventions</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>return_type</argument_eiffel_name>
						<argument_external_name>returnType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parameter_types</argument_eiffel_name>
						<argument_external_name>parameterTypes</argument_external_name>
						<argument_type>ARRAY [SYSTEM_TYPE]</argument_type>
						<argument_type_full_name>System.Type[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_METHODBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.MethodBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_pinvoke_method_string_string_string</feature_eiffel_name>
				<feature_external_name>DefinePInvokeMethod</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>dll_name</argument_eiffel_name>
						<argument_external_name>dllName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>entry_name</argument_eiffel_name>
						<argument_external_name>entryName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_METHODATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.MethodAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>calling_convention</argument_eiffel_name>
						<argument_external_name>callingConvention</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_CALLINGCONVENTIONS</argument_type>
						<argument_type_full_name>System.Reflection.CallingConventions</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>return_type</argument_eiffel_name>
						<argument_external_name>returnType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parameter_types</argument_eiffel_name>
						<argument_external_name>parameterTypes</argument_external_name>
						<argument_type>ARRAY [SYSTEM_TYPE]</argument_type>
						<argument_type_full_name>System.Type[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>native_call_conv</argument_eiffel_name>
						<argument_external_name>nativeCallConv</argument_external_name>
						<argument_type>SYSTEM_RUNTIME_INTEROPSERVICES_CALLINGCONVENTION</argument_type>
						<argument_type_full_name>System.Runtime.InteropServices.CallingConvention</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>native_char_set</argument_eiffel_name>
						<argument_external_name>nativeCharSet</argument_external_name>
						<argument_type>SYSTEM_RUNTIME_INTEROPSERVICES_CHARSET</argument_type>
						<argument_type_full_name>System.Runtime.InteropServices.CharSet</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_METHODBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.MethodBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_constructor_token</feature_eiffel_name>
				<feature_external_name>GetConstructorToken</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>con</argument_eiffel_name>
						<argument_external_name>con</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_CONSTRUCTORINFO</argument_type>
						<argument_type_full_name>System.Reflection.ConstructorInfo</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_METHODTOKEN</return_type>
				<return_type_full_name>System.Reflection.Emit.MethodToken</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_array_method_token</feature_eiffel_name>
				<feature_external_name>GetArrayMethodToken</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>array_class</argument_eiffel_name>
						<argument_external_name>arrayClass</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>method_name</argument_eiffel_name>
						<argument_external_name>methodName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>calling_convention</argument_eiffel_name>
						<argument_external_name>callingConvention</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_CALLINGCONVENTIONS</argument_type>
						<argument_type_full_name>System.Reflection.CallingConventions</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>return_type</argument_eiffel_name>
						<argument_external_name>returnType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parameter_types</argument_eiffel_name>
						<argument_external_name>parameterTypes</argument_external_name>
						<argument_type>ARRAY [SYSTEM_TYPE]</argument_type>
						<argument_type_full_name>System.Type[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_METHODTOKEN</return_type>
				<return_type_full_name>System.Reflection.Emit.MethodToken</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_types</feature_eiffel_name>
				<feature_external_name>GetTypes</feature_external_name>
				<return_type>ARRAY [SYSTEM_TYPE]</return_type>
				<return_type_full_name>System.Type[]</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_pinvoke_method</feature_eiffel_name>
				<feature_external_name>DefinePInvokeMethod</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>dll_name</argument_eiffel_name>
						<argument_external_name>dllName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_METHODATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.MethodAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>calling_convention</argument_eiffel_name>
						<argument_external_name>callingConvention</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_CALLINGCONVENTIONS</argument_type>
						<argument_type_full_name>System.Reflection.CallingConventions</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>return_type</argument_eiffel_name>
						<argument_external_name>returnType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parameter_types</argument_eiffel_name>
						<argument_external_name>parameterTypes</argument_external_name>
						<argument_type>ARRAY [SYSTEM_TYPE]</argument_type>
						<argument_type_full_name>System.Type[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>native_call_conv</argument_eiffel_name>
						<argument_external_name>nativeCallConv</argument_external_name>
						<argument_type>SYSTEM_RUNTIME_INTEROPSERVICES_CALLINGCONVENTION</argument_type>
						<argument_type_full_name>System.Runtime.InteropServices.CallingConvention</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>native_char_set</argument_eiffel_name>
						<argument_external_name>nativeCharSet</argument_external_name>
						<argument_type>SYSTEM_RUNTIME_INTEROPSERVICES_CHARSET</argument_type>
						<argument_type_full_name>System.Runtime.InteropServices.CharSet</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_METHODBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.MethodBuilder</return_type_full_name>
			</feature>
		</basic_operations>
		<bit_or_infix>False</bit_or_infix>
	</body>
</class>