case $CONFIG in
'')
    if test -f config.sh; then TOP=.;
    elif test -f ../config.sh; then TOP=..;
    elif test -f ../../config.sh; then TOP=../..;
    elif test -f ../../../config.sh; then TOP=../../..;
    elif test -f ../../../../config.sh; then TOP=../../../..;
    else
        echo "Can't find config.sh."; exit 1
    fi
    . $TOP/config.sh
    ;;
esac
case "$0" in
*/*) cd `expr X$0 : 'X\(.*\)/'` ;;
esac
CURRENT=.
DIR=`echo $CURRENT/ | sed -e 's/\.\///g'`
echo "Extracting ${DIR}Makefile (with variable substitutions)"
$spitshell >Makefile <<!GROK!THIS!

AR = $ar rc
CC = $cc
INCLUDE_PATH = -I. -I../run-time -I../run-time/include
CFLAGS = \$(INCLUDE_PATH)
JCFLAGS = \$(CFLAGS) $optimize $ccflags $large
RM = $rm -f
RANLIB = $ranlib
SHAREDLINK= $sharedlink
LDSHAREDFLAGS = $ldsharedflags

!GROK!THIS!
$spitshell >>Makefile <<'!NO!SUBS!'

OBJECTS = minilzo.o

.c.o:
	$(RM) $@
	$(CC) -c $(JCFLAGS) $<

all:: libminilzo.so


libminilzo.so: $(OBJECTS)
	$(RM) $@
	$(SHAREDLINK) $(LDSHAREDFLAGS) $@ $(OBJECTS)

clean::
	\$(RM) *.o 

clobber:: clean
	\$(RM) Makefile *.o
	
Makefiles::

Makefiles.SH::

########################################################################
# Dependencies generated by make depend
# DO NOT DELETE THIS LINE -- make depend relies on it

# Put nothing here or make depend will gobble it up
.FORCE_DEPEND::
	@echo "You must run 'make depend' in $(TOP) first."; exit 1
!NO!SUBS!
chmod 644 Makefile
$eunicefix Makefile
