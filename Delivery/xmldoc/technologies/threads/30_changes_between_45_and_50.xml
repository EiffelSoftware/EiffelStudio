<document title="Changes between 4.5 and 5.0" output="studio">
	<meta_data/>
	<paragraph>
	Users of EiffelThread in 4.5 will notice a few changes that we made to make their life easier. 
		<heading>
			<size>2</size>Object sharing 
		</heading>
		<paragraph>Indeed one aspect of EiffelThread in 4.5 that was not easy to implement was object sharing between threads. Most of the difficulty came from our special implementation of the Eiffel Software GC (Garbage Collector) where each thread had its own GC. </paragraph>
		<paragraph>A consequence was that an object in thread A referencing an object in thread B needed to let the GC of B that it had a reference to an object that belongs to him. This was done by using the <code><class_name>PROXY</class_name></code> class and instead of referencing the object directly you were referencing the <code><class_name>PROXY</class_name></code> object. Another limitation of this approach was that the referred object could not hold reference to other objects, it could only hold values of basic expanded types (also previously called flat objects)</paragraph>
		<paragraph>Now, there is a global GC and therefore you do not need to use the <code><class_name>PROXY</class_name></code> class anymore and you can reference any kind of objects. The PROXY class is still available for backward compatibility, but it is now obsolete and its implementation has been reduced to a bare minimum. </paragraph>
		<paragraph>The class <code><class_name>OBJECT_CONTROL</class_name></code> has been removed altogether and the class <code><class_name>OBJECT_OWNER</class_name></code> is now obsolete as well. </paragraph> 
		<heading>
			<size>2</size>Global onces
		</heading>
		<paragraph>In 4.5, you would have to use a special tricky way to create once per process feature by using an existing once per thread feature and an external C feature that we were providing to achieve a once per process behavior. </paragraph>
		<paragraph>In 5.0, this has been simplified and you can now specify at the level of the source code if it will be a once per process or once per thread. Click <link><url>20_once_features.xml</url><label>here</label></link> for more details on how this is done. </paragraph>
	</paragraph></document>
