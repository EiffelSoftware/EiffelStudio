<!DOCTYPE type SYSTEM "../type.dtd">
<class>
	<header>
		<modified>False</modified>
		<frozen>True</frozen>
		<expanded>False</expanded>
		<deferred>False</deferred>
		<generic>False</generic>
		<class_eiffel_name>SYSTEM_APPDOMAIN</class_eiffel_name>
		<alias>
			<simple_name>AppDomain</simple_name>
			<namespace>System</namespace>
			<assembly_name>mscorlib</assembly_name>
			<assembly_version>1.0.2411.0</assembly_version>
			<assembly_culture>neutral</assembly_culture>
			<assembly_public_key>b77a5c561934e089</assembly_public_key>
		</alias>
		<inherit>
			<parent>
				<parent_name>SYSTEM_SECURITY_IEVIDENCEFACTORY</parent_name>
			</parent>
			<parent>
				<parent_name>SYSTEM_MARSHALBYREFOBJECT</parent_name>
				<redefine>initialize_lifetime_service, to_string</redefine>
			</parent>
		</inherit>
		<create_none>True</create_none>
	</header>
	<body>
		<access>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_relative_search_path</feature_eiffel_name>
				<feature_external_name>get_RelativeSearchPath</feature_external_name>
				<return_type>STRING</return_type>
				<return_type_full_name>System.String</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_evidence</feature_eiffel_name>
				<feature_external_name>get_Evidence</feature_external_name>
				<return_type>SYSTEM_SECURITY_POLICY_EVIDENCE</return_type>
				<return_type_full_name>System.Security.Policy.Evidence</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_shadow_copy_files</feature_eiffel_name>
				<feature_external_name>get_ShadowCopyFiles</feature_external_name>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_dynamic_directory</feature_eiffel_name>
				<feature_external_name>get_DynamicDirectory</feature_external_name>
				<return_type>STRING</return_type>
				<return_type_full_name>System.String</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>True</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_current_domain</feature_eiffel_name>
				<feature_external_name>get_CurrentDomain</feature_external_name>
				<return_type>SYSTEM_APPDOMAIN</return_type>
				<return_type_full_name>System.AppDomain</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_setup_information</feature_eiffel_name>
				<feature_external_name>get_SetupInformation</feature_external_name>
				<return_type>SYSTEM_APPDOMAINSETUP</return_type>
				<return_type_full_name>System.AppDomainSetup</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_friendly_name</feature_eiffel_name>
				<feature_external_name>get_FriendlyName</feature_external_name>
				<return_type>STRING</return_type>
				<return_type_full_name>System.String</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_base_directory</feature_eiffel_name>
				<feature_external_name>get_BaseDirectory</feature_external_name>
				<return_type>STRING</return_type>
				<return_type_full_name>System.String</return_type_full_name>
			</feature>
		</access>
		<element_change>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>remove_process_exit</feature_eiffel_name>
				<feature_external_name>remove_ProcessExit</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_EVENTHANDLER</argument_type>
						<argument_type_full_name>System.EventHandler</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>remove_unhandled_exception</feature_eiffel_name>
				<feature_external_name>remove_UnhandledException</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_UNHANDLEDEXCEPTIONEVENTHANDLER</argument_type>
						<argument_type_full_name>System.UnhandledExceptionEventHandler</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_process_exit</feature_eiffel_name>
				<feature_external_name>add_ProcessExit</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_EVENTHANDLER</argument_type>
						<argument_type_full_name>System.EventHandler</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_domain_unload</feature_eiffel_name>
				<feature_external_name>add_DomainUnload</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_EVENTHANDLER</argument_type>
						<argument_type_full_name>System.EventHandler</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>remove_assembly_load</feature_eiffel_name>
				<feature_external_name>remove_AssemblyLoad</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_ASSEMBLYLOADEVENTHANDLER</argument_type>
						<argument_type_full_name>System.AssemblyLoadEventHandler</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>remove_assembly_resolve</feature_eiffel_name>
				<feature_external_name>remove_AssemblyResolve</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_RESOLVEEVENTHANDLER</argument_type>
						<argument_type_full_name>System.ResolveEventHandler</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>remove_type_resolve</feature_eiffel_name>
				<feature_external_name>remove_TypeResolve</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_RESOLVEEVENTHANDLER</argument_type>
						<argument_type_full_name>System.ResolveEventHandler</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_assembly_load</feature_eiffel_name>
				<feature_external_name>add_AssemblyLoad</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_ASSEMBLYLOADEVENTHANDLER</argument_type>
						<argument_type_full_name>System.AssemblyLoadEventHandler</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>remove_domain_unload</feature_eiffel_name>
				<feature_external_name>remove_DomainUnload</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_EVENTHANDLER</argument_type>
						<argument_type_full_name>System.EventHandler</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_type_resolve</feature_eiffel_name>
				<feature_external_name>add_TypeResolve</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_RESOLVEEVENTHANDLER</argument_type>
						<argument_type_full_name>System.ResolveEventHandler</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_unhandled_exception</feature_eiffel_name>
				<feature_external_name>add_UnhandledException</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_UNHANDLEDEXCEPTIONEVENTHANDLER</argument_type>
						<argument_type_full_name>System.UnhandledExceptionEventHandler</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_resource_resolve</feature_eiffel_name>
				<feature_external_name>add_ResourceResolve</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_RESOLVEEVENTHANDLER</argument_type>
						<argument_type_full_name>System.ResolveEventHandler</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>remove_resource_resolve</feature_eiffel_name>
				<feature_external_name>remove_ResourceResolve</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_RESOLVEEVENTHANDLER</argument_type>
						<argument_type_full_name>System.ResolveEventHandler</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_assembly_resolve</feature_eiffel_name>
				<feature_external_name>add_AssemblyResolve</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>value</argument_eiffel_name>
						<argument_external_name>value</argument_external_name>
						<argument_type>SYSTEM_RESOLVEEVENTHANDLER</argument_type>
						<argument_type_full_name>System.ResolveEventHandler</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
		</element_change>
		<basic_operations>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_app_domain_policy</feature_eiffel_name>
				<feature_external_name>SetAppDomainPolicy</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>domain_policy</argument_eiffel_name>
						<argument_external_name>domainPolicy</argument_external_name>
						<argument_type>SYSTEM_SECURITY_POLICY_POLICYLEVEL</argument_type>
						<argument_type_full_name>System.Security.Policy.PolicyLevel</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>to_string</feature_eiffel_name>
				<feature_external_name>ToString</feature_external_name>
				<return_type>STRING</return_type>
				<return_type_full_name>System.String</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_dynamic_assembly_assembly_name_assembly_builder_access_string_evidence_permission_set_permission_set_permission_set</feature_eiffel_name>
				<feature_external_name>DefineDynamicAssembly</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_ASSEMBLYNAME</argument_type>
						<argument_type_full_name>System.Reflection.AssemblyName</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>access</argument_eiffel_name>
						<argument_external_name>access</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_ASSEMBLYBUILDERACCESS</argument_type>
						<argument_type_full_name>System.Reflection.Emit.AssemblyBuilderAccess</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>dir</argument_eiffel_name>
						<argument_external_name>dir</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>evidence</argument_eiffel_name>
						<argument_external_name>evidence</argument_external_name>
						<argument_type>SYSTEM_SECURITY_POLICY_EVIDENCE</argument_type>
						<argument_type_full_name>System.Security.Policy.Evidence</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>required_permissions</argument_eiffel_name>
						<argument_external_name>requiredPermissions</argument_external_name>
						<argument_type>SYSTEM_SECURITY_PERMISSIONSET</argument_type>
						<argument_type_full_name>System.Security.PermissionSet</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>optional_permissions</argument_eiffel_name>
						<argument_external_name>optionalPermissions</argument_external_name>
						<argument_type>SYSTEM_SECURITY_PERMISSIONSET</argument_type>
						<argument_type_full_name>System.Security.PermissionSet</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>refused_permissions</argument_eiffel_name>
						<argument_external_name>refusedPermissions</argument_external_name>
						<argument_type>SYSTEM_SECURITY_PERMISSIONSET</argument_type>
						<argument_type_full_name>System.Security.PermissionSet</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_ASSEMBLYBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.AssemblyBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>True</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>create_domain_string_evidence_string</feature_eiffel_name>
				<feature_external_name>CreateDomain</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>friendly_name</argument_eiffel_name>
						<argument_external_name>friendlyName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>security_info</argument_eiffel_name>
						<argument_external_name>securityInfo</argument_external_name>
						<argument_type>SYSTEM_SECURITY_POLICY_EVIDENCE</argument_type>
						<argument_type_full_name>System.Security.Policy.Evidence</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>app_base_path</argument_eiffel_name>
						<argument_external_name>appBasePath</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>app_relative_search_path</argument_eiffel_name>
						<argument_external_name>appRelativeSearchPath</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>shadow_copy_files</argument_eiffel_name>
						<argument_external_name>shadowCopyFiles</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_APPDOMAIN</return_type>
				<return_type_full_name>System.AppDomain</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_data</feature_eiffel_name>
				<feature_external_name>SetData</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>data</argument_eiffel_name>
						<argument_external_name>data</argument_external_name>
						<argument_type>ANY</argument_type>
						<argument_type_full_name>System.Object</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_type_type</feature_eiffel_name>
				<feature_external_name>GetType</feature_external_name>
				<return_type>SYSTEM_TYPE</return_type>
				<return_type_full_name>System.Type</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>True</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>unload</feature_eiffel_name>
				<feature_external_name>Unload</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>domain</argument_eiffel_name>
						<argument_external_name>domain</argument_external_name>
						<argument_type>SYSTEM_APPDOMAIN</argument_type>
						<argument_type_full_name>System.AppDomain</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_assemblies</feature_eiffel_name>
				<feature_external_name>GetAssemblies</feature_external_name>
				<return_type>ARRAY [SYSTEM_REFLECTION_ASSEMBLY]</return_type>
				<return_type_full_name>System.Reflection.Assembly[]</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>create_instance_string_string_boolean</feature_eiffel_name>
				<feature_external_name>CreateInstance</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_name</argument_eiffel_name>
						<argument_external_name>assemblyName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>type_name</argument_eiffel_name>
						<argument_external_name>typeName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>ignore_case</argument_eiffel_name>
						<argument_external_name>ignoreCase</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>binding_attr</argument_eiffel_name>
						<argument_external_name>bindingAttr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDINGFLAGS</argument_type>
						<argument_type_full_name>System.Reflection.BindingFlags</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>binder</argument_eiffel_name>
						<argument_external_name>binder</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDER</argument_type>
						<argument_type_full_name>System.Reflection.Binder</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>args</argument_eiffel_name>
						<argument_external_name>args</argument_external_name>
						<argument_type>ARRAY [ANY]</argument_type>
						<argument_type_full_name>System.Object[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>culture</argument_eiffel_name>
						<argument_external_name>culture</argument_external_name>
						<argument_type>SYSTEM_GLOBALIZATION_CULTUREINFO</argument_type>
						<argument_type_full_name>System.Globalization.CultureInfo</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>activation_attributes</argument_eiffel_name>
						<argument_external_name>activationAttributes</argument_external_name>
						<argument_type>ARRAY [ANY]</argument_type>
						<argument_type_full_name>System.Object[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>security_attributes</argument_eiffel_name>
						<argument_external_name>securityAttributes</argument_external_name>
						<argument_type>SYSTEM_SECURITY_POLICY_EVIDENCE</argument_type>
						<argument_type_full_name>System.Security.Policy.Evidence</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_RUNTIME_REMOTING_OBJECTHANDLE</return_type>
				<return_type_full_name>System.Runtime.Remoting.ObjectHandle</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>load_array_byte_array_byte</feature_eiffel_name>
				<feature_external_name>Load</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>raw_assembly</argument_eiffel_name>
						<argument_external_name>rawAssembly</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>raw_symbol_store</argument_eiffel_name>
						<argument_external_name>rawSymbolStore</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_ASSEMBLY</return_type>
				<return_type_full_name>System.Reflection.Assembly</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>True</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>create_domain_string_evidence</feature_eiffel_name>
				<feature_external_name>CreateDomain</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>friendly_name</argument_eiffel_name>
						<argument_external_name>friendlyName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>security_info</argument_eiffel_name>
						<argument_external_name>securityInfo</argument_external_name>
						<argument_type>SYSTEM_SECURITY_POLICY_EVIDENCE</argument_type>
						<argument_type_full_name>System.Security.Policy.Evidence</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_APPDOMAIN</return_type>
				<return_type_full_name>System.AppDomain</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>load_array_byte_array_byte_evidence</feature_eiffel_name>
				<feature_external_name>Load</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>raw_assembly</argument_eiffel_name>
						<argument_external_name>rawAssembly</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>raw_symbol_store</argument_eiffel_name>
						<argument_external_name>rawSymbolStore</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>security_evidence</argument_eiffel_name>
						<argument_external_name>securityEvidence</argument_external_name>
						<argument_type>SYSTEM_SECURITY_POLICY_EVIDENCE</argument_type>
						<argument_type_full_name>System.Security.Policy.Evidence</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_ASSEMBLY</return_type>
				<return_type_full_name>System.Reflection.Assembly</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_shadow_copy_files</feature_eiffel_name>
				<feature_external_name>SetShadowCopyFiles</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_thread_principal</feature_eiffel_name>
				<feature_external_name>SetThreadPrincipal</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>principal</argument_eiffel_name>
						<argument_external_name>principal</argument_external_name>
						<argument_type>SYSTEM_SECURITY_PRINCIPAL_IPRINCIPAL</argument_type>
						<argument_type_full_name>System.Security.Principal.IPrincipal</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>create_instance_from_and_unwrap_string_string_array_object</feature_eiffel_name>
				<feature_external_name>CreateInstanceFromAndUnwrap</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_name</argument_eiffel_name>
						<argument_external_name>assemblyName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>type_name</argument_eiffel_name>
						<argument_external_name>typeName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>activation_attributes</argument_eiffel_name>
						<argument_external_name>activationAttributes</argument_external_name>
						<argument_type>ARRAY [ANY]</argument_type>
						<argument_type_full_name>System.Object[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>ANY</return_type>
				<return_type_full_name>System.Object</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>create_instance_from</feature_eiffel_name>
				<feature_external_name>CreateInstanceFrom</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_file</argument_eiffel_name>
						<argument_external_name>assemblyFile</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>type_name</argument_eiffel_name>
						<argument_external_name>typeName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_RUNTIME_REMOTING_OBJECTHANDLE</return_type>
				<return_type_full_name>System.Runtime.Remoting.ObjectHandle</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_dynamic_assembly</feature_eiffel_name>
				<feature_external_name>DefineDynamicAssembly</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_ASSEMBLYNAME</argument_type>
						<argument_type_full_name>System.Reflection.AssemblyName</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>access</argument_eiffel_name>
						<argument_external_name>access</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_ASSEMBLYBUILDERACCESS</argument_type>
						<argument_type_full_name>System.Reflection.Emit.AssemblyBuilderAccess</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_ASSEMBLYBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.AssemblyBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_dynamic_assembly_assembly_name_assembly_builder_access_permission_set</feature_eiffel_name>
				<feature_external_name>DefineDynamicAssembly</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_ASSEMBLYNAME</argument_type>
						<argument_type_full_name>System.Reflection.AssemblyName</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>access</argument_eiffel_name>
						<argument_external_name>access</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_ASSEMBLYBUILDERACCESS</argument_type>
						<argument_type_full_name>System.Reflection.Emit.AssemblyBuilderAccess</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>required_permissions</argument_eiffel_name>
						<argument_external_name>requiredPermissions</argument_external_name>
						<argument_type>SYSTEM_SECURITY_PERMISSIONSET</argument_type>
						<argument_type_full_name>System.Security.PermissionSet</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>optional_permissions</argument_eiffel_name>
						<argument_external_name>optionalPermissions</argument_external_name>
						<argument_type>SYSTEM_SECURITY_PERMISSIONSET</argument_type>
						<argument_type_full_name>System.Security.PermissionSet</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>refused_permissions</argument_eiffel_name>
						<argument_external_name>refusedPermissions</argument_external_name>
						<argument_type>SYSTEM_SECURITY_PERMISSIONSET</argument_type>
						<argument_type_full_name>System.Security.PermissionSet</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_ASSEMBLYBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.AssemblyBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>create_com_instance_from</feature_eiffel_name>
				<feature_external_name>CreateComInstanceFrom</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_name</argument_eiffel_name>
						<argument_external_name>assemblyName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>type_name</argument_eiffel_name>
						<argument_external_name>typeName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_RUNTIME_REMOTING_OBJECTHANDLE</return_type>
				<return_type_full_name>System.Runtime.Remoting.ObjectHandle</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>create_instance_and_unwrap_string_string_boolean</feature_eiffel_name>
				<feature_external_name>CreateInstanceAndUnwrap</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_name</argument_eiffel_name>
						<argument_external_name>assemblyName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>type_name</argument_eiffel_name>
						<argument_external_name>typeName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>ignore_case</argument_eiffel_name>
						<argument_external_name>ignoreCase</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>binding_attr</argument_eiffel_name>
						<argument_external_name>bindingAttr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDINGFLAGS</argument_type>
						<argument_type_full_name>System.Reflection.BindingFlags</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>binder</argument_eiffel_name>
						<argument_external_name>binder</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDER</argument_type>
						<argument_type_full_name>System.Reflection.Binder</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>args</argument_eiffel_name>
						<argument_external_name>args</argument_external_name>
						<argument_type>ARRAY [ANY]</argument_type>
						<argument_type_full_name>System.Object[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>culture</argument_eiffel_name>
						<argument_external_name>culture</argument_external_name>
						<argument_type>SYSTEM_GLOBALIZATION_CULTUREINFO</argument_type>
						<argument_type_full_name>System.Globalization.CultureInfo</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>activation_attributes</argument_eiffel_name>
						<argument_external_name>activationAttributes</argument_external_name>
						<argument_type>ARRAY [ANY]</argument_type>
						<argument_type_full_name>System.Object[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>security_attributes</argument_eiffel_name>
						<argument_external_name>securityAttributes</argument_external_name>
						<argument_type>SYSTEM_SECURITY_POLICY_EVIDENCE</argument_type>
						<argument_type_full_name>System.Security.Policy.Evidence</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>ANY</return_type>
				<return_type_full_name>System.Object</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>True</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>create_domain</feature_eiffel_name>
				<feature_external_name>CreateDomain</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>friendly_name</argument_eiffel_name>
						<argument_external_name>friendlyName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_APPDOMAIN</return_type>
				<return_type_full_name>System.AppDomain</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_cache_path</feature_eiffel_name>
				<feature_external_name>SetCachePath</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>path</argument_eiffel_name>
						<argument_external_name>path</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_dynamic_assembly_assembly_name_assembly_builder_access_evidence</feature_eiffel_name>
				<feature_external_name>DefineDynamicAssembly</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_ASSEMBLYNAME</argument_type>
						<argument_type_full_name>System.Reflection.AssemblyName</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>access</argument_eiffel_name>
						<argument_external_name>access</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_ASSEMBLYBUILDERACCESS</argument_type>
						<argument_type_full_name>System.Reflection.Emit.AssemblyBuilderAccess</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>evidence</argument_eiffel_name>
						<argument_external_name>evidence</argument_external_name>
						<argument_type>SYSTEM_SECURITY_POLICY_EVIDENCE</argument_type>
						<argument_type_full_name>System.Security.Policy.Evidence</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_ASSEMBLYBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.AssemblyBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>create_instance</feature_eiffel_name>
				<feature_external_name>CreateInstance</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_name</argument_eiffel_name>
						<argument_external_name>assemblyName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>type_name</argument_eiffel_name>
						<argument_external_name>typeName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_RUNTIME_REMOTING_OBJECTHANDLE</return_type>
				<return_type_full_name>System.Runtime.Remoting.ObjectHandle</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_dynamic_assembly_assembly_name_assembly_builder_access_string</feature_eiffel_name>
				<feature_external_name>DefineDynamicAssembly</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_ASSEMBLYNAME</argument_type>
						<argument_type_full_name>System.Reflection.AssemblyName</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>access</argument_eiffel_name>
						<argument_external_name>access</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_ASSEMBLYBUILDERACCESS</argument_type>
						<argument_type_full_name>System.Reflection.Emit.AssemblyBuilderAccess</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>dir</argument_eiffel_name>
						<argument_external_name>dir</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_ASSEMBLYBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.AssemblyBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>clear_shadow_copy_path</feature_eiffel_name>
				<feature_external_name>ClearShadowCopyPath</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>load_assembly_name</feature_eiffel_name>
				<feature_external_name>Load</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_ref</argument_eiffel_name>
						<argument_external_name>assemblyRef</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_ASSEMBLYNAME</argument_type>
						<argument_type_full_name>System.Reflection.AssemblyName</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_ASSEMBLY</return_type>
				<return_type_full_name>System.Reflection.Assembly</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_dynamic_assembly_assembly_name_assembly_builder_access_string_evidence</feature_eiffel_name>
				<feature_external_name>DefineDynamicAssembly</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_ASSEMBLYNAME</argument_type>
						<argument_type_full_name>System.Reflection.AssemblyName</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>access</argument_eiffel_name>
						<argument_external_name>access</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_ASSEMBLYBUILDERACCESS</argument_type>
						<argument_type_full_name>System.Reflection.Emit.AssemblyBuilderAccess</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>dir</argument_eiffel_name>
						<argument_external_name>dir</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>evidence</argument_eiffel_name>
						<argument_external_name>evidence</argument_external_name>
						<argument_type>SYSTEM_SECURITY_POLICY_EVIDENCE</argument_type>
						<argument_type_full_name>System.Security.Policy.Evidence</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_ASSEMBLYBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.AssemblyBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_data</feature_eiffel_name>
				<feature_external_name>GetData</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>ANY</return_type>
				<return_type_full_name>System.Object</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>create_instance_from_and_unwrap</feature_eiffel_name>
				<feature_external_name>CreateInstanceFromAndUnwrap</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_name</argument_eiffel_name>
						<argument_external_name>assemblyName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>type_name</argument_eiffel_name>
						<argument_external_name>typeName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>ANY</return_type>
				<return_type_full_name>System.Object</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>initialize_lifetime_service</feature_eiffel_name>
				<feature_external_name>InitializeLifetimeService</feature_external_name>
				<return_type>ANY</return_type>
				<return_type_full_name>System.Object</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>do_call_back</feature_eiffel_name>
				<feature_external_name>DoCallBack</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>call_back_delegate</argument_eiffel_name>
						<argument_external_name>callBackDelegate</argument_external_name>
						<argument_type>SYSTEM_CROSSAPPDOMAINDELEGATE</argument_type>
						<argument_type_full_name>System.CrossAppDomainDelegate</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>append_private_path</feature_eiffel_name>
				<feature_external_name>AppendPrivatePath</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>path</argument_eiffel_name>
						<argument_external_name>path</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>load_assembly_name_evidence</feature_eiffel_name>
				<feature_external_name>Load</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_ref</argument_eiffel_name>
						<argument_external_name>assemblyRef</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_ASSEMBLYNAME</argument_type>
						<argument_type_full_name>System.Reflection.AssemblyName</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>assembly_security</argument_eiffel_name>
						<argument_external_name>assemblySecurity</argument_external_name>
						<argument_type>SYSTEM_SECURITY_POLICY_EVIDENCE</argument_type>
						<argument_type_full_name>System.Security.Policy.Evidence</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_ASSEMBLY</return_type>
				<return_type_full_name>System.Reflection.Assembly</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>load_assembly_name_evidence_string</feature_eiffel_name>
				<feature_external_name>Load</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_ref</argument_eiffel_name>
						<argument_external_name>assemblyRef</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_ASSEMBLYNAME</argument_type>
						<argument_type_full_name>System.Reflection.AssemblyName</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>assembly_security</argument_eiffel_name>
						<argument_external_name>assemblySecurity</argument_external_name>
						<argument_type>SYSTEM_SECURITY_POLICY_EVIDENCE</argument_type>
						<argument_type_full_name>System.Security.Policy.Evidence</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>caller_location</argument_eiffel_name>
						<argument_external_name>callerLocation</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_ASSEMBLY</return_type>
				<return_type_full_name>System.Reflection.Assembly</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>True</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_current_thread_id</feature_eiffel_name>
				<feature_external_name>GetCurrentThreadId</feature_external_name>
				<return_type>INTEGER</return_type>
				<return_type_full_name>System.Int32</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_dynamic_assembly_assembly_name_assembly_builder_access_string_evidence_permission_set_permission_set_permission_set_boolean</feature_eiffel_name>
				<feature_external_name>DefineDynamicAssembly</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_ASSEMBLYNAME</argument_type>
						<argument_type_full_name>System.Reflection.AssemblyName</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>access</argument_eiffel_name>
						<argument_external_name>access</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_ASSEMBLYBUILDERACCESS</argument_type>
						<argument_type_full_name>System.Reflection.Emit.AssemblyBuilderAccess</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>dir</argument_eiffel_name>
						<argument_external_name>dir</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>evidence</argument_eiffel_name>
						<argument_external_name>evidence</argument_external_name>
						<argument_type>SYSTEM_SECURITY_POLICY_EVIDENCE</argument_type>
						<argument_type_full_name>System.Security.Policy.Evidence</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>required_permissions</argument_eiffel_name>
						<argument_external_name>requiredPermissions</argument_external_name>
						<argument_type>SYSTEM_SECURITY_PERMISSIONSET</argument_type>
						<argument_type_full_name>System.Security.PermissionSet</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>optional_permissions</argument_eiffel_name>
						<argument_external_name>optionalPermissions</argument_external_name>
						<argument_type>SYSTEM_SECURITY_PERMISSIONSET</argument_type>
						<argument_type_full_name>System.Security.PermissionSet</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>refused_permissions</argument_eiffel_name>
						<argument_external_name>refusedPermissions</argument_external_name>
						<argument_type>SYSTEM_SECURITY_PERMISSIONSET</argument_type>
						<argument_type_full_name>System.Security.PermissionSet</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>is_synchronized</argument_eiffel_name>
						<argument_external_name>isSynchronized</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_ASSEMBLYBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.AssemblyBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>load_array_byte</feature_eiffel_name>
				<feature_external_name>Load</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>raw_assembly</argument_eiffel_name>
						<argument_external_name>rawAssembly</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_ASSEMBLY</return_type>
				<return_type_full_name>System.Reflection.Assembly</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>create_instance_string_string_array_object</feature_eiffel_name>
				<feature_external_name>CreateInstance</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_name</argument_eiffel_name>
						<argument_external_name>assemblyName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>type_name</argument_eiffel_name>
						<argument_external_name>typeName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>activation_attributes</argument_eiffel_name>
						<argument_external_name>activationAttributes</argument_external_name>
						<argument_type>ARRAY [ANY]</argument_type>
						<argument_type_full_name>System.Object[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_RUNTIME_REMOTING_OBJECTHANDLE</return_type>
				<return_type_full_name>System.Runtime.Remoting.ObjectHandle</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>load</feature_eiffel_name>
				<feature_external_name>Load</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_string</argument_eiffel_name>
						<argument_external_name>assemblyString</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_ASSEMBLY</return_type>
				<return_type_full_name>System.Reflection.Assembly</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>create_instance_and_unwrap_string_string_array_object</feature_eiffel_name>
				<feature_external_name>CreateInstanceAndUnwrap</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_name</argument_eiffel_name>
						<argument_external_name>assemblyName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>type_name</argument_eiffel_name>
						<argument_external_name>typeName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>activation_attributes</argument_eiffel_name>
						<argument_external_name>activationAttributes</argument_external_name>
						<argument_type>ARRAY [ANY]</argument_type>
						<argument_type_full_name>System.Object[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>ANY</return_type>
				<return_type_full_name>System.Object</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_dynamic_base</feature_eiffel_name>
				<feature_external_name>SetDynamicBase</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>path</argument_eiffel_name>
						<argument_external_name>path</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_dynamic_assembly_assembly_name_assembly_builder_access_string_permission_set_permission_set_permission_set</feature_eiffel_name>
				<feature_external_name>DefineDynamicAssembly</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_ASSEMBLYNAME</argument_type>
						<argument_type_full_name>System.Reflection.AssemblyName</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>access</argument_eiffel_name>
						<argument_external_name>access</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_ASSEMBLYBUILDERACCESS</argument_type>
						<argument_type_full_name>System.Reflection.Emit.AssemblyBuilderAccess</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>dir</argument_eiffel_name>
						<argument_external_name>dir</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>required_permissions</argument_eiffel_name>
						<argument_external_name>requiredPermissions</argument_external_name>
						<argument_type>SYSTEM_SECURITY_PERMISSIONSET</argument_type>
						<argument_type_full_name>System.Security.PermissionSet</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>optional_permissions</argument_eiffel_name>
						<argument_external_name>optionalPermissions</argument_external_name>
						<argument_type>SYSTEM_SECURITY_PERMISSIONSET</argument_type>
						<argument_type_full_name>System.Security.PermissionSet</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>refused_permissions</argument_eiffel_name>
						<argument_external_name>refusedPermissions</argument_external_name>
						<argument_type>SYSTEM_SECURITY_PERMISSIONSET</argument_type>
						<argument_type_full_name>System.Security.PermissionSet</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_ASSEMBLYBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.AssemblyBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_principal_policy</feature_eiffel_name>
				<feature_external_name>SetPrincipalPolicy</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>policy</argument_eiffel_name>
						<argument_external_name>policy</argument_external_name>
						<argument_type>SYSTEM_SECURITY_PRINCIPAL_PRINCIPALPOLICY</argument_type>
						<argument_type_full_name>System.Security.Principal.PrincipalPolicy</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>execute_assembly_string_evidence</feature_eiffel_name>
				<feature_external_name>ExecuteAssembly</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_file</argument_eiffel_name>
						<argument_external_name>assemblyFile</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>assembly_security</argument_eiffel_name>
						<argument_external_name>assemblySecurity</argument_external_name>
						<argument_type>SYSTEM_SECURITY_POLICY_EVIDENCE</argument_type>
						<argument_type_full_name>System.Security.Policy.Evidence</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>INTEGER</return_type>
				<return_type_full_name>System.Int32</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_shadow_copy_path</feature_eiffel_name>
				<feature_external_name>SetShadowCopyPath</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>path</argument_eiffel_name>
						<argument_external_name>path</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>load_string_evidence</feature_eiffel_name>
				<feature_external_name>Load</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_string</argument_eiffel_name>
						<argument_external_name>assemblyString</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>assembly_security</argument_eiffel_name>
						<argument_external_name>assemblySecurity</argument_external_name>
						<argument_type>SYSTEM_SECURITY_POLICY_EVIDENCE</argument_type>
						<argument_type_full_name>System.Security.Policy.Evidence</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_ASSEMBLY</return_type>
				<return_type_full_name>System.Reflection.Assembly</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>create_instance_from_string_string_boolean</feature_eiffel_name>
				<feature_external_name>CreateInstanceFrom</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_file</argument_eiffel_name>
						<argument_external_name>assemblyFile</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>type_name</argument_eiffel_name>
						<argument_external_name>typeName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>ignore_case</argument_eiffel_name>
						<argument_external_name>ignoreCase</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>binding_attr</argument_eiffel_name>
						<argument_external_name>bindingAttr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDINGFLAGS</argument_type>
						<argument_type_full_name>System.Reflection.BindingFlags</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>binder</argument_eiffel_name>
						<argument_external_name>binder</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDER</argument_type>
						<argument_type_full_name>System.Reflection.Binder</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>args</argument_eiffel_name>
						<argument_external_name>args</argument_external_name>
						<argument_type>ARRAY [ANY]</argument_type>
						<argument_type_full_name>System.Object[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>culture</argument_eiffel_name>
						<argument_external_name>culture</argument_external_name>
						<argument_type>SYSTEM_GLOBALIZATION_CULTUREINFO</argument_type>
						<argument_type_full_name>System.Globalization.CultureInfo</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>activation_attributes</argument_eiffel_name>
						<argument_external_name>activationAttributes</argument_external_name>
						<argument_type>ARRAY [ANY]</argument_type>
						<argument_type_full_name>System.Object[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>security_attributes</argument_eiffel_name>
						<argument_external_name>securityAttributes</argument_external_name>
						<argument_type>SYSTEM_SECURITY_POLICY_EVIDENCE</argument_type>
						<argument_type_full_name>System.Security.Policy.Evidence</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_RUNTIME_REMOTING_OBJECTHANDLE</return_type>
				<return_type_full_name>System.Runtime.Remoting.ObjectHandle</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_finalizing_for_unload</feature_eiffel_name>
				<feature_external_name>IsFinalizingForUnload</feature_external_name>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>create_instance_from_and_unwrap_string_string_boolean</feature_eiffel_name>
				<feature_external_name>CreateInstanceFromAndUnwrap</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_name</argument_eiffel_name>
						<argument_external_name>assemblyName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>type_name</argument_eiffel_name>
						<argument_external_name>typeName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>ignore_case</argument_eiffel_name>
						<argument_external_name>ignoreCase</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>binding_attr</argument_eiffel_name>
						<argument_external_name>bindingAttr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDINGFLAGS</argument_type>
						<argument_type_full_name>System.Reflection.BindingFlags</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>binder</argument_eiffel_name>
						<argument_external_name>binder</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDER</argument_type>
						<argument_type_full_name>System.Reflection.Binder</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>args</argument_eiffel_name>
						<argument_external_name>args</argument_external_name>
						<argument_type>ARRAY [ANY]</argument_type>
						<argument_type_full_name>System.Object[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>culture</argument_eiffel_name>
						<argument_external_name>culture</argument_external_name>
						<argument_type>SYSTEM_GLOBALIZATION_CULTUREINFO</argument_type>
						<argument_type_full_name>System.Globalization.CultureInfo</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>activation_attributes</argument_eiffel_name>
						<argument_external_name>activationAttributes</argument_external_name>
						<argument_type>ARRAY [ANY]</argument_type>
						<argument_type_full_name>System.Object[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>security_attributes</argument_eiffel_name>
						<argument_external_name>securityAttributes</argument_external_name>
						<argument_type>SYSTEM_SECURITY_POLICY_EVIDENCE</argument_type>
						<argument_type_full_name>System.Security.Policy.Evidence</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>ANY</return_type>
				<return_type_full_name>System.Object</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>create_instance_and_unwrap</feature_eiffel_name>
				<feature_external_name>CreateInstanceAndUnwrap</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_name</argument_eiffel_name>
						<argument_external_name>assemblyName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>type_name</argument_eiffel_name>
						<argument_external_name>typeName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>ANY</return_type>
				<return_type_full_name>System.Object</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_dynamic_assembly_assembly_name_assembly_builder_access_evidence_permission_set_permission_set_permission_set</feature_eiffel_name>
				<feature_external_name>DefineDynamicAssembly</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_ASSEMBLYNAME</argument_type>
						<argument_type_full_name>System.Reflection.AssemblyName</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>access</argument_eiffel_name>
						<argument_external_name>access</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_ASSEMBLYBUILDERACCESS</argument_type>
						<argument_type_full_name>System.Reflection.Emit.AssemblyBuilderAccess</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>evidence</argument_eiffel_name>
						<argument_external_name>evidence</argument_external_name>
						<argument_type>SYSTEM_SECURITY_POLICY_EVIDENCE</argument_type>
						<argument_type_full_name>System.Security.Policy.Evidence</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>required_permissions</argument_eiffel_name>
						<argument_external_name>requiredPermissions</argument_external_name>
						<argument_type>SYSTEM_SECURITY_PERMISSIONSET</argument_type>
						<argument_type_full_name>System.Security.PermissionSet</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>optional_permissions</argument_eiffel_name>
						<argument_external_name>optionalPermissions</argument_external_name>
						<argument_type>SYSTEM_SECURITY_PERMISSIONSET</argument_type>
						<argument_type_full_name>System.Security.PermissionSet</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>refused_permissions</argument_eiffel_name>
						<argument_external_name>refusedPermissions</argument_external_name>
						<argument_type>SYSTEM_SECURITY_PERMISSIONSET</argument_type>
						<argument_type_full_name>System.Security.PermissionSet</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_ASSEMBLYBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.AssemblyBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>clear_private_path</feature_eiffel_name>
				<feature_external_name>ClearPrivatePath</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>load_string_evidence_string</feature_eiffel_name>
				<feature_external_name>Load</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_string</argument_eiffel_name>
						<argument_external_name>assemblyString</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>assembly_security</argument_eiffel_name>
						<argument_external_name>assemblySecurity</argument_external_name>
						<argument_type>SYSTEM_SECURITY_POLICY_EVIDENCE</argument_type>
						<argument_type_full_name>System.Security.Policy.Evidence</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>caller_location</argument_eiffel_name>
						<argument_external_name>callerLocation</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_ASSEMBLY</return_type>
				<return_type_full_name>System.Reflection.Assembly</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>execute_assembly_string_evidence_array_string</feature_eiffel_name>
				<feature_external_name>ExecuteAssembly</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_file</argument_eiffel_name>
						<argument_external_name>assemblyFile</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>assembly_security</argument_eiffel_name>
						<argument_external_name>assemblySecurity</argument_external_name>
						<argument_type>SYSTEM_SECURITY_POLICY_EVIDENCE</argument_type>
						<argument_type_full_name>System.Security.Policy.Evidence</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>args</argument_eiffel_name>
						<argument_external_name>args</argument_external_name>
						<argument_type>ARRAY [STRING]</argument_type>
						<argument_type_full_name>System.String[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>INTEGER</return_type>
				<return_type_full_name>System.Int32</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>True</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>create_domain_string_evidence_app_domain_setup</feature_eiffel_name>
				<feature_external_name>CreateDomain</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>friendly_name</argument_eiffel_name>
						<argument_external_name>friendlyName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>security_info</argument_eiffel_name>
						<argument_external_name>securityInfo</argument_external_name>
						<argument_type>SYSTEM_SECURITY_POLICY_EVIDENCE</argument_type>
						<argument_type_full_name>System.Security.Policy.Evidence</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>info</argument_eiffel_name>
						<argument_external_name>info</argument_external_name>
						<argument_type>SYSTEM_APPDOMAINSETUP</argument_type>
						<argument_type_full_name>System.AppDomainSetup</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_APPDOMAIN</return_type>
				<return_type_full_name>System.AppDomain</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>create_instance_from_string_string_array_object</feature_eiffel_name>
				<feature_external_name>CreateInstanceFrom</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_file</argument_eiffel_name>
						<argument_external_name>assemblyFile</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>type_name</argument_eiffel_name>
						<argument_external_name>typeName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>activation_attributes</argument_eiffel_name>
						<argument_external_name>activationAttributes</argument_external_name>
						<argument_type>ARRAY [ANY]</argument_type>
						<argument_type_full_name>System.Object[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_RUNTIME_REMOTING_OBJECTHANDLE</return_type>
				<return_type_full_name>System.Runtime.Remoting.ObjectHandle</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>execute_assembly</feature_eiffel_name>
				<feature_external_name>ExecuteAssembly</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly_file</argument_eiffel_name>
						<argument_external_name>assemblyFile</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>INTEGER</return_type>
				<return_type_full_name>System.Int32</return_type_full_name>
			</feature>
		</basic_operations>
		<bit_or_infix>False</bit_or_infix>
	</body>
</class>