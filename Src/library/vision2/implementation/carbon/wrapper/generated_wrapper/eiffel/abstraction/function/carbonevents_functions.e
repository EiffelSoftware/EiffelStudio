-- This file has been generated by EWG. Do not edit. Changes will be lost!
-- functions wrapper
class CARBONEVENTS_FUNCTIONS

obsolete
	"Use class CARBONEVENTS_FUNCTIONS_EXTERNAL instead."

inherit

	CARBONEVENTS_FUNCTIONS_EXTERNAL

feature
	is_user_cancel_event_ref (event: POINTER): INTEGER is
		local
		do
			Result := is_user_cancel_event_ref_external (event)
		end

	track_mouse_location (inport: POINTER; outpt: POINTER; outresult: POINTER): INTEGER is
		local
		do
			Result := track_mouse_location_external (inport, outpt, outresult)
		end

	track_mouse_location_with_options (inport: POINTER; inoptions: INTEGER; intimeout: DOUBLE; outpt: POINTER; outmodifiers: POINTER; outresult: POINTER): INTEGER is
		local
		do
			Result := track_mouse_location_with_options_external (inport, inoptions, intimeout, outpt, outmodifiers, outresult)
		end

	track_mouse_region (inport: POINTER; inregion: POINTER; iowasinrgn: STRING; outresult: POINTER): INTEGER is
		local
			iowasinrgn_c_string: EWG_ZERO_TERMINATED_STRING
		do
			create iowasinrgn_c_string.make_shared_from_string (iowasinrgn)
			Result := track_mouse_region_external (inport, inregion, iowasinrgn_c_string.item, outresult)
		end

	himouse_tracking_get_parameters (inselector: INTEGER; outtime: POINTER; outdistance: POINTER): INTEGER is
		local
		do
			Result := himouse_tracking_get_parameters_external (inselector, outtime, outdistance)
		end

	convert_event_ref_to_event_record (inevent: POINTER; outevent: POINTER): INTEGER is
		local
		do
			Result := convert_event_ref_to_event_record_external (inevent, outevent)
		end

	is_event_in_mask (inevent: POINTER; inmask: INTEGER): INTEGER is
		local
		do
			Result := is_event_in_mask_external (inevent, inmask)
		end

	get_last_user_event_time: DOUBLE is
		local
		do
			Result := get_last_user_event_time_external
		end

	is_mouse_coalescing_enabled: INTEGER is
		local
		do
			Result := is_mouse_coalescing_enabled_external
		end

	set_mouse_coalescing_enabled (innewstate: INTEGER; outoldstate: STRING): INTEGER is
		local
			outoldstate_c_string: EWG_ZERO_TERMINATED_STRING
		do
			create outoldstate_c_string.make_shared_from_string (outoldstate)
			Result := set_mouse_coalescing_enabled_external (innewstate, outoldstate_c_string.item)
		end

	create_type_string_with_ostype (intype: INTEGER): POINTER is
		local
		do
			Result := create_type_string_with_ostype_external (intype)
		end

	copy_services_menu_command_keys (outcommandkeyarray: POINTER): INTEGER is
		local
		do
			Result := copy_services_menu_command_keys_external (outcommandkeyarray)
		end

	axuielement_create_with_hiobject_and_identifier (inhiobject: POINTER; inidentifier: INTEGER): POINTER is
		local
		do
			Result := axuielement_create_with_hiobject_and_identifier_external (inhiobject, inidentifier)
		end

	axuielement_get_hiobject (inuielement: POINTER): POINTER is
		local
		do
			Result := axuielement_get_hiobject_external (inuielement)
		end

	axuielement_get_identifier (inuielement: POINTER; outidentifier: POINTER) is
		local
		do
			axuielement_get_identifier_external (inuielement, outidentifier)
		end

	axnotification_hiobject_notify (innotification: POINTER; inhiobject: POINTER; inidentifier: INTEGER) is
		local
		do
			axnotification_hiobject_notify_external (innotification, inhiobject, inidentifier)
		end

	hicopy_accessibility_role_description (inrole: POINTER; insubrole: POINTER): POINTER is
		local
		do
			Result := hicopy_accessibility_role_description_external (inrole, insubrole)
		end

	hicopy_accessibility_action_description (inaction: POINTER): POINTER is
		local
		do
			Result := hicopy_accessibility_action_description_external (inaction)
		end

	get_window_event_target (inwindow: POINTER): POINTER is
		local
		do
			Result := get_window_event_target_external (inwindow)
		end

	get_control_event_target (incontrol: POINTER): POINTER is
		local
		do
			Result := get_control_event_target_external (incontrol)
		end

	get_menu_event_target (inmenu: POINTER): POINTER is
		local
		do
			Result := get_menu_event_target_external (inmenu)
		end

	get_application_event_target: POINTER is
		local
		do
			Result := get_application_event_target_external
		end

	get_user_focus_event_target: POINTER is
		local
		do
			Result := get_user_focus_event_target_external
		end

	get_event_dispatcher_target: POINTER is
		local
		do
			Result := get_event_dispatcher_target_external
		end

	get_event_monitor_target: POINTER is
		local
		do
			Result := get_event_monitor_target_external
		end

	process_hicommand (incommand: POINTER): INTEGER is
		local
		do
			Result := process_hicommand_external (incommand)
		end

	run_application_event_loop is
		local
		do
			run_application_event_loop_external
		end

	quit_application_event_loop is
		local
		do
			quit_application_event_loop_external
		end

	run_app_modal_loop_for_window (inwindow: POINTER): INTEGER is
		local
		do
			Result := run_app_modal_loop_for_window_external (inwindow)
		end

	quit_app_modal_loop_for_window (inwindow: POINTER): INTEGER is
		local
		do
			Result := quit_app_modal_loop_for_window_external (inwindow)
		end

	begin_app_modal_state_for_window (inwindow: POINTER): INTEGER is
		local
		do
			Result := begin_app_modal_state_for_window_external (inwindow)
		end

	end_app_modal_state_for_window (inwindow: POINTER): INTEGER is
		local
		do
			Result := end_app_modal_state_for_window_external (inwindow)
		end

	set_user_focus_window (inwindow: POINTER): INTEGER is
		local
		do
			Result := set_user_focus_window_external (inwindow)
		end

	get_user_focus_window: POINTER is
		local
		do
			Result := get_user_focus_window_external
		end

	set_window_default_button (inwindow: POINTER; incontrol: POINTER): INTEGER is
		local
		do
			Result := set_window_default_button_external (inwindow, incontrol)
		end

	set_window_cancel_button (inwindow: POINTER; incontrol: POINTER): INTEGER is
		local
		do
			Result := set_window_cancel_button_external (inwindow, incontrol)
		end

	get_window_default_button (inwindow: POINTER; outcontrol: POINTER): INTEGER is
		local
		do
			Result := get_window_default_button_external (inwindow, outcontrol)
		end

	get_window_cancel_button (inwindow: POINTER; outcontrol: POINTER): INTEGER is
		local
		do
			Result := get_window_cancel_button_external (inwindow, outcontrol)
		end

	register_event_hot_key (inhotkeycode: INTEGER; inhotkeymodifiers: INTEGER; inhotkeyid: POINTER; intarget: POINTER; inoptions: INTEGER; outref: POINTER): INTEGER is
		local
		do
			Result := register_event_hot_key_external (inhotkeycode, inhotkeymodifiers, inhotkeyid, intarget, inoptions, outref)
		end

	unregister_event_hot_key (inhotkey: POINTER): INTEGER is
		local
		do
			Result := unregister_event_hot_key_external (inhotkey)
		end

	copy_symbolic_hot_keys (outhotkeyarray: POINTER): INTEGER is
		local
		do
			Result := copy_symbolic_hot_keys_external (outhotkeyarray)
		end

	push_symbolic_hot_key_mode (inoptions: INTEGER): POINTER is
		local
		do
			Result := push_symbolic_hot_key_mode_external (inoptions)
		end

	pop_symbolic_hot_key_mode (intoken: POINTER) is
		local
		do
			pop_symbolic_hot_key_mode_external (intoken)
		end

	get_symbolic_hot_key_mode: INTEGER is
		local
		do
			Result := get_symbolic_hot_key_mode_external
		end

	create_mouse_tracking_region (inwindow: POINTER; inregion: POINTER; inclip: POINTER; inoptions: INTEGER; inid: POINTER; inrefcon: POINTER; intargettonotify: POINTER; outtrackingref: POINTER): INTEGER is
		local
		do
			Result := create_mouse_tracking_region_external (inwindow, inregion, inclip, inoptions, inid, inrefcon, intargettonotify, outtrackingref)
		end

	retain_mouse_tracking_region (inmouseref: POINTER): INTEGER is
		local
		do
			Result := retain_mouse_tracking_region_external (inmouseref)
		end

	release_mouse_tracking_region (inmouseref: POINTER): INTEGER is
		local
		do
			Result := release_mouse_tracking_region_external (inmouseref)
		end

	change_mouse_tracking_region (inmouseref: POINTER; inregion: POINTER; inclip: POINTER): INTEGER is
		local
		do
			Result := change_mouse_tracking_region_external (inmouseref, inregion, inclip)
		end

	clip_mouse_tracking_region (inmouseref: POINTER; inregion: POINTER): INTEGER is
		local
		do
			Result := clip_mouse_tracking_region_external (inmouseref, inregion)
		end

	get_mouse_tracking_region_id (inmouseref: POINTER; outid: POINTER): INTEGER is
		local
		do
			Result := get_mouse_tracking_region_id_external (inmouseref, outid)
		end

	get_mouse_tracking_region_ref_con (inmouseref: POINTER; outrefcon: POINTER): INTEGER is
		local
		do
			Result := get_mouse_tracking_region_ref_con_external (inmouseref, outrefcon)
		end

	move_mouse_tracking_region (inmouseref: POINTER; deltah: INTEGER; deltav: INTEGER; inclip: POINTER): INTEGER is
		local
		do
			Result := move_mouse_tracking_region_external (inmouseref, deltah, deltav, inclip)
		end

	set_mouse_tracking_region_enabled (inmouseref: POINTER; inenabled: INTEGER): INTEGER is
		local
		do
			Result := set_mouse_tracking_region_enabled_external (inmouseref, inenabled)
		end

	clip_window_mouse_tracking_regions (inwindow: POINTER; insignature: INTEGER; inclip: POINTER): INTEGER is
		local
		do
			Result := clip_window_mouse_tracking_regions_external (inwindow, insignature, inclip)
		end

	move_window_mouse_tracking_regions (inwindow: POINTER; insignature: INTEGER; deltah: INTEGER; deltav: INTEGER; inclip: POINTER): INTEGER is
		local
		do
			Result := move_window_mouse_tracking_regions_external (inwindow, insignature, deltah, deltav, inclip)
		end

	set_window_mouse_tracking_regions_enabled (inwindow: POINTER; insignature: INTEGER; inenabled: INTEGER): INTEGER is
		local
		do
			Result := set_window_mouse_tracking_regions_enabled_external (inwindow, insignature, inenabled)
		end

	release_window_mouse_tracking_regions (inwindow: POINTER; insignature: INTEGER): INTEGER is
		local
		do
			Result := release_window_mouse_tracking_regions_external (inwindow, insignature)
		end

	register_toolbox_object_class (inclassid: POINTER; inbaseclass: POINTER; innumevents: INTEGER; ineventlist: POINTER; ineventhandler: POINTER; ineventhandlerdata: POINTER; outclassref: POINTER): INTEGER is
		local
		do
			Result := register_toolbox_object_class_external (inclassid, inbaseclass, innumevents, ineventlist, ineventhandler, ineventhandlerdata, outclassref)
		end

	unregister_toolbox_object_class (inclassref: POINTER): INTEGER is
		local
		do
			Result := unregister_toolbox_object_class_external (inclassref)
		end

end
