-- system:     "Gobo Eiffel Yacc: syntactical analyzer generator"
-- compiler:   "Visual Eiffel 3.1"
-- author:     "Eric Bezault <ericb@gobosoft.com>"
-- copyright:  "Copyright (c) 1999, Eric Bezault and others"
-- license:    "Eiffel Forum Freeware License v1 (see forum.txt)"
-- date:       "$Date$"
-- revision:   "$Revision$"

system

	geyacc

root

	GEYACC

creation

	execute

cluster

	[geyacc_project		"."] end
	[geyacc				"$GOBO\src\geyacc"] end

		-- Gobo Eiffel Lexical Library
	[lx_skeleton		"$GOBO\library\lexical\skeleton"] end

		-- Gobo Eiffel Parse Library
	[pr_error			"$GOBO\library\parse\error"] end
	[pr_fsm				"$GOBO\library\parse\fsm"] end
	[pr_grammar			"$GOBO\library\parse\grammar"] end
	[pr_generation		"$GOBO\library\parse\generation"] end
	[pr_parser			"$GOBO\library\parse\parser"] end
	[pr_skeleton		"$GOBO\library\parse\skeleton"] end
	[pr_support			"$GOBO\library\parse\support"] end
	[pr_yacc			"$GOBO\library\parse\yacc"] end

		-- Gobo Eiffel Utility Library
	[ut_command			"$GOBO\library\utility\command"] end
	[ut_error			"$GOBO\library\utility\error"] end
	[ut_formatter		"$GOBO\library\utility\formatter"] end
	[ut_support			"$GOBO\library\utility\support"] end

		-- Gobo Eiffel Kernel Library
	[kl_kernel			"$GOBO\library\kernel"] end
	[kl_kernel_spec		"$GOBO\library\kernel\spec\ve"] end

		-- Gobo Eiffel Structure Library
	[ds_container		"$GOBO\library\structure\container"] end
	[ds_cursor			"$GOBO\library\structure\cursor"] end
	[ds_dispenser		"$GOBO\library\structure\dispenser"] end
	[ds_list			"$GOBO\library\structure\list"] end
	[ds_sort			"$GOBO\library\structure\sort"] end
	[ds_support			"$GOBO\library\structure\support"] end
	[ds_table			"$GOBO\library\structure\table"] end

		-- Visual Eiffel Kernel
	[Kernel				"$VE_LIB\kernel"] end

option

	target exe console

end
