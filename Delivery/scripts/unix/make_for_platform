#!/bin/sh

# our script requires sh aliased to bash.

if [ $# -ge 3 ]; then
	remote_host=$1
	user=$2
	platform=$3
	echo $local
	cp -f make_for_platform ~/
		# Launch platform specific scripts
	rsh $remote_host "cd local/TEST_DELIV ; \rm -rf PorterPackage"
	rsh $remote_host "cd local/TEST_DELIV ; tar xvf ~/PorterPackage_all.tar"
		#Note: we use `setenv' because we expect the remote shell to be csh.
	rsh $remote_host "cd local/TEST_DELIV/PorterPackage; setenv ISE_PLATFORM $platform ; sh ./compile_exes"
	rsh $remote_host "cd local/TEST_DELIV/PorterPackage; setenv ISE_PLATFORM $platform ; sh ./make_images"

ftp -n << EOF 
verbose 
open $remote_host 
user $user $user 
binary
get local/TEST_DELIV/PorterPackage/Eiffel57_enterprise.tgz Eiffel57_$platform.tgz
get local/TEST_DELIV/PorterPackage/Eiffel57_free.tgz Eiffel57_free_$platform.tgz
get local/TEST_DELIV/PorterPackage/Eiffel57_enterprise.iso.gz Eiffel57_enterprise_$platform.iso.gz
get local/TEST_DELIV/PorterPackage/Eiffel57_university.iso.gz Eiffel57_university_$platform.iso.gz
get local/TEST_DELIV/PorterPackage/Eiffel57_free.iso.gz Eiffel57_free_$platform.iso.gz
close 
EOF

	echo Compilation for $platform is now done
else
	echo Usage: [local] host username platform
fi
