--
-- Config.eif for mingw
--

-- Directory separator
directory_separator: "/"
subcommand_separator: " && "
quick_compilation: True
smart_checking: False

-- include_path
include_path: "$(INCLUDE_PATH)"

-- C-compiler
cc: "c:/apps/mingw/bin/gcc"
cpp: "c:/apps/mingw/bin/gcc"

-- C-linker
sharedlink: "c:/apps/mingw/bin/gcc"

-- optimization flags
optimize: "-O2"
wkoptimize: "-O0"

-- compiler flags
ccflags: "-D_WIN32_WINNT=0x0500 -DWINVER=0x0500 -D_WIN32_IE=0x400 -DNONAMELESSUNION -D_UNICODE -DUNICODE $(ISE_CFLAGS)"
mtccflags: "-D_WIN32_WINNT=0x0500 -DWINVER=0x0500 -D_WIN32_IE=0x400 -DNONAMELESSUNION -D_UNICODE -DUNICODE -DEIF_THREADS $(ISE_CFLAGS)"
cppflags: "-D_WIN32_WINNT=0x0500 -DWINVER=0x0500 -D_WIN32_IE=0x400 -DNONAMELESSUNION -D_UNICODE -DUNICODE $(ISE_CFLAGS)"
mtcppflags: "-D_WIN32_WINNT=0x0500 -DWINVER=0x0500 -D_WIN32_IE=0x400 -DNONAMELESSUNION -D_UNICODE -DUNICODE -DEIF_THREADS $(ISE_CFLAGS)"
shared_flags: "-DEIF_USE_DLL"
il_flags: "-DEIF_IL_DLL"

large: ""

-- linker flags
ar: "c:/apps/mingw/bin/ar"
ld: "c:/apps/mingw/bin/ld"
ldflags: ""
mtldflags: ""
console_flags: "-mconsole"
windows_flags: "-mwindows"
ldsharedflags: "-shared"
mtldsharedflags: "-shared"

-- eiffel run-time specification
prefix: "$(ISE_C_COMPILER)/"
shared_prefix: "$(ISE_C_COMPILER)/dll_"
mt_prefix: "mt"
eiflib: "finalized"
wkeiflib: "wkbench"
suffix: ".a"
shared_suffix: ".so"

-- libraries
libs: ""
mtlibs: ""
sharedlibs: "-luser32 -lwsock32 -ladvapi32 -lgdi32 -lshell32 -lmsimg32 -lcomdlg32 -luuid -lole32 %
			%-loleaut32 -lcomctl32 -lmpr $(ISE_SHAREDLIBS)"

mkdep: ""

-- platform $(MV) command
mv: "cp"
cp: "cp"

ranlib: "c:/apps/mingw/bin/ranlib.exe"

-- platform remove command
rm: "rm -f"
rmdir: "rd"

-- make program
make: "c:/apps/msys/1.0/bin/make.exe"
command_makefile: "%"for %%i in ($(EXTERNAL_MAKEFILES)) do $(MAKE) -f %%i%""
dpflags: ""

continuation: "\"

appl_make: "$appl.exe: E1/emain.o $(PRECOMP_OBJECTS) $(OBJECTS) $appl.res %N%
%%T$(COMMAND_MAKEFILE)%N%
%%T$(RM) $@%N%
%%T$(CC) $(LDFLAGS) -o $appl.exe E1/emain.o $(PRECOMP_OBJECTS) %
%$appl.res $(OBJECTS) $(EXTERNALS) $(EIFLIB) $sharedlibs%N%
%%N%
%../../../$appl.rc:%N%
%%Tif [ ! -f ../../../$appl.rc ] ; then $(MV) $(ISE_EIFFEL)/studio/config/$(ISE_PLATFORM)/$(ISE_C_COMPILER)/gnu.ico ../../../gnu.ico ; fi %N%
%%Tif [ ! -f ../../../$appl.rc ] ; then $(MV) $(ISE_EIFFEL)/studio/config/$(ISE_PLATFORM)/$(ISE_C_COMPILER)/eiffel.rc ../../../$appl.rc ; fi %N%
%%N%
%$appl.rc: ../../../$appl.rc%N%
%%T$(MV) ../../../$appl.rc $appl.rc%N%
%%N%
%$appl.res: $appl.rc Makefile%N%
%%Tif [ -f ../../../*.ico ] ; then $(MV) ../../../*.ico . ; fi %N%
%%Tif [ -f ../../../*.cur ] ; then $(MV) ../../../*.cur . ; fi %N%
%%Tif [ -f ../../../*.bmp ] ; then $(MV) ../../../*.bmp . ; fi %N%
%%Tif [ -f ../../../*.tlb ] ; then $(MV) ../../../*.tlb . ; fi %N%
%%Tif [ -f ../../../*.h ] ; then $(MV) ../../../*.h . ; fi %N%
%%Tc:/apps/mingw/bin/windres $appl.rc -O coff -o $appl.res%N%
%"

-- precompilation
precompile: "driver.exe: driver.lnk driver.rc%N%
%%T$(RM) driver.exe%N%
%%Tlink @driver.lnk%N%
%%T$(RM) *.err%N%
%%T$(RM) driver.lnk%N%
%%T$(RM) driver.res%N%
%%T$(RM) driver.map%N%
%%T$(RM) *.ico%N%
%%T$(RM) *.rc%N%
%%T$(RM) Makefile%N%
%%T$(RM) TRANSLAT%N%
%%T$(RM) Makefile.SH%N%
%%T$(RM) estudio.pch%N%
%%Tmkdir $(ISE_C_COMPILER)%N%
%%T$(MV) driver.exe $(ISE_C_COMPILER)/driver.exe%N%
%%T$(MV) precomp.lib $(ISE_C_COMPILER)/precomp.lib%N%
%%T$(RM) driver.exe%N%
%%T$(RM) precomp.lib%N%
%%Tfor %%i in ($(SUBDIRS)) do $(RM) %%i/*.o%N%
%%Tfor %%i in ($(SUBDIRS)) do $(RM) %%i/*.c%N%
%%Tfor %%i in ($(SUBDIRS)) do $(RM) %%i/*.x%N%
%%Tfor %%i in ($(SUBDIRS)) do $(RM) %%i/*.lib%N%
%%Tfor %%i in ($(SUBDIRS)) do $(RM) %%i/*.pch%N%
%%Tfor %%i in ($(SUBDIRS)) do $(RM) %%i/Makefile.*%N%
%%Tfor %%i in ($(SUBDIRS)) do $(RMDIR) %%i%N%
%%N%
%driver.rc: $(ISE_EIFFEL)/studio/config/$(ISE_PLATFORM)/$(ISE_C_COMPILER)/eiffel.rc%N%
%%T$(MV) $(ISE_EIFFEL)/studio/config/$(ISE_PLATFORM)/$(ISE_C_COMPILER)/eiffel.rc driver.rc%N%
%%N%
%driver.res: driver.rc%N%
%%Trc -r driver.rc%N%
%%N%
%precomp.lib: $(OBJECTS)%N%
%%T$(RM) $@%N%
%%Tlib -OUT:precomp.lib $(OBJECTS) $(EXTERNALS)%N%
%%N%
%driver.lnk: E1/emain.o precomp.lib driver.res $precompilelibs%N%
%%Techo $(LDFLAGS) -OUT:driver.exe > $@%N%
%%Techo E1/emain.o >> $@%N%
%%Techo precomp.lib >> $@%N%
%%Techo USER32.lib WSOCK32.lib ADVAPI32.lib GDI32.LIB COMDLG32.lib >> $@%N%
%%T@echo UUID.lib OLE32.lib OLEAUT32.lib>> $@%N%
%$(PRECOMP_OBJECTS)%
%%Techo $(EIFLIB) >> $@%N%
%%Techo driver.res >> $@"

-- cecil
cecil_make: "$(STATIC_CECIL): $(OBJECTS)%N%
%%T$(AR) x $(EIFLIB)%N%
%%T$(AR) rc $(STATIC_CECIL) $(OBJECTS) $(EXTERNALS) $(PRECOMP_OBJECTS) $(RCECIL)%N%
%%T$(RANLIB) $(STATIC_CECIL)%N%
%%T$(RM) $(RCECIL)"

cecil_def: "%
%DEF_FILE= c_$appl.def %N%
%c_$appl.def: %N%
%%T$(RM) $@%N%
%%T@echo LIBRARY c_$appl.dll > $@%N%
%%T@echo DESCRIPTION %'c_$appl.dll%' >> $@%N%
%%T@type $(ISE_EIFFEL)/studio/spec/$(ISE_PLATFORM)/templates/cecil.def >> $@"

cecil_dynlib: "%T/def:$(DEF_FILE) \%N%
	%%T/OUT:$(SHARED_CECIL) /IMPLIB:c_dll_$appl.lib%N"

system_dynlib: "%T/def:$(DEF_FILE) \%N%
	%%T/OUT:$(SYSTEM_IN_DYNAMIC_LIB) /IMPLIB:dll_$appl.lib%N"

-- done
completed: "%Techo done > completed.eif"

all: "all:: "

intermediate_file_ext: "o"

make_intermediate: "%T$(RM) $@%N%
%%T$(LD) -r -o $@ $(OBJECTS)%N%T$(CREATE_TEST)"

-- options below are for config internal use
-- mind the spaces!

no_subs: "!NO!SUBS!"

-- platform change directory command
cd: "cd"

-- text for remove command
rm_text: "RM ="

-- text for make command
make_text: "MAKE"

-- text for C-compiler command
cc_text: "$(CC) $(CFLAGS)"

cobj_text: ".c.o:"
cppobj_text: ".cpp.o:"
xobj_text: ".x.o:"
xppobj_text: ".xpp.o:"

obj_text: ".o "

eobj_text: "$(EOBJ"

objects__text: "$(OBJECTS)"

-- text for precompilation
precompile_text: "precompile $appl"

appl_text: "appl_make $appl"

cecil_text: "cecil_make $appl"

-- platform 'parent' directory
updir: ".."

emain_text: "emain"

emain_obj_text: "emain.o"

objects_text: "OBJECTS = "
c_objects_text: "C_OBJECTS = "
d_objects_text: "D_OBJECTS = "
f_objects_text: "F_OBJECTS = "

eobjects_text: "EOBJECTS = "

obj_file_ext: "o"

executable_file_ext: ".exe"

driver_text: "/driver"

driver_filename: "driver.exe"

externals_text: "EXTERNALS"

externals_continuation_text: "EXTERNALS =  \"

precomp_lib_command_text: "@echo $precompiled_library >> $@%N%T"

start_test: "if [ ! -f finished ] ; then"

end_test: "; fi"

create_test: "touch finished"

-- Layout variables

rt_include: "$ISE_EIFFEL/studio/spec/$ISE_PLATFORM/include"
rt_lib: "$ISE_EIFFEL/studio/spec/$ISE_PLATFORM/lib"
rt_templates: "$ISE_EIFFEL/studio/config/$ISE_PLATFORM/templates"
x2c: "$ISE_EIFFEL/studio/spec/$ISE_PLATFORM/bin/x2c"

