--
-- Config.eif for mingw
--

-- Directory separator
directory_separator: "/"
subcommand_separator: " && "
quick_compilation: True
smart_checking: False

-- include_path
include_path: "$(INCLUDE_PATH)"

-- C-compiler
cc: "%"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/mingw/bin/gcc%""
cpp: "%"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/mingw/bin/gcc%""

-- C-linker
sharedlink: "%"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/mingw/bin/dllwrap%""

-- optimization flags
optimize: "-O2"
wkoptimize: "-O0"

-- compiler flags
ccflags: "-pipe -imacros eif_config.mingw.h -D_WIN32_WINNT=0x0500 -DWINVER=0x0500 -D_UNICODE -DUNICODE $(ISE_CFLAGS)"
mtccflags: "$ccflags -DEIF_THREADS"
cppflags: "$ccflags"
mtcppflags: "$mtccflags"
shared_flags: "-DEIF_USE_DLL"
il_flags: "-DEIF_IL_DLL"

large: ""

-- linker flags
ar: "%"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/mingw/bin/ar%""
ld: "%"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/mingw/bin/ld%""
ldflags: ""
mtldflags: ""
ccldflags: ""
console_flags: "-mconsole"
windows_flags: "-mwindows"
ldsharedflags: ""
mtldsharedflags: ""

-- eiffel run-time specification
prefix: "$(ISE_C_COMPILER)/"
shared_prefix: "$(ISE_C_COMPILER)/dll_"
mt_prefix: "mt"
eiflib: "finalized"
wkeiflib: "wkbench"
boehmgclib: "gc"
suffix: ".a"
shared_suffix: ".dll"
shared_rt_suffix: ".dll"

-- libraries
libs: ""
mtlibs: ""
sharedlibs: "-luser32 -lws2_32 -ladvapi32 -lgdi32 -lshell32 -lmsimg32 -lcomdlg32 -luuid -lole32 %
			%-loleaut32 -lcomctl32 -lmpr $(ISE_SHAREDLIBS)"

mkdep: ""

-- platform $(MV) command
mv: "%"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/msys/1.0/bin/cp%""
cp: "%"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/msys/1.0/bin/cp%""

ranlib: "%"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/mingw/bin/ranlib.exe%""

-- platform remove command
rm: "%"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/msys/1.0/bin/rm%" -f"
safe_rm: "if [ -f @ ] ; then $(RM) @ ; fi"
file_exist: "" 
rmdir: "%"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/msys/1.0/bin/rd%""

-- make program
make: "%"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/msys/1.0/bin/make.exe%""
make_utility: "$(ISE_EIFFEL)\gcc\$(ISE_PLATFORM)\msys\1.0\bin\make.exe"
make_flags: ""
command_makefile: "%"for %%i in ($(EXTERNAL_MAKEFILES)) do $(MAKE) -f %%i%""

dpflags: ""

continuation: "\"

appl_make: "$appl.exe: E1/emain.o $(OBJECTS) $appl.res %N%
%%T$(COMMAND_MAKEFILE)%N%
%%T$(RM) $@%N%
%%T$(CC) $(LDFLAGS) $(CCLDFLAGS) -o $appl.exe E1/emain.o $(PRECOMP_OBJECTS) %
%$appl.res $(OBJECTS) $(EXTERNALS) $(EIFLIB) $sharedlibs%N%
%%N%
%../../../$appl.rc:%N%
%%Tif [ ! -f ../../../$appl.rc ] ; then $(MV) %"$(ISE_EIFFEL)/studio/config/$(ISE_PLATFORM)/$(ISE_C_COMPILER)/eiffel.rc%" ../../../$appl.rc ; fi %N%
%%N%
%$appl.res: ../../../$appl.rc Makefile%N%
%%T%"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/mingw/bin/windres%" --preprocessor='%"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/mingw/bin/cpp.exe%"' -I../../.. ../../../$appl.rc -O coff -o $appl.res%N%
%"

-- precompilation
precompile: "driver.exe: E1/emain.o $(OBJECTS) driver.res precomp.lib%N%
%%T%"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/msys/1.0/bin/mkdir%" -p $(ISE_C_COMPILER)%N%
%%T$(RM) $@%N%
%%T$(CC) $(LDFLAGS) $(CCLDFLAGS) -o driver.exe E1/emain.o $(PRECOMP_OBJECTS) %
%driver.res $(OBJECTS) $(EXTERNALS) $(EIFLIB) $sharedlibs%N%
%%T$(MV) driver.exe $(ISE_C_COMPILER)/driver.exe%N%
%%T$(MV) precomp.lib $(ISE_C_COMPILER)/precomp.lib%N%
%%T$(RM) driver.exe%N%
%%T$(RM) precomp.lib%N%
%%N%
%driver.res: %N%
%%T$(MV) %"$(ISE_EIFFEL)/studio/config/$(ISE_PLATFORM)/$(ISE_C_COMPILER)/eiffel.rc%" driver.rc%N%
%%T%"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/mingw/bin/windres%" --preprocessor='%"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/mingw/bin/cpp.exe%"' driver.rc -O coff -o driver.res%N%
%%T$(RM) driver.rc%N%
%%N%
%precomp.lib: $(OBJECTS)%N%
%%T$(RM) $@%N%
%%T%"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/mingw/bin/ld%" -r -o precomp.lib $(C_OBJECTS) $(EXTERNALS)%N%
%%N"

-- cecil
cecil_make: "$(STATIC_CECIL): $(OBJECTS)%N%
%%T$(AR) x $(EIFLIB)%N%
%%T$(AR) rc $(STATIC_CECIL) $(OBJECTS) $(EXTERNALS) $(PRECOMP_OBJECTS) $(RCECIL)%N%
%%T$(RANLIB) $(STATIC_CECIL)%N%
%%T$(RM) $(RCECIL)"

cecil_def: "%
%DEF_FILE= c_$appl.def %N%
%c_$appl.def: %N%
%%T$(RM) $@%N%
%%T@echo LIBRARY c_$appl.dll > $@%N%
%%T@echo DESCRIPTION %'c_$appl.dll%' >> $@%N%
%%T@type %"$(ISE_EIFFEL)/studio/spec/$(ISE_PLATFORM)/templates/cecil.def%" >> $@"

cecil_dynlib: "\%N%
%%T--dlltool-name %"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/mingw/bin/dlltool%" \%N%
%%T--as %"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/mingw/bin/as%" \%N%
%%T--def $(DEF_FILE) --output-lib c_dll_$appl.lib -o $(SHARED_CECIL)%N"

system_dynlib: "\%N%
%%T--dlltool-name %"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/mingw/bin/dlltool%" \%N%
%%T--as %"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/mingw/bin/as%" \%N%
%%T--def $(DEF_FILE) --output-lib dll_$appl.lib -o $(SYSTEM_IN_DYNAMIC_LIB)%N"

il_system_compilation_line: "%
	%$(IL_SYSTEM): $(OBJECTS) $(IL_RESOURCE).res%N%
	%%T$(RM) $(IL_SYSTEM) %N%
	%%T$(CC) -shared -Wl,--kill-at -o $(IL_SYSTEM) $(OBJECTS) $(SHAREDLIBS) $(EXTERNALS) $(IL_RESOURCE).res%N%
	%%T$(RM) $(OBJECTS)%N%
	%%Techo Success > completed.eif%N%N%
	%../../../$(IL_RESOURCE).rc:%N%
	%%T$(MV) %"$(ISE_EIFFEL)/studio/config/$(ISE_PLATFORM)/$(ISE_C_COMPILER)/eiffel.rc%" ../../../$(IL_RESOURCE).rc%N%
	%%N%
	%$(IL_RESOURCE).res: ../../../$(IL_RESOURCE).rc Makefile%N%
	%%T%"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/mingw/bin/windres%" --preprocessor='%"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/mingw/bin/cpp.exe%"' -I ../../../ ../../../$(IL_RESOURCE).rc  -O coff -o $(IL_RESOURCE).res%N"


-- done
completed: "%Techo done > completed.eif"

all: "all:: "

intermediate_file_ext: "o"

make_intermediate: "%T$(RM) $@%N%
%%T$(LD) -r -o $@ $(OBJECTS)%N%T$(CREATE_TEST)"

-- options below are for config internal use
-- mind the spaces!

no_subs: "!NO!SUBS!"

-- platform change directory command
cd: "cd"

-- text for remove command
rm_text: "RM ="

-- text for make command
make_text: "MAKE"

-- text for C-compiler command
cc_text: "$(CC) $(CFLAGS)"

cobj_text: ".c.o:"
cppobj_text: ".cpp.o:"
xobj_text: ".x.o:"
xppobj_text: ".xpp.o:"

obj_text: ".o "

eobj_text: "$(EOBJ"

objects__text: "$(OBJECTS)"

cecil_text: "cecil_make $appl"

-- platform 'parent' directory
updir: ".."

emain_text: "emain"

emain_obj_text: "emain.o"

objects_text: "OBJECTS = "
c_objects_text: "C_OBJECTS = "

eobjects_text: "EOBJECTS = "

obj_file_ext: "o"

executable_file_ext: ".exe"

driver_text: "\driver"

driver_filename: "driver.exe"

externals_text: "EXTERNALS"

externals_continuation_text: "EXTERNALS =  \"

start_test: "if [ ! -f finished ] ; then"

end_test: "; fi"

create_test: "%"$(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/msys/1.0/bin/touch%" finished%N%
%PATH := $(ISE_EIFFEL)/gcc/$(ISE_PLATFORM)/mingw/libexec/gcc/mingw32/3.4.2;$(PATH)"

-- Layout variables

rt_include: "$ISE_EIFFEL/studio/spec/$ISE_PLATFORM/include"
rt_lib: "$ISE_EIFFEL/studio/spec/$ISE_PLATFORM/lib"
rt_templates: "$ISE_EIFFEL/studio/config/$ISE_PLATFORM/templates"
x2c: "$ISE_EIFFEL/studio/spec/$ISE_PLATFORM/bin/x2c.exe"

