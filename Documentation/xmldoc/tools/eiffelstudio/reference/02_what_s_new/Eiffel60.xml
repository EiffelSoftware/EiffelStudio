 <document title="Release notes for EiffelStudio 6.0" output="studio">
	<meta_data>
		<help></help>
	</meta_data>
	<paragraph>
		<heading><size>2</size>Graphical environment</heading>
		<heading><size>3</size>What's new</heading>
		<list ordered="false">
			<item>New docking facilities which let you control the layout of tools in EiffelStudio. One can also lock the layout to prevent unwanted changes.</item>
			<item>New tabbed editor.</item>
			<item>Added configurable pick and drop which lets you choose between traditional context menu or pick and drop for a mouse right click operation.</item>
			<item>EiffelStudio is now internationalized, it fully supports English, Chinese and German. A partial translation for French and Russian is provided.</item>
			<item>Shortcuts can now be customized.</item>
			<item>Added dependency view so supplier/client dependency of a group/folder/class can be investigated. Feature calls are included in dependency view.</item>
		</list>		
		<heading><size>3</size>Improvements</heading>
		<list ordered="false">
			<item>The combo boxes in the address bar can now be resized to see more text (useful with long class names).</item>
			<item>Added ability to add new classes/clusters/assemblies early on in the compilation phase instead of waiting for a successful compilation.</item>
			<item>Faster rendering of EiffelStudio when running it through Remote Desktop.</item>
			<item>Auto-completion after bracketed expression. i.e. arr [i].*</item>
			<item>Added preference "Maximum processor usage" to dictate the maximum number of processors/cores to use when compiling c-code.</item>
			<item>Updated metrics documentation, see <link><label>for more details</label><url>../60_metric_tool/index.xml</url></link>.</item>
		</list>
		<heading><size>3</size>Changes</heading>
		<list ordered="false">
			<item>Changed the diagram default color from light yellow to white for consistency with the background color of other tools.</item>
			<item>Improved history behavior.</item>
			<item>Project settings such as arguments/working directory/location are now stored in a user specific location that does not depend on the UUID of the project, but on its path.</item>
			<item>Favorites are now stored in the user settings.</item>
		</list>
		<heading><size>3</size>Bug fixes</heading>
		<list ordered="false">
			<item>EiffelStudio and various tools should better handle paths with spaces.</item>
			<item>Fixed add assemblies dialog not showing assemblies such as mscorlib on 64 bit systems.</item>
			<item>Fixed bug#12083 where classes in override clusters would not get recompiled properly when automatically saved by EiffelStudio when requesting a compilation.</item>
			<item>More bug fixes can be seen at <link><label>the EiffelStudio open source site</label><url>http://dev.eiffel.com/EiffelStudio_6.0_Releases</url></link>.</item>
		</list>
		<heading><size>2</size>Compiler</heading>
		<list ordered="false">
			<item>Click <link><url>../30_compiler/60_version_history/08_60_release/index.xml</url><label>here</label></link> for the compiler release notes.</item>
		</list>
		<heading><size>2</size>Debugger</heading>
			<list ordered="false">
				<item>Click <link><url>../40_debugger/80_version_history/Eiffel60.xml</url><label>here</label></link> for the EiffelStudio's debugger release notes.</item>
			</list>
		<heading><size>2</size>EiffelBuild</heading>
			<list ordered="false">
				<item>Click <link><url>../../../eiffelbuild/version_history/index.xml</url><label>here</label></link> for the EiffelBuild release notes.</item>
			</list>
		<heading><size>2</size>Libraries</heading>
		<heading><size>3</size>EiffelBase</heading>
		<list ordered="false">
			<item>Fixed issue with <class_name>LINKED_QUEUE</class_name>.<feature_name>twin</feature_name> which would violate its invariant.</item>
			<item>Revisited contracts of <class_name>LINEAR_ITERATOR</class_name>.</item>
			<item>Added facilities to read/write <class_name>REAL_32</class_name> and <class_name>REAL_64</class_name> values in big and little endian format in <class_name>MANAGED_POINTER</class_name>.</item>
			<item>Changed <class_name>INTERNAL</class_name> so that it does not have the <feature_name>is_pre_ecma_mapping_disabled</feature_name> attribute. If you were setting it to True, you should instead create an instance of <class_name>ECMA_INTERNAL</class_name> (fixes bug#11792).</item>
			<item><class_name>HASH_TABLE</class_name>:
				<list ordered="false">
					<item>Sped up <class_name>HASH_TABLE</class_name> iteration and lookup by about 8% or more.</item>
					<item>Added two new possibilities to detect/prevent catcalls, they can be enabled by enabling assertion checking and enabling the debug clauses <italic>prevent_hash_table_catcall</italic> and <italic>detect_hash_table_catcall</italic>.</item>
				</list>
			</item>
			<item><class_name>TUPLE</class_name> can now compare items using reference equality (=) or object comparison (<feature_name>is_equal</feature_name>).</item>
			<item>Sped up <class_name>SPECIAL</class_name>.<feature_name>copy_data</feature_name> which was previously not inlined due to a change of signature preventing the inlining.</item>
			<item><class_name>EXECUTION_ENVIRONMENT</class_name>.<feature_name>get</feature_name> will only retrieve environment variable. It won't retrieve a value from the registry key on Windows (from HKLM\Software\ISE\Eiffelxx\app_name). This also means that MELT_PATH on Windows cannot be set in registry; this is not really a problem because now you do not need to set it since the W_code knows where to find it.</item>
		</list>
		<heading><size>3</size>EiffelNet</heading>
		<list ordered="false">
			<item>Updated reading routines of EiffelNet so that for all basic types they would read all the required bytes, not just stop after reading the first. This is important as in some very bad network situation or if you have some signals you could mess up the reading by only reading half of the expected bytes.</item>
		</list>
		<heading><size>3</size>EiffelThread</heading>
		<list ordered="false">
			<item>Fixed bug#12838 where on Linux you could not create more than 2^15 threads even if they all exited. Now we force creation of threads in a detached mode to allow more than 2^15 thread creations.</item>
		</list>
		<heading><size>3</size>EiffelVision2</heading>
		<list ordered="false">
			<item><link><label>Click here for EiffelVision2 release notes.</label><url>../../../../libraries/vision2/content/0-_revisions/index.xml</url></link></item>
		</list>
		<heading><size>3</size>WEL</heading>
		<list ordered="false">
			<item>Raised compatibility bar to Windows 2000 or greater. No more support for Windows 98 or NT 4.0.</item>
			<item>Added ability to convert image formats among all image formats on Windows (using <class_name>WEL_GDIP_BITMAP</class_name>).</item>
		</list>
		<paragraph>
			<link><url>index.xml</url><label>Click here to check out what was new in other versions</label></link>
		</paragraph>
	</paragraph>
</document>
