indexing
	description: "Objects that represent an EV_TITLED_WINDOW.%
		%The original version of this class was generated by EiffelBuild."
	date: "$Date$"
	revision: "$Revision$"

class
	WIZARD_COM_PROJECT_BOX

inherit
	WIZARD_COM_PROJECT_BOX_IMP

	WIZARD_VALIDITY_CHECKER
		undefine
			default_create,
			copy,
			is_equal
		end

feature {NONE} -- Initialization

	user_initialization is
			-- called by `initialize'.
			-- Any custom user initialization that
			-- could not be performed in `initialize',
			-- (due to regeneration of implementation class)
			-- can be added here.
		do
			initialize_checker
			definition_file_box.setup ("Component definition file:", "definition_key", agent is_valid_file_name (?, "Invalid component definition file"), create {ARRAYED_LIST [TUPLE [STRING, STRING]]}.make_from_array (<<["*.idl", "IDL file (*.idl)"], ["*.tlb", "Type Library (*.tlb)"], ["*.dll", "DLL file (*.dll)"], ["*.exe", "Executable (*.exe)"], ["*.ocx", "Component (*.ocx)"], ["*.*", "All Files (*.*)"]>>), "Browse for COM definition file")
		end

feature {NONE} -- Implementation

	is_valid_file_name (a_file_name, a_error_message: STRING): BOOLEAN is
			-- Is `a_file_name' a valid file name?
		require
			non_void_file_name: a_file_name /= Void
		do
			Result := not a_file_name.is_empty and then (create {RAW_FILE}.make (a_file_name)).exists
			set_error (Result, a_error_message)
		end
		
end -- class WIZARD_COM_PROJECT_BOX

