REM Clean up the files
remtrace Update all source files.
cdd %EIFFEL_SRC
exprt -r %DEFAULT_CVS_TAG -d Eiffel Eiffel
exprt -r %DEFAULT_CVS_TAG -d dotnet "Src/dotnet"

remtrace Compile C code of the libraries
remtrace "A tout seigneur tout honneur", let's start with the run-time
md %INSTALL_DIR\releases
md %INSTALL_DIR\releases\enterprise
md %INSTALL_DIR\releases\free_version
md %INSTALL_DIR\releases\university_version
md %INSTALL_DIR\releases\evaluation

mkdir %INSTALL_DIR\releases\free_version\lib
mkdir %INSTALL_DIR\releases\free_version\lib\bcb
mkdir %INSTALL_DIR\releases\free_version\lib\msc
mkdir %INSTALL_DIR\releases\enterprise\lib
mkdir %INSTALL_DIR\releases\enterprise\lib\bcb
mkdir %INSTALL_DIR\releases\enterprise\lib\msc

remtrace Compile the commercial run-times
iff not defined WIN64 then
	remtrace Compile a run-time for Borland
	fullrd C
	exprt -r %DEFAULT_CVS_TAG -d C runtime
	cd C
	call configure win32 b >>& %INSTALL_LOG
	cd %EIFFEL_SRC
	fullrf C\run-time\LIB\ebench.lib
	copy C\run-time\LIB\*.lib %INSTALL_DIR\releases\enterprise\lib\bcb
	copy C\run-time\LIB\*.lib %INSTALL_DIR\releases\free_version\lib\bcb
	copy C\run-time\FREELIB\*.lib %INSTALL_DIR\releases\free_version\lib\bcb
endiff

remtrace Compile a run-time for Microsoft
fullrd C
exprt -r %DEFAULT_CVS_TAG -d C runtime
cd C
iff defined WIN64 then
call configure win64 m >>& %INSTALL_LOG
else
call configure win32 m >>& %INSTALL_LOG
endiff
cd %EIFFEL_SRC
fullrf C\run-time\LIB\ebench.lib
copy C\run-time\LIB\*.lib %INSTALL_DIR\releases\enterprise\lib\msc
iff not defined WIN64 then
	copy C\desc\ise_desc.dll %INSTALL_DIR\releases\enterprise\lib\msc
	copy C\desc\ise_desc.lib %INSTALL_DIR\releases\enterprise\lib\msc
endiff

copy C\run-time\LIB\*.lib %INSTALL_DIR\releases\free_version\lib\msc
copy C\run-time\FREELIB\*.lib %INSTALL_DIR\releases\free_version\lib\msc
iff not defined WIN64 then
	copy C\desc\ise_desc.dll %INSTALL_DIR\releases\free_version\lib\msc
	copy C\desc\ise_desc.lib %INSTALL_DIR\releases\free_version\lib\msc
endiff

remtrace Compile a dynamic run-time
fullrd C
exprt -r %DEFAULT_CVS_TAG -d C runtime
cd %EIFFEL_SRC\C/CONFIGS
iff not defined WIN64 then
	sed -e "s/\-W3/\-DEIF_MAKE_DLL\ \-W3/g" windows-msc-x86 >> new_windows-msc-x86
	move new_windows-msc-x86 windows-msc-x86
	sed -e "s/standard\ mtstandard/dll\ mtdll/g" windows-msc-x86 >> new_windows-msc-x86
	move new_windows-msc-x86 windows-msc-x86
else
	sed -e "s/\-W3/\-DEIF_MAKE_DLL\ \-W3/g" windows-msc-x86-64 >> new_windows-msc-x86-64
	move new_windows-msc-x86-64 windows-msc-x86-64
	sed -e "s/standard\ mtstandard/dll\ mtdll/g" windows-msc-x86-64 >> new_windows-msc-x86-64
	move new_windows-msc-x86-64 windows-msc-x86-64
endiff
cd %EIFFEL_SRC\C
iff defined WIN64 then
call configure win64 m >>& %INSTALL_LOG
else
call configure win32 m >>& %INSTALL_LOG
endiff
cd %EIFFEL_SRC
fullrf C\run-time\LIB\ebench.lib
fullrf C\run-time\LIB\*.exp
fullrf C\run-time\FREELIB\*.exp
copy C\run-time\LIB\*dll* %INSTALL_DIR\releases\enterprise\lib\msc
copy C\run-time\LIB\*dll* %INSTALL_DIR\releases\free_version\lib\msc
copy C\run-time\FREELIB\*dll* %INSTALL_DIR\releases\free_version\lib\msc
cd %EIFFEL_SRC

remtrace Copy the header files
copy %EIFFEL_SRC\C\run-time\*.h %INSTALL_DIR\studio\spec\%ISE_PLATFORM\include
copy %EIFFEL_SRC\C\eif_confmagic.h %INSTALL_DIR\studio\spec\%ISE_PLATFORM\include
cd %EIFFEL_SRC

remtrace Then the C libraries
cd %EIFFEL_SRC\C_library
fullrd .libs

remtrace libpng
cd %EIFFEL_SRC\C_library\libpng
default_make
remtrace zlib
cd %EIFFEL_SRC\C_library\zlib
default_make
copy %ISE_EIFFEL\library\vision2\spec\msc\lib\*lib*.lib %EIFFEL_SRC\library\vision2\spec\msc\lib

REM These directories should already have been created by make_delivery. Whatever...
safe_md %INSTALL_DIR\studio\spec
safe_md %INSTALL_DIR\studio\spec\%ISE_PLATFORM
safe_md %INSTALL_DIR\studio\spec\%ISE_PLATFORM\bin

remtrace CLI writer
cd %EIFFEL_SRC\Eiffel\library\cli_writer\Clib
call nmake

remtrace Compiling .NET components
cdd %INIT_DIR
call make_dotnet.btm
cdd %EIFFEL_SRC

REM Compiling EiffelStudio stuff
iff defined BUILD_ENTERPRISE_ONLY then
	remtrace Recompile EiffelStudio
	cdd %FINALIZATION_DIR
	copy %EIFFEL_SRC\Eiffel\Ace\newbench.mswin.ace finalizedbench.ace
	copy %EIFFEL_SRC\Eiffel\Ace\*.* .
	iff not exist finalizedbench.ace then
		remtrace Cannot find the finalization Ace for EiffelStudio
		CANCEL
	endiff

	remtrace Enterprise edition
	clean_project
	finalize finalizedbench.ace
	fff
	cleanup_eiffel ec.exe
	iff not exist ec.exe then
		remtrace Could not finalize a new "enterprise" EiffelStudio
		CANCEL
	endiff
	move ec.exe %INSTALL_DIR\releases\enterprise
else
	iff not defined NO_NEW_EC then
		remtrace Enterprise edition for EiffelStudio
		cdd %FINALIZATION_DIR
		copy %EIFFEL_SRC\Eiffel\Ace\*.* .

		clean_project
		finalize newbench.mswin.ace
		fff
		cleanup_eiffel ec.exe
		iff not exist ec.exe then
			remtrace Could not finalize a new "enterprise" EiffelStudio
			CANCEL
		endiff
		move ec.exe %INSTALL_DIR\releases\enterprise

		remtrace University edition
		cdd %FINALIZATION_DIR
		copy %EIFFEL_SRC\Eiffel\Ace\newbench.mswin.ace finalizedbench.ace
		copy %EIFFEL_SRC\Eiffel\Ace\*.* .
		iff not exist finalizedbench.ace then
			remtrace Cannot find the finalization Ace for EiffelStudio
			CANCEL
		endiff

		cdd %FINALIZATION_DIR
		sed -e "s/free/enterprise/g" finalizedbench.ace >> newace.ace
		move newace.ace finalizedbench.ace
		cdd %EIFFEL_SRC\Eiffel\library\activation\free
		sed -e "s/is_evaluating\ := \True/is_evaluating\ :=\ False/g" activation_checker.e >> tmp.e
		move tmp.e activation_checker.e
		cdd %EIFFEL_SRC\Eiffel\API\constants
		sed -e "s/Version_type_name:\ STRING\ is\ \"Enterprise\ Edition\"/Version_type_name:\ STRING\ is\ \"University\ Edition\"/g" system_constants.e >> new_system_constants.e
		move new_system_constants.e system_constants.e
		cdd %FINALIZATION_DIR
		clean_project
		finalize finalizedbench.ace
		fff
		cleanup_eiffel ec.exe
		iff not exist ec.exe then
			remtrace Could not finalize a new "University Edition" EiffelStudio
			CANCEL
		endiff
		move ec.exe %INSTALL_DIR\releases\university_version

		remtrace Free edition
		cdd %FINALIZATION_DIR
		copy %EIFFEL_SRC\Eiffel\Ace\newbench.mswin.ace finalizedbench.ace
		copy %EIFFEL_SRC\Eiffel\Ace\*.* .
		iff not exist finalizedbench.ace then
			remtrace Cannot find the finalization Ace for EiffelStudio
			CANCEL
		endiff

		cdd %FINALIZATION_DIR
		sed -e "s/free/enterprise/g" finalizedbench.ace >> newace.ace
		move newace.ace finalizedbench.ace

		cdd %EIFFEL_SRC\Eiffel\library\activation\free
		sed -e "s/is_evaluating\ := \False/is_evaluating\ :=\ True/g" activation_checker.e >> tmp.e
		move tmp.e activation_checker.e
		cdd %EIFFEL_SRC\Eiffel\API\constants
		sed -e "s/Version_type_name:\ STRING\ is\ \"University\ Edition\"/Version_type_name:\ STRING\ is\ \"Free\ Edition\"/g" system_constants.e >> new_system_constants.e
		move new_system_constants.e system_constants.e
		sed -e "s/\	has_case:\ BOOLEAN\ is\ True/\	has_case:\ BOOLEAN\ is\ False/g" eiffel_env.e >> new_eiffel_env.e
		move new_eiffel_env.e eiffel_env.e
		sed -e "s/\	has_metrics:\ BOOLEAN\ is\ True/\	has_metrics:\ BOOLEAN\ is\ False/g" eiffel_env.e >> new_eiffel_env.e
		move new_eiffel_env.e eiffel_env.e
		sed -e "s/\	has_profiler:\ BOOLEAN\ is\ True/\	has_profiler:\ BOOLEAN\ is\ False/g" eiffel_env.e >> new_eiffel_env.e
		move new_eiffel_env.e eiffel_env.e
		sed -e "s/\	has_documentation_generation:\ BOOLEAN\ is\ True/\	has_documentation_generation:\ BOOLEAN\ is\ False/g" eiffel_env.e >> new_eiffel_env.e
		move new_eiffel_env.e eiffel_env.e
		sed -e "s/\	has_xmi_generation:\ BOOLEAN\ is\ True/\	has_xmi_generation:\ BOOLEAN\ is\ False/g" eiffel_env.e >> new_eiffel_env.e
		move new_eiffel_env.e eiffel_env.e
		sed -e "s/\	has_dll_generation:\ BOOLEAN\ is\ True/\	has_dll_generation:\ BOOLEAN\ is\ False/g" eiffel_env.e >> new_eiffel_env.e
		move new_eiffel_env.e eiffel_env.e
		sed -e "s/\	has_signable_generation:\ BOOLEAN\ is\ True/\	has_signable_generation:\ BOOLEAN\ is\ False/g" eiffel_env.e >> new_eiffel_env.e
		move new_eiffel_env.e eiffel_env.e
		cdd %FINALIZATION_DIR
		clean_project
		finalize finalizedbench.ace
		fff
		cleanup_eiffel ec.exe
		iff not exist ec.exe then
			remtrace Could not finalize a new "Free Edition" EiffelStudio
			CANCEL
		endiff
		move ec.exe %INSTALL_DIR\releases\free_version

		cdd %INSTALL_DIR\releases
		copy enterprise\ec.exe evaluation
	endiff
endiff

remtrace Recompile finish_freezing
cdd %EIFFEL_SRC\Eiffel\extra\finish_freezing
clean_project
finalize mswin-finish_freezing.ace
fff
cleanup_eiffel finish_freezing.exe
iff not exist finish_freezing.exe then
	remtrace Could not finalize a new finish_freezing
	CANCEL
endiff
move finish_freezing.exe %INSTALL_DIR\studio\spec\%ISE_PLATFORM\bin

remtrace Recompile quick_finalize
cdd %EIFFEL_SRC\Eiffel\extra\quick_c_compilation
clean_project
finalize Ace.ace
fff
cleanup_eiffel quick_finalize.exe
iff not exist quick_finalize.exe then
	remtrace Could not finalize a new quick_finalize
	CANCEL
endiff
move quick_finalize.exe %INSTALL_DIR\studio\spec\%ISE_PLATFORM\bin

remtrace Put estudio.exe in the new delivery
REM It should already have been compiled by the configure of the run-time.
cdd %EIFFEL_SRC\C\ipc\daemon
iff not exist estudio.exe then
	remtrace Could not finalize a new estudio
	CANCEL
endiff
move estudio.exe %INSTALL_DIR\studio\spec\%ISE_PLATFORM\bin

remtrace Put x2c.exe in the new delivery
REM It should already have been compiled by the configure of the run-time.
cdd %EIFFEL_SRC\C\run-time
iff not exist x2c.exe then
	remtrace Could not finalize a new x2c
	CANCEL
endiff
move x2c.exe %INSTALL_DIR\studio\spec\%ISE_PLATFORM\bin

remtrace Recompile h2e
cdd %EIFFEL_SRC\library\wel\extra
clean_project
finalize h2ew32.ace
fff
cleanup_eiffel h2e.exe
iff not exist h2e.exe then
	remtrace Could not finalize a new h2e
	CANCEL
endiff
move h2e.exe %INSTALL_DIR\studio\spec\%ISE_PLATFORM\bin

remtrace Recompile Custom actions for installation program
cdd %EIFFEL_SRC
mkdir tools
cd tools
exprt -r %DEFAULT_CVS_TAG -d setup "Src/tools/setup"
cd %EIFFEL_SRC\tools\setup\studio
clean_project
finalize ace.ace
fff
cleanup_eiffel setup.dll
iff not exist setup.dll then
	remtrace Couldnt generate setup.dll
	CANCEL
endiff
move setup.dll %INIT_DIR\install\Binary

remtrace Recompiling EiffelBuild
cdd %INIT_DIR
call make_build.btm

remtrace Recompiling Vision2 tour
cdd %INIT_DIR
call make_vision2_tour.btm

remtrace Recompile Legacy++
cdd %EIFFEL_SRC
exprt -r %DEFAULT_CVS_TAG -d legacy "Src/tools/legacy"
cd %EIFFEL_SRC\legacy\PCCTS
safe_md bin
nmake /f makefile.win
cd ..
cd legacy
nmake -f makefile.win
iff not exist legacy.exe then
	remtrace Couldnt generate legacy.exe
	CANCEL
endiff
move legacy.exe %INSTALL_DIR\studio\spec\%ISE_PLATFORM\bin
