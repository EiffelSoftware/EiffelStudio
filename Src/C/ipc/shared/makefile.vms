########################################################################
# Makefile generated from Makefile.SH on Fri Nov 18 08:54:02 PST 1994
#   .../C/ipc/shared/Makefile.vms
# $Id$

SHELL = /bin/sh
JMAKE = jmake
#TOP = ../..
#TOP = [C]
#TOPDIR = ../..
#TOP = $(TOPDIR)]
CURRENT = ipc/shared
#DIR = [.ipc.shared]

########################################################################
# Parameters set by Configure -- edit config.sh if changes are needed

#AR = libr/create
#CC = cc
CTAGS = ctags
JCFLAGS = $(CFLAGS) /jcflag
LINT = lint
MAKE = make
MKDEP = /home/tomh/Eiffel3/C/mkdep $(DPFLAGS) --
MV = move
#RANLIB = dirl
RM = delete/nolog
SED = /bin/sed

########################################################################
# Automatically generated parameters -- do not edit

SOURCES =  $(LSRC)
OBJECTS =  $(LOBJ)

########################################################################
# New suffixes and associated building rules -- edit with care

#.c.obj : works
#.c.obj : $@ ipcvms.h fails
#.c.obj : $*.c ipcvms.h fails
#.c.obj : $<.c ipcvms.h fails
#.c.obj :: ipcvms.h

########################################################################
# Jmake rules for building libraries, programs, scripts, and data files
# $X-Id: Jmake.rules,v 2.8.1.4 91/11/18 13:19:07 ram Exp Locker: ram $

########################################################################
# Force 'make depend' to be performed first -- do not edit

#.FORCE_DEPEND ::

#all :: .FORCE_DEPEND

########################################################################
# Start of Jmakefile

#DPFLAGS = /prefix=all/incl=($(TOP),$(LIBRUN),$(LIBIDR))

#CINCLUDES = /INCL=($(TOP),[--.run-time],[--idrs],[--.run-time.include])
#CINCLUDES = [--.run-time],[--.idrs],[--.run-time.include]

#CDEFINES = /define=(WORKBENCH,USE_ADD_LOG,DEBUG)
CDEFINES = WORKBENCH,EIF_IPC

# define vms specific symbols for compiling, etc.
include EIFFEL_SRC:[C.IPC]Makeinc.VMS


#DPFLAGS = $(CINCLUDES)$(CDEFINES)
#CFLAGS = $(DECC_FLAGS)$(DPFLAGS)

LOCAL_DEPENDENCIES = $(MAKEFILE_DEPENDENCIES) $(TOP)/eif_config.h $(TOP)/eif_portable.h $(TOP)/eif_confmagic.h

#LIBRUN = [--.run-time]
#LIBIDR = [--.idrs]

LSRC =	ipcvms.c    \
	com.c identify.c lock.c logfile.c network.c \
	select.c shword.c stack.c stream.c system.c \
	transfer.c rqst_idrs.c

#LOBJ = ipcvms.obj  \
#	com.obj identify.obj lock.obj logfile.obj network.obj \
#	select.obj shword.obj stack.obj stream.obj system.obj \
#	transfer.obj rqst_idrs.obj

LOBJ = $(patsubst %.c,%.obj,$(LSRC))

$(OBJECTS) : ipcvms.h $(EXTRA_DEPENDENCIES)


LIBS	= ipc.olb # ipc.olb_cs

all :: $(LIBS)

local_realclean ::
	-$(RM) *.olb;*
	
LISTINGS = $(patsubst %.c,%.lis,$(SOURCES))
$(LISTINGS) : $(EXTRA_DEPENDENCIES)
listings : $(LISTINGS)
	@-if f$$search("*.dia") .nes. "" then purge/nolog *.dia



#LOBJ = ipcvms.obj com.obj

ipc.olb : $(LOBJ)
#	$(RM) $@
#	$(AR) $@ $(LOBJS)
#	$(RANLIB) $@
#	write sys$$output "$(LOCAL_MAKEFILE): $@: $$? = $?"
#	write sys$$output "$(LOCAL_MAKEFILE): $@: $$^ = $^"
	libr/create/insert $@ $^
	@-purge/nolog *.obj
	@-if f$$search("*.dia") .nes. "" then purge/nolog *.dia


#depend :: ../../mkdep

#../../mkdep:
#	@echo "You have to run Configure in $(TOP) first."; exit 1

depend ::
	($(SED) '/^# DO NOT DELETE/q' Makefile && \
	$(MKDEP) $(SOURCES) | \
	$(SED) 's/: \.\//: /; /\/usr\/include/d' \
	) > Makefile.new
	cp Makefile Makefile.bak
	cp Makefile.new Makefile
	$(RM) Makefile.new

lint :
	$(LINT) $(LINTFLAGS) $(SOURCES) $(LINTLIBS)

########################################################################
# Common rules for all Makefiles -- do not edit

emptyrule ::

clean : local_clean
realclean : local_realclean
clobber : local_clobber

local_clean ::
#	$(RM) core *~ *.obj
	-$(RM) *.obj;*,*.dia;*,*.i;*

local_realclean :: local_clean

local_clobber :: local_realclean
	$(RM) Makefile config.sh

Makefile.SH : Jmakefile
	-@if test -f $(TOP)/.package; then \
	if test -f Makefile.SH; then \
	echo "	$(RM) Makefile.SH~; $(MV) Makefile.SH Makefile.SH~"; \
	$(RM) Makefile.SH~; $(MV) Makefile.SH Makefile.SH~; \
	fi; \
	echo "	$(JMAKE) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT)" ; \
	$(JMAKE) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT) ; \
	else touch $@; exit 0; fi

Makefile : Makefile.SH
	/bin/sh Makefile.SH

tags ::
	$(CTAGS) -w *.[ch]
	$(CTAGS) -xw *.[ch] > tags

local_clobber ::
	$(RM) tags

########################################################################
# Empty rules for directories with no sub-directories -- do not edit

install ::
	@echo "install in $(CURRENT) done."

deinstall ::
	@echo "deinstall in $(CURRENT) done."

install.man ::
	@echo "install.man in $(CURRENT) done."

deinstall.man ::
	@echo "deinstall.man in $(CURRENT) done."

Makefiles ::

Makefiles.SH ::

show_decc :
	@write sys$$output "DECC_FLAGS=$(DECC_FLAGS)"

show ::
	@write sys$$output "**********************************************************************"
	@write sys$$output "$(LOCAL_MAKEFILE): show: $$(DIR) = $(DIR)"
	@write sys$$output "  $$(SOURCES) = $(SOURCES)"
	@write sys$$output "  $$(MAKEFILE_LIST) = $(MAKEFILE_LIST)"
	@write sys$$output "  $$(MAKEFILE_DEPENDENCIES) = $(MAKEFILE_DEPENDENCIES)"
	@write sys$$output "  $$(EXTRA_DEPENDENCIES) = $(EXTRA_DEPENDENCIES)"
	@write sys$$output "$(LOCAL_MAKEFILE) $@: $$(CDEFINES) = ""$(CDEFINES)"""
	@write sys$$output "$(LOCAL_MAKEFILE) $@: $$(DECC_DEFINES) = ""$(DECC_DEFINES)"""
ifeq ($(CDEFINES),)
	@write sys$$output "CDEFINES blank"
else
	@write sys$$output "CDEFINES nonblank"
endif
ifdef CDEFINES
	@write sys$$output "CDEFINES defined"
else
	@write sys$$output "CDEFINES undefined"
endif


########################################################################
# Dependencies generated by make depend
# DO NOT DELETE THIS LINE -- make depend relies on it
ipcvms.obj : ipcvms.c ipcvms.h ipcvmsdef.h [--.run-time]eif_vmsdef.h
ipcvms.obj : ../../eif_config.h ../../eif_portable.h ../../eif_confmagic.h
#vms_select.obj : vms_select.c
#vms_select.obj : vms_socket.h
#vms_select.obj : bitmask.h
#vms_select.obj : ../../eif_config.h
#vms_select.obj : ../../eif_portable.h
#vms_select.obj : ../../eif_confmagic.h
com.obj : com.c
com.obj : $(TOP)/eif_config.h
com.obj : $(TOP)/eif_portable.h
com.obj : $(TOP)/eif_confmagic.h
com.obj : request.h
com.obj : rqst_const.h
com.obj : stack.h
com.obj : $(TOP)/run-time/eif_except.h
com.obj : ../../run-time/eif_malloc.h
com.obj : $(TOP)/run-time/eif_garcol.h
com.obj : $(TOP)/run-time/eif_struct.h
com.obj : $(TOP)/run-time/eif_plug.h
com.obj : $(TOP)/run-time/eif_interp.h
com.obj : $(TOP)/run-time/eif_struct.h
com.obj : com.h
com.obj : stream.h
identify.obj : identify.c
identify.obj : ../../eif_config.h
identify.obj : ../../eif_portable.h
identify.obj : ../../eif_confmagic.h
identify.obj : eif_logfile.h
identify.obj : timehdr.h
identify.obj : ewbio.h
lock.obj : lock.c
lock.obj : ../../eif_config.h
lock.obj : ../../eif_portable.h
lock.obj : ../../eif_confmagic.h
logfile.obj : logfile.c
logfile.obj : ../../eif_config.h
logfile.obj : ../../eif_portable.h
logfile.obj : ../../eif_confmagic.h
network.obj : network.c
network.obj : ../../eif_config.h
network.obj : ../../eif_portable.h
network.obj : ../../eif_confmagic.h
select.obj : select.c
select.obj : ../../eif_config.h
select.obj : ../../eif_portable.h
select.obj : ../../eif_confmagic.h
select.obj : select.h
select.obj : timehdr.h
select.obj : bitmask.h
shword.obj : shword.c
shword.obj : ../../eif_config.h
shword.obj : ../../eif_portable.h
shword.obj : ../../eif_confmagic.h
stack.obj : stack.c
stack.obj : ../../eif_config.h
stack.obj : ../../eif_portable.h
stack.obj : ../../eif_confmagic.h
stack.obj : ../../run-time/eif_debug.h
stack.obj : ../../run-time/eif_interp.h
stack.obj : ../../run-time/eif_struct.h
stack.obj : ../../run-time/eif_except.h
stack.obj : ../../run-time/eif_malloc.h
stack.obj : ../../run-time/eif_garcol.h
stack.obj : ../../run-time/eif_struct.h
stack.obj : ../../run-time/eif_plug.h
stack.obj : stack.h
stack.obj : com.h
stack.obj : request.h
stack.obj : rqst_const.h
stack.obj : stack.h
stack.obj : ../../run-time/eif_macros.h
stack.obj : ../../run-time/eif_local.h
stack.obj : ../../run-time/eif_copy.h
stack.obj : ../../run-time/eif_hector.h
stack.obj : ../../run-time/eif_cecil.h
stack.obj : ../../run-time/eif_size.h
stream.obj : stream.c
stream.obj : ../../eif_config.h
stream.obj : ../../eif_portable.h
stream.obj : ../../eif_confmagic.h
stream.obj : stream.h
system.obj : system.c ipcvms.h
system.obj : ../../eif_config.h
system.obj : ../../eif_portable.h
system.obj : ../../eif_confmagic.h
system.obj : timehdr.h
transfer.obj : transfer.c
transfer.obj : ../../eif_config.h
transfer.obj : ../../eif_portable.h
transfer.obj : ../../eif_confmagic.h
transfer.obj : eif_logfile.h
transfer.obj : shared.h
transfer.obj : transfer.h
transfer.obj : request.h
transfer.obj : rqst_const.h
transfer.obj : stack.h
transfer.obj : ../../run-time/eif_except.h
transfer.obj : ../../run-time/eif_malloc.h
transfer.obj : ../../run-time/eif_garcol.h
transfer.obj : ../../run-time/eif_struct.h
transfer.obj : ../../run-time/eif_plug.h
transfer.obj : ../../run-time/eif_interp.h
transfer.obj : stream.h
rqst_idrs.obj : rqst_idrs.c
rqst_idrs.obj : ../../eif_config.h
rqst_idrs.obj : ../../eif_portable.h
rqst_idrs.obj : ../../eif_confmagic.h
rqst_idrs.obj : request.h
rqst_idrs.obj : rqst_const.h
rqst_idrs.obj : stack.h
rqst_idrs.obj : ../../run-time/eif_except.h
rqst_idrs.obj : ../../run-time/eif_malloc.h
rqst_idrs.obj : ../../run-time/eif_garcol.h
rqst_idrs.obj : ../../run-time/eif_struct.h
rqst_idrs.obj : ../../run-time/eif_plug.h
rqst_idrs.obj : ../../run-time/eif_interp.h
rqst_idrs.obj : ../../run-time/eif_struct.h
rqst_idrs.obj : ../../idrs/idrs.h
rqst_idrs.obj : rqst_idrs.h
rqst_idrs.obj : ../../idrs/idrs.h
