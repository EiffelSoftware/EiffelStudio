note
	description: "[
						Objects that represent an EV_RIBBON_TITLED_WINDOW
						The original version of this class was generated by EiffelRibbon.
																			]"
	generator: "EiffelBuild"
	date: "$Date$"
	revision: "$Revision$"

class
	MAIN_WINDOW$INDEX

inherit
	EV_RIBBON_TITLED_WINDOW
		redefine
			create_interface_objects,
			initialize$APPLICATION_MENU_REDEFINE$HELP_BUTTON_REDEFINE$QUICK_ACCESS_TOOLBAR_REDEFINE
		end

	EV_SHARED_APPLICATION
		undefine
			default_create, copy
		end


feature {NONE}-- Initialization

	initialize
			-- Initialize `Current'.
		do
			Precursor {EV_RIBBON_TITLED_WINDOW}

				-- Build widget structure.

			set_title ("Ribbon window")

				-- Call `user_initialization'.
			user_initialization
		end

	user_initialization
			-- Called by `initialize'.
			-- Any custom user initialization that
			-- could not be performed in `initialize',
			-- (due to regeneration of implementation class)
			-- can be added here.
		do
			set_size (800, 400)

				-- Attach Ribbon by COM here$INIT_WITH_WINDOW
			close_request_actions.extend (agent ev_application.destroy)
			show_actions.extend_kamikaze (agent
									do
										if attached ev_application as l_app then
											l_app.destroy_actions.extend (agent ribbon.destroy)
										end
									end)$CONTEXT_POPUPS_REGISTER$TAB_GROUP_REGISTER
		end

	create_interface_objects
			-- <Precursor>
		do
				-- Initialize before calling Precursor all the attached attributes
				-- from the current class.

				-- Proceed with vision2 objects creation.
			Precursor
			create ribbon.make
$APPLICATION_MENU_CREATION$HELP_BUTTON_CREATION$QUICK_ACCESS_TOOLBAR_CREATION$CONTEXT_POPUPS_CREATION$TAB_GROUP_CREATION
		end

feature -- Access

	ribbon: $RIBBON_NAME
			-- Ribbon attached to current
$APPLICATION_MENU_NAME$HELP_BUTTON_NAME$QUICK_ACCESS_TOOLBAR_NAME$CONTEXT_POPUPS_NAME$TAB_GROUP_NAME
end
