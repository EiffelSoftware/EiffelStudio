%{
/* Lex will see the function "in_word_set" which will return a pointer
 * to a token structure. Due to gperf constraints, the structure has to
 * be declared here and in lex and cannot be held in an include file--RAM.
 */
#include "eif_macros.h"
#include "parser.h"
%}
struct token {
	char *name;		/* The name is imposed by gperf */
	int yaccval;	/* Value returned to yacc */
};
%%
# Run this file through
#   gperf -p -t -l -k 1,'$',4 eiffel.gperf > keyword.c
# to produce a fast keyword recognition function.
alias,			TE_ALIAS
all,			TE_ALL
and,			TE_AND
as,				TE_AS
bit,			TE_BIT
check,			TE_CHECK
class,			TE_CLASS
create,			TE_CREATION
creation,		TE_CREATION
current,		TE_CURRENT
debug,			TE_DEBUG
deferred,		TE_DEFERRED
do,				TE_DO
else,			TE_ELSE
elseif,			TE_ELSEIF
end,			TE_END
ensure,			TE_ENSURE
expanded,		TE_EXPANDED
export,			TE_EXPORT
external,		TE_EXTERNAL
false,			TE_FALSE
feature,		TE_FEATURE
from,			TE_FROM
frozen,			TE_FROZEN
if,				TE_IF
implies,		TE_IMPLIES
indexing,		TE_INDEXING
infix,			TE_INFIX
inherit,		TE_INHERIT
inspect,		TE_INSPECT
invariant,		TE_INVARIANT
is,				TE_IS
like,			TE_LIKE
local,			TE_LOCAL
loop,			TE_LOOP
not,			TE_NOT
obsolete,		TE_OBSOLETE
old,			TE_OLD
once,			TE_ONCE
or,				TE_OR
precursor,		TE_PRECURSOR
prefix,			TE_PREFIX
redefine,		TE_REDEFINE
rename,			TE_RENAME
require,		TE_REQUIRE
rescue,			TE_RESCUE
result,			TE_RESULT
retry,			TE_RETRY
select,			TE_SELECT
separate,		TE_SEPARATE
signature,		TE_SIGNATURE
strip,			TE_STRIP
then,			TE_THEN
true,			TE_TRUE
undefine,		TE_UNDEFINE
unique,			TE_UNIQUE
until,			TE_UNTIL
variant,		TE_VARIANT
when,			TE_WHEN
xor,			TE_XOR
