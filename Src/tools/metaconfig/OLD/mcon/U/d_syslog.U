?RCS: $Id: d_syslog.U 78389 2004-11-30 00:17:17Z manus $
?RCS:
?RCS: Copyright (c) 1991-1993, Raphael Manfredi
?RCS: 
?RCS: You may redistribute only under the terms of the Artistic Licence,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic Licence; a copy of which may be found at the root
?RCS: of the source tree for dist 3.0.
?RCS:
?RCS: $Log$
?RCS: Revision 1.1  2004/11/30 00:17:18  manus
?RCS: Initial revision
?RCS:
?RCS: Revision 3.0.1.1  1997/02/28  15:46:56  ram
?RCS: patch61: replaced .o with $_o all over the place
?RCS:
?RCS: Revision 3.0  1993/08/18  12:07:43  ram
?RCS: Baseline for dist 3.0 netwide release.
?RCS:
?MAKE:d_syslog syslogc syslogo: test Csym Setvar Findhdr _o
?MAKE:	-pick add $@ %<
?S:d_syslog:
?S:	This variable conditionally defines the HAS_SYSLOG symbol, which
?S:	indicates to the C program that syslog() exists on this system.
?S:.
?C:HAS_SYSLOG (LIBSYSLOG):
?C:	This symbol, if defined, indicates that the program can rely on the
?C:	system providing syslog().  Otherwise, the syslog code provided by
?C:	the package should be used.
?C:.
?H:#$d_syslog HAS_SYSLOG	/**/
?H:.
?LINT:set d_syslog
?LINT:describe syslogc syslogo
: see if syslog is available
echo " "
if $test `./findhdr syslog.h` && \
	(set syslog val -f d_syslog; eval $csym; $val); then
	echo "syslog() found." >&4
	val="$define"
	syslogc=''
	syslogo=''
else
	echo "syslog() not found in your C library--using ./syslog.c." >&4
	val="$undef"
	syslogc='syslog.c'
	syslogo="syslog$_o"
fi
set d_syslog
eval $setvar

