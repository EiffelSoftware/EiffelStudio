<document output="envision" title="Object Browser References Node">
	<meta_data>
		<help>
			<toc>
				<envision_title>References</envision_title>
				<envision_pseudo_name>30</envision_pseudo_name>
			</toc>
			<xml>
				<xmlkeyword>
					<index>K</index>
					<term>Object Browser, References Node</term>
				</xmlkeyword>
			</xml>
		</help>
	</meta_data>
	<paragraph>	
		<paragraph>
			Traditionally in the Visual Studio .NET <help_link>
				<keywords>vxurfObjectBrowserS</keywords>
				<tab_index>0</tab_index>
				Object Browser
			</help_link> window project references are consolidated and displayed along side the projects, in the <bold>Objects</bold> pane. EiffelEnvision projects and the <link><url>url</url><label>*Eiffel for .NET</label></link> compiler work with <link><url>url</url><label>*Component References</label></link> differently and require an alternative means to display them. In order to work with Eiffel for .NET, assemblies must be "consumed" by the Eiffel for .NET compiler. When consumed, assembly types and features are formatted into Eiffel-case. The formatting/conversion process is detailed in <link><url>url</url><label>*Referenced Assembly Type and Feature Name Conversion</label></link>. In addition, class name <link><url>url</url><label>*prefixes</label></link> may also be set for any <link><url>url</url><label>*Component Reference</label></link> in an EiffelEnvision Project. With such conversion and customization, EiffelEnvision's <link><url>url</url><label>*Component References</label></link> cannot be consolidated with other project references. Class name <link><url>url</url><label>*Prefixes</label></link> further prevent consolidation as they are project-specific. As a result, EiffelEnvision project's in the <help_link>
				<keywords>vxurfObjectBrowserS</keywords>
				<tab_index>0</tab_index>
				Object Browser
			</help_link> have their own <bold>References</bold> (<image>
				<url>../images/assembly/hier_reference_all.ico</url>
			</image>) section.
		</paragraph>
		<paragraph>
			Expanding the <bold>References</bold> node will yield a list of <link><url>assemblies.xml</url><label>Assembly Nodes</label></link>, representing the <link><url>url</url><label>*Component References</label></link> in your project.
		</paragraph>
		
		<anchor>also_see</anchor>
		<heading>
			<size>2</size>
			<content>Related Sections</content>
		</heading>
		<seealso>
			<bold>See Also:</bold>
			<line_break/>
			<link><url>index.xml</url><label>Object Browser</label></link>
			<line_break/>
			<help_link>
				<keywords>urfAddReferenceDialogBox</keywords>
				<tab_index>0</tab_index>
				Add Reference dialog box
			</help_link>
			<line_break/>
			<help_link>
				<keywords>vxgrfClassViewIcons</keywords>
				<tab_index>0</tab_index>
				Class View and Object Browser Icons
			</help_link>
			<line_break/>
			<link><url>../index.xml</url><label>Code Browsing and Navigation</label></link>
			<line_break/>
			<help_link>
				<keywords>vxoriBrowsingCodeComponents</keywords>
				<tab_index>0</tab_index>
				Browsing Code and Components	
			</help_link>
			<line_break/>
			<help_link>
				<keywords>vxurfObjectBrowserS</keywords>
				<tab_index>0</tab_index>
				Visual Studio .NET Object Browser
			</help_link>
			<line_break/>
			<help_link>
				<keywords>vxurfClassViewWindow</keywords>
				<tab_index>0</tab_index>
				Visual Studio .NET Class View
			</help_link>
		</seealso>
	</paragraph>
</document>
