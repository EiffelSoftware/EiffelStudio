note
	description: "Constants for generator"
	legal: "See notice at end of class."
	status: "See notice at end of class."
	author: ""
	date: "$Date$"
	revision: "$Revision$"

class
	WIZARD_GENERATOR_CONSTANTS

feature -- Access

	Class_footer: STRING = ""

	Class_header: STRING = ""

	Description_keyword: STRING = "description"

	None_keyword: STRING = "NONE"

	Wizard_note: STRING = "%"Automatically generated by the EiffelCOM Wizard.%""

	Initialization_title: STRING = "Initialization"

	Access_title: STRING = "Access"

	Measurement_title: STRING = "Measurement"

	Status_report_title: STRING = "Status Report"

	Element_change_title: STRING = "Element Change"

	Basic_operations_title: STRING = "Basic Operations"

	Implementation_title: STRING = "Implementation"

	External_title: STRING = "External"

	Added:STRING = "Added"

	Dynamic_type_function_name: STRING = "dynamic_type"

	Processed: STRING = "Processed"

	Processing: STRING = "Processing"

	Record: STRING = "Record"

	Elements_string: STRING = "Elements"

	Inherit_from_string: STRING =   "inherit from"

	Dispinterface_string: STRING = "Dispinterface"

	Interface: STRING = "Interface"

	Coclass: STRING = "Coclass"

	Enumerator: STRING = "Enumerator"

	Functions_string: STRING = "Functions"

	Properties_string: STRING = "Properties"

	Precondition_function_comment: STRING = "User-defined preconditions for "

	Should_redefine: STRING = "Redefine in descendants if needed."

	Implemented_word: STRING = "implemented"

	implemented_coclass_extension: STRING = "_IMP"

	Register_dll_server_function_name: STRING = "dll_register_server"

	Unregister_dll_server_function_name: STRING = "dll_unregister_server"

	Can_unload_dll_now_function_name: STRING = "dll_can_unload_now"

	Get_class_object_function_name: STRING = "dll_get_class_object"

	Ccom_get_class_object_function_name: STRING = "ccom_class_object"

	Ccom_register_dll_server_function_name: STRING = "ccom_register_dll_server"

	Ccom_unregister_dll_server_function_name: STRING = "ccom_unregister_dll_server"

	Ccom_can_unload_dll_now_function_name: STRING = "ccom_dll_can_unload_now"

	Excepinfo_access: STRING = "excepinfo->"

	Excepinfo_variable_name: STRING = "excepinfo"

	Wcode_field: STRING = "wCode"

	Default_iunknown_variable_comment: STRING = "Default IUnknown interface pointer"

	Excepinfo_variable_comment: STRING = "Exception information"

	Bstr_source_field: STRING = "bstrSource"

	Server_registration_header_file_name: STRING = "server_registration.h"

	Ccom_embedding_feature_name: STRING = "ccom_embedding"

	Ccom_regserver_feature_name: STRING = "ccom_register_server"

	Ccom_unregserver_feature_name: STRING = "ccom_unregister_server"

	Embedding_feature_name: STRING = "embedding"

	Regserver_feature_name: STRING = "regserver"

	Unregserver_feature_name: STRING = "unregserver"

	Bstr_description_field: STRING = "bstrDescription"

	Bstr_help_file_field: STRING = "bstrHelpFile"

	Class_object_registration_token: STRING = "dwRegister"

	Class_object_variable_name: STRING = "cls_object"

	Tmp_eif_object: STRING = "tmp_eif_object"

	Option_variable_name: STRING = "an_option"

	Locks_variable_name: STRING = "lock_count"

	Delete_on_unregister: STRING = "pDelOnUnregister"

	Key_name: STRING = "pKeyName"

	Struct_value: STRING = "pValue"

	Value_name: STRING = "pValueName"

	Reg_data: STRING = "REG_DATA"

	Registry_entries_variable_name: STRING = "reg_entries"

	Component_entries_count: STRING = "com_entries_count"

	Extern_lock_module: STRING = "extern void LockModule (void);"

	Extern_unlock_module: STRING = "extern void UnlockModule (void);"

	Eiffel_object: STRING = "eiffel_object"

	Set_type_id_function_name: STRING = "set_type_id"

	Ecatch: STRING = "%TECATCH;%N"

	Eif_initialize_aux_thread: STRING = "%TEIF_INITIALIZE_AUX_THREAD;%N"

	ecom_enter_stub: STRING = "%TECOM_ENTER_STUB;%N"

	ecom_enter_proc_stub: STRING = "%TECOM_ENTER_PROC_STUB;%N"

	Ecatch_auto: STRING = "ECATCH_AUTO"

	End_ecatch: STRING = "END_ECATCH;%N%T"

	ecom_exit_stub: STRING = "ECOM_EXIT_STUB;%N%T"

	ecom_exit_proc_stub: STRING = "ECOM_EXIT_PROC_STUB;%N%T"

	Lock_module_function: STRING = "LockModule ();"

	Unlock_module_function: STRING = "UnlockModule ();"

	Riid: STRING = "riid"

	Factory: STRING = "factory"

	Tmp_object_pointer: STRING = "pUnknown"

	Star_ppv: STRING = "*ppv"

	Query_interface_signature: STRING = "REFIID riid, void ** ppv"

	Ref_count: STRING = "ref_count"

	Tmp_variable_name: STRING = "tmp_value"

	Eiffel_procedure_variable_name: STRING = "eiffel_procedure"

	Eiffel_function_variable_name: STRING = "eiffel_function"

	Argument_name: STRING = "a_value"

	Dispparam_parameter: STRING = "pDispParams"

	Variant_parameter: STRING = "lcl_rgvarg"

	Return_value_name: STRING = "ret_value"

	Struct_selection_operator: STRING = "->"

	Ce_boolean: STRING = "ccom_ce_boolean"

	Index_of_word_option_function_name: STRING = "index_of_word_option"

	Interface_pointer_comment: STRING = "Interface pointer"

	Release_function: STRING = "->Release ();"

	Release: STRING = "Release"

	Load_type_lib: STRING = "LoadTypeLib"

	Return_s_ok: STRING = "return S_OK;"

	Get_type_info_of_guid: STRING = "GetTypeInfoOfGuid"

	Get_ids_of_names: STRING = "GetIDsOfNames"

	Get_type_info: STRING = "GetTypeInfo"

	Get_type_info_count: STRING = "GetTypeInfoCount"

	Add_reference: STRING = "AddRef"

	Add_reference_function: STRING = "->AddRef ();"

	Query_interface: STRING  = "QueryInterface"

	Co_uninitialize_function: STRING = "CoUninitialize ();"

	Interface_variable_prepend: STRING = "p_"

	Initialize_function_name: STRING = "initialize"

	Zero: STRING = "0"

	Type_info_variable_name: STRING = "pTypeInfo"

	Arguments_name: STRING = "arguments"

	One: STRING = "1"

	Multi_qi: STRING = "MULTI_QI"

	Ccom_item_function_name: STRING = "ccom_item"

	Current_object_variable_name: STRING = "current_object"

	Server_info_access: STRING = "server_info->"

	Server_info_variable: STRING = "server_info"

	Iunknown_variable_name: STRING = "p_unknown"

	Idispatch_variable_name: STRING = "p_dispatch"

	Invoke: STRING = "Invoke"

	Iunknown_clsid: STRING = "IID_IUnknown"

	Hresult_variable: STRING = "HRESULT hr = 0;%N"

	Routine_clause: STRING = "_routine"

	Append_tid_clause: STRING = "_tid"

	Feature_clause: STRING = "_feature"

	Set_item_procedure_name: STRING = "set_item"

	Put_procedure_name: STRING = "put"

	Module_file_name: STRING = "file_name"

	Wide_string_module_file_name: STRING = "ws_file_name"

	Max_path: STRING = "MAX_PATH"

	Arguments_variable_name: STRING = "arguments"

	Deferred_class_clause: STRING = "deferred class"

	Iunknown_interface: STRING = "ECOM_IUNKNOWN_INTERFACE"

	Empty_function_body: STRING = "%T%T%T-- Put Implementation here."

	Exception_body: STRING = "%T%T%Ttrigger (E_notimpl)"

	Result_clause: STRING = "Result := "

	Item_parameter_clause: STRING = "(item)"

	To_c_function: STRING = "to_c"

	Item_clause: STRING = "item"

	Array_item: STRING = "array_item"

	Make_word: STRING = "make"

	Make_from_other: STRING = "make_from_other"

	Make_from_pointer: STRING = "make_from_pointer"

	An_item_variable: STRING = "an_item"

	Current_item_variable: STRING = "current_item: POINTER"

	Null_coclass_test: STRING = "if (eiffel_coclass == NULL)%<%N"

	Type_id_variable: STRING = "EIF_TYPE_ID tid = -1;%N"

	Type_id_variable_name: STRING = "tid"

	Eif_procedure_variable: STRING = "EIF_PROCEDURE p_make;%N"

	Make_procedure: STRING = "p_make = eif_procedure (%"make_from_pointer%", tid)%N"

	Create_eiffel_object: STRING = "eiffel_object = eif_create (tid);%N"

	Tmp_clause: STRING = "tmp_"

	Get_clause: STRING = "get_"

	Register: STRING = "Register"

	Export_dll_class_name: STRING = "EXPORT_DLL_FEATURES"

	Unregister: STRING = "Unregister"

	Set_clause: STRING = "set_"

	Make_function: STRING = ".make "

	Ccom_clause: STRING = "ccom_"

	Item_function: STRING = ".item"

	Interface_function: STRING = ".interface"

	Ecom_date_type: STRING = "ECOM_DATE"

	Any_clause: STRING = "an_any: "

	Cpp_clause: STRING = "C++ %("

	Initializer_variable: STRING = "initializer"

	Pointer_variable: STRING = "a_pointer: POINTER"

	Default_pointer_argument: STRING = "a_object: POINTER"

	Empty_dispparams: STRING = "DISPPARAMS args = %<NULL, NULL, 0, 0%>;"

	Return_variant_variable: STRING = "VARIANT pResult; %N%TVariantInit (&pResult);"

	Return_variant_variable_name: STRING = "pResult"

	Hresult_variable_name: STRING = "hr"

	Hresult_variable_name_2: STRING = "hr2"

	Type_id: STRING = "type_id"

	Eif_object_variable: STRING = "eif_object"

	A_pointer: STRING = "a_pointer"

	Eif_ref_variable: STRING = "eif_ref"

	Format_message: STRING = "c_format_message"

	Com_eraise: STRING = "com_eraise"

	Beginning_comment_paramflag: STRING = " /* %("

	End_comment_paramflag: STRING = "%) */ "

	C_result: STRING = "result"

	Message_variable_name: STRING = "msg"

	Eif_eiffel_h: STRING = "eif_eiffel.h"

	Eif_com_h: STRING = "eif_com.h"

	Eif_setup_h: STRING = "eif_setup.h"

	Eif_macros_h: STRING = "eif_macros.h"

	Windows_h: STRING = "windows.h"

	Objbase_h: STRING = "objbase.h"

	Ecom_server_rt_globals_h: STRING = "ecom_server_rt_globals.h"

	An_object: STRING = "an_object"

	Eif_array: STRING = "eif_array"

	An_array: STRING = "an_array"

	Array_word: STRING = "array"

	Count_word: STRING = "count"

	A_count_word: STRING = "a_count"

	An_element: STRING = "an_element"

	A_ref: STRING = "a_ref"

	Last_error_code: STRING = "last_error_code"

	Last_error_description: STRING = "last_error_description"

	Last_error_help_file: STRING = "last_error_help_file"

	Last_source_of_exception: STRING = "last_source_of_exception"

	Ccom_last_error_code: STRING = "ccom_last_error_code"

	Ccom_last_error_description: STRING = "ccom_last_error_description"

	Ccom_last_error_help_file: STRING = "ccom_last_error_help_file"

	Ccom_last_source_of_exception: STRING = "ccom_last_source_of_exception"

	Ptr: STRING = "Pointed Type"

	Pure_virtual_sufix: STRING = " = 0"

	C_open_comment_line: STRING = "/*-----------------------------------------------------------"

	C_close_comment_line: STRING = "-----------------------------------------------------------*/";


note
	copyright:	"Copyright (c) 1984-2006, Eiffel Software"
	license:	"GPL version 2 (see http://www.eiffel.com/licensing/gpl.txt)"
	licensing_options:	"http://www.eiffel.com/licensing"
	copying: "[
			This file is part of Eiffel Software's Eiffel Development Environment.
			
			Eiffel Software's Eiffel Development Environment is free
			software; you can redistribute it and/or modify it under
			the terms of the GNU General Public License as published
			by the Free Software Foundation, version 2 of the License
			(available at the URL listed under "license" above).
			
			Eiffel Software's Eiffel Development Environment is
			distributed in the hope that it will be useful,	but
			WITHOUT ANY WARRANTY; without even the implied warranty
			of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
			See the	GNU General Public License for more details.
			
			You should have received a copy of the GNU General Public
			License along with Eiffel Software's Eiffel Development
			Environment; if not, write to the Free Software Foundation,
			Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA
		]"
	source: "[
			 Eiffel Software
			 356 Storke Road, Goleta, CA 93117 USA
			 Telephone 805-685-1006, Fax 805-685-6869
			 Website http://www.eiffel.com
			 Customer support http://support.eiffel.com
		]"
end -- class WIZARD_GENERATOR_CONSTANTS

