
--| Copyright (c) 1993-2006 University of Southern California and contributors.
--| All rights reserved.
--| Your use of this work is governed under the terms of the GNU General Public
--| License version 2.


Newly discovered bugs and deficiencies in the EiffelWeasel tester:
=================================================================

1. When eweasel runs many tests, it gradually runs out of file
   descriptors, starting with the highest numbered one available and
   working down.  Eventually, it stops with the error "Too many open
   files".  I have not yet been able to pin this bug down.  It does
   not seem to be my error.  It might be an OS bug.  For now, either
   don't run too many tests at once (it died after 266 tests on my
   machine) or use the command `limit descriptors 256' to increase the
   number of file descriptors available.

2. The batch compiler does not always detect that a file has changed
   if the change occurs less than one second after the previous
   change.  Due to this bug, I have modified eweasel to wait one
   second before copying a file, but only when necessary to avoid
   problems.  This slows eweasel down a little bit, but ensures that
   incrementality tests give the correct results.

3. Predefined substitution variables such as TEST and CLUSTER can be
   redefined by a test.  This should probably not be allowed.

4. The `execute_result' instruction currently only allows `ok' as the result.

5. Line number may not be omitted in a compile_result instruction such
   as `compile_result syntax_error TEST 15'.

6. Very deeply nested includes cause a "too many open files" error.
   This should not cause any practical problems.


Known bugs and deficiencies in the EiffelWeasel tester:
======================================================

1. Parentheses around a substitution variable to set it off from
   surrounding text has not been implemented.  Also, a reference to a
   substitution variable which has no defined value usually does not
   elicit an error message (although it should), but the test will
   usually fail in an obvious way since the substitution is not
   performed.

2. The cpu_limit instruction is parsed and error checked, but has no
   effect when the test control file is executed.

3. The append_output and manual_check instructions are not implemented
   at all.

4. There should be more advanced facilities for selecting tests from
   the catalog for execution.  Filters should be extended to allow
   and, or, xor, nor, minus and not operators.

5. Tests in the test suite catalog which include the keywords "loop",
   "very_long" or "not_done" should not be executed since they will
   either loop, take a *very* long time or not work properly.
