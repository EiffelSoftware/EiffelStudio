<?xml version="1.0"?>

<project name="build_library" default="help">
	<description>
		description: "Eiffel's libraries compilation"
	</description>
	
	<target name="help">
		<echo message="usage:"/>
		<echo message=" geant check_setup         Check if your setup is ok for compilation " />
		<echo message=" geant clean               Clean up the folders" />
		<echo message=" geant clobber             Clean, and delete generated files in folders"/>
		<echo message=" geant prepare             Prepare folders for development on `ec'"/>
		<echo message="                           Note: folders=runtime, il runtime, C_library," /> 
		<echo message="                                       library, framework." /> 
		<echo message=" geant compile             Compile 'ec' finalized" />
		<echo message=" geant compile_workbench   Compile 'ec' workbench" />
		<echo message=" ---- "/>
		<echo message=" geant make_delivery       Build a complete delivery " />
		<echo message="" />
		<echo message="defines:" />
		<!--
		<echo message="  -Dclean_after_compile    Clean after compilation (to save disk space)"/>
		<echo message="  -Dgobo_using_gec         Build GOBO tools using GEC"/>
		-->
		<echo message="  -Dcompile_dir=PATH     Build intermediate binaries in PATH"/>
	</target>

<!-- Targets -->
	<target name="check_setup" >
		<set name="L_check_setup_script" value="${EIFFEL_SRC}${path_separator}scripts${path_separator}check_setup.eant" />
		<available resource="$L_check_setup_script" variable="tmp_available"/>
		<geant target="check_setup" file="$L_check_setup_script"
			reuse_variables="true" fork="false"
			if="$tmp_available=true" 
		/>
		<echo message="Error: can not found [$L_check_setup_script]" if="$tmp_available=false" />
		<unset name="tmp_available" />
	</target>

	<target name="init_compilation" >
		<set name="L_comp_dir" value="$compile_dir" if="$compile_dir" />
		<set name="L_comp_dir" value="$cwd" 		if="-$compile_dir-=--" />
		<set name="L_comp_dir" value="$cwd" 		unless="$compile_dir" />
	</target>

	<target name="compile" depend="init_compilation" >
		<echo message="finalize `ec' in [$L_comp_dir]" />

		<geant target="finalize" file="${EIFFEL_SRC}${path_separator}scripts${path_separator}tools${path_separator}ec_bench.eant"
			dir="$L_comp_dir"
			reuse_variables="true" fork="false" />
	</target>
	<target name="compile_workbench" depend="init_compilation" >
		<echo message="workbench `ec' in [$L_comp_dir]" />

		<geant target="freeze" file="${EIFFEL_SRC}${path_separator}scripts${path_separator}tools${path_separator}ec_bench.eant"
			dir="$L_comp_dir"
			reuse_variables="true" fork="false" />
	</target>
	<target name="clean_compilation" depend="init_compilation" >
		<echo message="Clean `ec' compilation from [$L_comp_dir]" />

		<geant target="clean" file="${EIFFEL_SRC}${path_separator}scripts${path_separator}tools${path_separator}ec_bench.eant"
			dir="$L_comp_dir"
			reuse_variables="true" fork="false" />
	</target>

	<target name="prepare" >
		<echo message="Prepare everything for development on `ec'" />
		<geant target="_target_template_" arguments="compile" dir="${EIFFEL_SRC}" />
	</target>

	<target name="clean" >
		<geant target="_target_template_" arguments="clean" dir="${EIFFEL_SRC}" />
		<geant target="clean_compilation" />
	</target>

	<target name="clobber" depend="clean" >
		<geant target="_target_template_" arguments="clobber" dir="${EIFFEL_SRC}" />
	</target>

	<target name="make_delivery" >
		<geant target="build_delivery" file="${EIFFEL_SRC}${path_separator}scripts${path_separator}deliv.eant"
			reuse_variables="true" fork="false" />
	</target>

<!-- Implementation -->
	<target name="_target_template_" >
		<argument name="_target_name_" />

		<!-- Classic runtime -->
		<geant target="$_target_name_" dir="C" file="build.eant" 
			reuse_variables="true" fork="false" />
		<!-- IL runtime -->
		<geant target="$_target_name_" dir="Eiffel\eiffel\com_il_generation\Core\run-time" file="build.eant" 
			reuse_variables="true" fork="false" if="${is_windows}" />
		<!-- C_library -->
		<geant target="$_target_name_" dir="C_library" file="build.eant"
			reuse_variables="true" fork="false" />
		<!-- library -->
		<geant target="$_target_name_" dir="library" file="build.eant" 
			reuse_variables="true" fork="false" />
		<!-- framework -->
		<geant target="$_target_name_" dir="framework" file="build.eant"
			reuse_variables="true" fork="false" />
	</target>

</project>
