<document output="envision" title="Build Properties">
	<meta_data>
		<help>
			<toc>
				<envision_title>General Properties</envision_title>
				<envision_pseudo_name>50</envision_pseudo_name>
			</toc>
			<xml>
				<xmlkeyword>
					<index>K</index>
					<term>Project Configuration, Build Properties</term>
				</xmlkeyword>
				<xmlkeyword>
					<index>F</index>
					<term>ee.vs.project.configuration.config.build</term>
				</xmlkeyword>
			</xml>
		</help>
	</meta_data>
	<paragraph>
		<paragraph>
			The <bold>Build</bold> property page in the <bold>Configuration Properties</bold> folder contains the following properties:
		</paragraph>

		<anchor>code_generation_group</anchor>
		<heading>
			<size>2</size>
			<content>Code Generation Group</content>
		</heading>
		<anchor>root_class</anchor>
		<paragraph>
			<bold>Root Class</bold>
			<line_break/>
			The name of the class that contains the Creation Routine. For library projects specifying a root, this class will be used to determine all reachable classes. For more information on project <link><url>general.xml</url><anchor_name>include_all_classes</anchor_name><label>Include All Classes</label></link> see the <link><url>general.xml</url><label>General Properties</label></link>.
		</paragraph>
		
		<anchor>creation_routine</anchor>
		<paragraph>
			<bold>Creation Routine</bold>
			<line_break/>
			The name of the routine, in the <link><url>build.xml</url><anchor_name>root_class</anchor_name><label>Root Class</label></link>, that is called on application startup. This option is only used for non-library based projects. For more information on project <link><url>general.xml</url><anchor_name>include_all_classes</anchor_name><label>Include All Classes</label></link> see the <link><url>general.xml</url><label>General Properties</label></link>.
		</paragraph>

		<anchor>debug_clauses</anchor>
		<paragraph>
			<bold>Debug Clauses</bold>
			<line_break/>
			A semi-colon (;) delimited list of <link><url>url</url><label>*Debug Clauses</label></link> to conditional compile sections of code with your project.
		</paragraph>

		<anchor>optimize_code</anchor>
		<paragraph>
			<bold>Optimize Code</bold>
			<line_break/>
			Instructs the compiler to discard incremental compilation information and generate a single assembly module. Based on other property settings <link><url>assertion.xml</url><label>Assertion Properties</label></link> may be discarded and code size reduced.
		</paragraph>

		<anchor>generate_cls_compliant_code</anchor>
		<paragraph>
			<bold>Generate CLS Compliant Code</bold>
			<line_break/>
			Ensures the compiler will generate <bold>Common Language Specification</bold> (CLS) compliant code.
			<warning>
				<bold>Warning</bold>: Changing this property *may* require a complete <link><url>../../../compiling_projects/compiling_projects.xml</url><anchor_name>building_projects</anchor_name><label>Rebuild</label></link> and will be enforced when selecting to <link><url>../../../compiling_projects/compiling_projects.xml</url><anchor_name>building_projects</anchor_name><label>Build</label></link> your project.
			</warning>
		</paragraph>

		<anchor>generate_verifiable_code</anchor>
		<paragraph>
			<bold>Generate Verifiable Code</bold>
			<line_break/>
			Ensures the compiler generates verifiable code, verifiable using tools such as <italic>peverify.exe</italic>.
			<warning>
				<bold>Warning</bold>: Changing this property *may* require a complete <link><url>../../../compiling_projects/compiling_projects.xml</url><anchor_name>building_projects</anchor_name><label>Rebuild</label></link> and will be enforced when selecting to <link><url>../../../compiling_projects/compiling_projects.xml</url><anchor_name>building_projects</anchor_name><label>Build</label></link> your project.
			</warning>
		</paragraph>
		
		<anchor>classes_per_module</anchor>
		<paragraph>
			<bold>Classes per Module</bold>
			<line_break/>
			The number of Eiffel classes to place in a single incremental assembly module. The lower the number the fast compilation will be, but incurs a slower startup time. The larger the number the slower compilation will be, but results a faster start up. This property is only available when not optimizing code by setting the <link><url>build.xml</url><anchor_name>optimize_code</anchor_name><label>Optimize Code</label></link> property.
		</paragraph>
				
		<anchor>compile_unamanged_library</anchor>
		<paragraph>
			<bold>Compile Unmanaged Library</bold>
			<line_break/>
			Indicates the compilation should also compile any unmanaged portion of code generated by the Eiffel compiler. If your project does not call out to any unmanaged code, such as the Windows API, there is no need to compile the unmanaged code. See the <link><url>../../../compiling_projects/unmanaged_code.xml</url><label>Unmanaged Code</label></link> section of the documentation for more information.
		</paragraph>	
				
		<anchor>compiler_warnings_group</anchor>
		<heading>
			<size>2</size>
			<content>Compiler Warnings Group</content>
		</heading>
		<anchor>suppress_compiler_warnings</anchor>
		<paragraph>
			<bold>Suppress Compiler Warnings</bold>
			<line_break/>
			Blocks the compiler's ability to generate compile-time warnings. Other build related warnings will not be suppressed.
		</paragraph>			
		
		<anchor>register_for_com_interop_group</anchor>
		<heading>
			<size>2</size>
			<content>Register for COM Interop Group</content>
		</heading>
		<anchor>register_for_com_interop</anchor>
		<paragraph>
			<bold>Register for COM Interop</bold>
			<line_break/>
			Indicates that your managed application will expose a COM object (a COM-callable wrapper) that allows a COM object to interact with your managed application. The <link><url>general.xml</url><anchor_name>output_type</anchor_name><label>Output Type</label></link> property of this application must be Class Library in order for the Register for COM Interop property to be available. For more information, see <link><url>general.xml</url><label>General Properties</label></link>.
		</paragraph>				

		<anchor>also_see</anchor>
		<heading>
			<size>2</size>
			<content>Related Sections</content>
		</heading>
		<seealso>
			<bold>See also</bold>
			<line_break/>
			<link><url>index.xml</url><label>Configuring EiffelEnvision Projects</label></link>
			<line_break/>
			<link><url>precompiled.xml</url><label>Precompiled Properties</label></link>
			<line_break/>
			<link><url>assertion.xml</url><label>Assertion Properties</label></link>
			<line_break/>
			<help_link>
				<keywords>vxconProjectBuilds</keywords>
				<tab_index>0</tab_index>
				Default and Custom Build
			</help_link>
			<line_break/>
			<link><url>../structure/index.xml</url><label>EiffelEnvision Projects</label></link>
		</seealso>
	</paragraph>
</document>
