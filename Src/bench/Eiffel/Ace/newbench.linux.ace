system
	"ec"

root
	eb_kernel: make

default
	assertion (check)
	assertion (require)
	assertion (ensure)
	disabled_debug (yes)
	disabled_debug ("activity")
	disabled_debug ("actual_replication")
	disabled_debug ("anchored_features")
	disabled_debug ("assertion")
	disabled_debug ("assertions")
	disabled_debug ("byte_code")
	disabled_debug ("c_debugger")
	disabled_debug ("cache")
	disabled_debug ("cache_compiler")
	disabled_debug ("cache_research")
	disabled_debug ("cache_server")
	disabled_debug ("cache_stat")
	disabled_debug ("cecil")
	disabled_debug ("check_expanded")
	disabled_debug ("class_of_id")
	disabled_debug ("comments")
	disabled_debug ("count")
	disabled_debug ("dead_code")
	disabled_debug ("dead_code_removal")
	disabled_debug ("debbugger_hook")
	disabled_debug ("debug_recv")
	disabled_debug ("debugger")
	disabled_debug ("debugger_hook")
	disabled_debug ("debugger_interface")
	disabled_debug ("debugger_trace")
	disabled_debug ("display_exception_trace")
	disabled_debug ("dle topo")
	disabled_debug ("document")
	disabled_debug ("documentation")
	disabled_debug ("dollar")
	disabled_debug ("editor")
	disabled_debug ("ev_gtk_c_object_dispose")
	disabled_debug ("ev_gtk_creation")
	disabled_debug ("ev_gtk_destroy")
	disabled_debug ("ev_gtk_dispose")
	disabled_debug ("filters")
	disabled_debug ("flat_short")
	disabled_debug ("flush_file")
	disabled_debug ("formal_generic")
	disabled_debug ("gelex")
	disabled_debug ("genericity")
	disabled_debug ("geyacc")
	disabled_debug ("has_calls")
	disabled_debug ("hector")
	disabled_debug ("license_manager")
	disabled_debug ("local_feat_adaptation")
	disabled_debug ("once")
	disabled_debug ("optimization")
	disabled_debug ("options")
	disabled_debug ("parse")
	disabled_debug ("profile_convert")
	disabled_debug ("remove_class")
	disabled_debug ("replication")
	disabled_debug ("sep_debug")
	disabled_debug ("server")
	disabled_debug ("show_prof_query")
	disabled_debug ("skeleton")
	disabled_debug ("trace_table")
	disabled_debug ("transfer")
	disabled_debug ("type_check")
	disabled_debug ("verbose")
	debug (no)
	line_generation (no)
	profile (no)
	trace (no)
	override_cluster ("override")
	check_vape (yes)
	console_application (no)
	array_optimization (no)
	dead_code_removal (yes)
	exception_trace (yes)
	inlining (yes)
	inlining_size ("0")


cluster
	override:		"$EIFFEL_SRC/Eiffel/override"

	all base:		"$EIFFEL_SRC/library/base"
		exclude
			"table"; "CVS"; 
		end


	events:		"$EIFFEL_SRC/library/event"
		exclude
			"CVS"; 
		end

	all vision:		"$EIFFEL_SRC/library/vision2"
		exclude
			"CVS"; "mswin"; "obsolete"; "gtk2";
		end

	all net:		"$EIFFEL_SRC/library/net"
		exclude
			"CVS"; 
		end

	all time:		"$EIFFEL_SRC/library/time"
		exclude
			"CVS"; "french"; "german"; 
		end

	beurk:		"$EIFFEL_SRC/Eiffel/beurk"

	all editor:		"$EIFFEL_SRC/library/editor"
		exclude
			"CVS"; "eiffel"; "text_formatter.e"; "structured_text.e"; 
		end

	compiler_support:		"$EIFFEL_SRC/Eiffel/support"

	all common:             "$EIFFEL_SRC/Eiffel/common"
         exclude
                 "CVS"; "external"; "compiler_override"; "error"; "types";
         end

	flat_short_b:		"$EIFFEL_SRC/Eiffel/flat_short/bench"

	observer:		"$EIFFEL_SRC/library/patterns/observer"

	all gobo:		"$EIFFEL_SRC/library/gobo/library"
		exclude
			"CVS"; "hact"; "se"; "ve"; "base"; "other";
		end

	all case:		"$EIFFEL_SRC/Eiffel/case"
		exclude
			"CVS"; 
		end

	all lace:		"$EIFFEL_SRC/Eiffel/lace"
		exclude
			"CVS"; 
		end

	all compiler:		"$EIFFEL_SRC/Eiffel/eiffel"
		exclude
			"CVS"; "com_il_generation"; "kernel"; "windows"; 
		end

	all compiler_api:		"$EIFFEL_SRC/Eiffel/API"
		exclude
			"CVS"; 
		end

	encryption:		"$EIFFEL_SRC/library/encryption"
		exclude
			"des_encoder.e"; 
		end

	switch:		"$EIFFEL_SRC/Eiffel/switch"

	interface_switch (switch):		"$/interface/new_graphical"

	license_switch (switch):		"$/license/license"

	communications (switch):		"$/communication"

	all status (communications):		"$/status"
		exclude
			"dotnet"
		end

	ipc (communications):		"$/ipc"

	debuging_class (communications):		"$/debug"

	debuging_formatters (communications):		"$/formatters"

	io_watcher (communications):		"$/spec/gtk"

	all lex:		"$ISE_EIFFEL/library/lex"

	all interface:		"$EIFFEL_SRC/Eiffel/interface"
		exclude
			"CVS"; "graphical"; "win32"; "mswin"; "new_tty"; 
			"tty"; "Not_in_System"; "registry"; "preferences"; "dotnet"
		end

	all preferences:		"$EIFFEL_SRC/library/preferences"
		exclude
			"CVS"; "registry_implementation"; 
		end

	all tty (interface):		"$/tty"
		exclude
			"output_window.e"; "tty_resources.e"; "eb_diagram_html_generator.e"; "eb_gui_preferences.e"
		end

	new_tty (interface):		"$/new_tty"

	all cli_writer:		"$EIFFEL_SRC/Eiffel/library/cli_writer"
		exclude
			"md_strong_name.e"; "md_public_key.e"
		end

	all xml_deserializer:		"$EIFFEL_SRC/Eiffel/library/xml_deserializer"

	dotnet_helpers:			"$EIFFEL_SRC/dotnet/helpers"

	all eac_components:		"$EIFFEL_SRC/dotnet/consumer/components"

	eac_documentation:		"$EIFFEL_SRC/dotnet/eac_browser/src/deserialization/assembly_informations"

	all activation_checker:		"$EIFFEL_SRC/Eiffel/library/activation"
		exclude
			"free"; "command_line"; "CVS"; 
		end

	all keygen:		"$EIFFEL_SRC/library/keygen"
		exclude
			"eiffel_envision_10"; "windows"; "CVS"; "EIFGEN"; 
		end

	all graph:		"$EIFFEL_SRC/library/graph"
		exclude
			"CVS";
		end

external

	include_path:
		"\$(EIFFEL_SRC)/C/bench",
		"\$(EIFFEL_SRC)/C/platform",
		"\$(EIFFEL_SRC)/library/event/Clib",
		"\$(EIFFEL_SRC)/library/vision2/spec/include",
		"\$(EIFFEL_SRC)/library/vision2/implementation/gtk/Clib `$EIFFEL_SRC/library/vision2/implementation/gtk/Clib/vision2-gtk-config --devel --include_path`",
		"\$(EIFFEL_SRC)/C_library/libpng",
		"\$(EIFFEL_SRC)/C_library/zlib"
		

	object:
		"$(EIFFEL_SRC)/C/bench/libcompiler.a",
		"$(EIFFEL_SRC)/C/ipc/ewb/libewb.a",
		"$(EIFFEL_SRC)/C/ipc/shared/libipc.a",
		"$(EIFFEL_SRC)/C/platform/libplatform.a",
		"$(EIFFEL_SRC)/library/event/spec/$(ISE_PLATFORM)/lib/io_watcher.o",
		"$(EIFFEL_SRC)/library/net/spec/$(ISE_PLATFORM)/lib/libnet.a",
		"`$(EIFFEL_SRC)/library/vision2/implementation/gtk/Clib/vision2-gtk-config --devel --object`"

end
