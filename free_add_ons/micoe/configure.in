#------------------------------------------------------------------------
#--                                                                    --
#--  MICO/E --- a free CORBA implementation                            --
#--  Copyright (C) 1999 by Robert Switzer                              --
#--                                                                    --
#--  This library is free software; you can redistribute it and/or     --
#--  modify it under the terms of the GNU Library General Public       --
#--  License as published by the Free Software Foundation; either      --
#--  version 2 of the License, or (at your option) any later version.  --
#--                                                                    --
#--  This library is distributed in the hope that it will be useful,   --
#--  but WITHOUT ANY WARRANTY; without even the implied warranty of    --
#--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU --
#--  Library General Public License for more details.                  --
#--                                                                    --
#--  You should have received a copy of the GNU Library General Public --
#--  License along with this library; if not, write to the Free        --
#--  Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.--
#--                                                                    --
#--  Send comments and/or bug reports to:                              --
#--                 micoe@math.uni-goettingen.de                       --
#--                                                                    --
#------------------------------------------------------------------------

# Process this file with autoconf to produce a configure script.
AC_INIT(orb/c/transport.h)

#
# arguments
#

AC_SUBST(PRECOMPDIR)
AC_ARG_WITH(precomp,
 [  --with-precomp=DIR       use this dir for precompiled libs],
 PRECOMPDIR=$withval, PRECOMPDIR="${EIFFEL4}/precomp/spec/${PLATFORM}")

AC_SUBST(EIFLIBDIR)
AC_ARG_WITH(eiflib,
 [  --with-eiflib=DIR       use this dir for Eiffel libs],
 EIFLIBDIR=$withval, EIFLIBDIR="${EIFFEL4}/local/library")

AC_SUBST(MAKE_IDL2EIF)
AC_ARG_ENABLE(idl2eif,
 [  --disable-idl2eif,         do not compile idl2eif],
 MAKE_IDL2EIF=$enableval, MAKE_IDL2EIF=yes)

AC_SUBST(MAKE_IDL2EIF_FINALIZE)
AC_ARG_ENABLE(idl2eif_finalize,
 [  --disable-idl2eif-finalize,         do not finalize idl2eif],
 MAKE_IDL2EIF_FINALIZE=$enableval, MAKE_IDL2EIF_FINALIZE=yes)

AC_SUBST(MAKE_ADT)
AC_ARG_ENABLE(adt,
 [  --disable-adt,         do not install ADT-lib],
 MAKE_ADT=$enableval, MAKE_ADT=$EIFLIBDIR)

AC_SUBST(MAKE_ADT_PRECOMP)
AC_ARG_ENABLE(adt_precomp,
 [  --disable-adt-precomp,         do not precomp ADT-lib],
 MAKE_ADT_PRECOMP=$enableval, MAKE_ADT_PRECOMP=no)

AC_SUBST(MAKE_ORB)
AC_ARG_ENABLE(orb,
 [  --disable-orb,         do not install Orb-lib],
 MAKE_ORB=$enableval, MAKE_ORB=$EIFLIBDIR)

AC_SUBST(MAKE_ORB_PRECOMP)
AC_ARG_ENABLE(orb_precomp,
 [  --disable-orb-precomp,         do not precomp ORB-lib],
 MAKE_ORB_PRECOMP=$enableval, MAKE_ORB_PRECOMP=$PRECOMPDIR)

#AC_ARG_ENABLE(coss,
# [  --disable-coss,         do not use mico/E COSS],
# use_coss=$enableval, use_coss=yes)

#AC_SUBST(MAKE_NAMING)
#AC_ARG_ENABLE(naming,
# [  --disable-naming,       do not use mico/E Naming Service],
# MAKE_NAMING=$enableval, MAKE_NAMING=$use_coss)

#AC_SUBST(MAKE_NAMING_FINALIZE)
#AC_ARG_ENABLE(naming_finalize,
# [  --disable-naming-finalize,   do not finalze mico/E Naming Service daemon],
# MAKE_NAMING_FINALIZE=$enableval, MAKE_NAMING_FINALIZE=$use_coss)

#AC_SUBST(MAKE_TRADER_FINALIZE)
#AC_ARG_ENABLE(trader_finalize,
# [  --disable-trader-finalize, do not finalze mico/E Trading Service daemon],
# MAKE_TRADER_FINALIZE=$enableval, MAKE_TRADER_FINALIZE=$use_coss)

# c switches

AC_ARG_ENABLE(optimize,
 [  --disable-optimize      do not use -O2 to compile],
 use_opt=$enableval, use_opt=yes)

AC_ARG_ENABLE(debug,
 [  --enable-debug          use -g to compile],
 use_debug=$enableval, use_debug=no)

#
# misc
#
AC_CONFIG_AUX_DIR($srcdir/admin)
AC_CANONICAL_SYSTEM

AC_SUBST(ABSSRCDIR)
case $srcdir in
/*)
  ABSSRCDIR=$srcdir
  ;;
*)
  ABSSRCDIR=`pwd`/$srcdir
  ;;
esac

#
# Checks for compilers.
#

AC_PROG_CC

AC_CHECK_PROG(ES4,es4,es4,no)
if test $ES4 = no; then
    AC_MSG_WARN(You are using an unsupported Eiffel compiler.)
    AC_MSG_WARN(You will probably run into trouble ...)
fi

#
# System dependencies.
#

CONF_OPT_FLAGS=-O2
CONF_DEBUG_FLAGS=-g

#
# Checks for programs.
#

CFLAGS=""

if test X"$use_opt" != Xno; then
  CFLAGS="$CONF_OPT_FLAGS"
fi
if test X"$use_debug" != Xno; then
  CFLAGS="$CONF_DEBUG_FLAGS $CFLAGS"
fi

AC_PROG_INSTALL
AR=ar
AC_SUBST(AR)

ARFLAGS=
AC_SUBST(ARFLAGS)

AC_MSG_CHECKING(for ar)
AC_MSG_RESULT($AR $ARFLAGS)

AC_PROG_RANLIB
AC_PROG_MAKE_SET

#
# Checks for libraries.
#

#
# Checks for header files.
#
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h sys/time.h unistd.h)

#
# Checks for typedefs, structures, and compiler characteristics.
#
AC_C_CONST
AC_TYPE_UID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

#
# Checks for library functions.
#
AC_FUNC_MEMCMP
AC_CHECK_FUNCS(getcwd gethostname gettimeofday mkdir putenv rmdir select socket strdup strerror)

#
# size of datatypes
#

AC_CHECK_SIZEOF(unsigned char, 1)
AC_CHECK_SIZEOF(int, 4)
AC_CHECK_SIZEOF(unsigned int, 4)
AC_CHECK_SIZEOF(long, 4)
AC_CHECK_SIZEOF(unsigned long, 4)
AC_CHECK_SIZEOF(long long, 8)
AC_CHECK_SIZEOF(unsigned long long, 8)
AC_CHECK_SIZEOF(short, 2)
AC_CHECK_SIZEOF(unsigned short, 2)
AC_CHECK_SIZEOF(float, 4)
AC_CHECK_SIZEOF(double, 8)
AC_CHECK_SIZEOF(long double, 12)

#
# byteorder
#

AC_C_BIGENDIAN

case $ac_cv_c_bigendian in
yes)
  AC_DEFINE(HAVE_BYTEORDER_BE)
  ;;
no)
  AC_DEFINE(HAVE_BYTEORDER_LE)
  ;;
unknown|*)
  AC_DEFINE(HAVE_BYTEORDER_BE)
  ;;
esac

#
# floating point characteristics
#

AC_MSG_CHECKING([for floating point type])
AC_TRY_RUN([
int main ()
{
  float f;

  f = 0;
  if (*(int *)&f != 0)
    return 1;

  f = 1000.5;
  if (*(unsigned int *)&f != 0x447a2000)
    return 1;

  f = -1000.5;
  if (*(unsigned int *)&f != 0xc47a2000)
    return 1;

  return 0;
}], IEEEFP=ok, IEEEFP=broken, IEEEFP=cross)


case $IEEEFP in
ok)
    AC_MSG_RESULT(IEEE)
    AC_DEFINE(HAVE_IEEE_FP)
    ;;
cross)
    AC_MSG_RESULT([cross-compiling, assuming non IEEE])
    AC_DEFINE(HAVE_IEEE_FP)
    ;;
*|broken)
    AC_MSG_RESULT([non IEEE])
    ;;
esac


#
#
#
AC_SUBST(SHELL)
case $target in
	*osf*)
		SHELL=/usr/local/bin/bash
		HELP1=`echo $ABSSRCDIR|sed 's/tmp_mnt//g'`
		ABSSRCDIR=$HELP1
		;;
	*solaris*|*sunos*)
		SHELL=/usr/local2/bin/bash
		;;
	*)
		SHELL=/bin/sh
		;;
esac

#
# create output
#

AC_CONFIG_HEADER(orb/c/config.h)
AC_OUTPUT(MakeVars adt/Ace.ace 
	admin/makecsregistry/Ace.ace
	demo/MakeVars
	admin/build_ace)

chmod +x $srcdir/admin/build_ace

