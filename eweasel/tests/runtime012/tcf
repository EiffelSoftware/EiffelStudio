test_name	overflow-special-resizing
test_description If we resize a SPECIAL object to have a size greater than 2^31 then the runtime does an overflow and you end up with an array of a smaller size.

define	VALUE "true"
copy_sub 	Ace $TEST Ace
copy_raw 	test.e $CLUSTER test.e
copy_raw 	exp.e $CLUSTER exp.e

compile_melted
compile_result ok

execute_work 	NONE 	exec_output1
execute_result 	ok
compare		exec_output1 output

compile_frozen
compile_result ok

c_compile_work
c_compile_result ok

execute_work 	NONE 	exec_output2
execute_result 	ok
compare		exec_output2 output

compile_final
compile_result ok

c_compile_final
c_compile_result ok

execute_work 	NONE 	exec_output3
execute_result 	ok
compare		exec_output3 output

copy_sub	Ace $TEST Ace

define	VALUE "false"
compile_final
compile_result ok

c_compile_final
c_compile_result ok

execute_work 	NONE 	exec_output4
execute_result 	ok
compare		exec_output4 output

test_end
