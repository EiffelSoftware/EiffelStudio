system
	"ISE.EiffelCodeDomProvider"

root
	"ecdp_provider": "default_create"

default
	assertion (no)
	msil_generation (yes)
	msil_clr_version ("v1.1.4322")
	il_verifiable (yes)
	cls_compliant (yes)
	console_application (no)
	msil_generation_type ("dll")
	precompiled ("$EIFFEL_SRC\dotnet\codedom_provider\build\ISE.CacheBrowser\obj\Release")
	dotnet_naming_convention (yes)
	use_cluster_name_as_namespace (yes)
	use_all_cluster_name_as_namespace (no)
	msil_key_file_name ("$EIFFEL_SRC\dotnet\helpers\isekey.snk")
	line_generation (yes)
	title ("Eiffel CodeDom Provider")
	description ("Eiffel CodeDom Provider")
	company ("Eiffel Software")
	product ("Eiffel CodeDom Provider")
	copyright ("(C) Eiffel Software 2001-2004 All Rights Reserved")
	trademark ("Eiffel Software")
	version ("0.0.0.0")


--+--------------------------------------------------------------------
--| Eiffel CodeDOM Provider
--| Copyright (C) 2001-2004 Eiffel Software
--| Eiffel Software Confidential
--| All rights reserved. Duplication and distribution prohibited.
--|
--| Eiffel Software
--| 356 Storke Road, Goleta, CA 93117 USA
--| http://www.eiffel.com
--+--------------------------------------------------------------------	

cluster
	library base:		"$ISE_EIFFEL\library\base"
		exclude
			"table_eiffel3"; "desc"; "classic"; 
		end

	library base_net:		"$ISE_EIFFEL\library.net\base"

	library wel:		"$ISE_EIFFEL\library\wel"
		exclude
			"classic"; "spec"; 
		end

	library wel_net:		"$ISE_EIFFEL\library.net\wel"

	library vision2:		"$ISE_EIFFEL\library\vision2"
		exclude
			"Clib"; "gtk"; "gtk2"; "spec"; "assign_attempt.e"; "ev_pixmap_imp.e"; 
		end

	library vision2_net:		"$ISE_EIFFEL\library.net\vision2"

	library vision2_extensions:		"$ISE_EIFFEL\library\vision2_extension"

	all "interface":		"$EIFFEL_SRC\dotnet\codedom_provider\interface"
		exclude
			"vs"; 
		end

	"compiler":		"$EIFFEL_SRC\dotnet\codedom_provider\compiler"

	all "consumer":		"$EIFFEL_SRC\dotnet\codedom_provider\consumer"
		exclude
			"vs"; "interface"; 
		end

	all "consumer_interface":		"$EIFFEL_SRC\dotnet\codedom_provider\consumer\interface"
		exclude
			"vs"; 
		end

	all "producer":		"$EIFFEL_SRC\dotnet\codedom_provider\producer"
		exclude
			"interface"; 
		end

	"producer_interface":		"$EIFFEL_SRC\dotnet\codedom_provider\producer\interface"

	all "support":		"$EIFFEL_SRC\dotnet\codedom_provider\support"

	all "gobo":		"${GOBO}\library"
		exclude
			"hact"; "ve"; "se"; "other"; "expat"; 
		end

	all "helpers":		"$EIFFEL_SRC\dotnet\helpers"

	all "emitter":		"$EIFFEL_SRC\dotnet\consumer"

	all "ast":		"$EIFFEL_SRC\eiffel\common\parser\AST"
		exclude
			"il_extension_as.e"; 
		end

	"yacc" (ast):		"$EIFFEL_SRC\Eiffel\yacc"

	"structures" (ast):		"$EIFFEL_SRC\Eiffel\eiffel\structures"

	"const" (ast):		"$EIFFEL_SRC\Eiffel\eiffel\const"

	"eiffel_helper" (ast):		"$EIFFEL_SRC\library\helpers\eiffel"

	"il_environment":		"$EIFFEL_SRC\Eiffel\eiffel\il_generation\windows"

assembly
external

	include_path:
		"%"$(ISE_EIFFEL)\library\wel\spec\windows\include%"",
		"%"$(ISE_EIFFEL)\library\vision2\spec\include%"",
		"%"$(ISE_EIFFEL)\C_library\zlib%""

	object:
		"%"$(ISE_EIFFEL)\library\wel\spec\$(ISE_C_COMPILER)\lib\ilwel.lib%"",
		"%"$(ISE_EIFFEL)\library\vision2\spec\$(ISE_C_COMPILER)\lib\ilvision2.lib%"",
		"%"$(ISE_EIFFEL)\library\vision2\spec\$(ISE_C_COMPILER)\lib\zlib.lib%"",
		"%"$(ISE_EIFFEL)\library\vision2\spec\$(ISE_C_COMPILER)\lib\libpng.lib%""

end
