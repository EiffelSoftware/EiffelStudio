<document title="Externals Page" output="envision">
	<meta_data>
		<help>
			<toc>
				<envision_pseudo_name>70</envision_pseudo_name>
			</toc>
		</help>
	</meta_data>
	<paragraph>
		<heading>
			<size>1</size> Externals Property Page
		</heading>
		<paragraph>The Externals property page is the place to define any project
			<link>
				<label> 
					<italic> include paths</italic>
				</label>
				<url>#IncludePaths</url>
			</link> for C/C++ header files and any external
			<link>
				<url>#ObjectFiles</url>
				<label>
					<italic>  object files</italic>
				</label>
			</link> (*.obj or *.lib) required for linking those header files.
		</paragraph>
		<paragraph>Again this property page is spilt vertically into two sections. The top sections is to define any number of include paths, and the lower section is used to reference any objectfiles.</paragraph>
		<paragraph>
			<image>
				<alt_text>Assembly Info Property Page</alt_text>
				<url>ExternalsPPG.png</url>
			</image>
		</paragraph>
		<heading>
			<size>2</size>Include Paths
		</heading>
		<paragraph>
			<line_break></line_break> The Include Paths section allows any number of include paths to be defined to allow the compiler to located the header definition files for any referenced objectfiles.
		</paragraph>
		<heading>
			<size>3</size> Add An Include Path
		</heading>
		<paragraph>There are two options available to add and include path. Firstly a path my be physically entered via the supplied edit box located underneath the list of include paths. Alternatively clickingthe ellipse (...) button will open a folder dialog where a specific folder may be located. Once an include path has been chosen the corresponding 'Add' button become enabled. Click it will add the include path to the endof the list.</paragraph>
		<paragraph>Removing An Include Path</paragraph>
		<paragraph> To remove an include path, select the item in the include paths list to be removed and click the corresponding 'Remove' button. The remove button will only become enabled once andinclude path has been selected. 
			<line_break></line_break>
		</paragraph>
		<heading>
			<size>2</size> Object Files
		</heading>
		<line_break></line_break> Object files are pre-compiled binary files that can be linked with the header files used by Eiffel external classes making use of C or C++. Failure to supply and object file corresponding toa used header file will result in a linking error when compiling any C/C++ code. 
		<heading>
			<size>3</size>Adding An Object File
		</heading>
		<paragraph>Adding an object file works in the same way in adding an '
			<link>
				<url>#AddIncludePath</url>
				<label> 
					<italic> Include Path</italic>
				</label>
			</link>'. There are two available ways to add an object file. Through physically entering the object file path into the edit box located underneath the list of object files, or by clicking the ellipse (...)button next to it. Clicking the ellipse will open a file browse dialog where an object file can be chosen. Once an object file has been entered or located through the browse dialog, click the corresponding 'Add' button andthe object file will be append to the bottom of the object files list.
		</paragraph>
		<heading>
			<size>3</size> Removing An Object File
		</heading>
		<paragraph>To remove an object file, select the item in the object files list to be removed and click the corresponding 'Remove' button. The remove button will only become enabled once and objectfile has been selected.</paragraph>
		<seealso>
			<bold>See Also</bold>
			<line_break></line_break>
			<link>
				<url>./ProjectConfiguration.xml</url>
				<label>Property Page Overview</label>
			</link>
			<line_break></line_break>
			<link>
				<url>AssemblyReferencesPage.xml</url>
				<label>Assembly References Property Page</label>
			</link>
		</seealso>
	</paragraph>
</document>
