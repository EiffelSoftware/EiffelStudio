<?xml version="1.0"?>

<project name="tests">

	<description>
		description: "Gobo Eiffel package tests"
		copyright: "Copyright (c) 2016, Eric Bezault and others"
		license: "MIT License"
		date: "$Date$"
		revision: "$Revision$"
	</description>

	<inherit>
		<parent location="test_all.eant">
			<redefine target="test"/>
			<redefine target="other_help"/>
		</parent>
	</inherit>
	
	<target name="test" depend="init">
		<description>
			Run all tests.
			Use Eiffel compiler set in ${GOBO_EIFFEL}
			or 'ge' if this variable is not defined.
			Compile in debug mode if ${debug} is defined.
			Remove intermediary generated files after running tests.
		</description>

		<set name="debug_suffix" value=""/>
		<set name="debug_suffix" value="_debug" if="${debug}"/>
		<set name="eiffel_suffix" value=""/>
		<set name="eiffel_suffix" value="_${eiffel}" if="${eiffel}"/>
		<geant target="test_unit${debug_suffix}${eiffel_suffix}"/>
		<geant target="test_example${debug_suffix}${eiffel_suffix}"/>
		<geant target="test_tool${debug_suffix}${eiffel_suffix}"/>
	</target>

	<target name="test_unit" depend="init">
		<description>
			Run all unit tests.
			Use Eiffel compiler set in ${GOBO_EIFFEL}
			or 'ge' if this variable is not defined.
			Compile in debug mode if ${debug} is defined.
			Remove intermediary generated files after running tests.
		</description>

		<geant target="test_in_subfolder" arguments="unit"/>
	</target>

	<target name="test_unit_ge" depend="init">
		<description>
			Run all unit tests with Gobo Eiffel.
			Compile in debug mode if ${debug} is defined.
			Remove intermediary generated files after running tests.
		</description>

		<set name="eiffel" value="ge"/>
		<geant target="test_unit"/>	
	</target>

	<target name="test_unit_ise" depend="init">
		<description>
			Run all unit tests with ISE Eiffel.
			Compile in debug mode if ${debug} is defined.
			Remove intermediary generated files after running tests.
		</description>

		<set name="eiffel" value="ise"/>
		<geant target="test_unit"/>	
	</target>

	<target name="test_unit_debug" depend="init">
		<description>
			Run all unit tests in debug mode.
			Use Eiffel compiler set in ${GOBO_EIFFEL}
			or 'ge' if this variable is not defined.
			Remove intermediary generated files after running tests.
		</description>

		<set name="debug" value="true"/>
		<geant target="test_unit"/>
	</target>

	<target name="test_unit_debug_ge" depend="init">
		<description>
			Run all unit tests with Gobo Eiffel in debug mode.
			Remove intermediary generated files after running tests.
		</description>

		<set name="eiffel" value="ge"/>
		<set name="debug" value="true"/>
		<geant target="test_unit"/>
	</target>

	<target name="test_unit_debug_ise" depend="init">
		<description>
			Run all unit tests with ISE Eiffel in debug mode.
			Remove intermediary generated files after running tests.
		</description>

		<set name="eiffel" value="ise"/>
		<set name="debug" value="true"/>
		<geant target="test_unit"/>
	</target>

	<target name="test_example" depend="init">
		<description>
			Run all example tests.
			Use Eiffel compiler set in ${GOBO_EIFFEL}
			or 'ge' if this variable is not defined.
			Compile in debug mode if ${debug} is defined.
			Remove intermediary generated files after running tests.
		</description>

		<geant target="test_in_subfolder" arguments="example"/>
	</target>

	<target name="test_example_ge" depend="init">
		<description>
			Run all example tests with Gobo Eiffel.
			Compile in debug mode if ${debug} is defined.
			Remove intermediary generated files after running tests.
		</description>

		<set name="eiffel" value="ge"/>
		<geant target="test_example"/>
	</target>

	<target name="test_example_ise" depend="init">
		<description>
			Run all example tests with ISE Eiffel.
			Compile in debug mode if ${debug} is defined.
			Remove intermediary generated files after running tests.
		</description>

		<set name="eiffel" value="ise"/>
		<geant target="test_example"/>
	</target>

	<target name="test_example_debug" depend="init">
		<description>
			Run all example tests in debug mode.
			Use Eiffel compiler set in ${GOBO_EIFFEL}
			or 'ge' if this variable is not defined.
			Remove intermediary generated files after running tests.
		</description>

		<set name="debug" value="true"/>
		<geant target="test_example"/>
	</target>

	<target name="test_example_debug_ge" depend="init">
		<description>
			Run all example tests with Gobo Eiffel in debug mode.
			Remove intermediary generated files after running tests.
		</description>

		<set name="eiffel" value="ge"/>
		<set name="debug" value="true"/>
		<geant target="test_example"/>
	</target>

	<target name="test_example_debug_ise" depend="init">
		<description>
			Run all example tests with ISE Eiffel in debug mode.
			Remove intermediary generated files after running tests.
		</description>

		<set name="eiffel" value="ise"/>
		<set name="debug" value="true"/>
		<geant target="test_example"/>
	</target>

	<target name="test_tool" depend="init">
		<description>
			Run all tool tests.
			Use Eiffel compiler set in ${GOBO_EIFFEL}
			or 'ge' if this variable is not defined.
			Compile in debug mode if ${debug} is defined.
			Remove intermediary generated files after running tests.
		</description>

		<geant target="test_in_subfolder" arguments="tool"/>
	</target>

	<target name="test_tool_ge" depend="init">
		<description>
			Run all tool tests with Gobo Eiffel.
			Compile in debug mode if ${debug} is defined.
			Remove intermediary generated files after running tests.
		</description>

		<set name="eiffel" value="ge"/>
		<geant target="test_tool"/>
	</target>

	<target name="test_tool_ise" depend="init">
		<description>
			Run all tool tests with ISE Eiffel.
			Compile in debug mode if ${debug} is defined.
			Remove intermediary generated files after running tests.
		</description>

		<set name="eiffel" value="ise"/>
		<geant target="test_tool"/>
	</target>

	<target name="test_tool_debug" depend="init">
		<description>
			Run all tool tests in debug mode.
			Use Eiffel compiler set in ${GOBO_EIFFEL}
			or 'ge' if this variable is not defined.
			Remove intermediary generated files after running tests.
		</description>

		<set name="debug" value="true"/>
		<geant target="test_tool"/>
	</target>

	<target name="test_tool_debug_ge" depend="init">
		<description>
			Run all tool tests with Gobo Eiffel in debug mode.
			Remove intermediary generated files after running tests.
		</description>

		<set name="eiffel" value="ge"/>
		<set name="debug" value="true"/>
		<geant target="test_tool"/>
	</target>

	<target name="test_tool_debug_ise" depend="init">
		<description>
			Run all tool tests with ISE Eiffel in debug mode.
			Remove intermediary generated files after running tests.
		</description>

		<set name="eiffel" value="ise"/>
		<set name="debug" value="true"/>
		<geant target="test_tool"/>
	</target>
	
	<target name="test_all" depend="init">
		<description>
			Run all tests.
			Use Eiffel compiler set in ${GOBO_EIFFEL}
			or 'ge' if this variable is not defined.
			Compile in debug mode if ${debug} is defined.
			Remove intermediary generated files after running tests.
		</description>

		<set name="debug_suffix" value=""/>
		<set name="debug_suffix" value="_debug" if="${debug}"/>
		<set name="eiffel_suffix" value=""/>
		<set name="eiffel_suffix" value="_${eiffel}" if="${eiffel}"/>
		<geant target="do_all_2" arguments="test${debug_suffix}${eiffel_suffix},clean,*" dir="${current.absdir}"/>
	</target>

	<target name="test_all_ge" depend="init">
		<description>
			Run all tests with Gobo Eiffel.
			Compile in debug mode if ${debug} is defined.
			Remove intermediary generated files after running tests.
		</description>

		<set name="eiffel" value="ge"/>
		<geant target="test_all"/>	
	</target>

	<target name="test_all_ise" depend="init">
		<description>
			Run all tests with ISE Eiffel.
			Compile in debug mode if ${debug} is defined.
			Remove intermediary generated files after running tests.
		</description>

		<set name="eiffel" value="ise"/>
		<geant target="test_all"/>
	</target>

	<target name="test_all_debug" depend="init">
		<description>
			Run all tests in debug mode.
			Use Eiffel compiler set in ${GOBO_EIFFEL}
			or 'ge' if this variable is not defined.
		</description>

		<set name="debug" value="true"/>
		<geant target="test_all"/>
	</target>

	<target name="test_all_debug_ge" depend="init">
		<description>
			Run all tests with Gobo Eiffel in debug mode.
		</description>

		<set name="eiffel" value="ge"/>
		<set name="debug" value="true"/>
		<geant target="test_all"/>
	</target>

	<target name="test_all_debug_ise" depend="init">
		<description>
			Run all tests with ISE Eiffel in debug mode.
		</description>

		<set name="eiffel" value="ise"/>
		<set name="debug" value="true"/>
		<geant target="test_all"/>
	</target>

<!-- Implementation -->

	<target name="other_help" export="NONE">
		<precursor/>
		<echo message="   geant test_unit"/>
		<echo message="   geant test_unit_ge"/>
		<echo message="   geant test_unit_ise"/>
		<echo message="   geant test_unit_debug"/>
		<echo message="   geant test_unit_debug_ge"/>
		<echo message="   geant test_unit_debug_ise"/>
		<echo message="   geant test_example"/>
		<echo message="   geant test_example_ge"/>
		<echo message="   geant test_example_ise"/>
		<echo message="   geant test_example_debug"/>
		<echo message="   geant test_example_debug_ge"/>
		<echo message="   geant test_example_debug_ise"/>
		<echo message="   geant test_all"/>
		<echo message="   geant test_all_ge"/>
		<echo message="   geant test_all_ise"/>
		<echo message="   geant test_all_debug"/>
		<echo message="   geant test_all_debug_ge"/>
		<echo message="   geant test_all_debug_ise"/>
	</target>

	<target name="test_in_subfolder" depend="init" export="NONE">
		<description>
			Run all tests in `subfolder' (first argument).
			Use Eiffel compiler set in ${GOBO_EIFFEL}
			or 'ge' if this variable is not defined.
			Compile in debug mode if ${debug} is defined.
			Remove intermediary generated files after running tests.
		</description>
		<argument name="subfolder"/>

		<set name="debug_suffix" value=""/>
		<set name="debug_suffix" value="_debug" if="${debug}"/>
		<set name="eiffel_suffix" value=""/>
		<set name="eiffel_suffix" value="_${eiffel}" if="${eiffel}"/>
		<geant target="do_in_subfolder_2" arguments="test${debug_suffix}${eiffel_suffix},clean,${subfolder}" dir="${current.absdir}"/>
	</target>
	
</project>
