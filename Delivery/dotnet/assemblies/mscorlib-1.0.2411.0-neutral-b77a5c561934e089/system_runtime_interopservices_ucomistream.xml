<!DOCTYPE type SYSTEM "../type.dtd">
<class>
	<header>
		<modified>False</modified>
		<frozen>False</frozen>
		<expanded>False</expanded>
		<deferred>True</deferred>
		<generic>False</generic>
		<class_eiffel_name>SYSTEM_RUNTIME_INTEROPSERVICES_UCOMISTREAM</class_eiffel_name>
		<alias>
			<simple_name>UCOMIStream</simple_name>
			<namespace>System.Runtime.InteropServices</namespace>
			<assembly_name>mscorlib</assembly_name>
			<assembly_version>1.0.2411.0</assembly_version>
			<assembly_culture>neutral</assembly_culture>
			<assembly_public_key>b77a5c561934e089</assembly_public_key>
		</alias>
		<inherit>
			<parent>
				<parent_name>ANY</parent_name>
				<undefine>finalize, get_hash_code, equals, to_string</undefine>
			</parent>
		</inherit>
		<create_none>False</create_none>
	</header>
	<body>
		<basic_operations>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>read</feature_eiffel_name>
				<feature_external_name>Read</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>pv</argument_eiffel_name>
						<argument_external_name>pv</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>cb</argument_eiffel_name>
						<argument_external_name>cb</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pcb_read</argument_eiffel_name>
						<argument_external_name>pcbRead</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32&amp;</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_size</feature_eiffel_name>
				<feature_external_name>SetSize</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>lib_new_size</argument_eiffel_name>
						<argument_external_name>libNewSize</argument_external_name>
						<argument_type>INTEGER_64</argument_type>
						<argument_type_full_name>System.Int64</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>commit</feature_eiffel_name>
				<feature_external_name>Commit</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>grf_commit_flags</argument_eiffel_name>
						<argument_external_name>grfCommitFlags</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>lock_region</feature_eiffel_name>
				<feature_external_name>LockRegion</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>lib_offset</argument_eiffel_name>
						<argument_external_name>libOffset</argument_external_name>
						<argument_type>INTEGER_64</argument_type>
						<argument_type_full_name>System.Int64</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>cb</argument_eiffel_name>
						<argument_external_name>cb</argument_external_name>
						<argument_type>INTEGER_64</argument_type>
						<argument_type_full_name>System.Int64</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>dw_lock_type</argument_eiffel_name>
						<argument_external_name>dwLockType</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>copy_to</feature_eiffel_name>
				<feature_external_name>CopyTo</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>pstm</argument_eiffel_name>
						<argument_external_name>pstm</argument_external_name>
						<argument_type>SYSTEM_RUNTIME_INTEROPSERVICES_UCOMISTREAM</argument_type>
						<argument_type_full_name>System.Runtime.InteropServices.UCOMIStream</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>cb</argument_eiffel_name>
						<argument_external_name>cb</argument_external_name>
						<argument_type>INTEGER_64</argument_type>
						<argument_type_full_name>System.Int64</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pcb_read</argument_eiffel_name>
						<argument_external_name>pcbRead</argument_external_name>
						<argument_type>INTEGER_64</argument_type>
						<argument_type_full_name>System.Int64&amp;</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pcb_written</argument_eiffel_name>
						<argument_external_name>pcbWritten</argument_external_name>
						<argument_type>INTEGER_64</argument_type>
						<argument_type_full_name>System.Int64&amp;</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>clone</feature_eiffel_name>
				<feature_external_name>Clone</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>ppstm</argument_eiffel_name>
						<argument_external_name>ppstm</argument_external_name>
						<argument_type>SYSTEM_RUNTIME_INTEROPSERVICES_UCOMISTREAM</argument_type>
						<argument_type_full_name>System.Runtime.InteropServices.UCOMIStream&amp;</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>revert</feature_eiffel_name>
				<feature_external_name>Revert</feature_external_name>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>unlock_region</feature_eiffel_name>
				<feature_external_name>UnlockRegion</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>lib_offset</argument_eiffel_name>
						<argument_external_name>libOffset</argument_external_name>
						<argument_type>INTEGER_64</argument_type>
						<argument_type_full_name>System.Int64</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>cb</argument_eiffel_name>
						<argument_external_name>cb</argument_external_name>
						<argument_type>INTEGER_64</argument_type>
						<argument_type_full_name>System.Int64</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>dw_lock_type</argument_eiffel_name>
						<argument_external_name>dwLockType</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>stat</feature_eiffel_name>
				<feature_external_name>Stat</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>pstatstg</argument_eiffel_name>
						<argument_external_name>pstatstg</argument_external_name>
						<argument_type>SYSTEM_RUNTIME_INTEROPSERVICES_STATSTG</argument_type>
						<argument_type_full_name>System.Runtime.InteropServices.STATSTG&amp;</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>grf_stat_flag</argument_eiffel_name>
						<argument_external_name>grfStatFlag</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>write</feature_eiffel_name>
				<feature_external_name>Write</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>pv</argument_eiffel_name>
						<argument_external_name>pv</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>cb</argument_eiffel_name>
						<argument_external_name>cb</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pcb_written</argument_eiffel_name>
						<argument_external_name>pcbWritten</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32&amp;</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>seek</feature_eiffel_name>
				<feature_external_name>Seek</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>dlib_move</argument_eiffel_name>
						<argument_external_name>dlibMove</argument_external_name>
						<argument_type>INTEGER_64</argument_type>
						<argument_type_full_name>System.Int64</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>dw_origin</argument_eiffel_name>
						<argument_external_name>dwOrigin</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>plib_new_position</argument_eiffel_name>
						<argument_external_name>plibNewPosition</argument_external_name>
						<argument_type>INTEGER_64</argument_type>
						<argument_type_full_name>System.Int64&amp;</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
		</basic_operations>
		<bit_or_infix>False</bit_or_infix>
	</body>
</class>