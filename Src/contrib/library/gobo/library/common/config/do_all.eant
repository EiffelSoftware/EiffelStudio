<?xml version="1.0"?>

<project name="do_all">

	<description>
		description: "Execute geant builds in all subfolders"
		copyright: "Copyright (c) 2016, Eric Bezault and others"
		license: "MIT License"
		date: "$Date$"
		revision: "$Revision$"
	</description>

	<target name="help">
		<echo message="usage:"/>
		<echo message="   geant install"/>
		<geant target="other_help"/>
		<echo message="   geant clean"/>
		<echo message="   geant clobber"/>
	</target>

	<target name="install" depend="init">
		<description>
			Install all subfolders.
		</description>

		<geant target="do_all" arguments="install,*" dir="${current.absdir}"/>
	</target>
	
	<target name="clean" depend="init">
		<description>
			Remove intermediary generated files.
		</description>

		<geant target="do_all" arguments="clean,*" dir="${current.absdir}"/>
	</target>

	<target name="clobber" depend="init">
		<description>
			Remove all generated files.
		</description>

		<geant target="do_all" arguments="clobber,*" dir="${current.absdir}"/>
	</target>

<!-- Implementation -->

	<target name="init" export="NONE">
		<!-- do nothing -->
	</target>

	<target name="other_help" export="NONE">
		<!-- do nothing -->
	</target>
	
	<target name="do_all" depend="init" export="NONE">
		<description>
			Call 'geant' with the same target ${target} (first argument)
			in all directories ${folders} (second argument).
		</description>
		<argument name="target"/>
		<argument name="folders"/>

		<geant target="do_one" arguments="${target}">
			<fileset include="@(${folders}/build.eant)">
				<map type="glob" from="*/build.eant" to="*"/>
			</fileset>
		</geant>
	</target>

	<target name="do_all_exclude" depend="init" export="NONE">
		<description>
			Call 'geant' with the same target ${target} (first argument)
			in all directories ${folders} (second argument) except
			those excluded in ${excluded_folders) (third argument).
		</description>
		<argument name="target"/>
		<argument name="folders"/>
		<argument name="excluded_folders"/>

		<geant target="do_one" arguments="${target}">
			<fileset include="@(${folders}/build.eant)" exclude="@(${excluded_folders}/build.eant)">
				<map type="glob" from="*/build.eant" to="*"/>
			</fileset>
		</geant>
	</target>
	
	<target name="do_one" export="NONE">
		<description>
			Call 'geant' with target ${target} (first argument)
			in directory ${fs.mapped_filename}.
		</description>	
		<argument name="target"/>
		
		<geant file="build.eant" target="${target}" dir="${fs.mapped_filename}"/>
	</target>
	
	<target name="do_all_2" depend="init" export="NONE">
		<description>
			Call 'geant' with the same targets ${target1} (first argument)
			and ${target2} (second argument) in all directories ${folders}
			(third argument).
		</description>
		<argument name="target1"/>
		<argument name="target2"/>
		<argument name="folders"/>

		<geant target="do_one_2" arguments="${target1},${target2}">
			<fileset include="@(${folders}/build.eant)">
				<map type="glob" from="*/build.eant" to="*"/>
			</fileset>
		</geant>
	</target>

	<target name="do_all_exclude_2" depend="init" export="NONE">
		<description>
			Call 'geant' with the same targets ${target1} (first argument)
			and ${target2} (second argument) in all directories ${folders}
			(third argument) except those excluded in ${excluded_folders)
			(fourth argument).
		</description>
		<argument name="target1"/>
		<argument name="target2"/>
		<argument name="folders"/>
		<argument name="excluded_folders"/>

		<geant target="do_one_2" arguments="${target1},${target2}">
			<fileset include="@(${folders}/build.eant)" exclude="@(${excluded_folders}/build.eant)">
				<map type="glob" from="*/build.eant" to="*"/>
			</fileset>
		</geant>
	</target>
	
	<target name="do_one_2" export="NONE">
		<description>
			Call 'geant' with targets ${target1} (first argument)
			and ${target2} (second argument) in directory ${fs.mapped_filename}.
		</description>	
		<argument name="target1"/>
		<argument name="target2"/>
		
		<geant file="build.eant" target="${target1}" dir="${fs.mapped_filename}"/>
		<geant file="build.eant" target="${target2}" dir="${fs.mapped_filename}"/>
	</target>

	<target name="do_in_subfolder" depend="init" export="NONE">
		<description>
			Call 'geant' with target ${target} (first argument)
			in directory ${subfolders} (second argument) if there
			exists a buildfile in this folder.
		</description>
		<argument name="target"/>
		<argument name="subfolder"/>

		<available resource="${subfolder}/build.eant" variable="buildfile_available"/>
		<geant file="build.eant" target="${target}" dir="${subfolder}" if="${buildfile_available}=true"/>
	</target>

	<target name="do_in_subfolder_2" depend="init" export="NONE">
		<description>
			Call 'geant' with targets ${target1} (first argument)
			and ${target2} (second argument) in directory 
			${subfolder} (third argument) if there
			exists a buildfile in this folder.
		</description>
		<argument name="target1"/>
		<argument name="target2"/>
		<argument name="subfolder"/>

		<available resource="${subfolder}/build.eant" variable="buildfile_available"/>
		<geant file="build.eant" target="${target1}" dir="${subfolder}" if="${buildfile_available}=true"/>
		<geant file="build.eant" target="${target2}" dir="${subfolder}" if="${buildfile_available}=true"/>
	</target>
	
</project>
