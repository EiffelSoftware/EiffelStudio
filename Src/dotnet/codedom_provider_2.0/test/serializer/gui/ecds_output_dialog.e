note
	description: "Objects that represent an EV_DIALOG.%
		%The original version of this class was generated by EiffelBuild."
	legal: "See notice at end of class."
	status: "See notice at end of class."
	date: "$Date$"
	revision: "$Revision$"

class
	ECDS_OUTPUT_DIALOG

inherit
	ECDS_OUTPUT_DIALOG_IMP

	ECDS_OUTPUT_TAGS
		undefine
			copy,
			default_create
		end

feature {NONE} -- Initialization

	user_initialization
			-- called by `initialize'.
			-- Any custom user initialization that
			-- could not be performed in `initialize',
			-- (due to regeneration of implementation class)
			-- can be added here.
		do
			set_default_push_button (ok_button)
		end

feature -- Basic Operation

	clear
			-- Clear dialog content.
		do
			output_text.remove_text
		end
	
	write (a_text: STRING)
			-- Append `a_text' to `output_text'.
			-- `a_text' may contain tags to define formatting style.
			-- See {ECDS_OUTPUT_TAGS} for possible tag values.
		require
			non_void_text: a_text /= Void
		local
			l_index, l_end_index, l_old_index, l_count: INTEGER
			l_tag, l_closing_tag: STRING
		do
			a_text.prune_all ('%R')
			from
				l_index := a_text.index_of (Start_opening_tag, 1)
				l_count := a_text.count
				l_old_index := 1
			until
				l_index = 0 or l_index = l_count
			loop
				output_text.append_text (a_text.substring (l_old_index, l_index - 1))
				l_old_index := l_index
				l_end_index := a_text.index_of (End_opening_tag, l_index + 1)
				if l_end_index > 0 then
					l_tag := a_text.substring (l_index + 1, l_end_index - 1)
					output_tags.search (l_tag)
					if output_tags.found then
						l_closing_tag := closing_tag (l_tag)
						l_index := a_text.substring_index (l_closing_tag, l_end_index + 1)
						if l_index > 0 then
						--	output_text.set_current_format (output_tags.found_item)
							output_text.append_text (a_text.substring (l_end_index + 1, l_index - 1))
						--	output_text.set_current_format (Normal_format)
							l_old_index := l_index + l_closing_tag.count
						end
					end
				end
				l_index := a_text.index_of (Start_opening_tag, l_index + 1)
			end
			output_text.append_text (a_text.substring (l_old_index, a_text.count))
		end

feature {NONE} -- Events

	on_ok
			-- Called by `select_actions' of `ok_button'.
			-- Hide dialog
		do
			hide
		end

note
	copyright:	"Copyright (c) 1984-2006, Eiffel Software"
	license:	"GPL version 2 (see http://www.eiffel.com/licensing/gpl.txt)"
	licensing_options:	"http://www.eiffel.com/licensing"
	copying: "[
			This file is part of Eiffel Software's Eiffel Development Environment.
			
			Eiffel Software's Eiffel Development Environment is free
			software; you can redistribute it and/or modify it under
			the terms of the GNU General Public License as published
			by the Free Software Foundation, version 2 of the License
			(available at the URL listed under "license" above).
			
			Eiffel Software's Eiffel Development Environment is
			distributed in the hope that it will be useful,	but
			WITHOUT ANY WARRANTY; without even the implied warranty
			of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
			See the	GNU General Public License for more details.
			
			You should have received a copy of the GNU General Public
			License along with Eiffel Software's Eiffel Development
			Environment; if not, write to the Free Software Foundation,
			Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA
		]"
	source: "[
			 Eiffel Software
			 356 Storke Road, Goleta, CA 93117 USA
			 Telephone 805-685-1006, Fax 805-685-6869
			 Website http://www.eiffel.com
			 Customer support http://support.eiffel.com
		]"
end -- class ECDS_OUTPUT_DIALOG

