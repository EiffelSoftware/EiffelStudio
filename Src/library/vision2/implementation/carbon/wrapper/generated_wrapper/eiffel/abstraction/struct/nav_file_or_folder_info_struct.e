-- This file has been generated by EWG. Do not edit. Changes will be lost!

class NAV_FILE_OR_FOLDER_INFO_STRUCT

inherit

	EWG_STRUCT

	NAV_FILE_OR_FOLDER_INFO_STRUCT_EXTERNAL
		export
			{NONE} all
		end

creation

	make_new_unshared,
	make_new_shared,
	make_unshared,
	make_shared

feature {NONE} -- Implementation

	sizeof: INTEGER is
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	get_version: INTEGER is
		obsolete "Use `version' instead."
			-- Access member `version'
		require
			exists: exists
		do
			Result := get_version_external (item)
		ensure
			result_correct: Result = get_version_external (item)
		end

	version: INTEGER is
			-- Access member `version'
		require
			exists: exists
		do
			Result := get_version_external (item)
		ensure
			result_correct: Result = get_version_external (item)
		end

	set_version (a_value: INTEGER) is
			-- Set member `version'
		require
			exists: exists
		do
			set_version_external (item, a_value)
		ensure
			a_value_set: a_value = version
		end

	get_isfolder: INTEGER is
		obsolete "Use `isfolder' instead."
			-- Access member `isFolder'
		require
			exists: exists
		do
			Result := get_isfolder_external (item)
		ensure
			result_correct: Result = get_isfolder_external (item)
		end

	isfolder: INTEGER is
			-- Access member `isFolder'
		require
			exists: exists
		do
			Result := get_isfolder_external (item)
		ensure
			result_correct: Result = get_isfolder_external (item)
		end

	set_isfolder (a_value: INTEGER) is
			-- Set member `isFolder'
		require
			exists: exists
		do
			set_isfolder_external (item, a_value)
		ensure
			a_value_set: a_value = isfolder
		end

	get_visible: INTEGER is
		obsolete "Use `visible' instead."
			-- Access member `visible'
		require
			exists: exists
		do
			Result := get_visible_external (item)
		ensure
			result_correct: Result = get_visible_external (item)
		end

	visible: INTEGER is
			-- Access member `visible'
		require
			exists: exists
		do
			Result := get_visible_external (item)
		ensure
			result_correct: Result = get_visible_external (item)
		end

	set_visible (a_value: INTEGER) is
			-- Set member `visible'
		require
			exists: exists
		do
			set_visible_external (item, a_value)
		ensure
			a_value_set: a_value = visible
		end

	get_creationdate: INTEGER is
		obsolete "Use `creationdate' instead."
			-- Access member `creationDate'
		require
			exists: exists
		do
			Result := get_creationdate_external (item)
		ensure
			result_correct: Result = get_creationdate_external (item)
		end

	creationdate: INTEGER is
			-- Access member `creationDate'
		require
			exists: exists
		do
			Result := get_creationdate_external (item)
		ensure
			result_correct: Result = get_creationdate_external (item)
		end

	set_creationdate (a_value: INTEGER) is
			-- Set member `creationDate'
		require
			exists: exists
		do
			set_creationdate_external (item, a_value)
		ensure
			a_value_set: a_value = creationdate
		end

	get_modificationdate: INTEGER is
		obsolete "Use `modificationdate' instead."
			-- Access member `modificationDate'
		require
			exists: exists
		do
			Result := get_modificationdate_external (item)
		ensure
			result_correct: Result = get_modificationdate_external (item)
		end

	modificationdate: INTEGER is
			-- Access member `modificationDate'
		require
			exists: exists
		do
			Result := get_modificationdate_external (item)
		ensure
			result_correct: Result = get_modificationdate_external (item)
		end

	set_modificationdate (a_value: INTEGER) is
			-- Set member `modificationDate'
		require
			exists: exists
		do
			set_modificationdate_external (item, a_value)
		ensure
			a_value_set: a_value = modificationdate
		end

end
