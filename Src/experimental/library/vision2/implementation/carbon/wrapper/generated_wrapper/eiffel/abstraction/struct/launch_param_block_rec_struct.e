-- This file has been generated by EWG. Do not edit. Changes will be lost!

class LAUNCH_PARAM_BLOCK_REC_STRUCT

inherit

	EWG_STRUCT

	LAUNCH_PARAM_BLOCK_REC_STRUCT_EXTERNAL
		export
			{NONE} all
		end

create

	make_new_unshared,
	make_new_shared,
	make_unshared,
	make_shared

feature {ANY} -- Access

	sizeof: INTEGER is
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	reserved1: INTEGER is
			-- Access member `reserved1'
		require
			exists: exists
		do
			Result := get_reserved1_external (item)
		ensure
			result_correct: Result = get_reserved1_external (item)
		end

	set_reserved1 (a_value: INTEGER) is
			-- Set member `reserved1'
		require
			exists: exists
		do
			set_reserved1_external (item, a_value)
		ensure
			a_value_set: a_value = reserved1
		end

	reserved2: INTEGER is
			-- Access member `reserved2'
		require
			exists: exists
		do
			Result := get_reserved2_external (item)
		ensure
			result_correct: Result = get_reserved2_external (item)
		end

	set_reserved2 (a_value: INTEGER) is
			-- Set member `reserved2'
		require
			exists: exists
		do
			set_reserved2_external (item, a_value)
		ensure
			a_value_set: a_value = reserved2
		end

	launchblockid: INTEGER is
			-- Access member `launchBlockID'
		require
			exists: exists
		do
			Result := get_launchblockid_external (item)
		ensure
			result_correct: Result = get_launchblockid_external (item)
		end

	set_launchblockid (a_value: INTEGER) is
			-- Set member `launchBlockID'
		require
			exists: exists
		do
			set_launchblockid_external (item, a_value)
		ensure
			a_value_set: a_value = launchblockid
		end

	launchepblength: INTEGER is
			-- Access member `launchEPBLength'
		require
			exists: exists
		do
			Result := get_launchepblength_external (item)
		ensure
			result_correct: Result = get_launchepblength_external (item)
		end

	set_launchepblength (a_value: INTEGER) is
			-- Set member `launchEPBLength'
		require
			exists: exists
		do
			set_launchepblength_external (item, a_value)
		ensure
			a_value_set: a_value = launchepblength
		end

	launchfileflags: INTEGER is
			-- Access member `launchFileFlags'
		require
			exists: exists
		do
			Result := get_launchfileflags_external (item)
		ensure
			result_correct: Result = get_launchfileflags_external (item)
		end

	set_launchfileflags (a_value: INTEGER) is
			-- Set member `launchFileFlags'
		require
			exists: exists
		do
			set_launchfileflags_external (item, a_value)
		ensure
			a_value_set: a_value = launchfileflags
		end

	launchcontrolflags: INTEGER is
			-- Access member `launchControlFlags'
		require
			exists: exists
		do
			Result := get_launchcontrolflags_external (item)
		ensure
			result_correct: Result = get_launchcontrolflags_external (item)
		end

	set_launchcontrolflags (a_value: INTEGER) is
			-- Set member `launchControlFlags'
		require
			exists: exists
		do
			set_launchcontrolflags_external (item, a_value)
		ensure
			a_value_set: a_value = launchcontrolflags
		end

	launchappspec_struct: FSSPEC_STRUCT is
			-- Access member `launchAppSpec'
		require
			exists: exists
		do
			create Result.make_shared (get_launchappspec_external (item))
		ensure
			result_not_void: Result /= Void
			result_has_correct_item: Result.item = launchappspec
		end

	set_launchappspec_struct (a_value: FSSPEC_STRUCT) is
			-- Set member `launchAppSpec'
		require
			a_value_not_void: a_value /= Void
			exists: exists
		do
			set_launchappspec_external (item, a_value.item)
		ensure
			a_value_set: a_value.item = launchappspec
		end

	launchappspec: POINTER is
			-- Access member `launchAppSpec'
		require
			exists: exists
		do
			Result := get_launchappspec_external (item)
		ensure
			result_correct: Result = get_launchappspec_external (item)
		end

	set_launchappspec (a_value: POINTER) is
			-- Set member `launchAppSpec'
		require
			exists: exists
		do
			set_launchappspec_external (item, a_value)
		ensure
			a_value_set: a_value = launchappspec
		end

	launchprocesssn: POINTER is
			-- Access member `launchProcessSN'
		require
			exists: exists
		do
			Result := get_launchprocesssn_external (item)
		ensure
			result_correct: Result = get_launchprocesssn_external (item)
		end

	set_launchprocesssn (a_value: POINTER) is
			-- Set member `launchProcessSN'
		require
			exists: exists
		do
			set_launchprocesssn_external (item, a_value)
		end

	launchpreferredsize: INTEGER is
			-- Access member `launchPreferredSize'
		require
			exists: exists
		do
			Result := get_launchpreferredsize_external (item)
		ensure
			result_correct: Result = get_launchpreferredsize_external (item)
		end

	set_launchpreferredsize (a_value: INTEGER) is
			-- Set member `launchPreferredSize'
		require
			exists: exists
		do
			set_launchpreferredsize_external (item, a_value)
		ensure
			a_value_set: a_value = launchpreferredsize
		end

	launchminimumsize: INTEGER is
			-- Access member `launchMinimumSize'
		require
			exists: exists
		do
			Result := get_launchminimumsize_external (item)
		ensure
			result_correct: Result = get_launchminimumsize_external (item)
		end

	set_launchminimumsize (a_value: INTEGER) is
			-- Set member `launchMinimumSize'
		require
			exists: exists
		do
			set_launchminimumsize_external (item, a_value)
		ensure
			a_value_set: a_value = launchminimumsize
		end

	launchavailablesize: INTEGER is
			-- Access member `launchAvailableSize'
		require
			exists: exists
		do
			Result := get_launchavailablesize_external (item)
		ensure
			result_correct: Result = get_launchavailablesize_external (item)
		end

	set_launchavailablesize (a_value: INTEGER) is
			-- Set member `launchAvailableSize'
		require
			exists: exists
		do
			set_launchavailablesize_external (item, a_value)
		ensure
			a_value_set: a_value = launchavailablesize
		end

	launchappparameters_struct: APP_PARAMETERS_STRUCT is
			-- Access member `launchAppParameters'
		require
			exists: exists
		do
			create Result.make_shared (get_launchappparameters_external (item))
		ensure
			result_not_void: Result /= Void
			result_has_correct_item: Result.item = launchappparameters
		end

	set_launchappparameters_struct (a_value: APP_PARAMETERS_STRUCT) is
			-- Set member `launchAppParameters'
		require
			a_value_not_void: a_value /= Void
			exists: exists
		do
			set_launchappparameters_external (item, a_value.item)
		ensure
			a_value_set: a_value.item = launchappparameters
		end

	launchappparameters: POINTER is
			-- Access member `launchAppParameters'
		require
			exists: exists
		do
			Result := get_launchappparameters_external (item)
		ensure
			result_correct: Result = get_launchappparameters_external (item)
		end

	set_launchappparameters (a_value: POINTER) is
			-- Set member `launchAppParameters'
		require
			exists: exists
		do
			set_launchappparameters_external (item, a_value)
		ensure
			a_value_set: a_value = launchappparameters
		end

end
