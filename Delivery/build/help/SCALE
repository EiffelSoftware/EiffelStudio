WIDGET     : Scale
DESCRIPTION: Elongated rectangular region similar to a scrollbar 
             with a slider that indicates an analog value. 

CLIENT INTERFACE:
-----------------

class interface
	SCALE

creation 
	make,
	make_unmanaged

feature

	font: FONT
			-- Font name of label
			-- (from FONTABLE)
		require -- from FONTABLE
			exists: not destroyed
		
	is_maximum_right_bottom: BOOLEAN
		require
			exists: not destroyed
		
	is_value_shown: BOOLEAN
		require
			exists: not destroyed
		
	set_font (a_font: FONT)
			-- Set font label to font_name.
			-- (from FONTABLE)
		require -- from FONTABLE
			exists: not destroyed;
			a_font_exists: not (a_font = void);
			a_font_specified: a_font.is_specified
		
	set_font_name (a_font_name: STRING)
			-- Set font label to a_font_name.
			-- (from FONTABLE)
		require -- from FONTABLE
			exists: not destroyed;
			a_font_name_exists: not (a_font_name = void)
		
	set_maximum_right_bottom (flag: BOOLEAN)
		require
			exists: not destroyed
		
	show_value (flag: BOOLEAN)
		require
			exists: not destroyed
		
	add_move_action (a_command: COMMAND; argument: ANY)
			-- Add a_command to the list of action to be executed
			-- when slide is moved.
			-- argument will be passed to a_command whenever it is
			-- invoked as a callback.
		require
			exists: not destroyed;
			valid_command: a_command /= void
		
	add_value_changed_action (a_command: COMMAND; argument: ANY)
			-- Add a_command to the list of action to be execute when
			-- value is changed.
			-- argument will be passed to a_command whenever it is
			-- invoked as a callback.
		require
			exists: not destroyed;
			valid_command: a_command /= void
		
	remove_move_action (a_command: COMMAND; argument: ANY)
			-- Remove a_command from the list of action to be executed when
			-- slide is moved.
		require
			exists: not destroyed;
			valid_command: a_command /= void
		
	remove_value_changed_action (a_command: COMMAND; argument: ANY)
			-- Remove a_command from the list of action to be executed when
			-- value is changed.
		require
			exists: not destroyed;
			valid_command: a_command /= void
		
feature  -- Color

	foreground_color: COLOR
			-- Foreground color of Current widget
			-- (from PRIMITIVE)
		require -- from PRIMITIVE
			exists: not destroyed
		ensure -- from PRIMITIVE
			valid_result: Result /= void
		
	set_foreground_color (new_color: COLOR)
			-- Set foreground color to new_color.
			-- (from PRIMITIVE)
		require -- from PRIMITIVE
			exists: not destroyed;
			valid_color: new_color /= void
		ensure -- from PRIMITIVE
			foreground_set: foreground_color = new_color
		
feature  -- Orientation of Slider

	is_horizontal: BOOLEAN
			-- Is scale oriented horizontal?
		require
			exists: not destroyed
		
	set_horizontal (flag: BOOLEAN)
			-- Set orientation of the scale to horizontal if flag,
			-- to vertical otherwise.
		require
			exists: not destroyed
		ensure
			value_correctly_set: is_horizontal = flag
		
feature  -- Output Mode

	is_output_only: BOOLEAN
			-- Is scale mode output only?
		require
			exists: not destroyed
		
	set_output_only (flag: BOOLEAN)
			-- Set scale mode to output only if flag. The user
			-- can not modify the current scale interactively.
		require
			exists: not destroyed
		ensure
			output_only: is_output_only = flag
		
feature  -- Slider Value

	set_value (new_value: INTEGER)
			-- Set value to new_value.
		require
			exists: not destroyed;
			value_small_enough: new_value <= maximum;
			value_large_enough: new_value >= minimum
		ensure
			value = new_value
		
	value: INTEGER
			-- Value of the current slider position along the scale
		require
			exists: not destroyed
		ensure
			value_large_enough: Result >= minimum;
			value_small_enough: Result <= maximum
		
feature  -- Slider setup (max, min, granularity ...)

	granularity: INTEGER
			-- Value of the amount that the current slider can be moved
			-- whenever a move action occurs
		require
			exists: not destroyed
		ensure
			granularity_large_enough: Result >= 1;
			granularity_small_enough: Result <= (maximum - minimum)
		
	maximum: INTEGER
			-- Maximum value of the slider
		require
			exists: not destroyed
		ensure
			maximum_greater_than_minimum: Result >= minimum
		
	minimum: INTEGER
			-- Minimum value of the slider
		require
			exists: not destroyed
		ensure
			minimum_smaller_than_maximum: Result <= maximum
		
	set_granularity (new_granularity: INTEGER)
			-- Set amount to move the slider when a move action
			-- occurs to new_granularity.
		require
			exists: not destroyed;
			granularity_large_enough: new_granularity >= 1;
			granularity_small_enough: new_granularity <= (maximum - minimum)
		ensure
			granularity = new_granularity
		
	set_maximum (new_maximum: INTEGER)
			-- Set maximum value of the slider to new_maximum.
		require
			exists: not destroyed;
			maximum_greater_than_minimum: new_maximum > minimum
		ensure
			maximum = new_maximum;
			value <= maximum
		
	set_minimum (new_minimum: INTEGER)
			-- Set minimum value of the slider to new_minimum.
		require
			exists: not destroyed;
			minimum_smaller_than_maximum: new_minimum < maximum
		ensure
			minimum = new_minimum;
			value >= minimum
		
feature  -- Text

	set_text (a_text: STRING)
			-- Set scale text to a_text.
		require
			exists: not destroyed;
			not_text_void: a_text /= void
		ensure
			text.is_equal (a_text)
		
	text: STRING
			-- Scale text
		require
			exists: not destroyed
		
feature  -- Widget hierarchy

	parent: COMPOSITE
			-- Parent of Current widget
			-- (from PRIMITIVE)
		require -- from STACKABLE
			exists: not destroyed
		
invariant
	-- from PRIMITIVE
	has_parent: not destroyed implies parent /= void;
	
end -- class SCALE
