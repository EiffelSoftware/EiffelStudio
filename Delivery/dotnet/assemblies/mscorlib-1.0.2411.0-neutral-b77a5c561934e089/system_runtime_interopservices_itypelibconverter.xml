<!DOCTYPE type SYSTEM "../type.dtd">
<class>
	<header>
		<modified>False</modified>
		<frozen>False</frozen>
		<expanded>False</expanded>
		<deferred>True</deferred>
		<generic>False</generic>
		<class_eiffel_name>SYSTEM_RUNTIME_INTEROPSERVICES_ITYPELIBCONVERTER</class_eiffel_name>
		<alias>
			<simple_name>ITypeLibConverter</simple_name>
			<namespace>System.Runtime.InteropServices</namespace>
			<assembly_name>mscorlib</assembly_name>
			<assembly_version>1.0.2411.0</assembly_version>
			<assembly_culture>neutral</assembly_culture>
			<assembly_public_key>b77a5c561934e089</assembly_public_key>
		</alias>
		<inherit>
			<parent>
				<parent_name>ANY</parent_name>
				<undefine>finalize, get_hash_code, equals, to_string</undefine>
			</parent>
		</inherit>
		<create_none>False</create_none>
	</header>
	<body>
		<basic_operations>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>convert_assembly_to_type_lib</feature_eiffel_name>
				<feature_external_name>ConvertAssemblyToTypeLib</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>assembly</argument_eiffel_name>
						<argument_external_name>assembly</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_ASSEMBLY</argument_type>
						<argument_type_full_name>System.Reflection.Assembly</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>type_lib_name</argument_eiffel_name>
						<argument_external_name>typeLibName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>flags</argument_eiffel_name>
						<argument_external_name>flags</argument_external_name>
						<argument_type>SYSTEM_RUNTIME_INTEROPSERVICES_TYPELIBEXPORTERFLAGS</argument_type>
						<argument_type_full_name>System.Runtime.InteropServices.TypeLibExporterFlags</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>notify_sink</argument_eiffel_name>
						<argument_external_name>notifySink</argument_external_name>
						<argument_type>SYSTEM_RUNTIME_INTEROPSERVICES_ITYPELIBEXPORTERNOTIFYSINK</argument_type>
						<argument_type_full_name>System.Runtime.InteropServices.ITypeLibExporterNotifySink</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>ANY</return_type>
				<return_type_full_name>System.Object</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>convert_type_lib_to_assembly_object_string_type_lib_importer_flags</feature_eiffel_name>
				<feature_external_name>ConvertTypeLibToAssembly</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>type_lib</argument_eiffel_name>
						<argument_external_name>typeLib</argument_external_name>
						<argument_type>ANY</argument_type>
						<argument_type_full_name>System.Object</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>asm_file_name</argument_eiffel_name>
						<argument_external_name>asmFileName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>flags</argument_eiffel_name>
						<argument_external_name>flags</argument_external_name>
						<argument_type>SYSTEM_RUNTIME_INTEROPSERVICES_TYPELIBIMPORTERFLAGS</argument_type>
						<argument_type_full_name>System.Runtime.InteropServices.TypeLibImporterFlags</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>notify_sink</argument_eiffel_name>
						<argument_external_name>notifySink</argument_external_name>
						<argument_type>SYSTEM_RUNTIME_INTEROPSERVICES_ITYPELIBIMPORTERNOTIFYSINK</argument_type>
						<argument_type_full_name>System.Runtime.InteropServices.ITypeLibImporterNotifySink</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>public_key</argument_eiffel_name>
						<argument_external_name>publicKey</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>key_pair</argument_eiffel_name>
						<argument_external_name>keyPair</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_STRONGNAMEKEYPAIR</argument_type>
						<argument_type_full_name>System.Reflection.StrongNameKeyPair</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>asm_namespace</argument_eiffel_name>
						<argument_external_name>asmNamespace</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>asm_version</argument_eiffel_name>
						<argument_external_name>asmVersion</argument_external_name>
						<argument_type>SYSTEM_VERSION</argument_type>
						<argument_type_full_name>System.Version</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_ASSEMBLYBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.AssemblyBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>convert_type_lib_to_assembly</feature_eiffel_name>
				<feature_external_name>ConvertTypeLibToAssembly</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>type_lib</argument_eiffel_name>
						<argument_external_name>typeLib</argument_external_name>
						<argument_type>ANY</argument_type>
						<argument_type_full_name>System.Object</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>asm_file_name</argument_eiffel_name>
						<argument_external_name>asmFileName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>flags</argument_eiffel_name>
						<argument_external_name>flags</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>notify_sink</argument_eiffel_name>
						<argument_external_name>notifySink</argument_external_name>
						<argument_type>SYSTEM_RUNTIME_INTEROPSERVICES_ITYPELIBIMPORTERNOTIFYSINK</argument_type>
						<argument_type_full_name>System.Runtime.InteropServices.ITypeLibImporterNotifySink</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>public_key</argument_eiffel_name>
						<argument_external_name>publicKey</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>key_pair</argument_eiffel_name>
						<argument_external_name>keyPair</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_STRONGNAMEKEYPAIR</argument_type>
						<argument_type_full_name>System.Reflection.StrongNameKeyPair</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>unsafe_interfaces</argument_eiffel_name>
						<argument_external_name>unsafeInterfaces</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_ASSEMBLYBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.AssemblyBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>True</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_primary_interop_assembly</feature_eiffel_name>
				<feature_external_name>GetPrimaryInteropAssembly</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>g</argument_eiffel_name>
						<argument_external_name>g</argument_external_name>
						<argument_type>SYSTEM_GUID</argument_type>
						<argument_type_full_name>System.Guid</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>major</argument_eiffel_name>
						<argument_external_name>major</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>minor</argument_eiffel_name>
						<argument_external_name>minor</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>lcid</argument_eiffel_name>
						<argument_external_name>lcid</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>asm_name</argument_eiffel_name>
						<argument_external_name>asmName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String&amp;</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>asm_code_base</argument_eiffel_name>
						<argument_external_name>asmCodeBase</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String&amp;</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
		</basic_operations>
		<bit_or_infix>False</bit_or_infix>
	</body>
</class>