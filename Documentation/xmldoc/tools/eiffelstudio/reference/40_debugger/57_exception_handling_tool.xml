<document title="Exceptions handling tool" output="studio">
	<meta_data/>
<paragraph>	
	<paragraph>This tool is used to precise whether the debugger stops or continues on specific exceptions.<line_break/>
	    To show this tool, go to menu : <bold>Debug > Exception handling</bold> .<line_break/>
	    Note: now that exception are object in Eiffel too, the mechanism is unified for classic and dotnet system using the Eiffel exception class names.
	    </paragraph>

<heading><size>2</size>Exception handling dialog</heading>
<paragraph>		If the "filter exceptions" is enabled, for each exception you can leave the exception action as <bold>Disabled</bold> (default behavior: catch), <bold>Catch</bold> (stop on such exception), <bold>Ignore</bold> (do not stop on such exception). 
By double clicking on the exception name you toggle Ignore/Catch.</paragraph>
		<paragraph>In the following picture, we stop on every exception except the "External Exception".</paragraph>
		<paragraph><alignment>center</alignment><image><url>../../../../images/eiffelstudio/debugger/exceptions_handling_tool.png</url><alt_text>Exception handling tool</alt_text></image></paragraph>
<paragraph>
<tip>Using the "Pattern" field, you can add you own filter using regular expression.</tip>
    </paragraph>
	    
<heading><size>2</size>Cat call detection during the execution</heading>
<paragraph>This dialog also provides a way to disable/enable the cat call warning on the console or in the debugger with the first two checkbox fields.</paragraph>
		
 	</paragraph>
</document>
