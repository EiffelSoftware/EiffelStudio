ISE EiffelBench 4.3
===================

New functionalities:
--------------------

- Run-time in DLL: a new option has been added to the ace file:
	dynamic_runtime (yes | no);

	It will link your program with a ".DLL" version of the run-time on windows
	(and a ".so" version on UNIX). It will make the code of the executable smaller.

	To make it works copy all the "*.dll" files in $EIFFEL4\bench\spec\windows\lib\msc
	into the Windows directory so that the operating system will find them at execution
	time.

- New Console: a new option has been added to the ace file:
	console_application (yes | no);

	This option does not have any effects on UNIX systems. On Windows, this enable the
	user to create a real CONSOLE application and redirect the output or the input.

	On remaining problems: the program will ask you to press enter to finish the execution
	of the program, it will be fixed for the next release.

- New project management: 
	First, when you launch the new Ebench an empty project tool. In the file menu, you
	have either the choice to create a new project or to open one. The processus to create
	a project is the same as before. However, to open an eiffel project you need a
	".epr" file. This file is automatically generated at the end of each successful
	compilation at the same location as the EIFGEN directory.

	In the file menu, you have also a new entry which memorizes all the latest
	project that you used (the history is limited to 10 entries).

	One major improvements in project retrieving is the speed-up that you will notice.

- New graphic interface:
	The design of some tools has changed a little bit.
	The project tool has been split in three windows:
		- the project window
		- the feature window
		- the object browser window

- New case generation:
	A first implementation of a new kind of reverse engineering has been implemented,
	however you can take benefit of it since there is no available version of EiffelCase
	which supports it yet.

	Briefly, EiffelBench can now do a reverse engineering on some specific clusters
	and not on all the system as it was before.

- New Eiffel semantics:
	Now, in your Eiffel code, you can have some class declaration like:
		class A [H -> INTEGER, G -> ARRAY [H}]

­ Creation of generic parameters.

- Generic conformance.
