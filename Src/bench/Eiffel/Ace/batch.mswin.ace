system
	"ec"

root
	ES: make

default
	assertion (check)
	assertion (require)
	assertion (ensure)
	disabled_debug (yes)
	disabled_debug ("activity")
	disabled_debug ("actual_replication")
	disabled_debug ("anchored_features")
	disabled_debug ("assertion")
	disabled_debug ("assertions")
	disabled_debug ("byte_code")
	disabled_debug ("c_debugger")
	disabled_debug ("cache")
	disabled_debug ("cache_compiler")
	disabled_debug ("cache_research")
	disabled_debug ("cache_server")
	disabled_debug ("cache_stat")
	disabled_debug ("cecil")
	disabled_debug ("check_expanded")
	disabled_debug ("class_of_id")
	disabled_debug ("comments")
	disabled_debug ("count")
	disabled_debug ("dead_code")
	disabled_debug ("dead_code_removal")
	disabled_debug ("debbugger_hook")
	disabled_debug ("debugger_hook")
	disabled_debug ("dle topo")
	disabled_debug ("document")
	disabled_debug ("documentation")
	disabled_debug ("dollar")
	disabled_debug ("filters")
	disabled_debug ("flat_short")
	disabled_debug ("flush_file")
	disabled_debug ("formal_generic")
	disabled_debug ("gelex")
	disabled_debug ("genericity")
	disabled_debug ("geyacc")
	disabled_debug ("has_calls")
	disabled_debug ("local_feat_adaptation")
	disabled_debug ("optimization")
	disabled_debug ("options")
	disabled_debug ("parse")
	disabled_debug ("profile_convert")
	disabled_debug ("remove_class")
	disabled_debug ("replication")
	disabled_debug ("resource_validate")
	disabled_debug ("sep_debug")
	disabled_debug ("server")
	disabled_debug ("show_prof_query")
	disabled_debug ("skeleton")
	disabled_debug ("trace_table")
	disabled_debug ("transfer")
	disabled_debug ("type_check")
	disabled_debug ("verbose")
	debug (no)
	line_generation (no)
	profile (no)
	trace (no)
	il_verifiable (yes)
	cls_compliant (yes)
	dotnet_naming_convention (yes)
	msil_generation_type ("exe")
	check_vape (yes)
	console_application (yes)
	array_optimization (no)
	dead_code_removal (yes)
	exception_trace (no)
	inlining (yes)
	inlining_size ("0")


cluster
	all base:		"$EIFFEL_SRC\library\base"
		exclude
			"table"; "CVS"; 
		end

	all time:		"$EIFFEL_SRC\library\time"
		exclude
			"CVS"; "french"; "german"; 
		end

	all wel:		"$EIFFEL_SRC\library\wel"
		exclude
			"CVS"; 
		end

	beurk:		"$EIFFEL_SRC\Eiffel\beurk"

	compiler_support:		"$EIFFEL_SRC\Eiffel\support"

	common:		"$EIFFEL_SRC\Eiffel\common"

	common_parser (common):		"$\parser"

	ast_visitor(common_parser):	"$\AST\visitor"

	common_eiffel_parser (common_parser):		"$\parser"

	old_resources (common):		"$\resources"

	flat_short (common_parser):		"$\flat_short"
		exclude
			"format_context.e"; "local_format.e"; 
		end

	flat_short_b:		"$EIFFEL_SRC\Eiffel\flat_short\bench"

	yacc:		"$EIFFEL_SRC\Eiffel\yacc"

	all gobo:		"$EIFFEL_SRC\library\gobo\library"
		exclude
			"hact"; "se"; "ve"; "base"; "CVS"; "other"; "xm_formatter.e"; "xm_named_node.e"; 
		end

	all documentation:		"$EIFFEL_SRC\Eiffel\case\documentation"
		exclude
			"CVS"; 
		end

	all lace:		"$EIFFEL_SRC\Eiffel\lace"
		exclude
			"CVS"; 
		end

	all compiler:		"$EIFFEL_SRC\Eiffel\eiffel"
		exclude
			"CVS"; "unix"; "Clib"; "Core"; "junk"; "kernel"; 
		end

	all compiler_api:		"$EIFFEL_SRC\Eiffel\API"
		exclude
			"CVS"; 
		end

	all helpers:		"$EIFFEL_SRC\library\helpers"
		exclude
			"CVS"; 
		end

	switch:		"$EIFFEL_SRC\Eiffel\switch"

	interface_switch (switch):		"$\interface\batch_only"

	license_switch (switch):		"$\license\no_license"

	communications (switch):		"$\no_communication"

	status (communications):		"$\status"

	debuging_class (communications):		"$\debug"

	interface:		"$EIFFEL_SRC\Eiffel\interface"

	interface_shared (interface):		"$\shared"

	tty (interface):		"$\tty"

	preference_tool (interface):		"$\graphical\preference_tool"

	profile_tool (interface):		"$\graphical\profile_tool"

	all cli_writer:		"$EIFFEL_SRC\Eiffel\library\cli_writer"

	all xml_deserializer:		"$EIFFEL_SRC\Eiffel\library\xml_deserializer"

	dotnet_helpers:			"$EIFFEL_SRC/dotnet/helpers"

	all eac_components:		"$EIFFEL_SRC\dotnet\consumer\components"

	all activation_checker:		"$EIFFEL_SRC\Eiffel\library\activation"
		exclude
			"enterprise"; "free"; "CVS"; 
		end

	all keygen:		"$EIFFEL_SRC\library\keygen"
		exclude
			"eiffel_envision_10"; "unix"; "CVS"; "EIFGEN"; 
		end

	preferences:	"$EIFFEL_SRC\library\preferences"

external

	include_path:
		"$(EIFFEL_SRC)\C\bench",
		"$(EIFFEL_SRC)\C\platform",
		"$(EIFFEL_SRC)\library\wel\spec\windows\include",
		"$(EIFFEL_SRC)\Eiffel\library\cli_writer\Clib"

	object:
		"$(EIFFEL_SRC)\C\bench\compiler.lib",
		"$(EIFFEL_SRC)\C\platform\platform.lib",
		"$(EIFFEL_SRC)\C\minilzo\minilzo.obj",
		"$(EIFFEL_SRC)\library\wel\spec\$(ISE_C_COMPILER)\lib\wel.lib",
		"$(EIFFEL_SRC)\Eiffel\library\cli_writer\spec\msc\lib\cli_writer.lib",
		"corguids.lib"

end
