#import <Cocoa/Cocoa.h>
char *encodings[] = {
	@encode(BOOL),
	@encode(id),
	@encode(NSUInteger),
	@encode(Class),
	@encode(NSZone *),
	@encode(SEL),
	@encode(Protocol *),
	@encode(void),
	@encode(NSString *),
	@encode(NSCoder *),
	@encode(IMP),
	@encode(NSInvocation *),
	@encode(NSMethodSignature *),
	@encode(NSInteger),
	@encode(NSFastEnumerationState *),
	@encode(id *),
	@encode(NSArray *),
	@encode(void *),
	@encode(const char *),
	@encode(const void *),
	@encode(NSValue *),
	@encode(char),
	@encode(unsigned char),
	@encode(short),
	@encode(unsigned short),
	@encode(int),
	@encode(unsigned int),
	@encode(long),
	@encode(unsigned long),
	@encode(long long),
	@encode(unsigned long long),
	@encode(float),
	@encode(double),
	@encode(NSComparisonResult),
	@encode(NSNumber *),
	@encode(NSRange),
	@encode(NSEnumerator *),
	@encode(NSData *),
	@encode(NSInteger ( * ) ( id , id , void * )),
	@encode(NSURL *),
	@encode(NSIndexSet *),
	@encode(void ( ^ ) ( id obj , NSUInteger idx , BOOL * stop )),
	@encode(NSEnumerationOptions),
	@encode(BOOL ( ^ ) ( id obj , NSUInteger idx , BOOL * stop )),
	@encode(NSComparator),
	@encode(NSSortOptions),
	@encode(NSBinarySearchingOptions),
	@encode(const id *),
	@encode(NSBundle *),
	@encode(NSError * *),
	@encode(NSDictionary *),
	@encode(NSTimeInterval),
	@encode(NSDate *),
	@encode(NSLocale *),
	@encode(NSTimeZone *),
	@encode(NSCalendarUnit),
	@encode(NSDate * *),
	@encode(NSTimeInterval *),
	@encode(NSDateComponents *),
	@encode(unichar),
	@encode(unichar *),
	@encode(NSStringCompareOptions),
	@encode(NSCharacterSet *),
	@encode(NSUInteger *),
	@encode(NSStringEnumerationOptions),
	@encode(void ( ^ ) ( NSString * substring , NSRange substringRange , NSRange enclosingRange , BOOL * stop )),
	@encode(void ( ^ ) ( NSString * line , BOOL * stop )),
	@encode(NSStringEncoding),
	@encode(char *),
	@encode(NSStringEncodingConversionOptions),
	@encode(NSRangePointer),
	@encode(const NSStringEncoding *),
	@encode(const unichar *),
	@encode(NSStringEncoding *),
	@encode(UTF32Char),
	@encode(uint8_t),
	@encode(unsigned),
	@encode(int32_t),
	@encode(int64_t),
	@encode(const uint8_t *),
	@encode(NSDataWritingOptions),
	@encode(NSDataSearchOptions),
	@encode(NSDataReadingOptions),
	@encode(NSAttributedString *),
	@encode(NSString * *),
	@encode(NSRange *),
	@encode(NSDateFormatterStyle),
	@encode(NSDateFormatterBehavior),
	@encode(NSCalendar *),
	@encode(int *),
	@encode(NSInteger *),
	@encode(unsigned long long *),
	@encode(float *),
	@encode(double *),
	@encode(unsigned *),
	@encode(long long *),
	@encode(void ( ^ ) ( id key , id obj , BOOL * stop )),
	@encode(NSSet *),
	@encode(BOOL ( ^ ) ( id key , id obj , BOOL * stop )),
	@encode(NSRoundingMode),
	@encode(NSDecimalNumber *),
	@encode(NSCalculationError),
	@encode(NSDecimal),
	@encode(id < NSDecimalNumberBehaviors >),
	@encode(NSDecimal *),
	@encode(NSError *),
	@encode(NSException *),
	@encode(NSAssertionHandler *),
	@encode(NSFileHandle *),
	@encode(NSArray * *),
	@encode(NSFileManager *),
	@encode(NSVolumeEnumerationOptions),
	@encode(NSDirectoryEnumerationOptions),
	@encode(NSSearchPathDirectory),
	@encode(NSSearchPathDomainMask),
	@encode(BOOL *),
	@encode(NSDirectoryEnumerator *),
	@encode(BOOL ( ^ ) ( NSURL * url , NSError * error )),
	@encode(NSFileManagerItemReplacementOptions),
	@encode(NSURL * *),
	@encode(OSType),
	@encode(NSIndexPath *),
	@encode(void ( ^ ) ( NSUInteger idx , BOOL * stop )),
	@encode(BOOL ( ^ ) ( NSUInteger idx , BOOL * stop )),
	@encode(void ( ^ ) ( id obj , BOOL * stop )),
	@encode(BOOL ( ^ ) ( id obj , BOOL * stop )),
	@encode(NSMutableArray *),
	@encode(NSMutableSet *),
	@encode(NSObject *),
	@encode(NSKeyValueObservingOptions),
	@encode(NSKeyValueChange),
	@encode(NSKeyValueSetMutationKind),
	@encode(NSPropertyListFormat),
	@encode(NSPropertyListWriteOptions),
	@encode(NSOutputStream *),
	@encode(NSPropertyListReadOptions),
	@encode(NSPropertyListFormat *),
	@encode(NSInputStream *),
	@encode(NSPropertyListMutabilityOptions),
	@encode(NSPoint),
	@encode(NSSize),
	@encode(NSRect),
	@encode(NSMutableData *),
	@encode(id < NSKeyedArchiverDelegate >),
	@encode(id < NSKeyedUnarchiverDelegate >),
	@encode(NSKeyedArchiver *),
	@encode(NSKeyedUnarchiver *),
	@encode(uint32_t),
	@encode(NSLocaleLanguageDirection),
	@encode(NSNotification *),
	@encode(NSOperationQueue *),
	@encode(void ( ^ ) ( NSNotification * )),
	@encode(NSNotificationCenter *),
	@encode(NSPostingStyle),
	@encode(NSNull *),
	@encode(NSNumberFormatterStyle),
	@encode(NSNumberFormatterBehavior),
	@encode(NSNumberFormatterPadPosition),
	@encode(NSNumberFormatterRoundingMode),
	@encode(NSDecimalNumberHandler *),
	@encode(NSPort *),
	@encode(id < NSPortDelegate >),
	@encode(NSRunLoop *),
	@encode(NSConnection *),
	@encode(NSPortMessage *),
	@encode(id < NSMachPortDelegate >),
	@encode(NSSocketNativeHandle),
	@encode(NSProcessInfo *),
	@encode(CFRunLoopRef),
	@encode(NSTimer *),
	@encode(id < NSStreamDelegate >),
	@encode(NSStreamStatus),
	@encode(uint8_t *),
	@encode(uint8_t * *),
	@encode(NSHost *),
	@encode(NSInputStream * *),
	@encode(NSOutputStream * *),
	@encode(NSStream *),
	@encode(NSStreamEvent),
	@encode(NSThread *),
	@encode(NSMutableDictionary *),
	@encode(NSTimeZoneNameStyle),
	@encode(NSURLBookmarkCreationOptions),
	@encode(NSURLBookmarkResolutionOptions),
	@encode(NSURLBookmarkFileCreationOptions),
	@encode(NSUserDefaults *),
	@encode(NSOperation *),
	@encode(NSOperationQueuePriority),
	@encode(void ( ^ ) ( void )),
	@encode(NSHTTPCookieStorage *),
	@encode(NSHTTPCookie *),
	@encode(NSHTTPCookieAcceptPolicy),
	@encode(id < NSNetServiceDelegate >),
	@encode(NSNetServiceOptions),
	@encode(id < NSNetServiceBrowserDelegate >),
	@encode(NSNetService *),
	@encode(NSNetServiceBrowser *),
	@encode(NSURLCredential *),
	@encode(NSURLAuthenticationChallenge *),
	@encode(NSURLProtectionSpace *),
	@encode(NSURLResponse *),
	@encode(id < NSURLAuthenticationChallengeSender >),
	@encode(NSURLCacheStoragePolicy),
	@encode(NSURLCache *),
	@encode(NSCachedURLResponse *),
	@encode(NSURLRequest *),
	@encode(NSURLConnection *),
	@encode(NSURLResponse * *),
	@encode(NSURLCredentialPersistence),
	@encode(SecIdentityRef),
	@encode(SecTrustRef),
	@encode(NSURLCredentialStorage *),
	@encode(NSURLProtocol *),
	@encode(id < NSURLProtocolClient >),
	@encode(NSMutableURLRequest *),
	@encode(NSURLRequestCachePolicy),
	@encode(id < NSXMLParserDelegate >),
	@encode(NSXMLParser *),
	@encode(NSArchiver *),
	@encode(NSPortNameServer *),
	@encode(NSDistantObject *),
	@encode(id < NSConnectionDelegate >),
	@encode(NSDistantObjectRequest *),
	@encode(NSDistributedNotificationCenter *),
	@encode(NSNotificationSuspensionBehavior),
	@encode(NSPortCoder *),
	@encode(uint16_t),
	@encode(NSTaskTerminationReason),
	@encode(NSTask *),
	@encode(NSXMLNodeKind),
	@encode(NSXMLElement *),
	@encode(NSXMLDocument *),
	@encode(NSXMLNode *),
	@encode(NSXMLDTDNode *),
	@encode(NSXMLDTDNodeKind),
	@encode(NSXMLDocumentContentKind),
	@encode(NSXMLDTD *),
	@encode(NSAffineTransform *),
	@encode(CGFloat),
	@encode(NSAffineTransformStruct),
	@encode(NSAppleEventDescriptor *),
	@encode(DescType),
	@encode(Boolean),
	@encode(SInt32),
	@encode(AEEventClass),
	@encode(AEEventID),
	@encode(AEReturnID),
	@encode(AETransactionID),
	@encode(const AEDesc *),
	@encode(AEKeyword),
	@encode(NSAppleEventManager *),
	@encode(OSErr),
	@encode(const AppleEvent *),
	@encode(AppleEvent *),
	@encode(SRefCon),
	@encode(NSAppleEventManagerSuspensionID),
	@encode(NSDictionary * *),
	@encode(NSAttributedStringEnumerationOptions),
	@encode(void ( ^ ) ( NSDictionary * attrs , NSRange range , BOOL * stop )),
	@encode(void ( ^ ) ( id value , NSRange range , BOOL * stop )),
	@encode(NSMutableString *),
	@encode(NSCache *),
	@encode(NSCalendarDate *),
	@encode(NSClassDescription *),
	@encode(NSPredicate *),
	@encode(va_list),
	@encode(BOOL ( ^ ) ( id evaluatedObject , NSDictionary * bindings )),
	@encode(NSExpression *),
	@encode(NSComparisonPredicateModifier),
	@encode(NSPredicateOperatorType),
	@encode(NSCompoundPredicateType),
	@encode(NSDistributedLock *),
	@encode(id ( ^ ) ( id evaluatedObject , NSArray * expressions , NSMutableDictionary * context )),
	@encode(NSExpressionType),
	@encode(id ( ^ ) ( id , NSArray * , NSMutableDictionary * )),
	@encode(NSPointerFunctionsOptions),
	@encode(NSPointerFunctions *),
	@encode(NSHashTable *),
	@encode(id < NSMetadataQueryDelegate >),
	@encode(NSMetadataQuery *),
	@encode(NSMetadataItem *),
	@encode(NSScriptObjectSpecifier *),
	@encode(NSScriptClassDescription *),
	@encode(FourCharCode),
	@encode(NSScriptCommandDescription *),
	@encode(NSScriptCoercionHandler *),
	@encode(NSScriptCommand *),
	@encode(NSScriptExecutionContext *),
	@encode(NSInsertionPosition),
	@encode(NSRelativePosition),
	@encode(NSScriptWhoseTest *),
	@encode(NSWhoseSubelementIdentifier),
	@encode(NSSaveOptions),
	@encode(NSScriptSuiteRegistry *),
	@encode(NSTestComparisonOperation),
	@encode(NSTextCheckingType),
	@encode(NSOrthography *),
	@encode(NSTextCheckingResult *),
	@encode(id < NSSpellServerDelegate >),
	@encode(NSSpellServer *),
	@encode(NSTextCheckingTypes),
	@encode(NSURLDownload *),
	@encode(NSValueTransformer *),
	@encode(NSGraphicsContext *),
	@encode(NSWindow *),
	@encode(NSBitmapImageRep *),
	@encode(NSImageInterpolation),
	@encode(NSCompositingOperation),
	@encode(NSColorRenderingIntent),
	@encode(CIContext *),
	@encode(NSResponder *),
	@encode(NSEvent *),
	@encode(NSMenu *),
	@encode(NSUndoManager *),
	@encode(NSAnimationCurve),
	@encode(NSAnimationProgress),
	@encode(NSAnimationBlockingMode),
	@encode(id < NSAnimationDelegate >),
	@encode(NSAnimation *),
	@encode(NSView *),
	@encode(const NSRect * *),
	@encode(NSWindowOrderingMode),
	@encode(NSComparisonResult ( * ) ( id , id , void * )),
	@encode(NSCursor *),
	@encode(NSTrackingRectTag),
	@encode(CALayer *),
	@encode(NSViewLayerContentsRedrawPolicy),
	@encode(NSViewLayerContentsPlacement),
	@encode(CIFilter *),
	@encode(NSShadow *),
	@encode(NSTrackingArea *),
	@encode(NSScrollView *),
	@encode(NSToolTipTag),
	@encode(NSRect [ 4 ]),
	@encode(NSTextInputContext *),
	@encode(NSFocusRingType),
	@encode(NSPasteboard *),
	@encode(CGFloat *),
	@encode(NSImage *),
	@encode(NSScreen *),
	@encode(NSPoint ( ^ ) ( NSRange adjustedRange )),
	@encode(id < NSTextDelegate >),
	@encode(NSColor *),
	@encode(NSFont *),
	@encode(NSTextAlignment),
	@encode(NSWritingDirection),
	@encode(NSText *),
	@encode(NSTextTabType),
	@encode(NSParagraphStyle *),
	@encode(NSLineBreakMode),
	@encode(NSTextTab *),
	@encode(id < NSValidatedUserInterfaceItem >),
	@encode(NSWorkspace *),
	@encode(NSRunningApplication *),
	@encode(NSWorkspaceLaunchOptions),
	@encode(NSWorkspaceIconCreationOptions),
	@encode(void ( ^ ) ( NSDictionary * newURLs , NSError * error )),
	@encode(NSNumber * *),
	@encode(NSApplicationActivationPolicy),
	@encode(pid_t),
	@encode(NSApplicationActivationOptions),
	@encode(NSApplication *),
	@encode(id < NSApplicationDelegate >),
	@encode(NSModalSession),
	@encode(NSRequestUserAttentionType),
	@encode(NSDockTile *),
	@encode(NSApplicationDelegateReply),
	@encode(NSApplicationPresentationOptions),
	@encode(NSApplicationTerminateReply),
	@encode(NSApplicationPrintReply),
	@encode(NSUserInterfaceLayoutDirection),
	@encode(NSCellType),
	@encode(NSFormatter *),
	@encode(id < NSCopying >),
	@encode(NSControlTint),
	@encode(NSControlSize),
	@encode(NSCellAttribute),
	@encode(NSTextView *),
	@encode(NSBackgroundStyle),
	@encode(NSAlert *),
	@encode(NSButton *),
	@encode(NSAlertStyle),
	@encode(id < NSAlertDelegate >),
	@encode(NSAnimationContext *),
	@encode(NSBorderType),
	@encode(NSTitlePosition),
	@encode(NSBoxType),
	@encode(NSCell *),
	@encode(NSControl *),
	@encode(NSCellImagePosition),
	@encode(NSImageScaling),
	@encode(NSButtonType),
	@encode(NSGradientType),
	@encode(NSBezelStyle),
	@encode(NSSound *),
	@encode(NSClipView *),
	@encode(const CGFloat *),
	@encode(NSFontDescriptor *),
	@encode(NSGlyph),
	@encode(NSRectArray),
	@encode(const NSGlyph *),
	@encode(NSSizeArray),
	@encode(NSFontRenderingMode),
	@encode(NSFontSymbolicTraits),
	@encode(NSFontManager *),
	@encode(NSFontPanel *),
	@encode(NSFontTraitMask),
	@encode(NSFontAction),
	@encode(NSWindowDepth),
	@encode(NSBackingStoreType),
	@encode(id < NSWindowDelegate >),
	@encode(NSRectEdge),
	@encode(NSWindowSharingType),
	@encode(NSWindowBackingLocation),
	@encode(NSWindowCollectionBehavior),
	@encode(NSWindowController *),
	@encode(NSWindowButton),
	@encode(NSColorSpace *),
	@encode(NSWindowNumberListOptions),
	@encode(NSSelectionDirection),
	@encode(NSButtonCell *),
	@encode(NSToolbar *),
	@encode(NSMatrixMode),
	@encode(id < NSMatrixDelegate >),
	@encode(NSFormCell *),
	@encode(NSMenuItem *),
	@encode(id < NSMenuDelegate >),
	@encode(SEL *),
	@encode(NSMenuProperties),
	@encode(NSPasteboardItem *),
	@encode(NSPasteboardWritingOptions),
	@encode(NSPasteboardReadingOptions),
	@encode(NSFileWrapper *),
	@encode(CIVector *),
	@encode(size_t),
	@encode(CIColor *),
	@encode(CGColorRef),
	@encode(CGColorSpaceRef),
	@encode(NSColorSpaceModel),
	@encode(CGImageRef),
	@encode(NSRect *),
	@encode(unsigned char * *),
	@encode(NSBitmapFormat),
	@encode(CIImage *),
	@encode(unsigned char *),
	@encode(NSTIFFCompression *),
	@encode(NSTIFFCompression),
	@encode(const NSTIFFCompression * *),
	@encode(NSUInteger [ ]),
	@encode(NSBitmapImageFileType),
	@encode(NSDragOperation),
	@encode(id < NSDraggingInfo >),
	@encode(id < NSBrowserDelegate >),
	@encode(NSMatrix *),
	@encode(NSBrowserColumnResizingType),
	@encode(NSPointPointer),
	@encode(NSBrowser *),
	@encode(NSBrowserDropOperation *),
	@encode(NSBrowserDropOperation),
	@encode(NSViewController *),
	@encode(CGLayerRef),
	@encode(CGSize),
	@encode(CIFormat),
	@encode(CVImageBufferRef),
	@encode(IOSurfaceRef),
	@encode(CGAffineTransform),
	@encode(CGRect),
	@encode(CIFilterShape *),
	@encode(NSColorList *),
	@encode(NSColorPanel *),
	@encode(NSColorPanelMode),
	@encode(NSSaveOperationType),
	@encode(NSSavePanel *),
	@encode(NSPrintInfo *),
	@encode(NSPageLayout *),
	@encode(NSPrintOperation *),
	@encode(NSDocumentChangeType),
	@encode(NSDocument *),
	@encode(NSOpenPanel *),
	@encode(id < NSObject , NSCopying >),
	@encode(NSTouchPhase),
	@encode(NSEventType),
	@encode(CGEventRef),
	@encode(NSPointingDeviceType),
	@encode(NSEventMask),
	@encode(void ( ^ ) ( NSEvent * )),
	@encode(NSEvent * ( ^ ) ( NSEvent * )),
	@encode(NSFileWrapperReadingOptions),
	@encode(NSFileWrapperWritingOptions),
	@encode(NSHelpManager *),
	@encode(NSGradientDrawingOptions),
	@encode(NSBezierPath *),
	@encode(NSColor * *),
	@encode(IconRef),
	@encode(NSImageRep *),
	@encode(id < NSImageDelegate >),
	@encode(NSImageCacheMode),
	@encode(NSImageLoadStatus),
	@encode(NSImageAlignment),
	@encode(NSImageFrameStyle),
	@encode(NSPrinter *),
	@encode(NSPrinterTableStatus),
	@encode(id < NSSpeechRecognizerDelegate >),
	@encode(NSSpeechRecognizer *),
	@encode(NSSpeechBoundary),
	@encode(id < NSSpeechSynthesizerDelegate >),
	@encode(NSSpeechSynthesizer *),
	@encode(NSSpellChecker *),
	@encode(NSOrthography * *),
	@encode(void ( ^ ) ( NSInteger sequenceNumber , NSArray * results , NSOrthography * orthography , NSInteger wordCount )),
	@encode(NSPanel *),
	@encode(NSSplitViewDividerStyle),
	@encode(id < NSSplitViewDelegate >),
	@encode(NSSplitView *),
	@encode(id < NSOpenSavePanelDelegate >),
	@encode(void ( ^ ) ( NSInteger result )),
	@encode(id < NSPasteboardItemDataProvider >),
	@encode(NSPrintingOrientation),
	@encode(NSPrintingPaginationMode),
	@encode(NSPrintPanel *),
	@encode(NSPrintingPageOrder),
	@encode(NSViewController < NSPrintPanelAccessorizing > *),
	@encode(NSPrintPanelOptions),
	@encode(const NSWindowDepth *),
	@encode(NSScroller *),
	@encode(NSRulerView *),
	@encode(NSScrollerPart),
	@encode(NSUsableScrollerParts),
	@encode(NSScrollArrowPosition),
	@encode(NSScrollerArrow),
	@encode(NSSegmentStyle),
	@encode(NSSegmentSwitchTracking),
	@encode(NSSliderType),
	@encode(NSTickMarkPosition),
	@encode(NSTextFieldBezelStyle),
	@encode(id < NSTextFieldDelegate >),
	@encode(NSLayoutManager *),
	@encode(NSLineSweepDirection),
	@encode(NSLineMovementDirection),
	@encode(NSRectPointer),
	@encode(NSTokenStyle),
	@encode(id < NSTokenFieldCellDelegate >),
	@encode(NSTokenFieldCell *),
	@encode(id < NSTokenFieldDelegate >),
	@encode(NSTokenField *),
	@encode(NSTrackingAreaOptions),
	@encode(id < NSComboBoxDelegate >),
	@encode(id < NSComboBoxDataSource >),
	@encode(NSComboBox *),
	@encode(id < NSComboBoxCellDataSource >),
	@encode(NSComboBoxCell *),
	@encode(NSTableView *),
	@encode(NSSortDescriptor *),
	@encode(NSInputManager *),
	@encode(NSTextBlock *),
	@encode(NSTextTable *),
	@encode(NSTextList *),
	@encode(NSTextAttachment *),
	@encode(NSTextContainer *),
	@encode(id < NSTextAttachmentCell >),
	@encode(NSTextStorage *),
	@encode(NSRulerMarker *),
	@encode(NSSelectionGranularity),
	@encode(NSSelectionAffinity),
	@encode(id < NSTextViewDelegate >),
	@encode(NSTextCheckingTypes *),
	@encode(id < NSTableViewDataSource >),
	@encode(id < NSTableViewDelegate >),
	@encode(NSTableHeaderView *),
	@encode(NSTableViewColumnAutoresizingStyle),
	@encode(NSTableColumn *),
	@encode(NSTableViewDropOperation),
	@encode(NSTableViewSelectionHighlightStyle),
	@encode(NSTableViewDraggingDestinationFeedbackStyle),
	@encode(id < NSOutlineViewDelegate >),
	@encode(id < NSOutlineViewDataSource >),
	@encode(NSOutlineView *),
	@encode(id < NSGlyphStorage >),
	@encode(NSGlyphGenerator *),
	@encode(NSTypesetter *),
	@encode(id < NSLayoutManagerDelegate >),
	@encode(NSTypesetterBehavior),
	@encode(NSGlyph *),
	@encode(NSGlyphInscription *),
	@encode(NSPointArray),
	@encode(id < NSTextStorageDelegate >),
	@encode(NSStringDrawingOptions),
	@encode(NSRulerOrientation),
	@encode(NSInterfaceStyle),
	@encode(NSProgressIndicatorStyle),
	@encode(NSTabViewItem *),
	@encode(NSTabViewType),
	@encode(id < NSTabViewDelegate >),
	@encode(NSTabView *),
	@encode(NSTabState),
	@encode(NSPopUpArrowPosition),
	@encode(NSWindingRule),
	@encode(NSLineCapStyle),
	@encode(NSLineJoinStyle),
	@encode(NSBezierPathElement),
	@encode(NSStatusBar *),
	@encode(NSStatusItem *),
	@encode(id < NSSoundDelegate >),
	@encode(QTMovie *),
	@encode(id < NSDrawerDelegate >),
	@encode(NSDrawer *),
	@encode(const NSOpenGLPixelFormatAttribute *),
	@encode(GLint *),
	@encode(NSOpenGLPixelFormatAttribute),
	@encode(GLint),
	@encode(GLenum),
	@encode(GLsizei),
	@encode(NSOpenGLPixelFormat *),
	@encode(NSOpenGLContext *),
	@encode(GLbitfield),
	@encode(const GLint *),
	@encode(NSOpenGLContextParameter),
	@encode(NSOpenGLPixelBuffer *),
	@encode(CGPoint),
	@encode(CATransform3D),
	@encode(CFTimeInterval),
	@encode(CGContextRef),
	@encode(id < CAAction >),
	@encode(CAAnimation *),
	@encode(CGLContextObj),
	@encode(CGLPixelFormatObj),
	@encode(const CVTimeStamp *),
	@encode(NSCloseCommand *),
	@encode(id < NSToolbarDelegate >),
	@encode(NSToolbarDisplayMode),
	@encode(NSToolbarSizeMode),
	@encode(NSToolbarItem *),
	@encode(NSGlyphInfo *),
	@encode(NSCharacterCollection),
	@encode(NSTypesetterControlCharacterAction),
	@encode(const unsigned char *),
	@encode(NSManagedObjectContext *),
	@encode(NSFetchRequest *),
	@encode(NSTreeNode *),
	@encode(NSTextBlockValueType),
	@encode(NSTextBlockDimension),
	@encode(NSTextBlockLayer),
	@encode(NSTextBlockVerticalAlignment),
	@encode(NSTextTableLayoutAlgorithm),
	@encode(NSTextTableBlock *),
	@encode(NSDatePickerStyle),
	@encode(NSDatePickerMode),
	@encode(NSDatePickerElementFlags),
	@encode(id < NSDatePickerCellDelegate >),
	@encode(NSDatePickerCell *),
	@encode(NSLevelIndicatorStyle),
	@encode(id < NSRuleEditorDelegate >),
	@encode(NSRuleEditorNestingMode),
	@encode(NSRuleEditorRowType),
	@encode(NSRuleEditor *),
	@encode(NSEntityDescription *),
	@encode(NSAttributeType),
	@encode(NSPathStyle),
	@encode(id < NSPathCellDelegate >),
	@encode(NSPathComponentCell *),
	@encode(NSPathCell *),
	@encode(id < NSPathControlDelegate >),
	@encode(NSPathControl *),
	@encode(NSCollectionView *),
	@encode(id < NSCollectionViewDelegate >),
	@encode(NSCollectionViewItem *),
	@encode(NSCollectionViewDropOperation *),
	@encode(NSCollectionViewDropOperation),
	@encode(id < NSTextInputClient >),
	@encode(void ( ^ ) ( NSArray * items )),
	@encode(id < NSUserInterfaceItemSearching >),
	@encode(NSManagedObjectModel *),
	@encode(NSRelationshipDescription *),
	@encode(NSDeleteRule),
	@encode(NSFetchRequestResultType),
	@encode(NSManagedObjectID *),
	@encode(NSSnapshotEventType),
	@encode(NSPersistentStore *),
	@encode(NSPersistentStoreCoordinator *),
	@encode(NSManagedObject *),
	@encode(NSAtomicStoreCacheNode *),
	@encode(NSEntityMapping *),
	@encode(NSMigrationManager *),
	@encode(NSMappingModel *),
	@encode(NSEntityMappingType)
};
char** get_type_encodings() {
	return encodings;
}