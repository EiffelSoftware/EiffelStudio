<document title="Tutorial Step 2">
	<meta_data>
		<help>
			<toc>
				<envision_location>EiffelEnvision\Examples\Windows Eiffel Library (WEL)\Tutorial</envision_location>
				<envision_title></envision_title>
			</toc>
		</help>
	</meta_data>
	<paragraph>
		<paragraph>This sample shows you how to respond to an event occurring within your application. It also demonstrates the use of a <link><url>../../../reference/wel_msg_box_chart.xml</url><label>WEL_MSG_BOX</label></link> control and a redefinition of closeable from <link><url>../../../reference/wel_composite_window_chart.xml</url><label>WEL_COMPOSITE_WINDOW</label></link>.</paragraph>
		<image> 
			<url>step2.png</url> 
			<alt_text>step2</alt_text>
		</image>
		<line_break/>
		<line_break/>
		<heading>
			<size>2</size>Compiling
		</heading>
		<paragraph>
			<output output="envision">
				<list ordered="true">
					<item>Start Visual Studio .NET</item>
					<item>Choose Open Project from the File menu.</item>
					<item>Navigate to <italic>&lt;EiffelEnvision_installation_path&gt;\envision\examples\wel\step2\</italic> and select <italic>tutorial_step2.eifp</italic></item>
					<item>Clicking open loads the selected project</item>
				</list>
			</output>
			<output output="studio">
			<list ordered="false">
				<item>Launch EiffelStudio. </item>
				<item>Click <bold>Add project</bold></item>
				<item>Browse to 
					<italic>$ISE_EIFFEL\examples\wel\tutorial\step2\</italic>.
				</item>
				<item>Choose <italic>tutorial_step2.ecf</italic></item>
				<item>Choose the location where the project will be compiled, by default the same directory containing the configuration file. </item>
				<item>Click 
					<bold>OK</bold>.
				</item>
			</list>
			</output>
		</paragraph>
		<heading>
			<size>2</size>Running
		</heading>
		<paragraph> After launching the sample, you should see a <link><url>../../../reference/wel_frame_window_chart.xml</url><label>WEL_FRAME_WINDOW</label></link> displayed. If you click the left mouse button in the client area of the window, a <link><url>../../../reference/wel_msg_box_chart.xml</url><label>WEL_MSG_BOX</label></link> will appear, notifying you of your click.</paragraph>
		<heading>
			<size>2</size>Under the Hood
		</heading>
		<paragraph>This system is a demonstration of how to connect an event to one of the common message hooks available within WEL. See 
			<link>
				<url>/libraries/wel/content/common_concepts/index.xml</url><anchor_name>common_message_hooks</anchor_name>
				<label>Common message hooks</label>
			</link> for more information. In this example, on_left_button_down has been redefined from <link><url>../../../reference/wel_window_chart.xml</url><label>WEL_WINDOW</label></link> to display a <link><url>../../../reference/wel_msg_box_chart.xml</url><label>WEL_MSG_BOX</label></link> containing notification of the event occurring. 
		</paragraph>
		<paragraph>If you look at closeable from <code><class_name>MAIN_WINDOW</class_name></code>, you will see that it has been redefined to display a <link><url>../../../reference/wel_msg_box_chart.xml</url><label>WEL_MSG_BOX</label></link> and the result from this message box is used to generate the return value of closeable. If this Result is True, the window will be closed. 
			<paragraph>This sample contains the following classes: 
				<list ordered="false">
					<item><code><class_name>TUTORIAL_STEP2</class_name></code></item>
					<item><code><class_name>MAIN_WINDOW</class_name></code></item>
				</list>
			</paragraph>
			<seealso>
				<bold>See Also</bold>
				<line_break/>
				<link>
					<url>/libraries/wel/content/common_concepts/index.xml</url><anchor_name>common_message_hooks</anchor_name>
					<label>Common message hooks</label>
				</link>
				<line_break/>
			</seealso>
		</paragraph>
	</paragraph></document>
