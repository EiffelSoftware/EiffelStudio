<document title="Generation Tab">
	<meta_data>
		<help>
			<toc>
				<envision_title>Generation Tab</envision_title>
				<envision_location>EiffelEnvision\Tools\EiffelBuild\Reference\Preferences</envision_location>
				<envision_pseudo_name>30</envision_pseudo_name>
			</toc>
		</help>
	</meta_data>
	<paragraph> 
		<paragraph>This tab contains information about the available code generation options.</paragraph>
		<paragraph>Here is the appearance of the Generation tab with default settings for a Build project:</paragraph>
		<paragraph>
			<image>
				<url>/images/eiffelbuild/screenshots/project_generation.png</url>
			</image>
		</paragraph>
		<paragraph>The options available in this tab are as follows:</paragraph>
		<list ordered="false">
			<item><bold>Attribute declarations</bold>
				<list ordered ="false">
					<item><bold>Local</bold> - All attributes (corresponding to widgets and items generated by EiffelBuild) are declared as local variables.</item>
					<item><bold>Attributes</bold> -- All attributes are declared as attributes of the class with the following export status:</item>
					<list ordered ="false">
					<item><bold>Exported</bold> - All attributes are exported to ANY.</item>
					<item><bold>Export only named</bold> - Only those attributes that have been named are exported to ANY while unnaned attributes are not exported..</item>
					<item><bold>Export None</bold> - None of the attributes are exported.</item>
					</list>
					<item><bold>Grouped</bold> - Should different objects of same type be declared individually, or grouped?<line_break></line_break>&#160;&#160;&#160;&#160;button1: <class_name>EV_BUTTON</class_name><line_break></line_break>&#160;&#160;&#160;&#160;button2: <class_name>EV_BUTTON</class_name><line_break></line_break>&#160;&#160;&#160;&#160;button3: <class_name>EV_BUTTON</class_name><line_break></line_break><bold>or</bold><line_break></line_break>&#160;&#160;&#160;&#160;button1, button2, button3: <class_name>EV_BUTTON</class_name></item>
				</list>
			<item>
				<bold>Generate debugging information</bold>
				<paragraph>If selected, then for every feature connected to an event, code will be generated which outputs to the console, the name of the feature, and the values of all arguments.</paragraph>
			</item>
			</item>
			<item>
				<bold>Load constants from file</bold>
				<paragraph>If selected, a file named "constants.txt" is generated, containing values of all String and Integer constants, with the generated system loading the values of its constants from this file. See <link><url>../75_constants/index.xml</url><label>constants</label></link> for more information.</paragraph>
			</item>
		</list>
		<seealso>
			<bold>See Also</bold>
			<line_break/>
			<link>
				<url>/tools/eiffelbuild/reference/90_code_generation/index.xml</url>
				<label>Code generation</label>
			</link>
			<line_break/>
			<link>
				<url>index.xml</url>
				<label>Project settings window</label>
			</link>
			<line_break/>
			<link>
				<url>20_build.xml</url>
				<label>Build tab</label>
			</link>
			<line_break/>
			<link>
				<url>../75_constants/index.xml</url>
				<label>Constants</label>
			</link>
			<line_break/>

		</seealso>
	</paragraph></document>
