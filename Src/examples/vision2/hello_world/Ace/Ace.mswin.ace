system
	example

root

	example (ROOT_CLUSTER): "make"

default

--	precompiled ("$EIFFEL4/precomp/spec/$PLATFORM/vision");

-- If you are not using the precompiled version of EiffelVision, 
-- uncomment the `external' clause below. 

	assertion (all);

cluster

	ROOT_CLUSTER: 		"../main";
	commands: 		"../commands";

	

-- EiffelBase:

        base:                           "$EIFFEL4/library/base";
        structures(base):               "$/structures";

        kernel(base):                   "$/kernel";
        support(base):                  "$/support";

        access(structures):             "$/access";
        cursors(structures):            "$/cursors";
        cursor_tree(structures):        "$/cursor_tree";
        dispenser(structures):          "$/dispenser";
        iteration(structures):          "$/iteration";
        list(structures):               "$/list";
        set(structures):                "$/set";
        sort(structures):               "$/sort";
        storage(structures):            "$/storage";
        table(structures):              "$/table";
        traversing(structures):         "$/traversing";
        tree(structures):               "$/tree";

-- Wel:
	wel:					"$EIFFEL4\library\wel";

	wel_constants(wel):		"$\consts";
	wel_controls(wel):		"$\controls";
	wel_gdi(wel):			"$\gdi";
	wel_gdi_stocks(wel):		"$\gdistock";
	wel_standard_dialogs(wel):	"$\stddlgs";
	wel_structures(wel):		"$\structs";
	wel_support(wel):		"$\support";
	wel_windows(wel):		"$\windows";
	wel_messages(wel):		"$\messages";

                        
-- EiffelVision

	-- Interface
        -- vision:                 	"$EIFFEL4/library/vision";
        vision:                 	"d:/samik/vision2";
	vision_kernel (vision):        "$/interface/kernel";
	vision_support (vision):        "$/interface/support";
	vision_widgets (vision):        "$/interface/widgets";
	vision_primitives (vision_widgets):        "$/primitives";
	vision_containers (vision_widgets):        "$/containers";

--	vision_context_data (vision):	"$/oui/context_data";
--	vision_figures (vision):	"$/figures";
--	vision_tools (vision):		"$/tools";


	-- Implementation
	vision_i (vision):		"$/implementation/";

	-- Implementation Interface
	vision_ii (vision_i):		"$/implementation_interface";
	vision_ii_kernel (vision_ii):	"$/kernel";
	vision_ii_support (vision_ii):	"$/support";
	vision_ii_widgets (vision_ii):	"$/widgets";
	vision_ii_primitives (vision_ii_widgets):	"$/primitives";
	vision_ii_containers (vision_ii_widgets):	"$/containers";


	-- Implementation clusters for MS Windows
	vision_imp (vision_i):          	"$/mswin";
	vision_imp_kernel (vision_imp):         "$/kernel";
	vision_imp_support (vision_imp):        "$/support";
	vision_imp_widgets (vision_imp):        "$/widgets";
	vision_imp_primitives (vision_imp_widgets):	"$/primitives";
	vision_imp_containers (vision_imp_widgets):	"$/containers";


external

 
        include_path:
               	"$(EIFFEL4)/library/wel/spec/windows/include";

        object:
                "$(EIFFEL4)/library/wel/spec/$(COMPILER)/lib/wel.lib";

end
