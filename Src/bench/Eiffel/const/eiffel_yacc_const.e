-- This file was automatically produced from "constants", do not edit.

-- Those constants must match with the C constants declared in file
-- "typenode.h" (directory Clib).

class EIFFEL_YACC_CONST

feature {NONE}

	class_as: INTEGER is 0
	id_as: INTEGER is 1
	construct_list_as: INTEGER is 2
	integer_as: INTEGER is 3
	string_as: INTEGER is 4
	index_as: INTEGER is 5
	export_item_as: INTEGER is 6
	all_as: INTEGER is 7
	feat_name_id_as: INTEGER is 8
	infix_as: INTEGER is 9
	prefix_as: INTEGER is 10
	formal_as: INTEGER is 11
	char_type_as: INTEGER is 12
	bool_type_as: INTEGER is 13
	int_type_as: INTEGER is 14
	real_type_as: INTEGER is 15
	double_type_as: INTEGER is 16
	bits_as: INTEGER is 17
	class_type_as: INTEGER is 18
	exp_type_as: INTEGER is 19
	like_cur_as: INTEGER is 20
	like_id_as: INTEGER is 21
	formal_dec_as: INTEGER is 22
	parent_as: INTEGER is 23
	rename_as: INTEGER is 24
	real_as: INTEGER is 25
	bool_as: INTEGER is 26
	value_as: INTEGER is 27
	address_as: INTEGER is 28
	paran_as: INTEGER is 29
	un_minus_as: INTEGER is 30
	un_plus_as: INTEGER is 31
	un_old_as: INTEGER is 32
	un_not_as: INTEGER is 33
	bin_plus_as: INTEGER is 34
	bin_minus_as: INTEGER is 35
	bin_mod_as: INTEGER is 36
	bin_power_as: INTEGER is 37
	bin_and_as: INTEGER is 38
	bin_and_then_as: INTEGER is 39
	bin_or_as: INTEGER is 40
	bin_or_else_as: INTEGER is 41
	bin_implies_as: INTEGER is 42
	bin_xor_as: INTEGER is 43
	bin_eq_as: INTEGER is 44
	bin_ne_as: INTEGER is 45
	bin_gt_as: INTEGER is 46
	bin_ge_as: INTEGER is 47
	bin_lt_as: INTEGER is 48
	bin_le_as: INTEGER is 49
	bin_slash_as: INTEGER is 50
	bin_star_as: INTEGER is 51
	bin_div_as: INTEGER is 52
	char_as: INTEGER is 53
	result_as: INTEGER is 54
	current_as: INTEGER is 55
	access_id_as: INTEGER is 56
	nested_as: INTEGER is 57
	expr_call_as: INTEGER is 58
	create_as: INTEGER is 59
	inspect_as: INTEGER is 60
	case_as: INTEGER is 61
	interval_as: INTEGER is 62
	if_as: INTEGER is 63
	elsif_as: INTEGER is 64
	assign_as: INTEGER is 65
	reverse_as: INTEGER is 66
	debug_as: INTEGER is 67
	retry_as: INTEGER is 68
	instr_call_as: INTEGER is 69
	tagged_as: INTEGER is 70
	loop_as: INTEGER is 71
	check_as: INTEGER is 72
	body_as: INTEGER is 73
	type_dec_as: INTEGER is 74
	unique_as: INTEGER is 75
	routine_as: INTEGER is 76
	external_as: INTEGER is 77
	constant_as: INTEGER is 79
	feature_as: INTEGER is 80
	suppliers_as: INTEGER is 81
	invariant_as: INTEGER is 82
	variant_as: INTEGER is 83
	feature_list_as: INTEGER is 84
	deferred_as: INTEGER is 85
	do_as: INTEGER is 86
	once_as: INTEGER is 87
	require_as: INTEGER is 88
	require_else_as: INTEGER is 89
	ensure_as: INTEGER is 90
	ensure_then_as: INTEGER is 91
	feature_clause_as: INTEGER is 92
	creation_as: INTEGER is 93
	array_as: INTEGER is 94
	un_strip_as: INTEGER is 95
	none_type_as: INTEGER is 96
	client_as: INTEGER is 97
	access_feat_as: INTEGER is 98
	access_inv_as: INTEGER is 99
	access_assert_as: INTEGER is 100
	bin_free_as: INTEGER is 149
	un_free_as: INTEGER is 150
	bit_const_as: INTEGER is 151
	nested_expr_as: INTEGER is 152
	bits_symbol_as: INTEGER is 153
	pointer_type_as: INTEGER is 154
	address_current_as: INTEGER is 155
	address_result_as: INTEGER is 156
	external_lang_as: INTEGER is 158
	expr_address_as: INTEGER is 160
	separate_type_as: INTEGER is 161
	precursor_as: INTEGER is 164

end
