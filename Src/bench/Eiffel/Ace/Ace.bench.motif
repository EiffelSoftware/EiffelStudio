system es3

root

	ewb_motif (main): "make"

cluster

-- STANDARD STRUCTURES:

		kernel:				"$EIFFEL3/library/base/kernel";
		support:			"$EIFFEL3/library/base/support";
		access:				"$EIFFEL3/library/base/structures/access";
		cursors:			"$EIFFEL3/library/base/structures/cursors";
		dispenser:			"$EIFFEL3/library/base/structures/dispenser";
		list:				"$EIFFEL3/library/base/structures/list";
		set:				"$EIFFEL3/library/base/structures/set";
		sort:				"$EIFFEL3/library/base/structures/sort";
		storage:			"$EIFFEL3/library/base/structures/storage";
		table:				"$EIFFEL3/library/base/structures/table";
		traversing:			"$EIFFEL3/library/base/structures/traversing";
		tree:				"$EIFFEL3/library/base/structures/tree";

-- ES3 SPECIFIC CLUSTERS


		liman_shared:		"$BENCH/Eiffel/limand/shared";
		liman_client:		"$BENCH/Eiffel/limand/client";
		liman_bench:		"$BENCH/Eiffel/limand/bench";
		beurk:				"$BENCH/Eiffel/beurk";
		compiler_support:	"$BENCH/Eiffel/support";
		replication:		"$BENCH/Eiffel/eiffel/replication";

	-- General compilation:

		flat_short:			"$BENCH/Eiffel/flat_short/abstract";
		flat_short_b:		"$BENCH/Eiffel/flat_short/bench";

		yacc:				"$BENCH/Eiffel/yacc";
		const:				"$BENCH/Eiffel/const";

	-- Lace compilation:

		env:				"$BENCH/Eiffel/lace/env";
		lace_compile:		"$BENCH/Eiffel/lace/lace_compile";
		lace_shared:		"$BENCH/Eiffel/lace/shared";

	-- Eiffel compilation:

		instructions_b:		"$BENCH/Eiffel/eiffel/AST/instructions";
		expressions_b:		"$BENCH/Eiffel/eiffel/AST/expressions";
		ast_skeleton_b:		"$BENCH/Eiffel/eiffel/AST/skeleton";
		ast_clickable_b:	"$BENCH/Eiffel/eiffel/AST/clickable";

		byte_code:			"$BENCH/Eiffel/eiffel/byte_code";
		cecil:				"$BENCH/Eiffel/eiffel/cecil";
		compiler:			"$BENCH/Eiffel/eiffel/compiler";
		eiffel_const:		"$BENCH/Eiffel/eiffel/const";
		generation:			"$BENCH/Eiffel/eiffel/generation";
		genericity:			"$BENCH/Eiffel/eiffel/genericity";
		compiler_ids:		"$BENCH/Eiffel/eiffel/ids/compiler";
		routine_ids:		"$BENCH/Eiffel/eiffel/ids/routine";
		class_ids:			"$BENCH/Eiffel/eiffel/ids/class";
		type_ids:			"$BENCH/Eiffel/eiffel/ids/type";
		body_ids:			"$BENCH/Eiffel/eiffel/ids/body_id";
		body_indexes:		"$BENCH/Eiffel/eiffel/ids/body_index";
		real_body_ids:		"$BENCH/Eiffel/eiffel/ids/real_body_id";
		real_body_indexes:	"$BENCH/Eiffel/eiffel/ids/real_body_index";
		file_ids:			"$BENCH/Eiffel/eiffel/ids/file";
		feature_as_ids:		"$BENCH/Eiffel/eiffel/ids/feature_as";
		inheritance:		"$BENCH/Eiffel/eiffel/inheritance";
		interface:			"$BENCH/Eiffel/eiffel/interface";
		polymorphism:		"$BENCH/Eiffel/eiffel/polymorphism";
		server:				"$BENCH/Eiffel/eiffel/server";
		eiffel_shared:		"$BENCH/Eiffel/eiffel/shared";
		skeleton:			"$BENCH/Eiffel/eiffel/skeleton";
		structures:			"$BENCH/Eiffel/eiffel/structures";
		tables:				"$BENCH/Eiffel/eiffel/tables";
		descriptor:			"$BENCH/Eiffel/eiffel/descriptor";


-- API cluster

		api_constants:	  	"$BENCH/Eiffel/API/constants";
		api_shared:		 	"$BENCH/Eiffel/API/shared";
		api_ids:		  	"$BENCH/Eiffel/API/ids";
		api_queries:		"$BENCH/Eiffel/API/queries";
		api_interface:	  	"$BENCH/Eiffel/API/interface";
		api_common:			"$BENCH/Eiffel/API/common";
		communication:		"$BENCH/Eiffel/API/communication";
		output:		 		"$BENCH/Eiffel/API/output";
		evaluated_type:		"$BENCH/Eiffel/API/evaluated_type";
			-- Error processing
		error_common:		"$BENCH/Eiffel/API/error/common";
		lace_error:			"$BENCH/Eiffel/API/error/lace";
		feature_error:		"$BENCH/Eiffel/API/error/eiffel/feature";
		parents_error:		"$BENCH/Eiffel/API/error/eiffel/parents";
		redefined_error:	"$BENCH/Eiffel/API/error/eiffel/redefined";
		unredefined_error:	"$BENCH/Eiffel/API/error/eiffel/unredefined";
			-- Resources
		resources:			"$BENCH/Eiffel/API/resources/common";
		resources_bench:	"$BENCH/Eiffel/API/resources/bench";
			-- Profiling
		converter:			"$BENCH/Eiffel/API/profiler/converter";
		profiling:			"$BENCH/Eiffel/API/profiler/profiling";
		querying:		  	"$BENCH/Eiffel/API/profiler/querying";
		filters:			"$BENCH/Eiffel/API/profiler/filters";
		matching:		  	"$BENCH/Eiffel/API/profiler/matching";
		struct_text:		"$BENCH/Eiffel/API/structured_text";
			-- AST structures
		lace_AST:			"$BENCH/Eiffel/API/AST/lace";
		instructions:		"$BENCH/Eiffel/API/AST/eiffel/instructions";
		expressions:		"$BENCH/Eiffel/API/AST/eiffel/expressions";
		ast_skeleton:		"$BENCH/Eiffel/API/AST/eiffel/skeleton";
		ast_stonables:		"$BENCH/Eiffel/API/AST/eiffel/clickable";

-- SWITCH clusters (chose one cluster per directory in switch directory)
	
		dle_switch:			"$BENCH/Eiffel/switch/dle/dle";
		generation_switch:	"$BENCH/Eiffel/switch/generation/professional";
		interface_switch:	"$BENCH/Eiffel/switch/interface/graphical";
		tty_switch: 		"$BENCH/Eiffel/switch/tty/professional";

-- INTERFACE CLUSTERS

		interface_shared:	"$BENCH/Eiffel/interface/shared";

	-- tty interace
		
		tty: 				"$BENCH/Eiffel/interface/tty";

	-- graphical interface (bench):

		archi_text:			"$BENCH/Eiffel/interface/graphical/archi_text";
		bench_common:		"$BENCH/Eiffel/interface/graphical/common";
		commands:			"$BENCH/Eiffel/interface/graphical/commands";
		debugging:			"$BENCH/Eiffel/interface/graphical/debugging";
		drag_and_drop:		"$BENCH/Eiffel/interface/graphical/drag_and_drop";
		formatters:			"$BENCH/Eiffel/interface/graphical/formatters";
		main:				"$BENCH/Eiffel/interface/graphical/main";
		graphical_shared:	"$BENCH/Eiffel/interface/graphical/shared";
		stones:				"$BENCH/Eiffel/interface/graphical/stones";
		text_window:		"$BENCH/Eiffel/interface/graphical/text_window";
		windows:			"$BENCH/Eiffel/interface/graphical/windows";
		wizard_common:		"$BENCH/Eiffel/interface/graphical/wizard/common";
		wizard_bench:		"$BENCH/Eiffel/interface/graphical/wizard/bench";

		platform_common:	"$BENCH/Eiffel/interface/graphical/spec/common";
		platform_motif:		"$BENCH/Eiffel/interface/graphical/spec/motif";

	-- Communications

		ipc:				"$BENCH/Eiffel/ipc";
		debugclas:			"$BENCH/Eiffel/debug";

	-- Case
		case_common:		"$BENCH/Eiffel/case_storage/common";
		case_bench:			"$BENCH/Eiffel/case_storage/bench";

	-- Vision
		graph_resources:	"$EIFFEL3/library/vision/implement/motif/Resources";
		graph_widgets:		"$EIFFEL3/library/vision/implement/motif/widgets";
		graph_toolkit:		"$EIFFEL3/library/vision/implement/toolkit";
		graph_X:			"$EIFFEL3/library/vision/implement/X";
		graph_commands:		"$EIFFEL3/library/vision/oui/commands";
		graph_kernel:		"$EIFFEL3/library/vision/oui/kernel";
		graph_oui_widgets:	"$EIFFEL3/library/vision/oui/widgets";
		graph_tools:		"$EIFFEL3/library/vision/tools";

	-- Net
		abstract_socket:        "$EIFFEL3/library/net/abstract/socket";
		net_socket:             "$EIFFEL3/library/net/network/socket";
		local_socket:           "$EIFFEL3/library/net/local/socket";
		polling:                "$EIFFEL3/library/net/polling";
		abstract_client_server: "$EIFFEL3/library/net/abstract/client_server";
		net_client_server:      "$EIFFEL3/library/net/network/client_server";
		local_client_server:    "$EIFFEL3/library/net/local/client_server";

external

	object:
		"$(BENCH)/C/parsing/eiffel/libweiffel.a",
		"$(BENCH)/C/parsing/lace/liblace.a",
		"$(BENCH)/C/parsing/shared/libparsing.a",
		"$(BENCH)/C/platform/libplatform.a",
		"$(EIFFEL3)/library/vision/spec/$(PLATFORM)/lib/motif_Clib.a",
		"$(EIFFEL3)/library/vision/spec/$(PLATFORM)/lib/Xt.a",
		"$(BENCH)/C/ipc/ewb/libewb.a",
		"$(BENCH)/C/ipc/shared/libipc.a",
		"$(BENCH)/C/liman/client/libliman.a",
		"$(BENCH)/C/liman/shared/libshared.a",
		"$(BENCH)/C/idrs/libidr.a",
		"-lXm -lXt -lX11"

end
