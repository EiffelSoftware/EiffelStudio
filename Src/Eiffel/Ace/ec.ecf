<?xml version="1.0" encoding="ISO-8859-1"?>
<system xmlns="http://www.eiffel.com/developers/xml/configuration-1-10-0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.eiffel.com/developers/xml/configuration-1-10-0 http://www.eiffel.com/developers/xml/configuration-1-10-0.xsd" name="ec" uuid="D398E904-E3C8-4F8A-B9E7-6FE493CEA02F">
	<target name="common">
		<file_rule>
			<exclude>/\.svn$</exclude>
		</file_rule>
		<option trace="false" profile="false" debug="false" warning="true" is_attached_by_default="false" syntax="transitional">
			<assertions precondition="true" postcondition="true" check="true" supplier_precondition="true"/>
			<warning name="old_verbatim_strings" enabled="false"/>
		</option>
		<setting name="console_application" value="true"/>
		<setting name="exception_trace" value="true"/>
		<setting name="concurrency" value="thread"/>
		<library name="base" location="$ISE_LIBRARY\library\base\base.ecf" readonly="false"/>
		<library name="base_extension" location="$ISE_LIBRARY\library\base_extension\base_extension.ecf" readonly="false"/>
		<library name="cli_writer" location="$EIFFEL_SRC\framework\cli_writer\cli_writer.ecf" readonly="false" use_application_options="true"/>
		<library name="compiler_encoding" location="$EIFFEL_SRC\framework\compiler_encoding\compiler_encoding.ecf" readonly="false"/>
		<library name="configuration_compiler" location="$EIFFEL_SRC\framework\configuration\configuration_compiler.ecf" readonly="false" use_application_options="true"/>
		<library name="configuration_parser" location="$EIFFEL_SRC\framework\configuration\configuration_parser.ecf" readonly="false" use_application_options="true"/>
		<library name="consumer" location="$EIFFEL_SRC\dotnet\consumer\consumer.ecf" readonly="false"/>
		<library name="dotnet_helper" location="$EIFFEL_SRC\dotnet\helpers\support\dotnet_helper.ecf" readonly="false"/>
		<library name="dotnet_loader" location="$EIFFEL_SRC\framework\dotnet_loader\dotnet_loader.ecf" readonly="false" use_application_options="true"/>
		<library name="ecosystem" location="$EIFFEL_SRC\Eiffel\ecosystem\ecosystem.ecf" readonly="false" use_application_options="true"/>
		<library name="eiffel_identifier" location="$EIFFEL_SRC\framework\eiffel_identifier\eiffel_identifier.ecf" readonly="false" use_application_options="true"/>
		<library name="emitter_loader" location="$EIFFEL_SRC\framework\emitter_loader\emitter_loader.ecf" readonly="false" use_application_options="true"/>
		<library name="encoding" location="$ISE_LIBRARY\library\encoding\encoding.ecf" readonly="false"/>
		<library name="environment" location="$EIFFEL_SRC\framework\environment\environment.ecf" readonly="false" use_application_options="true"/>
		<library name="fmwk_utilities" location="$EIFFEL_SRC\framework\utilities\utilities.ecf"/>
		<library name="file_utilities" location="$EIFFEL_SRC\framework\file_utilities\file_utilities.ecf" readonly="false" use_application_options="true"/>
		<library name="framework_patterns" location="$EIFFEL_SRC\framework\patterns\patterns.ecf" readonly="false" use_application_options="true"/>
		<library name="gobo_regexp" location="$ISE_LIBRARY\library\gobo\gobo_regexp.ecf"/>
		<library name="i18n" location="$ISE_LIBRARY\library\i18n\i18n.ecf" readonly="false"/>
		<library name="interface_names" location="$EIFFEL_SRC\framework\interface_names\interface_names.ecf" readonly="false"/>
		<library name="kmp_matcher" location="$ISE_LIBRARY\library\text\regexp\kmp_matcher\kmp_matcher.ecf"/>
		<library name="parser" location="$EIFFEL_SRC\framework\parser\parser.ecf" readonly="false" use_application_options="true"/>
		<library name="parser_extension" location="$EIFFEL_SRC\framework\parser_extension\parser_extension.ecf" readonly="false" use_application_options="true"/>
		<library name="pe_reader" location="$EIFFEL_SRC\framework\file_formats\pe\pe.ecf" readonly="false"/>
		<library name="process" location="$ISE_LIBRARY\library\process\process.ecf" readonly="false"/>
		<library name="resources" location="$EIFFEL_SRC\framework\resources\resources.ecf" readonly="false" use_application_options="true"/>
		<library name="services_framework" location="$EIFFEL_SRC\framework\services\services.ecf" readonly="false" use_application_options="true"/>
		<library name="time" location="$ISE_LIBRARY\library\time\time.ecf" readonly="false"/>
		<library name="uuid" location="$ISE_LIBRARY\library\uuid\uuid.ecf" readonly="false"/>
		<library name="wel" location="$ISE_LIBRARY\library\wel\wel.ecf" readonly="false"/>
		<library name="xml_parser" location="$ISE_LIBRARY\library\text\parser\xml\parser\xml_parser.ecf" readonly="false"/>
		<library name="xml_tree" location="$ISE_LIBRARY\library\text\parser\xml\tree\xml_tree.ecf" readonly="false"/>
		<library name="xml_utility" location="$EIFFEL_SRC\framework\xml\utility\xml_utility.ecf" readonly="false"/>
	</target>
	<target name="batch" extends="common">
		<root class="ES" feature="make"/>
		<setting name="check_for_void_target" value="false"/>
		<setting name="exception_trace" value="false"/>
		<setting name="executable_name" value="ecb"/>
		<setting name="inlining_size" value="8"/>
		<setting name="concurrency" value="none"/>
		<variable name="batch_preferences" value="true"/>
		<variable name="batch_framework" value="true"/>
		<library name="compiler_kernel" location="$EIFFEL_SRC\Eiffel\Ace\ec_kernel.ecf" readonly="false" use_application_options="true"/>
		<library name="dotnet_assembly_information" location="$EIFFEL_SRC\dotnet\assembly_info\dotnet_assembly_information.ecf" readonly="false"/>
		<library name="gobo_kernel" location="$ISE_LIBRARY\library\gobo\gobo_kernel.ecf"/>
		<library name="gobo_xml" location="$ISE_LIBRARY\library\gobo\gobo_xml.ecf"/>
		<library name="preferences_reg" location="$ISE_LIBRARY\library\preferences\preferences_reg.ecf" readonly="false">
			<condition>
				<platform value="windows"/>
			</condition>
		</library>
		<library name="preferences_xml" location="$ISE_LIBRARY\library\preferences\preferences_xml.ecf" readonly="false">
			<condition>
				<platform excluded_value="windows"/>
			</condition>
		</library>
		<cluster name="compiler_api_profiler" location="$EIFFEL_SRC\Eiffel\API\profiler\" recursive="true"/>
		<cluster name="compiler_api_ql" location="$EIFFEL_SRC\Eiffel\API\query_language\" recursive="true"/>
		<cluster name="compiler_api_queries" location="$EIFFEL_SRC\Eiffel\API\queries\" recursive="true"/>
		<cluster name="debugger_none" location="$EIFFEL_SRC\Eiffel\debugger_interface\none\" recursive="true"/>
		<cluster name="documentation" location="$EIFFEL_SRC\Eiffel\case\documentation\" recursive="true"/>
		<cluster name="flat_short_ast" location="$EIFFEL_SRC\Eiffel\flat_short\AST\"/>
		<cluster name="flat_short_b" location="$EIFFEL_SRC\Eiffel\flat_short\bench\"/>
		<cluster name="interface" location="$EIFFEL_SRC\Eiffel\interface\">
			<cluster name="interface_shared" location="$|shared\" recursive="true">
				<file_rule>
					<exclude>/buffer$</exclude>
				</file_rule>
			</cluster>
			<cluster name="tty" location="$|tty\" recursive="true"/>
			<cluster name="none" location="$|none\" recursive="true"/>
		</cluster>
	</target>
	<target name="batch_unix" extends="batch">
		<description>Compiling UNIX batch compiler on other platforms than Windows</description>
		<root class="ES" feature="make"/>
		<setting name="platform" value="unix"/>
	</target>
	<target name="eclite" extends="batch">
		<description>Lite version of Eiffel compiler, compiles only. This is primarly for tools that need to use the Eiffel compiler rather than developers</description>
		<root cluster="lite_compiler" class="APPLICATION" feature="make"/>
		<setting name="executable_name" value="ecl"/>
		<library name="arg_parser" location="$ISE_LIBRARY\library\argument_parser\argument_parser.ecf"/>
		<cluster name="lite_compiler" location="$EIFFEL_SRC\Eiffel\interface\lite\" recursive="true"/>
	</target>
	<target name="ecdpc" extends="batch">
		<setting name="executable_name" value="ecdpc"/>
	</target>
	<target name="bench" extends="common">
		<description>Eiffel Studio</description>
		<root class="EB_KERNEL" feature="make"/>
		<option>
			<warning name="once_in_generic" enabled="false"/>
		</option>
		<external_object location="$(EIFFEL_SRC)/C/ipc/ewb/libmtwewb.a">
			<condition>
				<platform excluded_value="windows"/>
				<build value="workbench"/>
			</condition>
		</external_object>
		<external_object location="$(EIFFEL_SRC)/C/ipc/ewb/libmtewb.a">
			<condition>
				<platform excluded_value="windows"/>
				<build value="finalize"/>
			</condition>
		</external_object>
		<external_object location="$(EIFFEL_SRC)/C/ipc/shared/libmtipc.a">
			<condition>
				<platform excluded_value="windows"/>
				<build value="finalize"/>
			</condition>
		</external_object>
		<external_object location="$(EIFFEL_SRC)\C\ipc\ewb\mtwewb.lib">
			<condition>
				<platform value="windows"/>
				<build value="workbench"/>
			</condition>
		</external_object>
		<external_object location="$(EIFFEL_SRC)\C\ipc\ewb\mtewb.lib">
			<condition>
				<platform value="windows"/>
				<build value="finalize"/>
			</condition>
		</external_object>
		<external_object location="$(EIFFEL_SRC)\C\ipc\shared\mtipc.lib">
			<condition>
				<platform value="windows"/>
				<build value="finalize"/>
			</condition>
		</external_object>
		<external_object location="htmlhelp.lib">
			<condition>
				<platform value="windows"/>
			</condition>
		</external_object>
		<variable name="batch_framework" value="false"/>
		<library name="auto_test" location="$EIFFEL_SRC\framework\auto_test\auto_test.ecf" readonly="false"/>
		<library name="com_light" location="$EIFFEL_SRC\framework\com_light\com_light.ecf" readonly="false"/>
		<library name="command_tunnel" location="$EIFFEL_SRC\framework\command_tunnel\command_tunnel.ecf" readonly="false"/>
		<library name="compiler_kernel" location="$EIFFEL_SRC\Eiffel\Ace\ec_kernel.ecf" readonly="false" use_application_options="true"/>
		<library name="configuration_gui" location="$EIFFEL_SRC\framework\configuration\configuration_gui.ecf" readonly="false"/>
		<library name="curl" location="$ISE_LIBRARY\library\cURL\cURL.ecf" readonly="false"/>
		<library name="debugger" location="$EIFFEL_SRC\Eiffel\debugger\debugger.ecf" readonly="false" use_application_options="true"/>
		<library name="diff" location="$ISE_LIBRARY\library\diff\diff.ecf" readonly="false"/>
		<library name="docking" location="$ISE_LIBRARY\library\docking\docking.ecf" readonly="false" use_application_options="true"/>
		<library name="dotnet_assembly_information" location="$EIFFEL_SRC\dotnet\assembly_info\dotnet_assembly_information.ecf" readonly="false" use_application_options="true"/>
		<library name="editor" location="$ISE_LIBRARY\library\editor\editor.ecf" readonly="false"/>
		<library name="fast_ini" location="$EIFFEL_SRC\framework\file_formats\fast_ini\fast_ini.ecf" readonly="false"/>
		<library name="framework_text" location="$EIFFEL_SRC\framework\base\text\text.ecf" readonly="false" use_application_options="true"/>
		<library name="framework_vision2" location="$EIFFEL_SRC\framework\vision2\vision2.ecf" readonly="false">
			<class_option class="ELLIPSIS_PROPERTY">
				<warning name="once_in_generic" enabled="false"/>
			</class_option>
			<class_option class="CHOICE_PROPERTY">
				<warning name="once_in_generic" enabled="false"/>
			</class_option>
		</library>
		<library name="gobo_extension" location="$ISE_LIBRARY\library\gobo_extension\gobo_extension.ecf" readonly="false"/>
		<library name="gobo_kernel" location="$ISE_LIBRARY\library\gobo\gobo_kernel.ecf"/>
		<library name="gobo_lexical" location="$ISE_LIBRARY\library\gobo\gobo_lexical.ecf"/>
		<library name="gobo_structure" location="$ISE_LIBRARY\library\gobo\gobo_structure.ecf"/>
		<library name="gobo_xml" location="$ISE_LIBRARY\library\gobo\gobo_xml.ecf"/>
		<library name="graph" location="$ISE_LIBRARY\library\graph\graph.ecf" readonly="false"/>
		<library name="lex" location="$ISE_LIBRARY\library\lex\lex.ecf" readonly="false"/>
		<library name="memory_analyzer" location="$ISE_LIBRARY\library\memory_analyzer\memory_analyzer.ecf" readonly="false"/>
		<library name="net" location="$ISE_LIBRARY\library\net\net.ecf" readonly="false"/>
		<library name="patterns" location="$ISE_LIBRARY\library\patterns\patterns.ecf" readonly="false"/>
		<library name="preferences_reg" location="$ISE_LIBRARY\library\preferences\preferences_reg.ecf" readonly="false">
			<condition>
				<platform value="windows"/>
			</condition>
		</library>
		<library name="preferences_xml" location="$ISE_LIBRARY\library\preferences\preferences_xml.ecf" readonly="false">
			<condition>
				<platform excluded_value="windows"/>
			</condition>
		</library>
		<library name="tagging" location="$EIFFEL_SRC\framework\tagging\tagging.ecf" readonly="false"/>
		<library name="tagging-ev" location="$EIFFEL_SRC\framework\tagging\ev\tagging-ev.ecf" readonly="false"/>
		<library name="testing_engine" location="$EIFFEL_SRC\framework\testing\testing.ecf" readonly="false"/>
		<library name="testing_library" location="$ISE_LIBRARY\library\testing\testing.ecf" readonly="false"/>
		<library name="thread" location="$ISE_LIBRARY\library\thread\thread.ecf" readonly="false"/>
		<library name="uri_launcher" location="$EIFFEL_SRC\framework\uri_launcher\uri_launcher.ecf"/>
		<library name="vision2" location="$ISE_LIBRARY\library\vision2\vision2.ecf" readonly="false"/>
		<library name="vision2_extension" location="$ISE_LIBRARY\library\vision2_extension\vision2_extension.ecf" readonly="false" use_application_options="true"/>
		<cluster name="compiler_api_profiler" location="$EIFFEL_SRC\Eiffel\API\profiler\" recursive="true"/>
		<cluster name="compiler_api_ql" location="$EIFFEL_SRC\Eiffel\API\query_language\" recursive="true"/>
		<cluster name="compiler_api_queries" location="$EIFFEL_SRC\Eiffel\API\queries\" recursive="true"/>
		<cluster name="compiler_framework" location="$EIFFEL_SRC\Eiffel\API\framework\" recursive="true"/>
		<cluster name="debugger_interface" location="$EIFFEL_SRC\Eiffel\debugger_interface\" recursive="true">
			<file_rule>
				<exclude>/none$</exclude>
				<exclude>/override$</exclude>
			</file_rule>
			<file_rule>
				<exclude>/gtk$</exclude>
				<exclude>/mswin$</exclude>
				<condition>
					<platform value="macintosh"/>
					<custom name="vision_implementation" value="cocoa"/>
				</condition>
			</file_rule>
			<file_rule>
				<exclude>/cocoa$</exclude>
				<exclude>/gtk$</exclude>
				<condition>
					<platform value="windows"/>
				</condition>
			</file_rule>
			<file_rule>
				<exclude>/cocoa$</exclude>
				<exclude>/mswin$</exclude>
				<condition>
					<platform excluded_value="windows"/>
					<custom name="vision_implementation" excluded_value="cocoa"/>
				</condition>
			</file_rule>
		</cluster>
		<cluster name="documentation" location="$EIFFEL_SRC\Eiffel\case\" recursive="true"/>
		<cluster name="flat_short_ast" location="$EIFFEL_SRC\Eiffel\flat_short\AST\"/>
		<cluster name="flat_short_b" location="$EIFFEL_SRC\Eiffel\flat_short\bench\"/>
		<cluster name="interface" location="$EIFFEL_SRC\Eiffel\interface\" recursive="true">
			<file_rule>
				<exclude>/overrides$</exclude>
				<exclude>^/tty$</exclude>
				<exclude>/lite$</exclude>
				<exclude>/preferences$</exclude>
				<exclude>^/none$</exclude>
			</file_rule>
			<file_rule>
				<exclude>/mswin$</exclude>
				<condition>
					<platform excluded_value="windows"/>
				</condition>
			</file_rule>
			<file_rule>
				<exclude>/gtk$</exclude>
				<condition>
					<platform value="windows"/>
				</condition>
			</file_rule>
		</cluster>
		<cluster name="process_gui" location="$ISE_LIBRARY\library\process\gui\" recursive="true"/>
		<cluster name="tty" location="$EIFFEL_SRC\Eiffel\interface\tty\" recursive="true">
			<file_rule>
				<exclude>/eb_diagram_html_generator\.e$</exclude>
				<exclude>/eb_gui_preferences\.e$</exclude>
				<exclude>/dbg_preferences\.e$</exclude>
			</file_rule>
		</cluster>
		<override name="eiffel_override" location="$EIFFEL_SRC\Eiffel\override\" recursive="true"/>
		<override name="graphical_overrides" location="$EIFFEL_SRC\Eiffel\interface\new_graphical\overrides\" recursive="true"/>
	</target>
	<target name="bench_windows" extends="bench">
		<description>Compiling UNIX bench compiler on other platforms than Windows</description>
		<setting name="platform" value="windows"/>
	</target>
	<target name="bench_unix" extends="bench">
		<description>Compiling UNIX bench compiler on other platforms than Unices</description>
		<setting name="platform" value="unix"/>
	</target>
	<target name="bench_cocoa" extends="bench">
		<description>Compile on Mac OS X using the Cocoa framework instead of GTK+</description>
		<variable name="vision_implementation" value="cocoa"/>
	</target>
	<target name="compile_all_bench" extends="bench">
		<root all_classes="true"/>
	</target>
	<target name="compile_all_batch" extends="batch">
		<root all_classes="true"/>
	</target>
	<target name="compile_all_batch_unix" extends="compile_all_batch">
		<setting name="platform" value="unix"/>
	</target>
	<target name="compile_all_bench_unix" extends="compile_all_bench">
		<setting name="platform" value="unix"/>
	</target>
</system>
