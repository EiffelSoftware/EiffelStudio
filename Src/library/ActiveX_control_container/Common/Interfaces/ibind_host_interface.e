note
	description: "Control interfaces. Help file: "
	legal: "See notice at end of class."
	status: "See notice at end of class."
	generator: "Automatically generated by the EiffelCOM Wizard."

deferred class
	IBIND_HOST_INTERFACE

inherit
	ECOM_INTERFACE

feature -- Status Report

	create_moniker_user_precondition (sz_name: STRING; pbc: IBIND_CTX_INTERFACE; ppmk: CELL [IMONIKER_INTERFACE]; dw_reserved: INTEGER): BOOLEAN
			-- User-defined preconditions for `create_moniker'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	moniker_bind_to_storage_user_precondition (pmk: IMONIKER_INTERFACE; pbc: IBIND_CTX_INTERFACE; p_bsc: IBIND_STATUS_CALLBACK_INTERFACE; riid: ECOM_GUID; ppv_obj: CELL [ECOM_INTERFACE]): BOOLEAN
			-- User-defined preconditions for `moniker_bind_to_storage'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	moniker_bind_to_object_user_precondition (pmk: IMONIKER_INTERFACE; pbc: IBIND_CTX_INTERFACE; p_bsc: IBIND_STATUS_CALLBACK_INTERFACE; riid: ECOM_GUID; ppv_obj: CELL [ECOM_INTERFACE]): BOOLEAN
			-- User-defined preconditions for `moniker_bind_to_object'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

feature -- Basic Operations

	create_moniker (sz_name: STRING; pbc: IBIND_CTX_INTERFACE; ppmk: CELL [IMONIKER_INTERFACE]; dw_reserved: INTEGER)
			-- No description available.
			-- `sz_name' [in].  
			-- `pbc' [in].  
			-- `ppmk' [out].  
			-- `dw_reserved' [in].  
		require
			non_void_ppmk: ppmk /= Void
			create_moniker_user_precondition: create_moniker_user_precondition (sz_name, pbc, ppmk, dw_reserved)
		deferred

		ensure
			valid_ppmk: ppmk.item /= Void
		end

	moniker_bind_to_storage (pmk: IMONIKER_INTERFACE; pbc: IBIND_CTX_INTERFACE; p_bsc: IBIND_STATUS_CALLBACK_INTERFACE; riid: ECOM_GUID; ppv_obj: CELL [ECOM_INTERFACE])
			-- No description available.
			-- `pmk' [in].  
			-- `pbc' [in].  
			-- `p_bsc' [in].  
			-- `riid' [in].  
			-- `ppv_obj' [out].  
		require
			non_void_riid: riid /= Void
			valid_riid: riid.item /= default_pointer
			non_void_ppv_obj: ppv_obj /= Void
			moniker_bind_to_storage_user_precondition: moniker_bind_to_storage_user_precondition (pmk, pbc, p_bsc, riid, ppv_obj)
		deferred

		ensure
			valid_ppv_obj: ppv_obj.item /= Void
		end

	moniker_bind_to_object (pmk: IMONIKER_INTERFACE; pbc: IBIND_CTX_INTERFACE; p_bsc: IBIND_STATUS_CALLBACK_INTERFACE; riid: ECOM_GUID; ppv_obj: CELL [ECOM_INTERFACE])
			-- No description available.
			-- `pmk' [in].  
			-- `pbc' [in].  
			-- `p_bsc' [in].  
			-- `riid' [in].  
			-- `ppv_obj' [out].  
		require
			non_void_riid: riid /= Void
			valid_riid: riid.item /= default_pointer
			non_void_ppv_obj: ppv_obj /= Void
			moniker_bind_to_object_user_precondition: moniker_bind_to_object_user_precondition (pmk, pbc, p_bsc, riid, ppv_obj)
		deferred

		ensure
			valid_ppv_obj: ppv_obj.item /= Void
		end

note
	copyright:	"Copyright (c) 1984-2006, Eiffel Software and others"
	license:	"Eiffel Forum License v2 (see http://www.eiffel.com/licensing/forum.txt)"
	source: "[
			 Eiffel Software
			 356 Storke Road, Goleta, CA 93117 USA
			 Telephone 805-685-1006, Fax 805-685-6869
			 Website http://www.eiffel.com
			 Customer support http://support.eiffel.com
		]"




end -- IBIND_HOST_INTERFACE

