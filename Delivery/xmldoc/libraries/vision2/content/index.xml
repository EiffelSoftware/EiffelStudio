<document title="EiffelVision Interface Content">
	<meta_data>
		<help>
			<toc>
				<envision_location>Class Libraries\EiffelVision 2</envision_location>
			</toc>
		</help>
	</meta_data>
	<paragraph>
		<paragraph>  EiffelVision 2 is a platform independent Graphical User Interface  (GUI) library that allows easy, simultaneous development of Windowed  applications for both Windows &amp; Unix based platforms. Heavily  relying on EiffelBase library, EiffelVision 2 has been  designed primarily with ease of use in mind. By reusing EiffelBase  structures, existing, as well as new Eiffel users will find EiffelVision  to be surprising intuitive and easy to use. In no time, users  will be producing good-looking Windowed application skeletons, of which  will run on a multitude of platforms with no manipulation of code. </paragraph>  The EiffelVision 2 library includes the following interface clusters:  
		<list ordered="false">
			<item>A 
				<link>
					<url>00_kernel/index.xml</url>
					<label> kernel</label>
				</link> cluster that includes classes that are key to a  Vision2 application. The main class being 
				<link>
					<url>../reference/ev_application_chart.xml</url>
					<label> EV_APPLICATION</label>
				</link>  which is the main entry point of all Vision2 applications.
			</item>
			<item>A 
				<link>
					<url>10_widgets/index.xml</url>
					<label> widgets</label>
				</link> cluster containing classes that used to  create Vision2 widgets. Widgets are the visible objects  that the user sees and interacts with on the desktop, examples  of widgets are windows, buttons and labels.
			</item>
			<item>An 
				<link>
					<url>20_items/index.xml</url>
					<label> items</label>
				</link> cluster includes the classes needed to create  items, items can be thought of as widgets that are contained  within only a certain type of widget, such as an 
				<link>
					<url>../reference/ev_list_chart.xml</url>
					<label> EV_LIST</label>
				</link> that  may only contain objects of type 
				<link>
					<url>../reference/ev_list_item_chart.xml</url>
					<label>EV_LIST_ITEM</label>
				</link>. Items provide an  abstract way of dealing with an item widget's internal data  structures and provide in many cases the same functionality  that a widget does.
			</item>
			<item>An 
				<link>
					<url>30_events/index.xml</url>
					<label> events</label>
				</link> cluster containing classes that allow for user initiated  events, such as the clicking of a button to be dealt with via the  use of a linked list of agents ( 
				<link>
					<url>../reference/ev_action_sequence_chart.xml</url>
					<label>EV_ACTION_SEQUENCE</label>
				</link>).  Agents can be thought of as an object that encapsulates a  certain procedure. When a user clicks a button on the  screen, the corresponding 
				<link>
					<url>../reference/ev_button_chart.xml</url>
					<label> EV_BUTTON</label>
				</link> object has its associating pointer_button_press_actions fired and this in turn,  fires all of the agents held within, thus calling all of the  procedures represented by the agents. Every widget and  item has a certain number of 
				<link>
					<url>../../base/reference/action_sequence_chart.xml</url>
					<label>ACTION_SEQUENCE</label>
				</link>  objects that are linked  with a certain type of event.
			</item>
			<item>A 
				<link>
					<url>40_properties/index.xml</url>
					<label> properties</label>
				</link> cluster contains classes that allow for the  customization of Vision 2 widgets and items. Classes  such as 
				<link>
					<url>../reference/ev_colorizable_chart.xml</url>
					<label>EV_COLORIZABLE</label>
				</link>  and 
				<link>
					<url>../reference/ev_fontable_chart.xml</url>
					<label>EV_FONTABLE</label>
				</link>  contain routines that allow for color and fonts to be altered  for a widget or item respectively.
			</item>
			<item>A 
				<link>
					<url>50_support/index.xml</url>
					<label> support</label>
				</link> cluster includes classes that provide more  professional touches to an application, whether these are  keyboard shortcuts ( 
				<link>
					<url>../reference/ev_accelerator_list_chart.xml</url>
					<label>EV_ACCELERATOR_LIST</label>
				</link>)  or graphical output ( 
				<link>
					<url>../reference/ev_graphical_format_chart.xml</url>
					<label>EV_GRAPHICAL_FORMAT</label>
				</link>)  for drawable widgets such as 
				<link>
					<url>/libraries/vision2/reference/ev_pixmap_chart.xml</url>
					<label>EV_PIXMAP</label>
				</link>.
			</item>
			<item>A 
				<link>
					<url>60_figures/index.xml</url>
					<label> figures</label>
				</link> cluster that allows for the projection of  two-dimensional shapes (figures) on to an 
				<link>
					<url>../reference/ev_drawable_chart.xml</url>
					<label>EV_DRAWABLE</label>
				</link>  or printer via the use of an 
				<link>
					<url>../reference/ev_projector_chart.xml</url>
					<label>EV_PROJECTOR</label>
				</link>.
			</item>
		</list>
		<paragraph>  To see differences between released versions of EiffelVision, click <link><url>0-_revisions/index.xml</url><label>Here</label></link></paragraph>
	</paragraph></document>
