<document output="envision" title="Explicit Cluster Folders">
	<meta_data>
		<help>
			<toc>
				<envision_title>Explicit Cluster Folders</envision_title>
				<envision_pseudo_name>10</envision_pseudo_name>
			</toc>
			<xml>
				<xmlkeyword>
					<index>K</index>
					<term>Explicit Cluster Folders</term>
				</xmlkeyword>
			</xml>
		</help>
	</meta_data>
	<paragraph>
		<paragraph>
			Explicit cluster folders (<image>
				<url>../../../../../images/icons/cluster.ico</url>
			</image>) are clusters that have been explicitly added to the project. <link><url>cluster_folders.xml</url><label>Cluster folders</label></link> or implicit cluster folders (<image>
				<url>../../../../../images/icons/cluster_folder.ico</url>
			</image>) are those cluster folders that have been added as a result of cluster recursion, set by the <link><anchor_name>include_subdirectories</anchor_name><url>../../../configuring/project_configuration/item_configuration/clusters.xml</url><label>Include Subdirectories</label></link> property of a explicit cluster folder.
		</paragraph>
		
		<anchor>what_is_a_cluster</anchor>
		<heading>
			<size>2</size>
			<content>What is a Cluster?</content>
		</heading>
		<paragraph>
			An cluster is a logical grouping of Eiffel source files (*.e) based on a root location. Every clusters has a <link><anchor_name>path</anchor_name><url>../../../configuring/project_configuration/item_configuration/clusters.xml</url><label>Path</label></link>, which is it's root location. Based on this path EiffelEnvision projects will <link><url>cluster_enumeration.xml</url><label>automatically</label></link> include any located Eiffel source files and, if <link><anchor_name>include_subdirectories</anchor_name><url>../../../configuring/project_configuration/item_configuration/clusters.xml</url><label>including subdirectories</label></link>, will include sub directories and their contained Eiffel source files.
		</paragraph>
		<paragraph>
			The cluster mechanism is employed by the Eiffel for .NET compiler to facilitate the development of large projects (That is not to say it is harder to configure smaller project. EiffelEnvision projects are completely scalable. It's just as simple to manage and configure small project as it is larger projects.) The mechanism uses directories instead of referencing individual files, and permits finer grained compilation configuration through the <link><url>../../../configuring/project_configuration/item_configuration/clusters.xml</url><label>Explicit Cluster Folder Properties</label></link>, which directly affect how the Eiffel for .NET compiler compiles the Eiffel source files contained with the cluster.
		</paragraph>
		
		<anchor>library_status</anchor>
		<heading>
			<size>2</size>
			<content>Library Status</content>
		</heading>
		<paragraph>
			When an explicit cluster folder's <link><anchor_name>cluster_library</anchor_name><url>../../../configuring/project_configuration/item_configuration/clusters.xml</url><label>Cluster Library</label></link> is set to <bold>Yes</bold> explicit cluster folders are shown using the <image>
				<url>../../../../../images/icons/cluster_library.ico</url>
			</image>. In addition a number of the <link><anchor_name>cluster_library</anchor_name><url>../../../configuring/project_configuration/item_configuration/clusters.xml</url><label>Explicit Cluster Folder Properties</label></link> are disabled. The properties are disabled because the Eiffel for .NET compiler will ingore all subsequent changes the explicit cluster folder's configuration once it has been compiled into a project. After all libraries clusters are libraries and are not expected to be modified regularly. 
		</paragraph>
		<paragraph>
			Marking explicit cluster folders as libraries gives a signficant performance gain when <link><url>../../../../compiling_projects/compiling_projects.xml</url><label>Compiling Projects</label></link> because all configuration and file changes are ignored by the compiler and EiffelEnvision.
		</paragraph>
		
		<anchor>missing_clusters</anchor>
		<heading>
			<size>2</size>
			<content>Missing Clusters</content>
		</heading>
		<paragraph>
			EiffelEnvision makes it easy to share projects with other developers by permitting the use of <link><url>../../../configuring/environment_variables.xml</url><label>Environment Variables</label></link>. If you are not using <link><url>../../../configuring/environment_variables.xml</url><label>Environment Variables</label></link> or simply that other developers to not have the same variable defined, clusters may be seen to be missing. Missing clusters are shown with the <image>
				<url>../../../../../images/icons/cluster_missing.ico</url>
			</image> icon or <image>
				<url>../../../../../images/icons/cluster_library_missing.ico</url>
			</image> depending on the explicit cluster folder's <link><anchor_name>library_status</anchor_name><url>explicit_clusters.xml</url><label>Library Status</label></link>. To resolve the missing cluster ammend the <link><anchor_name>path</anchor_name><url>../../../configuring/project_configuration/item_configuration/clusters.xml</url><label>Path</label></link> property.
		</paragraph>
		
		<anchor>adding_item</anchor>
		<heading>
			<size>2</size>
			<content>Adding Items</content>
		</heading>
		<paragraph>
			Explicit cluster folders allow new and existing <link><url>items/file_items.xml</url><label>file</label></link> and <link><url>items/file_items.xml</url><label>Eiffel class</label></link> file items to be added directly underneath them. New <link><url>cluster_folders.xml</url><label>folders</label></link> can also be added and other files and Eiffel class files items added to them. In addition Explicit cluster folder can also have child explicit cluster folders added to them to create a cluster hierarchy intermixed with a file system hierarchy that was <link><url>cluster_enumeration.xml</url><label>automatically enumerated</label></link> based on the cluster's <link><anchor_name>path</anchor_name><url>../../../configuring/project_configuration/item_configuration/clusters.xml</url><label>Path</label></link>. For more information on adding new cluster, see <link><url>../../../configuring/adding_items/adding_clusters.xml</url><label>Adding New Clusters</label></link> and <link><url>cluster_context_menu.xml</url><label>Explicit Cluster Context Menu</label></link>.
			<note>
				<bold>Note</bold>: For all explicit cluster folders under the <link><url>../../eiffel_libraries/eiffel_libraries.xml</url><label>Eiffel Libraries Folder</label></link> only Eiffel source files can been added underneath them. Attempting to add other types of file items will results in an error dialog. Folders and other explicit clusters folder can be added.
			</note>
		</paragraph>
			
		<anchor>context_menu</anchor>
		<heading>
			<size>2</size>
			<content>Context Menu</content>
		</heading>
		<paragraph>
			Explicit cluster folders have their own context menu. See <link><url>cluster_context_menu.xml</url><label>Explicit Cluster Folder Context Menu</label></link> for a detailed rundown of the items that are available.
		</paragraph>
		
		<anchor>also_see</anchor>
		<heading>
			<size>2</size>
			<content>Related Sections</content>
		</heading>
		<seealso>
			<bold>See Also:</bold>
			<line_break/>
			<link><url>index.xml</url><label>Project Items</label></link>
			<line_break/>
			<link><url>../../eiffel_libraries/index.xml</url><label>Eiffel Libraries</label></link>
			<line_break/>
			<link><url>items/eiffel_classes.xml</url><label>Eiffel Class File Items</label></link>
			<line_break/>
			<link><url>../../project.xml</url><label>EiffelEnvision Projects</label></link>
			<line_break/>
<link><url>ms-help//MS.VSCC.2003/MS.MSDNQTR.2003FEB.1033/vsintro7/html/vxurfSolutionExplorerDialog.htm</url><label>Solution Explorer</label></link>
			<line_break/>
			<link><url>../../../configuring/project_configuration/index.xml</url><label>EiffelEnvision Project Configuration</label></link>
			<line_break/>
			<link><url>../../../configuring/item_exclusion.xml</url><label>Including and Excluding Items</label></link>
		</seealso>	
	</paragraph>
</document>
