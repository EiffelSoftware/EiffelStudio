note
	description: "Control interfaces. Help file: "
	legal: "See notice at end of class."
	status: "See notice at end of class."
	generator: "Automatically generated by the EiffelCOM Wizard."

deferred class
	IDOC_HOST_UIHANDLER_INTERFACE

inherit
	ECOM_INTERFACE

feature -- Status Report

	show_context_menu_user_precondition (dw_id: INTEGER; ppt: TAG_POINT_RECORD; pcmdt_reserved: ECOM_INTERFACE; pdisp_reserved: ECOM_INTERFACE): BOOLEAN
			-- User-defined preconditions for `show_context_menu'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	get_host_info_user_precondition (p_info: X_DOCHOSTUIINFO_RECORD): BOOLEAN
			-- User-defined preconditions for `get_host_info'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	show_ui_user_precondition (dw_id: INTEGER; p_active_object: IOLE_IN_PLACE_ACTIVE_OBJECT_INTERFACE; p_command_target: IOLE_COMMAND_TARGET_INTERFACE; p_frame: IOLE_IN_PLACE_FRAME_INTERFACE; p_doc: IOLE_IN_PLACE_UIWINDOW_INTERFACE): BOOLEAN
			-- User-defined preconditions for `show_ui'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	hide_ui_user_precondition: BOOLEAN
			-- User-defined preconditions for `hide_ui'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	update_ui_user_precondition: BOOLEAN
			-- User-defined preconditions for `update_ui'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	enable_modeless_user_precondition (f_enable: INTEGER): BOOLEAN
			-- User-defined preconditions for `enable_modeless'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	on_doc_window_activate_user_precondition (f_activate: INTEGER): BOOLEAN
			-- User-defined preconditions for `on_doc_window_activate'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	on_frame_window_activate_user_precondition (f_activate: INTEGER): BOOLEAN
			-- User-defined preconditions for `on_frame_window_activate'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	resize_border_user_precondition (prc_border: TAG_RECT_RECORD; p_uiwindow: IOLE_IN_PLACE_UIWINDOW_INTERFACE; f_rame_window: INTEGER): BOOLEAN
			-- User-defined preconditions for `resize_border'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	translate_accelerator_user_precondition (lpmsg: TAG_MSG_RECORD; pguid_cmd_group: ECOM_GUID; n_cmd_id: INTEGER): BOOLEAN
			-- User-defined preconditions for `translate_accelerator'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	get_option_key_path_user_precondition (pch_key: CELL [STRING]; dw: INTEGER): BOOLEAN
			-- User-defined preconditions for `get_option_key_path'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	get_drop_target_user_precondition (p_drop_target: IDROP_TARGET_INTERFACE; pp_drop_target: CELL [IDROP_TARGET_INTERFACE]): BOOLEAN
			-- User-defined preconditions for `get_drop_target'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	get_external_user_precondition (pp_dispatch: CELL [ECOM_INTERFACE]): BOOLEAN
			-- User-defined preconditions for `get_external'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	translate_url_user_precondition (dw_translate: INTEGER; pch_urlin: STRING; ppch_urlout: CELL [STRING]): BOOLEAN
			-- User-defined preconditions for `translate_url'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

	filter_data_object_user_precondition (p_do: IDATA_OBJECT_INTERFACE; pp_doret: CELL [IDATA_OBJECT_INTERFACE]): BOOLEAN
			-- User-defined preconditions for `filter_data_object'.
			-- Redefine in descendants if needed.
		do
			Result := True
		end

feature -- Basic Operations

	show_context_menu (dw_id: INTEGER; ppt: TAG_POINT_RECORD; pcmdt_reserved: ECOM_INTERFACE; pdisp_reserved: ECOM_INTERFACE)
			-- No description available.
			-- `dw_id' [in].  
			-- `ppt' [in].  
			-- `pcmdt_reserved' [in].  
			-- `pdisp_reserved' [in].  
		require
			non_void_ppt: ppt /= Void
			valid_ppt: ppt.item /= default_pointer
			show_context_menu_user_precondition: show_context_menu_user_precondition (dw_id, ppt, pcmdt_reserved, pdisp_reserved)
		deferred

		end

	get_host_info (p_info: X_DOCHOSTUIINFO_RECORD)
			-- No description available.
			-- `p_info' [in, out].  
		require
			non_void_p_info: p_info /= Void
			valid_p_info: p_info.item /= default_pointer
			get_host_info_user_precondition: get_host_info_user_precondition (p_info)
		deferred

		end

	show_ui (dw_id: INTEGER; p_active_object: IOLE_IN_PLACE_ACTIVE_OBJECT_INTERFACE; p_command_target: IOLE_COMMAND_TARGET_INTERFACE; p_frame: IOLE_IN_PLACE_FRAME_INTERFACE; p_doc: IOLE_IN_PLACE_UIWINDOW_INTERFACE)
			-- No description available.
			-- `dw_id' [in].  
			-- `p_active_object' [in].  
			-- `p_command_target' [in].  
			-- `p_frame' [in].  
			-- `p_doc' [in].  
		require
			show_ui_user_precondition: show_ui_user_precondition (dw_id, p_active_object, p_command_target, p_frame, p_doc)
		deferred

		end

	hide_ui
			-- No description available.
		require
			hide_ui_user_precondition: hide_ui_user_precondition
		deferred

		end

	update_ui
			-- No description available.
		require
			update_ui_user_precondition: update_ui_user_precondition
		deferred

		end

	enable_modeless (f_enable: INTEGER)
			-- No description available.
			-- `f_enable' [in].  
		require
			enable_modeless_user_precondition: enable_modeless_user_precondition (f_enable)
		deferred

		end

	on_doc_window_activate (f_activate: INTEGER)
			-- No description available.
			-- `f_activate' [in].  
		require
			on_doc_window_activate_user_precondition: on_doc_window_activate_user_precondition (f_activate)
		deferred

		end

	on_frame_window_activate (f_activate: INTEGER)
			-- No description available.
			-- `f_activate' [in].  
		require
			on_frame_window_activate_user_precondition: on_frame_window_activate_user_precondition (f_activate)
		deferred

		end

	resize_border (prc_border: TAG_RECT_RECORD; p_uiwindow: IOLE_IN_PLACE_UIWINDOW_INTERFACE; f_rame_window: INTEGER)
			-- No description available.
			-- `prc_border' [in].  
			-- `p_uiwindow' [in].  
			-- `f_rame_window' [in].  
		require
			non_void_prc_border: prc_border /= Void
			valid_prc_border: prc_border.item /= default_pointer
			resize_border_user_precondition: resize_border_user_precondition (prc_border, p_uiwindow, f_rame_window)
		deferred

		end

	translate_accelerator (lpmsg: TAG_MSG_RECORD; pguid_cmd_group: ECOM_GUID; n_cmd_id: INTEGER)
			-- No description available.
			-- `lpmsg' [in].  
			-- `pguid_cmd_group' [in].  
			-- `n_cmd_id' [in].  
		require
			non_void_lpmsg: lpmsg /= Void
			valid_lpmsg: lpmsg.item /= default_pointer
			non_void_pguid_cmd_group: pguid_cmd_group /= Void
			valid_pguid_cmd_group: pguid_cmd_group.item /= default_pointer
			translate_accelerator_user_precondition: translate_accelerator_user_precondition (lpmsg, pguid_cmd_group, n_cmd_id)
		deferred

		end

	get_option_key_path (pch_key: CELL [STRING]; dw: INTEGER)
			-- No description available.
			-- `pch_key' [out].  
			-- `dw' [in].  
		require
			non_void_pch_key: pch_key /= Void
			get_option_key_path_user_precondition: get_option_key_path_user_precondition (pch_key, dw)
		deferred

		end

	get_drop_target (p_drop_target: IDROP_TARGET_INTERFACE; pp_drop_target: CELL [IDROP_TARGET_INTERFACE])
			-- No description available.
			-- `p_drop_target' [in].  
			-- `pp_drop_target' [out].  
		require
			non_void_pp_drop_target: pp_drop_target /= Void
			get_drop_target_user_precondition: get_drop_target_user_precondition (p_drop_target, pp_drop_target)
		deferred

		ensure
			valid_pp_drop_target: pp_drop_target.item /= Void
		end

	get_external (pp_dispatch: CELL [ECOM_INTERFACE])
			-- No description available.
			-- `pp_dispatch' [out].  
		require
			non_void_pp_dispatch: pp_dispatch /= Void
			get_external_user_precondition: get_external_user_precondition (pp_dispatch)
		deferred

		ensure
			valid_pp_dispatch: pp_dispatch.item /= Void
		end

	translate_url (dw_translate: INTEGER; pch_urlin: STRING; ppch_urlout: CELL [STRING])
			-- No description available.
			-- `dw_translate' [in].  
			-- `pch_urlin' [in].  
			-- `ppch_urlout' [out].  
		require
			non_void_pch_urlin: pch_urlin /= Void
			non_void_ppch_urlout: ppch_urlout /= Void
			translate_url_user_precondition: translate_url_user_precondition (dw_translate, pch_urlin, ppch_urlout)
		deferred

		ensure
			valid_ppch_urlout: ppch_urlout.item /= Void
		end

	filter_data_object (p_do: IDATA_OBJECT_INTERFACE; pp_doret: CELL [IDATA_OBJECT_INTERFACE])
			-- No description available.
			-- `p_do' [in].  
			-- `pp_doret' [out].  
		require
			non_void_pp_doret: pp_doret /= Void
			filter_data_object_user_precondition: filter_data_object_user_precondition (p_do, pp_doret)
		deferred

		ensure
			valid_pp_doret: pp_doret.item /= Void
		end

note
	copyright:	"Copyright (c) 1984-2006, Eiffel Software and others"
	license:	"Eiffel Forum License v2 (see http://www.eiffel.com/licensing/forum.txt)"
	source: "[
			 Eiffel Software
			 356 Storke Road, Goleta, CA 93117 USA
			 Telephone 805-685-1006, Fax 805-685-6869
			 Website http://www.eiffel.com
			 Customer support http://support.eiffel.com
		]"




end -- IDOC_HOST_UIHANDLER_INTERFACE

