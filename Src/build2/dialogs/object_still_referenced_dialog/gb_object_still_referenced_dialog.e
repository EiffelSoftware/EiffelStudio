indexing
	description: "Objects that represent an EV_DIALOG.%
		%The original version of this class was generated by EiffelBuild."
	date: "$Date$"
	revision: "$Revision$"

class
	GB_OBJECT_STILL_REFERENCED_DIALOG

inherit
	GB_OBJECT_STILL_REFERENCED_DIALOG_IMP
		redefine
			destroy
		end

	GB_CONSTANTS
		export
			{NONE} all
		undefine
			default_create, copy, is_equal
		end

create
	make_with_object

feature {NONE} -- Initialization

	components: GB_INTERNAL_COMPONENTS
		-- Access to a set of internal components for an EiffelBuild instance.

	make_with_object (an_object: GB_OBJECT; a_components: GB_INTERNAL_COMPONENTS) is
			-- Create `Current' and associate `an_object'.
		require
			an_object_not_void: an_object /= Void
		do
			components := a_components
			object := an_object
			default_create
			object.instance_referers.start
			if an_object.instance_referers.count = 1 then
				error_label.set_text (cannot_delete_as_still_referenced_single + cannot_delete_as_still_referenced_part2)
			else
				error_label.set_text (cannot_delete_as_still_referenced_multiple + cannot_delete_as_still_referenced_part2)
			end
		end

	user_initialization is
			-- called by `initialize'.
			-- Any custom user initialization that
			-- could not be performed in `initialize',
			-- (due to regeneration of implementation class)
			-- can be added here.
		local
			pixmap: EV_PIXMAP
		do
			pixmap := (create {EV_STOCK_PIXMAPS}).warning_pixmap.twin
			pixmap.set_minimum_size (pixmap.width, pixmap.height)
			pixmap_cell.extend (pixmap)
			set_default_push_button (flatten_all_instances_button)
			set_default_cancel_button (cancel_button)
			set_icon_pixmap (icon_build_window_color_png)
		ensure then
			pixmap_cell_full: pixmap_cell.full
		end

feature {NONE} -- Implementation

	object: GB_OBJECT
		-- Object to which `Current' references.

	flatten_all_instances is
			-- Called by `select_actions' of `flatten_all_instances_button'.
		local
			command_flatten: GB_COMMAND_FLATTEN_OBJECT
			current_object: GB_OBJECT
			linear_rep: ARRAYED_LIST [INTEGER]
		do
			linear_rep := object.instance_referers.linear_representation
			from
				linear_rep.start
			until
				linear_rep.off
			loop
				current_object := components.object_handler.deep_object_from_id (linear_rep.item)
				if not components.object_handler.deleted_objects.has (current_object.id) then
					create command_flatten.make (current_object, False, components)
					command_flatten.execute
				end
				linear_rep.forth
			end
			destroy
		end

	cancel_selected is
			-- Called by `select_actions' of `cancel_button'.
		do
			destroy
		end

	destroy is
			-- Destroy `Current'.
		do
			is_destroying := True
			Precursor {GB_OBJECT_STILL_REFERENCED_DIALOG_IMP}
		ensure then
			is_destroying: is_destroying
		end

	is_destroying: BOOLEAN
		-- Is `Current' in the process of destroying?

invariant
	object_not_void: object /= Void
	object_has_instance_referers: not is_destroying implies not object.instance_referers.is_empty

end -- class GB_OBJECT_STILL_REFERENCED_DIALOG

