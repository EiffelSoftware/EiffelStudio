
--| Copyright (c) 1993-2006 University of Southern California and contributors.
--| All rights reserved.
--| Your use of this work is governed under the terms of the GNU General
--| Public License version 2.

-- This is a test control file

test_name 	freeze-const-freeze-finalize
test_description After initial compilation where the system is frozen, a class that prints the value of a boolean constant, which is False, works correctly.  When the constant value is changed to True and system refrozen, the correct value is still printed.  Then the system is finalized and execution prints False.  Similar problem for reals and doubles.

copy_sub 	Ace $TEST Ace
define		VAL1  False
define		VAL2  0.0
define		VAL3  0.0
copy_sub 	test.e $CLUSTER test.e
compile_frozen
compile_result 	ok

c_compile_work
c_compile_result ok

execute_work 	NONE exec_output1
execute_result 	ok
compare		exec_output1 output1

define		VAL1  True
define		VAL2  47.0
define		VAL3  29.0
copy_sub 	test.e $CLUSTER test.e
compile_frozen
compile_result 	ok

c_compile_work
c_compile_result ok

execute_work 	NONE exec_output2
execute_result 	ok
compare		exec_output2 output2

compile_final
compile_result 	ok

c_compile_final
c_compile_result ok

execute_final 	NONE exec_output3
execute_result 	ok
compare		exec_output3 output2

test_end
