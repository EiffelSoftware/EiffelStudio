<document title="Eiffel for .NET" output="envision">
	<meta_data>
		<help>
			<toc>
				<envision_pseudo_name>20</envision_pseudo_name>
			</toc>
		</help>
	</meta_data>
	<paragraph>
		<paragraph>These pages contain documentation that describes the Eiffel programming language.</paragraph>
		<paragraph>Eiffel is considered both a development methodology and a programming language.</paragraph>
		<paragraph>Eiffel the methodology is a recipe for constructing quality software which is based on a small number of powerful concepts. Eiffel the programming language is a notation which is designed to support the methodology.</paragraph>
		<paragraph>Eiffel for .NET is the Eiffel programming language made available in the .NET environment. Eiffel for .NET components can use and inherit from components in .NET assemblies that were produced using other .NET languages. And, programmers using other .NET languages can use and inherit from components in assemblies produced using Eiffel for .NET.</paragraph>
		<heading>
			<size>2</size>Eiffel for .NET Conventions Documentation
		</heading>
		<paragraph>In Eiffel, as in other languages, certain conventions have evolved which constitute "the way things are done". Conventions provide consistency and therefore predictability and readability of software text.</paragraph>
		<paragraph>When working in the .NET components, particularly when using components from .NET assemblies delivered from Microsoft or produced by other parties, the conventions of Eiffel are maintained in the view of these components. The first section, titled
			<link>
				<url>\20_Language\10_Eiffel_NET\10_Conventions.xml</url>
				<label>  Conventions</label>
			</link>, provides you with an understanding of Eiffel terminology, conventions , and how they work with .NET.
		</paragraph>
		<paragraph>The remaining sections of this section are a reference for the Eiffel for .NET language. It is not a complete reference, though. Rather, it is intended to help you with the tasks that Eiffel programmers commonly encounter.</paragraph>
		<list ordered="false">
			<item>
				<link>
					<url>\20_Language\10_Eiffel_NET\20_Eiffel_Classes.xml</url>
					<label>Eiffel Classes</label>
				</link>
			</item>
			<item>
				<link>
					<url>\20_Language\10_Eiffel_NET\30_Adding_Class_Features.xml</url>
					<label>Adding Class  Features</label>
				</link>
			</item>
			<item>
				<link>
					<url>\20_Language\10_Eiffel_NET\40_Inheritance.xml</url>
					<label>Inheritance</label>
				</link>
			</item>
			<item>
				<link>
					<url>\20_Language\10_Eiffel_NET\50_Genericity.xml</url>
					<label>Genericity</label>
				</link>
			</item>
			<item>
				<link>
					<url>\20_Language\10_Eiffel_NET\60_Design_By_Contract.xml</url>
					<label>Design by Contract</label>
				</link>
			</item>
			<item>
				<link>
					<url>\20_Language\10_Eiffel_NET\70_Exception_Mechanism.xml</url>
					<label>Exception Mechanism</label>
				</link>
			</item>
			<item>
				<link>
					<url>\20_Language\10_Eiffel_NET\80_Event_Programming_With_Agents.xml</url>
					<label>Event  Programming with Agents</label>
				</link>
			</item>
			<item>
				<link>
					<url>\20_Language\10_Eiffel_NET\90_Using_Referenced_Assemblies.xml</url>
					<label>Using  Referenced Assemblies</label>
				</link>
			</item>
		</list>
		<paragraph>
			<help_link>
				<tab_index>0</tab_index>
				<keywords>Eiffel reserved keywords</keywords>
				<index_moniker>!DefaultAssociativeIndex</index_moniker>&gt;
			</help_link>
		</paragraph>
	</paragraph></document>