note
	description: "Implemented `IEnumWorkItems' interface."
	generator: "Automatically generated by the EiffelCOM Wizard."

class
	IENUM_WORK_ITEMS_IMPL_STUB

inherit
	IENUM_WORK_ITEMS_INTERFACE

	ECOM_STUB

feature -- Basic Operations

	next (celt: INTEGER; rgpwsz_names: CELL [CELL [STRING]]; pcelt_fetched: INTEGER_REF)
			-- Retrieves the next set of tasks in the enumeration sequence.
			-- `celt' [in].  
			-- `rgpwsz_names' [out].  
			-- `pcelt_fetched' [out].  
		do
			-- Put Implementation here.
		end

	skip (celt: INTEGER)
			-- Skips the next set of tasks in the enumeration sequence.
			-- `celt' [in].  
		do
			-- Put Implementation here.
		end

	reset
			-- Resets the enumeration sequence to the beginning. 
		do
			-- Put Implementation here.
		end

	clone1 (pp_enum_work_items: CELL [IENUM_WORK_ITEMS_INTERFACE])
			-- Creates a new enumeration object in the same state as the current enumeration object: the new object points to the same place in the enumeration sequence.
			-- `pp_enum_work_items' [out].  
		do
			-- Put Implementation here.
		end

	create_item
			-- Initialize `item'
		do
			item := ccom_create_item (Current)
		end

feature {NONE}  -- Externals

	ccom_create_item (eif_object: IENUM_WORK_ITEMS_IMPL_STUB): POINTER
			-- Initialize `item'
		external
			"C++ [new ecom_MS_TaskSched_lib::IEnumWorkItems_impl_stub %"ecom_MS_TaskSched_lib_IEnumWorkItems_impl_stub.h%"](EIF_OBJECT)"
		end

end -- IENUM_WORK_ITEMS_IMPL_STUB


