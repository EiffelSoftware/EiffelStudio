/*-----------------------------------------------------------
"Automatically generated by the EiffelCOM Wizard."Added Record __MIDL_IAdviseSink_0002
	hGeneric: Pointed Type
			-- No description available.
	hPalette: Pointed Type
			-- No description available.
	hBitmap: Pointed Type
			-- No description available.
	
-----------------------------------------------------------*/

#ifndef __ECOM_CONTROL_LIBRARY___MIDL_IADVISESINK_0002_S_IMPL_H__
#define __ECOM_CONTROL_LIBRARY___MIDL_IADVISESINK_0002_S_IMPL_H__

#include "eif_com.h"

#include "eif_eiffel.h"

#include "ecom_control_library___MIDL_IAdviseSink_0002_s.h"

#include "ecom_control_library__userHGLOBAL_s.h"

#include "ecom_control_library__userHPALETTE_s.h"

#include "ecom_control_library__userHBITMAP_s.h"

#include "ecom_grt_globals_control_interfaces2.h"

#ifdef __cplusplus
extern "C" {
#endif



#ifdef __cplusplus

#define ccom_x__midl_iadvise_sink_0002_h_generic(_ptr_) (EIF_REFERENCE)(grt_ce_control_interfaces2.ccom_ce_pointed_record_21 (((ecom_control_library::__MIDL_IAdviseSink_0002 *)_ptr_)->hGeneric))

#define ccom_x__midl_iadvise_sink_0002_set_h_generic(_ptr_, _field_) ((((ecom_control_library::__MIDL_IAdviseSink_0002 *)_ptr_)->hGeneric) = (ecom_control_library::_userHGLOBAL *)_field_)

#define ccom_x__midl_iadvise_sink_0002_h_palette(_ptr_) (EIF_REFERENCE)(grt_ce_control_interfaces2.ccom_ce_pointed_record_38 (((ecom_control_library::__MIDL_IAdviseSink_0002 *)_ptr_)->hPalette))

#define ccom_x__midl_iadvise_sink_0002_set_h_palette(_ptr_, _field_) ((((ecom_control_library::__MIDL_IAdviseSink_0002 *)_ptr_)->hPalette) = (ecom_control_library::_userHPALETTE *)_field_)

#define ccom_x__midl_iadvise_sink_0002_h_bitmap(_ptr_) (EIF_REFERENCE)(grt_ce_control_interfaces2.ccom_ce_pointed_record_40 (((ecom_control_library::__MIDL_IAdviseSink_0002 *)_ptr_)->hBitmap))

#define ccom_x__midl_iadvise_sink_0002_set_h_bitmap(_ptr_, _field_) ((((ecom_control_library::__MIDL_IAdviseSink_0002 *)_ptr_)->hBitmap) = (ecom_control_library::_userHBITMAP *)_field_)

#endif
#ifdef __cplusplus
}
#endif

#endif