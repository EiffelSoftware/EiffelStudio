?RCS: $Id: pidtype.U 78389 2004-11-30 00:17:17Z manus $
?RCS:
?RCS: Copyright (c) 1991-1993, Raphael Manfredi
?RCS: 
?RCS: You may redistribute only under the terms of the Artistic Licence,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic Licence; a copy of which may be found at the root
?RCS: of the source tree for dist 3.0.
?RCS:
?RCS: $Log$
?RCS: Revision 1.1  2004/11/30 00:17:18  manus
?RCS: Initial revision
?RCS:
?RCS: Revision 3.0.1.1  1994/08/29  16:31:27  ram
?RCS: patch32: now uses new Typedef unit to compute type information
?RCS:
?RCS: Revision 3.0  1993/08/18  12:09:33  ram
?RCS: Baseline for dist 3.0 netwide release.
?RCS:
?MAKE:pidtype: Myread Typedef
?MAKE:	-pick add $@ %<
?S:pidtype:
?S:	This variable defines PIDTYPE to be something like pid_t, int, 
?S:	ushort, or whatever type is used to declare process ids in the kernel.
?S:.
?C:Pid_t (PIDTYPE):
?C:	This symbol holds the type used to declare process ids in the kernel.
?C:	It can be int, uint, pid_t, etc... It may be necessary to include
?C:	<sys/types.h> to get any typedef'ed information.
?C:.
?H:#define Pid_t $pidtype		/* PID type */
?H:.
: see what type pids are declared as in the kernel
set pid_t pidtype int stdio.h sys/types.h
eval $typedef
dflt="$pidtype"
echo " "
rp="What type are process ids on this system declared as?"
. ./myread
pidtype="$ans"

