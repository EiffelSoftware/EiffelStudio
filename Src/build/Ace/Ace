system ebuild

root

	ebuild_motif (root_cluster): "make"
	--ebuild_windows (root_cluster): "make"

default

	assertion (require);
	--exception_stack_managed(yes);
	--fail_on_rescue (yes);
	--debug("MERGER");
	--debug("RESOURCES");
	--debug("TRANSPORT");
	--debug("STORER_CHECK");
	--debug("STORER");
	--precompiled ("$LOCAL_PRECOMPILE");

cluster

	root_cluster:	"$BUILD/Main";

	catalog:		"$BUILD/Catalog";
	catalog_commands: "$BUILD/Catalog/Commands";

	utility:		"$BUILD/Utility";
	constants:		"$BUILD/Constants";
	shared:			"$BUILD/Shared";
	icon:			"$BUILD/Icon";
	resources:		"$BUILD/resources";
	structures:		"$BUILD/Structures";
	windows:		"$BUILD/Windows";
	windowMgr:		"$BUILD/WindowMgr";

	storage_command:"$BUILD/Storage/Command";
	storage_context:"$BUILD/Storage/Context";
	storage_control:"$BUILD/Storage/Control";
	storage_function:"$BUILD/Storage/Function";
	storage_app:	"$BUILD/Storage/Application";

	generation:		"$BUILD/Generation";

	transporter:	"$BUILD/Transport";

	context_commands:   "$BUILD/Context/Commands";
	context_editor:	 	"$BUILD/Context/Editor";
	context_catalog: 	"$BUILD/Context/Catalog";
	context_widgets:	"$BUILD/Context/Widgets";
	context_newWidgets: "$BUILD/Context/NewWidgets";
	context_tree:	   	"$BUILD/Context/Tree";

	app_control:		"$BUILD/Application/Control";
	app_commands:	   	"$BUILD/Application/Commands";

	event:			  	"$BUILD/Event";

	function_commands:  "$BUILD/Function/Commands";
	function_editor:	"$BUILD/Function/Editor";
	function_functions: "$BUILD/Function/Functions";
	function_holes:	 	"$BUILD/Function/Holes";
	function_stones:	"$BUILD/Function/Stones";
	function_iconbox:   "$BUILD/Function/IconBox";

	command_catalog:	"$BUILD/Command/Catalog";
	command_commands:   "$BUILD/Command/Commands";
	command_editor:	 	"$BUILD/Command/Editor";
	command_predef:	 	"$BUILD/Command/Predef";
	command_stone:	  	"$BUILD/Command/Stones";
	command_instance:   "$BUILD/Command/Instance";

	liman_common:	   	"$BUILD/liman/common";
	liman_build:		"$BUILD/liman/build";

	merger:		 	"$BUILD/merger";
	rescue_info: 	"$BUILD/eiffel/rescue";
	expressions: 	"$BUILD/eiffel/AST/expressions";
	instructions:	"$BUILD/eiffel/AST/instructions";
	skeleton:   	"$BUILD/eiffel/AST/skeleton";
	stonables:  	"$BUILD/eiffel/AST/stonables";
	special_ast:	"$BUILD/eiffel/AST/special_ast";
	eiffel_const:   "$BUILD/eiffel/const";
	eiffel_error:   "$BUILD/eiffel/error";
	flatshort: 		"$BUILD/eiffel/flat_short";
	eiffel_shared:  "$BUILD/eiffel/shared";
	eiffel_clicking:"$BUILD/eiffel/shared/clicking";
	structure_text: "$BUILD/eiffel/structured_text";
	yacc:   		"$BUILD/eiffel/yacc";

-- libraries

	kernel:			"$EIFFEL3/library/base/kernel";
	support:		"$EIFFEL3/library/base/support";
	access:			"$EIFFEL3/library/base/structures/access";
	cursors:		"$EIFFEL3/library/base/structures/cursors";
	dispenser:		"$EIFFEL3/library/base/structures/dispenser";
	list:			"$EIFFEL3/library/base/structures/list";
	set:			"$EIFFEL3/library/base/structures/set";
	sort:			"$EIFFEL3/library/base/structures/sort";
	storage:		"$EIFFEL3/library/base/structures/storage";
	traversing:		"$EIFFEL3/library/base/structures/traversing";
	table:			"$EIFFEL3/library/base/structures/table";
	tree:		   "$EIFFEL3/library/base/structures/tree";

	graph_kernel:	"$EIFFEL3/library/vision/oui/kernel";
	graph_commands:	"$EIFFEL3/library/vision/oui/commands";
	graph_oui: 		"$EIFFEL3/library/vision/oui/widgets";
	graph_tools:	"$EIFFEL3/library/vision/tools";
	graph_X:		"$EIFFEL3/library/vision/implement/X";
	graph_toolkit:	"$EIFFEL3/library/vision/implement/toolkit";
	graph_resources:"$EIFFEL3/library/vision/implement/motif/Resources";
	graph_widgets:	"$EIFFEL3/library/vision/implement/motif/widgets";
	graph_figures:	"$EIFFEL3/library/vision/figures";

external

	object:
		"$(EIFFEL3)/library/vision/spec/$(PLATFORM)/lib/Xt.a";
		"$(EIFFEL3)/library/vision/spec/$(PLATFORM)/lib/motif_Clib.a";
		"$(BENCH)/C/parsing/eiffel/libweiffel.a"; 
		"$(BENCH)/C/parsing/lace/liblace.a";
		"$(BENCH)/C/parsing/shared/libparsing.a";
		"-L/usr/lib/Motif1.2 -lXm -L/usr/lib/X11R5 -lXt -lX11"

end
