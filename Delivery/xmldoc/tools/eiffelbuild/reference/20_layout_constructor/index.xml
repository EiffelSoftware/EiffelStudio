<document title="Layout constructor">
	<meta_data>
		<help>
			<toc>
				<envision_pseudo_name>10</envision_pseudo_name>
				<envision_location>Eiffel ENViSioN!\Developing with Eiffel ENViSioN!\Adding a New Project\Advanced GUI Project Wizard\Interface Construction Page\Reference</envision_location>
			</toc>
		</help>
	</meta_data>
	<paragraph>
		<paragraph>The layout constructor provides a view of the 
			<link>
				<url>/tools/eiffelbuild/reference/02_notation.xml</url><anchor_name>object</anchor_name>
				<label>objects</label>
			</link> you have defined in your system, in which the 
			<link>
				<url>/tools/eiffelbuild/reference/02_notation.xml</url><anchor_name>object</anchor_name>
				<label>objects</label>
			</link> may be manipulated. The root node of the tree is the object currently selected within the <link><url>../64_widget_selector/index.xml</url><label>widget selector</label></link> and objects may be added/moved within the displayed widget structure by picking and dropping the  objects as required. For example, in the screenshot below, you could add another list to the vertical box, by picking a list from the <link>
					<url>/tools/eiffelbuild/reference/30_type_selector/index.xml</url>
					<label>type selector</label>
				</link> and dropping it on the vertical box object.
		</paragraph>
		<paragraph>
			<image>
				<url>/images/eiffelbuild/screenshots/layout_constructor.png</url>
			</image>
		</paragraph>
		<paragraph>Each item in the tree represents one object. The screenshot above represents the following 
			<link>
				<url>/libraries/vision2/00_introduction.xml</url>
				<label>EiffelVision2</label>
			</link> interface definition - An EV_TITLED_WINDOW containing one child, of type EV_VERTICAL_BOX. Within the vertical box there is an EV_HORIZONTAL_BOX and an EV_LIST. The list is empty, but the horizontal box contains three different objects of type EV_BUTTON.
		</paragraph><note><bold>Note</bold>: The widget  displayed as the root of the Layout Constructor is the currently selected object in the <link><url>../64_widget_selector/index.xml</url><label>Widget Selector</label></link>. To edit the contents of a different widget, select the widget you wish to manipulate from the <link><url>../64_widget_selector/index.xml</url><label>widget selector</label></link>.
</note>
		<paragraph>The information displayed, only shows you the structure of the 
			<link>
				<url>/tools/eiffelbuild/reference/02_notation.xml</url><anchor_name>object</anchor_name>
				<label>objects</label>
			</link>, and although it gives you an indication of the final appearance of the interface you are building, you cannot see the details of the interface. i.e. color, sizes, tool tips etc. To view an accurate representation of the widget structure you are building, show the  <link>
					<url>/tools/eiffelbuild/reference/50_layout_window/index.xml</url>
					<label>Layout window</label>
				</link>.
		</paragraph>
		<paragraph>All 
			<link>
				<url>/tools/eiffelbuild/reference/02_notation.xml</url><anchor_name>object</anchor_name>
				<label>objects</label>
			</link> displayed in the Layout Constructure  are 
			<link>
				<url>/tools/eiffelbuild/reference/02_notation.xml</url><anchor_name>pick_and_drop</anchor_name>
				<label>pickable</label>
			</link>, so can be easily manipulated, e.g. 
			<link>
				<url>/tools/eiffelbuild/how_to_s/30_delete_an_object/index.xml</url>
				<label>deleted</label>
			</link> or 
			<link>
				<url>/tools/eiffelbuild/how_to_s/50_reparent_an_object/index.xml</url>
				<label>reparented</label>
			</link>.
		</paragraph>
		<note>
			<bold>Note</bold>: If the 
			<link>
				<url>/tools/eiffelbuild/reference/02_notation.xml</url><anchor_name>object</anchor_name>
				<label>object</label>
			</link> in the tree has the 
			<bold>Name</bold> property set, then the text corresponds to the name, otherwise, the text is the type of the 
			<link>
				<url>/tools/eiffelbuild/reference/02_notation.xml</url><anchor_name>object</anchor_name>
				<label>object</label>
			</link>.
		</note>
		<paragraph>If you have just started a new project, then the layout constructor will only contain one tree item, TITLED_WINDOW.
		<heading>
				<size>2</size>Selection</heading>
				<paragraph>
				The currently selected object within the Layout Constructor is automatically targetted to the docked <link>
					<url>/tools/eiffelbuild/reference/40_object_editor/index.xml</url>
					<label>object editor</label>
				</link> which is situated to the right hand side of the main EiffelBuild Window. This enables you to quickly and easily edit the properties of the selected object. Note that Ctrl-right clicking on an object in the Layout Constructor displays a floating <link>
					<url>/tools/eiffelbuild/reference/40_object_editor/index.xml</url>
					<label>object editor</label>
				</link> targeted to that object.
				</paragraph>
			<heading>
				<size>2</size>Expanding/Collapsing
			</heading>
			<paragraph>To Expand all of the items displayed in the layout constructor, select 
				<bold>Expand layout tree</bold> from the 
				<bold>View</bold> menu, or select the small cross icon displayed at the top of the tool.
			</paragraph>
			<paragraph>Similarly, if you wish to collapse all of the items in the layout constructor, select 
				<bold>Collapse layout tree</bold> from the 
				<bold>View</bold> menu.
			</paragraph>
		</paragraph>
		<paragraph><heading>
				<size>2</size>Highlighting an Object</heading>An <link><url>../02_notation.xml</url><label>object</label></link> contained in a system may be highlighted in the Layout Constructor by <link><url>../02_notation.xml</url><label>picking</label></link> it, and <link><url>../02_notation.xml</url><label>dropping</label></link> on the  button displayed at the top of the Layout Constructor. Clicking this button with the mouse has no effect. The ability to highlight an object in this fashion proves to be particularly useful when building directly into the <link><url>../60_builder_window/index.xml</url><label>builder window</label></link>, as a particular object may be quickly highlighted in the Layout Constructor, and its properties edited.

</paragraph>
<paragraph><heading>
				<size>2</size>Locked Objects</heading>
</paragraph>
Objects that are instances of other object are displayed as locked objects within the Layout Constructor as illustrated below:
<paragraph>
			<image>
				<url>/images/eiffelbuild/screenshots/layout_constructor_locked.png</url>
			</image>
		</paragraph>
		The object of type OK_CANCEL_BUTTONS is a locked instance of another object as illustrated by the locked icon displayed on top of it's type icon. As a locked object is simply an instance of another object, its internal structure may not be manipulated directly within the Layout Constructor. To change the structure of a locked object, you must directly change the object of which it is an instance.
		<paragraph>
		To add a locked object to your interface, simply pick  the object that you wish to re-use from the <link><url>../64_widget_selector/index.xml</url><label>widget selector</label></link> and drop it into the desired parent object within the Layout Constructor. In this case, the instance of the  OK_CANCEL_BUTTONS object is actually comprised of a number of widgets which may only be modified through  manipulation of the original OK_CANCEL_BUTTONS_OBJECT. Changes made to this original object are then applied to all instances within your interface structures.
		</paragraph>
		<note>
			<bold>Note</bold>: Double clicking on a locked object within the Layout Constructor, targets the object of which it is an instance to the Layout Constructor.
		</note>
<seealso>
				<bold>See Also</bold>
				<line_break/>
				<link>
					<url>/tools/eiffelbuild/reference/60_builder_window/index.xml</url>
					<label>Builder window</label>
				</link>
				<line_break/>
				<link>
					<url>/tools/eiffelbuild/reference/40_object_editor/index.xml</url>
					<label>Object editor</label>
				</link>
				<line_break/>
				<link>
					<url>/tools/eiffelbuild/reference/50_layout_window/index.xml</url>
					<label>Layout window</label>
				</link>
			</seealso>
	</paragraph></document>
