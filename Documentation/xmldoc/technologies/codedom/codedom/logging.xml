<document output="codedom" title="Logging">
	<meta_data/>
	<paragraph>
		The Eiffel CodeDom Provider may be configured (via the 
		<link><label>Eiffel Codedom Provider Manager</label><url>../tools/manager.xml</url></link>) to 
		log information, warnings and/or errors in the Windows Event Log. Logging may be useful for a 
		number of reasons, some of them are:
		
		<list ordered="false">
			<item>
				To detect which CodeDom interface method is called and when it's called. This is 
				 particularly useful when the source code for the CodeDom consumer (e.g. ASP.NET) 
				is not available.
			</item>
			<item>
				To locate the source of a problem when the code generated by the Eiffel 
				CodeDom Provider is incomplete or incorrect. This may happen if the CodeDom 
				tree given to the Eiffel CodeDom Provider uses one of the unsupported constructs 
				as listed in the topic 
				<link><label>Supported Constructs</label><url>supported_constructs.xml</url></link>.
			</item>
			<item>
				To detect a problem in a CodeDom tree. The logs will help in locating the location of the 
				problem as they include contextual information on the node where the error occurred.
			</item>
		</list>

		<heading>
			<size>2</size>
			<content>Log Details</content>
		</heading>

		There are three types of events that can be logged: information events, warnings and errors:
		
		<list ordered="false">
			<item>
				Information events include calls to CodeDom interface methods and other events that will
				 not affect the execution of the Eiffel CodeDom Provider
			</item>
			<item>
				Warnings include events that will not prevent the CodeDom Provider from running but that 
				may affect the results. For example if a CodeDom tree element references a .NET entity that 
				the Eiffel CodeDom Provider cannot find then it will generate a default Eiffel name by running 
				the default formatting algorithm. This may produce code that does not compile if the Eiffel name 
				of the entity does not correspond to the formatted .NET name (for example if the entity is a type and 
				the type's assembly has a non-empty prefix).
			</item>
			<item>
				Errors include events that will force the execution of the Eiffel CodeDom Provider to stop. By default 
				the Eiffel CodeDom Provider simply stops and returns an error, it is possible however to configure it so 
				that an exception is raised.
			</item>
		</list>

		<heading>
			<size>2</size>
			<content>Log Location</content>
		</heading>
		
		All the Eiffel CodeDom Provider events are logged into the Windows <bold>System</bold> Log. This log can be viewed via 
		the Windows administrative tool <italic>Event Viewer</italic>. The source for the events raised by the Eiffel CodeDom 
		Provider is <italic>Eiffel CodeDom Provider</italic>. By default all the events are logged on the machine running the Eiffel 
		CodeDom Provider but it is possible to change its configuration so that the events are logged on a different machine (see 
		<link><label>Required permissions</label><url>required_permissions.xml</url></link>).
	<seealso>
		<bold>See also</bold>: 
		<link>
			<url>../tools/manager.xml</url>
			<label>Eiffel CodeDom Provider Manager</label>
		</link>, 
		<link>
			<url>supported_constructs.xml</url>
			<label>Supported constructs</label>
		</link>, 
		<link>
			<url>required_permissions.xml</url>
			<label>Required permissions</label>
		</link>
	</seealso>
	</paragraph>
</document>
