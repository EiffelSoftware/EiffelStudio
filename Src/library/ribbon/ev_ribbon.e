note
	description: "[
					This class is generated by EiffelRibbon Tool
					Don't modify it manually, since it would be generated again
																					]"
	date: "$Date$"
	revision: "$Revision$"

deferred class
	EV_RIBBON

inherit
	EV_ANY_HANDLER

feature -- Command

	init_with_window (a_window: EV_WINDOW)
			-- Creation method
		local
			l_result: INTEGER
			l_resources: EV_RIBBON_RESOURCES
		do
			if attached {EV_WINDOW_IMP} a_window.implementation as l_imp then
				com_initialize
				l_result := create_ribbon_com_framework (l_imp.wel_item)
				item := get_ribbon_framework
				command_handler := get_command_handler
				create l_resources
				l_resources.ribbon_list.extend (Current)
			end
		end

	set_modes (a_mode: INTEGER)
			-- Set application mode for current ribbon framework
		do
			c_set_modes (a_mode, item)
		end

	destroy
			-- Clean up all ribbon related COM objects and resources
		do
			destroy_ribbon_com_framwork
			com_uninitialize
		end

feature -- Query

	tabs: ARRAYED_LIST [EV_RIBBON_TAB]
			-- All tabs in current tool bar

	height: INTEGER
			-- Get current ribbon height
		do
			get_height ($Result)
		end

	item: POINTER
			-- Ribbon framework object

	command_handler: POINTER
			-- Command handler C object

feature {EV_RIBBON_TITLED_WINDOW_IMP} -- Externals

	com_initialize
			-- Initialize COM
		external
			"C inline use %"Objbase.h%""
		alias
			"[
			{
			
				CoInitialize (0);
			}
			]"
		end

	com_uninitialize
			-- Clean up COM resources
		external
			"C inline use %"Objbase.h%""
		alias
			"[
			{
				CoUninitialize();
			}
			]"
		end

	create_ribbon_com_framework (a_hwnd: POINTER): INTEGER
			-- Create Ribbon framework, attach ribbon to `a_hwnd'
		external
			"C inline use <ribbon.h>"
		alias
			"[
			{
				return InitializeFramework ($a_hwnd);
			}
			]"
		end

	destroy_ribbon_com_framwork
			-- Destroy ribbon framwork
		external
			"C inline use <ribbon.h>"
		alias
			"[
			{
				DestroyRibbon ();
			}
			]"
		end

	get_height (a_height: TYPED_POINTER[INTEGER])
			-- Get ribbon height
		external
			"C inline use <ribbon.h>"
		alias
			"[
			{
				GetRibbonHeight ($a_height);	
			}
			]"
		end

	c_set_modes (a_mode: INTEGER; a_ribbon_framework: POINTER)
			-- Set application mode
		external
			"C inline use <ribbon.h>"
		alias
			"[
			{
				SetModes ($a_mode, $a_ribbon_framework);
			}
			]"
		end

	get_ribbon_framework: POINTER
			-- Get Ribbon framework pointer
		external
			"C inline use <ribbon.h>"
		alias
			"[
			{
				return GetRibbonFramwork ();
			}
			]"
		end

	get_command_handler: POINTER
			-- Get Ribbon command handler C object
		external
			"C inline use <ribbon.h>"
		alias
			"[
			{
				return GetCommandHandler ();
			}
			]"
		end

feature {EV_RIBBON_CHECKBOX} -- Query

	get_UI_Command_Property_Boolean (a_command_id: NATURAL_32; a_proper_variant: POINTER; a_framework: POINTER)
			--
		external
			"C inline use <ribbon.h>"
		alias
			"[
			{
				GetUICommandPropertyBoolean($a_command_id, $a_proper_variant, $a_framework);
			}
			]"
		end
end

