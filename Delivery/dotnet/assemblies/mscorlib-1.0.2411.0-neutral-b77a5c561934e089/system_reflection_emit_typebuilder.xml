<!DOCTYPE type SYSTEM "../type.dtd">
<class>
	<header>
		<modified>False</modified>
		<frozen>True</frozen>
		<expanded>False</expanded>
		<deferred>False</deferred>
		<generic>False</generic>
		<class_eiffel_name>SYSTEM_REFLECTION_EMIT_TYPEBUILDER</class_eiffel_name>
		<alias>
			<simple_name>TypeBuilder</simple_name>
			<namespace>System.Reflection.Emit</namespace>
			<assembly_name>mscorlib</assembly_name>
			<assembly_version>1.0.2411.0</assembly_version>
			<assembly_culture>neutral</assembly_culture>
			<assembly_public_key>b77a5c561934e089</assembly_public_key>
		</alias>
		<inherit>
			<parent>
				<parent_name>SYSTEM_TYPE</parent_name>
				<rename>get_type_handle as get_type_handle_runtime_type_handle</rename>
				<redefine>get_interface_map, is_subclass_of, get_member_string_member_types, get_events, get_reflected_type, get_declaring_type, to_string</redefine>
			</parent>
			<parent>
				<parent_name>SYSTEM_REFLECTION_ICUSTOMATTRIBUTEPROVIDER</parent_name>
				<rename>equals as equals_object</rename>
			</parent>
			<parent>
				<parent_name>SYSTEM_REFLECTION_IREFLECT</parent_name>
				<rename>invoke_member as invoke_member_string_binding_flags_binder_object_array_object_array_parameter_modifier, get_members as get_members_binding_flags, get_member as get_member_string_binding_flags, get_properties as get_properties_binding_flags, get_property as get_property_string_binding_flags, get_fields as get_fields_binding_flags, get_field as get_field_string_binding_flags, get_methods as get_methods_binding_flags, get_method as get_method_string_binding_flags, equals as equals_object</rename>
			</parent>
		</inherit>
		<create_none>True</create_none>
	</header>
	<body>
		<access>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_size</feature_eiffel_name>
				<feature_external_name>get_Size</feature_external_name>
				<return_type>INTEGER</return_type>
				<return_type_full_name>System.Int32</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_assembly</feature_eiffel_name>
				<feature_external_name>get_Assembly</feature_external_name>
				<return_type>SYSTEM_REFLECTION_ASSEMBLY</return_type>
				<return_type_full_name>System.Reflection.Assembly</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_name</feature_eiffel_name>
				<feature_external_name>get_Name</feature_external_name>
				<return_type>STRING</return_type>
				<return_type_full_name>System.String</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_type_handle_runtime_type_handle</feature_eiffel_name>
				<feature_external_name>get_TypeHandle</feature_external_name>
				<return_type>SYSTEM_RUNTIMETYPEHANDLE</return_type>
				<return_type_full_name>System.RuntimeTypeHandle</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_guid</feature_eiffel_name>
				<feature_external_name>get_GUID</feature_external_name>
				<return_type>SYSTEM_GUID</return_type>
				<return_type_full_name>System.Guid</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_base_type</feature_eiffel_name>
				<feature_external_name>get_BaseType</feature_external_name>
				<return_type>SYSTEM_TYPE</return_type>
				<return_type_full_name>System.Type</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_namespace</feature_eiffel_name>
				<feature_external_name>get_Namespace</feature_external_name>
				<return_type>STRING</return_type>
				<return_type_full_name>System.String</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_module</feature_eiffel_name>
				<feature_external_name>get_Module</feature_external_name>
				<return_type>SYSTEM_REFLECTION_MODULE</return_type>
				<return_type_full_name>System.Reflection.Module</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_packing_size</feature_eiffel_name>
				<feature_external_name>get_PackingSize</feature_external_name>
				<return_type>SYSTEM_REFLECTION_EMIT_PACKINGSIZE</return_type>
				<return_type_full_name>System.Reflection.Emit.PackingSize</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_declaring_type</feature_eiffel_name>
				<feature_external_name>get_DeclaringType</feature_external_name>
				<return_type>SYSTEM_TYPE</return_type>
				<return_type_full_name>System.Type</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_assembly_qualified_name</feature_eiffel_name>
				<feature_external_name>get_AssemblyQualifiedName</feature_external_name>
				<return_type>STRING</return_type>
				<return_type_full_name>System.String</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_full_name</feature_eiffel_name>
				<feature_external_name>get_FullName</feature_external_name>
				<return_type>STRING</return_type>
				<return_type_full_name>System.String</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_type_token</feature_eiffel_name>
				<feature_external_name>get_TypeToken</feature_external_name>
				<return_type>SYSTEM_REFLECTION_EMIT_TYPETOKEN</return_type>
				<return_type_full_name>System.Reflection.Emit.TypeToken</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>True</static>
				<abstract>False</abstract>
				<method>False</method>
				<field>True</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>True</is_literal>
				<feature_eiffel_name>unspecified_type_size</feature_eiffel_name>
				<feature_external_name>UnspecifiedTypeSize</feature_external_name>
				<return_type>INTEGER</return_type>
				<return_type_full_name>System.Int32</return_type_full_name>
				<literal_value> 0x0</literal_value>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_underlying_system_type</feature_eiffel_name>
				<feature_external_name>get_UnderlyingSystemType</feature_external_name>
				<return_type>SYSTEM_TYPE</return_type>
				<return_type_full_name>System.Type</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_reflected_type</feature_eiffel_name>
				<feature_external_name>get_ReflectedType</feature_external_name>
				<return_type>SYSTEM_TYPE</return_type>
				<return_type_full_name>System.Type</return_type_full_name>
			</feature>
		</access>
		<basic_operations>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>to_string</feature_eiffel_name>
				<feature_external_name>ToString</feature_external_name>
				<return_type>STRING</return_type>
				<return_type_full_name>System.String</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_nested_type_string_type_attributes</feature_eiffel_name>
				<feature_external_name>DefineNestedType</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attr</argument_eiffel_name>
						<argument_external_name>attr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_TYPEATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.TypeAttributes</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_TYPEBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.TypeBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_declarative_security</feature_eiffel_name>
				<feature_external_name>AddDeclarativeSecurity</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>action</argument_eiffel_name>
						<argument_external_name>action</argument_external_name>
						<argument_type>SYSTEM_SECURITY_PERMISSIONS_SECURITYACTION</argument_type>
						<argument_type_full_name>System.Security.Permissions.SecurityAction</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pset</argument_eiffel_name>
						<argument_external_name>pset</argument_external_name>
						<argument_type>SYSTEM_SECURITY_PERMISSIONSET</argument_type>
						<argument_type_full_name>System.Security.PermissionSet</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_method_override</feature_eiffel_name>
				<feature_external_name>DefineMethodOverride</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>method_info_body</argument_eiffel_name>
						<argument_external_name>methodInfoBody</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_METHODINFO</argument_type>
						<argument_type_full_name>System.Reflection.MethodInfo</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>method_info_declaration</argument_eiffel_name>
						<argument_external_name>methodInfoDeclaration</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_METHODINFO</argument_type>
						<argument_type_full_name>System.Reflection.MethodInfo</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_event</feature_eiffel_name>
				<feature_external_name>DefineEvent</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EVENTATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.EventAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>eventtype</argument_eiffel_name>
						<argument_external_name>eventtype</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_EVENTBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.EventBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_custom_attribute_constructor_info</feature_eiffel_name>
				<feature_external_name>SetCustomAttribute</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>con</argument_eiffel_name>
						<argument_external_name>con</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_CONSTRUCTORINFO</argument_type>
						<argument_type_full_name>System.Reflection.ConstructorInfo</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>binary_attribute</argument_eiffel_name>
						<argument_external_name>binaryAttribute</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_nested_type_string_type_attributes_type_packing_size</feature_eiffel_name>
				<feature_external_name>DefineNestedType</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attr</argument_eiffel_name>
						<argument_external_name>attr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_TYPEATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.TypeAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parent</argument_eiffel_name>
						<argument_external_name>parent</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>pack_size</argument_eiffel_name>
						<argument_external_name>packSize</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_PACKINGSIZE</argument_type>
						<argument_type_full_name>System.Reflection.Emit.PackingSize</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_TYPEBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.TypeBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_subclass_of</feature_eiffel_name>
				<feature_external_name>IsSubclassOf</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>c</argument_eiffel_name>
						<argument_external_name>c</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_constructors_binding_flags</feature_eiffel_name>
				<feature_external_name>GetConstructors</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>binding_attr</argument_eiffel_name>
						<argument_external_name>bindingAttr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDINGFLAGS</argument_type>
						<argument_type_full_name>System.Reflection.BindingFlags</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>ARRAY [SYSTEM_REFLECTION_CONSTRUCTORINFO]</return_type>
				<return_type_full_name>System.Reflection.ConstructorInfo[]</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_methods_binding_flags</feature_eiffel_name>
				<feature_external_name>GetMethods</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>binding_attr</argument_eiffel_name>
						<argument_external_name>bindingAttr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDINGFLAGS</argument_type>
						<argument_type_full_name>System.Reflection.BindingFlags</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>ARRAY [SYSTEM_REFLECTION_METHODINFO]</return_type>
				<return_type_full_name>System.Reflection.MethodInfo[]</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>add_interface_implementation</feature_eiffel_name>
				<feature_external_name>AddInterfaceImplementation</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>interface_type</argument_eiffel_name>
						<argument_external_name>interfaceType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_nested_type_string_type_attributes_type_array_type</feature_eiffel_name>
				<feature_external_name>DefineNestedType</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attr</argument_eiffel_name>
						<argument_external_name>attr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_TYPEATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.TypeAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parent</argument_eiffel_name>
						<argument_external_name>parent</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>interfaces</argument_eiffel_name>
						<argument_external_name>interfaces</argument_external_name>
						<argument_type>ARRAY [SYSTEM_TYPE]</argument_type>
						<argument_type_full_name>System.Type[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_TYPEBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.TypeBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_nested_types_binding_flags</feature_eiffel_name>
				<feature_external_name>GetNestedTypes</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>binding_attr</argument_eiffel_name>
						<argument_external_name>bindingAttr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDINGFLAGS</argument_type>
						<argument_type_full_name>System.Reflection.BindingFlags</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>ARRAY [SYSTEM_TYPE]</return_type>
				<return_type_full_name>System.Type[]</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_events</feature_eiffel_name>
				<feature_external_name>GetEvents</feature_external_name>
				<return_type>ARRAY [SYSTEM_REFLECTION_EVENTINFO]</return_type>
				<return_type_full_name>System.Reflection.EventInfo[]</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_custom_attribute</feature_eiffel_name>
				<feature_external_name>SetCustomAttribute</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>custom_builder</argument_eiffel_name>
						<argument_external_name>customBuilder</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_EMIT_CUSTOMATTRIBUTEBUILDER</argument_type>
						<argument_type_full_name>System.Reflection.Emit.CustomAttributeBuilder</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_custom_attributes</feature_eiffel_name>
				<feature_external_name>GetCustomAttributes</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>inherit_</argument_eiffel_name>
						<argument_external_name>inherit</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>ARRAY [ANY]</return_type>
				<return_type_full_name>System.Object[]</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>create_type</feature_eiffel_name>
				<feature_external_name>CreateType</feature_external_name>
				<return_type>SYSTEM_TYPE</return_type>
				<return_type_full_name>System.Type</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_field_string_binding_flags</feature_eiffel_name>
				<feature_external_name>GetField</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>binding_attr</argument_eiffel_name>
						<argument_external_name>bindingAttr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDINGFLAGS</argument_type>
						<argument_type_full_name>System.Reflection.BindingFlags</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_FIELDINFO</return_type>
				<return_type_full_name>System.Reflection.FieldInfo</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_events_binding_flags</feature_eiffel_name>
				<feature_external_name>GetEvents</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>binding_attr</argument_eiffel_name>
						<argument_external_name>bindingAttr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDINGFLAGS</argument_type>
						<argument_type_full_name>System.Reflection.BindingFlags</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>ARRAY [SYSTEM_REFLECTION_EVENTINFO]</return_type>
				<return_type_full_name>System.Reflection.EventInfo[]</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_type_initializer</feature_eiffel_name>
				<feature_external_name>DefineTypeInitializer</feature_external_name>
				<return_type>SYSTEM_REFLECTION_EMIT_CONSTRUCTORBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.ConstructorBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>invoke_member_string_binding_flags_binder_object_array_object_array_parameter_modifier</feature_eiffel_name>
				<feature_external_name>InvokeMember</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>invoke_attr</argument_eiffel_name>
						<argument_external_name>invokeAttr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDINGFLAGS</argument_type>
						<argument_type_full_name>System.Reflection.BindingFlags</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>binder</argument_eiffel_name>
						<argument_external_name>binder</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDER</argument_type>
						<argument_type_full_name>System.Reflection.Binder</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>target</argument_eiffel_name>
						<argument_external_name>target</argument_external_name>
						<argument_type>ANY</argument_type>
						<argument_type_full_name>System.Object</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>args</argument_eiffel_name>
						<argument_external_name>args</argument_external_name>
						<argument_type>ARRAY [ANY]</argument_type>
						<argument_type_full_name>System.Object[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>modifiers</argument_eiffel_name>
						<argument_external_name>modifiers</argument_external_name>
						<argument_type>ARRAY [SYSTEM_REFLECTION_PARAMETERMODIFIER]</argument_type>
						<argument_type_full_name>System.Reflection.ParameterModifier[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>culture</argument_eiffel_name>
						<argument_external_name>culture</argument_external_name>
						<argument_type>SYSTEM_GLOBALIZATION_CULTUREINFO</argument_type>
						<argument_type_full_name>System.Globalization.CultureInfo</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>named_parameters</argument_eiffel_name>
						<argument_external_name>namedParameters</argument_external_name>
						<argument_type>ARRAY [STRING]</argument_type>
						<argument_type_full_name>System.String[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>ANY</return_type>
				<return_type_full_name>System.Object</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_interface_string_boolean</feature_eiffel_name>
				<feature_external_name>GetInterface</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>ignore_case</argument_eiffel_name>
						<argument_external_name>ignoreCase</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_TYPE</return_type>
				<return_type_full_name>System.Type</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_fields_binding_flags</feature_eiffel_name>
				<feature_external_name>GetFields</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>binding_attr</argument_eiffel_name>
						<argument_external_name>bindingAttr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDINGFLAGS</argument_type>
						<argument_type_full_name>System.Reflection.BindingFlags</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>ARRAY [SYSTEM_REFLECTION_FIELDINFO]</return_type>
				<return_type_full_name>System.Reflection.FieldInfo[]</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>set_parent</feature_eiffel_name>
				<feature_external_name>SetParent</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>parent</argument_eiffel_name>
						<argument_external_name>parent</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
				</arguments>
				<return_type />
				<return_type_full_name>System.Void</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_uninitialized_data</feature_eiffel_name>
				<feature_external_name>DefineUninitializedData</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>size</argument_eiffel_name>
						<argument_external_name>size</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_FIELDATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.FieldAttributes</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_FIELDBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.FieldBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_nested_type</feature_eiffel_name>
				<feature_external_name>DefineNestedType</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_TYPEBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.TypeBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_constructor</feature_eiffel_name>
				<feature_external_name>DefineConstructor</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_METHODATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.MethodAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>calling_convention</argument_eiffel_name>
						<argument_external_name>callingConvention</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_CALLINGCONVENTIONS</argument_type>
						<argument_type_full_name>System.Reflection.CallingConventions</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parameter_types</argument_eiffel_name>
						<argument_external_name>parameterTypes</argument_external_name>
						<argument_type>ARRAY [SYSTEM_TYPE]</argument_type>
						<argument_type_full_name>System.Type[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_CONSTRUCTORBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.ConstructorBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_nested_type_string_type_attributes_type_int32</feature_eiffel_name>
				<feature_external_name>DefineNestedType</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attr</argument_eiffel_name>
						<argument_external_name>attr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_TYPEATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.TypeAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parent</argument_eiffel_name>
						<argument_external_name>parent</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>type_size</argument_eiffel_name>
						<argument_external_name>typeSize</argument_external_name>
						<argument_type>INTEGER</argument_type>
						<argument_type_full_name>System.Int32</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_TYPEBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.TypeBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_element_type</feature_eiffel_name>
				<feature_external_name>GetElementType</feature_external_name>
				<return_type>SYSTEM_TYPE</return_type>
				<return_type_full_name>System.Type</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_initialized_data</feature_eiffel_name>
				<feature_external_name>DefineInitializedData</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>data</argument_eiffel_name>
						<argument_external_name>data</argument_external_name>
						<argument_type>ARRAY [INTEGER_8]</argument_type>
						<argument_type_full_name>System.Byte[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_FIELDATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.FieldAttributes</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_FIELDBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.FieldBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_field</feature_eiffel_name>
				<feature_external_name>DefineField</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>field_name</argument_eiffel_name>
						<argument_external_name>fieldName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>type</argument_eiffel_name>
						<argument_external_name>type</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_FIELDATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.FieldAttributes</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_FIELDBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.FieldBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_event_string_binding_flags</feature_eiffel_name>
				<feature_external_name>GetEvent</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>binding_attr</argument_eiffel_name>
						<argument_external_name>bindingAttr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDINGFLAGS</argument_type>
						<argument_type_full_name>System.Reflection.BindingFlags</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EVENTINFO</return_type>
				<return_type_full_name>System.Reflection.EventInfo</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_pinvoke_method_string_string_string</feature_eiffel_name>
				<feature_external_name>DefinePInvokeMethod</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>dll_name</argument_eiffel_name>
						<argument_external_name>dllName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>entry_name</argument_eiffel_name>
						<argument_external_name>entryName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_METHODATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.MethodAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>calling_convention</argument_eiffel_name>
						<argument_external_name>callingConvention</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_CALLINGCONVENTIONS</argument_type>
						<argument_type_full_name>System.Reflection.CallingConventions</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>return_type</argument_eiffel_name>
						<argument_external_name>returnType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parameter_types</argument_eiffel_name>
						<argument_external_name>parameterTypes</argument_external_name>
						<argument_type>ARRAY [SYSTEM_TYPE]</argument_type>
						<argument_type_full_name>System.Type[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>native_call_conv</argument_eiffel_name>
						<argument_external_name>nativeCallConv</argument_external_name>
						<argument_type>SYSTEM_RUNTIME_INTEROPSERVICES_CALLINGCONVENTION</argument_type>
						<argument_type_full_name>System.Runtime.InteropServices.CallingConvention</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>native_char_set</argument_eiffel_name>
						<argument_external_name>nativeCharSet</argument_external_name>
						<argument_type>SYSTEM_RUNTIME_INTEROPSERVICES_CHARSET</argument_type>
						<argument_type_full_name>System.Runtime.InteropServices.CharSet</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_METHODBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.MethodBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_default_constructor</feature_eiffel_name>
				<feature_external_name>DefineDefaultConstructor</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_METHODATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.MethodAttributes</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_CONSTRUCTORBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.ConstructorBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_custom_attributes_type</feature_eiffel_name>
				<feature_external_name>GetCustomAttributes</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>attribute_type</argument_eiffel_name>
						<argument_external_name>attributeType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>inherit_</argument_eiffel_name>
						<argument_external_name>inherit</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>ARRAY [ANY]</return_type>
				<return_type_full_name>System.Object[]</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_interfaces</feature_eiffel_name>
				<feature_external_name>GetInterfaces</feature_external_name>
				<return_type>ARRAY [SYSTEM_TYPE]</return_type>
				<return_type_full_name>System.Type[]</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_members_binding_flags</feature_eiffel_name>
				<feature_external_name>GetMembers</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>binding_attr</argument_eiffel_name>
						<argument_external_name>bindingAttr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDINGFLAGS</argument_type>
						<argument_type_full_name>System.Reflection.BindingFlags</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>ARRAY [SYSTEM_REFLECTION_MEMBERINFO]</return_type>
				<return_type_full_name>System.Reflection.MemberInfo[]</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_property</feature_eiffel_name>
				<feature_external_name>DefineProperty</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_PROPERTYATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.PropertyAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>return_type</argument_eiffel_name>
						<argument_external_name>returnType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parameter_types</argument_eiffel_name>
						<argument_external_name>parameterTypes</argument_external_name>
						<argument_type>ARRAY [SYSTEM_TYPE]</argument_type>
						<argument_type_full_name>System.Type[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_PROPERTYBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.PropertyBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_interface_map</feature_eiffel_name>
				<feature_external_name>GetInterfaceMap</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>interface_type</argument_eiffel_name>
						<argument_external_name>interfaceType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_INTERFACEMAPPING</return_type>
				<return_type_full_name>System.Reflection.InterfaceMapping</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_nested_type_string_type_attributes_type</feature_eiffel_name>
				<feature_external_name>DefineNestedType</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attr</argument_eiffel_name>
						<argument_external_name>attr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_TYPEATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.TypeAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parent</argument_eiffel_name>
						<argument_external_name>parent</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_TYPEBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.TypeBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_properties_binding_flags</feature_eiffel_name>
				<feature_external_name>GetProperties</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>binding_attr</argument_eiffel_name>
						<argument_external_name>bindingAttr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDINGFLAGS</argument_type>
						<argument_type_full_name>System.Reflection.BindingFlags</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>ARRAY [SYSTEM_REFLECTION_PROPERTYINFO]</return_type>
				<return_type_full_name>System.Reflection.PropertyInfo[]</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_pinvoke_method</feature_eiffel_name>
				<feature_external_name>DefinePInvokeMethod</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>dll_name</argument_eiffel_name>
						<argument_external_name>dllName</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_METHODATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.MethodAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>calling_convention</argument_eiffel_name>
						<argument_external_name>callingConvention</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_CALLINGCONVENTIONS</argument_type>
						<argument_type_full_name>System.Reflection.CallingConventions</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>return_type</argument_eiffel_name>
						<argument_external_name>returnType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parameter_types</argument_eiffel_name>
						<argument_external_name>parameterTypes</argument_external_name>
						<argument_type>ARRAY [SYSTEM_TYPE]</argument_type>
						<argument_type_full_name>System.Type[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>native_call_conv</argument_eiffel_name>
						<argument_external_name>nativeCallConv</argument_external_name>
						<argument_type>SYSTEM_RUNTIME_INTEROPSERVICES_CALLINGCONVENTION</argument_type>
						<argument_type_full_name>System.Runtime.InteropServices.CallingConvention</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>native_char_set</argument_eiffel_name>
						<argument_external_name>nativeCharSet</argument_external_name>
						<argument_type>SYSTEM_RUNTIME_INTEROPSERVICES_CHARSET</argument_type>
						<argument_type_full_name>System.Runtime.InteropServices.CharSet</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_METHODBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.MethodBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_defined</feature_eiffel_name>
				<feature_external_name>IsDefined</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>attribute_type</argument_eiffel_name>
						<argument_external_name>attributeType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>inherit_</argument_eiffel_name>
						<argument_external_name>inherit</argument_external_name>
						<argument_type>BOOLEAN</argument_type>
						<argument_type_full_name>System.Boolean</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_member_string_member_types</feature_eiffel_name>
				<feature_external_name>GetMember</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>type</argument_eiffel_name>
						<argument_external_name>type</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_MEMBERTYPES</argument_type>
						<argument_type_full_name>System.Reflection.MemberTypes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>binding_attr</argument_eiffel_name>
						<argument_external_name>bindingAttr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDINGFLAGS</argument_type>
						<argument_type_full_name>System.Reflection.BindingFlags</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>ARRAY [SYSTEM_REFLECTION_MEMBERINFO]</return_type>
				<return_type_full_name>System.Reflection.MemberInfo[]</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_method_string_method_attributes_calling_conventions</feature_eiffel_name>
				<feature_external_name>DefineMethod</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_METHODATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.MethodAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>calling_convention</argument_eiffel_name>
						<argument_external_name>callingConvention</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_CALLINGCONVENTIONS</argument_type>
						<argument_type_full_name>System.Reflection.CallingConventions</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>return_type</argument_eiffel_name>
						<argument_external_name>returnType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parameter_types</argument_eiffel_name>
						<argument_external_name>parameterTypes</argument_external_name>
						<argument_type>ARRAY [SYSTEM_TYPE]</argument_type>
						<argument_type_full_name>System.Type[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_METHODBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.MethodBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>True</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>True</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>define_method</feature_eiffel_name>
				<feature_external_name>DefineMethod</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>attributes</argument_eiffel_name>
						<argument_external_name>attributes</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_METHODATTRIBUTES</argument_type>
						<argument_type_full_name>System.Reflection.MethodAttributes</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>return_type</argument_eiffel_name>
						<argument_external_name>returnType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>parameter_types</argument_eiffel_name>
						<argument_external_name>parameterTypes</argument_external_name>
						<argument_type>ARRAY [SYSTEM_TYPE]</argument_type>
						<argument_type_full_name>System.Type[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_EMIT_METHODBUILDER</return_type>
				<return_type_full_name>System.Reflection.Emit.MethodBuilder</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_nested_type_string_binding_flags</feature_eiffel_name>
				<feature_external_name>GetNestedType</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>binding_attr</argument_eiffel_name>
						<argument_external_name>bindingAttr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDINGFLAGS</argument_type>
						<argument_type_full_name>System.Reflection.BindingFlags</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_TYPE</return_type>
				<return_type_full_name>System.Type</return_type_full_name>
			</feature>
		</basic_operations>
		<implementation>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_property_impl</feature_eiffel_name>
				<feature_external_name>GetPropertyImpl</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>binding_attr</argument_eiffel_name>
						<argument_external_name>bindingAttr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDINGFLAGS</argument_type>
						<argument_type_full_name>System.Reflection.BindingFlags</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>binder</argument_eiffel_name>
						<argument_external_name>binder</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDER</argument_type>
						<argument_type_full_name>System.Reflection.Binder</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>return_type</argument_eiffel_name>
						<argument_external_name>returnType</argument_external_name>
						<argument_type>SYSTEM_TYPE</argument_type>
						<argument_type_full_name>System.Type</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>types</argument_eiffel_name>
						<argument_external_name>types</argument_external_name>
						<argument_type>ARRAY [SYSTEM_TYPE]</argument_type>
						<argument_type_full_name>System.Type[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>modifiers</argument_eiffel_name>
						<argument_external_name>modifiers</argument_external_name>
						<argument_type>ARRAY [SYSTEM_REFLECTION_PARAMETERMODIFIER]</argument_type>
						<argument_type_full_name>System.Reflection.ParameterModifier[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_PROPERTYINFO</return_type>
				<return_type_full_name>System.Reflection.PropertyInfo</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_attribute_flags_impl</feature_eiffel_name>
				<feature_external_name>GetAttributeFlagsImpl</feature_external_name>
				<return_type>SYSTEM_REFLECTION_TYPEATTRIBUTES</return_type>
				<return_type_full_name>System.Reflection.TypeAttributes</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_array_impl</feature_eiffel_name>
				<feature_external_name>IsArrayImpl</feature_external_name>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_method_impl</feature_eiffel_name>
				<feature_external_name>GetMethodImpl</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>name</argument_eiffel_name>
						<argument_external_name>name</argument_external_name>
						<argument_type>STRING</argument_type>
						<argument_type_full_name>System.String</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>binding_attr</argument_eiffel_name>
						<argument_external_name>bindingAttr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDINGFLAGS</argument_type>
						<argument_type_full_name>System.Reflection.BindingFlags</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>binder</argument_eiffel_name>
						<argument_external_name>binder</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDER</argument_type>
						<argument_type_full_name>System.Reflection.Binder</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>call_convention</argument_eiffel_name>
						<argument_external_name>callConvention</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_CALLINGCONVENTIONS</argument_type>
						<argument_type_full_name>System.Reflection.CallingConventions</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>types</argument_eiffel_name>
						<argument_external_name>types</argument_external_name>
						<argument_type>ARRAY [SYSTEM_TYPE]</argument_type>
						<argument_type_full_name>System.Type[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>modifiers</argument_eiffel_name>
						<argument_external_name>modifiers</argument_external_name>
						<argument_type>ARRAY [SYSTEM_REFLECTION_PARAMETERMODIFIER]</argument_type>
						<argument_type_full_name>System.Reflection.ParameterModifier[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_METHODINFO</return_type>
				<return_type_full_name>System.Reflection.MethodInfo</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_comobject_impl</feature_eiffel_name>
				<feature_external_name>IsCOMObjectImpl</feature_external_name>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_primitive_impl</feature_eiffel_name>
				<feature_external_name>IsPrimitiveImpl</feature_external_name>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_pointer_impl</feature_eiffel_name>
				<feature_external_name>IsPointerImpl</feature_external_name>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>get_constructor_impl</feature_eiffel_name>
				<feature_external_name>GetConstructorImpl</feature_external_name>
				<arguments>
					<argument>
						<argument_eiffel_name>binding_attr</argument_eiffel_name>
						<argument_external_name>bindingAttr</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDINGFLAGS</argument_type>
						<argument_type_full_name>System.Reflection.BindingFlags</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>binder</argument_eiffel_name>
						<argument_external_name>binder</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_BINDER</argument_type>
						<argument_type_full_name>System.Reflection.Binder</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>call_convention</argument_eiffel_name>
						<argument_external_name>callConvention</argument_external_name>
						<argument_type>SYSTEM_REFLECTION_CALLINGCONVENTIONS</argument_type>
						<argument_type_full_name>System.Reflection.CallingConventions</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>types</argument_eiffel_name>
						<argument_external_name>types</argument_external_name>
						<argument_type>ARRAY [SYSTEM_TYPE]</argument_type>
						<argument_type_full_name>System.Type[]</argument_type_full_name>
					</argument>
					<argument>
						<argument_eiffel_name>modifiers</argument_eiffel_name>
						<argument_external_name>modifiers</argument_external_name>
						<argument_type>ARRAY [SYSTEM_REFLECTION_PARAMETERMODIFIER]</argument_type>
						<argument_type_full_name>System.Reflection.ParameterModifier[]</argument_type_full_name>
					</argument>
				</arguments>
				<return_type>SYSTEM_REFLECTION_CONSTRUCTORINFO</return_type>
				<return_type_full_name>System.Reflection.ConstructorInfo</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>is_by_ref_impl</feature_eiffel_name>
				<feature_external_name>IsByRefImpl</feature_external_name>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
			<feature>
				<feature_modified>False</feature_modified>
				<frozen_feature>False</frozen_feature>
				<static>False</static>
				<abstract>False</abstract>
				<method>True</method>
				<field>False</field>
				<creation_routine>False</creation_routine>
				<prefix>False</prefix>
				<infix>False</infix>
				<new_slot>False</new_slot>
				<enum_literal>False</enum_literal>
				<is_literal>False</is_literal>
				<feature_eiffel_name>has_element_type_impl</feature_eiffel_name>
				<feature_external_name>HasElementTypeImpl</feature_external_name>
				<return_type>BOOLEAN</return_type>
				<return_type_full_name>System.Boolean</return_type_full_name>
			</feature>
		</implementation>
		<bit_or_infix>False</bit_or_infix>
	</body>
</class>