indexing
	description: "Objects that represent a title bar on SD_FLOATING_MENU_ZONE.%
		%The original version of this class was generated by EiffelBuild."
	date: "$Date$"
	revision: "$Revision$"

class
	SD_MENU_TITLE_BAR

inherit
	SD_MENU_TITLE_BAR_IMP
		export
			{NONE} all
			{ANY} drawing_area
		end

feature {NONE} -- Initialization

	user_initialization is
			-- Called by `initialize'.
			-- Any custom user initialization that
			-- could not be performed in `initialize',
			-- (due to regeneration of implementation class)
			-- can be added here.
		local
			l_shared: SD_SHARED
			l_font: EV_FONT
		do
			create l_shared
			tool_bar.set_background_color (l_shared.menu_title_bar_color)
			l_font := drawing_area.font
			l_font.set_weight ({EV_FONT_CONSTANTS}.Weight_bold)
			drawing_area.set_font (l_font)

			drawing_area.expose_actions.extend (agent on_drawing_area_expose)
		end

feature -- Command

	set_content (a_content: SD_MENU_CONTENT) is
			-- Set `content'.
		require
			not_void: a_content /= Void
		do
			content := a_content
		ensure
			set: content = a_content
		end

feature -- Query

	content: SD_MENU_CONTENT
			-- Content which title is showing.

feature {NONE} -- Implementation

	on_drawing_area_expose (a_x: INTEGER; a_y: INTEGER; a_width: INTEGER; a_height: INTEGER) is
			-- Handle `drawing_area' expose actions.
		local
			l_shared: SD_SHARED
		do
			create l_shared
			drawing_area.set_foreground_color (l_shared.menu_title_bar_color)
			drawing_area.fill_rectangle (0, 0, drawing_area.width, drawing_area.height)

			drawing_area.set_foreground_color ((create {EV_STOCK_COLORS}).white)
			if content /= Void then
				drawing_area.draw_ellipsed_text_top_left (2, 1, content.title, drawing_area.width)
			end
		end

end -- class SD_MENU_TITLE_BAR

